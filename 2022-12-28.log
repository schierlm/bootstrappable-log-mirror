<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-12-28.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001915"><span class="nick" style="color:#389600"><a href="#001915" label="[00:19:15]">&lt;oriansj&gt;</a></span><span class="message">oh these double frees are going to be difficult to untangle</span></div><div class="line" id="003637"><span class="nick" style="color:#8dd3c7"><a href="#003637" label="[00:36:37]">&lt;stikonas[m]&gt;</a></span><span class="message">In unbz2?</span></div><div class="line" id="004837"><span class="nick" style="color:#389600"><a href="#004837" label="[00:48:37]">&lt;oriansj&gt;</a></span><span class="message">it does lots of fun pointer things</span></div><div class="line" id="005033"><span class="nick" style="color:#389600"><a href="#005033" label="[00:50:33]">&lt;oriansj&gt;</a></span><span class="message">but I think I have cleared out the first batch of them</span></div><div class="line" id="005046"><span class="nick" style="color:#389600"><a href="#005046" label="[00:50:46]">&lt;oriansj&gt;</a></span><span class="message">and it is still able to successfully unpack itself</span></div><div class="line" id="005252"><span class="nick" style="color:#2e2a4a"><a href="#005252" label="[00:52:52]">&lt;stikonas&gt;</a></span><span class="message">well, we also need to unpack tcc and make</span></div><div class="line" id="005302"><span class="nick" style="color:#2e2a4a"><a href="#005302" label="[00:53:02]">&lt;stikonas&gt;</a></span><span class="message">make is optional as it also provides tar.gz</span></div><div class="line" id="012014"><span class="nick" style="color:#389600"><a href="#012014" label="[01:20:14]">&lt;oriansj&gt;</a></span><span class="message">stikonas: very true and it is quite unlikely for my requires to break that but if I do, I can certainly fix that</span></div><div class="line" id="012100"><span class="nick" style="color:#2e2a4a"><a href="#012100" label="[01:21:00]">&lt;stikonas&gt;</a></span><span class="message">well, I doubt that you'll break them, just thought to mention for testing purposes which live-bootstrap packages use it now</span></div><div class="line" id="012301"><span class="nick" style="color:#389600"><a href="#012301" label="[01:23:01]">&lt;oriansj&gt;</a></span><span class="message">thank you for clarifying ^_^</span></div><div class="line" id="012319"><span class="nick" style="color:#389600"><a href="#012319" label="[01:23:19]">&lt;oriansj&gt;</a></span><span class="message">and the first fuzzing patch is up</span></div><div class="line" id="012343"><span class="nick" style="color:#389600"><a href="#012343" label="[01:23:43]">&lt;oriansj&gt;</a></span><span class="message">and starting second round of fuzzing</span></div><div class="line" id="012405"><span class="nick" style="color:#389600"><a href="#012405" label="[01:24:05]">&lt;oriansj&gt;</a></span><span class="message">(2 minutes, no results. A much better start)</span></div><div class="line" id="012549"><span class="nick" style="color:#2e2a4a"><a href="#012549" label="[01:25:49]">&lt;stikonas&gt;</a></span><span class="message">well, quite a few fixes in your patch</span></div><div class="line" id="012723"><span class="nick" style="color:#389600"><a href="#012723" label="[01:27:23]">&lt;oriansj&gt;</a></span><span class="message">and it looks like I forgot to expand the logic for if it is missing -o options</span></div><div class="line" id="012853"><span class="nick" style="color:#389600"><a href="#012853" label="[01:28:53]">&lt;oriansj&gt;</a></span><span class="message">I was thinking of using input file name minus the .bz2 at the end to be the default output filename; unless anyone can think of a better idea</span></div><div class="line" id="012944"><span class="nick" style="color:#389600"><a href="#012944" label="[01:29:44]">&lt;oriansj&gt;</a></span><span class="message">(and bail if the filename is something like &quot;a&quot; or &quot;.bz2&quot;)</span></div><div class="line" id="013047"><span class="nick" style="color:#389600"><a href="#013047" label="[01:30:47]">&lt;oriansj&gt;</a></span><span class="message">8 minutes, no crashes but 3 timeouts</span></div><div class="line" id="013142"><span class="nick" style="color:#2e2a4a"><a href="#013142" label="[01:31:42]">&lt;stikonas&gt;</a></span><span class="message">that's fine, usually name without .bz2 is what we want</span></div><div class="line" id="013158"><span class="nick" style="color:#2e2a4a"><a href="#013158" label="[01:31:58]">&lt;stikonas&gt;</a></span><span class="message">though -o might still be useful to put result in another directory</span></div><div class="line" id="013246"><span class="nick" style="color:#389600"><a href="#013246" label="[01:32:46]">&lt;oriansj&gt;</a></span><span class="message">well yes, that seemed the reasonable approximate behavior I assumed people would be wanting</span></div><div class="line" id="023308"><span class="nick" style="color:#389600"><a href="#023308" label="[02:33:08]">&lt;oriansj&gt;</a></span><span class="message">1 hour no crashes, I call that good progress for my first fuzzing/correcting cycle</span></div><div class="line" id="181626"><span class="nick" style="color:#2e2a4a"><a href="#181626" label="[18:16:26]">&lt;stikonas&gt;</a></span><span class="message">hmm, something is seriously wrong with memory allocation in M2-Mesoplanet</span></div><div class="line" id="181813"><span class="nick" style="color:#2e2a4a"><a href="#181813" label="[18:18:13]">&lt;stikonas&gt;</a></span><span class="message">so on amd64 (where we get segfault) I can see that blk-&gt;size is 0 but blk-&gt;size on x86 is about 7000</span></div><div class="line" id="181847"><span class="nick" style="color:#2e2a4a"><a href="#181847" label="[18:18:47]">&lt;stikonas&gt;</a></span><span class="message">this is on <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/stdlib.c#L144">https://github.com/oriansj/M2libc/blob/main/stdlib.c#L144</a> </span></div><div class="line" id="182414"><span class="nick" style="color:#2e2a4a"><a href="#182414" label="[18:24:14]">&lt;stikonas&gt;</a></span><span class="message">I suspect some previous calloc overwrites it...</span></div><div class="line" id="183549"><span class="nick" style="color:#389600"><a href="#183549" label="[18:35:49]">&lt;oriansj&gt;</a></span><span class="message">possibly</span></div><div class="line" id="185853"><span class="nick" style="color:#389600"><a href="#185853" label="[18:58:53]">&lt;oriansj&gt;</a></span><span class="message">I guess fixing the memory allocation in M2libc is my next problem after I finish getting unbz rock solid</span></div><div class="line" id="191202"><span class="nick" style="color:#2e2a4a"><a href="#191202" label="[19:12:02]">&lt;stikonas&gt;</a></span><span class="message">possibly... I'll try to see if I can find the issue beforehand</span></div><div class="line" id="191219"><span class="nick" style="color:#2e2a4a"><a href="#191219" label="[19:12:19]">&lt;stikonas&gt;</a></span><span class="message">but if not, help would be appreciated</span></div><div class="line" id="202202"><span class="nick" style="color:#2e2a4a"><a href="#202202" label="[20:22:02]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I've added getcwd implementation on UEFI, so now pwd works in kaem: <a rel="nofollow" href="https://github.com/oriansj/M2libc/pull/37">https://github.com/oriansj/M2libc/pull/37</a> </span></div><div class="line" id="204734"><span class="nick" style="color:#6b8072"><a href="#204734" label="[20:47:34]">&lt;Hagfish_&gt;</a></span><span class="message">nice!</span></div><div class="line" id="224408"><span class="nick" style="color:#389600"><a href="#224408" label="[22:44:08]">&lt;oriansj&gt;</a></span><span class="message">stikonas: neat ^_^</span></div><div class="line" id="224518"><span class="nick" style="color:#389600"><a href="#224518" label="[22:45:18]">&lt;oriansj&gt;</a></span><span class="message">and merged</span></div><div class="line" id="224625"><span class="nick" style="color:#2e2a4a"><a href="#224625" label="[22:46:25]">&lt;stikonas&gt;</a></span><span class="message">thanks</span></div><div class="line" id="225706"><span class="nick" style="color:#2e2a4a"><a href="#225706" label="[22:57:06]">&lt;stikonas&gt;</a></span><span class="message">so there are still 2 calls not ported to UEFI: fchdir (which does not seem to be used anywhere except for 1 M2-Planet test) and unlink</span></div><div class="line" id="225751"><span class="nick" style="color:#2e2a4a"><a href="#225751" label="[22:57:51]">&lt;stikonas&gt;</a></span><span class="message">(which was added recently for rm functionality)</span></div><div class="line" id="225809"><span class="nick" style="color:#2e2a4a"><a href="#225809" label="[22:58:09]">&lt;stikonas&gt;</a></span><span class="message">and then I still need to sort out M2-Mesoplanet stuff</span></div><div class="line" id="225821"><span class="nick" style="color:#2e2a4a"><a href="#225821" label="[22:58:21]">&lt;stikonas&gt;</a></span><span class="message">including #includes, so that it can find what it needs to include</span></div><div class="line" id="230204"><span class="nick" style="color:#6b8072"><a href="#230204" label="[23:02:04]">&lt;Hagfish_&gt;</a></span><span class="message">is it tempting to skip the 2 calls, if they're not needed / can be worked around?</span></div><div class="line" id="230308"><span class="nick" style="color:#2e2a4a"><a href="#230308" label="[23:03:08]">&lt;stikonas&gt;</a></span><span class="message">well, unlink is needed for rm to work</span></div><div class="line" id="230321"><span class="nick" style="color:#2e2a4a"><a href="#230321" label="[23:03:21]">&lt;stikonas&gt;</a></span><span class="message">fchdir is not, but it shouldn't be too hard to implement</span></div><div class="line" id="230340"><span class="nick" style="color:#6b8072"><a href="#230340" label="[23:03:40]">&lt;Hagfish_&gt;</a></span><span class="message">if rm is a no-op, what would break?</span></div><div class="line" id="230341"><span class="nick" style="color:#2e2a4a"><a href="#230341" label="[23:03:41]">&lt;stikonas&gt;</a></span><span class="message">at this point the hardest bit is to figure out why &quot;M2-Mesoplanet --version&quot; segfaults</span></div><div class="line" id="230355"><span class="nick" style="color:#6b8072"><a href="#230355" label="[23:03:55]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, that does sound harder</span></div><div class="line" id="230358"><span class="nick" style="color:#2e2a4a"><a href="#230358" label="[23:03:58]">&lt;stikonas&gt;</a></span><span class="message">Hagfish_: well, in principle nothing should break</span></div><div class="line" id="230413"><span class="nick" style="color:#2e2a4a"><a href="#230413" label="[23:04:13]">&lt;stikonas&gt;</a></span><span class="message">but implementation is probably a few lines</span></div><div class="line" id="230431"><span class="nick" style="color:#6b8072"><a href="#230431" label="[23:04:31]">&lt;Hagfish_&gt;</a></span><span class="message">oh, okay, it's probably nicer to just get it out of the way</span></div><div class="line" id="230540"><span class="nick" style="color:#6b8072"><a href="#230540" label="[23:05:40]">&lt;Hagfish_&gt;</a></span><span class="message">i mean implemented properly, rather than leaving loose ends</span></div><div class="line" id="232548"><span class="nick" style="color:#389600"><a href="#232548" label="[23:25:48]">&lt;oriansj&gt;</a></span><span class="message">well memory management bugs are by definition the hardest class of bugs in existence.</span></div><div class="line" id="232617"><span class="nick" style="color:#389600"><a href="#232617" label="[23:26:17]">&lt;oriansj&gt;</a></span><span class="message">like 98% of the complexity in rust's compiler is just trying to deal with memory bugs</span></div><div class="line" id="232811"><span class="nick" style="color:#6b8072"><a href="#232811" label="[23:28:11]">&lt;Hagfish_&gt;</a></span><span class="message">i thought race conditions are the hardest.  although i guess you can avoid them by running a single thread, whereas it's much harder to avoid using memory :)</span></div><div class="line" id="233039"><span class="nick" style="color:#8dd3c7"><a href="#233039" label="[23:30:39]">&lt;stikonas[m]&gt;</a></span><span class="message">Indeed we don't need multi threading in bootstrap</span></div><div class="line" id="233101"><span class="nick" style="color:#8dd3c7"><a href="#233101" label="[23:31:01]">&lt;stikonas[m]&gt;</a></span><span class="message">Perhaps it might speed up some things but not too much</span></div><div class="line" id="233142"><span class="nick" style="color:#389600"><a href="#233142" label="[23:31:42]">&lt;oriansj&gt;</a></span><span class="message">Hagfish_: race conditions can be solved by simple round robin</span></div><div class="line" id="233153"><span class="nick" style="color:#389600"><a href="#233153" label="[23:31:53]">&lt;oriansj&gt;</a></span><span class="message">it isn't super efficient but it will work</span></div><div class="line" id="233213"><span class="nick" style="color:#6b8072"><a href="#233213" label="[23:32:13]">&lt;Hagfish_&gt;</a></span><span class="message">anything non-deterministic seems like a nightmare, but it sounds like this segfault is at least reproducible</span></div><div class="line" id="233303"><span class="nick" style="color:#389600"><a href="#233303" label="[23:33:03]">&lt;oriansj&gt;</a></span><span class="message">problem is most people don't like the 10-20% potential performance loss that round robin suffers when priority inversion occurs</span></div><div class="line" id="233344"><span class="nick" style="color:#6b8072"><a href="#233344" label="[23:33:44]">&lt;Hagfish_&gt;</a></span><span class="message">i'm kinda scared how often security loses out to performance, as a goal</span></div><div class="line" id="233411"><span class="nick" style="color:#389600"><a href="#233411" label="[23:34:11]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: well it isn't just security</span></div><div class="line" id="233412"><span class="nick" style="color:#6b8072"><a href="#233412" label="[23:34:12]">&lt;Hagfish_&gt;</a></span><span class="message">i've sort of accepted that it loses to UX, but performance isn't always critical for UX</span></div><div class="line" id="233450"><span class="nick" style="color:#389600"><a href="#233450" label="[23:34:50]">&lt;oriansj&gt;</a></span><span class="message">it is even harder of an optimization problem; as it isn't UX or performance or even price</span></div><div class="line" id="233513"><span class="nick" style="color:#389600"><a href="#233513" label="[23:35:13]">&lt;oriansj&gt;</a></span><span class="message">but rather what produces the highest net profit on the market in a given quarter.</span></div><div class="line" id="233533"><span class="nick" style="color:#6b8072"><a href="#233533" label="[23:35:33]">&lt;Hagfish_&gt;</a></span><span class="message">security bugs are special, because they are the only type of bugs that have human agents actively trying to trigger them</span></div><div class="line" id="233544"><span class="nick" style="color:#6b8072"><a href="#233544" label="[23:35:44]">&lt;Hagfish_&gt;</a></span><span class="message">(although it can sometimes feel like your users are actively trying to find bugs) :)</span></div><div class="line" id="233557"><span class="nick" style="color:#389600"><a href="#233557" label="[23:35:57]">&lt;oriansj&gt;</a></span><span class="message">if upping CPU performance results in more money, do it (specture and meltdown as examples)</span></div><div class="line" id="233632"><span class="nick" style="color:#6b8072"><a href="#233632" label="[23:36:32]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, that's the most headline example of performance vs security that i can think of</span></div><div class="line" id="233639"><span class="nick" style="color:#389600"><a href="#233639" label="[23:36:39]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: I aggressively fuzz all tools in stage0 that are written in C</span></div><div class="line" id="233646"><span class="nick" style="color:#6b8072"><a href="#233646" label="[23:36:46]">&lt;Hagfish_&gt;</a></span><span class="message">i hear that Linus has been quite resistant to hardening the kernel because of performance concerns, though</span></div><div class="line" id="233722"><span class="nick" style="color:#389600"><a href="#233722" label="[23:37:22]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: it is the result of knowing that a 0.5% performance loss is big enough to lose important users</span></div><div class="line" id="233742"><span class="nick" style="color:#6b8072"><a href="#233742" label="[23:37:42]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, i think that fuzzing is starting to become a best practice for most C projects, and it's good to follow that (just as we expect other projects to follow the best practice of caring about bootstrappability)</span></div><div class="line" id="233803"><span class="nick" style="color:#389600"><a href="#233803" label="[23:38:03]">&lt;oriansj&gt;</a></span><span class="message">and the community trying to security harden linux seem to be willing to actively break legacy binaries and that is taboo for linux</span></div><div class="line" id="233823"><span class="nick" style="color:#6b8072"><a href="#233823" label="[23:38:23]">&lt;Hagfish_&gt;</a></span><span class="message">fortunately with Free Software, it's possible for other people to make different tradeoffs (if the patchset isn't too difficult to maintain)</span></div><div class="line" id="233855"><span class="nick" style="color:#389600"><a href="#233855" label="[23:38:55]">&lt;oriansj&gt;</a></span><span class="message">depends honestly, sometimes the best option is just do a full fork</span></div><div class="line" id="233928"><span class="nick" style="color:#6b8072"><a href="#233928" label="[23:39:28]">&lt;Hagfish_&gt;</a></span><span class="message">i guess it comes down to velocity / community building</span></div><div class="line" id="233953"><span class="nick" style="color:#6b8072"><a href="#233953" label="[23:39:53]">&lt;Hagfish_&gt;</a></span><span class="message">can you attract more people to the full fork (where they have more freedom) than to maintaining a patchset (which needs fewer people)</span></div><div class="line" id="234010"><span class="nick" style="color:#389600"><a href="#234010" label="[23:40:10]">&lt;oriansj&gt;</a></span><span class="message">well finding people willing to work on something with you who share common beliefs, taste and goals is an extremely hard problem</span></div><div class="line" id="234013"><span class="nick" style="color:#6b8072"><a href="#234013" label="[23:40:13]">&lt;Hagfish_&gt;</a></span><span class="message">a complete rewrite is maybe one extreme case</span></div><div class="line" id="234029"><span class="nick" style="color:#6b8072"><a href="#234029" label="[23:40:29]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, i don't think there's a general solution to that problem</span></div><div class="line" id="234055"><span class="nick" style="color:#6b8072"><a href="#234055" label="[23:40:55]">&lt;Hagfish_&gt;</a></span><span class="message">i think it requires people with vision, and a problem which is ripe, and a pile of good luck</span></div><div class="line" id="234059"><span class="nick" style="color:#389600"><a href="#234059" label="[23:40:59]">&lt;oriansj&gt;</a></span><span class="message">I've gone with, just start creating something and maybe other people who think it is cool might build upon it</span></div><div class="line" id="234112"><span class="nick" style="color:#6b8072"><a href="#234112" label="[23:41:12]">&lt;Hagfish_&gt;</a></span><span class="message">the &quot;field of dreams&quot; strategy? :P</span></div><div class="line" id="234148"><span class="nick" style="color:#389600"><a href="#234148" label="[23:41:48]">&lt;oriansj&gt;</a></span><span class="message">well I generally assume most of my projects will be ignored: <a rel="nofollow" href="https://git.sr.ht/~oriansj/The_Encom_Project/tree">https://git.sr.ht/~oriansj/The_Encom_Project/tree</a>  or entirely forgotten</span></div><div class="line" id="234223"><span class="nick" style="color:#6b8072"><a href="#234223" label="[23:42:23]">&lt;Hagfish_&gt;</a></span><span class="message">i think that most great creative minds have a back catalogue of works that aren't so widely respected, or even known</span></div><div class="line" id="234301"><span class="nick" style="color:#389600"><a href="#234301" label="[23:43:01]">&lt;oriansj&gt;</a></span><span class="message">well most ideas are bad</span></div><div class="line" id="234313"><span class="nick" style="color:#389600"><a href="#234313" label="[23:43:13]">&lt;oriansj&gt;</a></span><span class="message">so the more you explore, the higher the odds one is good</span></div><div class="line" id="234448"><span class="nick" style="color:#6b8072"><a href="#234448" label="[23:44:48]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, even if there were an oracle that could tell you in advance whether an idea would turn out to be a hit, or a flop, it might be better to not ask the oracle, because the ability to generate a hit comes from the knowledge gained while making the flop</span></div><div class="line" id="234502"><span class="nick" style="color:#389600"><a href="#234502" label="[23:45:02]">&lt;oriansj&gt;</a></span><span class="message">and if you can get other people to give you ideas, then the odds that you find a neat idea goes up</span></div><div class="line" id="234504"><span class="nick" style="color:#6b8072"><a href="#234504" label="[23:45:04]">&lt;Hagfish_&gt;</a></span><span class="message">and it's okay to make something that only scratches your own itch</span></div><div class="line" id="234519"><span class="nick" style="color:#389600"><a href="#234519" label="[23:45:19]">&lt;oriansj&gt;</a></span><span class="message">exactly</span></div><div class="line" id="234530"><span class="nick" style="color:#389600"><a href="#234530" label="[23:45:30]">&lt;oriansj&gt;</a></span><span class="message">do things that make you happy and that interest you</span></div><div class="line" id="234551"><span class="nick" style="color:#389600"><a href="#234551" label="[23:45:51]">&lt;oriansj&gt;</a></span><span class="message">if it benefits you and/or other people in your life, all the better</span></div><div class="line" id="234556"><span class="nick" style="color:#8dd3c7"><a href="#234556" label="[23:45:56]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, for some use cases security might be less important than performance</span></div><div class="line" id="234613"><span class="nick" style="color:#6b8072"><a href="#234613" label="[23:46:13]">&lt;Hagfish_&gt;</a></span><span class="message">i can't think of a time when some project or creative work became a huge success, even though the people behind it all hated it</span></div><div class="line" id="234617"><span class="nick" style="color:#389600"><a href="#234617" label="[23:46:17]">&lt;oriansj&gt;</a></span><span class="message">weather data calculations comes to mind</span></div><div class="line" id="234735"><span class="nick" style="color:#8dd3c7"><a href="#234735" label="[23:47:35]">&lt;stikonas[m]&gt;</a></span><span class="message">In my work some people work on networking stack in user space, not secure if you have untrusted users, but if you trust all your apps and users, you can avoid kernel context switching</span></div><div class="line" id="234753"><span class="nick" style="color:#6b8072"><a href="#234753" label="[23:47:53]">&lt;Hagfish_&gt;</a></span><span class="message">stikonas[m]: yeah, i guess.  like &quot;denial of service&quot; might be a security concern, but if a user can just restart the program, then that &quot;attack&quot; might not be as costly as a program that's half as fast</span></div><div class="line" id="234845"><span class="nick" style="color:#6b8072"><a href="#234845" label="[23:48:45]">&lt;Hagfish_&gt;</a></span><span class="message">right, sometimes you can design the vulnerability out of the system by putting the guarantees at a different layer</span></div><div class="line" id="234851"><span class="nick" style="color:#389600"><a href="#234851" label="[23:48:51]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well rate limiting, protocol restrictions and similiar administrative features could if done right actually address the security concerns</span></div><div class="line" id="234938"><span class="nick" style="color:#6b8072"><a href="#234938" label="[23:49:38]">&lt;Hagfish_&gt;</a></span><span class="message">people sometimes say things like &quot;telnet is perfectly secure, if you run it over a VPN / ipsec tunnel&quot;, etc.</span></div><div class="line" id="235014"><span class="nick" style="color:#6b8072"><a href="#235014" label="[23:50:14]">&lt;Hagfish_&gt;</a></span><span class="message">but the assumptions / requirements being made need to be clear to users, rather than just telling them after the fact &quot;you were holding it wrong&quot;</span></div><div class="line" id="235018"><span class="nick" style="color:#389600"><a href="#235018" label="[23:50:18]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: well telnet over a dedicated fiber line is secure from all but physical attacks</span></div><div class="line" id="235025"><span class="nick" style="color:#6b8072"><a href="#235025" label="[23:50:25]">&lt;Hagfish_&gt;</a></span><span class="message">right, yes</span></div><div class="line" id="235035"><span class="nick" style="color:#6b8072"><a href="#235035" label="[23:50:35]">&lt;Hagfish_&gt;</a></span><span class="message">and more performant</span></div><div class="line" id="235204"><span class="nick" style="color:#389600"><a href="#235204" label="[23:52:04]">&lt;oriansj&gt;</a></span><span class="message">but it ultimately resolves down to who needs to be responsible for x and making sure the responsible party has the authorization to x in a way they want/need</span></div><div class="line" id="235230"><span class="nick" style="color:#6b8072"><a href="#235230" label="[23:52:30]">&lt;Hagfish_&gt;</a></span><span class="message">i think that aligning incentives is important</span></div><div class="line" id="235315"><span class="nick" style="color:#6b8072"><a href="#235315" label="[23:53:15]">&lt;Hagfish_&gt;</a></span><span class="message">the person who stands to lose from a vulnerability has to be the person who is empowered (with resources, including knowledge) to put the necessary defences in place</span></div><div class="line" id="235324"><span class="nick" style="color:#389600"><a href="#235324" label="[23:53:24]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: the unsolved human problem</span></div><div class="line" id="235335"><span class="nick" style="color:#6b8072"><a href="#235335" label="[23:53:35]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, that's unsolved</span></div><div class="line" id="235413"><span class="nick" style="color:#389600"><a href="#235413" label="[23:54:13]">&lt;oriansj&gt;</a></span><span class="message">one could say even enough effort to collapse civilization wouldn't solve it</span></div><div class="line" id="235435"><span class="nick" style="color:#6b8072"><a href="#235435" label="[23:54:35]">&lt;Hagfish_&gt;</a></span><span class="message">i'm somewhat encouraged by the fact that the field of <a rel="nofollow" href="https://en.wikipedia.org/wiki/Mechanism_design">https://en.wikipedia.org/wiki/Mechanism_design</a>  exists</span></div><div class="line" id="235440"><span class="nick" style="color:#6b8072"><a href="#235440" label="[23:54:40]">&lt;Hagfish_&gt;</a></span><span class="message">also called &quot;reverse game theory&quot;</span></div><div class="line" id="235624"><span class="nick" style="color:#80b1d3"><a href="#235624" label="[23:56:24]">&lt;muurkha&gt;</a></span><span class="message">yeah, mechanism design is fascinating</span></div><div class="line" id="235631"><span class="nick" style="color:#389600"><a href="#235631" label="[23:56:31]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: unfortunately it fails on the hidden knowledge problem</span></div><div class="line" id="235641"><span class="nick" style="color:#80b1d3"><a href="#235641" label="[23:56:41]">&lt;muurkha&gt;</a></span><span class="message">it's a lot older than game theory I think</span></div><div class="line" id="235646"><span class="nick" style="color:#80b1d3"><a href="#235646" label="[23:56:46]">&lt;muurkha&gt;</a></span><span class="message">Condorcet was a pioneer</span></div><div class="line" id="235655"><span class="nick" style="color:#6b8072"><a href="#235655" label="[23:56:55]">&lt;Hagfish_&gt;</a></span><span class="message">wow, i didn't know that</span></div><div class="line" id="235722"><span class="nick" style="color:#6b8072"><a href="#235722" label="[23:57:22]">&lt;Hagfish_&gt;</a></span><span class="message">the wikipedia article says: The 2007 Nobel Memorial Prize in Economic Sciences was awarded to Leonid Hurwicz, Eric Maskin, and Roger Myerson &quot;for having laid the foundations of mechanism design theory&quot;.[2]</span></div><div class="line" id="235728"><span class="nick" style="color:#6b8072"><a href="#235728" label="[23:57:28]">&lt;Hagfish_&gt;</a></span><span class="message">so i thought it was much more recent</span></div><div class="line" id="235737"><span class="nick" style="color:#389600"><a href="#235737" label="[23:57:37]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: imagine you wanted to discourage the creation of steel</span></div><div class="line" id="235748"><span class="nick" style="color:#80b1d3"><a href="#235748" label="[23:57:48]">&lt;muurkha&gt;</a></span><span class="message">Dutch auctions are older than Condorcet</span></div><div class="line" id="235752"><span class="nick" style="color:#389600"><a href="#235752" label="[23:57:52]">&lt;oriansj&gt;</a></span><span class="message">So you pass a law to cap the price to $50 a ton</span></div><div class="line" id="235820"><span class="nick" style="color:#389600"><a href="#235820" label="[23:58:20]">&lt;oriansj&gt;</a></span><span class="message">I with a secret, know how to make steel at $4/ton</span></div><div class="line" id="235853"><span class="nick" style="color:#389600"><a href="#235853" label="[23:58:53]">&lt;oriansj&gt;</a></span><span class="message">price dropped but supply went up; net steel sales explode</span></div><div class="line" id="235926"><span class="nick" style="color:#6b8072"><a href="#235926" label="[23:59:26]">&lt;Hagfish_&gt;</a></span><span class="message">what were your competitors selling it at before the cap?</span></div><div class="line" id="235936"><span class="nick" style="color:#389600"><a href="#235936" label="[23:59:36]">&lt;oriansj&gt;</a></span><span class="message">about $700</span></div><div class="line" id="235947"><span class="nick" style="color:#6b8072"><a href="#235947" label="[23:59:47]">&lt;Hagfish_&gt;</a></span><span class="message">so you were selling it for $699?</span></div><br /></div></body></html>