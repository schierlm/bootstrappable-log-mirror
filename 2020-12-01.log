<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-12-01.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="123319"><span class="nick" style="color:#8dd3c7"><a href="#123319" label="[12:33:19]">&lt;rain1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://re-ws.pl/2020/11/busybox-based-linux-distro-from-scratch/">https://re-ws.pl/2020/11/busybox-based-linux-distro-from-scratch/</a> </span></div><div class="line" id="175638"><span class="nick" style="color:#2e2a4a"><a href="#175638" label="[17:56:38]">&lt;pder&gt;</a></span><span class="message">I took a stab at getting blynn-compiler working with M2-Planet.  It is currently working up to the point of loading classy.hs</span></div><div class="line" id="175647"><span class="nick" style="color:#2e2a4a"><a href="#175647" label="[17:56:47]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/pder/blynn-compiler">https://github.com/pder/blynn-compiler</a> </span></div><div class="line" id="175747"><span class="nick" style="color:#2e2a4a"><a href="#175747" label="[17:57:47]">&lt;pder&gt;</a></span><span class="message">The main issues were pointer arithmetic as oriansj pointed out.  I also found some strangeness with the behavior of FUNCTION pointers</span></div><div class="line" id="175819"><span class="nick" style="color:#6b8072"><a href="#175819" label="[17:58:19]">&lt;V&gt;</a></span><span class="message">OriansJ: woah</span></div><div class="line" id="175841"><span class="nick" style="color:#6b8072"><a href="#175841" label="[17:58:41]">&lt;V&gt;</a></span><span class="message">definitely going to grow up to become a hacker</span></div><div class="line" id="180029"><span class="nick" style="color:#2e2a4a"><a href="#180029" label="[18:00:29]">&lt;pder&gt;</a></span><span class="message">Throughout the code, the run function takes two arguments which are functions.  In functions like fp_get, i had to move some local declarations out of the function and make them global.</span></div><div class="line" id="180048"><span class="nick" style="color:#2e2a4a"><a href="#180048" label="[18:00:48]">&lt;pder&gt;</a></span><span class="message">I wonder if this behavior is similar to how you cant declare a local inside a loop</span></div><div class="line" id="190248"><span class="nick" style="color:#80b1d3"><a href="#190248" label="[19:02:48]">&lt;siraben&gt;</a></span><span class="message">pder: passing the function pointers causes issues?</span></div><div class="line" id="190817"><span class="nick" style="color:#80b1d3"><a href="#190817" label="[19:08:17]">&lt;siraben&gt;</a></span><span class="message">Could you paste the build log?</span></div><div class="line" id="192615"><span class="nick" style="color:#2e2a4a"><a href="#192615" label="[19:26:15]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1175150/">https://paste.debian.net/1175150/</a> </span></div><div class="line" id="192636"><span class="nick" style="color:#2e2a4a"><a href="#192636" label="[19:26:36]">&lt;pder&gt;</a></span><span class="message">The script to build and run is in my branch named go.sh</span></div><div class="line" id="192746"><span class="nick" style="color:#2e2a4a"><a href="#192746" label="[19:27:46]">&lt;pder&gt;</a></span><span class="message">If you look at the diffs, I had to move local variables out of str_get and fp_get.  There was some strange misbehavior where those variable assignments were not working</span></div><div class="line" id="202951"><span class="nick" style="color:#6d2462"><a href="#202951" label="[20:29:51]">&lt;fossy&gt;</a></span><span class="message">pder: hooray</span></div><div class="line" id="203007"><span class="nick" style="color:#6d2462"><a href="#203007" label="[20:30:07]">&lt;fossy&gt;</a></span><span class="message">pder: is this on top of VM.c changes that OriansJ already did</span></div><div class="line" id="204020"><span class="nick" style="color:#2e2a4a"><a href="#204020" label="[20:40:20]">&lt;pder&gt;</a></span><span class="message">fossy: yes, that is correct</span></div><div class="line" id="212132"><span class="nick" style="color:#2e2a4a"><a href="#212132" label="[21:21:32]">&lt;pder&gt;</a></span><span class="message">I just pushed another small change to blynn-compiler that now successfully runs vm without arguments to generate &quot;raw&quot;</span></div><div class="line" id="212331"><span class="nick" style="color:#6d2462"><a href="#212331" label="[21:23:31]">&lt;fossy&gt;</a></span><span class="message">how long did it take when compiled by m2-planet?</span></div><div class="line" id="213149"><span class="nick" style="color:#2e2a4a"><a href="#213149" label="[21:31:49]">&lt;pder&gt;</a></span><span class="message">on my old laptop the M2-planet version of vm takes 57 seconds to run vs 7 seconds for the vm compiled with gcc -O2</span></div><div class="line" id="231015"><span class="nick" style="color:#234e69"><a href="#231015" label="[23:10:15]">&lt;OriansJ&gt;</a></span><span class="message">rain1: we probably could do something similiar with kaem.hex0 for the bootstrap</span></div><div class="line" id="231043"><span class="nick" style="color:#234e69"><a href="#231043" label="[23:10:43]">&lt;OriansJ&gt;</a></span><span class="message">pder: thank you so much for the help ^_^</span></div><div class="line" id="231753"><span class="nick" style="color:#234e69"><a href="#231753" label="[23:17:53]">&lt;OriansJ&gt;</a></span><span class="message">well it is certainly possible that FUNCTION pointers are not properly cleaning up after themselves but we probably need to figure out a test to fix it.</span></div><div class="line" id="232003"><span class="nick" style="color:#234e69"><a href="#232003" label="[23:20:03]">&lt;OriansJ&gt;</a></span><span class="message">rain1: probably ending with mes-m2 or guile as the init but that is just a fun idea to play with. (thanks to gash and gash-utils)</span></div><div class="line" id="232019"><span class="nick" style="color:#2e2a4a"><a href="#232019" label="[23:20:19]">&lt;pder&gt;</a></span><span class="message">Thanks, oriansj.  I will see if I can create a minimal test case to illustrate the problem.  If you check my commits, I basically had to make some of the local variables in the function called by a function pointer global in order to work around the issue.</span></div><div class="line" id="232049"><span class="nick" style="color:#8dd3c7"><a href="#232049" label="[23:20:49]">&lt;rain1&gt;</a></span><span class="message">Oh right! nice</span></div><div class="line" id="232207"><span class="nick" style="color:#234e69"><a href="#232207" label="[23:22:07]">&lt;OriansJ&gt;</a></span><span class="message">pder: very impressive work as you single handedly got us 60% to the end goal with these commits</span></div><div class="line" id="232330"><span class="nick" style="color:#2e2a4a"><a href="#232330" label="[23:23:30]">&lt;pder&gt;</a></span><span class="message">I think the next step is making rts.c M2-Planet friendly.  It also appears several of the .hs files in the last stages have some duplicated C code as well.</span></div><div class="line" id="232459"><span class="nick" style="color:#234e69"><a href="#232459" label="[23:24:59]">&lt;OriansJ&gt;</a></span><span class="message">pder: absolutely right</span></div><div class="line" id="232538"><span class="nick" style="color:#234e69"><a href="#232538" label="[23:25:38]">&lt;OriansJ&gt;</a></span><span class="message">and some changes to the generated C code as well; which is where FUNCTION pointer behavior problems in M2-Planet will really need to be addressed.</span></div><div class="line" id="232614"><span class="nick" style="color:#234e69"><a href="#232614" label="[23:26:14]">&lt;OriansJ&gt;</a></span><span class="message">and once we complete that, we can make bylnn-compiler a submodule for mescc-tools-seed</span></div><div class="line" id="232725"><span class="nick" style="color:#234e69"><a href="#232725" label="[23:27:25]">&lt;OriansJ&gt;</a></span><span class="message">and siraben will help us to a scheme able to finish the bootstrap</span></div><div class="line" id="233523"><span class="nick" style="color:#234e69"><a href="#233523" label="[23:35:23]">&lt;OriansJ&gt;</a></span><span class="message">as ultimately we will need to ensure blynn-compiler behavior is consistent across all architectures that M2-Planet+mescc-tools support</span></div><div class="line" id="234249"><span class="nick" style="color:#234e69"><a href="#234249" label="[23:42:49]">&lt;OriansJ&gt;</a></span><span class="message">I just triple checked and the output of the working vm2 for RAW is 9732a8852bf92b4097f275da4ceba3b718138a5e16190cbef43bbd4be42a27dd (which is exactly the same generated by GCC, clang and the original version of blynn compiler)</span></div><div class="line" id="234924"><span class="nick" style="color:#234e69"><a href="#234924" label="[23:49:24]">&lt;OriansJ&gt;</a></span><span class="message">now I am checking if lonely.c is the same as what the GCC version makes</span></div><div class="line" id="235258"><span class="nick" style="color:#234e69"><a href="#235258" label="[23:52:58]">&lt;OriansJ&gt;</a></span><span class="message">nope, big difference</span></div><br /></div></body></html>