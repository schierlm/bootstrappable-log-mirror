<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-08-18.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000156"><span class="nick" style="color:#389600"><a href="#000156" label="[00:01:56]">&lt;aggi&gt;</a></span><span class="message">meanwhile, bootstrapping dev-lang/perl with arm-tcc</span></div><div class="line" id="000238"><span class="nick" style="color:#389600"><a href="#000238" label="[00:02:38]">&lt;aggi&gt;</a></span><span class="message">horrendous, a bunch of virtualized memory allocation routines and macros, which trigger a segfault when compiled with tcc</span></div><div class="line" id="000330"><span class="nick" style="color:#389600"><a href="#000330" label="[00:03:30]">&lt;aggi&gt;</a></span><span class="message">in case anyone is interested: sv_inline.h #define new_body_from_arena is one such monstrosity</span></div><div class="line" id="000408"><span class="nick" style="color:#389600"><a href="#000408" label="[00:04:08]">&lt;aggi&gt;</a></span><span class="message">with some initial hacks miniperl compiled with tcc doesn't segfault anymore... doesn't work yet as it should</span></div><div class="line" id="000520"><span class="nick" style="color:#389600"><a href="#000520" label="[00:05:20]">&lt;aggi&gt;</a></span><span class="message">seems new_body_allocated / new_body_from_arena virtual memory management needs a re-implementation for tcc compiler</span></div><div class="line" id="000613"><span class="nick" style="color:#389600"><a href="#000613" label="[00:06:13]">&lt;aggi&gt;</a></span><span class="message">my current reasoning is, i wanted to remove perl entirely, yet then autotools/automake etc. are gone, and perl too is required inside Kbuild system somewhere -&gt; horror</span></div><div class="line" id="000713"><span class="nick" style="color:#389600"><a href="#000713" label="[00:07:13]">&lt;aggi&gt;</a></span><span class="message">another idea is, to downgrade dev-lang/perl to a version which didn't implement the weird virtualized memory management</span></div><div class="line" id="000726"><span class="nick" style="color:#389600"><a href="#000726" label="[00:07:26]">&lt;aggi&gt;</a></span><span class="message">which is some version from year 2005 ... not sure how far i could get with this, if anywhere at all</span></div><div class="line" id="000811"><span class="nick" style="color:#389600"><a href="#000811" label="[00:08:11]">&lt;aggi&gt;</a></span><span class="message">conclusion: currently dev-lang/perl cannot be bootstrapped with tcc compiler, and it cannot be removed from the dependency graph without a total collapse</span></div><div class="line" id="001013"><span class="nick" style="color:#389600"><a href="#001013" label="[00:10:13]">&lt;aggi&gt;</a></span><span class="message">and even if i can hack this perl bootstrapping problem, even then i do not feel confident about any of this</span></div><div class="line" id="001102"><span class="nick" style="color:#389600"><a href="#001102" label="[00:11:02]">&lt;aggi&gt;</a></span><span class="message">linux kernel build depends on perl, autotools do</span></div><div class="line" id="001502"><span class="nick" style="color:#2e2a4a"><a href="#001502" label="[00:15:02]">&lt;oriansj&gt;</a></span><span class="message">stikonas: good point and honestly it wouldn't be much work to do things like: DEFINE mov_eax,_[eax] 8B00</span></div><div class="line" id="001529"><span class="nick" style="color:#6b8072"><a href="#001529" label="[00:15:29]">&lt;stikonas&gt;</a></span><span class="message">yes, something like this is not too hard</span></div><div class="line" id="001607"><span class="nick" style="color:#6b8072"><a href="#001607" label="[00:16:07]">&lt;stikonas&gt;</a></span><span class="message">probably need to update it in the comments of hex apps too if we are going with this...</span></div><div class="line" id="001610"><span class="nick" style="color:#2e2a4a"><a href="#001610" label="[00:16:10]">&lt;oriansj&gt;</a></span><span class="message">just takes time and someone willing to do that work</span></div><div class="line" id="001738"><span class="nick" style="color:#2e2a4a"><a href="#001738" label="[00:17:38]">&lt;oriansj&gt;</a></span><span class="message">well changing out M1 defines does run into a problem for cases like mov 0x100, ebx</span></div><div class="line" id="001800"><span class="nick" style="color:#2e2a4a"><a href="#001800" label="[00:18:00]">&lt;oriansj&gt;</a></span><span class="message">as the binary encoding would put the 0x100 after the ebx</span></div><div class="line" id="001832"><span class="nick" style="color:#2e2a4a"><a href="#001832" label="[00:18:32]">&lt;oriansj&gt;</a></span><span class="message">and thus would have to come after for the M1 syntax</span></div><div class="line" id="002031"><span class="nick" style="color:#2e2a4a"><a href="#002031" label="[00:20:31]">&lt;oriansj&gt;</a></span><span class="message">so it couldn't map directly to nasm syntax nor at&amp;t</span></div><div class="line" id="002412"><span class="nick" style="color:#2e2a4a"><a href="#002412" label="[00:24:12]">&lt;oriansj&gt;</a></span><span class="message">or 891d 00010000 =&gt; mov dword [0x100], ebx</span></div><div class="line" id="003234"><span class="nick" style="color:#2e2a4a"><a href="#003234" label="[00:32:34]">&lt;oriansj&gt;</a></span><span class="message">something like STORE_EBX -&gt; [%0x100] could be done by just DEFINE -&gt;  and DEFINE [ and DEFINE ]</span></div><div class="line" id="003624"><span class="nick" style="color:#2e2a4a"><a href="#003624" label="[00:36:24]">&lt;oriansj&gt;</a></span><span class="message">or if someone wanted to make it super clean, it could be redone in octal but it would just be a bunch of work for a cosmetic enchancement</span></div><div class="line" id="004923"><span class="nick" style="color:#6b8072"><a href="#004923" label="[00:49:23]">&lt;stikonas&gt;</a></span><span class="message">yeah, probably not worth redoing</span></div><div class="line" id="004933"><span class="nick" style="color:#6b8072"><a href="#004933" label="[00:49:33]">&lt;stikonas&gt;</a></span><span class="message">define names is mostly just find-replace-all</span></div><div class="line" id="005102"><span class="nick" style="color:#6b8072"><a href="#005102" label="[00:51:02]">&lt;stikonas&gt;</a></span><span class="message">and if we don't go fully nasm &quot;mov dword [0x100], ebx&quot; can be done mov_dword_[###],_ebx %0x100</span></div><div class="line" id="005115"><span class="nick" style="color:#6b8072"><a href="#005115" label="[00:51:15]">&lt;stikonas&gt;</a></span><span class="message">which might still be clearer and easy for M0 to parse</span></div><div class="line" id="005129"><span class="nick" style="color:#6b8072"><a href="#005129" label="[00:51:29]">&lt;stikonas&gt;</a></span><span class="message">well, maybe not # as that is a comment</span></div><div class="line" id="012425"><span class="nick" style="color:#80b1d3"><a href="#012425" label="[01:24:25]">&lt;Hagfish&gt;</a></span><span class="message">aggi: &quot;miniperl compiled with tcc doesn't segfault anymore&quot; that's fantastic</span></div><div class="line" id="012450"><span class="nick" style="color:#80b1d3"><a href="#012450" label="[01:24:50]">&lt;Hagfish&gt;</a></span><span class="message">miniperl seems like &quot;real software&quot; for the purposes of testing tcc, so that's an important milestone</span></div><div class="line" id="012551"><span class="nick" style="color:#389600"><a href="#012551" label="[01:25:51]">&lt;aggi&gt;</a></span><span class="message">Hagfish: it doesn't work yet</span></div><div class="line" id="013708"><span class="nick" style="color:#389600"><a href="#013708" label="[01:37:08]">&lt;aggi&gt;</a></span><span class="message">tested a version rollback from perl-5.36 go perl-5.24 (year 2016) ... problems prevail</span></div><div class="line" id="013755"><span class="nick" style="color:#389600"><a href="#013755" label="[01:37:55]">&lt;aggi&gt;</a></span><span class="message">it's safe to assume perl5 hasn't been bootstrapped with any alternative compiler such as tcc in 10years</span></div><div class="line" id="014204"><span class="nick" style="color:#6b8072"><a href="#014204" label="[01:42:04]">&lt;stikonas&gt;</a></span><span class="message">aggi: we bootstrap perl5 in live-bootstrap</span></div><div class="line" id="014253"><span class="nick" style="color:#6b8072"><a href="#014253" label="[01:42:53]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/perl-5.000/perl-5.000.sh">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/perl-5.000/perl-5.000.sh</a> </span></div><div class="line" id="014315"><span class="nick" style="color:#6b8072"><a href="#014315" label="[01:43:15]">&lt;stikonas&gt;</a></span><span class="message">it involved rewriting some perl scripts in awk but then we can build miniperl without any pregenerated files</span></div><div class="line" id="014345"><span class="nick" style="color:#6b8072"><a href="#014345" label="[01:43:45]">&lt;stikonas&gt;</a></span><span class="message">and this is makefile that does actual building <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/perl-5.000/mk/main.mk">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/perl-5.000/mk/main.mk</a> </span></div><div class="line" id="014437"><span class="nick" style="color:#6b8072"><a href="#014437" label="[01:44:37]">&lt;stikonas&gt;</a></span><span class="message">then we went (in a few steps to perl 5.6.2 <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/tree/master/sysa/perl-5.6.2">https://github.com/fosslinux/live-bootstrap/tree/master/sysa/perl-5.6.2</a>) </span></div><div class="line" id="014513"><span class="nick" style="color:#6b8072"><a href="#014513" label="[01:45:13]">&lt;stikonas&gt;</a></span><span class="message">didn't go further since that is mostly enough to run gnu autotools (except for very latest versions)</span></div><div class="line" id="014657"><span class="nick" style="color:#389600"><a href="#014657" label="[01:46:57]">&lt;aggi&gt;</a></span><span class="message">thanks for the hint stikonas</span></div><div class="line" id="014921"><span class="nick" style="color:#6b8072"><a href="#014921" label="[01:49:21]">&lt;stikonas&gt;</a></span><span class="message">I think perl 5.8.x should be buildable with tcc too, not sure about the rest...</span></div><div class="line" id="015120"><span class="nick" style="color:#389600"><a href="#015120" label="[01:51:20]">&lt;aggi&gt;</a></span><span class="message">just checked autotools-2.71 dependencies...  &gt;=dev-lang/perl-5.6</span></div><div class="line" id="015149"><span class="nick" style="color:#6b8072"><a href="#015149" label="[01:51:49]">&lt;stikonas&gt;</a></span><span class="message">that might not be true...</span></div><div class="line" id="015208"><span class="nick" style="color:#6b8072"><a href="#015208" label="[01:52:08]">&lt;stikonas&gt;</a></span><span class="message">just nobody updated gentoo ebuild</span></div><div class="line" id="015210"><span class="nick" style="color:#389600"><a href="#015210" label="[01:52:10]">&lt;aggi&gt;</a></span><span class="message">yep</span></div><div class="line" id="015255"><span class="nick" style="color:#389600"><a href="#015255" label="[01:52:55]">&lt;aggi&gt;</a></span><span class="message">and alot more potential trouble, when blocking at an autotools/automake version within the entire portage tree</span></div><div class="line" id="015311"><span class="nick" style="color:#389600"><a href="#015311" label="[01:53:11]">&lt;aggi&gt;</a></span><span class="message">nonetheless, i am willing to do this</span></div><div class="line" id="015338"><span class="nick" style="color:#6b8072"><a href="#015338" label="[01:53:38]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/autoconf.git/commit/?id=3a9802d60156809c139e9b4620bf04917e143ee2">https://git.savannah.gnu.org/cgit/autoconf.git/commit/?id=3a9802d60156809c139e9b4620bf04917e143ee2</a> </span></div><div class="line" id="015414"><span class="nick" style="color:#6b8072"><a href="#015414" label="[01:54:14]">&lt;stikonas&gt;</a></span><span class="message">and there is more recent commit bumping it to 5.10</span></div><div class="line" id="015421"><span class="nick" style="color:#389600"><a href="#015421" label="[01:54:21]">&lt;aggi&gt;</a></span><span class="message">i'll give perl-5.36 another night of debug and hacking... if this fails i'll rollback perl</span></div><div class="line" id="015442"><span class="nick" style="color:#389600"><a href="#015442" label="[01:54:42]">&lt;aggi&gt;</a></span><span class="message">apropos dilfridge@gentoo.org had banned me from #gentoo-toolchain</span></div><div class="line" id="015450"><span class="nick" style="color:#389600"><a href="#015450" label="[01:54:50]">&lt;aggi&gt;</a></span><span class="message">what a coincidence</span></div><div class="line" id="015614"><span class="nick" style="color:#389600"><a href="#015614" label="[01:56:14]">&lt;aggi&gt;</a></span><span class="message">ideally the entire autotools/perl can be removed, however then almost the entire tree which i could harvest with gcc47 and a c-only toolchain, this tree of 600 ebuilds will collapse to almost nothing</span></div><div class="line" id="015707"><span class="nick" style="color:#6d2462"><a href="#015707" label="[01:57:07]">&lt;sam_&gt;</a></span><span class="message">iirc the patch we used originally was 5.6-compatibel still</span></div><div class="line" id="015714"><span class="nick" style="color:#6d2462"><a href="#015714" label="[01:57:14]">&lt;sam_&gt;</a></span><span class="message">then paul changed it because he didn't mind bumping the perl dep</span></div><div class="line" id="015722"><span class="nick" style="color:#6d2462"><a href="#015722" label="[01:57:22]">&lt;sam_&gt;</a></span><span class="message">i suspect that's why we forgot to then change the ebuild</span></div><div class="line" id="015833"><span class="nick" style="color:#6d2462"><a href="#015833" label="[01:58:33]">&lt;sam_&gt;</a></span><span class="message">autoconf-2.71 has :$PERL -e 'require 5.006;'</span></div><div class="line" id="015852"><span class="nick" style="color:#6b8072"><a href="#015852" label="[01:58:52]">&lt;stikonas&gt;</a></span><span class="message">well, it might be automake that needs newer perl</span></div><div class="line" id="015905"><span class="nick" style="color:#6d2462"><a href="#015905" label="[01:59:05]">&lt;sam_&gt;</a></span><span class="message">oh</span></div><div class="line" id="015914"><span class="nick" style="color:#6b8072"><a href="#015914" label="[01:59:14]">&lt;stikonas&gt;</a></span><span class="message">or maybe we just didn't have enough perl modules...</span></div><div class="line" id="015919"><span class="nick" style="color:#6d2462"><a href="#015919" label="[01:59:19]">&lt;sam_&gt;</a></span><span class="message">i forgot the patch wasn't backported to 2.70</span></div><div class="line" id="015928"><span class="nick" style="color:#6b8072"><a href="#015928" label="[01:59:28]">&lt;stikonas&gt;</a></span><span class="message">in live-bootstrap we build miniperl and some modules manually</span></div><div class="line" id="015932"><span class="nick" style="color:#389600"><a href="#015932" label="[01:59:32]">&lt;aggi&gt;</a></span><span class="message">automake DEPEND=dev-lang/perl without any version tag at all</span></div><div class="line" id="015939"><span class="nick" style="color:#6b8072"><a href="#015939" label="[01:59:39]">&lt;stikonas&gt;</a></span><span class="message">so it's not full perl until much later where we have gcc</span></div><div class="line" id="020022"><span class="nick" style="color:#389600"><a href="#020022" label="[02:00:22]">&lt;aggi&gt;</a></span><span class="message">well, gcc47 can be compiled/bootstrapped with tcc, however i don't want to anymore</span></div><div class="line" id="020045"><span class="nick" style="color:#6b8072"><a href="#020045" label="[02:00:45]">&lt;stikonas&gt;</a></span><span class="message">hmm, automake seems to need perl 5.6...</span></div><div class="line" id="020114"><span class="nick" style="color:#6d2462"><a href="#020114" label="[02:01:14]">&lt;sam_&gt;</a></span><span class="message">fixed autoconf, looking at automake now</span></div><div class="line" id="020129"><span class="nick" style="color:#6d2462"><a href="#020129" label="[02:01:29]">&lt;sam_&gt;</a></span><span class="message">or I can let you tell me the answer :)</span></div><div class="line" id="020143"><span class="nick" style="color:#389600"><a href="#020143" label="[02:01:43]">&lt;aggi&gt;</a></span><span class="message">so, regardless of any success with hacking perl-5.36 for example, a perl-5.6 deployment may be preferrable anyway</span></div><div class="line" id="020831"><span class="nick" style="color:#389600"><a href="#020831" label="[02:08:31]">&lt;aggi&gt;</a></span><span class="message">up until recently, i could keep the gcc47-toolchain package set and tcc-toolchain one almost identical</span></div><div class="line" id="020917"><span class="nick" style="color:#389600"><a href="#020917" label="[02:09:17]">&lt;aggi&gt;</a></span><span class="message">i'll minify the dependency graph against dev-lang/perl next</span></div><div class="line" id="020948"><span class="nick" style="color:#389600"><a href="#020948" label="[02:09:48]">&lt;aggi&gt;</a></span><span class="message">i am aware of at least one ebuild which might hurt: sys-boot/syslinux which is necessary to create bootable amd64.iso images</span></div><div class="line" id="021111"><span class="nick" style="color:#389600"><a href="#021111" label="[02:11:11]">&lt;aggi&gt;</a></span><span class="message">sorry for the noise, need to think about this.</span></div><div class="line" id="022102"><span class="nick" style="color:#389600"><a href="#022102" label="[02:21:02]">&lt;aggi&gt;</a></span><span class="message">not at least the gentoo archives contain perl-5.6/5.8 anymore ...</span></div><div class="line" id="022226"><span class="nick" style="color:#6d2462"><a href="#022226" label="[02:22:26]">&lt;sam_&gt;</a></span><span class="message"> <a rel="nofollow" href="http://bloodnoc.org/~roy/olde-distfiles/">http://bloodnoc.org/~roy/olde-distfiles/</a>  (<a rel="nofollow" href="https://wiki.gentoo.org/wiki/User:NeddySeagoon/Historical_Gentoo">https://wiki.gentoo.org/wiki/User:NeddySeagoon/Historical_Gentoo</a>)  has 5.8 at least</span></div><div class="line" id="022346"><span class="nick" style="color:#389600"><a href="#022346" label="[02:23:46]">&lt;aggi&gt;</a></span><span class="message">that's the last one in the gentoo archives: perl-5.10.1.ebuild</span></div><div class="line" id="022417"><span class="nick" style="color:#6d2462"><a href="#022417" label="[02:24:17]">&lt;sam_&gt;</a></span><span class="message">what &quot;archives&quot;?</span></div><div class="line" id="022420"><span class="nick" style="color:#389600"><a href="#022420" label="[02:24:20]">&lt;aggi&gt;</a></span><span class="message">ups, nope ... perl-5.8.8-r8.ebuild</span></div><div class="line" id="022431"><span class="nick" style="color:#6d2462"><a href="#022431" label="[02:24:31]">&lt;sam_&gt;</a></span><span class="message">everything back to original 1st gentoo should be in the cvs archive</span></div><div class="line" id="022437"><span class="nick" style="color:#389600"><a href="#022437" label="[02:24:37]">&lt;aggi&gt;</a></span><span class="message">anongit.gentoo.org/archive/repo/gentoo-2.git</span></div><div class="line" id="022505"><span class="nick" style="color:#6d2462"><a href="#022505" label="[02:25:05]">&lt;sam_&gt;</a></span><span class="message">that's an archived version of the repo just before migration to git</span></div><div class="line" id="022511"><span class="nick" style="color:#6d2462"><a href="#022511" label="[02:25:11]">&lt;sam_&gt;</a></span><span class="message">if you look in the history, you will find older stuff</span></div><div class="line" id="022644"><span class="nick" style="color:#6d2462"><a href="#022644" label="[02:26:44]">&lt;sam_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/gentoo/gentoo-historical-2/tree/master/dev-lang/perl">https://github.com/gentoo/gentoo-historical-2/tree/master/dev-lang/perl</a>  -&gt; e.g. <a rel="nofollow" href="https://github.com/gentoo/gentoo-historical-2/commit/c0577b7174d94ad6b1a683715b8aa450715808ea">https://github.com/gentoo/gentoo-historical-2/commit/c0577b7174d94ad6b1a683715b8aa450715808ea</a>  etc (same repo as on gitweb.gentoo.org, I'm just linking to github because the history search is faster)</span></div><div class="line" id="022708"><span class="nick" style="color:#389600"><a href="#022708" label="[02:27:08]">&lt;aggi&gt;</a></span><span class="message">ok</span></div><div class="line" id="023731"><span class="nick" style="color:#389600"><a href="#023731" label="[02:37:31]">&lt;aggi&gt;</a></span><span class="message">FYI perl-5.8.8-r8 compiled with arm-tcc: ./miniperl -Ilib configpm --heavy=lib/Config_heavy.pl lib/Config.pm -&gt; Segmentation fault</span></div><div class="line" id="023809"><span class="nick" style="color:#389600"><a href="#023809" label="[02:38:09]">&lt;aggi&gt;</a></span><span class="message">not surprising, since there is a related bug report for perl-5.8.7 already <a rel="nofollow" href="https://bugs.gentoo.org/show_bug.cgi?id=97452">https://bugs.gentoo.org/show_bug.cgi?id=97452</a> </span></div><div class="line" id="024212"><span class="nick" style="color:#389600"><a href="#024212" label="[02:42:12]">&lt;aggi&gt;</a></span><span class="message">year 2005</span></div><div class="line" id="032504"><span class="nick" style="color:#80b1d3"><a href="#032504" label="[03:25:04]">&lt;Hagfish&gt;</a></span><span class="message">aggi: &quot;sorry for the noise&quot;, for what it's worth, i appreciate reading the thought process that goes into this important work</span></div><div class="line" id="032639"><span class="nick" style="color:#80b1d3"><a href="#032639" label="[03:26:39]">&lt;Hagfish&gt;</a></span><span class="message">certainly it seems better to me than a silent channel, but i suppose other people might prefer channels to only be used for specific help requests, or whatever</span></div><div class="line" id="043932"><span class="nick" style="color:#2e2a4a"><a href="#043932" label="[04:39:32]">&lt;oriansj&gt;</a></span><span class="message">well this channel is for everyone interested in bootstrapping to learn, share and engage as a community in a positive, healthy and informative manner. So there is a good deal of freedom to share</span></div><div class="line" id="053034"><span class="nick" style="color:#2e2a4a"><a href="#053034" label="[05:30:34]">&lt;oriansj&gt;</a></span><span class="message">I am now very seriously considering using managed Source hut for setting up the git.bootstrapping.world as it seems rather straight forward: <a rel="nofollow" href="https://srht.site/custom-domains">https://srht.site/custom-domains</a> </span></div><div class="line" id="053302"><span class="nick" style="color:#2e2a4a"><a href="#053302" label="[05:33:02]">&lt;oriansj&gt;</a></span><span class="message">unless anyone has a better plan for a managed git repo solution with support for custom domains</span></div><div class="line" id="053332"><span class="nick" style="color:#2e2a4a"><a href="#053332" label="[05:33:32]">&lt;oriansj&gt;</a></span><span class="message">and the  gemini support looks interesting.</span></div><div class="line" id="053805"><span class="nick" style="color:#389600"><a href="#053805" label="[05:38:05]">&lt;aggi&gt;</a></span><span class="message">side-note: perl-5.8.6-r8.ebuild compiled with arm-tcc -&gt; miniperl does NOT segfault anymore, which seems consistent with another gentoo bug report mentioned</span></div><div class="line" id="053826"><span class="nick" style="color:#389600"><a href="#053826" label="[05:38:26]">&lt;aggi&gt;</a></span><span class="message">./perl --version &quot;This is perl, v5.8.6 built for armv6j-linux&quot; ... bootstrapped with tcc :)</span></div><div class="line" id="053951"><span class="nick" style="color:#389600"><a href="#053951" label="[05:39:51]">&lt;aggi&gt;</a></span><span class="message">and it's noteworthy, perl bootstrapping with tcc required a version-rollback of 17 years(!)</span></div><div class="line" id="091515"><span class="nick" style="color:#389600"><a href="#091515" label="[09:15:15]">&lt;aggi&gt;</a></span><span class="message">anyway, blocking at gcc47 c-only toolchain (year 2013) and perl-5.8.6 (year 2005) for bootstrapping toolchain and userspace, this is a gigantic trouble source to synchronize against upstream</span></div><div class="line" id="091615"><span class="nick" style="color:#389600"><a href="#091615" label="[09:16:15]">&lt;aggi&gt;</a></span><span class="message">currently, perl-5.8.6 did resolve against the dependency graph, with some minor exclusions (sys-boot/syslinux which requires backtracking still)</span></div><div class="line" id="091655"><span class="nick" style="color:#389600"><a href="#091655" label="[09:16:55]">&lt;aggi&gt;</a></span><span class="message">with syslinux i already blocked to an old version _without_ UEFI support, i'll never follow along with this</span></div><div class="line" id="091745"><span class="nick" style="color:#389600"><a href="#091745" label="[09:17:45]">&lt;aggi&gt;</a></span><span class="message">so, chances are, any syslinux version _without_ UEFI support can be retained with perl-5.8.6</span></div><div class="line" id="091838"><span class="nick" style="color:#389600"><a href="#091838" label="[09:18:38]">&lt;aggi&gt;</a></span><span class="message">i don't feel confident with the perl version block to year 2005</span></div><div class="line" id="091938"><span class="nick" style="color:#389600"><a href="#091938" label="[09:19:38]">&lt;aggi&gt;</a></span><span class="message">currently, with the tcc-toolchain (no binutils nor gcc nor llvm no elfutils required anymore at all), there is only two blockers remaining</span></div><div class="line" id="091947"><span class="nick" style="color:#389600"><a href="#091947" label="[09:19:47]">&lt;aggi&gt;</a></span><span class="message">musl-libs and linux kernel...</span></div><div class="line" id="092107"><span class="nick" style="color:#389600"><a href="#092107" label="[09:21:07]">&lt;aggi&gt;</a></span><span class="message">once i got those two repaired, an entire linux distribution will be available, with a tcc-toolchain only, fully separated from GNU and LLVM</span></div><div class="line" id="143952"><span class="nick" style="color:#80b1d3"><a href="#143952" label="[14:39:52]">&lt;Hagfish&gt;</a></span><span class="message">aggi: wow, that'll be a huge achievement</span></div><div class="line" id="144017"><span class="nick" style="color:#80b1d3"><a href="#144017" label="[14:40:17]">&lt;Hagfish&gt;</a></span><span class="message">how does that compare with the toybox project? <a rel="nofollow" href="https://landley.net/toybox/about.html">https://landley.net/toybox/about.html</a> </span></div><div class="line" id="144329"><span class="nick" style="color:#80b1d3"><a href="#144329" label="[14:43:29]">&lt;Hagfish&gt;</a></span><span class="message">(i must admit that i worry a bit about toybox's understated or inadvertent goal of making an ecosystem without copyleft software, for the benefit of large corporations)</span></div><div class="line" id="144330"><span class="nick" style="color:#234e69"><a href="#144330" label="[14:43:30]">*</a></span><span class="message">blockhead scrolls back ... likes &quot;separated from GNU&quot;</span></div><div class="line" id="144511"><span class="nick" style="color:#80b1d3"><a href="#144511" label="[14:45:11]">&lt;Hagfish&gt;</a></span><span class="message">it's good to avoid monoculture and single points of failure, but i think that the free software ecosystem we currently have is potentially quite fragile given all the commercial interests against it, so i'm reluctant to undermine the incentive structure that has got us this far</span></div><div class="line" id="145239"><span class="nick" style="color:#389600"><a href="#145239" label="[14:52:39]">&lt;aggi&gt;</a></span><span class="message">Hagfish: toybox project is unrelated to the toolchain chosen</span></div><div class="line" id="145316"><span class="nick" style="color:#389600"><a href="#145316" label="[14:53:16]">&lt;aggi&gt;</a></span><span class="message">although, given the situation surrounding coreutils/util-linux/iputils etc. an alternative to those is relevant</span></div><div class="line" id="145631"><span class="nick" style="color:#389600"><a href="#145631" label="[14:56:31]">&lt;aggi&gt;</a></span><span class="message">i am not concerned about copyleft nor GPL compliance at all, i am concerned about the _technical_ qualities of GNU toolchain and buildsystem</span></div><div class="line" id="145721"><span class="nick" style="color:#389600"><a href="#145721" label="[14:57:21]">&lt;aggi&gt;</a></span><span class="message">this is the reason why i want to remove GNU components, in particular gcc,binutils,autotools,bash etc.; and llvm isn't altnernative either</span></div><div class="line" id="150516"><span class="nick" style="color:#80b1d3"><a href="#150516" label="[15:05:16]">&lt;Hagfish&gt;</a></span><span class="message">fair enough, thank you</span></div><div class="line" id="152604"><span class="nick" style="color:#6c3d55"><a href="#152604" label="[15:26:04]">&lt;bauen1&gt;</a></span><span class="message">aggi: iirc musl can be built with tinycc, except for a few tiny assembly snippets, that could probably be hand-assembled. Or are there other bigger issues ?</span></div><div class="line" id="152822"><span class="nick" style="color:#389600"><a href="#152822" label="[15:28:22]">&lt;aggi&gt;</a></span><span class="message">yep, this is what's hitting with musl: crt/arm/crti.s:1: error: known instruction expected</span></div><div class="line" id="153030"><span class="nick" style="color:#6c3d55"><a href="#153030" label="[15:30:30]">&lt;bauen1&gt;</a></span><span class="message">aggi: but it's only a few (iirc 1-10) assembly instructions that tinycc doesn't support, right ?</span></div><div class="line" id="153140"><span class="nick" style="color:#6c3d55"><a href="#153140" label="[15:31:40]">&lt;bauen1&gt;</a></span><span class="message">like the failure to assembly those instructions isn't masking an issue further down ?</span></div><div class="line" id="153207"><span class="nick" style="color:#389600"><a href="#153207" label="[15:32:07]">&lt;aggi&gt;</a></span><span class="message">yes arm-tcc assembler doesn't digest this with musl-1.2.2 arch/arm/crt_arch.h</span></div><div class="line" id="160955"><span class="nick" style="color:#389600"><a href="#160955" label="[16:09:55]">&lt;aggi&gt;</a></span><span class="message">bauen1: i think it's a syntax problem, some of which are trivial, with arch/arm/crt_arch.h i got no clue yet what the problem is</span></div><div class="line" id="160959"><span class="nick" style="color:#389600"><a href="#160959" label="[16:09:59]">&lt;aggi&gt;</a></span><span class="message">any ideas?</span></div><div class="line" id="161146"><span class="nick" style="color:#6c3d55"><a href="#161146" label="[16:11:46]">&lt;bauen1&gt;</a></span><span class="message">aggi: not really, I once tried to build musl for i386 with tinycc, but I didn't actually need the multithread etc. support / fenv /... it had problems with, so I just deleted those lines :)</span></div><div class="line" id="161418"><span class="nick" style="color:#389600"><a href="#161418" label="[16:14:18]">&lt;aggi&gt;</a></span><span class="message">so far it seems tcc assembler could digest those after a minimal tweak: crti.s  crtn.s</span></div><div class="line" id="161447"><span class="nick" style="color:#389600"><a href="#161447" label="[16:14:47]">&lt;aggi&gt;</a></span><span class="message">the inline assembly one in arm/crt_arch.h remains cryptic</span></div><div class="line" id="161543"><span class="nick" style="color:#6c3d55"><a href="#161543" label="[16:15:43]">&lt;bauen1&gt;</a></span><span class="message">aggi: I would start a binary search for the line that causes it to fail, i.e. comment out 50%, then 25% etc... until you have the exact line (or rather instruction) it chokes on</span></div><div class="line" id="161809"><span class="nick" style="color:#6c3d55"><a href="#161809" label="[16:18:09]">&lt;bauen1&gt;</a></span><span class="message">aggi: it might even just be that it doesn't like a register alias used there</span></div><div class="line" id="161824"><span class="nick" style="color:#6c3d55"><a href="#161824" label="[16:18:24]">&lt;bauen1&gt;</a></span><span class="message">aggi: or a label, those instructions seem rather &quot;common&quot;</span></div><div class="line" id="162202"><span class="nick" style="color:#6c3d55"><a href="#162202" label="[16:22:02]">&lt;bauen1&gt;</a></span><span class="message">aggi: And it's very nice to see that a (quite usable) userspace using just tinycc as toolchain is possible :)</span></div><div class="line" id="162233"><span class="nick" style="color:#6c3d55"><a href="#162233" label="[16:22:33]">&lt;bauen1&gt;</a></span><span class="message">aggi: I am wondering, how much did you already have to patch tinycc ? (Or what exact commit of tinycc are you using)</span></div><div class="line" id="162348"><span class="nick" style="color:#389600"><a href="#162348" label="[16:23:48]">&lt;aggi&gt;</a></span><span class="message">bauen1: i don't see any problem with tcc toolchain on git HEAD</span></div><div class="line" id="162436"><span class="nick" style="color:#389600"><a href="#162436" label="[16:24:36]">&lt;aggi&gt;</a></span><span class="message">in total i had to pull in 300 ebuilds into my overlay, didn't count how much of this was related to tcc</span></div><div class="line" id="163742"><span class="nick" style="color:#389600"><a href="#163742" label="[16:37:42]">&lt;aggi&gt;</a></span><span class="message">another one, seems _Complex extension required for musl-libc... ouch</span></div><div class="line" id="165755"><span class="nick" style="color:#6c3d55"><a href="#165755" label="[16:57:55]">&lt;bauen1&gt;</a></span><span class="message">aggi: yeah, and tinycc really doesn't support that, so you need to (somehow) build without it (probably drop to an earlier C-Standard) or add support for it to tinycc</span></div><div class="line" id="165805"><span class="nick" style="color:#6c3d55"><a href="#165805" label="[16:58:05]">&lt;bauen1&gt;</a></span><span class="message">as in, doesn't support it at all</span></div><div class="line" id="172300"><span class="nick" style="color:#389600"><a href="#172300" label="[17:23:00]">&lt;aggi&gt;</a></span><span class="message">the _Complex one isn't that critical, not sure if it should be a compiler/language extension after all</span></div><div class="line" id="172321"><span class="nick" style="color:#389600"><a href="#172321" label="[17:23:21]">&lt;aggi&gt;</a></span><span class="message">i mean, it's important, but feasible</span></div><div class="line" id="172535"><span class="nick" style="color:#6c3d55"><a href="#172535" label="[17:25:35]">&lt;bauen1&gt;</a></span><span class="message">It's one of the (few) missing features for tinycc to be (iirc) C11 compliant, so it would be a nice to have</span></div><div class="line" id="172632"><span class="nick" style="color:#389600"><a href="#172632" label="[17:26:32]">&lt;aggi&gt;</a></span><span class="message">reading about it, was mentioned as C99</span></div><div class="line" id="190318"><span class="nick" style="color:#2e2a4a"><a href="#190318" label="[19:03:18]">&lt;oriansj&gt;</a></span><span class="message">well C has many great standards, none of which are perfectly followed by any implementation in existance; Thank you undefined behavior</span></div><div class="line" id="190838"><span class="nick" style="color:#d9d9d9"><a href="#190838" label="[19:08:38]">&lt;theruran&gt;</a></span><span class="message">aggi: I am wondering to what GNU toolchain technical qualities you are referring? I am really curious.</span></div><div class="line" id="191005"><span class="nick" style="color:#389600"><a href="#191005" label="[19:10:05]">&lt;aggi&gt;</a></span><span class="message">theruran: first and foremost, total lines of code .... too much</span></div><div class="line" id="191249"><span class="nick" style="color:#d9d9d9"><a href="#191249" label="[19:12:49]">&lt;theruran&gt;</a></span><span class="message">mmhmmm</span></div><div class="line" id="191424"><span class="nick" style="color:#d9d9d9"><a href="#191424" label="[19:14:24]">&lt;theruran&gt;</a></span><span class="message">I just built libunistring and was somewhat shocked to find it's a mess of macros and it pulls in gnulib for its actual functionality (?)</span></div><div class="line" id="191432"><span class="nick" style="color:#6d2462"><a href="#191432" label="[19:14:32]">&lt;sam_&gt;</a></span><span class="message">welcome to gnulib hell</span></div><div class="line" id="191443"><span class="nick" style="color:#6d2462"><a href="#191443" label="[19:14:43]">&lt;sam_&gt;</a></span><span class="message">libunistring + gettext are particularly bad for this because the author is one of the maintainers of gnulib</span></div><div class="line" id="191450"><span class="nick" style="color:#6d2462"><a href="#191450" label="[19:14:50]">&lt;sam_&gt;</a></span><span class="message">and he freely moves functionality in/out all the time</span></div><div class="line" id="191450"><span class="nick" style="color:#d9d9d9"><a href="#191450" label="[19:14:50]">&lt;theruran&gt;</a></span><span class="message">yikes</span></div><div class="line" id="191533"><span class="nick" style="color:#d9d9d9"><a href="#191533" label="[19:15:33]">&lt;theruran&gt;</a></span><span class="message">I just wanted to find the algorithms for Unicode normalizations</span></div><div class="line" id="191605"><span class="nick" style="color:#d9d9d9"><a href="#191605" label="[19:16:05]">&lt;theruran&gt;</a></span><span class="message">downloaded the source -&gt; didn't get the source :P</span></div><div class="line" id="191616"><span class="nick" style="color:#389600"><a href="#191616" label="[19:16:16]">&lt;aggi&gt;</a></span><span class="message">libunistring was one reason to wipe GNU gettext/intltool from the tree... which was possible btw.</span></div><div class="line" id="191644"><span class="nick" style="color:#389600"><a href="#191644" label="[19:16:44]">&lt;aggi&gt;</a></span><span class="message">neither bdep nor rdep, it's wiped from my tree</span></div><div class="line" id="191712"><span class="nick" style="color:#389600"><a href="#191712" label="[19:17:12]">&lt;aggi&gt;</a></span><span class="message">i am well aware of the disadvantages, yet enough is enough, and i've had enough of GNU</span></div><div class="line" id="192251"><span class="nick" style="color:#389600"><a href="#192251" label="[19:22:51]">&lt;aggi&gt;</a></span><span class="message">for fun i dumped libc/sysdeps/linux/arm/crt1.S from uclibc-ng into arm-tcc assembler ... similar problems</span></div><div class="line" id="195948"><span class="nick" style="color:#bc80bd"><a href="#195948" label="[19:59:48]">&lt;nimaje&gt;</a></span><span class="message">oriansj: hey, UB makes it easier to implement a standard as you can do whatever you want for those cases</span></div><div class="line" id="200843"><span class="nick" style="color:#389600"><a href="#200843" label="[20:08:43]">&lt;aggi&gt;</a></span><span class="message">strangely, this is too much already, a simple load instruction: ldr a2, 1f</span></div><div class="line" id="200855"><span class="nick" style="color:#389600"><a href="#200855" label="[20:08:55]">&lt;aggi&gt;</a></span><span class="message">ok, 1f jumps to a label, got that, seems to work</span></div><div class="line" id="200910"><span class="nick" style="color:#389600"><a href="#200910" label="[20:09:10]">&lt;aggi&gt;</a></span><span class="message">however the identifier a2, no clue, what register this shall on aarch32</span></div><div class="line" id="200917"><span class="nick" style="color:#389600"><a href="#200917" label="[20:09:17]">&lt;aggi&gt;</a></span><span class="message">arm-tcc doesn't recognize it</span></div><div class="line" id="201047"><span class="nick" style="color:#389600"><a href="#201047" label="[20:10:47]">&lt;aggi&gt;</a></span><span class="message">then, i'm trying to navigate developer.arm.com, with w3m browser... fun</span></div><div class="line" id="201139"><span class="nick" style="color:#389600"><a href="#201139" label="[20:11:39]">&lt;aggi&gt;</a></span><span class="message">so, for bootstrapping, at the ASM level: i got a GNU assembler which i couldn't study, it's too much, aarch32 syntax, which i don't understand (yet), and an assembler which doesn't digest a simple ldr a2 1f</span></div><div class="line" id="201355"><span class="nick" style="color:#3c5b35"><a href="#201355" label="[20:13:55]">&lt;unmatched-paren&gt;</a></span><span class="message">aggi: Apparently a2 is a synonym for r1</span></div><div class="line" id="201409"><span class="nick" style="color:#3c5b35"><a href="#201409" label="[20:14:09]">&lt;unmatched-paren&gt;</a></span><span class="message"> <a rel="nofollow" href="https://stackoverflow.com/questions/40516646/arm-assembly-whats-the-difference-between-v1-and-a1-registers">https://stackoverflow.com/questions/40516646/arm-assembly-whats-the-difference-between-v1-and-a1-registers</a> </span></div><div class="line" id="201416"><span class="nick" style="color:#389600"><a href="#201416" label="[20:14:16]">&lt;aggi&gt;</a></span><span class="message">thanks unmatched-paren</span></div><div class="line" id="201552"><span class="nick" style="color:#3c5b35"><a href="#201552" label="[20:15:52]">&lt;unmatched-paren&gt;</a></span><span class="message">aggi: This is a nice illustration <a rel="nofollow" href="https://i.stack.imgur.com/L56Fh.png">https://i.stack.imgur.com/L56Fh.png</a> </span></div><div class="line" id="202017"><span class="nick" style="color:#389600"><a href="#202017" label="[20:20:17]">&lt;aggi&gt;</a></span><span class="message">syntax doesn't match regardless, the jump-label parsing fails too</span></div><div class="line" id="202055"><span class="nick" style="color:#389600"><a href="#202055" label="[20:20:55]">&lt;aggi&gt;</a></span><span class="message">and this isn't the best way to practice asm</span></div><div class="line" id="202211"><span class="nick" style="color:#389600"><a href="#202211" label="[20:22:11]">&lt;aggi&gt;</a></span><span class="message">i'll do this for now, hook into binutils-as, and hack the missing _Complex extension instead, for musl-libc to pass with arm-tcc at least</span></div><div class="line" id="202321"><span class="nick" style="color:#389600"><a href="#202321" label="[20:23:21]">&lt;aggi&gt;</a></span><span class="message">aarch32 asm requires extensive studies first, before i can rewrite this</span></div><div class="line" id="211739"><span class="nick" style="color:#389600"><a href="#211739" label="[21:17:39]">&lt;aggi&gt;</a></span><span class="message">ok, checked dietlibc as an alternative.... this too contains aarch32 ASM syntax which arm-tcc cannot digest</span></div><div class="line" id="211802"><span class="nick" style="color:#389600"><a href="#211802" label="[21:18:02]">&lt;aggi&gt;</a></span><span class="message">which, raises a principle question, a fundemental one, how to approach ASM level of bootstrapping</span></div><div class="line" id="212007"><span class="nick" style="color:#389600"><a href="#212007" label="[21:20:07]">&lt;aggi&gt;</a></span><span class="message">because, it is irritating, if some aarch32 &quot;RISC&quot; assembly requires a toolchain with a dozen millions of LoC</span></div><div class="line" id="212046"><span class="nick" style="color:#389600"><a href="#212046" label="[21:20:46]">&lt;aggi&gt;</a></span><span class="message">and in practice, although aarch32 may not have been the right choice to begin with, arm-tcc got just that, an aarch32 assembler</span></div><div class="line" id="212114"><span class="nick" style="color:#389600"><a href="#212114" label="[21:21:14]">&lt;aggi&gt;</a></span><span class="message">yet, this assembler, couldn't yet digest aarch32 asm from musl-libc, uclibc-ng, and dietlibc</span></div><div class="line" id="212230"><span class="nick" style="color:#389600"><a href="#212230" label="[21:22:30]">&lt;aggi&gt;</a></span><span class="message">and vendor-locking into any ASM syntax for any ISA is the problem here, to invest years of work to learn just that</span></div><div class="line" id="212320"><span class="nick" style="color:#389600"><a href="#212320" label="[21:23:20]">&lt;aggi&gt;</a></span><span class="message">i did finish 99.9 of builds with a tcc-only toolchain already, 598 passed compile-time, runtime only random tests seemed ok too</span></div><div class="line" id="212345"><span class="nick" style="color:#389600"><a href="#212345" label="[21:23:45]">&lt;aggi&gt;</a></span><span class="message">however, those 0.01% of builds relying on aarch32 (or whatever) asm which is NOT supported by tcc...</span></div><div class="line" id="212413"><span class="nick" style="color:#389600"><a href="#212413" label="[21:24:13]">&lt;aggi&gt;</a></span><span class="message">and, if i wanted to dig down deeply into ASM, i think a gigatron ttl or Z80 or whatever is a better choice</span></div><div class="line" id="212442"><span class="nick" style="color:#389600"><a href="#212442" label="[21:24:42]">&lt;aggi&gt;</a></span><span class="message">given, one idea of mine, was maths, something which doesn't get into my way when programming</span></div><div class="line" id="212503"><span class="nick" style="color:#389600"><a href="#212503" label="[21:25:03]">&lt;aggi&gt;</a></span><span class="message">in this regard, Ti89 basic was rather intruiging, however, this was never open-sourced to my knowledge</span></div><div class="line" id="212523"><span class="nick" style="color:#389600"><a href="#212523" label="[21:25:23]">&lt;aggi&gt;</a></span><span class="message">hence, this doesn't pass the supply-chain verification, bootstrapping</span></div><div class="line" id="212609"><span class="nick" style="color:#389600"><a href="#212609" label="[21:26:09]">&lt;aggi&gt;</a></span><span class="message">and what remains then at the low-level realm, z80 got the appeal of 40years stability with its ASM</span></div><div class="line" id="212616"><span class="nick" style="color:#389600"><a href="#212616" label="[21:26:16]">&lt;aggi&gt;</a></span><span class="message">and gigatron ttl got some offering too</span></div><div class="line" id="212638"><span class="nick" style="color:#389600"><a href="#212638" label="[21:26:38]">&lt;aggi&gt;</a></span><span class="message">and then, i'll disconnect internet, fully, for the rest of my live, never again</span></div><div class="line" id="212655"><span class="nick" style="color:#389600"><a href="#212655" label="[21:26:55]">&lt;aggi&gt;</a></span><span class="message">and grab my maths book, some asm book from the library, and play with this</span></div><div class="line" id="212722"><span class="nick" style="color:#389600"><a href="#212722" label="[21:27:22]">&lt;aggi&gt;</a></span><span class="message">terminating my ISP contract, will save me another 30Euros/month</span></div><div class="line" id="212928"><span class="nick" style="color:#389600"><a href="#212928" label="[21:29:28]">&lt;aggi&gt;</a></span><span class="message">sadly, the east-german semiconductor manufacturing is defunct since 1990, add to this</span></div><div class="line" id="213029"><span class="nick" style="color:#389600"><a href="#213029" label="[21:30:29]">&lt;aggi&gt;</a></span><span class="message">i mean, the aarch32 ASM hacks, this can be solved, what can't be is some very fundemental problems</span></div><div class="line" id="213046"><span class="nick" style="color:#389600"><a href="#213046" label="[21:30:46]">&lt;aggi&gt;</a></span><span class="message">and the moment when, i cannot read developer.arm.com with w3m browser anymore.... discuss</span></div><div class="line" id="220539"><span class="nick" style="color:#bc80bd"><a href="#220539" label="[22:05:39]">&lt;nimaje&gt;</a></span><span class="message">oriansj: hm, for a propper malloc for M2libc maybe steal the one from scc libc, seems to be a small freelist malloc backed by brk (<a rel="nofollow" href="http://www.simple-cc.org/">http://www.simple-cc.org/</a>) </span></div><div class="line" id="221640"><span class="nick" style="color:#389600"><a href="#221640" label="[22:16:40]">&lt;aggi&gt;</a></span><span class="message">src/libc/arch/arm/crt-posix.s doesn't pass with arm-tcc</span></div><div class="line" id="222604"><span class="nick" style="color:#389600"><a href="#222604" label="[22:26:04]">&lt;aggi&gt;</a></span><span class="message">seems binutils/gas specific, or any other standard i am not aware of</span></div><div class="line" id="222819"><span class="nick" style="color:#389600"><a href="#222819" label="[22:28:19]">&lt;aggi&gt;</a></span><span class="message">ldr r3,=_environ</span></div><div class="line" id="233523"><span class="nick" style="color:#d9d9d9"><a href="#233523" label="[23:35:23]">&lt;theruran&gt;</a></span><span class="message">how is the tcc project at accepting patches? can it be patched to accept the ASM that aggi needs?</span></div><div class="line" id="234231"><span class="nick" style="color:#6b8072"><a href="#234231" label="[23:42:31]">&lt;stikonas&gt;</a></span><span class="message">theruran: it's a mess, I think anybody can push code to tcc without any review</span></div><div class="line" id="234312"><span class="nick" style="color:#6b8072"><a href="#234312" label="[23:43:12]">&lt;stikonas&gt;</a></span><span class="message">and there hasn't been any stabilization release for a long time</span></div><div class="line" id="234320"><span class="nick" style="color:#6b8072"><a href="#234320" label="[23:43:20]">&lt;stikonas&gt;</a></span><span class="message">0.9.27 is quite old</span></div><div class="line" id="234619"><span class="nick" style="color:#af8d2f"><a href="#234619" label="[23:46:19]">&lt;rkeene&gt;</a></span><span class="message">There's the mob branch, at least</span></div><div class="line" id="235024"><span class="nick" style="color:#6b8072"><a href="#235024" label="[23:50:24]">&lt;stikonas&gt;</a></span><span class="message">well, that's what I'm mentioning, mob branch is anybody pushes whatever they want</span></div><div class="line" id="235826"><span class="nick" style="color:#d9d9d9"><a href="#235826" label="[23:58:26]">&lt;theruran&gt;</a></span><span class="message">wow</span></div><br /></div></body></html>