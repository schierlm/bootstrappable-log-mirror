<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-12-26.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011134"><span class="nick" style="color:#389600"><a href="#011134" label="[01:11:34]">&lt;fossy&gt;</a></span><span class="message">i think the 6 hrs is new... i think it was lower in the past</span></div><div class="line" id="011324"><span class="nick" style="color:#389600"><a href="#011324" label="[01:13:24]">&lt;fossy&gt;</a></span><span class="message">oh, no archive.org says it has alwyas been 6hrs</span></div><div class="line" id="012434"><span class="nick" style="color:#8dd3c7"><a href="#012434" label="[01:24:34]">&lt;Googulator&gt;</a></span><span class="message">fossy: is there something going wrong with GitHub CI now? <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/actions/runs/7324492000/job/19948430465?pr=361">https://github.com/fosslinux/live-bootstrap/actions/runs/7324492000/job/19948430465?pr=361</a>  has been running for over 2 hours, but still printing messages dated 2023-12-25T22:48:18.6121439Z</span></div><div class="line" id="012543"><span class="nick" style="color:#389600"><a href="#012543" label="[01:25:43]">&lt;fossy&gt;</a></span><span class="message">oh, that's not all too uncommon, sometimes the log bugs out a bit during CI runs. when the run finishes the full log will be there</span></div><div class="line" id="012601"><span class="nick" style="color:#389600"><a href="#012601" label="[01:26:01]">&lt;fossy&gt;</a></span><span class="message">what's the status of your PR</span></div><div class="line" id="012620"><span class="nick" style="color:#389600"><a href="#012620" label="[01:26:20]">&lt;fossy&gt;</a></span><span class="message">cause i see gradually more and more things being added to it</span></div><div class="line" id="012635"><span class="nick" style="color:#2e2a4a"><a href="#012635" label="[01:26:35]">&lt;stikonas&gt;</a></span><span class="message">hmm, I think after returning from syscall, we end up with some unclean state which works fine while we are in our code, but randomly bombs out (probably on timer interrupt) while in UEFI code (e.g. printing to console)</span></div><div class="line" id="012648"><span class="nick" style="color:#8dd3c7"><a href="#012648" label="[01:26:48]">&lt;Googulator&gt;</a></span><span class="message">Hopefully it's finished now, I'm just waiting for one final clean CI run</span></div><div class="line" id="012817"><span class="nick" style="color:#8dd3c7"><a href="#012817" label="[01:28:17]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/354">https://github.com/fosslinux/live-bootstrap/pull/354</a>  is fully done</span></div><div class="line" id="012837"><span class="nick" style="color:#389600"><a href="#012837" label="[01:28:37]">&lt;fossy&gt;</a></span><span class="message">oh! i missed that</span></div><div class="line" id="012849"><span class="nick" style="color:#389600"><a href="#012849" label="[01:28:49]">&lt;fossy&gt;</a></span><span class="message">my brain had #354 and #361 as the same PR</span></div><div class="line" id="012856"><span class="nick" style="color:#8dd3c7"><a href="#012856" label="[01:28:56]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/361">https://github.com/fosslinux/live-bootstrap/pull/361</a>  is the one that's still running CI</span></div><div class="line" id="012907"><span class="nick" style="color:#8dd3c7"><a href="#012907" label="[01:29:07]">&lt;Googulator&gt;</a></span><span class="message">361 includes / depends on 354</span></div><div class="line" id="012913"><span class="nick" style="color:#389600"><a href="#012913" label="[01:29:13]">&lt;fossy&gt;</a></span><span class="message">yep, i see that</span></div><div class="line" id="013045"><span class="nick" style="color:#389600"><a href="#013045" label="[01:30:45]">&lt;fossy&gt;</a></span><span class="message">also - just one thing im noting in the 361 commit history, when getting changes from one branch into another branch, prefer rebase over merge - merge creates these merge commits which pollute the commit history</span></div><div class="line" id="013102"><span class="nick" style="color:#389600"><a href="#013102" label="[01:31:02]">&lt;fossy&gt;</a></span><span class="message">dont worry about removing the one that's there but just for future reference</span></div><div class="line" id="013214"><span class="nick" style="color:#389600"><a href="#013214" label="[01:32:14]">&lt;fossy&gt;</a></span><span class="message">stikonas: if you get a few minutes could you review <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/359.">https://github.com/fosslinux/live-bootstrap/pull/359.</a>  it's pretty typical/straightforward. gprofng is disabled because it's autotools is busted lol and it's not important</span></div><div class="line" id="013307"><span class="nick" style="color:#2e2a4a"><a href="#013307" label="[01:33:07]">&lt;stikonas&gt;</a></span><span class="message">sure, let me check</span></div><div class="line" id="013438"><span class="nick" style="color:#8dd3c7"><a href="#013438" label="[01:34:38]">&lt;Googulator&gt;</a></span><span class="message">I rather disagree with the notion that merges &quot;pollute&quot; the history - in fact, having merge commits enables a more accurate way of representing development history, as opposed to falsifying it to fit an imperfect VCS tools's time linearity requirements</span></div><div class="line" id="013531"><span class="nick" style="color:#8dd3c7"><a href="#013531" label="[01:35:31]">&lt;Googulator&gt;</a></span><span class="message">probably has to do with the fact that I'm coming from a Mercurial background</span></div><div class="line" id="013545"><span class="nick" style="color:#2e2a4a"><a href="#013545" label="[01:35:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah, looks alright</span></div><div class="line" id="013638"><span class="nick" style="color:#2e2a4a"><a href="#013638" label="[01:36:38]">&lt;stikonas&gt;</a></span><span class="message">I know plenty of people from mercurial background who don't like merges...</span></div><div class="line" id="013644"><span class="nick" style="color:#8dd3c7"><a href="#013644" label="[01:36:44]">&lt;Googulator&gt;</a></span><span class="message">I know, this is sort of a religious issue</span></div><div class="line" id="013652"><span class="nick" style="color:#2e2a4a"><a href="#013652" label="[01:36:52]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="013735"><span class="nick" style="color:#8dd3c7"><a href="#013735" label="[01:37:35]">&lt;Googulator&gt;</a></span><span class="message">merges are indeed a PITA to get right in something like SVN (was a big reason why we switched from SVN to Hg at my old employer)</span></div><div class="line" id="013941"><span class="nick" style="color:#389600"><a href="#013941" label="[01:39:41]">&lt;fossy&gt;</a></span><span class="message">i agree with that in terms of representing development history - i'm ok with them for that purpose. but the typical git workflow i've used in most projects ive contributed to is that commit history *is not* time linear, but rather each commit represents a distinct change to the codebase. personally i like that more because it makes commit history much more ergonomic to work with; i know</span></div><div class="line" id="013944"><span class="nick" style="color:#389600"><a href="#013944" label="[01:39:44]">&lt;fossy&gt;</a></span><span class="message">that if i cherry-pick XYZ commit then I am getting exactly what I think I am and i don't have to read all of the surrounding context in the commit log to determine if i need to care about merge commits etc</span></div><div class="line" id="013947"><span class="nick" style="color:#2e2a4a"><a href="#013947" label="[01:39:47]">&lt;stikonas&gt;</a></span><span class="message">well, we used Hg at my work when I started, but soon switched to git (probably within a year) and most people somehow don't like merges</span></div><div class="line" id="014001"><span class="nick" style="color:#389600"><a href="#014001" label="[01:40:01]">&lt;fossy&gt;</a></span><span class="message">(another thing is that git merges aren't implemented very well :P)</span></div><div class="line" id="014013"><span class="nick" style="color:#2e2a4a"><a href="#014013" label="[01:40:13]">&lt;stikonas&gt;</a></span><span class="message">well, better than svn merges...</span></div><div class="line" id="014027"><span class="nick" style="color:#389600"><a href="#014027" label="[01:40:27]">&lt;fossy&gt;</a></span><span class="message">i haven't had the displeasure of working with svn too much</span></div><div class="line" id="014056"><span class="nick" style="color:#2e2a4a"><a href="#014056" label="[01:40:56]">&lt;stikonas&gt;</a></span><span class="message">it's not too bad, there are way worse systems...</span></div><div class="line" id="014114"><span class="nick" style="color:#2e2a4a"><a href="#014114" label="[01:41:14]">&lt;stikonas&gt;</a></span><span class="message">I know hardware engineers often use perforce, that one is a total disaster</span></div><div class="line" id="014145"><span class="nick" style="color:#389600"><a href="#014145" label="[01:41:45]">&lt;fossy&gt;</a></span><span class="message">yeah i have not heard good things about that one</span></div><div class="line" id="014212"><span class="nick" style="color:#8dd3c7"><a href="#014212" label="[01:42:12]">&lt;Googulator&gt;</a></span><span class="message">perforce is the one that requires a constant nailed-up network connection, right?</span></div><div class="line" id="014238"><span class="nick" style="color:#389600"><a href="#014238" label="[01:42:38]">&lt;fossy&gt;</a></span><span class="message">i believe so</span></div><div class="line" id="014247"><span class="nick" style="color:#8dd3c7"><a href="#014247" label="[01:42:47]">&lt;Googulator&gt;</a></span><span class="message">can't even list working copy status without talking to The One Great Server</span></div><div class="line" id="014348"><span class="nick" style="color:#8dd3c7"><a href="#014348" label="[01:43:48]">&lt;Googulator&gt;</a></span><span class="message">SVN can at least make do with requiring a connection only when running commands, and even then only some commands need to talk over the network</span></div><div class="line" id="014354"><span class="nick" style="color:#2e2a4a"><a href="#014354" label="[01:43:54]">&lt;stikonas&gt;</a></span><span class="message">also it is often used as glorified FTP server rather than version control...</span></div><div class="line" id="014412"><span class="nick" style="color:#8dd3c7"><a href="#014412" label="[01:44:12]">&lt;Googulator&gt;</a></span><span class="message">I've seen that done in SVN too</span></div><div class="line" id="014430"><span class="nick" style="color:#2e2a4a"><a href="#014430" label="[01:44:30]">&lt;stikonas&gt;</a></span><span class="message">well, I guess any system can be misused</span></div><div class="line" id="014438"><span class="nick" style="color:#2e2a4a"><a href="#014438" label="[01:44:38]">&lt;stikonas&gt;</a></span><span class="message">also people commit huge files to git...</span></div><div class="line" id="014445"><span class="nick" style="color:#2e2a4a"><a href="#014445" label="[01:44:45]">&lt;stikonas&gt;</a></span><span class="message">which is even worse</span></div><div class="line" id="014522"><span class="nick" style="color:#2e2a4a"><a href="#014522" label="[01:45:22]">&lt;stikonas&gt;</a></span><span class="message">ok, so I've got some eveidence that UEFI timer interrupt is causing me problems...</span></div><div class="line" id="014537"><span class="nick" style="color:#8dd3c7"><a href="#014537" label="[01:45:37]">&lt;Googulator&gt;</a></span><span class="message">at my old employer, after an incident when someone committed several GB of intermediate build artifacts, we came to calling such content &quot;adultery&quot;</span></div><div class="line" id="014556"><span class="nick" style="color:#8dd3c7"><a href="#014556" label="[01:45:56]">&lt;Googulator&gt;</a></span><span class="message">as in &quot;Thou shalt not commit adultery&quot;</span></div><div class="line" id="014702"><span class="nick" style="color:#389600"><a href="#014702" label="[01:47:02]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="014703"><span class="nick" style="color:#8dd3c7"><a href="#014703" label="[01:47:03]">&lt;Googulator&gt;</a></span><span class="message">we maintained a list of &quot;known adulterous commits&quot; in a push hook that would block such commits from being pushed upstream again</span></div><div class="line" id="014706"><span class="nick" style="color:#2e2a4a"><a href="#014706" label="[01:47:06]">&lt;stikonas&gt;</a></span><span class="message">setting UEFI process priority to the highest level seems to &quot;temporarily&quot; avoid hang, though as soon as I call in back into UEFI, timer interrupt is reenabled</span></div><div class="line" id="014713"><span class="nick" style="color:#2e2a4a"><a href="#014713" label="[01:47:13]">&lt;stikonas&gt;</a></span><span class="message">and system hangs...</span></div><div class="line" id="014827"><span class="nick" style="color:#8dd3c7"><a href="#014827" label="[01:48:27]">&lt;Googulator&gt;</a></span><span class="message">some good news: I now see CI logs up to 2023-12-26T00:32:12.5381402Z in raw mode</span></div><div class="line" id="014837"><span class="nick" style="color:#8dd3c7"><a href="#014837" label="[01:48:37]">&lt;Googulator&gt;</a></span><span class="message">that's 16 minutes ago</span></div><div class="line" id="014844"><span class="nick" style="color:#389600"><a href="#014844" label="[01:48:44]">&lt;fossy&gt;</a></span><span class="message">Googulator: thanks for your help with maturing simplify btw, i appreciate it alot, you identified some problems it would have taken me a fair bit longer to recognise (the benefit of second pair of eyes!)</span></div><div class="line" id="015048"><span class="nick" style="color:#8dd3c7"><a href="#015048" label="[01:50:48]">&lt;Googulator&gt;</a></span><span class="message">...and it's done, uploading pass2 image as we speak</span></div><div class="line" id="015101"><span class="nick" style="color:#8dd3c7"><a href="#015101" label="[01:51:01]">&lt;Googulator&gt;</a></span><span class="message">(looks like it might be worth adding compression, rathe than just tar, at this point)</span></div><div class="line" id="015151"><span class="nick" style="color:#389600"><a href="#015151" label="[01:51:51]">&lt;fossy&gt;</a></span><span class="message">for the transfers between passes?</span></div><div class="line" id="015157"><span class="nick" style="color:#8dd3c7"><a href="#015157" label="[01:51:57]">&lt;Googulator&gt;</a></span><span class="message">yes</span></div><div class="line" id="015216"><span class="nick" style="color:#389600"><a href="#015216" label="[01:52:16]">&lt;fossy&gt;</a></span><span class="message">quite possibly, a gzip would probably be optimal</span></div><div class="line" id="015219"><span class="nick" style="color:#8dd3c7"><a href="#015219" label="[01:52:19]">&lt;Googulator&gt;</a></span><span class="message">the final tarball has compressed images inside, so it's not that important there</span></div><div class="line" id="015228"><span class="nick" style="color:#8dd3c7"><a href="#015228" label="[01:52:28]">&lt;Googulator&gt;</a></span><span class="message">gzip is -czf, right?</span></div><div class="line" id="015232"><span class="nick" style="color:#389600"><a href="#015232" label="[01:52:32]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="015243"><span class="nick" style="color:#8dd3c7"><a href="#015243" label="[01:52:43]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://xkcd.com/1168/">https://xkcd.com/1168/</a>  comes to mind</span></div><div class="line" id="015306"><span class="nick" style="color:#389600"><a href="#015306" label="[01:53:06]">&lt;fossy&gt;</a></span><span class="message">uncompressed = network is too slow, xz = too long to compress, gzip = probably sweet spot</span></div><div class="line" id="015306"><span class="nick" style="color:#8dd3c7"><a href="#015306" label="[01:53:06]">&lt;Googulator&gt;</a></span><span class="message">bz2?</span></div><div class="line" id="015335"><span class="nick" style="color:#2e2a4a"><a href="#015335" label="[01:53:35]">&lt;stikonas&gt;</a></span><span class="message">bz2 is probably much slower than gzip</span></div><div class="line" id="015401"><span class="nick" style="color:#389600"><a href="#015401" label="[01:54:01]">&lt;fossy&gt;</a></span><span class="message">bz2 can be even slower than xz</span></div><div class="line" id="015407"><span class="nick" style="color:#8dd3c7"><a href="#015407" label="[01:54:07]">&lt;Googulator&gt;</a></span><span class="message">ouch</span></div><div class="line" id="015411"><span class="nick" style="color:#389600"><a href="#015411" label="[01:54:11]">&lt;fossy&gt;</a></span><span class="message">in some cases</span></div><div class="line" id="015435"><span class="nick" style="color:#389600"><a href="#015435" label="[01:54:35]">&lt;fossy&gt;</a></span><span class="message">especially for decompression i believe</span></div><div class="line" id="015453"><span class="nick" style="color:#389600"><a href="#015453" label="[01:54:53]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.rootusers.com/gzip-vs-bzip2-vs-xz-performance-comparison/">https://www.rootusers.com/gzip-vs-bzip2-vs-xz-performance-comparison/</a>  agrees</span></div><div class="line" id="015956"><span class="nick" style="color:#8dd3c7"><a href="#015956" label="[01:59:56]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/actions/runs/7324492000/job/19950029040?pr=361">https://github.com/fosslinux/live-bootstrap/actions/runs/7324492000/job/19950029040?pr=361</a>  GCC 10 build started... good progress</span></div><div class="line" id="020132"><span class="nick" style="color:#8dd3c7"><a href="#020132" label="[02:01:32]">&lt;Googulator&gt;</a></span><span class="message">I was thinking, wouldn't it be enough to do a 2-stage GCC 13 bootstrap when --update-checksums isn't given?</span></div><div class="line" id="020203"><span class="nick" style="color:#389600"><a href="#020203" label="[02:02:03]">&lt;fossy&gt;</a></span><span class="message">what do you mean by 2-stage?</span></div><div class="line" id="020215"><span class="nick" style="color:#8dd3c7"><a href="#020215" label="[02:02:15]">&lt;Googulator&gt;</a></span><span class="message">GCC 13 stage 3 is meant to rebuild the exact same binaries as stage 2 - indeed, a mismatch is considered a build failure -, but the binaries are already verified by the checksum</span></div><div class="line" id="020219"><span class="nick" style="color:#389600"><a href="#020219" label="[02:02:19]">&lt;fossy&gt;</a></span><span class="message">as in removing the third stage from gcc build where it compars?</span></div><div class="line" id="020227"><span class="nick" style="color:#389600"><a href="#020227" label="[02:02:27]">&lt;fossy&gt;</a></span><span class="message">hmm, yes, that makes sense</span></div><div class="line" id="020231"><span class="nick" style="color:#389600"><a href="#020231" label="[02:02:31]">&lt;fossy&gt;</a></span><span class="message">does GCC configure supoprt that</span></div><div class="line" id="020241"><span class="nick" style="color:#8dd3c7"><a href="#020241" label="[02:02:41]">&lt;Googulator&gt;</a></span><span class="message">not configure, but make</span></div><div class="line" id="020342"><span class="nick" style="color:#8dd3c7"><a href="#020342" label="[02:03:42]">&lt;Googulator&gt;</a></span><span class="message">using &quot;make bootstrap2&quot;</span></div><div class="line" id="020344"><span class="nick" style="color:#6b8072"><a href="#020344" label="[02:03:44]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, we can remove it</span></div><div class="line" id="020357"><span class="nick" style="color:#8dd3c7"><a href="#020357" label="[02:03:57]">&lt;Googulator&gt;</a></span><span class="message">(plain &quot;make&quot; is equivalent to &quot;make bootstrap&quot;)</span></div><div class="line" id="020456"><span class="nick" style="color:#8dd3c7"><a href="#020456" label="[02:04:56]">&lt;Googulator&gt;</a></span><span class="message">I'd still do 3-stage when updating checksums</span></div><div class="line" id="031141"><span class="nick" style="color:#8dd3c7"><a href="#031141" label="[03:11:41]">&lt;Googulator&gt;</a></span><span class="message">fossy: what's the use case for the current default of deleting the bootstrap (&quot;tmp&quot;) directory after bootstrap is done?</span></div><div class="line" id="031236"><span class="nick" style="color:#8dd3c7"><a href="#031236" label="[03:12:36]">&lt;Googulator&gt;</a></span><span class="message">As I understand it, there's nothing temporary about it, since it's where the sole final product of the bootstrap process ends up created.</span></div><div class="line" id="031613"><span class="nick" style="color:#8dd3c7"><a href="#031613" label="[03:16:13]">&lt;Googulator&gt;</a></span><span class="message">Is this residue from a concept similar to how builder-hex0 was originally meant to be used (i.e. writing the result back to the virtual disk at sector 0, shutting down the VM, then extracting the build result from the disk, and finally deleting the virtual disk as cleanup)?</span></div><div class="line" id="031806"><span class="nick" style="color:#8dd3c7"><a href="#031806" label="[03:18:06]">&lt;Googulator&gt;</a></span><span class="message">IMO the directory name should default to &quot;build&quot; (by analogy with GNU build system) or &quot;target&quot; (by analogy with Maven)</span></div><div class="line" id="032634"><span class="nick" style="color:#8dd3c7"><a href="#032634" label="[03:26:34]">&lt;Googulator&gt;</a></span><span class="message">ouch, GitHub is being buggy again: <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/releases/tag/where-i-started">https://github.com/Googulator/live-bootstrap/releases/tag/where-i-started</a> </span></div><div class="line" id="032707"><span class="nick" style="color:#8dd3c7"><a href="#032707" label="[03:27:07]">&lt;Googulator&gt;</a></span><span class="message">&quot;fosslinux tagged this Nov 7&quot; - no, I've tagged it, right now...</span></div><div class="line" id="035556"><span class="nick" style="color:#389600"><a href="#035556" label="[03:55:56]">&lt;fossy&gt;</a></span><span class="message">yes, it's a residue, that is a bad default</span></div><div class="line" id="035609"><span class="nick" style="color:#389600"><a href="#035609" label="[03:56:09]">&lt;fossy&gt;</a></span><span class="message">tmp is also a residue, i just haven't thought of a better name</span></div><div class="line" id="035622"><span class="nick" style="color:#389600"><a href="#035622" label="[03:56:22]">&lt;fossy&gt;</a></span><span class="message">target i think is probably my preference?</span></div><div class="line" id="035652"><span class="nick" style="color:#389600"><a href="#035652" label="[03:56:52]">&lt;fossy&gt;</a></span><span class="message">wow, wtf</span></div><div class="line" id="035700"><span class="nick" style="color:#389600"><a href="#035700" label="[03:57:00]">&lt;fossy&gt;</a></span><span class="message">how did you do that?</span></div><div class="line" id="035727"><span class="nick" style="color:#389600"><a href="#035727" label="[03:57:27]">&lt;fossy&gt;</a></span><span class="message">seems to be taking the commit author and date?!</span></div><div class="line" id="035744"><span class="nick" style="color:#8dd3c7"><a href="#035744" label="[03:57:44]">&lt;Googulator&gt;</a></span><span class="message">$ git tag where-i-started 47feb75; git push origin where-i-started</span></div><div class="line" id="035759"><span class="nick" style="color:#8dd3c7"><a href="#035759" label="[03:57:59]">&lt;Googulator&gt;</a></span><span class="message">(&quot;origin&quot; is Googulator/live-bootstrap in this case)</span></div><div class="line" id="035820"><span class="nick" style="color:#8dd3c7"><a href="#035820" label="[03:58:20]">&lt;Googulator&gt;</a></span><span class="message">GitHub... more like HitBug</span></div><div class="line" id="035915"><span class="nick" style="color:#8dd3c7"><a href="#035915" label="[03:59:15]">&lt;Googulator&gt;</a></span><span class="message">&quot;target&quot; sounds good to me, especially since even the directory layout ends up very similar to Maven's &quot;target&quot;</span></div><div class="line" id="035939"><span class="nick" style="color:#389600"><a href="#035939" label="[03:59:39]">&lt;fossy&gt;</a></span><span class="message">ohh.. git doesn't store author information for a &quot;lightweight&quot; tag, the default, only for a &quot;annotated&quot; tag, created with -a</span></div><div class="line" id="035951"><span class="nick" style="color:#389600"><a href="#035951" label="[03:59:51]">&lt;fossy&gt;</a></span><span class="message">github, should not be interporlating author information from a lightweight tag</span></div><div class="line" id="040023"><span class="nick" style="color:#8dd3c7"><a href="#040023" label="[04:00:23]">&lt;Googulator&gt;</a></span><span class="message">I'd definitely default to preserving target, the question is, do we even need an option?</span></div><div class="line" id="040043"><span class="nick" style="color:#389600"><a href="#040043" label="[04:00:43]">&lt;fossy&gt;</a></span><span class="message">nah, i reckon let's just kill --preserve and make it the default</span></div><div class="line" id="040127"><span class="nick" style="color:#8dd3c7"><a href="#040127" label="[04:01:27]">&lt;Googulator&gt;</a></span><span class="message">yeah, an option for &quot;waste several hours building, then nuke the result from orbit&quot; doesn't seem to make any sense</span></div><div class="line" id="040156"><span class="nick" style="color:#8dd3c7"><a href="#040156" label="[04:01:56]">&lt;Googulator&gt;</a></span><span class="message">maybe ignore --preserve for backwards compatibility</span></div><div class="line" id="040815"><span class="nick" style="color:#389600"><a href="#040815" label="[04:08:15]">&lt;fossy&gt;</a></span><span class="message">eh, we have enough churn at the moment that i don't really care if it's not backward compatible</span></div><div class="line" id="041339"><span class="nick" style="color:#8dd3c7"><a href="#041339" label="[04:13:39]">&lt;Googulator&gt;</a></span><span class="message">should we also remove tmpfs support?</span></div><div class="line" id="041348"><span class="nick" style="color:#8dd3c7"><a href="#041348" label="[04:13:48]">&lt;Googulator&gt;</a></span><span class="message">Or does that have some real use case?</span></div><div class="line" id="043353"><span class="nick" style="color:#8dd3c7"><a href="#043353" label="[04:33:53]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/actions/runs/7324492000/job/19950029040?pr=361">https://github.com/fosslinux/live-bootstrap/actions/runs/7324492000/job/19950029040?pr=361</a>  ladies and gentlemen, the first legit green CI run since simplify :)</span></div><div class="line" id="043443"><span class="nick" style="color:#8dd3c7"><a href="#043443" label="[04:34:43]">&lt;Googulator&gt;</a></span><span class="message">created <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/368">https://github.com/fosslinux/live-bootstrap/pull/368</a>  for removing --preserve</span></div><div class="line" id="043517"><span class="nick" style="color:#8dd3c7"><a href="#043517" label="[04:35:17]">&lt;Googulator&gt;</a></span><span class="message">I kept tmpfs support for now, as it's not actively harmful, and may even be useful on systems with slow storage and lots of RAM</span></div><div class="line" id="050405"><span class="nick" style="color:#8dd3c7"><a href="#050405" label="[05:04:05]">&lt;Googulator&gt;</a></span><span class="message">looks like total CI time right now is just barely below 6h</span></div><div class="line" id="053113"><span class="nick" style="color:#80b1d3"><a href="#053113" label="[05:31:13]">&lt;Googulator47&gt;</a></span><span class="message">Looks like others have also had issues downloading sources using Requests: <a rel="nofollow" href="https://gitlab.com/freedesktop-sdk/freedesktop-sdk-binary-seed/-/blob/main/plugins/sources/live_bootstrap_manifest.py?ref_type=heads#L109">https://gitlab.com/freedesktop-sdk/freedesktop-sdk-binary-seed/-/blob/main/plugins/sources/live_bootstrap_manifest.py?ref_type=heads#L109</a> </span></div><div class="line" id="053211"><span class="nick" style="color:#8dd3c7"><a href="#053211" label="[05:32:11]">&lt;Googulator&gt;</a></span><span class="message">&quot;BuildStream/2&quot; working as a user agent suggests that requests specifically is blacklisted</span></div><div class="line" id="053241"><span class="nick" style="color:#8dd3c7"><a href="#053241" label="[05:32:41]">&lt;Googulator&gt;</a></span><span class="message">in which case we can just say &quot;User-Agent: live-bootstrap/2023&quot;</span></div><div class="line" id="061823"><span class="nick" style="color:#389600"><a href="#061823" label="[06:18:23]">&lt;fossy&gt;</a></span><span class="message">i use tmpfs regularly, RAM is faster than storage, i have a fair bit available, and reduces wear on my SSD</span></div><div class="line" id="061837"><span class="nick" style="color:#389600"><a href="#061837" label="[06:18:37]">&lt;fossy&gt;</a></span><span class="message">(even though SSDs do admittedly have a fairly high TBW these days)</span></div><div class="line" id="061935"><span class="nick" style="color:#8dd3c7"><a href="#061935" label="[06:19:35]">&lt;Googulator&gt;</a></span><span class="message">OK, then it's indeed a valid usecase</span></div><div class="line" id="062028"><span class="nick" style="color:#8dd3c7"><a href="#062028" label="[06:20:28]">&lt;Googulator&gt;</a></span><span class="message">although a simple change I included in that patch (mkdir -&gt; makedirs) means it's now possible to do &quot;-t /tmp/bootstrap&quot;</span></div><div class="line" id="062114"><span class="nick" style="color:#389600"><a href="#062114" label="[06:21:14]">&lt;fossy&gt;</a></span><span class="message">ok, i'm happy with #361</span></div><div class="line" id="062238"><span class="nick" style="color:#8dd3c7"><a href="#062238" label="[06:22:38]">&lt;Googulator&gt;</a></span><span class="message">Thanks!</span></div><div class="line" id="062327"><span class="nick" style="color:#8dd3c7"><a href="#062327" label="[06:23:27]">&lt;Googulator&gt;</a></span><span class="message">I guess it's time for me to rebase &amp; clean up the bare metal work on top of that now :)</span></div><div class="line" id="062456"><span class="nick" style="color:#8dd3c7"><a href="#062456" label="[06:24:56]">&lt;Googulator&gt;</a></span><span class="message">I made gzipping a separate PR (<a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/367">https://github.com/fosslinux/live-bootstrap/pull/367</a>),  it seems to not break things, but also it seems GH Actions is already using gzip on the fly, so the actual amount transmitted through the network ends up being exactly the same</span></div><div class="line" id="062621"><span class="nick" style="color:#389600"><a href="#062621" label="[06:26:21]">&lt;fossy&gt;</a></span><span class="message">github actions, you suck, &quot;The workflow is not valid. .github/workflows/bwrap.yml: Anchors are not currently supported.&quot;, this is just a YAML parsing thing, literally just use a yaml parsing library that supports it -.-</span></div><div class="line" id="062724"><span class="nick" style="color:#8dd3c7"><a href="#062724" label="[06:27:24]">&lt;Googulator&gt;</a></span><span class="message">is that in my code?</span></div><div class="line" id="062727"><span class="nick" style="color:#8dd3c7"><a href="#062727" label="[06:27:27]">&lt;Googulator&gt;</a></span><span class="message">or something else?</span></div><div class="line" id="062747"><span class="nick" style="color:#389600"><a href="#062747" label="[06:27:47]">&lt;fossy&gt;</a></span><span class="message">no, <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/370">https://github.com/fosslinux/live-bootstrap/pull/370</a>  i just tried this</span></div><div class="line" id="062823"><span class="nick" style="color:#389600"><a href="#062823" label="[06:28:23]">&lt;fossy&gt;</a></span><span class="message">Googulator: hm, do you think there is any point in #367 then?</span></div><div class="line" id="063051"><span class="nick" style="color:#8dd3c7"><a href="#063051" label="[06:30:51]">&lt;Googulator&gt;</a></span><span class="message">I was thinking maybe if someone wanted to download the internal stage2 artifact for any reason, it would be smaller - but actually even that's not the case, because GH zips artifacts for download, even if said artifact is already itself an archive</span></div><div class="line" id="063102"><span class="nick" style="color:#8dd3c7"><a href="#063102" label="[06:31:02]">&lt;Googulator&gt;</a></span><span class="message">so feel free to drop it I guess</span></div><div class="line" id="063153"><span class="nick" style="color:#8dd3c7"><a href="#063153" label="[06:31:53]">&lt;Googulator&gt;</a></span><span class="message">unless that zipping is actually just STORE</span></div><div class="line" id="063203"><span class="nick" style="color:#8dd3c7"><a href="#063203" label="[06:32:03]">&lt;Googulator&gt;</a></span><span class="message">I'm downloading one of those zips just to be sure</span></div><div class="line" id="063221"><span class="nick" style="color:#8dd3c7"><a href="#063221" label="[06:32:21]">&lt;Googulator&gt;</a></span><span class="message">if it's STORE, then there's a benefit there, if it's DEFLATE, then it doesn't matter at all</span></div><div class="line" id="063439"><span class="nick" style="color:#8dd3c7"><a href="#063439" label="[06:34:39]">&lt;Googulator&gt;</a></span><span class="message">OK, the zips are truly compressed (DEFLATE)</span></div><div class="line" id="064821"><span class="nick" style="color:#8dd3c7"><a href="#064821" label="[06:48:21]">&lt;Googulator&gt;</a></span><span class="message">meanwhile, fixed up <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/368/">https://github.com/fosslinux/live-bootstrap/pull/368/</a> </span></div><div class="line" id="064857"><span class="nick" style="color:#8dd3c7"><a href="#064857" label="[06:48:57]">&lt;Googulator&gt;</a></span><span class="message">GH now has conflict resolution on the Web, but it messes things up terribly :(</span></div><div class="line" id="064913"><span class="nick" style="color:#8dd3c7"><a href="#064913" label="[06:49:13]">&lt;Googulator&gt;</a></span><span class="message">had to redo it in local clone</span></div><div class="line" id="065058"><span class="nick" style="color:#8dd3c7"><a href="#065058" label="[06:50:58]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/356">https://github.com/fosslinux/live-bootstrap/pull/356</a>  is waiting for upstreaming of the fix for the double build issue (alternatively, we could convert it to simple-patch)</span></div><div class="line" id="065140"><span class="nick" style="color:#8dd3c7"><a href="#065140" label="[06:51:40]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-mes/2023-12/msg00009.html">https://lists.gnu.org/archive/html/bug-mes/2023-12/msg00009.html</a> </span></div><div class="line" id="074606"><span class="nick" style="color:#389600"><a href="#074606" label="[07:46:06]">&lt;fossy&gt;</a></span><span class="message">oh, yes, GH conflict resolution is poor on the web</span></div><div class="line" id="075348"><span class="nick" style="color:#8dd3c7"><a href="#075348" label="[07:53:48]">&lt;Googulator&gt;</a></span><span class="message">one more force push to <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/368">https://github.com/fosslinux/live-bootstrap/pull/368</a>  - hopefully CI completes now</span></div><div class="line" id="075431"><span class="nick" style="color:#8dd3c7"><a href="#075431" label="[07:54:31]">&lt;Googulator&gt;</a></span><span class="message">still had the &quot;tmp&quot; default expected in bwrap.yml, when it's actually &quot;target&quot; now</span></div><div class="line" id="120348"><span class="nick" style="color:#389600"><a href="#120348" label="[12:03:48]">&lt;fossy&gt;</a></span><span class="message">stikonas: i know this was a fair while ago; but do you know *where* in the libtool-2.4.7 tree <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/203">https://github.com/fosslinux/live-bootstrap/issues/203</a>  is? i am having a lot of difficulty finding it</span></div><div class="line" id="120420"><span class="nick" style="color:#2e2a4a"><a href="#120420" label="[12:04:20]">&lt;stikonas&gt;</a></span><span class="message">fossy: was it not in gnulib?</span></div><div class="line" id="120532"><span class="nick" style="color:#2e2a4a"><a href="#120532" label="[12:05:32]">&lt;stikonas&gt;</a></span><span class="message">hmm, yeah, I don't see it in tarball either</span></div><div class="line" id="120534"><span class="nick" style="color:#2e2a4a"><a href="#120534" label="[12:05:34]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="120714"><span class="nick" style="color:#2e2a4a"><a href="#120714" label="[12:07:14]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah, gnulib does have those files...</span></div><div class="line" id="120726"><span class="nick" style="color:#2e2a4a"><a href="#120726" label="[12:07:26]">&lt;stikonas&gt;</a></span><span class="message">gnulib-a521820</span></div><div class="line" id="120822"><span class="nick" style="color:#389600"><a href="#120822" label="[12:08:22]">&lt;fossy&gt;</a></span><span class="message">oh, okay... but do they actually make it into the libtool-2.4.7 tree?</span></div><div class="line" id="120832"><span class="nick" style="color:#2e2a4a"><a href="#120832" label="[12:08:32]">&lt;stikonas&gt;</a></span><span class="message">hmm, I thought they do</span></div><div class="line" id="120836"><span class="nick" style="color:#2e2a4a"><a href="#120836" label="[12:08:36]">&lt;stikonas&gt;</a></span><span class="message">perhaps they do in out import</span></div><div class="line" id="120844"><span class="nick" style="color:#2e2a4a"><a href="#120844" label="[12:08:44]">&lt;stikonas&gt;</a></span><span class="message">(but not in official tarball...)</span></div><div class="line" id="120850"><span class="nick" style="color:#2e2a4a"><a href="#120850" label="[12:08:50]">&lt;stikonas&gt;</a></span><span class="message">s/out/our/</span></div><div class="line" id="120851"><span class="nick" style="color:#389600"><a href="#120851" label="[12:08:51]">&lt;fossy&gt;</a></span><span class="message">lets have a look at a finished build, brb</span></div><div class="line" id="122804"><span class="nick" style="color:#389600"><a href="#122804" label="[12:28:04]">&lt;fossy&gt;</a></span><span class="message">yeah, i don't think it gets in there.. or at minimum, something changed so that it doesn't anymore</span></div><div class="line" id="122815"><span class="nick" style="color:#389600"><a href="#122815" label="[12:28:15]">&lt;fossy&gt;</a></span><span class="message">even if i completely nuke the uniwidth directory everything still works identically</span></div><div class="line" id="123604"><span class="nick" style="color:#389600"><a href="#123604" label="[12:36:04]">&lt;fossy&gt;</a></span><span class="message">wth, but they are used somehow?!</span></div><div class="line" id="123607"><span class="nick" style="color:#389600"><a href="#123607" label="[12:36:07]">&lt;fossy&gt;</a></span><span class="message">because checksum changes</span></div><div class="line" id="123802"><span class="nick" style="color:#389600"><a href="#123802" label="[12:38:02]">&lt;fossy&gt;</a></span><span class="message">or it's entirely unrelated</span></div><div class="line" id="123828"><span class="nick" style="color:#389600"><a href="#123828" label="[12:38:28]">&lt;fossy&gt;</a></span><span class="message">oop, and something is wrong with binutils 2.41 ??</span></div><div class="line" id="123946"><span class="nick" style="color:#389600"><a href="#123946" label="[12:39:46]">&lt;fossy&gt;</a></span><span class="message">looks like my package cache is outdated, time to do a full run i guess'</span></div><div class="line" id="130219"><span class="nick" style="color:#2e2a4a"><a href="#130219" label="[13:02:19]">&lt;stikonas&gt;</a></span><span class="message">yaeh, I was trying to import it locally</span></div><div class="line" id="130220"><span class="nick" style="color:#2e2a4a"><a href="#130220" label="[13:02:20]">&lt;stikonas&gt;</a></span><span class="message">and it doesn't</span></div><div class="line" id="130227"><span class="nick" style="color:#2e2a4a"><a href="#130227" label="[13:02:27]">&lt;stikonas&gt;</a></span><span class="message">maybe it never was</span></div><div class="line" id="130237"><span class="nick" style="color:#2e2a4a"><a href="#130237" label="[13:02:37]">&lt;stikonas&gt;</a></span><span class="message">I was just going over the list of new gnulibs</span></div><div class="line" id="130245"><span class="nick" style="color:#2e2a4a"><a href="#130245" label="[13:02:45]">&lt;stikonas&gt;</a></span><span class="message">and opened a bug for each package</span></div><div class="line" id="130402"><span class="nick" style="color:#2e2a4a"><a href="#130402" label="[13:04:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: so what should we do with #203?</span></div><div class="line" id="130404"><span class="nick" style="color:#2e2a4a"><a href="#130404" label="[13:04:04]">&lt;stikonas&gt;</a></span><span class="message">just close it?</span></div><div class="line" id="130457"><span class="nick" style="color:#2e2a4a"><a href="#130457" label="[13:04:57]">&lt;stikonas&gt;</a></span><span class="message">then there are still nyacc pregenerated files...</span></div><div class="line" id="154509"><span class="nick" style="color:#6d2462"><a href="#154509" label="[15:45:09]">&lt;oriansj&gt;</a></span><span class="message">hmm so go is now distributing rust binaries?: <a rel="nofollow" href="https://xeiaso.net/blog/carcinization-golang/">https://xeiaso.net/blog/carcinization-golang/</a> </span></div><div class="line" id="163108"><span class="nick" style="color:#8dd3c7"><a href="#163108" label="[16:31:08]">&lt;Googulator&gt;</a></span><span class="message">fossy: looks like binutils-2.41 shows a CI regression: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/actions/runs/7327377682/job/19957156368?pr=368">https://github.com/fosslinux/live-bootstrap/actions/runs/7327377682/job/19957156368?pr=368</a> </span></div><div class="line" id="163236"><span class="nick" style="color:#8dd3c7"><a href="#163236" label="[16:32:36]">&lt;Googulator&gt;</a></span><span class="message">nevermind, you already have a fix committed</span></div><div class="line" id="201328"><span class="nick" style="color:#2e2a4a"><a href="#201328" label="[20:13:28]">&lt;stikonas&gt;</a></span><span class="message">hmm, looks like I might have figured out how to do syscall on UEFI...</span></div><div class="line" id="201348"><span class="nick" style="color:#2e2a4a"><a href="#201348" label="[20:13:48]">&lt;stikonas&gt;</a></span><span class="message">first thing after syscall I need to adjust SS register...</span></div><div class="line" id="201509"><span class="nick" style="color:#234e69"><a href="#201509" label="[20:15:09]">&lt;GoogulatorMobile&gt;</a></span><span class="message">What's currently the major blocker for upgrading to a newer Linux kernel?</span></div><div class="line" id="201554"><span class="nick" style="color:#234e69"><a href="#201554" label="[20:15:54]">&lt;GoogulatorMobile&gt;</a></span><span class="message">4.9 is EOL, and it's directly interacting with attacker-controlled TCP streams</span></div><div class="line" id="201609"><span class="nick" style="color:#2e2a4a"><a href="#201609" label="[20:16:09]">&lt;stikonas&gt;</a></span><span class="message">GoogulatorMobile: probably blockers are already fixed</span></div><div class="line" id="201619"><span class="nick" style="color:#2e2a4a"><a href="#201619" label="[20:16:19]">&lt;stikonas&gt;</a></span><span class="message">binutils 2.14a used to be a blocker</span></div><div class="line" id="201628"><span class="nick" style="color:#2e2a4a"><a href="#201628" label="[20:16:28]">&lt;stikonas&gt;</a></span><span class="message">but now we are on much newer version</span></div><div class="line" id="201650"><span class="nick" style="color:#2e2a4a"><a href="#201650" label="[20:16:50]">&lt;stikonas&gt;</a></span><span class="message">GoogulatorMobile: but you'll only be able to upgrade to 5.6 or something like that</span></div><div class="line" id="201700"><span class="nick" style="color:#2e2a4a"><a href="#201700" label="[20:17:00]">&lt;stikonas&gt;</a></span><span class="message">after that GCC requirement goes up</span></div><div class="line" id="201715"><span class="nick" style="color:#2e2a4a"><a href="#201715" label="[20:17:15]">&lt;stikonas&gt;</a></span><span class="message">oh actually we might need to first upgrade GCC 4.0.4 to GCC 4.6</span></div><div class="line" id="201725"><span class="nick" style="color:#234e69"><a href="#201725" label="[20:17:25]">&lt;GoogulatorMobile&gt;</a></span><span class="message">5.4 gets us 2 more years of support</span></div><div class="line" id="201754"><span class="nick" style="color:#234e69"><a href="#201754" label="[20:17:54]">&lt;GoogulatorMobile&gt;</a></span><span class="message">4.19 is good for 1 year</span></div><div class="line" id="201810"><span class="nick" style="color:#2e2a4a"><a href="#201810" label="[20:18:10]">&lt;stikonas&gt;</a></span><span class="message">GoogulatorMobile: <a rel="nofollow" href="https://www.kernel.org/doc/html/v5.7/process/changes.html">https://www.kernel.org/doc/html/v5.7/process/changes.html</a> </span></div><div class="line" id="201826"><span class="nick" style="color:#2e2a4a"><a href="#201826" label="[20:18:26]">&lt;stikonas&gt;</a></span><span class="message">that's the last before GCC 4.9 is required</span></div><div class="line" id="201832"><span class="nick" style="color:#2e2a4a"><a href="#201832" label="[20:18:32]">&lt;stikonas&gt;</a></span><span class="message">and GCC 4.9 is C++...</span></div><div class="line" id="201853"><span class="nick" style="color:#2e2a4a"><a href="#201853" label="[20:18:53]">&lt;stikonas&gt;</a></span><span class="message">even 4.19 needs GCC 4.6</span></div><div class="line" id="201859"><span class="nick" style="color:#2e2a4a"><a href="#201859" label="[20:18:59]">&lt;stikonas&gt;</a></span><span class="message">so I think that's the first thing we should target...</span></div><div class="line" id="201919"><span class="nick" style="color:#2e2a4a"><a href="#201919" label="[20:19:19]">&lt;stikonas&gt;</a></span><span class="message">(it's also the version that ekaitz was targeting for riscv backport...)</span></div><div class="line" id="201958"><span class="nick" style="color:#6c3d55"><a href="#201958" label="[20:19:58]">&lt;ekaitz&gt;</a></span><span class="message">yes</span></div><div class="line" id="202023"><span class="nick" style="color:#234e69"><a href="#202023" label="[20:20:23]">&lt;GoogulatorMobile&gt;</a></span><span class="message">4.14 is the only thing we can build rn that's still in support - for 1 more month :(</span></div><div class="line" id="202037"><span class="nick" style="color:#2e2a4a"><a href="#202037" label="[20:20:37]">&lt;stikonas&gt;</a></span><span class="message">we'll eventually be on versions that are out of support</span></div><div class="line" id="202050"><span class="nick" style="color:#2e2a4a"><a href="#202050" label="[20:20:50]">&lt;stikonas&gt;</a></span><span class="message">as we are kind of hard limited to 5.4</span></div><div class="line" id="202053"><span class="nick" style="color:#2e2a4a"><a href="#202053" label="[20:20:53]">&lt;stikonas&gt;</a></span><span class="message">at least on x86...</span></div><div class="line" id="202127"><span class="nick" style="color:#2e2a4a"><a href="#202127" label="[20:21:27]">&lt;stikonas&gt;</a></span><span class="message">otherwise we need to build multiple GCC's before linux...</span></div><div class="line" id="202241"><span class="nick" style="color:#234e69"><a href="#202241" label="[20:22:41]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&quot;building just one GCC before linux&quot; is IMO a less important target than &quot;not giving attackers network access to a vulnerable kernel&quot;</span></div><div class="line" id="202457"><span class="nick" style="color:#234e69"><a href="#202457" label="[20:24:57]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Especially with plain HTTP downloads, where even an MITM compromise is possible</span></div><div class="line" id="202904"><span class="nick" style="color:#234e69"><a href="#202904" label="[20:29:04]">&lt;GoogulatorMobile&gt;</a></span><span class="message">But with 5.4, we can postpone that to 2025 at least</span></div><div class="line" id="203132"><span class="nick" style="color:#234e69"><a href="#203132" label="[20:31:32]">&lt;GoogulatorMobile&gt;</a></span><span class="message">The alternative is maintaining a fork of 4.14  with bootstrap-relevant security fixes</span></div><div class="line" id="203501"><span class="nick" style="color:#234e69"><a href="#203501" label="[20:35:01]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Or implementing an option to download from a local HTTP source instead of from the original mirrors themselves</span></div><div class="line" id="203807"><span class="nick" style="color:#2e2a4a"><a href="#203807" label="[20:38:07]">&lt;stikonas&gt;</a></span><span class="message">well, should probably switch to 5.15 first</span></div><div class="line" id="203818"><span class="nick" style="color:#2e2a4a"><a href="#203818" label="[20:38:18]">&lt;stikonas&gt;</a></span><span class="message">*5.4</span></div><div class="line" id="203825"><span class="nick" style="color:#2e2a4a"><a href="#203825" label="[20:38:25]">&lt;stikonas&gt;</a></span><span class="message">and then deal with EOL later</span></div><div class="line" id="203838"><span class="nick" style="color:#2e2a4a"><a href="#203838" label="[20:38:38]">&lt;stikonas&gt;</a></span><span class="message">5.15 will bring us more features/fixes too</span></div><div class="line" id="204827"><span class="nick" style="color:#2e2a4a"><a href="#204827" label="[20:48:27]">&lt;stikonas&gt;</a></span><span class="message">ok, 1 syscall UEFI kernel: <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/posix-runner/posix-runner/posix-runner.c">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/posix-runner/posix-runner/posix-runner.c</a> </span></div><div class="line" id="210748"><span class="nick" style="color:#2e2a4a"><a href="#210748" label="[21:07:48]">&lt;stikonas&gt;</a></span><span class="message">oriansj: is this function doable in M2-Planet without assembly? <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/commit/44f490cc42e4aa9f23b696487e85fc5aaec2efb0/posix-runner/posix-runner.c#L24">https://git.stikonas.eu/andrius/stage0-uefi/src/commit/44f490cc42e4aa9f23b696487e85fc5aaec2efb0/posix-runner/posix-runner.c#L24</a> </span></div><div class="line" id="211056"><span class="nick" style="color:#2e2a4a"><a href="#211056" label="[21:10:56]">&lt;stikonas&gt;</a></span><span class="message">hmm, I guess we don't have function pointers...</span></div><div class="line" id="211201"><span class="nick" style="color:#2e2a4a"><a href="#211201" label="[21:12:01]">&lt;stikonas&gt;</a></span><span class="message">and goto *ptr;  is not even standard C, it's GCC extension</span></div><div class="line" id="215316"><span class="nick" style="color:#6d2462"><a href="#215316" label="[21:53:16]">&lt;oriansj&gt;</a></span><span class="message">stikonas: M2_Planet has FUNCTION; so you only need to use FUNCTION</span></div><div class="line" id="215441"><span class="nick" style="color:#6d2462"><a href="#215441" label="[21:54:41]">&lt;oriansj&gt;</a></span><span class="message">if you look in M2-Planet's cc_core.c you'll see function pointers are passed and used in: common_recursion and general_recursion</span></div><div class="line" id="215538"><span class="nick" style="color:#6d2462"><a href="#215538" label="[21:55:38]">&lt;oriansj&gt;</a></span><span class="message">but yeah goto *ptr; will work sorta but it isn't one of our test cases</span></div><div class="line" id="221820"><span class="nick" style="color:#6b8072"><a href="#221820" label="[22:18:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; goto only seems to work with labels...</span></div><div class="line" id="221831"><span class="nick" style="color:#6b8072"><a href="#221831" label="[22:18:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I'll try FUNCTION</span></div><div class="line" id="221950"><span class="nick" style="color:#6d2462"><a href="#221950" label="[22:19:50]">&lt;oriansj&gt;</a></span><span class="message">you need FUNCTION_name if you want to use goto but I don't recommend it</span></div><div class="line" id="222155"><span class="nick" style="color:#2e2a4a"><a href="#222155" label="[22:21:55]">&lt;stikonas&gt;</a></span><span class="message">well, FUNCTION_name wouldn't work here...</span></div><div class="line" id="222158"><span class="nick" style="color:#2e2a4a"><a href="#222158" label="[22:21:58]">&lt;stikonas&gt;</a></span><span class="message">I don't have a name...</span></div><div class="line" id="222214"><span class="nick" style="color:#2e2a4a"><a href="#222214" label="[22:22:14]">&lt;stikonas&gt;</a></span><span class="message">it's really jumping into address that was previously malloc'ed</span></div><div class="line" id="222526"><span class="nick" style="color:#2e2a4a"><a href="#222526" label="[22:25:26]">&lt;stikonas&gt;</a></span><span class="message">oriansj: anyway, thanks for reminding me about &quot;FUNCTION&quot;</span></div><div class="line" id="222529"><span class="nick" style="color:#2e2a4a"><a href="#222529" label="[22:25:29]">&lt;stikonas&gt;</a></span><span class="message">that seems to work</span></div><div class="line" id="222708"><span class="nick" style="color:#2e2a4a"><a href="#222708" label="[22:27:08]">&lt;stikonas&gt;</a></span><span class="message">I have a few other assembly functions, though not sure whether they are suitable for M2libc...</span></div><div class="line" id="222735"><span class="nick" style="color:#2e2a4a"><a href="#222735" label="[22:27:35]">&lt;stikonas&gt;</a></span><span class="message">it's very x86_64 specific... Even if we put assembly code to M2libc, it wouldn't be portable</span></div><div class="line" id="225015"><span class="nick" style="color:#6d2462"><a href="#225015" label="[22:50:15]">&lt;oriansj&gt;</a></span><span class="message">stikonas: M2libc has architecture specific directories explicitly for that purpose</span></div><div class="line" id="225133"><span class="nick" style="color:#6d2462"><a href="#225133" label="[22:51:33]">&lt;oriansj&gt;</a></span><span class="message">but yeah, only should be adding functions to M2libc if it would be generally useful and not task specific</span></div><div class="line" id="230551"><span class="nick" style="color:#6b8072"><a href="#230551" label="[23:05:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; You can't even read or write to those registers from ring 3... So yes...</span></div><div class="line" id="230650"><span class="nick" style="color:#6b8072"><a href="#230650" label="[23:06:50]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Though this posix-runner won't be switching to ring 3... I think it would be simple to stay in ring 0</span></div><div class="line" id="230733"><span class="nick" style="color:#6b8072"><a href="#230733" label="[23:07:33]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Just like builder-hex0 does on BIOS systems</span></div><div class="line" id="232830"><span class="nick" style="color:#8dd3c7"><a href="#232830" label="[23:28:30]">&lt;Googulator&gt;</a></span><span class="message">I need some help with <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/365">https://github.com/fosslinux/live-bootstrap/issues/365</a> </span></div><div class="line" id="232903"><span class="nick" style="color:#8dd3c7"><a href="#232903" label="[23:29:03]">&lt;Googulator&gt;</a></span><span class="message">just managed to reproduce it - configure.ac is properly patched to remove the offending check, but configure isn't</span></div><div class="line" id="233453"><span class="nick" style="color:#389600"><a href="#233453" label="[23:34:53]">&lt;fossy&gt;</a></span><span class="message">Googulator: is it running autoreconf?</span></div><div class="line" id="233506"><span class="nick" style="color:#8dd3c7"><a href="#233506" label="[23:35:06]">&lt;Googulator&gt;</a></span><span class="message">no, it uses bootstrap.sh</span></div><div class="line" id="233535"><span class="nick" style="color:#8dd3c7"><a href="#233535" label="[23:35:35]">&lt;Googulator&gt;</a></span><span class="message">or rather, the script is just called bootstrap</span></div><div class="line" id="233536"><span class="nick" style="color:#8dd3c7"><a href="#233536" label="[23:35:36]">&lt;Googulator&gt;</a></span><span class="message">no .sh</span></div><div class="line" id="233635"><span class="nick" style="color:#389600"><a href="#233635" label="[23:36:35]">&lt;fossy&gt;</a></span><span class="message">stikonas: i think we can just close #203 then, while there are pregened files in the gnulib tarball they very obviously don't touch the final system</span></div><div class="line" id="233649"><span class="nick" style="color:#389600"><a href="#233649" label="[23:36:49]">&lt;fossy&gt;</a></span><span class="message">(well very obviously now, not before :D)</span></div><div class="line" id="233659"><span class="nick" style="color:#8dd3c7"><a href="#233659" label="[23:36:59]">&lt;Googulator&gt;</a></span><span class="message">it uses real autoconf-2.69 and autom4te-2.69, but Perl versions of aclocal and automake in place of the real ones</span></div><div class="line" id="233715"><span class="nick" style="color:#8dd3c7"><a href="#233715" label="[23:37:15]">&lt;Googulator&gt;</a></span><span class="message">autoconf is called like this: $AUTOCONF -Wall -Werror</span></div><div class="line" id="233718"><span class="nick" style="color:#389600"><a href="#233718" label="[23:37:18]">&lt;fossy&gt;</a></span><span class="message">Hmmmm</span></div><div class="line" id="233726"><span class="nick" style="color:#8dd3c7"><a href="#233726" label="[23:37:26]">&lt;Googulator&gt;</a></span><span class="message">where $AUTOCONF == autoconf-2.69 in our case</span></div><div class="line" id="233759"><span class="nick" style="color:#8dd3c7"><a href="#233759" label="[23:37:59]">&lt;Googulator&gt;</a></span><span class="message">$ ./automake/usr/bin/autoconf-2.69 --help</span></div><div class="line" id="233759"><span class="nick" style="color:#8dd3c7"><a href="#233759" label="[23:37:59]">&lt;Googulator&gt;</a></span><span class="message">Usage: ./automake/usr/bin/autoconf-2.69 [OPTION]... [TEMPLATE-FILE]</span></div><div class="line" id="233800"><span class="nick" style="color:#8dd3c7"><a href="#233800" label="[23:38:00]">&lt;Googulator&gt;</a></span><span class="message">...</span></div><div class="line" id="233800"><span class="nick" style="color:#8dd3c7"><a href="#233800" label="[23:38:00]">&lt;Googulator&gt;</a></span><span class="message">  -f, --force               consider all files obsolete</span></div><div class="line" id="233801"><span class="nick" style="color:#8dd3c7"><a href="#233801" label="[23:38:01]">&lt;Googulator&gt;</a></span><span class="message">Why, oh why, autoconf?!</span></div><div class="line" id="233815"><span class="nick" style="color:#8dd3c7"><a href="#233815" label="[23:38:15]">&lt;Googulator&gt;</a></span><span class="message">let me guess: timestamp issue</span></div><div class="line" id="233821"><span class="nick" style="color:#389600"><a href="#233821" label="[23:38:21]">&lt;fossy&gt;</a></span><span class="message">yeah i was about to say the same</span></div><div class="line" id="234214"><span class="nick" style="color:#389600"><a href="#234214" label="[23:42:14]">&lt;fossy&gt;</a></span><span class="message">oriansj: re that blog post, not really sure how that means go is distributing rust binaries, this is just showing a way to integrate rust into golang using webassembly</span></div><div class="line" id="234243"><span class="nick" style="color:#389600"><a href="#234243" label="[23:42:43]">&lt;fossy&gt;</a></span><span class="message">an increasingly common paradigm for FFI, particularly in golang, which is typically horrible at FFI</span></div><div class="line" id="234328"><span class="nick" style="color:#389600"><a href="#234328" label="[23:43:28]">&lt;fossy&gt;</a></span><span class="message">this wouldn't ever be used in core golang though too many problems with it</span></div><div class="line" id="234541"><span class="nick" style="color:#8dd3c7"><a href="#234541" label="[23:45:41]">&lt;Googulator&gt;</a></span><span class="message">let's see if AUTOCONF=&quot;autoconf-2.69 -f&quot; helps</span></div><div class="line" id="234618"><span class="nick" style="color:#8dd3c7"><a href="#234618" label="[23:46:18]">&lt;Googulator&gt;</a></span><span class="message">all I want to know is, Why... Isn't... That... The... Default?!</span></div><div class="line" id="235128"><span class="nick" style="color:#2e2a4a"><a href="#235128" label="[23:51:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah, that's fine regarding #203...</span></div><br /></div></body></html>