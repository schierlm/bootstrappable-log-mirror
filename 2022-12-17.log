<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-12-17.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="112825"><span class="nick" style="color:#389600"><a href="#112825" label="[11:28:25]">&lt;Irvise_&gt;</a></span><span class="message">Hi, would this be a &quot;solution&quot;/allowed for a bootstrap?</span></div><div class="line" id="112826"><span class="nick" style="color:#389600"><a href="#112826" label="[11:28:26]">&lt;Irvise_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/yuriy-chumak/ol/issues/58#issuecomment-1350225741">https://github.com/yuriy-chumak/ol/issues/58#issuecomment-1350225741</a> </span></div><div class="line" id="112905"><span class="nick" style="color:#389600"><a href="#112905" label="[11:29:05]">&lt;Irvise_&gt;</a></span><span class="message">It is obviously not a great thing, and could be easily generated with another system. But manually writing that binary file shouldn't be that hard nor bad would it?</span></div><div class="line" id="114410"><span class="nick" style="color:#389600"><a href="#114410" label="[11:44:10]">&lt;Irvise_&gt;</a></span><span class="message">Btw, has the issue with CA-certs been fixed? I would like to try it once again</span></div><div class="line" id="125155"><span class="nick" style="color:#8dd3c7"><a href="#125155" label="[12:51:55]">&lt;stikonas[m]&gt;</a></span><span class="message">Irvise: cacerts were fixed for now</span></div><div class="line" id="125205"><span class="nick" style="color:#8dd3c7"><a href="#125205" label="[12:52:05]">&lt;stikonas[m]&gt;</a></span><span class="message">Until another cert expires</span></div><div class="line" id="125759"><span class="nick" style="color:#389600"><a href="#125759" label="[12:57:59]">&lt;Irvise_&gt;</a></span><span class="message">Thanks, I am running a build now.</span></div><div class="line" id="130011"><span class="nick" style="color:#8dd3c7"><a href="#130011" label="[13:00:11]">&lt;stikonas[m]&gt;</a></span><span class="message">I can't check ol for now (travelling)</span></div><div class="line" id="130101"><span class="nick" style="color:#8dd3c7"><a href="#130101" label="[13:01:01]">&lt;stikonas[m]&gt;</a></span><span class="message">But keep in mind that in live-bootstrap we try to rebuild even all text files that were generated</span></div><div class="line" id="152817"><span class="nick" style="color:#2e2a4a"><a href="#152817" label="[15:28:17]">&lt;oriansj&gt;</a></span><span class="message">Irvise_: intern solutions are always ok if there is a plan in place to remove the need for them later. For example when MesCC got started it needed GCC to compile but there was a plan to just rewrite it in a lower language later (you can see that in janneke's first talk) and only later after much work was done was M2-planet ultimately what bootstrapped MesCC (a full 5 years later)</span></div><div class="line" id="153159"><span class="nick" style="color:#2e2a4a"><a href="#153159" label="[15:31:59]">&lt;oriansj&gt;</a></span><span class="message">so if you have a reasonable plan for removing that bootstrapping blob later down the road, it is fine as long as you are honest about it and with a known reasonable amount of work</span></div><div class="line" id="153239"><span class="nick" style="color:#2e2a4a"><a href="#153239" label="[15:32:39]">&lt;oriansj&gt;</a></span><span class="message">for example Live-bootstrap used to have to cheat between M2-Planet and Mes.c because M2-Planet just couldn't build Mes.c yet</span></div><div class="line" id="153312"><span class="nick" style="color:#2e2a4a"><a href="#153312" label="[15:33:12]">&lt;oriansj&gt;</a></span><span class="message">but the second janneke solved that last step, fossy incorporated</span></div><div class="line" id="153319"><span class="nick" style="color:#2e2a4a"><a href="#153319" label="[15:33:19]">&lt;oriansj&gt;</a></span><span class="message">it into live-bootstrap</span></div><div class="line" id="155232"><span class="nick" style="color:#389600"><a href="#155232" label="[15:52:32]">&lt;Irvise_&gt;</a></span><span class="message">stikonas, oriansj: thanks. I think the binary could be easily generated with Mes, so that should not be an issue :)</span></div><div class="line" id="155246"><span class="nick" style="color:#389600"><a href="#155246" label="[15:52:46]">&lt;Irvise_&gt;</a></span><span class="message">Also, first build complete!</span></div><div class="line" id="155247"><span class="nick" style="color:#389600"><a href="#155247" label="[15:52:47]">&lt;Irvise_&gt;</a></span><span class="message">Bootstrapping completed.</span></div><div class="line" id="161117"><span class="nick" style="color:#389600"><a href="#161117" label="[16:11:17]">&lt;Irvise_&gt;</a></span><span class="message">One question. If I exit the bootstrap environment, is there a way for me to easily get back to it without having to rebuild everything?</span></div><div class="line" id="183824"><span class="nick" style="color:#8dd3c7"><a href="#183824" label="[18:38:24]">&lt;stikonas[m]&gt;</a></span><span class="message">I think live-bootstrap didn't go beyond mes when m2-planet couldn't build mes</span></div><div class="line" id="183836"><span class="nick" style="color:#8dd3c7"><a href="#183836" label="[18:38:36]">&lt;stikonas[m]&gt;</a></span><span class="message">Once it was possible, I think it was me who updated to mes-m2 and fossy added tcc</span></div><div class="line" id="183916"><span class="nick" style="color:#8dd3c7"><a href="#183916" label="[18:39:16]">&lt;stikonas[m]&gt;</a></span><span class="message">Irvise: you can't easily go back in, though there are a couple of things to help</span></div><div class="line" id="183946"><span class="nick" style="color:#8dd3c7"><a href="#183946" label="[18:39:46]">&lt;stikonas[m]&gt;</a></span><span class="message">rootfs.py has an option to preserve and not delete  build env</span></div><div class="line" id="184122"><span class="nick" style="color:#8dd3c7"><a href="#184122" label="[18:41:22]">&lt;stikonas[m]&gt;</a></span><span class="message">And another option is to copy out built packages from /usr/src/repo and use preseed option of rootfs.py (but this is less tested)</span></div><div class="line" id="205513"><span class="nick" style="color:#2e2a4a"><a href="#205513" label="[20:55:13]">&lt;oriansj&gt;</a></span><span class="message">hmmm: sysc/distfiles/curl-7.83.0.tar.xz: FAILED</span></div><div class="line" id="205558"><span class="nick" style="color:#2e2a4a"><a href="#205558" label="[20:55:58]">&lt;oriansj&gt;</a></span><span class="message">looks like it got cloudflare html</span></div><div class="line" id="212431"><span class="nick" style="color:#6b8072"><a href="#212431" label="[21:24:31]">&lt;theruran&gt;</a></span><span class="message">what's the bootstrapping story on Fortran? /cc Irvise_</span></div><div class="line" id="212547"><span class="nick" style="color:#389600"><a href="#212547" label="[21:25:47]">&lt;Irvise_&gt;</a></span><span class="message">theruran: oh, that is a really good question. I think it is not problematic as most of the code in GCC is C++ and does not require a fortran toolchain to compile it. I remember compiling GCC with fortran and ada in NetBSD and Ada was the problematic one.</span></div><div class="line" id="212748"><span class="nick" style="color:#6b8072"><a href="#212748" label="[21:27:48]">&lt;theruran&gt;</a></span><span class="message">asking because this project made me think about using Fortran to write a language - never heard of anyone doing that before - <a rel="nofollow" href="https://codeberg.org/wimvanderbauwhede/funktal">https://codeberg.org/wimvanderbauwhede/funktal</a> </span></div><div class="line" id="212937"><span class="nick" style="color:#6b8072"><a href="#212937" label="[21:29:37]">&lt;theruran&gt;</a></span><span class="message">the author said it is art because it has no useful purpose xD</span></div><div class="line" id="213045"><span class="nick" style="color:#6b8072"><a href="#213045" label="[21:30:45]">&lt;theruran&gt;</a></span><span class="message">I found this paper that discusses Forth as a target for a formally-verified compiler ðŸ¤” <a rel="nofollow" href="http://www.complang.tuwien.ac.at/anton/euroforth/ef12/papers/stoddart.pdf">http://www.complang.tuwien.ac.at/anton/euroforth/ef12/papers/stoddart.pdf</a> </span></div><div class="line" id="213150"><span class="nick" style="color:#6b8072"><a href="#213150" label="[21:31:50]">&lt;theruran&gt;</a></span><span class="message">as a separate thought, I was wondering if Forth can be formally-verified ex post facto</span></div><div class="line" id="220040"><span class="nick" style="color:#80b1d3"><a href="#220040" label="[22:00:40]">&lt;fossy&gt;</a></span><span class="message">apologies for my absence in the last week or so. i was planning to finish python bootstrap this last week however i got covid and was stuck in bed for a few days :|</span></div><div class="line" id="220721"><span class="nick" style="color:#80b1d3"><a href="#220721" label="[22:07:21]">&lt;fossy&gt;</a></span><span class="message">stikonas, rickmasters: 1. both of you make very good points about tarball distribution and i am feeling that perhaps external downloading should be the default, at least for the time being. it is more difficult to justify network downloading when there is little-no network support early in the bootstrap, or if the bootstrap is being run regularly. i feel that the option should probably</span></div><div class="line" id="220723"><span class="nick" style="color:#80b1d3"><a href="#220723" label="[22:07:23]">&lt;fossy&gt;</a></span><span class="message">remain however, as it adds some trust to obtaining sources since it occurs in the more trusted environment. but i'm not sure anymore it makes sense as a default.</span></div><div class="line" id="220802"><span class="nick" style="color:#80b1d3"><a href="#220802" label="[22:08:02]">&lt;fossy&gt;</a></span><span class="message">we did consider committing tarballs to repo a while ago but it's not something git handles well at all.</span></div><div class="line" id="220821"><span class="nick" style="color:#6d2462"><a href="#220821" label="[22:08:21]">&lt;stikonas&gt;</a></span><span class="message">oh yes, covid is annoying, I had it once in August</span></div><div class="line" id="220913"><span class="nick" style="color:#6d2462"><a href="#220913" label="[22:09:13]">&lt;stikonas&gt;</a></span><span class="message">hopefully you are feeling better now</span></div><div class="line" id="220946"><span class="nick" style="color:#6d2462"><a href="#220946" label="[22:09:46]">&lt;stikonas&gt;</a></span><span class="message">I'm actually a bit sick too but this time it's just a common cold which if far better than covid was</span></div><div class="line" id="221001"><span class="nick" style="color:#234e69"><a href="#221001" label="[22:10:01]">&lt;rickmasters&gt;</a></span><span class="message">fossy: did you mean &quot;should *not* be the default&quot; in your first sentence?</span></div><div class="line" id="221023"><span class="nick" style="color:#6d2462"><a href="#221023" label="[22:10:23]">&lt;stikonas&gt;</a></span><span class="message">I think fossy agrees that we don't download sources every time while we are doing development</span></div><div class="line" id="221034"><span class="nick" style="color:#80b1d3"><a href="#221034" label="[22:10:34]">&lt;fossy&gt;</a></span><span class="message">^ yes, what stikonas said</span></div><div class="line" id="221041"><span class="nick" style="color:#6d2462"><a href="#221041" label="[22:10:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, are you going to bootstrap python with gcc 4.7.4?</span></div><div class="line" id="221046"><span class="nick" style="color:#80b1d3"><a href="#221046" label="[22:10:46]">&lt;fossy&gt;</a></span><span class="message">yes, that is the plan</span></div><div class="line" id="221104"><span class="nick" style="color:#6d2462"><a href="#221104" label="[22:11:04]">&lt;stikonas&gt;</a></span><span class="message">well, it might be possible to swap it with newer gcc later...</span></div><div class="line" id="221112"><span class="nick" style="color:#80b1d3"><a href="#221112" label="[22:11:12]">&lt;fossy&gt;</a></span><span class="message">possibly</span></div><div class="line" id="221120"><span class="nick" style="color:#80b1d3"><a href="#221120" label="[22:11:20]">&lt;fossy&gt;</a></span><span class="message">i know some of the older pythons do not actually build with new gcc</span></div><div class="line" id="221128"><span class="nick" style="color:#6d2462"><a href="#221128" label="[22:11:28]">&lt;stikonas&gt;</a></span><span class="message">oh I see</span></div><div class="line" id="221131"><span class="nick" style="color:#80b1d3"><a href="#221131" label="[22:11:31]">&lt;fossy&gt;</a></span><span class="message">when i was testing outside of live-bootstrap python 3.3 segfaulted using my system's toolchain</span></div><div class="line" id="221132"><span class="nick" style="color:#6d2462"><a href="#221132" label="[22:11:32]">&lt;stikonas&gt;</a></span><span class="message">that might be a problem then</span></div><div class="line" id="221149"><span class="nick" style="color:#6d2462"><a href="#221149" label="[22:11:49]">&lt;stikonas&gt;</a></span><span class="message">I was just thinking it might be nice to build newer shared musl after we build newer gcc</span></div><div class="line" id="221159"><span class="nick" style="color:#6d2462"><a href="#221159" label="[22:11:59]">&lt;stikonas&gt;</a></span><span class="message">that would allow us to drop ton of patches on top of gcc 4.7.4</span></div><div class="line" id="221204"><span class="nick" style="color:#80b1d3"><a href="#221204" label="[22:12:04]">&lt;fossy&gt;</a></span><span class="message">yeah, that would be good</span></div><div class="line" id="221207"><span class="nick" style="color:#6d2462"><a href="#221207" label="[22:12:07]">&lt;stikonas&gt;</a></span><span class="message">but if it would cause problems with older python</span></div><div class="line" id="221218"><span class="nick" style="color:#6d2462"><a href="#221218" label="[22:12:18]">&lt;stikonas&gt;</a></span><span class="message">then we can't do it</span></div><div class="line" id="221220"><span class="nick" style="color:#80b1d3"><a href="#221220" label="[22:12:20]">&lt;fossy&gt;</a></span><span class="message">what are your thoughts on musl vs glibc for the final system we drop the user into?</span></div><div class="line" id="221238"><span class="nick" style="color:#6d2462"><a href="#221238" label="[22:12:38]">&lt;stikonas&gt;</a></span><span class="message">I don't think it matters for me</span></div><div class="line" id="221248"><span class="nick" style="color:#80b1d3"><a href="#221248" label="[22:12:48]">&lt;fossy&gt;</a></span><span class="message">neither</span></div><div class="line" id="221250"><span class="nick" style="color:#6d2462"><a href="#221250" label="[22:12:50]">&lt;stikonas&gt;</a></span><span class="message">I personally use glibc on my Linux system</span></div><div class="line" id="221304"><span class="nick" style="color:#6d2462"><a href="#221304" label="[22:13:04]">&lt;stikonas&gt;</a></span><span class="message">but I chose musl for live-bootstrap for its ease of build</span></div><div class="line" id="221308"><span class="nick" style="color:#80b1d3"><a href="#221308" label="[22:13:08]">&lt;fossy&gt;</a></span><span class="message">same, i have a feeling bootstrapping distributions might be a bit easier for glibc</span></div><div class="line" id="221317"><span class="nick" style="color:#80b1d3"><a href="#221317" label="[22:13:17]">&lt;fossy&gt;</a></span><span class="message">yes, logically, musl makes sense for where we have it</span></div><div class="line" id="221324"><span class="nick" style="color:#80b1d3"><a href="#221324" label="[22:13:24]">&lt;fossy&gt;</a></span><span class="message">easier with glibc*</span></div><div class="line" id="221326"><span class="nick" style="color:#6d2462"><a href="#221326" label="[22:13:26]">&lt;stikonas&gt;</a></span><span class="message">not sure if it will be much easier</span></div><div class="line" id="221352"><span class="nick" style="color:#6d2462"><a href="#221352" label="[22:13:52]">&lt;stikonas&gt;</a></span><span class="message">I suspect once we are &quot;done&quot; with live-bootstrap, any distro bootstrapper would want to build stuff into new prefix</span></div><div class="line" id="221359"><span class="nick" style="color:#80b1d3"><a href="#221359" label="[22:13:59]">&lt;fossy&gt;</a></span><span class="message">mm, true</span></div><div class="line" id="221400"><span class="nick" style="color:#6d2462"><a href="#221400" label="[22:14:00]">&lt;stikonas&gt;</a></span><span class="message">kind of like cross-compiling</span></div><div class="line" id="221406"><span class="nick" style="color:#6d2462"><a href="#221406" label="[22:14:06]">&lt;stikonas&gt;</a></span><span class="message">though might be the same arch</span></div><div class="line" id="221718"><span class="nick" style="color:#6d2462"><a href="#221718" label="[22:17:18]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, what else do you want to see bootstrapped in live-bootstrap for now</span></div><div class="line" id="221724"><span class="nick" style="color:#6d2462"><a href="#221724" label="[22:17:24]">&lt;stikonas&gt;</a></span><span class="message">I guess we need python, newer GCC</span></div><div class="line" id="221746"><span class="nick" style="color:#6d2462"><a href="#221746" label="[22:17:46]">&lt;stikonas&gt;</a></span><span class="message">anything else?</span></div><div class="line" id="221813"><span class="nick" style="color:#6d2462"><a href="#221813" label="[22:18:13]">&lt;stikonas&gt;</a></span><span class="message">we are probably approaching what is considered binary seed for most distros</span></div><div class="line" id="221848"><span class="nick" style="color:#6d2462"><a href="#221848" label="[22:18:48]">&lt;stikonas&gt;</a></span><span class="message">we might want to upgrade some other stuff once more, e.g. binutils</span></div><div class="line" id="222025"><span class="nick" style="color:#6d2462"><a href="#222025" label="[22:20:25]">&lt;stikonas&gt;</a></span><span class="message">maybe once we have python and new GCC we should release version 1.0 and try to announce it a bit more</span></div><div class="line" id="222140"><span class="nick" style="color:#6d2462"><a href="#222140" label="[22:21:40]">&lt;stikonas&gt;</a></span><span class="message">and then we need to finish off kernel bootstrap, e.g. make it work with fiwix (which rickmasters is already working on)</span></div><div class="line" id="223605"><span class="nick" style="color:#2e2a4a"><a href="#223605" label="[22:36:05]">&lt;oriansj&gt;</a></span><span class="message">fossy: perhaps a repo that is just the tarballs; which shallow checkouts against which one can do</span></div><div class="line" id="223845"><span class="nick" style="color:#2e2a4a"><a href="#223845" label="[22:38:45]">&lt;oriansj&gt;</a></span><span class="message">which has the download script for the tarballs from upstream for improving trust</span></div><div class="line" id="224102"><span class="nick" style="color:#2e2a4a"><a href="#224102" label="[22:41:02]">&lt;oriansj&gt;</a></span><span class="message">and then live-bootstrap would only need a script which git clone --depth 1 's the repo and then copies over the files</span></div><div class="line" id="224423"><span class="nick" style="color:#2e2a4a"><a href="#224423" label="[22:44:23]">&lt;oriansj&gt;</a></span><span class="message">that way it becomes simple use DVD distribution of the tarballs (or honestly any file distribution method you trust)</span></div><div class="line" id="224553"><span class="nick" style="color:#2e2a4a"><a href="#224553" label="[22:45:53]">&lt;oriansj&gt;</a></span><span class="message">then live-bootstrap can just stop and tell the user they need to obtain the source tarballs and suggesting a couple different methods for doing so</span></div><div class="line" id="225259"><span class="nick" style="color:#80b1d3"><a href="#225259" label="[22:52:59]">&lt;fossy&gt;</a></span><span class="message">stikonas: more recent GCC, binutils</span></div><div class="line" id="225353"><span class="nick" style="color:#80b1d3"><a href="#225353" label="[22:53:53]">&lt;fossy&gt;</a></span><span class="message">at that point i feel like you could realistically use it as a starting point for LFS or something similar, so i'd be happy for a 1.0 at that point</span></div><div class="line" id="225510"><span class="nick" style="color:#2e2a4a"><a href="#225510" label="[22:55:10]">&lt;oriansj&gt;</a></span><span class="message">and would the LFS community be interested in helping to integrate the work?</span></div><div class="line" id="225624"><span class="nick" style="color:#6d2462"><a href="#225624" label="[22:56:24]">&lt;stikonas&gt;</a></span><span class="message">we don't know, nobody talked with them</span></div><div class="line" id="225652"><span class="nick" style="color:#2e2a4a"><a href="#225652" label="[22:56:52]">&lt;oriansj&gt;</a></span><span class="message">I guess I should reach out then</span></div><div class="line" id="225806"><span class="nick" style="color:#6d2462"><a href="#225806" label="[22:58:06]">&lt;stikonas&gt;</a></span><span class="message">on #lfs?</span></div><div class="line" id="230016"><span class="nick" style="color:#2e2a4a"><a href="#230016" label="[23:00:16]">&lt;oriansj&gt;</a></span><span class="message">figured that would be a basic first step</span></div><div class="line" id="230155"><span class="nick" style="color:#6c3d55"><a href="#230155" label="[23:01:55]">&lt;duplexsystem&gt;</a></span><span class="message">personally I'd use zpaq to compress src as it usually beats gzip by a factor of 2 for text</span></div><div class="line" id="230211"><span class="nick" style="color:#6d2462"><a href="#230211" label="[23:02:11]">&lt;stikonas&gt;</a></span><span class="message">duplexsystem: but that is not bootstrappable</span></div><div class="line" id="230218"><span class="nick" style="color:#6d2462"><a href="#230218" label="[23:02:18]">&lt;stikonas&gt;</a></span><span class="message">at least not in early stages</span></div><div class="line" id="230219"><span class="nick" style="color:#2e2a4a"><a href="#230219" label="[23:02:19]">&lt;oriansj&gt;</a></span><span class="message">duplexsystem: fair enough but ungz can be built by M2-Planet</span></div><div class="line" id="230255"><span class="nick" style="color:#2e2a4a"><a href="#230255" label="[23:02:55]">&lt;oriansj&gt;</a></span><span class="message">but if you know of a unzpaq program that M2-Planet or MesCC or TCC can build, please let us know</span></div><div class="line" id="230323"><span class="nick" style="color:#6d2462"><a href="#230323" label="[23:03:23]">&lt;stikonas&gt;</a></span><span class="message">and also somebody would have to repackage tarballs</span></div><div class="line" id="230358"><span class="nick" style="color:#2e2a4a"><a href="#230358" label="[23:03:58]">&lt;oriansj&gt;</a></span><span class="message">and if it needs TCC, at that point we can build xz which does a very solid job</span></div><div class="line" id="230618"><span class="nick" style="color:#6c3d55"><a href="#230618" label="[23:06:18]">&lt;duplexsystem&gt;</a></span><span class="message">ah true. it needs c++ but I could proabally write a one that works with m2</span></div><div class="line" id="230644"><span class="nick" style="color:#6d2462"><a href="#230644" label="[23:06:44]">&lt;stikonas&gt;</a></span><span class="message">xz itself might build with tcc</span></div><div class="line" id="230707"><span class="nick" style="color:#6d2462"><a href="#230707" label="[23:07:07]">&lt;stikonas&gt;</a></span><span class="message">but bootrapping it without pregen files needs a fairly new autotools</span></div><div class="line" id="230727"><span class="nick" style="color:#6d2462"><a href="#230727" label="[23:07:27]">&lt;stikonas&gt;</a></span><span class="message">unless we try to write a manual makefile</span></div><div class="line" id="230751"><span class="nick" style="color:#6d2462"><a href="#230751" label="[23:07:51]">&lt;stikonas&gt;</a></span><span class="message">there are actually other ways to reduce amount of tarballs</span></div><div class="line" id="230801"><span class="nick" style="color:#6d2462"><a href="#230801" label="[23:08:01]">&lt;stikonas&gt;</a></span><span class="message">the simplest is to unify linux and linux-headers versions</span></div><div class="line" id="230832"><span class="nick" style="color:#6d2462"><a href="#230832" label="[23:08:32]">&lt;stikonas&gt;</a></span><span class="message">that will immediately cut 175 MB from download</span></div><div class="line" id="230843"><span class="nick" style="color:#6d2462"><a href="#230843" label="[23:08:43]">&lt;stikonas&gt;</a></span><span class="message">(this is by far the largest tarball)</span></div><div class="line" id="232228"><span class="nick" style="color:#d9d9d9"><a href="#232228" label="[23:22:28]">&lt;sam_&gt;</a></span><span class="message">you can always speak to us too :p</span></div><div class="line" id="232241"><span class="nick" style="color:#d9d9d9"><a href="#232241" label="[23:22:41]">&lt;sam_&gt;</a></span><span class="message">i'm certainly interested</span></div><div class="line" id="232326"><span class="nick" style="color:#6d2462"><a href="#232326" label="[23:23:26]">&lt;stikonas&gt;</a></span><span class="message">sam_: well, I'm also interested in bootstrapping gentoo from live-bootstrap</span></div><div class="line" id="232651"><span class="nick" style="color:#6d2462"><a href="#232651" label="[23:26:51]">&lt;stikonas&gt;</a></span><span class="message">but I haven't looked at it yet as it would be good to first get python and newer GCC in</span></div><div class="line" id="232925"><span class="nick" style="color:#6d2462"><a href="#232925" label="[23:29:25]">&lt;stikonas&gt;</a></span><span class="message">(and right now I have stage0-uefi to finish anyway)</span></div><div class="line" id="233935"><span class="nick" style="color:#2e2a4a"><a href="#233935" label="[23:39:35]">&lt;oriansj&gt;</a></span><span class="message">sam_: well do you think Live-bootstrap is close enough that they would be interested?</span></div><div class="line" id="234000"><span class="nick" style="color:#2e2a4a"><a href="#234000" label="[23:40:00]">&lt;oriansj&gt;</a></span><span class="message">as they may want portage bootstrapped first</span></div><div class="line" id="234732"><span class="nick" style="color:#2e2a4a"><a href="#234732" label="[23:47:32]">&lt;oriansj&gt;</a></span><span class="message">sam_: also there are a good many gentoo IRC channels: <a rel="nofollow" href="https://www.gentoo.org/get-involved/irc-channels/all-channels.html">https://www.gentoo.org/get-involved/irc-channels/all-channels.html</a>  so the question is of course which would be the most appropriate to ask on.</span></div><div class="line" id="234813"><span class="nick" style="color:#6d2462"><a href="#234813" label="[23:48:13]">&lt;stikonas&gt;</a></span><span class="message">well, sam_ is already a gentoo dev, so in some sense even this channel is appropriate</span></div><div class="line" id="235301"><span class="nick" style="color:#2e2a4a"><a href="#235301" label="[23:53:01]">&lt;oriansj&gt;</a></span><span class="message">well sam_ what would increase the odds of gentoo incorporating Live-bootstrap?</span></div><div class="line" id="235444"><span class="nick" style="color:#2e2a4a"><a href="#235444" label="[23:54:44]">&lt;oriansj&gt;</a></span><span class="message">Linux from Scratch thus far seems very uninterested</span></div><div class="line" id="235550"><span class="nick" style="color:#d9d9d9"><a href="#235550" label="[23:55:50]">&lt;sam_&gt;</a></span><span class="message">I think #gentoo-toolchain is probably the best place, but maybe here for now</span></div><div class="line" id="235555"><span class="nick" style="color:#d9d9d9"><a href="#235555" label="[23:55:55]">&lt;sam_&gt;</a></span><span class="message">at first I'm interested in what integration looks like</span></div><div class="line" id="235701"><span class="nick" style="color:#6d2462"><a href="#235701" label="[23:57:01]">&lt;stikonas&gt;</a></span><span class="message">I suspect it might be some add-on on top of live-bootstrap</span></div><div class="line" id="235722"><span class="nick" style="color:#6d2462"><a href="#235722" label="[23:57:22]">&lt;stikonas&gt;</a></span><span class="message">i.e. like stage0-posix has after.kaem hook that live-bootstrap overrwrites with its build chain</span></div><div class="line" id="235759"><span class="nick" style="color:#6d2462"><a href="#235759" label="[23:57:59]">&lt;stikonas&gt;</a></span><span class="message">oriansj: to be honest I expected LSF people to be more familiar with the concept of bootstrapping</span></div><div class="line" id="235843"><span class="nick" style="color:#6d2462"><a href="#235843" label="[23:58:43]">&lt;stikonas&gt;</a></span><span class="message">before #bootstrappable community they were actually one of those who are closest to what we are doing</span></div><br /></div></body></html>