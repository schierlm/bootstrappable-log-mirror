<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-04-06.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000257"><span class="nick" style="color:#389600"><a href="#000257" label="[00:02:57]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, I'm also trying complete rewrite of the whole rootfs...</span></div><div class="line" id="000309"><span class="nick" style="color:#389600"><a href="#000309" label="[00:03:09]">&lt;stikonas&gt;</a></span><span class="message">we'll see if it's any better...</span></div><div class="line" id="000316"><span class="nick" style="color:#389600"><a href="#000316" label="[00:03:16]">&lt;stikonas&gt;</a></span><span class="message">I hope it will be more maintainable...</span></div><div class="line" id="000413"><span class="nick" style="color:#389600"><a href="#000413" label="[00:04:13]">&lt;stikonas&gt;</a></span><span class="message">I think we were also creating quite a few unnecessary sumbolic links</span></div><div class="line" id="010116"><span class="nick" style="color:#2e2a4a"><a href="#010116" label="[01:01:16]">&lt;fossy&gt;</a></span><span class="message">stikonas: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/90">https://github.com/fosslinux/live-bootstrap/pull/90</a> </span></div><div class="line" id="010151"><span class="nick" style="color:#389600"><a href="#010151" label="[01:01:51]">&lt;stikonas&gt;</a></span><span class="message">yeah, looking</span></div><div class="line" id="010155"><span class="nick" style="color:#389600"><a href="#010155" label="[01:01:55]">&lt;stikonas&gt;</a></span><span class="message">I think it's fine</span></div><div class="line" id="010210"><span class="nick" style="color:#389600"><a href="#010210" label="[01:02:10]">&lt;stikonas&gt;</a></span><span class="message">although, like I said, I might have a full rewrite of rootfs program anyway</span></div><div class="line" id="010238"><span class="nick" style="color:#2e2a4a"><a href="#010238" label="[01:02:38]">&lt;fossy&gt;</a></span><span class="message">ohh</span></div><div class="line" id="010240"><span class="nick" style="color:#2e2a4a"><a href="#010240" label="[01:02:40]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="010302"><span class="nick" style="color:#389600"><a href="#010302" label="[01:03:02]">&lt;stikonas&gt;</a></span><span class="message">well, I think we are reaching the limit where bash is maintainable...</span></div><div class="line" id="010342"><span class="nick" style="color:#2e2a4a"><a href="#010342" label="[01:03:42]">&lt;fossy&gt;</a></span><span class="message">are you rewriting in a different langugage</span></div><div class="line" id="010353"><span class="nick" style="color:#389600"><a href="#010353" label="[01:03:53]">&lt;stikonas&gt;</a></span><span class="message">in python</span></div><div class="line" id="010404"><span class="nick" style="color:#2e2a4a"><a href="#010404" label="[01:04:04]">&lt;fossy&gt;</a></span><span class="message">yeah ok i'm cool with that</span></div><div class="line" id="010411"><span class="nick" style="color:#2e2a4a"><a href="#010411" label="[01:04:11]">&lt;fossy&gt;</a></span><span class="message">just it needs to be kept simple</span></div><div class="line" id="010419"><span class="nick" style="color:#389600"><a href="#010419" label="[01:04:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'm trying to make it much more structured</span></div><div class="line" id="010424"><span class="nick" style="color:#389600"><a href="#010424" label="[01:04:24]">&lt;stikonas&gt;</a></span><span class="message">and add some extra features</span></div><div class="line" id="010429"><span class="nick" style="color:#389600"><a href="#010429" label="[01:04:29]">&lt;stikonas&gt;</a></span><span class="message">e.g. change tmpdir</span></div><div class="line" id="010431"><span class="nick" style="color:#2e2a4a"><a href="#010431" label="[01:04:31]">&lt;fossy&gt;</a></span><span class="message">people need to be able to make a rootfs by hand without too much work</span></div><div class="line" id="010443"><span class="nick" style="color:#389600"><a href="#010443" label="[01:04:43]">&lt;stikonas&gt;</a></span><span class="message">which let's running a few bootstraps simultaneosly</span></div><div class="line" id="010448"><span class="nick" style="color:#389600"><a href="#010448" label="[01:04:48]">&lt;stikonas&gt;</a></span><span class="message">it mostly mirrors what we did in bash</span></div><div class="line" id="010455"><span class="nick" style="color:#2e2a4a"><a href="#010455" label="[01:04:55]">&lt;fossy&gt;</a></span><span class="message">hm, yes, sounds good</span></div><div class="line" id="010501"><span class="nick" style="color:#389600"><a href="#010501" label="[01:05:01]">&lt;stikonas&gt;</a></span><span class="message">actually, I'm even trying toremove some unnecessary steps that we were doing</span></div><div class="line" id="010514"><span class="nick" style="color:#389600"><a href="#010514" label="[01:05:14]">&lt;stikonas&gt;</a></span><span class="message">also remove all symlinks from preparation step</span></div><div class="line" id="010524"><span class="nick" style="color:#2e2a4a"><a href="#010524" label="[01:05:24]">&lt;fossy&gt;</a></span><span class="message">how are you doing that</span></div><div class="line" id="010536"><span class="nick" style="color:#389600"><a href="#010536" label="[01:05:36]">&lt;stikonas&gt;</a></span><span class="message">to most part they were not even needed</span></div><div class="line" id="010541"><span class="nick" style="color:#2e2a4a"><a href="#010541" label="[01:05:41]">&lt;fossy&gt;</a></span><span class="message">hmst</span></div><div class="line" id="010543"><span class="nick" style="color:#2e2a4a"><a href="#010543" label="[01:05:43]">&lt;fossy&gt;</a></span><span class="message">probably leftovers</span></div><div class="line" id="010547"><span class="nick" style="color:#2e2a4a"><a href="#010547" label="[01:05:47]">&lt;fossy&gt;</a></span><span class="message">from when other things were done</span></div><div class="line" id="010556"><span class="nick" style="color:#389600"><a href="#010556" label="[01:05:56]">&lt;stikonas&gt;</a></span><span class="message">and in some place I'm just installing into another dir</span></div><div class="line" id="010603"><span class="nick" style="color:#389600"><a href="#010603" label="[01:06:03]">&lt;stikonas&gt;</a></span><span class="message">well, I'm now at the linking tcc stage</span></div><div class="line" id="010610"><span class="nick" style="color:#389600"><a href="#010610" label="[01:06:10]">&lt;stikonas&gt;</a></span><span class="message">so quite far now</span></div><div class="line" id="010617"><span class="nick" style="color:#2e2a4a"><a href="#010617" label="[01:06:17]">&lt;fossy&gt;</a></span><span class="message">ok good</span></div><div class="line" id="011336"><span class="nick" style="color:#389600"><a href="#011336" label="[01:13:36]">&lt;stikonas&gt;</a></span><span class="message">fossy: early wip <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/99b3d76b223c10ee052e93f8f975896939ca51a2">https://github.com/stikonas/live-bootstrap/commit/99b3d76b223c10ee052e93f8f975896939ca51a2</a> </span></div><div class="line" id="011813"><span class="nick" style="color:#389600"><a href="#011813" label="[01:18:13]">&lt;stikonas&gt;</a></span><span class="message">well, some things are a bit more complicated than in bash...</span></div><div class="line" id="011823"><span class="nick" style="color:#389600"><a href="#011823" label="[01:18:23]">&lt;stikonas&gt;</a></span><span class="message">but in general I think there is more flexibility</span></div><div class="line" id="020418"><span class="nick" style="color:#6b8072"><a href="#020418" label="[02:04:18]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: if you remember mes-m2 is pre-guix and that we previously worked together to setup mes-m2 with a copy of mescc that works with the exmaple commands in the README; however it appears the version of mes.c that is buildable by M2-Planet and able to build TCC; unfortunately includes a version of mescc that isn't runnable by guile.</span></div><div class="line" id="020514"><span class="nick" style="color:#6b8072"><a href="#020514" label="[02:05:14]">&lt;OriansJ`&gt;</a></span><span class="message">but it is not able to build TCC with the version of mescc we previously setup.</span></div><div class="line" id="061603"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="084444"><span class="nick" style="color:#80b1d3"><a href="#084444" label="[08:44:44]">&lt;gforce_d11977&gt;</a></span><span class="message">good morning(here), after having a 500 (!) full ci-runs, the bash-issue seems solved (adding &quot;sleep 15&quot; after &quot;sync&quot; in bash-5.1.sh), so i will have another try with shorter sleep...</span></div><div class="line" id="084555"><span class="nick" style="color:#80b1d3"><a href="#084555" label="[08:45:55]">&lt;gforce_d11977&gt;</a></span><span class="message">there was only 3 times an issue with autoconf-2.53 which aborted with &quot;make[1]: Nothing to be done for `all'.&quot; - see: <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/bootstrap.log-25.txt">http://intercity-vpn.de/bootstrap/bootstrap.log-25.txt</a> </span></div><div class="line" id="084803"><span class="nick" style="color:#80b1d3"><a href="#084803" label="[08:48:03]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: fossy: bauen1: pder: i really have no explanation for that: we do not make parallel runs, there are no concurrent programs/jobs, it's just a single-core-qemu run, it's a RAM-Disk: how is it possible, that we have variations?</span></div><div class="line" id="085623"><span class="nick" style="color:#80b1d3"><a href="#085623" label="[08:56:23]">&lt;gforce_d11977&gt;</a></span><span class="message">also i have &gt;10 times aborted run like this (automake-1.13.4: &quot;Argument &quot;&quot; isn't numeric in bitwise and (&amp;) at ./gen-testsuite-part line 67.&quot; see: <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/bootstrap.log-19.txt">http://intercity-vpn.de/bootstrap/bootstrap.log-19.txt</a> </span></div><div class="line" id="085735"><span class="nick" style="color:#80b1d3"><a href="#085735" label="[08:57:35]">&lt;gforce_d11977&gt;</a></span><span class="message">i'am glad to help further and have now an easy setup for making parallel qemu invokations (48 at the same time, so ~500 runs in 5 hours)</span></div><div class="line" id="090437"><span class="nick" style="color:#80b1d3"><a href="#090437" label="[09:04:37]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: Q: &quot;are compute resources an issue for you at all ?&quot; -&gt; i'am unsure what that means? i have several &quot;strong&quot; computers, if you need SSH access, no problem: or maybe even an external host with github actions?</span></div><div class="line" id="101132"><span class="nick" style="color:#389600"><a href="#101132" label="[10:11:32]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: thanks for testing parallel runs. So I guess we have 3% failure rate or so...</span></div><div class="line" id="102415"><span class="nick" style="color:#80b1d3"><a href="#102415" label="[10:24:15]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: regarding coreutils6: why do we install date? wouldnt it be better to use a stub like &quot;#!/bin/sh\necho 2000-01-01&quot; or something alike?</span></div><div class="line" id="102517"><span class="nick" style="color:#80b1d3"><a href="#102517" label="[10:25:17]">&lt;gforce_d11977&gt;</a></span><span class="message">or in other words: do you know which package *needs* the 'date' program?</span></div><div class="line" id="102716"><span class="nick" style="color:#389600"><a href="#102716" label="[10:27:16]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: nothing needs and nothing uses it...</span></div><div class="line" id="102725"><span class="nick" style="color:#389600"><a href="#102725" label="[10:27:25]">&lt;stikonas&gt;</a></span><span class="message">as far as I know</span></div><div class="line" id="104513"><span class="nick" style="color:#80b1d3"><a href="#104513" label="[10:45:13]">&lt;gforce_d11977&gt;</a></span><span class="message">so building coreutils6-date was just a &quot;try-if-it-works&quot;?</span></div><div class="line" id="104635"><span class="nick" style="color:#80b1d3"><a href="#104635" label="[10:46:35]">&lt;gforce_d11977&gt;</a></span><span class="message">in steps.rst, there is also &quot;mktemp&quot; and sha256sum mentioned, but i dont see them in main.mk?!</span></div><div class="line" id="110557"><span class="nick" style="color:#6d2462"><a href="#110557" label="[11:05:57]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: i was just wondering since you're doing so many full runs</span></div><div class="line" id="110618"><span class="nick" style="color:#6d2462"><a href="#110618" label="[11:06:18]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: timing can still cause variation in the runs</span></div><div class="line" id="110727"><span class="nick" style="color:#80b1d3"><a href="#110727" label="[11:07:27]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: i was unsatisfied with not finding the reproducibility issues and wanted *results*. having many qemu instances running seemed like an easy option.</span></div><div class="line" id="110735"><span class="nick" style="color:#6d2462"><a href="#110735" label="[11:07:35]">&lt;bauen1&gt;</a></span><span class="message">yes</span></div><div class="line" id="110753"><span class="nick" style="color:#6d2462"><a href="#110753" label="[11:07:53]">&lt;bauen1&gt;</a></span><span class="message">maybe there are some options to make the qemu runs more &quot;volatile&quot; to make it easier to reproduce the issues</span></div><div class="line" id="110809"><span class="nick" style="color:#80b1d3"><a href="#110809" label="[11:08:09]">&lt;gforce_d11977&gt;</a></span><span class="message">but timing should NOT be an issue, only if any built piece uses timestamps</span></div><div class="line" id="110855"><span class="nick" style="color:#6d2462"><a href="#110855" label="[11:08:55]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: i'm more thinking about race conditions if a `sleep 15` solves some of the issues</span></div><div class="line" id="110932"><span class="nick" style="color:#80b1d3"><a href="#110932" label="[11:09:32]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: if we just copy kernel + initrd to uniq files and boot them, then i can not imagine any race cinditions</span></div><div class="line" id="110937"><span class="nick" style="color:#6d2462"><a href="#110937" label="[11:09:37]">&lt;bauen1&gt;</a></span><span class="message">you're running the VMs with KVM i suspect ?</span></div><div class="line" id="110951"><span class="nick" style="color:#80b1d3"><a href="#110951" label="[11:09:51]">&lt;gforce_d11977&gt;</a></span><span class="message">yes, this sleep it really strange</span></div><div class="line" id="110955"><span class="nick" style="color:#80b1d3"><a href="#110955" label="[11:09:55]">&lt;gforce_d11977&gt;</a></span><span class="message">yes, for now i use kvm</span></div><div class="line" id="111009"><span class="nick" style="color:#80b1d3"><a href="#111009" label="[11:10:09]">&lt;gforce_d11977&gt;</a></span><span class="message">i can switch this off (just for testing)</span></div><div class="line" id="111026"><span class="nick" style="color:#6d2462"><a href="#111026" label="[11:10:26]">&lt;bauen1&gt;</a></span><span class="message">maybe you can try a few runs without kvm and see if the issue can still happen (but that's just a semi random idea of &quot;throw everything at the wall and see what sticks&quot;)</span></div><div class="line" id="111057"><span class="nick" style="color:#80b1d3"><a href="#111057" label="[11:10:57]">&lt;gforce_d11977&gt;</a></span><span class="message">i think this is a GOOD idea and i will go for it and report</span></div><div class="line" id="111106"><span class="nick" style="color:#6d2462"><a href="#111106" label="[11:11:06]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: it's quite possible that you're hitting a bug in some of the software</span></div><div class="line" id="111121"><span class="nick" style="color:#6d2462"><a href="#111121" label="[11:11:21]">&lt;bauen1&gt;</a></span><span class="message">and race conditions can still happen in a single core because you still have multiple processes</span></div><div class="line" id="111147"><span class="nick" style="color:#80b1d3"><a href="#111147" label="[11:11:47]">&lt;gforce_d11977&gt;</a></span><span class="message">i also was thinking about maybe building recent qemu.git</span></div><div class="line" id="111159"><span class="nick" style="color:#80b1d3"><a href="#111159" label="[11:11:59]">&lt;gforce_d11977&gt;</a></span><span class="message">but i will first try without kvm</span></div><div class="line" id="111459"><span class="nick" style="color:#6d2462"><a href="#111459" label="[11:14:59]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: and for the nothing to be done for all you could try to run make with --debug to have it show **why** it thinks it doesn't need to do anything, that could very well be a timing issue</span></div><div class="line" id="111546"><span class="nick" style="color:#80b1d3"><a href="#111546" label="[11:15:46]">&lt;gforce_d11977&gt;</a></span><span class="message">ok</span></div><div class="line" id="111629"><span class="nick" style="color:#6d2462"><a href="#111629" label="[11:16:29]">&lt;bauen1&gt;</a></span><span class="message">btw does anything in the build rely on random data ? (/dev/{,u}random, getrandom)</span></div><div class="line" id="111635"><span class="nick" style="color:#6d2462"><a href="#111635" label="[11:16:35]">&lt;bauen1&gt;</a></span><span class="message">or rather use it</span></div><div class="line" id="111734"><span class="nick" style="color:#80b1d3"><a href="#111734" label="[11:17:34]">&lt;gforce_d11977&gt;</a></span><span class="message">'git grep random' only shows, that run.sh makes the devnodes</span></div><div class="line" id="111821"><span class="nick" style="color:#80b1d3"><a href="#111821" label="[11:18:21]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: which program uses /dev/random and/or /dev/urandom ? we do we need them?</span></div><div class="line" id="111857"><span class="nick" style="color:#389600"><a href="#111857" label="[11:18:57]">&lt;stikonas&gt;</a></span><span class="message">same, nothing use sthem</span></div><div class="line" id="111903"><span class="nick" style="color:#389600"><a href="#111903" label="[11:19:03]">&lt;stikonas&gt;</a></span><span class="message"> /dev/null is used though</span></div><div class="line" id="111913"><span class="nick" style="color:#389600"><a href="#111913" label="[11:19:13]">&lt;stikonas&gt;</a></span><span class="message">but we might need random later</span></div><div class="line" id="111922"><span class="nick" style="color:#389600"><a href="#111922" label="[11:19:22]">&lt;stikonas&gt;</a></span><span class="message">e.g. openssl might be very unhappy without random</span></div><div class="line" id="111929"><span class="nick" style="color:#80b1d3"><a href="#111929" label="[11:19:29]">&lt;gforce_d11977&gt;</a></span><span class="message">thats terrible. we have too many things &quot;just build&quot; or enabled, which are not really needed</span></div><div class="line" id="111955"><span class="nick" style="color:#389600"><a href="#111955" label="[11:19:55]">&lt;stikonas&gt;</a></span><span class="message">they will be built anyway just a bit later if we exclude them</span></div><div class="line" id="112003"><span class="nick" style="color:#389600"><a href="#112003" label="[11:20:03]">&lt;stikonas&gt;</a></span><span class="message">once we build next coreutils with autotools</span></div><div class="line" id="112007"><span class="nick" style="color:#389600"><a href="#112007" label="[11:20:07]">&lt;stikonas&gt;</a></span><span class="message">everything will be built</span></div><div class="line" id="112021"><span class="nick" style="color:#389600"><a href="#112021" label="[11:20:21]">&lt;stikonas&gt;</a></span><span class="message">but yes, some of them were built as a test</span></div><div class="line" id="112030"><span class="nick" style="color:#80b1d3"><a href="#112030" label="[11:20:30]">&lt;gforce_d11977&gt;</a></span><span class="message">hmmm....will think about it</span></div><div class="line" id="112050"><span class="nick" style="color:#389600"><a href="#112050" label="[11:20:50]">&lt;stikonas&gt;</a></span><span class="message">e.g. seq is probably not used, but it was good to figure out some mes bug</span></div><div class="line" id="112226"><span class="nick" style="color:#389600"><a href="#112226" label="[11:22:26]">&lt;stikonas&gt;</a></span><span class="message">bauen1, gforce_d11977 : since that race affects bash 2, it'ls likely to be related to mes libc</span></div><div class="line" id="112241"><span class="nick" style="color:#389600"><a href="#112241" label="[11:22:41]">&lt;stikonas&gt;</a></span><span class="message">although, might be something wrong in old bash too, but less likely</span></div><div class="line" id="120133"><span class="nick" style="color:#2e2a4a"><a href="#120133" label="[12:01:33]">&lt;fossy&gt;</a></span><span class="message">stikonas: feel free to PR your python thingy whenever ready</span></div><div class="line" id="120140"><span class="nick" style="color:#2e2a4a"><a href="#120140" label="[12:01:40]">&lt;fossy&gt;</a></span><span class="message">metaconfig is so fucky</span></div><div class="line" id="120146"><span class="nick" style="color:#2e2a4a"><a href="#120146" label="[12:01:46]">&lt;fossy&gt;</a></span><span class="message">like wtf is this</span></div><div class="line" id="120206"><span class="nick" style="color:#389600"><a href="#120206" label="[12:02:06]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah, I'll first do tar-1.34 this evening</span></div><div class="line" id="120207"><span class="nick" style="color:#2e2a4a"><a href="#120207" label="[12:02:07]">&lt;fossy&gt;</a></span><span class="message">there are 50000 different versions of it, people applying patches here and there, inconsistent results, etc, etc</span></div><div class="line" id="120210"><span class="nick" style="color:#2e2a4a"><a href="#120210" label="[12:02:10]">&lt;fossy&gt;</a></span><span class="message">okey</span></div><div class="line" id="120231"><span class="nick" style="color:#389600"><a href="#120231" label="[12:02:31]">&lt;stikonas&gt;</a></span><span class="message">so messed up :(</span></div><div class="line" id="120247"><span class="nick" style="color:#389600"><a href="#120247" label="[12:02:47]">&lt;stikonas&gt;</a></span><span class="message">if that's so bad, another option is to build 5.8 using our method</span></div><div class="line" id="120250"><span class="nick" style="color:#2e2a4a"><a href="#120250" label="[12:02:50]">&lt;fossy&gt;</a></span><span class="message">also Perl's configure explicitly says &quot;feel free to submit patches against this generated Configure&quot;</span></div><div class="line" id="120255"><span class="nick" style="color:#2e2a4a"><a href="#120255" label="[12:02:55]">&lt;fossy&gt;</a></span><span class="message">yeah that is an option</span></div><div class="line" id="120307"><span class="nick" style="color:#2e2a4a"><a href="#120307" label="[12:03:07]">&lt;fossy&gt;</a></span><span class="message">i'm trying this thing that might work according to the README but if it dosen't then i'll just do that</span></div><div class="line" id="120320"><span class="nick" style="color:#389600"><a href="#120320" label="[12:03:20]">&lt;stikonas&gt;</a></span><span class="message">5.8 should get us much further...</span></div><div class="line" id="120330"><span class="nick" style="color:#389600"><a href="#120330" label="[12:03:30]">&lt;stikonas&gt;</a></span><span class="message">even 5.6 was almost enough</span></div><div class="line" id="120705"><span class="nick" style="color:#389600"><a href="#120705" label="[12:07:05]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe it's worth asking on some perl channel? how do you rebuild Configure?</span></div><div class="line" id="120721"><span class="nick" style="color:#389600"><a href="#120721" label="[12:07:21]">&lt;stikonas&gt;</a></span><span class="message">although, if it's partially generated, partially handwritten, that's a real mess</span></div><div class="line" id="122349"><span class="nick" style="color:#6d2462"><a href="#122349" label="[12:23:49]">&lt;bauen1&gt;</a></span><span class="message">O_o that's some mad scientist level madness</span></div><div class="line" id="124317"><span class="nick" style="color:#6b8072"><a href="#124317" label="[12:43:17]">&lt;OriansJ`&gt;</a></span><span class="message">never under estimate the lengths programers go to avoid having to write code.</span></div><div class="line" id="141210"><span class="nick" style="color:#2e2a4a"><a href="#141210" label="[14:12:10]">&lt;fossy&gt;</a></span><span class="message">stikonas: i think i will be told &quot;Don't&quot;</span></div><div class="line" id="141210"><span class="nick" style="color:#6d2462"><a href="#141210" label="[14:12:10]">&lt;bauen1&gt;</a></span><span class="message">latest wip: <a rel="nofollow" href="https://github.com/bauen1/live-bootstrap/tree/add-gnu-stow">https://github.com/bauen1/live-bootstrap/tree/add-gnu-stow</a> </span></div><div class="line" id="141218"><span class="nick" style="color:#2e2a4a"><a href="#141218" label="[14:12:18]">&lt;fossy&gt;</a></span><span class="message">however i have got Configure working</span></div><div class="line" id="141222"><span class="nick" style="color:#2e2a4a"><a href="#141222" label="[14:12:22]">&lt;fossy&gt;</a></span><span class="message">but config_h.SH is not generating</span></div><div class="line" id="141232"><span class="nick" style="color:#6d2462"><a href="#141232" label="[14:12:32]">&lt;bauen1&gt;</a></span><span class="message">i've now switched to using upkgs/$pkgname-$pkgversion-$versionsuffix</span></div><div class="line" id="141233"><span class="nick" style="color:#2e2a4a"><a href="#141233" label="[14:12:33]">&lt;fossy&gt;</a></span><span class="message">that is for tomorrow</span></div><div class="line" id="141243"><span class="nick" style="color:#2e2a4a"><a href="#141243" label="[14:12:43]">&lt;fossy&gt;</a></span><span class="message">bauen1: versionsuffix?</span></div><div class="line" id="141249"><span class="nick" style="color:#6d2462"><a href="#141249" label="[14:12:49]">&lt;bauen1&gt;</a></span><span class="message">that allows e.g. to &quot;link&quot; multiple packages at once etc..</span></div><div class="line" id="141256"><span class="nick" style="color:#6d2462"><a href="#141256" label="[14:12:56]">&lt;bauen1&gt;</a></span><span class="message">fossy: stuff like pass1 / pass2</span></div><div class="line" id="141257"><span class="nick" style="color:#389600"><a href="#141257" label="[14:12:57]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, which version of python is that?</span></div><div class="line" id="141300"><span class="nick" style="color:#389600"><a href="#141300" label="[14:13:00]">&lt;stikonas&gt;</a></span><span class="message">sorry perl</span></div><div class="line" id="141301"><span class="nick" style="color:#2e2a4a"><a href="#141301" label="[14:13:01]">&lt;fossy&gt;</a></span><span class="message">ooh</span></div><div class="line" id="141303"><span class="nick" style="color:#2e2a4a"><a href="#141303" label="[14:13:03]">&lt;fossy&gt;</a></span><span class="message">5.12.5</span></div><div class="line" id="141311"><span class="nick" style="color:#2e2a4a"><a href="#141311" label="[14:13:11]">&lt;fossy&gt;</a></span><span class="message">needed before latest</span></div><div class="line" id="141316"><span class="nick" style="color:#6d2462"><a href="#141316" label="[14:13:16]">&lt;bauen1&gt;</a></span><span class="message">fossy: because we do sometimes have multiple of those and they can interfer with each other ...</span></div><div class="line" id="141320"><span class="nick" style="color:#389600"><a href="#141320" label="[14:13:20]">&lt;stikonas&gt;</a></span><span class="message">oh and that one builds fine with bison?</span></div><div class="line" id="141323"><span class="nick" style="color:#2e2a4a"><a href="#141323" label="[14:13:23]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="141326"><span class="nick" style="color:#389600"><a href="#141326" label="[14:13:26]">&lt;stikonas&gt;</a></span><span class="message">ok...</span></div><div class="line" id="141326"><span class="nick" style="color:#2e2a4a"><a href="#141326" label="[14:13:26]">&lt;fossy&gt;</a></span><span class="message">i just patched out the check</span></div><div class="line" id="141331"><span class="nick" style="color:#2e2a4a"><a href="#141331" label="[14:13:31]">&lt;fossy&gt;</a></span><span class="message">and it worked</span></div><div class="line" id="141331"><span class="nick" style="color:#389600"><a href="#141331" label="[14:13:31]">&lt;stikonas&gt;</a></span><span class="message">oh, good</span></div><div class="line" id="141336"><span class="nick" style="color:#389600"><a href="#141336" label="[14:13:36]">&lt;stikonas&gt;</a></span><span class="message">yeah, it should work...</span></div><div class="line" id="141342"><span class="nick" style="color:#389600"><a href="#141342" label="[14:13:42]">&lt;stikonas&gt;</a></span><span class="message">after all, it worked in earlier pythons too</span></div><div class="line" id="141347"><span class="nick" style="color:#389600"><a href="#141347" label="[14:13:47]">&lt;stikonas&gt;</a></span><span class="message">argh, perls</span></div><div class="line" id="141349"><span class="nick" style="color:#2e2a4a"><a href="#141349" label="[14:13:49]">&lt;fossy&gt;</a></span><span class="message">heh</span></div><div class="line" id="141353"><span class="nick" style="color:#2e2a4a"><a href="#141353" label="[14:13:53]">&lt;fossy&gt;</a></span><span class="message">python getting to the brain :P</span></div><div class="line" id="141433"><span class="nick" style="color:#389600"><a href="#141433" label="[14:14:33]">&lt;stikonas&gt;</a></span><span class="message">not sure which python... In my day job we also use some python</span></div><div class="line" id="141507"><span class="nick" style="color:#389600"><a href="#141507" label="[14:15:07]">&lt;stikonas&gt;</a></span><span class="message">other languages too, but right now I'm doing something in python</span></div><div class="line" id="141557"><span class="nick" style="color:#389600"><a href="#141557" label="[14:15:57]">&lt;stikonas&gt;</a></span><span class="message">fossy:  I saw some strange restriction on perl on gcc page though</span></div><div class="line" id="141604"><span class="nick" style="color:#6d2462"><a href="#141604" label="[14:16:04]">&lt;bauen1&gt;</a></span><span class="message">stikonas: looks quite nice, ideally i'd want a way not to use sudo and to invoke mount / umount directly, and the not mounting a tmpfs won't work quite yet</span></div><div class="line" id="141606"><span class="nick" style="color:#389600"><a href="#141606" label="[14:16:06]">&lt;stikonas&gt;</a></span><span class="message">not sure if it's strict</span></div><div class="line" id="141627"><span class="nick" style="color:#389600"><a href="#141627" label="[14:16:27]">&lt;stikonas&gt;</a></span><span class="message">but I think it says Perl 5.6  - 5.24 or something like that</span></div><div class="line" id="141654"><span class="nick" style="color:#389600"><a href="#141654" label="[14:16:54]">&lt;stikonas&gt;</a></span><span class="message">bauen1: well, at the moment it's the same as rootfs.sh in regards to mount/unmount</span></div><div class="line" id="141705"><span class="nick" style="color:#389600"><a href="#141705" label="[14:17:05]">&lt;stikonas&gt;</a></span><span class="message">(just probably slightly better unmounting because it is int the destructor)</span></div><div class="line" id="141734"><span class="nick" style="color:#389600"><a href="#141734" label="[14:17:34]">&lt;stikonas&gt;</a></span><span class="message">but yes, it would be nicer to avoid sudo</span></div><div class="line" id="141757"><span class="nick" style="color:#389600"><a href="#141757" label="[14:17:57]">&lt;stikonas&gt;</a></span><span class="message">(without making the whole thing run as root)</span></div><div class="line" id="141811"><span class="nick" style="color:#6d2462"><a href="#141811" label="[14:18:11]">&lt;bauen1&gt;</a></span><span class="message">stikonas: sudo breaks with user namespaces as i'm currently using them, so i have to edit rootfs.sh to fix things</span></div><div class="line" id="141826"><span class="nick" style="color:#6d2462"><a href="#141826" label="[14:18:26]">&lt;bauen1&gt;</a></span><span class="message">but yeah i'll see about making a nice commit of my user namespace thingy</span></div><div class="line" id="141913"><span class="nick" style="color:#6d2462"><a href="#141913" label="[14:19:13]">&lt;bauen1&gt;</a></span><span class="message">currently even chroot still has network access</span></div><div class="line" id="142352"><span class="nick" style="color:#6d2462"><a href="#142352" label="[14:23:52]">&lt;bauen1&gt;</a></span><span class="message">i think seperating the downloading and the chroot creation (copying and extraction) part would make things easier, or i need to figure out why tar starts complaining about invaid uids when run with unshare --map-root-user</span></div><div class="line" id="142412"><span class="nick" style="color:#6d2462"><a href="#142412" label="[14:24:12]">&lt;bauen1&gt;</a></span><span class="message">both sound like work ._.</span></div><div class="line" id="142440"><span class="nick" style="color:#389600"><a href="#142440" label="[14:24:40]">&lt;stikonas&gt;</a></span><span class="message">is that host tar used to unpack first tar-1.12?</span></div><div class="line" id="142452"><span class="nick" style="color:#389600"><a href="#142452" label="[14:24:52]">&lt;stikonas&gt;</a></span><span class="message">or bootstrapped tar</span></div><div class="line" id="142508"><span class="nick" style="color:#6d2462"><a href="#142508" label="[14:25:08]">&lt;bauen1&gt;</a></span><span class="message">host tar</span></div><div class="line" id="142520"><span class="nick" style="color:#6d2462"><a href="#142520" label="[14:25:20]">&lt;bauen1&gt;</a></span><span class="message">user namespaces messes with tar trying to chown things i believe</span></div><div class="line" id="142629"><span class="nick" style="color:#6d2462"><a href="#142629" label="[14:26:29]">&lt;bauen1&gt;</a></span><span class="message">yes, tar tries to chown 1000:1000 , which won't work in the user namespace</span></div><div class="line" id="142906"><span class="nick" style="color:#6d2462"><a href="#142906" label="[14:29:06]">&lt;bauen1&gt;</a></span><span class="message">oh, gnu tar is smart and if run as root tries to chown, which it doesn't as normal user</span></div><div class="line" id="143013"><span class="nick" style="color:#6d2462"><a href="#143013" label="[14:30:13]">&lt;bauen1&gt;</a></span><span class="message">so i'd have to add `--no-same-owner --no-same-permissions` in the rootfs script invokations of tar (and possibly inside the chroot too)</span></div><div class="line" id="143051"><span class="nick" style="color:#2e2a4a"><a href="#143051" label="[14:30:51]">&lt;fossy&gt;</a></span><span class="message">stikonas: hmst</span></div><div class="line" id="143605"><span class="nick" style="color:#389600"><a href="#143605" label="[14:36:05]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://gcc.gnu.org/install/prerequisites.html">https://gcc.gnu.org/install/prerequisites.html</a> </span></div><div class="line" id="143615"><span class="nick" style="color:#389600"><a href="#143615" label="[14:36:15]">&lt;stikonas&gt;</a></span><span class="message">anyway, it might be that nobody just updated the page</span></div><div class="line" id="143641"><span class="nick" style="color:#389600"><a href="#143641" label="[14:36:41]">&lt;stikonas&gt;</a></span><span class="message">just like perl's regen_perly.pl unnecesserily limits bison versions</span></div><div class="line" id="154235"><span class="nick" style="color:#6d2462"><a href="#154235" label="[15:42:35]">&lt;bauen1&gt;</a></span><span class="message">uhm, interesting looks like the makefile generated for autoconf-2.13 does not support DESTDIR ._.</span></div><div class="line" id="154240"><span class="nick" style="color:#6d2462"><a href="#154240" label="[15:42:40]">&lt;bauen1&gt;</a></span><span class="message">ffs gnu</span></div><div class="line" id="154511"><span class="nick" style="color:#389600"><a href="#154511" label="[15:45:11]">&lt;stikonas&gt;</a></span><span class="message">bauen1: oh, worth looking at what distros do</span></div><div class="line" id="154536"><span class="nick" style="color:#389600"><a href="#154536" label="[15:45:36]">&lt;stikonas&gt;</a></span><span class="message">after all, they do install autoconf-2.13</span></div><div class="line" id="154601"><span class="nick" style="color:#389600"><a href="#154601" label="[15:46:01]">&lt;stikonas&gt;</a></span><span class="message">bauen1: oh, there is a patch</span></div><div class="line" id="154654"><span class="nick" style="color:#6d2462"><a href="#154654" label="[15:46:54]">&lt;bauen1&gt;</a></span><span class="message">i'll try to just supply prefix=&quot;${DESTDIR}${PREFIX}&quot; into the Makefile, easier than doing a proper patch for now</span></div><div class="line" id="154706"><span class="nick" style="color:#389600"><a href="#154706" label="[15:47:06]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitweb.gentoo.org/repo/gentoo.git/tree/sys-devel/autoconf/files/autoconf-2.13-destdir.patch">https://gitweb.gentoo.org/repo/gentoo.git/tree/sys-devel/autoconf/files/autoconf-2.13-destdir.patch</a> </span></div><div class="line" id="154746"><span class="nick" style="color:#6d2462"><a href="#154746" label="[15:47:46]">&lt;bauen1&gt;</a></span><span class="message">yeah this will achieve the same thing</span></div><div class="line" id="161005"><span class="nick" style="color:#234e69"><a href="#161005" label="[16:10:05]">&lt;pder&gt;</a></span><span class="message">gforce_d11977: How do you reproduce the issue with pipesize.h having the wrong value?  Do I need a specific kernel?  What percentage of runs are you getting the failure?  I'd like to try to build a simpler test that I can run repeatedly and quickly.</span></div><div class="line" id="161411"><span class="nick" style="color:#80b1d3"><a href="#161411" label="[16:14:11]">&lt;gforce_d11977&gt;</a></span><span class="message">pder: i cannot reproduce it. about 3-6% of all runs are affected. i change the minikernel (&quot;./rootsfs.sh minikernel&quot;) to this invocation:</span></div><div class="line" id="161608"><span class="nick" style="color:#80b1d3"><a href="#161608" label="[16:16:08]">&lt;gforce_d11977&gt;</a></span><span class="message">git clone --depth 1 <a rel="nofollow" href="https://github.com/bittorf/kritis-linux.git">https://github.com/bittorf/kritis-linux.git</a>  &amp;&amp; kritis-linux/ci_helper.sh --arch i386 --qemucpu 486 --feature kflock --ramsize 3G --kernel 3.18.140 --initrd initramfs.igz --log &quot;$LOGFILE&quot;</span></div><div class="line" id="161641"><span class="nick" style="color:#80b1d3"><a href="#161641" label="[16:16:41]">&lt;gforce_d11977&gt;</a></span><span class="message">(my qemu has no support for --cpu 386, so i have to go for 486)</span></div><div class="line" id="161710"><span class="nick" style="color:#80b1d3"><a href="#161710" label="[16:17:10]">&lt;gforce_d11977&gt;</a></span><span class="message">(you can check that with qemu-system-i386 --cpu help)</span></div><div class="line" id="161834"><span class="nick" style="color:#80b1d3"><a href="#161834" label="[16:18:34]">&lt;gforce_d11977&gt;</a></span><span class="message">but maybe it does not help you: i added some debug stuff to the scripts, e.g. cat pipesize.h and base64 /after/bin/bash</span></div><div class="line" id="161857"><span class="nick" style="color:#80b1d3"><a href="#161857" label="[16:18:57]">&lt;gforce_d11977&gt;</a></span><span class="message">otherwise you only see &quot;bash: FAILED&quot; and aborted run</span></div><div class="line" id="161914"><span class="nick" style="color:#234e69"><a href="#161914" label="[16:19:14]">&lt;pder&gt;</a></span><span class="message">Do you get 512 for pipesize when it fails?</span></div><div class="line" id="161926"><span class="nick" style="color:#80b1d3"><a href="#161926" label="[16:19:26]">&lt;gforce_d11977&gt;</a></span><span class="message">yes</span></div><div class="line" id="161939"><span class="nick" style="color:#80b1d3"><a href="#161939" label="[16:19:39]">&lt;gforce_d11977&gt;</a></span><span class="message">i have a log for that, wait:</span></div><div class="line" id="162108"><span class="nick" style="color:#80b1d3"><a href="#162108" label="[16:21:08]">&lt;gforce_d11977&gt;</a></span><span class="message"> <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/lbmulti-log-298527.txt">http://intercity-vpn.de/bootstrap/lbmulti-log-298527.txt</a>  (search for &quot;bash: FAILED&quot;) and</span></div><div class="line" id="162134"><span class="nick" style="color:#234e69"><a href="#162134" label="[16:21:34]">&lt;pder&gt;</a></span><span class="message">ok, thanks</span></div><div class="line" id="162437"><span class="nick" style="color:#80b1d3"><a href="#162437" label="[16:24:37]">&lt;gforce_d11977&gt;</a></span><span class="message">(sorry, cannot find other logs for now, i have some where do &quot;cat pilesize.h&quot; and you can see #define PIPESIZE 512</span></div><div class="line" id="162907"><span class="nick" style="color:#389600"><a href="#162907" label="[16:29:07]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: maybe you can open issues on gh with all intermittent errors you found (one issue per error)?</span></div><div class="line" id="162942"><span class="nick" style="color:#389600"><a href="#162942" label="[16:29:42]">&lt;stikonas&gt;</a></span><span class="message">we have no way of reproducing, but at least something not to forget...</span></div><div class="line" id="163208"><span class="nick" style="color:#6d2462"><a href="#163208" label="[16:32:08]">&lt;bauen1&gt;</a></span><span class="message">^ with links to the logs, and in the best case the binaries that have a sha256 mismatch</span></div><div class="line" id="163224"><span class="nick" style="color:#6d2462"><a href="#163224" label="[16:32:24]">&lt;bauen1&gt;</a></span><span class="message">btw intercity-vpn.de doesn't have https</span></div><div class="line" id="170216"><span class="nick" style="color:#6d2462"><a href="#170216" label="[17:02:16]">&lt;bauen1&gt;</a></span><span class="message">so the next problem i'm facing is that while the autohell binaries have a version appended the info files don't so they woud conflict if i try to link autoconf-2.53 and autoconf-2.52 at once</span></div><div class="line" id="170319"><span class="nick" style="color:#6d2462"><a href="#170319" label="[17:03:19]">&lt;bauen1&gt;</a></span><span class="message">i don't think we need them, but i'll just stuff them into $prefix/info/autohell-$ver/ instead</span></div><div class="line" id="171131"><span class="nick" style="color:#80b1d3"><a href="#171131" label="[17:11:31]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: yeah, i need port 443 for something other 8-)</span></div><div class="line" id="172043"><span class="nick" style="color:#80b1d3"><a href="#172043" label="[17:20:43]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: good idea, i will open issues for all these things</span></div><div class="line" id="172052"><span class="nick" style="color:#80b1d3"><a href="#172052" label="[17:20:52]">&lt;gforce_d11977&gt;</a></span><span class="message">(so we dont forget them)</span></div><div class="line" id="180909"><span class="nick" style="color:#6d2462"><a href="#180909" label="[18:09:09]">&lt;bauen1&gt;</a></span><span class="message">so this might take a bit longer, i need to change the way checksums work</span></div><div class="line" id="181119"><span class="nick" style="color:#6d2462"><a href="#181119" label="[18:11:19]">&lt;bauen1&gt;</a></span><span class="message">is there any reason why we're not using pushd / popd in the bash scripts ?</span></div><div class="line" id="183252"><span class="nick" style="color:#389600"><a href="#183252" label="[18:32:52]">&lt;stikonas&gt;</a></span><span class="message">bauen1: inside bootstrap?</span></div><div class="line" id="183257"><span class="nick" style="color:#389600"><a href="#183257" label="[18:32:57]">&lt;stikonas&gt;</a></span><span class="message">I don't think there is any reason</span></div><div class="line" id="183333"><span class="nick" style="color:#389600"><a href="#183333" label="[18:33:33]">&lt;stikonas&gt;</a></span><span class="message">it might be better if we do, but first test if it works...</span></div><div class="line" id="183355"><span class="nick" style="color:#389600"><a href="#183355" label="[18:33:55]">&lt;stikonas&gt;</a></span><span class="message">I initially wanted to do it with subshells for cd but that was not working well</span></div><div class="line" id="183425"><span class="nick" style="color:#389600"><a href="#183425" label="[18:34:25]">&lt;stikonas&gt;</a></span><span class="message">(subshells in principle have the advantage that whatever package does would not polute other packages)</span></div><div class="line" id="183508"><span class="nick" style="color:#389600"><a href="#183508" label="[18:35:08]">&lt;stikonas&gt;</a></span><span class="message">but traps were not working well in bash2, so I couldn't get subshells to work properly with errors</span></div><div class="line" id="183518"><span class="nick" style="color:#389600"><a href="#183518" label="[18:35:18]">&lt;stikonas&gt;</a></span><span class="message">(i.e. abort execution on error)</span></div><div class="line" id="184450"><span class="nick" style="color:#6d2462"><a href="#184450" label="[18:44:50]">&lt;bauen1&gt;</a></span><span class="message">right</span></div><div class="line" id="190133"><span class="nick" style="color:#389600"><a href="#190133" label="[19:01:33]">&lt;stikonas&gt;</a></span><span class="message">I guess it's mostly inside helpers.sh?</span></div><div class="line" id="190958"><span class="nick" style="color:#6d2462"><a href="#190958" label="[19:09:58]">&lt;bauen1&gt;</a></span><span class="message">yes</span></div><div class="line" id="191319"><span class="nick" style="color:#389600"><a href="#191319" label="[19:13:19]">&lt;stikonas&gt;</a></span><span class="message">anyway, feel free to fix it.  That looks like a good thing to do</span></div><div class="line" id="194508"><span class="nick" style="color:#80b1d3"><a href="#194508" label="[19:45:08]">&lt;gforce_d11977&gt;</a></span><span class="message">if you ask me, i'am against using very special bash features (popd/pushd), i still like the idea auf using a posix shell for bootstrapping. just saying...</span></div><div class="line" id="202101"><span class="nick" style="color:#6d2462"><a href="#202101" label="[20:21:01]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: i'm using it to change directory to DESTDIR before invoking sha256 sum, maybe there is a better way ?</span></div><div class="line" id="202734"><span class="nick" style="color:#6d2462"><a href="#202734" label="[20:27:34]">&lt;bauen1&gt;</a></span><span class="message">and that still requires me to go edit every checksum file to remove the leading /</span></div><div class="line" id="205352"><span class="nick" style="color:#6d2462"><a href="#205352" label="[20:53:52]">&lt;bauen1&gt;</a></span><span class="message">uh and what ever is using helpers.sh doesn't support pushd / popd :D</span></div><div class="line" id="210505"><span class="nick" style="color:#389600"><a href="#210505" label="[21:05:05]">&lt;stikonas&gt;</a></span><span class="message">bauen1: and when I used destdir with autotools packages to create checksum files, I had to add leading / to all of them...</span></div><div class="line" id="212029"><span class="nick" style="color:#389600"><a href="#212029" label="[21:20:29]">&lt;stikonas&gt;</a></span><span class="message">well, popd/pushd wouldn't be too much of a problem on posix shell...</span></div><div class="line" id="212044"><span class="nick" style="color:#389600"><a href="#212044" label="[21:20:44]">&lt;stikonas&gt;</a></span><span class="message">it's very easy for somebody to implement in pure posix...</span></div><div class="line" id="212250"><span class="nick" style="color:#389600"><a href="#212250" label="[21:22:50]">&lt;stikonas&gt;</a></span><span class="message">something like store $PWD in a variable and change back</span></div><div class="line" id="212329"><span class="nick" style="color:#389600"><a href="#212329" label="[21:23:29]">&lt;stikonas&gt;</a></span><span class="message">and it looks like bauen1 might need to do something like that anyway</span></div><div class="line" id="213732"><span class="nick" style="color:#6d2462"><a href="#213732" label="[21:37:32]">&lt;bauen1&gt;</a></span><span class="message">stikonas: it's a bit more than that you need to implement a stack</span></div><div class="line" id="213746"><span class="nick" style="color:#6d2462"><a href="#213746" label="[21:37:46]">&lt;bauen1&gt;</a></span><span class="message">but yeah i'm trying `cd $DESTDIR ... cd -` now</span></div><div class="line" id="213747"><span class="nick" style="color:#389600"><a href="#213747" label="[21:37:47]">&lt;stikonas&gt;</a></span><span class="message">well, if you need it more than 1 depth...</span></div><div class="line" id="213837"><span class="nick" style="color:#389600"><a href="#213837" label="[21:38:37]">&lt;stikonas&gt;</a></span><span class="message">but even stack shouldn't be too hard...</span></div><div class="line" id="213853"><span class="nick" style="color:#389600"><a href="#213853" label="[21:38:53]">&lt;stikonas&gt;</a></span><span class="message">I'm sure there must be already some stack implementations in posix shell that one can &quot;steal&quot;</span></div><div class="line" id="214732"><span class="nick" style="color:#80b1d3"><a href="#214732" label="[21:47:32]">&lt;gforce_d11977&gt;</a></span><span class="message">thats easy: i will come in some mins with a solution</span></div><div class="line" id="220851"><span class="nick" style="color:#6d2462"><a href="#220851" label="[22:08:51]">&lt;bauen1&gt;</a></span><span class="message">current wip i'm testing <a rel="nofollow" href="https://github.com/bauen1/live-bootstrap/commit/b75346395d356c9fcf125d7cecc184fa875567cd">https://github.com/bauen1/live-bootstrap/commit/b75346395d356c9fcf125d7cecc184fa875567cd</a> </span></div><div class="line" id="220906"><span class="nick" style="color:#6d2462"><a href="#220906" label="[22:09:06]">&lt;bauen1&gt;</a></span><span class="message">mostly how i can adapt earlier packages to also use /after/upkgs and it's a bit messy</span></div><div class="line" id="221634"><span class="nick" style="color:#80b1d3"><a href="#221634" label="[22:16:34]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: stikonas: totally untested and just an idea: <a rel="nofollow" href="http://intercity-vpn.de/posix-cd-stack.sh.txt">http://intercity-vpn.de/posix-cd-stack.sh.txt</a> </span></div><div class="line" id="221640"><span class="nick" style="color:#389600"><a href="#221640" label="[22:16:40]">&lt;stikonas&gt;</a></span><span class="message">bauen1: we can probably put some of it into build function?</span></div><div class="line" id="221825"><span class="nick" style="color:#6d2462"><a href="#221825" label="[22:18:25]">&lt;bauen1&gt;</a></span><span class="message">stikonas: yes, i'm thinking about that</span></div><div class="line" id="221852"><span class="nick" style="color:#6d2462"><a href="#221852" label="[22:18:52]">&lt;bauen1&gt;</a></span><span class="message">for now i want to get a working prototype and then i'll try to make a general solution</span></div><div class="line" id="221930"><span class="nick" style="color:#6d2462"><a href="#221930" label="[22:19:30]">&lt;bauen1&gt;</a></span><span class="message">but deciding what package to link / unlink and at what point probably needs to be in run.sh for now, unless i want to go all in and build things in a chroot</span></div><div class="line" id="221952"><span class="nick" style="color:#389600"><a href="#221952" label="[22:19:52]">&lt;stikonas&gt;</a></span><span class="message">well, maybe we can have a few different wrappers...</span></div><div class="line" id="222002"><span class="nick" style="color:#389600"><a href="#222002" label="[22:20:02]">&lt;stikonas&gt;</a></span><span class="message">link/unlink I guess doesn't have to happens at the same time?</span></div><div class="line" id="222018"><span class="nick" style="color:#389600"><a href="#222018" label="[22:20:18]">&lt;stikonas&gt;</a></span><span class="message">so we can have something like</span></div><div class="line" id="222116"><span class="nick" style="color:#389600"><a href="#222116" label="[22:21:16]">&lt;stikonas&gt;</a></span><span class="message">build automake-1.6.3-stage3; remove automake-1.6.3-stage2; install automake-1.6.3-stage3</span></div><div class="line" id="222118"><span class="nick" style="color:#80b1d3"><a href="#222118" label="[22:21:18]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: without pushd/popd you also just do MYDIR=&quot;$PWD&quot; and late cd $MYDIR</span></div><div class="line" id="222118"><span class="nick" style="color:#389600"><a href="#222118" label="[22:21:18]">&lt;stikonas&gt;</a></span><span class="message">or something like that</span></div><div class="line" id="222134"><span class="nick" style="color:#389600"><a href="#222134" label="[22:21:34]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: yeah, that's what we talked about earlier...</span></div><div class="line" id="222145"><span class="nick" style="color:#389600"><a href="#222145" label="[22:21:45]">&lt;stikonas&gt;</a></span><span class="message">about an hour ago...</span></div><div class="line" id="222152"><span class="nick" style="color:#389600"><a href="#222152" label="[22:21:52]">&lt;stikonas&gt;</a></span><span class="message">one dir is easy...</span></div><div class="line" id="222206"><span class="nick" style="color:#6d2462"><a href="#222206" label="[22:22:06]">&lt;bauen1&gt;</a></span><span class="message">that's kind of what i'm doing just with --stow for linking and --delete for unlinking (stow terminology is a bit weird)</span></div><div class="line" id="222219"><span class="nick" style="color:#80b1d3"><a href="#222219" label="[22:22:19]">&lt;gforce_d11977&gt;</a></span><span class="message">afk, see you tomorrow</span></div><div class="line" id="222235"><span class="nick" style="color:#389600"><a href="#222235" label="[22:22:35]">&lt;stikonas&gt;</a></span><span class="message">hmm, yeah... it is a bit strange</span></div><div class="line" id="222251"><span class="nick" style="color:#389600"><a href="#222251" label="[22:22:51]">&lt;stikonas&gt;</a></span><span class="message">that's why I'm thinking that we should abstract it out in more &quot;package manger&quot; usual terms</span></div><div class="line" id="222319"><span class="nick" style="color:#389600"><a href="#222319" label="[22:23:19]">&lt;stikonas&gt;</a></span><span class="message">all of them can probably be very short wrapper functions...</span></div><div class="line" id="222328"><span class="nick" style="color:#6d2462"><a href="#222328" label="[22:23:28]">&lt;bauen1&gt;</a></span><span class="message">i just couldn't be bothered to try to do long options parsing for a wrapper, and want to keep the ability to do multiple &quot;operations&quot; in a single invokation, e.g. when we need to change perl</span></div><div class="line" id="222338"><span class="nick" style="color:#6d2462"><a href="#222338" label="[22:23:38]">&lt;bauen1&gt;</a></span><span class="message">but yes i see what you're getting at</span></div><div class="line" id="222352"><span class="nick">***</span><span class="message notice">sm2n_ is now known as sm2n</span></div><div class="line" id="222353"><span class="nick" style="color:#389600"><a href="#222353" label="[22:23:53]">&lt;stikonas&gt;</a></span><span class="message">hmm, can't we have different wrappers?</span></div><div class="line" id="222358"><span class="nick" style="color:#389600"><a href="#222358" label="[22:23:58]">&lt;stikonas&gt;</a></span><span class="message">so we don't have to parse options?</span></div><div class="line" id="222413"><span class="nick" style="color:#6d2462"><a href="#222413" label="[22:24:13]">&lt;bauen1&gt;</a></span><span class="message">see OriansJ` message about programmers avoiding to write code at all cost above lol</span></div><div class="line" id="222415"><span class="nick" style="color:#389600"><a href="#222415" label="[22:24:15]">&lt;stikonas&gt;</a></span><span class="message">e.g. replace wrapper takes two arguments (pkg2, pkg1)</span></div><div class="line" id="222423"><span class="nick" style="color:#389600"><a href="#222423" label="[22:24:23]">&lt;stikonas&gt;</a></span><span class="message">well, yeah :D</span></div><div class="line" id="222601"><span class="nick" style="color:#389600"><a href="#222601" label="[22:26:01]">&lt;stikonas&gt;</a></span><span class="message">well, but once you have your wrapper, I guess it's easy to add another layer...</span></div><div class="line" id="222615"><span class="nick" style="color:#389600"><a href="#222615" label="[22:26:15]">&lt;stikonas&gt;</a></span><span class="message">which makes calling your wrapper easy...</span></div><div class="line" id="222654"><span class="nick" style="color:#389600"><a href="#222654" label="[22:26:54]">&lt;stikonas&gt;</a></span><span class="message">multiple operations (to change perl) is a good point though</span></div><div class="line" id="222705"><span class="nick" style="color:#6d2462"><a href="#222705" label="[22:27:05]">&lt;bauen1&gt;</a></span><span class="message">i can add short cuts on top of the upkg_stow_wrapper1 it's the smallest common denominator for all operations</span></div><div class="line" id="222733"><span class="nick" style="color:#389600"><a href="#222733" label="[22:27:33]">&lt;stikonas&gt;</a></span><span class="message">well, we can think about interface a bit later...</span></div><div class="line" id="222804"><span class="nick" style="color:#389600"><a href="#222804" label="[22:28:04]">&lt;stikonas&gt;</a></span><span class="message">I just want those run.sh scripts to be very readable...</span></div><div class="line" id="222811"><span class="nick" style="color:#389600"><a href="#222811" label="[22:28:11]">&lt;stikonas&gt;</a></span><span class="message">and complexity hidden deeper...</span></div><div class="line" id="222820"><span class="nick" style="color:#389600"><a href="#222820" label="[22:28:20]">&lt;stikonas&gt;</a></span><span class="message">e.g. like now everything is done by a single build keyword</span></div><div class="line" id="222836"><span class="nick" style="color:#389600"><a href="#222836" label="[22:28:36]">&lt;stikonas&gt;</a></span><span class="message">obviously you need more keywords if you have packages...</span></div><div class="line" id="223222"><span class="nick" style="color:#6d2462"><a href="#223222" label="[22:32:22]">&lt;bauen1&gt;</a></span><span class="message">another thing that i then want to do (probably requires chroot to do properly) is have `build` (or upkg-build) take a hash of all dependencies, build script and source, and store them, so we can skip the build if everything is the same</span></div><div class="line" id="223248"><span class="nick" style="color:#6d2462"><a href="#223248" label="[22:32:48]">&lt;bauen1&gt;</a></span><span class="message">and a hash of the result (probably just tar up /upkgs/$pkgname... as a pseudo package format)</span></div><div class="line" id="223447"><span class="nick" style="color:#6d2462"><a href="#223447" label="[22:34:47]">&lt;bauen1&gt;</a></span><span class="message">doing so obviously requires a decent tar that can build the result reproducibly</span></div><div class="line" id="224531"><span class="nick" style="color:#389600"><a href="#224531" label="[22:45:31]">&lt;stikonas&gt;</a></span><span class="message">I also want to add tarball checksums inside chroot...</span></div><div class="line" id="224601"><span class="nick" style="color:#389600"><a href="#224601" label="[22:46:01]">&lt;stikonas&gt;</a></span><span class="message">well, first of all we need to add SHA256SUMS file in (which I added in rootfs.py)</span></div><div class="line" id="225208"><span class="nick" style="color:#6d2462"><a href="#225208" label="[22:52:08]">&lt;bauen1&gt;</a></span><span class="message">also having &quot;packages&quot; of the earlier parts is required if we want to build later packages in a chroot, so there will probably be a lot of very ugly `ln` mess</span></div><div class="line" id="232629"><span class="nick" style="color:#6d2462"><a href="#232629" label="[23:26:29]">&lt;bauen1&gt;</a></span><span class="message">so make doesn't handle a missing command too well: `make: *** [scan.c] Segmentation fault`</span></div><div class="line" id="233041"><span class="nick" style="color:#2e2a4a"><a href="#233041" label="[23:30:41]">&lt;fossy&gt;</a></span><span class="message">hmst, I dont think packages are very doable in the earliest parts</span></div><div class="line" id="233234"><span class="nick" style="color:#6d2462"><a href="#233234" label="[23:32:34]">&lt;bauen1&gt;</a></span><span class="message">fossy: it's mostly installing to /after/upkgs and creating symlinks to it, it's certainly messy, but then you can wipe any trace of the early broken things with a short command</span></div><div class="line" id="233243"><span class="nick" style="color:#389600"><a href="#233243" label="[23:32:43]">&lt;stikonas&gt;</a></span><span class="message">well, we can rebuild most of the early packages later...</span></div><div class="line" id="233247"><span class="nick" style="color:#6d2462"><a href="#233247" label="[23:32:47]">&lt;bauen1&gt;</a></span><span class="message">alternatively hunt down what you need later</span></div><div class="line" id="233249"><span class="nick" style="color:#389600"><a href="#233249" label="[23:32:49]">&lt;stikonas&gt;</a></span><span class="message">e.g. like tar is now rebuilt...</span></div><div class="line" id="233252"><span class="nick" style="color:#389600"><a href="#233252" label="[23:32:52]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="233259"><span class="nick" style="color:#389600"><a href="#233259" label="[23:32:59]">&lt;stikonas&gt;</a></span><span class="message">and only start chrooting later...</span></div><div class="line" id="233305"><span class="nick" style="color:#6d2462"><a href="#233305" label="[23:33:05]">&lt;bauen1&gt;</a></span><span class="message">yes</span></div><div class="line" id="233331"><span class="nick" style="color:#389600"><a href="#233331" label="[23:33:31]">&lt;stikonas&gt;</a></span><span class="message">fossy: tar is now rebased on top of you changes <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/87">https://github.com/fosslinux/live-bootstrap/pull/87</a> </span></div><div class="line" id="233332"><span class="nick" style="color:#6d2462"><a href="#233332" label="[23:33:32]">&lt;bauen1&gt;</a></span><span class="message">currently i'm kind of aiming for chroot after perl-5.6.2 because then we have stow and write a small chroot / mount wrapper in perl</span></div><div class="line" id="233419"><span class="nick" style="color:#389600"><a href="#233419" label="[23:34:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'm now continuing with roofs.py, got working up to tar-1.12, so almost done. Currently thinking about API for get_file function...</span></div><br /></div></body></html>