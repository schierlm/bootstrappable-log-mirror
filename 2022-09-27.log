<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-09-27.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001740"><span class="nick" style="color:#8dd3c7"><a href="#001740" label="[00:17:40]">&lt;oriansj&gt;</a></span><span class="message">looks like live-bootstrap gets that file by running ./configure</span></div><div class="line" id="002124"><span class="nick" style="color:#8dd3c7"><a href="#002124" label="[00:21:24]">&lt;oriansj&gt;</a></span><span class="message">in the file: sysa/musl-1.1.24/musl-1.1.24.sh</span></div><div class="line" id="002755"><span class="nick" style="color:#8dd3c7"><a href="#002755" label="[00:27:55]">&lt;oriansj&gt;</a></span><span class="message">which seems to include case statements (which kaem doesn't support at all)</span></div><div class="line" id="002917"><span class="nick" style="color:#8dd3c7"><a href="#002917" label="[00:29:17]">&lt;oriansj&gt;</a></span><span class="message">no, it isn't made by the configure</span></div><div class="line" id="003113"><span class="nick" style="color:#8dd3c7"><a href="#003113" label="[00:31:13]">&lt;oriansj&gt;</a></span><span class="message">but the makefile: sed -f $(srcdir)/tools/mkalltypes.sed $(srcdir)/arch/$(ARCH)/bits/alltypes.h.in $(srcdir)/include/alltypes.h.in &gt; $@</span></div><div class="line" id="003229"><span class="nick" style="color:#8dd3c7"><a href="#003229" label="[00:32:29]">&lt;oriansj&gt;</a></span><span class="message">which comes after you build make and sed; so that is fine</span></div><div class="line" id="003455"><span class="nick" style="color:#8dd3c7"><a href="#003455" label="[00:34:55]">&lt;oriansj&gt;</a></span><span class="message">so M2libc would need to get extended to support the building of bash, make and sed before M3 could be used to build with musl libc</span></div><div class="line" id="003635"><span class="nick" style="color:#2e2a4a"><a href="#003635" label="[00:36:35]">&lt;stikonas&gt;</a></span><span class="message">yes, that configure script is way too complicated for kaem</span></div><div class="line" id="003734"><span class="nick" style="color:#2e2a4a"><a href="#003734" label="[00:37:34]">&lt;stikonas&gt;</a></span><span class="message">and I might have fixed reproducibility issues in autogen, so now need to rerun live-bootstrap a few times to check...</span></div><div class="line" id="003805"><span class="nick" style="color:#2e2a4a"><a href="#003805" label="[00:38:05]">&lt;stikonas&gt;</a></span><span class="message">(mostly simple things, like adding configure flag, defining env variable or outright deleting file that is useless to us)</span></div><div class="line" id="014446"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="021030"><span class="nick">***</span><span class="message notice">haxcpu is now known as ay</span></div><div class="line" id="022226"><span class="nick" style="color:#8dd3c7"><a href="#022226" label="[02:22:26]">&lt;oriansj&gt;</a></span><span class="message">now to create a boatload of tests, figure out the correct answers, language lawyer the answers (and compare against gcc) then fix up M3-Preprocess to cover what is required.</span></div><div class="line" id="023101"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="024049"><span class="nick" style="color:#8dd3c7"><a href="#024049" label="[02:40:49]">&lt;oriansj&gt;</a></span><span class="message">The C99 standard is about 500 pages, but only 19 of them are dedicated to describing how the C preprocessor should work and what it does specify is batshit crazy.</span></div><div class="line" id="024221"><span class="nick" style="color:#8dd3c7"><a href="#024221" label="[02:42:21]">&lt;oriansj&gt;</a></span><span class="message">I might have to stop trying to think of C preprocessing as a compilation and rather an interpreted language</span></div><div class="line" id="024234"><span class="nick" style="color:#8dd3c7"><a href="#024234" label="[02:42:34]">&lt;oriansj&gt;</a></span><span class="message">which you can rewrite as you use it</span></div><div class="line" id="024320"><span class="nick" style="color:#8dd3c7"><a href="#024320" label="[02:43:20]">&lt;oriansj&gt;</a></span><span class="message">so #define and #include could have their meanings swapped. &gt;.&lt;</span></div><div class="line" id="025045"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="032242"><span class="nick" style="color:#8dd3c7"><a href="#032242" label="[03:22:42]">&lt;oriansj&gt;</a></span><span class="message">what is even more odd, GCC doesn't throw errors when something violates the C spec.</span></div><div class="line" id="032256"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="032516"><span class="nick" style="color:#6b8072"><a href="#032516" label="[03:25:16]">&lt;muurkha&gt;</a></span><span class="message">well, in most cases violations of the C spec can't be detected mechanically at compile time</span></div><div class="line" id="032539"><span class="nick" style="color:#6b8072"><a href="#032539" label="[03:25:39]">&lt;muurkha&gt;</a></span><span class="message">and GCC does in some cases intentionally extend it</span></div><div class="line" id="032541"><span class="nick" style="color:#8dd3c7"><a href="#032541" label="[03:25:41]">&lt;oriansj&gt;</a></span><span class="message">for example the C specification defineds endif-line as # endif new-line so in theory a line comment after the #endif but before the new-line should be an error and that is easy to detect at preprocessing time.</span></div><div class="line" id="032547"><span class="nick" style="color:#6b8072"><a href="#032547" label="[03:25:47]">&lt;muurkha&gt;</a></span><span class="message">-pedantic makes it complain a little more</span></div><div class="line" id="032615"><span class="nick" style="color:#8dd3c7"><a href="#032615" label="[03:26:15]">&lt;oriansj&gt;</a></span><span class="message">but not about these sorts of details</span></div><div class="line" id="032619"><span class="nick" style="color:#6b8072"><a href="#032619" label="[03:26:19]">&lt;muurkha&gt;</a></span><span class="message">hmm, interesting, I didn't know the comment removal was at a later stage than #endif processing</span></div><div class="line" id="032637"><span class="nick" style="color:#8dd3c7"><a href="#032637" label="[03:26:37]">&lt;oriansj&gt;</a></span><span class="message">muurkha: it can be done at anytime</span></div><div class="line" id="032658"><span class="nick" style="color:#6b8072"><a href="#032658" label="[03:26:58]">&lt;muurkha&gt;</a></span><span class="message">when it is done would seem to affect whether #endif // FOO_BAR is an error or not</span></div><div class="line" id="032715"><span class="nick" style="color:#8dd3c7"><a href="#032715" label="[03:27:15]">&lt;oriansj&gt;</a></span><span class="message">comments can even be preserved in the preprocessed output</span></div><div class="line" id="032742"><span class="nick" style="color:#6b8072"><a href="#032742" label="[03:27:42]">&lt;muurkha&gt;</a></span><span class="message">the usual approach to comments is to treat them as whitespace in the grammar, but I have no idea if that's what C99 does or not</span></div><div class="line" id="032743"><span class="nick" style="color:#8dd3c7"><a href="#032743" label="[03:27:43]">&lt;oriansj&gt;</a></span><span class="message">muurkha: yep and the specification doesn't dictate that detail</span></div><div class="line" id="032750"><span class="nick" style="color:#6b8072"><a href="#032750" label="[03:27:50]">&lt;muurkha&gt;</a></span><span class="message">presumably whitespace is allowed between #endif and newline?</span></div><div class="line" id="032802"><span class="nick" style="color:#6b8072"><a href="#032802" label="[03:28:02]">&lt;muurkha&gt;</a></span><span class="message">or is &quot;#endif \n&quot; also supposed to be an error?</span></div><div class="line" id="032832"><span class="nick" style="color:#8dd3c7"><a href="#032832" label="[03:28:32]">&lt;oriansj&gt;</a></span><span class="message">well the grammar would indicate that wouldn't be valid</span></div><div class="line" id="032900"><span class="nick" style="color:#8dd3c7"><a href="#032900" label="[03:29:00]">&lt;oriansj&gt;</a></span><span class="message">but no C preprocessor I have seen thus far sticks to the actual grammar strictly</span></div><div class="line" id="033006"><span class="nick" style="color:#8dd3c7"><a href="#033006" label="[03:30:06]">&lt;oriansj&gt;</a></span><span class="message">if anything the rule seems to be do kinda like what GCC does; regardless of it is in the standard or not</span></div><div class="line" id="035134"><span class="nick" style="color:#8dd3c7"><a href="#035134" label="[03:51:34]">&lt;oriansj&gt;</a></span><span class="message">and what GCC does is largely a mash of old functionality that someone had a need for</span></div><div class="line" id="044628"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="061856"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="103227"><span class="nick" style="color:#80b1d3"><a href="#103227" label="[10:32:27]">&lt;fossy&gt;</a></span><span class="message">mihi, stikonas[m], yes, I did email Bruce Korb a long while ago - nearly a year ago!</span></div><div class="line" id="103304"><span class="nick" style="color:#80b1d3"><a href="#103304" label="[10:33:04]">&lt;fossy&gt;</a></span><span class="message">was there something you were wondering?</span></div><div class="line" id="103334"><span class="nick" style="color:#80b1d3"><a href="#103334" label="[10:33:34]">&lt;fossy&gt;</a></span><span class="message">bruce wasn't able to give much help, unfortunately</span></div><div class="line" id="103520"><span class="nick" style="color:#80b1d3"><a href="#103520" label="[10:35:20]">&lt;fossy&gt;</a></span><span class="message">bruce korb is no longer active with autogen</span></div><div class="line" id="103706"><span class="nick" style="color:#80b1d3"><a href="#103706" label="[10:37:06]">&lt;fossy&gt;</a></span><span class="message">oh, i see bootstrappable mailing list re: this</span></div><div class="line" id="103742"><span class="nick" style="color:#80b1d3"><a href="#103742" label="[10:37:42]">&lt;fossy&gt;</a></span><span class="message">bruce is uninterested in bootstrapping it. but that doesnt preclude the current maintainers accepting it...</span></div><div class="line" id="122039"><span class="nick" style="color:#6d2462"><a href="#122039" label="[12:20:39]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: Still, the way gnu-autogen-bootstrap works is slightly hacky, so a bit hard to see how it can be integrated as is (I.e. patches do break a bit of functionality in bootstrap binary)</span></div><div class="line" id="122105"><span class="nick" style="color:#6d2462"><a href="#122105" label="[12:21:05]">&lt;stikonas[m]&gt;</a></span><span class="message">I would say in the current form it makes more sense as a separate project</span></div><div class="line" id="122214"><span class="nick" style="color:#6d2462"><a href="#122214" label="[12:22:14]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: anyway, I might have solved reproducibility issues in my PR, though I still need to rerun live-bootstrap to test it</span></div><div class="line" id="161058"><span class="nick">***</span><span class="message notice">civodul` is now known as civodul</span></div><div class="line" id="174818"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="180419"><span class="nick">***</span><span class="message notice">lukedashjr is now known as luke-jr</span></div><div class="line" id="221703"><span class="nick" style="color:#2e2a4a"><a href="#221703" label="[22:17:03]">&lt;stikonas&gt;</a></span><span class="message">hmm, I'm taking back the words that I fixed autogen... Somehow my patch didn't work...</span></div><div class="line" id="225306"><span class="nick" style="color:#234e69"><a href="#225306" label="[22:53:06]">&lt;aggi&gt;</a></span><span class="message">stupid question: is there any easy way, to replace GNU configure[.ac]/makefiles ?</span></div><div class="line" id="225355"><span class="nick" style="color:#234e69"><a href="#225355" label="[22:53:55]">&lt;aggi&gt;</a></span><span class="message">tracked bdep/rdeps against autoconf/automake/libtool, and as expected it's all falling apart, the entire dependcy graph</span></div><div class="line" id="225449"><span class="nick" style="color:#234e69"><a href="#225449" label="[22:54:49]">&lt;aggi&gt;</a></span><span class="message">ideally, there won't be any build remaining, which requires pre-generated configure/makefile with anything</span></div><div class="line" id="225538"><span class="nick" style="color:#234e69"><a href="#225538" label="[22:55:38]">&lt;aggi&gt;</a></span><span class="message">one victim of this approach: ncurses, have to try netbsd curses (from sabotage linux project or oasis linux who integrated it)</span></div><div class="line" id="225647"><span class="nick" style="color:#234e69"><a href="#225647" label="[22:56:47]">&lt;aggi&gt;</a></span><span class="message">however, there is many other components, which i would prefer to keep (nfs-utils, squashfs-utils whatever, it is many)</span></div><div class="line" id="230758"><span class="nick" style="color:#6c3d55"><a href="#230758" label="[23:07:58]">&lt;sam_&gt;</a></span><span class="message">no, you can't really replace it, you'd be better off just pre-generating (you can make your own dist tarballs)</span></div><div class="line" id="230810"><span class="nick" style="color:#6c3d55"><a href="#230810" label="[23:08:10]">&lt;sam_&gt;</a></span><span class="message">makefiles in particular are tricky, note that automake produces POSIX makefiles</span></div><div class="line" id="230816"><span class="nick" style="color:#6c3d55"><a href="#230816" label="[23:08:16]">&lt;sam_&gt;</a></span><span class="message">so the issue is when people handwrite their own junk</span></div><div class="line" id="231039"><span class="nick" style="color:#234e69"><a href="#231039" label="[23:10:39]">&lt;aggi&gt;</a></span><span class="message">hi sam_, the generated configure script and makefiles are not acceptable</span></div><div class="line" id="231142"><span class="nick" style="color:#234e69"><a href="#231142" label="[23:11:42]">&lt;aggi&gt;</a></span><span class="message">and the bootstrapping status of GNU-buildsystem (including perl), isn't acceptable</span></div><div class="line" id="233802"><span class="nick" style="color:#2e2a4a"><a href="#233802" label="[23:38:02]">&lt;stikonas&gt;</a></span><span class="message">well, you can write your own makefiles</span></div><div class="line" id="233809"><span class="nick" style="color:#2e2a4a"><a href="#233809" label="[23:38:09]">&lt;stikonas&gt;</a></span><span class="message">but that is no pleasant task either</span></div><div class="line" id="233828"><span class="nick" style="color:#2e2a4a"><a href="#233828" label="[23:38:28]">&lt;stikonas&gt;</a></span><span class="message">cause you need to figure out all those defines that configure figures out for you</span></div><div class="line" id="233843"><span class="nick" style="color:#234e69"><a href="#233843" label="[23:38:43]">&lt;aggi&gt;</a></span><span class="message">and, i am not sure yet, how many builds</span></div><div class="line" id="233849"><span class="nick" style="color:#2e2a4a"><a href="#233849" label="[23:38:49]">&lt;stikonas&gt;</a></span><span class="message">in live-bootstrap we do this up to the point where autotools are available</span></div><div class="line" id="233900"><span class="nick" style="color:#2e2a4a"><a href="#233900" label="[23:39:00]">&lt;stikonas&gt;</a></span><span class="message">but those builds tend to be missing features, etc...</span></div><div class="line" id="233903"><span class="nick" style="color:#234e69"><a href="#233903" label="[23:39:03]">&lt;aggi&gt;</a></span><span class="message">though, i do keep the elogs from gentoo</span></div><div class="line" id="233907"><span class="nick" style="color:#2e2a4a"><a href="#233907" label="[23:39:07]">&lt;stikonas&gt;</a></span><span class="message">(though enough to bootstrap further packages)</span></div><div class="line" id="233941"><span class="nick" style="color:#2e2a4a"><a href="#233941" label="[23:39:41]">&lt;stikonas&gt;</a></span><span class="message">one example of missing feature: sed in place editing was losing executable bit from scripts</span></div><div class="line" id="233957"><span class="nick" style="color:#2e2a4a"><a href="#233957" label="[23:39:57]">&lt;stikonas&gt;</a></span><span class="message">and that is because sed was compiled with -DHAVE_FCHOWN</span></div><div class="line" id="234011"><span class="nick" style="color:#2e2a4a"><a href="#234011" label="[23:40:11]">&lt;stikonas&gt;</a></span><span class="message">and each define you miss will either cause compile error or missing feature</span></div><div class="line" id="234032"><span class="nick" style="color:#234e69"><a href="#234032" label="[23:40:32]">&lt;aggi&gt;</a></span><span class="message">ok. toybox userspace utilities are among the first builds, which covers alot, and doesn't require configure[.ac]. bingo.</span></div><div class="line" id="234058"><span class="nick" style="color:#234e69"><a href="#234058" label="[23:40:58]">&lt;aggi&gt;</a></span><span class="message">ncurses -&gt; replaced with sabotage linux netbsd-curses</span></div><div class="line" id="234108"><span class="nick" style="color:#2e2a4a"><a href="#234108" label="[23:41:08]">&lt;stikonas&gt;</a></span><span class="message">e.g. that sed example has this handwritten makefile <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/sed-4.0.9/mk/main.mk">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/sed-4.0.9/mk/main.mk</a> </span></div><div class="line" id="234120"><span class="nick" style="color:#6c3d55"><a href="#234120" label="[23:41:20]">&lt;sam_&gt;</a></span><span class="message">stikonas: we're hitting a lot of hell like that wrt sed-style issues because of Clang 16 :)</span></div><div class="line" id="234424"><span class="nick" style="color:#2e2a4a"><a href="#234424" label="[23:44:24]">&lt;stikonas&gt;</a></span><span class="message">oh, configure messes up flags with clang 16?</span></div><div class="line" id="234537"><span class="nick" style="color:#6c3d55"><a href="#234537" label="[23:45:37]">&lt;sam_&gt;</a></span><span class="message">yes</span></div><div class="line" id="234544"><span class="nick" style="color:#6c3d55"><a href="#234544" label="[23:45:44]">&lt;sam_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://bugs.gentoo.org/870412">https://bugs.gentoo.org/870412</a> </span></div><div class="line" id="234547"><span class="nick" style="color:#6c3d55"><a href="#234547" label="[23:45:47]">&lt;sam_&gt;</a></span><span class="message">(look at my first comment)</span></div><div class="line" id="234558"><span class="nick" style="color:#6c3d55"><a href="#234558" label="[23:45:58]">&lt;sam_&gt;</a></span><span class="message">clang 16 makes some things errors by default which means configure tests often give bad results</span></div><div class="line" id="234604"><span class="nick" style="color:#6c3d55"><a href="#234604" label="[23:46:04]">&lt;sam_&gt;</a></span><span class="message">it's grim</span></div><div class="line" id="234616"><span class="nick" style="color:#6c3d55"><a href="#234616" label="[23:46:16]">&lt;sam_&gt;</a></span><span class="message">the change is good by itself but the journey is terrible</span></div><div class="line" id="234649"><span class="nick" style="color:#6c3d55"><a href="#234649" label="[23:46:49]">&lt;sam_&gt;</a></span><span class="message">the bugs on that tracker do not yet include such failures because they're harder to find</span></div><div class="line" id="234653"><span class="nick" style="color:#2e2a4a"><a href="#234653" label="[23:46:53]">&lt;stikonas&gt;</a></span><span class="message">that's often the case that change is good...</span></div><div class="line" id="234659"><span class="nick" style="color:#2e2a4a"><a href="#234659" label="[23:46:59]">&lt;stikonas&gt;</a></span><span class="message">but it causes painful transition</span></div><div class="line" id="234708"><span class="nick" style="color:#6c3d55"><a href="#234708" label="[23:47:08]">&lt;sam_&gt;</a></span><span class="message">(we have to diff config.log &amp; grep for new errors)</span></div><div class="line" id="234709"><span class="nick" style="color:#6c3d55"><a href="#234709" label="[23:47:09]">&lt;sam_&gt;</a></span><span class="message">yeah</span></div><div class="line" id="234736"><span class="nick" style="color:#234e69"><a href="#234736" label="[23:47:36]">&lt;aggi&gt;</a></span><span class="message">i got a devdrop here, tcc-toolchain fully replacing gcc/binutils (except libc with it asm)</span></div><div class="line" id="234808"><span class="nick" style="color:#234e69"><a href="#234808" label="[23:48:08]">&lt;aggi&gt;</a></span><span class="message">300 builds in my overlay, a noteworthy amount related to, autoreconf troubles</span></div><div class="line" id="234823"><span class="nick" style="color:#234e69"><a href="#234823" label="[23:48:23]">&lt;aggi&gt;</a></span><span class="message">another reason why</span></div><br /></div></body></html>