<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-12-10.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="025045"><span class="nick" style="color:#8dd3c7"><a href="#025045" label="[02:50:45]">&lt;OriansJ&gt;</a></span><span class="message">siraben: I'll get to that Pull request as soon as I can</span></div><div class="line" id="025804"><span class="nick">***</span><span class="message notice">wowaname is now known as opal</span></div><div class="line" id="105830"><span class="nick" style="color:#2e2a4a"><a href="#105830" label="[10:58:30]">&lt;siraben&gt;</a></span><span class="message">pder: Ok. I'd be happy to change the Haskell side of things, so let me know.</span></div><div class="line" id="105844"><span class="nick" style="color:#2e2a4a"><a href="#105844" label="[10:58:44]">&lt;siraben&gt;</a></span><span class="message">OriansJ: take your time</span></div><div class="line" id="121632"><span class="nick" style="color:#8dd3c7"><a href="#121632" label="[12:16:32]">&lt;OriansJ&gt;</a></span><span class="message">pder: well it would be rather trivial to max the max string size a global variable and then provide a user option to extend it as big as we would want.</span></div><div class="line" id="121828"><span class="nick" style="color:#8dd3c7"><a href="#121828" label="[12:18:28]">&lt;OriansJ&gt;</a></span><span class="message">siraben: it is going to be a bit; dealing with a drive corruption issues</span></div><div class="line" id="121929"><span class="nick" style="color:#8dd3c7"><a href="#121929" label="[12:19:29]">&lt;OriansJ&gt;</a></span><span class="message">which makes no sense badblocks finds nothing wrong the smart self-test finds nothing wrong and the memtest finds nothing wrong; CPU burn-in test finds nothing wrong.</span></div><div class="line" id="122303"><span class="nick" style="color:#8dd3c7"><a href="#122303" label="[12:23:03]">&lt;OriansJ&gt;</a></span><span class="message">correction ^max the max string^make the max string^</span></div><div class="line" id="131249"><span class="nick" style="color:#8dd3c7"><a href="#131249" label="[13:12:49]">&lt;OriansJ&gt;</a></span><span class="message">The only reason we capped it at 4096bytes was it seemed unlikely for anything human written to have to exceed that size.</span></div><div class="line" id="131404"><span class="nick" style="color:#8dd3c7"><a href="#131404" label="[13:14:04]">&lt;OriansJ&gt;</a></span><span class="message">it is also the max size for tokens too eg 4K+ long variable names are also invalid.</span></div><div class="line" id="131701"><span class="nick" style="color:#8dd3c7"><a href="#131701" label="[13:17:01]">&lt;OriansJ&gt;</a></span><span class="message">and honestly I believe tweaking vm.c will eliminate the need for rts.c entirely and the compilation steps as well but that is currently on hold until I can finish the reviews for yt and get mescc-tools-seed done.</span></div><div class="line" id="150635"><span class="nick" style="color:#6b8072"><a href="#150635" label="[15:06:35]">&lt;pder&gt;</a></span><span class="message">OriansJ: I made some progress yesterday on blynn-compiler and finding a few minor issues in vm.c.  I can now go from lonely to patty with a command like the following:</span></div><div class="line" id="150719"><span class="nick" style="color:#6b8072"><a href="#150719" label="[15:07:19]">&lt;pder&gt;</a></span><span class="message">./bin/vm -f patty.hs --rts_c lonely_prog.txt</span></div><div class="line" id="150749"><span class="nick" style="color:#6b8072"><a href="#150749" label="[15:07:49]">&lt;pder&gt;</a></span><span class="message">where lonely_prog.txt is a comma separated text file of the prog[] array</span></div><div class="line" id="150834"><span class="nick" style="color:#6b8072"><a href="#150834" label="[15:08:34]">&lt;pder&gt;</a></span><span class="message">However, something is still broken with the M2-Planet build of vm vs gcc</span></div><div class="line" id="151502"><span class="nick" style="color:#6b8072"><a href="#151502" label="[15:15:02]">&lt;pder&gt;</a></span><span class="message">I pushed a branch named lonely that has my work, but it is not ready to merge</span></div><div class="line" id="153302"><span class="nick" style="color:#2e2a4a"><a href="#153302" label="[15:33:02]">&lt;siraben&gt;</a></span><span class="message">pder: do you program in Haskell?</span></div><div class="line" id="153632"><span class="nick" style="color:#6b8072"><a href="#153632" label="[15:36:32]">&lt;pder&gt;</a></span><span class="message">Unfortunately, no, but I am interested in learning</span></div><div class="line" id="162727"><span class="nick" style="color:#2e2a4a"><a href="#162727" label="[16:27:27]">&lt;siraben&gt;</a></span><span class="message">pder: yay!</span></div><div class="line" id="162841"><span class="nick" style="color:#2e2a4a"><a href="#162841" label="[16:28:41]">&lt;siraben&gt;</a></span><span class="message">i have a patch file that patches effectively.hs to make it buildable with GHC <a rel="nofollow" href="https://github.com/siraben/compiler/blob/ghc-compat/effectively-ghc.patch">https://github.com/siraben/compiler/blob/ghc-compat/effectively-ghc.patch</a> </span></div><div class="line" id="162949"><span class="nick" style="color:#2e2a4a"><a href="#162949" label="[16:29:49]">&lt;siraben&gt;</a></span><span class="message">then run ghc -O3 effectively.hs</span></div><div class="line" id="165111"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado</span></div><div class="line" id="173725"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="215954"><span class="nick" style="color:#80b1d3"><a href="#215954" label="[21:59:54]">&lt;slavanap&gt;</a></span><span class="message">Hello, is there manuals for bootstrapping Gentoo?</span></div><div class="line" id="221441"><span class="nick" style="color:#6b8072"><a href="#221441" label="[22:14:41]">&lt;pder&gt;</a></span><span class="message">siraben: thanks!</span></div><div class="line" id="222313"><span class="nick" style="color:#6b8072"><a href="#222313" label="[22:23:13]">&lt;pder&gt;</a></span><span class="message">I found the issue with compiling patty from the raw lonely prog.  There appears to be a difference between M2-Planet and gcc when doing signed / unsigned comparisons.</span></div><div class="line" id="222459"><span class="nick" style="color:#6b8072"><a href="#222459" label="[22:24:59]">&lt;pder&gt;</a></span><span class="message">in run() when we compare if num(1) &lt;= num(2), gcc reports true if num(1) is -1 and M2-Planet reports false which changes the behavior and caused the M2-Planet version to hang</span></div><div class="line" id="222747"><span class="nick" style="color:#6d2462"><a href="#222747" label="[22:27:47]">&lt;fossy&gt;</a></span><span class="message">slavanap: not yet developed</span></div><div class="line" id="222748"><span class="nick" style="color:#6b8072"><a href="#222748" label="[22:27:48]">&lt;pder&gt;</a></span><span class="message">siraben: I am wondering if you can help decipher how the parameter for rts_reduce() is calculated.  Line 934 of lonely.hs</span></div><div class="line" id="222817"><span class="nick" style="color:#80b1d3"><a href="#222817" label="[22:28:17]">&lt;slavanap&gt;</a></span><span class="message">fossy, thanks for the info!</span></div><div class="line" id="224500"><span class="nick" style="color:#6b8072"><a href="#224500" label="[22:45:00]">&lt;pder&gt;</a></span><span class="message">sorry, M2-Planet thinks -1 &lt; 255 and gcc thinks -1 &gt; 255.  This is assuming all variables are unsigned.</span></div><div class="line" id="224538"><span class="nick" style="color:#234e69"><a href="#224538" label="[22:45:38]">&lt;xentrac&gt;</a></span><span class="message">oh right, the Usual Arithmetic Conversions, the secret nightmare at the heart of C</span></div><div class="line" id="232132"><span class="nick" style="color:#8dd3c7"><a href="#232132" label="[23:21:32]">&lt;OriansJ&gt;</a></span><span class="message">So we might need to add signed and unsigned comparisions to M2-Planet</span></div><div class="line" id="232223"><span class="nick" style="color:#8dd3c7"><a href="#232223" label="[23:22:23]">&lt;OriansJ&gt;</a></span><span class="message">shouldn't be too hard to do; we already did a similiar transistion with arithmetic operators</span></div><div class="line" id="232315"><span class="nick" style="color:#6d2462"><a href="#232315" label="[23:23:15]">&lt;fossy&gt;</a></span><span class="message">oh ive run into that beforw</span></div><div class="line" id="232457"><span class="nick" style="color:#8dd3c7"><a href="#232457" label="[23:24:57]">&lt;OriansJ&gt;</a></span><span class="message">fossy: should have made a bug test and we would have addressed it</span></div><div class="line" id="232650"><span class="nick" style="color:#6b8072"><a href="#232650" label="[23:26:50]">&lt;pder&gt;</a></span><span class="message">Does that mean the cc_x86 and other code would need to be updated as well?</span></div><div class="line" id="232720"><span class="nick" style="color:#8dd3c7"><a href="#232720" label="[23:27:20]">&lt;OriansJ&gt;</a></span><span class="message">pder: no as M2-Planet avoids depending on sign behavior entirely</span></div><div class="line" id="232739"><span class="nick" style="color:#8dd3c7"><a href="#232739" label="[23:27:39]">&lt;OriansJ&gt;</a></span><span class="message">Only M2-Planet needs to be updated to fix it</span></div><div class="line" id="232749"><span class="nick" style="color:#6b8072"><a href="#232749" label="[23:27:49]">&lt;pder&gt;</a></span><span class="message">Ahh, cool</span></div><div class="line" id="232848"><span class="nick" style="color:#8dd3c7"><a href="#232848" label="[23:28:48]">&lt;OriansJ&gt;</a></span><span class="message">if you'll notice cc_x86 just has general_recursion and not arithmetic recursion and it is why M2-Planet needs to be built before we can build hex2_linker.c</span></div><div class="line" id="232923"><span class="nick" style="color:#8dd3c7"><a href="#232923" label="[23:29:23]">&lt;OriansJ&gt;</a></span><span class="message">hex2_linker.c actually needs the unsigned behavior and M1 needs the signed behavior</span></div><div class="line" id="233007"><span class="nick" style="color:#6d2462"><a href="#233007" label="[23:30:07]">&lt;fossy&gt;</a></span><span class="message">I just went to like 999999</span></div><div class="line" id="233014"><span class="nick" style="color:#6d2462"><a href="#233014" label="[23:30:14]">&lt;fossy&gt;</a></span><span class="message">OriansJ: I didnt think much of it</span></div><div class="line" id="233017"><span class="nick" style="color:#8dd3c7"><a href="#233017" label="[23:30:17]">&lt;OriansJ&gt;</a></span><span class="message">So I made M2-Planet support both and avoided the cases in M2-Planet where it might impact generated behavior.</span></div><div class="line" id="233030"><span class="nick" style="color:#6d2462"><a href="#233030" label="[23:30:30]">&lt;fossy&gt;</a></span><span class="message">I was just like huh, -1 isnt doing that, lets make it 99999</span></div><div class="line" id="233039"><span class="nick" style="color:#6d2462"><a href="#233039" label="[23:30:39]">&lt;fossy&gt;</a></span><span class="message">Because I was debugging using m2-planet</span></div><div class="line" id="233104"><span class="nick" style="color:#6d2462"><a href="#233104" label="[23:31:04]">&lt;fossy&gt;</a></span><span class="message">didnt test with gcc, so I didnt notice the discrepancy</span></div><div class="line" id="233139"><span class="nick" style="color:#8dd3c7"><a href="#233139" label="[23:31:39]">&lt;OriansJ&gt;</a></span><span class="message">fossy: 0xFFFFFFFF &gt; i is more obvious if you ask me but maybe that is just me spending too much time in the hex</span></div><div class="line" id="233220"><span class="nick" style="color:#6b8072"><a href="#233220" label="[23:32:20]">&lt;pder&gt;</a></span><span class="message">Oriansj: its not quite ready to merge, but my lonely branch has the fixes to build patty.</span></div><div class="line" id="233246"><span class="nick" style="color:#8dd3c7"><a href="#233246" label="[23:32:46]">&lt;OriansJ&gt;</a></span><span class="message">pder: impressive work</span></div><div class="line" id="233320"><span class="nick" style="color:#8dd3c7"><a href="#233320" label="[23:33:20]">&lt;OriansJ&gt;</a></span><span class="message">and thank you for taking the lead on those steps</span></div><div class="line" id="233405"><span class="nick" style="color:#6b8072"><a href="#233405" label="[23:34:05]">&lt;pder&gt;</a></span><span class="message">Thanks, I did a lot of dumping data and comparing gcc output to M2-Planet and finally drilled into the cause</span></div><br /></div></body></html>