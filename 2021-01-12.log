<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000008"><span class="nick" style="color:#389600"><a href="#000008" label="[00:00:08]">&lt;fossy&gt;</a></span><span class="message">ohh</span></div><div class="line" id="000012"><span class="nick" style="color:#389600"><a href="#000012" label="[00:00:12]">&lt;fossy&gt;</a></span><span class="message">yeah ok keep it as is then</span></div><div class="line" id="000040"><span class="nick" style="color:#2e2a4a"><a href="#000040" label="[00:00:40]">&lt;stikonas&gt;</a></span><span class="message">I also wanted it to work for both .tar and .tar.anything</span></div><div class="line" id="000055"><span class="nick" style="color:#2e2a4a"><a href="#000055" label="[00:00:55]">&lt;stikonas&gt;</a></span><span class="message">maybe something simpler can be written but oh well...</span></div><div class="line" id="000057"><span class="nick" style="color:#2e2a4a"><a href="#000057" label="[00:00:57]">&lt;stikonas&gt;</a></span><span class="message">this work</span></div><div class="line" id="000059"><span class="nick" style="color:#2e2a4a"><a href="#000059" label="[00:00:59]">&lt;stikonas&gt;</a></span><span class="message">works</span></div><div class="line" id="000100"><span class="nick" style="color:#389600"><a href="#000100" label="[00:01:00]">&lt;fossy&gt;</a></span><span class="message">yea it's fine</span></div><div class="line" id="000102"><span class="nick" style="color:#389600"><a href="#000102" label="[00:01:02]">&lt;fossy&gt;</a></span><span class="message">readable too</span></div><div class="line" id="002414"><span class="nick" style="color:#6b8072"><a href="#002414" label="[00:24:14]">&lt;vagrantc&gt;</a></span><span class="message">i see a lot of buzz going on, is mes likely to see a new release soon?</span></div><div class="line" id="002445"><span class="nick" style="color:#6b8072"><a href="#002445" label="[00:24:45]">&lt;vagrantc&gt;</a></span><span class="message">trying to get mescc-tools uploaded now for debian's upcoming bullseye release (freeze starts soon)</span></div><div class="line" id="002448"><span class="nick" style="color:#80b1d3"><a href="#002448" label="[00:24:48]">&lt;OriansJ&gt;</a></span><span class="message">anyone seen this bug before in make: make -j 2 results in the same step being done at the exact same time twice.</span></div><div class="line" id="002519"><span class="nick" style="color:#6b8072"><a href="#002519" label="[00:25:19]">&lt;vagrantc&gt;</a></span><span class="message">my best test for mescc-tools is, of course, building mes :)</span></div><div class="line" id="003828"><span class="nick" style="color:#6d2462"><a href="#003828" label="[00:38:28]">&lt;deesix&gt;</a></span><span class="message">OriansJ, didn't happen here. That sounds nasty.</span></div><div class="line" id="003936"><span class="nick" style="color:#80b1d3"><a href="#003936" label="[00:39:36]">&lt;OriansJ&gt;</a></span><span class="message">deesix: happens with 42+ cores but only if the cores are slow enough</span></div><div class="line" id="004002"><span class="nick" style="color:#80b1d3"><a href="#004002" label="[00:40:02]">&lt;OriansJ&gt;</a></span><span class="message">eg on lower end arm servers but not higher end AMD64 servers</span></div><div class="line" id="004153"><span class="nick" style="color:#6d2462"><a href="#004153" label="[00:41:53]">&lt;deesix&gt;</a></span><span class="message">Maybe filesystem/arch related, instead of speed.</span></div><div class="line" id="004205"><span class="nick" style="color:#80b1d3"><a href="#004205" label="[00:42:05]">&lt;OriansJ&gt;</a></span><span class="message">so I sent a message to help-make mailing list with the hope that they might find us a better work around than having to type make clean M2-Planet test -j42</span></div><div class="line" id="004227"><span class="nick" style="color:#80b1d3"><a href="#004227" label="[00:42:27]">&lt;OriansJ&gt;</a></span><span class="message">as that always is successful in the testing I have done</span></div><div class="line" id="004352"><span class="nick" style="color:#80b1d3"><a href="#004352" label="[00:43:52]">&lt;OriansJ&gt;</a></span><span class="message">well I'll double check to see if choosing ext4, zfs, btrfs, ext2 or xfs results in different behavior</span></div><div class="line" id="004442"><span class="nick" style="color:#6d2462"><a href="#004442" label="[00:44:42]">&lt;deesix&gt;</a></span><span class="message">And even flags for those, the FS matrix is kind of infinite.</span></div><div class="line" id="004725"><span class="nick" style="color:#2e2a4a"><a href="#004725" label="[00:47:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: argh, tar submodule does not work with my kaem file...</span></div><div class="line" id="004732"><span class="nick" style="color:#2e2a4a"><a href="#004732" label="[00:47:32]">&lt;stikonas&gt;</a></span><span class="message">need to check...</span></div><div class="line" id="005146"><span class="nick" style="color:#2e2a4a"><a href="#005146" label="[00:51:46]">&lt;stikonas&gt;</a></span><span class="message">fossy: it's missing some files <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/tar.git/tree/lib?id=3289dce5520299aeca677b1fc18383961a112949">https://git.savannah.gnu.org/cgit/tar.git/tree/lib?id=3289dce5520299aeca677b1fc18383961a112949</a>  for libtar.a</span></div><div class="line" id="005503"><span class="nick" style="color:#6d2462"><a href="#005503" label="[00:55:03]">&lt;deesix&gt;</a></span><span class="message">I'm trying a bit on tmpfs, OriansJ, but this machine is small ;) I really don't understand how make decides to re-build, I guess it's timestamp based, but seems a bit inconsistent, as sometimes it only recompiles M2-Planet and sometimes everything (without clean in-between).</span></div><div class="line" id="005516"><span class="nick" style="color:#2e2a4a"><a href="#005516" label="[00:55:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: shall I go back to wgeting and unpacking tarball?</span></div><div class="line" id="005524"><span class="nick" style="color:#389600"><a href="#005524" label="[00:55:24]">&lt;fossy&gt;</a></span><span class="message">stikonas: huh, WTF</span></div><div class="line" id="005532"><span class="nick" style="color:#389600"><a href="#005532" label="[00:55:32]">&lt;fossy&gt;</a></span><span class="message">yes go back to that and I'll figure it out</span></div><div class="line" id="005642"><span class="nick" style="color:#2e2a4a"><a href="#005642" label="[00:56:42]">&lt;stikonas&gt;</a></span><span class="message">in git history lib folder was adding at around tar 1.13.80...</span></div><div class="line" id="005644"><span class="nick" style="color:#2e2a4a"><a href="#005644" label="[00:56:44]">&lt;stikonas&gt;</a></span><span class="message">strange...</span></div><div class="line" id="010009"><span class="nick" style="color:#6d2462"><a href="#010009" label="[01:00:09]">&lt;deesix&gt;</a></span><span class="message">OriansJ, no... sorry... Not just M2-Planet, but sometimes it rebuilds everything (due to M2-Planet rebuild, as expected) and sometimes it decides to not do it.</span></div><div class="line" id="010453"><span class="nick" style="color:#6d2462"><a href="#010453" label="[01:04:53]">&lt;deesix&gt;</a></span><span class="message">Hmm, but this happens without -j too.</span></div><div class="line" id="010635"><span class="nick" style="color:#80b1d3"><a href="#010635" label="[01:06:35]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: what happens when you do: git submodule update --checkout</span></div><div class="line" id="010742"><span class="nick" style="color:#2e2a4a"><a href="#010742" label="[01:07:42]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: tar has no submodules</span></div><div class="line" id="010750"><span class="nick" style="color:#2e2a4a"><a href="#010750" label="[01:07:50]">&lt;stikonas&gt;</a></span><span class="message">file was simply added later to git</span></div><div class="line" id="010756"><span class="nick" style="color:#2e2a4a"><a href="#010756" label="[01:07:56]">&lt;stikonas&gt;</a></span><span class="message">maybe bad svn to git conversion...</span></div><div class="line" id="010805"><span class="nick" style="color:#2e2a4a"><a href="#010805" label="[01:08:05]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/tar.git/log/lib/alloca.c?h=alpha_1_13_93">https://git.savannah.gnu.org/cgit/tar.git/log/lib/alloca.c?h=alpha_1_13_93</a> </span></div><div class="line" id="010825"><span class="nick" style="color:#2e2a4a"><a href="#010825" label="[01:08:25]">&lt;stikonas&gt;</a></span><span class="message">and alloca.c and other files in lib/ folder are present in tar-1.12 release tarball</span></div><div class="line" id="010850"><span class="nick" style="color:#6d2462"><a href="#010850" label="[01:08:50]">&lt;deesix&gt;</a></span><span class="message">--checkout is the default, given no explicit config.</span></div><div class="line" id="012019"><span class="nick" style="color:#80b1d3"><a href="#012019" label="[01:20:19]">&lt;OriansJ&gt;</a></span><span class="message">deesix: order-only-prerequisites</span></div><div class="line" id="012050"><span class="nick" style="color:#389600"><a href="#012050" label="[01:20:50]">&lt;fossy&gt;</a></span><span class="message">stikonas: is your PR ready?</span></div><div class="line" id="012100"><span class="nick" style="color:#2e2a4a"><a href="#012100" label="[01:21:00]">&lt;stikonas&gt;</a></span><span class="message">running test now</span></div><div class="line" id="012104"><span class="nick" style="color:#389600"><a href="#012104" label="[01:21:04]">&lt;fossy&gt;</a></span><span class="message">:D</span></div><div class="line" id="012105"><span class="nick" style="color:#2e2a4a"><a href="#012105" label="[01:21:05]">&lt;stikonas&gt;</a></span><span class="message">compiling tcc right now</span></div><div class="line" id="012110"><span class="nick" style="color:#2e2a4a"><a href="#012110" label="[01:21:10]">&lt;stikonas&gt;</a></span><span class="message">hopefully works</span></div><div class="line" id="012115"><span class="nick" style="color:#2e2a4a"><a href="#012115" label="[01:21:15]">&lt;stikonas&gt;</a></span><span class="message">I'll let you know if it does</span></div><div class="line" id="012118"><span class="nick" style="color:#2e2a4a"><a href="#012118" label="[01:21:18]">&lt;stikonas&gt;</a></span><span class="message">if not, probably tomorrow</span></div><div class="line" id="012121"><span class="nick" style="color:#2e2a4a"><a href="#012121" label="[01:21:21]">&lt;stikonas&gt;</a></span><span class="message">going to bed soon</span></div><div class="line" id="012125"><span class="nick" style="color:#389600"><a href="#012125" label="[01:21:25]">&lt;fossy&gt;</a></span><span class="message">once i merge your PR i'm going to try bare metal</span></div><div class="line" id="012200"><span class="nick" style="color:#80b1d3"><a href="#012200" label="[01:22:00]">&lt;OriansJ&gt;</a></span><span class="message">nope didn't work</span></div><div class="line" id="012254"><span class="nick" style="color:#6d2462"><a href="#012254" label="[01:22:54]">&lt;deesix&gt;</a></span><span class="message">That's not even in this manpage.</span></div><div class="line" id="012320"><span class="nick" style="color:#2e2a4a"><a href="#012320" label="[01:23:20]">&lt;stikonas&gt;</a></span><span class="message">fossy: using stage0 monitor?</span></div><div class="line" id="012326"><span class="nick" style="color:#389600"><a href="#012326" label="[01:23:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: no lol</span></div><div class="line" id="012328"><span class="nick" style="color:#2e2a4a"><a href="#012328" label="[01:23:28]">&lt;stikonas&gt;</a></span><span class="message">that one is manual....</span></div><div class="line" id="012339"><span class="nick" style="color:#389600"><a href="#012339" label="[01:23:39]">&lt;fossy&gt;</a></span><span class="message">running the initramfs on bare metal</span></div><div class="line" id="012346"><span class="nick" style="color:#389600"><a href="#012346" label="[01:23:46]">&lt;fossy&gt;</a></span><span class="message">putting it on a usb and then using grub to load it</span></div><div class="line" id="012347"><span class="nick" style="color:#2e2a4a"><a href="#012347" label="[01:23:47]">&lt;stikonas&gt;</a></span><span class="message">oh I see :D</span></div><div class="line" id="012355"><span class="nick" style="color:#2e2a4a"><a href="#012355" label="[01:23:55]">&lt;stikonas&gt;</a></span><span class="message">yeah, makes sense</span></div><div class="line" id="012404"><span class="nick" style="color:#2e2a4a"><a href="#012404" label="[01:24:04]">&lt;stikonas&gt;</a></span><span class="message">although, would be nice to get bash too...</span></div><div class="line" id="012407"><span class="nick" style="color:#2e2a4a"><a href="#012407" label="[01:24:07]">&lt;stikonas&gt;</a></span><span class="message">but maybe later...</span></div><div class="line" id="012414"><span class="nick" style="color:#389600"><a href="#012414" label="[01:24:14]">&lt;fossy&gt;</a></span><span class="message">yeah i'll do bash while you sleep</span></div><div class="line" id="012416"><span class="nick" style="color:#2e2a4a"><a href="#012416" label="[01:24:16]">&lt;stikonas&gt;</a></span><span class="message">once we have bash, we can add it at the end of kaem script</span></div><div class="line" id="012437"><span class="nick" style="color:#2e2a4a"><a href="#012437" label="[01:24:37]">&lt;stikonas&gt;</a></span><span class="message">so that we get shell instead of kernel panic</span></div><div class="line" id="012453"><span class="nick" style="color:#389600"><a href="#012453" label="[01:24:53]">&lt;fossy&gt;</a></span><span class="message">reasonable idea</span></div><div class="line" id="012517"><span class="nick" style="color:#2e2a4a"><a href="#012517" label="[01:25:17]">&lt;stikonas&gt;</a></span><span class="message">do you think bash is easier than make?</span></div><div class="line" id="012527"><span class="nick" style="color:#389600"><a href="#012527" label="[01:25:27]">&lt;fossy&gt;</a></span><span class="message">for what?</span></div><div class="line" id="012529"><span class="nick" style="color:#389600"><a href="#012529" label="[01:25:29]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="012537"><span class="nick" style="color:#389600"><a href="#012537" label="[01:25:37]">&lt;fossy&gt;</a></span><span class="message">make is easier</span></div><div class="line" id="012543"><span class="nick" style="color:#2e2a4a"><a href="#012543" label="[01:25:43]">&lt;stikonas&gt;</a></span><span class="message">here they did <a rel="nofollow" href="https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html">https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html</a> </span></div><div class="line" id="012546"><span class="nick" style="color:#389600"><a href="#012546" label="[01:25:46]">&lt;fossy&gt;</a></span><span class="message">because it has a ./build.sh</span></div><div class="line" id="012548"><span class="nick" style="color:#2e2a4a"><a href="#012548" label="[01:25:48]">&lt;stikonas&gt;</a></span><span class="message">make first</span></div><div class="line" id="012551"><span class="nick" style="color:#2e2a4a"><a href="#012551" label="[01:25:51]">&lt;stikonas&gt;</a></span><span class="message">well, we have no shell</span></div><div class="line" id="012559"><span class="nick" style="color:#2e2a4a"><a href="#012559" label="[01:25:59]">&lt;stikonas&gt;</a></span><span class="message">we need kaem conversion in any case</span></div><div class="line" id="012601"><span class="nick" style="color:#389600"><a href="#012601" label="[01:26:01]">&lt;fossy&gt;</a></span><span class="message">but it dosen't really matter, we need both anyway</span></div><div class="line" id="012604"><span class="nick" style="color:#2e2a4a"><a href="#012604" label="[01:26:04]">&lt;stikonas&gt;</a></span><span class="message">well, yeah</span></div><div class="line" id="012618"><span class="nick" style="color:#2e2a4a"><a href="#012618" label="[01:26:18]">&lt;stikonas&gt;</a></span><span class="message">but the question is do we want to write kaem script for bash, or write manual makefile</span></div><div class="line" id="012633"><span class="nick" style="color:#2e2a4a"><a href="#012633" label="[01:26:33]">&lt;stikonas&gt;</a></span><span class="message">that's up to you in the end</span></div><div class="line" id="012639"><span class="nick" style="color:#2e2a4a"><a href="#012639" label="[01:26:39]">&lt;stikonas&gt;</a></span><span class="message">both are fine...</span></div><div class="line" id="012642"><span class="nick" style="color:#389600"><a href="#012642" label="[01:26:42]">&lt;fossy&gt;</a></span><span class="message">oh i c</span></div><div class="line" id="012645"><span class="nick" style="color:#2e2a4a"><a href="#012645" label="[01:26:45]">&lt;stikonas&gt;</a></span><span class="message">just what is easier?</span></div><div class="line" id="012657"><span class="nick" style="color:#2e2a4a"><a href="#012657" label="[01:26:57]">&lt;stikonas&gt;</a></span><span class="message">make is quite a bit more powerful than kaem</span></div><div class="line" id="012709"><span class="nick" style="color:#389600"><a href="#012709" label="[01:27:09]">&lt;fossy&gt;</a></span><span class="message">yeah i think i'll go with make first</span></div><div class="line" id="012713"><span class="nick" style="color:#389600"><a href="#012713" label="[01:27:13]">&lt;fossy&gt;</a></span><span class="message">and then write a makefile..</span></div><div class="line" id="012717"><span class="nick" style="color:#2e2a4a"><a href="#012717" label="[01:27:17]">&lt;stikonas&gt;</a></span><span class="message">yaeh, mightbe easier</span></div><div class="line" id="012722"><span class="nick" style="color:#2e2a4a"><a href="#012722" label="[01:27:22]">&lt;stikonas&gt;</a></span><span class="message">not sure how powerful is old make</span></div><div class="line" id="012723"><span class="nick" style="color:#389600"><a href="#012723" label="[01:27:23]">&lt;fossy&gt;</a></span><span class="message">we can probably even do makefiles for everything then up to gcc....</span></div><div class="line" id="012724"><span class="nick" style="color:#2e2a4a"><a href="#012724" label="[01:27:24]">&lt;stikonas&gt;</a></span><span class="message">but probably good enough</span></div><div class="line" id="012736"><span class="nick" style="color:#2e2a4a"><a href="#012736" label="[01:27:36]">&lt;stikonas&gt;</a></span><span class="message">well, autoconf, automake, etc...</span></div><div class="line" id="012738"><span class="nick" style="color:#2e2a4a"><a href="#012738" label="[01:27:38]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="012744"><span class="nick" style="color:#389600"><a href="#012744" label="[01:27:44]">&lt;fossy&gt;</a></span><span class="message">because makefiles rules are super useful</span></div><div class="line" id="012749"><span class="nick" style="color:#2e2a4a"><a href="#012749" label="[01:27:49]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="012757"><span class="nick" style="color:#389600"><a href="#012757" label="[01:27:57]">&lt;fossy&gt;</a></span><span class="message">good idea, thanks for that</span></div><div class="line" id="012758"><span class="nick" style="color:#2e2a4a"><a href="#012758" label="[01:27:58]">&lt;stikonas&gt;</a></span><span class="message">you can have same rule for all .c files...</span></div><div class="line" id="012801"><span class="nick" style="color:#389600"><a href="#012801" label="[01:28:01]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="012847"><span class="nick" style="color:#2e2a4a"><a href="#012847" label="[01:28:47]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, I think my PR is almost ready</span></div><div class="line" id="012851"><span class="nick" style="color:#2e2a4a"><a href="#012851" label="[01:28:51]">&lt;stikonas&gt;</a></span><span class="message">I forgot -static for diffutils</span></div><div class="line" id="012856"><span class="nick" style="color:#2e2a4a"><a href="#012856" label="[01:28:56]">&lt;stikonas&gt;</a></span><span class="message">so linking crashed</span></div><div class="line" id="012901"><span class="nick" style="color:#2e2a4a"><a href="#012901" label="[01:29:01]">&lt;stikonas&gt;</a></span><span class="message">I guess I'll push without testing...</span></div><div class="line" id="012906"><span class="nick" style="color:#389600"><a href="#012906" label="[01:29:06]">&lt;fossy&gt;</a></span><span class="message">diffutils is last tho</span></div><div class="line" id="012913"><span class="nick" style="color:#2e2a4a"><a href="#012913" label="[01:29:13]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="012917"><span class="nick" style="color:#389600"><a href="#012917" label="[01:29:17]">&lt;fossy&gt;</a></span><span class="message">so it should just work (TM)</span></div><div class="line" id="012920"><span class="nick" style="color:#2e2a4a"><a href="#012920" label="[01:29:20]">&lt;stikonas&gt;</a></span><span class="message">and compilation worked</span></div><div class="line" id="012922"><span class="nick" style="color:#2e2a4a"><a href="#012922" label="[01:29:22]">&lt;stikonas&gt;</a></span><span class="message">just linking :(</span></div><div class="line" id="012934"><span class="nick" style="color:#2e2a4a"><a href="#012934" label="[01:29:34]">&lt;stikonas&gt;</a></span><span class="message">oh, do you want to rebuild tcc?</span></div><div class="line" id="012935"><span class="nick" style="color:#2e2a4a"><a href="#012935" label="[01:29:35]">&lt;stikonas&gt;</a></span><span class="message">with patch</span></div><div class="line" id="012937"><span class="nick" style="color:#389600"><a href="#012937" label="[01:29:37]">&lt;fossy&gt;</a></span><span class="message">yeah just push and i'll test and merge</span></div><div class="line" id="012939"><span class="nick" style="color:#2e2a4a"><a href="#012939" label="[01:29:39]">&lt;stikonas&gt;</a></span><span class="message">to enable static...</span></div><div class="line" id="012944"><span class="nick" style="color:#389600"><a href="#012944" label="[01:29:44]">&lt;fossy&gt;</a></span><span class="message">i'll do that after this pr</span></div><div class="line" id="013013"><span class="nick" style="color:#2e2a4a"><a href="#013013" label="[01:30:13]">&lt;stikonas&gt;</a></span><span class="message">ok, pushed</span></div><div class="line" id="013105"><span class="nick" style="color:#2e2a4a"><a href="#013105" label="[01:31:05]">&lt;stikonas&gt;</a></span><span class="message">anyway, we are getting quite a few tools</span></div><div class="line" id="013114"><span class="nick" style="color:#2e2a4a"><a href="#013114" label="[01:31:14]">&lt;stikonas&gt;</a></span><span class="message">now just need better driver instead of kaem</span></div><div class="line" id="013315"><span class="nick" style="color:#2e2a4a"><a href="#013315" label="[01:33:15]">&lt;stikonas&gt;</a></span><span class="message">I wonder if we are still reproducible at this point</span></div><div class="line" id="013330"><span class="nick" style="color:#2e2a4a"><a href="#013330" label="[01:33:30]">&lt;stikonas&gt;</a></span><span class="message">i.e. whether binaries are the same on different runs</span></div><div class="line" id="013343"><span class="nick" style="color:#2e2a4a"><a href="#013343" label="[01:33:43]">&lt;stikonas&gt;</a></span><span class="message">I guess at this stage it's still true</span></div><div class="line" id="013348"><span class="nick" style="color:#389600"><a href="#013348" label="[01:33:48]">&lt;fossy&gt;</a></span><span class="message">in all probability</span></div><div class="line" id="013502"><span class="nick" style="color:#2e2a4a"><a href="#013502" label="[01:35:02]">&lt;stikonas&gt;</a></span><span class="message">mescc is the slowest part of bootstrap...</span></div><div class="line" id="013508"><span class="nick" style="color:#2e2a4a"><a href="#013508" label="[01:35:08]">&lt;stikonas&gt;</a></span><span class="message">takes like most of the time...</span></div><div class="line" id="013518"><span class="nick" style="color:#2e2a4a"><a href="#013518" label="[01:35:18]">&lt;stikonas&gt;</a></span><span class="message">:(</span></div><div class="line" id="013534"><span class="nick" style="color:#2e2a4a"><a href="#013534" label="[01:35:34]">&lt;stikonas&gt;</a></span><span class="message">well, for now at least, later I guess gcc will take longer</span></div><div class="line" id="013849"><span class="nick" style="color:#389600"><a href="#013849" label="[01:38:49]">&lt;fossy&gt;</a></span><span class="message">yeah mescc is pretty slow</span></div><div class="line" id="013856"><span class="nick" style="color:#389600"><a href="#013856" label="[01:38:56]">&lt;fossy&gt;</a></span><span class="message">at least it dosent take hours like it used to</span></div><div class="line" id="014310"><span class="nick" style="color:#2e2a4a"><a href="#014310" label="[01:43:10]">&lt;stikonas&gt;</a></span><span class="message">oh yeah, I think I've read that it was that slow, I haven't used it back then</span></div><div class="line" id="015117"><span class="nick" style="color:#2e2a4a"><a href="#015117" label="[01:51:17]">&lt;stikonas&gt;</a></span><span class="message">oh, now with kaem escaping we can also fix mes.kaem (no need to use pre-written config.h)</span></div><div class="line" id="020056"><span class="nick" style="color:#2e2a4a"><a href="#020056" label="[02:00:56]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, it ran to completion</span></div><div class="line" id="020102"><span class="nick" style="color:#2e2a4a"><a href="#020102" label="[02:01:02]">&lt;stikonas&gt;</a></span><span class="message">so I guess you can merge</span></div><div class="line" id="021113"><span class="nick" style="color:#80b1d3"><a href="#021113" label="[02:11:13]">&lt;OriansJ&gt;</a></span><span class="message">ugh</span></div><div class="line" id="021129"><span class="nick" style="color:#80b1d3"><a href="#021129" label="[02:11:29]">&lt;OriansJ&gt;</a></span><span class="message">well I guess I found a solution deesix</span></div><div class="line" id="021252"><span class="nick" style="color:#80b1d3"><a href="#021252" label="[02:12:52]">&lt;OriansJ&gt;</a></span><span class="message">an ugly ugly solution</span></div><div class="line" id="021311"><span class="nick" style="color:#80b1d3"><a href="#021311" label="[02:13:11]">&lt;OriansJ&gt;</a></span><span class="message">but it works for all tested systems up to 256cores</span></div><div class="line" id="021336"><span class="nick" style="color:#80b1d3"><a href="#021336" label="[02:13:36]">&lt;OriansJ&gt;</a></span><span class="message">(I can't find a VPS provider with more than that many cores for rent)</span></div><div class="line" id="021414"><span class="nick" style="color:#6d2462"><a href="#021414" label="[02:14:14]">&lt;deesix&gt;</a></span><span class="message">Oh, what was that?</span></div><div class="line" id="021554"><span class="nick" style="color:#80b1d3"><a href="#021554" label="[02:15:54]">&lt;OriansJ&gt;</a></span><span class="message">.NOTPARALLEL: and +make -f tests</span></div><div class="line" id="021622"><span class="nick" style="color:#80b1d3"><a href="#021622" label="[02:16:22]">&lt;OriansJ&gt;</a></span><span class="message">with all of the tests copied to a seperate file named tests</span></div><div class="line" id="021801"><span class="nick" style="color:#80b1d3"><a href="#021801" label="[02:18:01]">&lt;OriansJ&gt;</a></span><span class="message">I'll do it in the merge and push. Not ideal of a solution but it works and still enables parallel builds</span></div><div class="line" id="021801"><span class="nick" style="color:#6d2462"><a href="#021801" label="[02:18:01]">&lt;deesix&gt;</a></span><span class="message">Is your mail to the list waiting moderation, maybe? I don't see it in the web archives (that seems stuck at Dec)</span></div><div class="line" id="021828"><span class="nick" style="color:#80b1d3"><a href="#021828" label="[02:18:28]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I am guessing</span></div><div class="line" id="021852"><span class="nick" style="color:#6d2462"><a href="#021852" label="[02:18:52]">&lt;deesix&gt;</a></span><span class="message">Maybe it's better to wait for a reply that introducing that thing</span></div><div class="line" id="021908"><span class="nick" style="color:#6d2462"><a href="#021908" label="[02:19:08]">&lt;deesix&gt;</a></span><span class="message">*than</span></div><div class="line" id="022006"><span class="nick" style="color:#6d2462"><a href="#022006" label="[02:20:06]">&lt;deesix&gt;</a></span><span class="message">I'm wondering if the workaround noise complicates further unification and so...</span></div><div class="line" id="022012"><span class="nick" style="color:#80b1d3"><a href="#022012" label="[02:20:12]">&lt;OriansJ&gt;</a></span><span class="message">well all it does is breakup the makefile into 2 files and serializes the first where M2-Planet is built</span></div><div class="line" id="022141"><span class="nick" style="color:#6d2462"><a href="#022141" label="[02:21:41]">&lt;deesix&gt;</a></span><span class="message">Oh, you mean &quot;test copied&quot; as in the rules, got it (for a moment I read it as copies of the scripts).</span></div><div class="line" id="022202"><span class="nick" style="color:#234e69"><a href="#022202" label="[02:22:02]">&lt;pder&gt;</a></span><span class="message">Tried live-bootstrap and got a segfault very early on with &quot;cc_x86 hold M2.M1&quot;  Any ideas?</span></div><div class="line" id="022205"><span class="nick" style="color:#234e69"><a href="#022205" label="[02:22:05]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1180742/">https://paste.debian.net/1180742/</a> </span></div><div class="line" id="022323"><span class="nick" style="color:#80b1d3"><a href="#022323" label="[02:23:23]">&lt;OriansJ&gt;</a></span><span class="message">pder: ok let us check the knowns</span></div><div class="line" id="022352"><span class="nick" style="color:#80b1d3"><a href="#022352" label="[02:23:52]">&lt;OriansJ&gt;</a></span><span class="message">mescc-tools-seed is on what commit?</span></div><div class="line" id="022424"><span class="nick" style="color:#6d2462"><a href="#022424" label="[02:24:24]">&lt;deesix&gt;</a></span><span class="message">pder, dis you fix the submodule thing of earlier?</span></div><div class="line" id="022426"><span class="nick" style="color:#234e69"><a href="#022426" label="[02:24:26]">&lt;pder&gt;</a></span><span class="message">0e6d8d6d3f261b550a</span></div><div class="line" id="022429"><span class="nick" style="color:#6d2462"><a href="#022429" label="[02:24:29]">&lt;deesix&gt;</a></span><span class="message">*did</span></div><div class="line" id="022432"><span class="nick" style="color:#234e69"><a href="#022432" label="[02:24:32]">&lt;pder&gt;</a></span><span class="message">I did fix that</span></div><div class="line" id="022454"><span class="nick" style="color:#6d2462"><a href="#022454" label="[02:24:54]">&lt;deesix&gt;</a></span><span class="message">thanks</span></div><div class="line" id="022613"><span class="nick" style="color:#234e69"><a href="#022613" label="[02:26:13]">&lt;pder&gt;</a></span><span class="message">I can post the output of git submodule status --recursive if that helps</span></div><div class="line" id="022614"><span class="nick" style="color:#80b1d3"><a href="#022614" label="[02:26:14]">&lt;OriansJ&gt;</a></span><span class="message">pder: ok and all of the submodules are on the expected commits (git submodule update --checkout will force that)</span></div><div class="line" id="022733"><span class="nick" style="color:#234e69"><a href="#022733" label="[02:27:33]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1180743/">https://paste.debian.net/1180743/</a> </span></div><div class="line" id="023030"><span class="nick" style="color:#80b1d3"><a href="#023030" label="[02:30:30]">&lt;OriansJ&gt;</a></span><span class="message">pder: could you please update to commit: 0f549aee03a6d97dd441ec17ea832aa5229f3e77</span></div><div class="line" id="023251"><span class="nick" style="color:#6d2462"><a href="#023251" label="[02:32:51]">&lt;deesix&gt;</a></span><span class="message">OriansJ, --checkout is the default. We may want --force instead, for safity.</span></div><div class="line" id="023302"><span class="nick" style="color:#6d2462"><a href="#023302" label="[02:33:02]">&lt;deesix&gt;</a></span><span class="message">*safety</span></div><div class="line" id="023506"><span class="nick" style="color:#234e69"><a href="#023506" label="[02:35:06]">&lt;pder&gt;</a></span><span class="message">Weird, I am back to the behavior where it looks like M2-Planet is no longer a submodule</span></div><div class="line" id="023528"><span class="nick" style="color:#389600"><a href="#023528" label="[02:35:28]">&lt;fossy&gt;</a></span><span class="message">:D</span></div><div class="line" id="023538"><span class="nick" style="color:#234e69"><a href="#023538" label="[02:35:38]">&lt;pder&gt;</a></span><span class="message">I tried checking out the commit you mentioned in mescc-tools-seed then running git submodule update</span></div><div class="line" id="023554"><span class="nick" style="color:#234e69"><a href="#023554" label="[02:35:54]">&lt;pder&gt;</a></span><span class="message">Now M2-Planet appears to no longer have an independant git history</span></div><div class="line" id="023601"><span class="nick" style="color:#389600"><a href="#023601" label="[02:36:01]">&lt;fossy&gt;</a></span><span class="message">pder: git submodule update --recursive --init?</span></div><div class="line" id="023609"><span class="nick" style="color:#389600"><a href="#023609" label="[02:36:09]">&lt;fossy&gt;</a></span><span class="message">you need to do recursive</span></div><div class="line" id="023617"><span class="nick" style="color:#389600"><a href="#023617" label="[02:36:17]">&lt;fossy&gt;</a></span><span class="message">because there are submodules inside submodules</span></div><div class="line" id="023625"><span class="nick" style="color:#80b1d3"><a href="#023625" label="[02:36:25]">&lt;OriansJ&gt;</a></span><span class="message">pder: cd into the mescc-tools-seed folder then try the checkout</span></div><div class="line" id="023727"><span class="nick" style="color:#234e69"><a href="#023727" label="[02:37:27]">&lt;pder&gt;</a></span><span class="message">fossy, that did the trick.  I guess I havent used nested submodules like this too often</span></div><div class="line" id="023734"><span class="nick" style="color:#389600"><a href="#023734" label="[02:37:34]">&lt;fossy&gt;</a></span><span class="message">pder: :D</span></div><div class="line" id="023746"><span class="nick" style="color:#389600"><a href="#023746" label="[02:37:46]">&lt;fossy&gt;</a></span><span class="message">need to finish that README .../</span></div><div class="line" id="023824"><span class="nick" style="color:#80b1d3"><a href="#023824" label="[02:38:24]">&lt;OriansJ&gt;</a></span><span class="message">well cc_* doesn't like to complain just bail hard</span></div><div class="line" id="023927"><span class="nick" style="color:#80b1d3"><a href="#023927" label="[02:39:27]">&lt;OriansJ&gt;</a></span><span class="message">so generally looking at what it was given and doing M2-Planet --architecture $arch -f $file will provide the answer to that question.</span></div><div class="line" id="024011"><span class="nick" style="color:#80b1d3"><a href="#024011" label="[02:40:11]">&lt;OriansJ&gt;</a></span><span class="message">but based on the fix fossy did, the submodules didn't show up and cc_* choked on an empty input file</span></div><div class="line" id="024036"><span class="nick" style="color:#80b1d3"><a href="#024036" label="[02:40:36]">&lt;OriansJ&gt;</a></span><span class="message">as reversing a NULL list is going to generate a segfault</span></div><div class="line" id="024858"><span class="nick" style="color:#234e69"><a href="#024858" label="[02:48:58]">&lt;pder&gt;</a></span><span class="message">Things are running well with the original mescc-tools-seed commit.  When I tried 0f549, there was a failure in M2-Planet with missing FILE.  That must be related to the --bootstrap-mode flag</span></div><div class="line" id="025305"><span class="nick" style="color:#80b1d3"><a href="#025305" label="[02:53:05]">&lt;OriansJ&gt;</a></span><span class="message">pder: as the kaem files include that change; how could that even be possible?</span></div><div class="line" id="025336"><span class="nick" style="color:#80b1d3"><a href="#025336" label="[02:53:36]">&lt;OriansJ&gt;</a></span><span class="message">you can even see it in the commits</span></div><div class="line" id="025500"><span class="nick" style="color:#234e69"><a href="#025500" label="[02:55:00]">&lt;pder&gt;</a></span><span class="message">im not sure, but possibly the kaem files in question are not in mescc-tools-seed in its submodules</span></div><div class="line" id="025537"><span class="nick" style="color:#80b1d3"><a href="#025537" label="[02:55:37]">&lt;OriansJ&gt;</a></span><span class="message">pder: oh hell no</span></div><div class="line" id="025603"><span class="nick" style="color:#80b1d3"><a href="#025603" label="[02:56:03]">&lt;OriansJ&gt;</a></span><span class="message">every kaen file run in mescc-tools-seed is checked into the main repo to prevent such issues</span></div><div class="line" id="025628"><span class="nick" style="color:#234e69"><a href="#025628" label="[02:56:28]">&lt;pder&gt;</a></span><span class="message">im talking about kaem files in live-bootstrap</span></div><div class="line" id="025657"><span class="nick" style="color:#80b1d3"><a href="#025657" label="[02:56:57]">&lt;OriansJ&gt;</a></span><span class="message">pder: those are on fossy</span></div><div class="line" id="025717"><span class="nick" style="color:#6c3d55"><a href="#025717" label="[02:57:17]">&lt;siraben&gt;</a></span><span class="message">OriansJ: is blynn-compiler fixed with the latest commit of mescc-tools-seed?</span></div><div class="line" id="025804"><span class="nick" style="color:#389600"><a href="#025804" label="[02:58:04]">&lt;fossy&gt;</a></span><span class="message">pder: i have not updated live-botostrap to a version of mescc-tools-seed with bootstrap-mode yet......</span></div><div class="line" id="025853"><span class="nick" style="color:#234e69"><a href="#025853" label="[02:58:53]">&lt;pder&gt;</a></span><span class="message">ok, that makes sense then why I got that error trying a newer version of mescc-tools-seed</span></div><div class="line" id="025858"><span class="nick" style="color:#80b1d3"><a href="#025858" label="[02:58:58]">&lt;OriansJ&gt;</a></span><span class="message">siraben: I haven't had a chance to check as I was buried with the M2libc work</span></div><div class="line" id="025906"><span class="nick" style="color:#389600"><a href="#025906" label="[02:59:06]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="025913"><span class="nick" style="color:#234e69"><a href="#025913" label="[02:59:13]">&lt;pder&gt;</a></span><span class="message">siraben: what is the issue?</span></div><div class="line" id="025919"><span class="nick" style="color:#389600"><a href="#025919" label="[02:59:19]">&lt;fossy&gt;</a></span><span class="message">i missed &quot;Things are running well with the original mescc-tools-seed commit.&quot;</span></div><div class="line" id="025921"><span class="nick" style="color:#389600"><a href="#025921" label="[02:59:21]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="025954"><span class="nick" style="color:#389600"><a href="#025954" label="[02:59:54]">&lt;fossy&gt;</a></span><span class="message">pder: i need to update mescc-tools-extra and wip-m2 eneds to be updated for bootstrap-mode before i can use that, which probably means waiting for a release so janneke will include it</span></div><div class="line" id="030143"><span class="nick" style="color:#80b1d3"><a href="#030143" label="[03:01:43]">&lt;OriansJ&gt;</a></span><span class="message">pder: mescc-tools-seed commit 05d8bced32f7ba16597ba46d9cd98a83eaf9e336 broke blynn-compiler's bootstrap build but I haven't had a chance to look too deeply into it</span></div><div class="line" id="030221"><span class="nick" style="color:#80b1d3"><a href="#030221" label="[03:02:21]">&lt;OriansJ&gt;</a></span><span class="message">I amhoping the latest mescc-tools-seed commit fixes the issue but I haven't had a chance to do the testing and find the proper fix</span></div><div class="line" id="030234"><span class="nick" style="color:#234e69"><a href="#030234" label="[03:02:34]">&lt;pder&gt;</a></span><span class="message">does it hang somewhere?  I remember siraben mentioned increasing the timeout</span></div><div class="line" id="030309"><span class="nick" style="color:#234e69"><a href="#030309" label="[03:03:09]">&lt;pder&gt;</a></span><span class="message">I will take a look</span></div><div class="line" id="030505"><span class="nick" style="color:#234e69"><a href="#030505" label="[03:05:05]">&lt;pder&gt;</a></span><span class="message">this live-bootstrap project is very cool, seeing all the pieces come together</span></div><div class="line" id="030619"><span class="nick" style="color:#80b1d3"><a href="#030619" label="[03:06:19]">&lt;OriansJ&gt;</a></span><span class="message">and thanks to deesix's hard work and brilliant engineering M2-Planet now supports massively parallel builds</span></div><div class="line" id="030635"><span class="nick" style="color:#80b1d3"><a href="#030635" label="[03:06:35]">&lt;OriansJ&gt;</a></span><span class="message">and I do mean massively parallel</span></div><div class="line" id="030653"><span class="nick" style="color:#80b1d3"><a href="#030653" label="[03:06:53]">&lt;OriansJ&gt;</a></span><span class="message">-j256 parallel</span></div><div class="line" id="030851"><span class="nick" style="color:#80b1d3"><a href="#030851" label="[03:08:51]">&lt;OriansJ&gt;</a></span><span class="message">(just don't try to mix architecture virtualization with it eg x86/armv7l at the same time)</span></div><div class="line" id="031004"><span class="nick" style="color:#6d2462"><a href="#031004" label="[03:10:04]">&lt;deesix&gt;</a></span><span class="message">Thank you for your support, testing the testing :D and finding a workaround for that make thing you saw, OriansJ!</span></div><div class="line" id="031042"><span class="nick" style="color:#6d2462"><a href="#031042" label="[03:10:42]">&lt;deesix&gt;</a></span><span class="message">My part was just a bit of scripting and some love :)</span></div><div class="line" id="031225"><span class="nick" style="color:#80b1d3"><a href="#031225" label="[03:12:25]">&lt;OriansJ&gt;</a></span><span class="message">and we do love your work deesix ^_^</span></div><div class="line" id="032555"><span class="nick" style="color:#80b1d3"><a href="#032555" label="[03:25:55]">&lt;OriansJ&gt;</a></span><span class="message">pder: well janneke finally made it possible for our rope bridge to GCC to finally jump from M2-Planet to Mescc (Which was surprisingly hard)</span></div><div class="line" id="032659"><span class="nick" style="color:#80b1d3"><a href="#032659" label="[03:26:59]">&lt;OriansJ&gt;</a></span><span class="message">soon we will have a path that universally works for all distros to reproduce the work.</span></div><div class="line" id="032806"><span class="nick" style="color:#80b1d3"><a href="#032806" label="[03:28:06]">&lt;OriansJ&gt;</a></span><span class="message">then we go after harder and harder bootstrap problems like guile and ghc</span></div><div class="line" id="032917"><span class="nick" style="color:#80b1d3"><a href="#032917" label="[03:29:17]">&lt;OriansJ&gt;</a></span><span class="message">with some fun enhancements if you are still up for the work (use blynn-compiler to get Gnu Mes a proper scheme interpreter written in Haskell)</span></div><div class="line" id="033018"><span class="nick" style="color:#80b1d3"><a href="#033018" label="[03:30:18]">&lt;OriansJ&gt;</a></span><span class="message">Then we get to hit the bare metal hard and drive out all trust attacks there too.</span></div><div class="line" id="033107"><span class="nick" style="color:#80b1d3"><a href="#033107" label="[03:31:07]">&lt;OriansJ&gt;</a></span><span class="message">Now no one will be able to claim bootstrapping the world is an impossible problem.</span></div><div class="line" id="033204"><span class="nick" style="color:#80b1d3"><a href="#033204" label="[03:32:04]">&lt;OriansJ&gt;</a></span><span class="message">It'll be a *SOLVED* problem laying bloody on the floor begging for mercy.</span></div><div class="line" id="033831"><span class="nick" style="color:#80b1d3"><a href="#033831" label="[03:38:31]">&lt;OriansJ&gt;</a></span><span class="message">now for a stupid question not related to bootstrapping. does there exist a number n such that doesn't become prime prefixed by $a digits of pi and postfixed by $b digits of pi (for values of $a and $b &gt;= 0)</span></div><div class="line" id="034239"><span class="nick" style="color:#80b1d3"><a href="#034239" label="[03:42:39]">&lt;OriansJ&gt;</a></span><span class="message">if so does it hold that properly against digits of e</span></div><div class="line" id="041134"><span class="nick" style="color:#80b1d3"><a href="#041134" label="[04:11:34]">&lt;OriansJ&gt;</a></span><span class="message">such that if one wrote p123e44 =&gt; prefix a file with 123 digits of pi and postfix 44 digits of e and the file becomes a prime number.</span></div><div class="line" id="042138"><span class="nick" style="color:#6d2462"><a href="#042138" label="[04:21:38]">&lt;deesix&gt;</a></span><span class="message">I'll pass that to someone I guess would find it interesting.</span></div><div class="line" id="043034"><span class="nick" style="color:#d9d9d9"><a href="#043034" label="[04:30:34]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: it seems unlikely but I don't think enough is known about the digits of pi to answer that</span></div><div class="line" id="062114"><span class="nick" style="color:#6c3d55"><a href="#062114" label="[06:21:14]">&lt;siraben&gt;</a></span><span class="message">pder: here it is going on for 30 mins <a rel="nofollow" href="https://github.com/oriansj/blynn-compiler/actions/runs/475465601">https://github.com/oriansj/blynn-compiler/actions/runs/475465601</a> </span></div><div class="line" id="065003"><span class="nick" style="color:#389600"><a href="#065003" label="[06:50:03]">&lt;fossy&gt;</a></span><span class="message">pder: thanks!!</span></div><div class="line" id="070506"><span class="nick">***</span><span class="message notice">xentrac is now known as xentrac_</span></div><div class="line" id="072741"><span class="nick">***</span><span class="message notice">xentrac_ is now known as xentrac</span></div><div class="line" id="102225"><span class="nick" style="color:#bc80bd"><a href="#102225" label="[10:22:25]">&lt;bauen1&gt;</a></span><span class="message">OriansJ: true, a formal verification of the bootstrap kernel (and perhaps the editor used to review things) would be very good to have, essentially because when you apply formal verification to later stages you can then be sure that what you've verified will actually get executed correctly (unless there's some loophole you can use to ensure that without proofing that the kernel does what it's</span></div><div class="line" id="102231"><span class="nick" style="color:#bc80bd"><a href="#102231" label="[10:22:31]">&lt;bauen1&gt;</a></span><span class="message">supposed to do)</span></div><div class="line" id="102809"><span class="nick" style="color:#3c5b35"><a href="#102809" label="[10:28:09]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/7">https://github.com/fosslinux/live-bootstrap/pull/7</a> </span></div><div class="line" id="103000"><span class="nick" style="color:#bc80bd"><a href="#103000" label="[10:30:00]">&lt;bauen1&gt;</a></span><span class="message">C also doesn't really work too well with formal verification :/ (there is frama-c i suppose)</span></div><div class="line" id="103011"><span class="nick" style="color:#bc80bd"><a href="#103011" label="[10:30:11]">&lt;bauen1&gt;</a></span><span class="message">i should give the work on seL4 a closer look too</span></div><div class="line" id="103219"><span class="nick" style="color:#2e2a4a"><a href="#103219" label="[10:32:19]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: maybe swap sudo and PATH</span></div><div class="line" id="103246"><span class="nick" style="color:#2e2a4a"><a href="#103246" label="[10:32:46]">&lt;stikonas&gt;</a></span><span class="message">sudo shouldn't really eat PATH but I guess that's still configurable</span></div><div class="line" id="104636"><span class="nick" style="color:#3c5b35"><a href="#104636" label="[10:46:36]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: ok, will check and testrun</span></div><div class="line" id="104918"><span class="nick" style="color:#2e2a4a"><a href="#104918" label="[10:49:18]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: I think fossy broke run with last commit</span></div><div class="line" id="104921"><span class="nick" style="color:#2e2a4a"><a href="#104921" label="[10:49:21]">&lt;stikonas&gt;</a></span><span class="message">so testrun won't work</span></div><div class="line" id="105250"><span class="nick" style="color:#2e2a4a"><a href="#105250" label="[10:52:50]">&lt;stikonas&gt;</a></span><span class="message">fossy: prefix=${prefix} fails</span></div><div class="line" id="105313"><span class="nick" style="color:#2e2a4a"><a href="#105313" label="[10:53:13]">&lt;stikonas&gt;</a></span><span class="message">in mes.kaem</span></div><div class="line" id="105528"><span class="nick" style="color:#2e2a4a"><a href="#105528" label="[10:55:28]">&lt;stikonas&gt;</a></span><span class="message">need to set prefix in after.kaem.run too</span></div><div class="line" id="105910"><span class="nick" style="color:#2e2a4a"><a href="#105910" label="[10:59:10]">&lt;stikonas&gt;</a></span><span class="message">creating a docker container might also be interesting, something between qemu and chroot...</span></div><div class="line" id="110631"><span class="nick" style="color:#389600"><a href="#110631" label="[11:06:31]">&lt;fossy&gt;</a></span><span class="message">stikonas: ugh how did i do that?</span></div><div class="line" id="110635"><span class="nick" style="color:#389600"><a href="#110635" label="[11:06:35]">&lt;fossy&gt;</a></span><span class="message">i testran it...</span></div><div class="line" id="110704"><span class="nick" style="color:#389600"><a href="#110704" label="[11:07:04]">&lt;fossy&gt;</a></span><span class="message">maybe i didn't apply the change when i testran it LOL</span></div><div class="line" id="110717"><span class="nick" style="color:#389600"><a href="#110717" label="[11:07:17]">&lt;fossy&gt;</a></span><span class="message">anyway, working on make and bash now</span></div><div class="line" id="110732"><span class="nick" style="color:#389600"><a href="#110732" label="[11:07:32]">&lt;fossy&gt;</a></span><span class="message">i was wondering why my builds were failing</span></div><div class="line" id="111647"><span class="nick" style="color:#2e2a4a"><a href="#111647" label="[11:16:47]">&lt;stikonas&gt;</a></span><span class="message">how is make coming?</span></div><div class="line" id="111656"><span class="nick" style="color:#2e2a4a"><a href="#111656" label="[11:16:56]">&lt;stikonas&gt;</a></span><span class="message">anything working?</span></div><div class="line" id="111800"><span class="nick" style="color:#2e2a4a"><a href="#111800" label="[11:18:00]">&lt;stikonas&gt;</a></span><span class="message">oh, my get_file function in rootfs will have to be fixed for different extentions (now it only looks for file.kaem)</span></div><div class="line" id="111820"><span class="nick" style="color:#2e2a4a"><a href="#111820" label="[11:18:20]">&lt;stikonas&gt;</a></span><span class="message">probably need to check for file.mk and file.sh too</span></div><div class="line" id="112727"><span class="nick" style="color:#389600"><a href="#112727" label="[11:27:27]">&lt;fossy&gt;</a></span><span class="message">stikonas: well i was missing a few defines but acidentally unmounted the chroot so rebuilding now lol</span></div><div class="line" id="113104"><span class="nick" style="color:#2e2a4a"><a href="#113104" label="[11:31:04]">&lt;stikonas&gt;</a></span><span class="message">fossy: it might be easier to set prefix in after.kaem.run...</span></div><div class="line" id="113110"><span class="nick" style="color:#2e2a4a"><a href="#113110" label="[11:31:10]">&lt;stikonas&gt;</a></span><span class="message">instead of each individual file</span></div><div class="line" id="113123"><span class="nick" style="color:#2e2a4a"><a href="#113123" label="[11:31:23]">&lt;stikonas&gt;</a></span><span class="message">and maybe bindir, libdir, includedir too</span></div><div class="line" id="113147"><span class="nick" style="color:#389600"><a href="#113147" label="[11:31:47]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, i think you're probably right, i was thinking the same thing, i'll include that with the make and bash commits</span></div><div class="line" id="113149"><span class="nick" style="color:#2e2a4a"><a href="#113149" label="[11:31:49]">&lt;stikonas&gt;</a></span><span class="message">those are use over and over again</span></div><div class="line" id="113207"><span class="nick" style="color:#2e2a4a"><a href="#113207" label="[11:32:07]">&lt;stikonas&gt;</a></span><span class="message">s/use/used/</span></div><div class="line" id="123245"><span class="nick" style="color:#3c5b35"><a href="#123245" label="[12:32:45]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: fossy: commited your proposal (sudo/path), but build to *the end* still does not work...</span></div><div class="line" id="123313"><span class="nick" style="color:#2e2a4a"><a href="#123313" label="[12:33:13]">&lt;stikonas&gt;</a></span><span class="message">what failed?</span></div><div class="line" id="123328"><span class="nick" style="color:#2e2a4a"><a href="#123328" label="[12:33:28]">&lt;stikonas&gt;</a></span><span class="message">have you rebased on top of latest master?</span></div><div class="line" id="124020"><span class="nick" style="color:#389600"><a href="#124020" label="[12:40:20]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: yeah i know, tcc broke</span></div><div class="line" id="124045"><span class="nick" style="color:#389600"><a href="#124045" label="[12:40:45]">&lt;fossy&gt;</a></span><span class="message">i pushed fix for that too</span></div><div class="line" id="124107"><span class="nick" style="color:#389600"><a href="#124107" label="[12:41:07]">&lt;fossy&gt;</a></span><span class="message">stikonas: up to bash now, but i'll do that tomrrow morning</span></div><div class="line" id="124116"><span class="nick" style="color:#2e2a4a"><a href="#124116" label="[12:41:16]">&lt;stikonas&gt;</a></span><span class="message">ok :)</span></div><div class="line" id="124119"><span class="nick" style="color:#2e2a4a"><a href="#124119" label="[12:41:19]">&lt;stikonas&gt;</a></span><span class="message">are you pushing make?</span></div><div class="line" id="124129"><span class="nick" style="color:#2e2a4a"><a href="#124129" label="[12:41:29]">&lt;stikonas&gt;</a></span><span class="message">or tomorrow?</span></div><div class="line" id="124148"><span class="nick" style="color:#389600"><a href="#124148" label="[12:41:48]">&lt;fossy&gt;</a></span><span class="message">tomorrow, i am uncertain it works and there's a linker warning that has me confused</span></div><div class="line" id="124204"><span class="nick" style="color:#2e2a4a"><a href="#124204" label="[12:42:04]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="125058"><span class="nick" style="color:#389600"><a href="#125058" label="[12:50:58]">&lt;fossy&gt;</a></span><span class="message">stikonas: also, fwiw, i was trying to make tcc patched and sed -i 's/blah/asdf/' was not working...</span></div><div class="line" id="125220"><span class="nick" style="color:#2e2a4a"><a href="#125220" label="[12:52:20]">&lt;stikonas&gt;</a></span><span class="message">well, we can wait till patch then...</span></div><div class="line" id="125225"><span class="nick" style="color:#2e2a4a"><a href="#125225" label="[12:52:25]">&lt;stikonas&gt;</a></span><span class="message">patch should be easy to build...</span></div><div class="line" id="125228"><span class="nick" style="color:#2e2a4a"><a href="#125228" label="[12:52:28]">&lt;stikonas&gt;</a></span><span class="message">especially with make</span></div><div class="line" id="130956"><span class="nick" style="color:#3c5b35"><a href="#130956" label="[13:09:56]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: stikonas: yes, latest master now 04ce8ebaefb561096ffe4d4dce5cc30610cb2aa9 including your suggestions: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/8">https://github.com/fosslinux/live-bootstrap/pull/8</a> </span></div><div class="line" id="131246"><span class="nick" style="color:#2e2a4a"><a href="#131246" label="[13:12:46]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: for future, don't open new PR when rebasing</span></div><div class="line" id="131250"><span class="nick" style="color:#2e2a4a"><a href="#131250" label="[13:12:50]">&lt;stikonas&gt;</a></span><span class="message">do it in the old PR...</span></div><div class="line" id="131300"><span class="nick" style="color:#2e2a4a"><a href="#131300" label="[13:13:00]">&lt;stikonas&gt;</a></span><span class="message">you lose all review history...</span></div><div class="line" id="131337"><span class="nick" style="color:#2e2a4a"><a href="#131337" label="[13:13:37]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: maybe even now, reopen #7 and force push into that branch</span></div><div class="line" id="132332"><span class="nick" style="color:#3c5b35"><a href="#132332" label="[13:23:32]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: sorry about that, will do so in the future - you are right</span></div><div class="line" id="134017"><span class="nick" style="color:#6c3d55"><a href="#134017" label="[13:40:17]">&lt;siraben&gt;</a></span><span class="message">OriansJ: Oh I didn't tell you that the PR wasn't ready for merge &gt;.&lt;</span></div><div class="line" id="134025"><span class="nick" style="color:#6c3d55"><a href="#134025" label="[13:40:25]">&lt;siraben&gt;</a></span><span class="message">I can make another one fixing it anyhow</span></div><div class="line" id="134123"><span class="nick" style="color:#6c3d55"><a href="#134123" label="[13:41:23]">&lt;siraben&gt;</a></span><span class="message">provided mescc-tools-seed's HEAD can bootstrap blynn-compiler now</span></div><div class="line" id="134623"><span class="nick" style="color:#2e2a4a"><a href="#134623" label="[13:46:23]">&lt;stikonas&gt;</a></span><span class="message">siraben: you can also mark PRs as draft</span></div><div class="line" id="134647"><span class="nick" style="color:#6c3d55"><a href="#134647" label="[13:46:47]">&lt;siraben&gt;</a></span><span class="message">yeah I know that, I forgot to for this one</span></div><div class="line" id="135850"><span class="nick" style="color:#80b1d3"><a href="#135850" label="[13:58:50]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: the problem with proofs of correctness for a bootstrap kernel is we only have one compiler with a language usuable to have proofs (blynn-compiler) but it is still a bit of work away from being bare metal bootstrap ready.</span></div><div class="line" id="135951"><span class="nick" style="color:#80b1d3"><a href="#135951" label="[13:59:51]">&lt;OriansJ&gt;</a></span><span class="message">my bad siraben</span></div><div class="line" id="140103"><span class="nick" style="color:#6c3d55"><a href="#140103" label="[14:01:03]">&lt;siraben&gt;</a></span><span class="message">I've been somewhat busy so haven't been able to follow everything here, but OriansJ, what's the current status of blynn-compiler from mescc-tools-seed?</span></div><div class="line" id="140108"><span class="nick" style="color:#6c3d55"><a href="#140108" label="[14:01:08]">&lt;siraben&gt;</a></span><span class="message">It's something in m2-planet, right?</span></div><div class="line" id="140120"><span class="nick" style="color:#6c3d55"><a href="#140120" label="[14:01:20]">&lt;siraben&gt;</a></span><span class="message">that's causing the build to fail*</span></div><div class="line" id="141357"><span class="nick" style="color:#80b1d3"><a href="#141357" label="[14:13:57]">&lt;OriansJ&gt;</a></span><span class="message">siraben: probably but I need to figure out what is causing it. Probably a regression that slipped in</span></div><div class="line" id="152104"><span class="nick" style="color:#234e69"><a href="#152104" label="[15:21:04]">&lt;pder&gt;</a></span><span class="message">siraben: it appears the hang you encountered was with mescc-tools-seed commit 05d8bced32f7ba1659.  Try updating to 0f549aee03a6d97dd, and it shouldnt hang.  Also you should be building commit a918fb34777662ee35c of blynn-compiler.</span></div><div class="line" id="152614"><span class="nick" style="color:#234e69"><a href="#152614" label="[15:26:14]">&lt;pder&gt;</a></span><span class="message">OriansJ: it appears to force pushed your master branch in blynn-compiler and we lost commit a918fb34777662ee35c.  Is that intentional?</span></div><div class="line" id="152640"><span class="nick" style="color:#234e69"><a href="#152640" label="[15:26:40]">&lt;pder&gt;</a></span><span class="message">&quot;Changing the mescc-tools-seed commit to hopefully fix the build&quot;</span></div><div class="line" id="153615"><span class="nick" style="color:#6c3d55"><a href="#153615" label="[15:36:15]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/siraben/compiler/runs/1688694245?check_suite_focus=true">https://github.com/siraben/compiler/runs/1688694245?check_suite_focus=true</a>  hopefully this run succeeds</span></div><div class="line" id="154153"><span class="nick" style="color:#3c5b35"><a href="#154153" label="[15:41:53]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: i included a small readme now 8-) <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/3">https://github.com/fosslinux/live-bootstrap/pull/3</a> </span></div><div class="line" id="154217"><span class="nick" style="color:#3c5b35"><a href="#154217" label="[15:42:17]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: sorry, here: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/8">https://github.com/fosslinux/live-bootstrap/pull/8</a> </span></div><div class="line" id="155105"><span class="nick" style="color:#234e69"><a href="#155105" label="[15:51:05]">&lt;pder&gt;</a></span><span class="message">siraben: I dont think it will work.  You need commit a918fb34777662ee35 of blynn-compiler</span></div><div class="line" id="155746"><span class="nick" style="color:#6c3d55"><a href="#155746" label="[15:57:46]">&lt;siraben&gt;</a></span><span class="message">pder: it succeeded <a rel="nofollow" href="https://github.com/siraben/compiler/runs/1688694245?check_suite_focus=true">https://github.com/siraben/compiler/runs/1688694245?check_suite_focus=true</a> </span></div><div class="line" id="160856"><span class="nick" style="color:#234e69"><a href="#160856" label="[16:08:56]">&lt;pder&gt;</a></span><span class="message">oh ok, interesting.  So i guess the changes to marginally.hs on dont need the change to reorder the #define and // CONSTANT?</span></div><div class="line" id="161209"><span class="nick" style="color:#6c3d55"><a href="#161209" label="[16:12:09]">&lt;siraben&gt;</a></span><span class="message">It doesn't look like it, why was the reordering needed?</span></div><div class="line" id="161247"><span class="nick" style="color:#234e69"><a href="#161247" label="[16:12:47]">&lt;pder&gt;</a></span><span class="message">Not sure, probably a question for OriansJ- something related to the preprocessor changes</span></div><div class="line" id="163031"><span class="nick" style="color:#3c5b35"><a href="#163031" label="[16:30:31]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: fossy: including my latest fix 'live-bootstrap' has successfully built tcc + sed,tar,gzip,gunzip,zcat,cmp,diff - wow!</span></div><div class="line" id="164150"><span class="nick" style="color:#af8d2f"><a href="#164150" label="[16:41:50]">&lt;stikonas_&gt;</a></span><span class="message">gforce_d11977:  inside chroot?</span></div><div class="line" id="164152"><span class="nick" style="color:#af8d2f"><a href="#164152" label="[16:41:52]">&lt;stikonas_&gt;</a></span><span class="message">or qemu</span></div><div class="line" id="164534"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="164555"><span class="nick" style="color:#2e2a4a"><a href="#164555" label="[16:45:55]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: well, gunzip and zcat is the same binary as gzip</span></div><div class="line" id="164652"><span class="nick" style="color:#2e2a4a"><a href="#164652" label="[16:46:52]">&lt;stikonas&gt;</a></span><span class="message">usually it's all links... but I jused made a copy for now</span></div><div class="line" id="164704"><span class="nick" style="color:#2e2a4a"><a href="#164704" label="[16:47:04]">&lt;stikonas&gt;</a></span><span class="message">although, gunzip is probably all that we need in the bootstrap</span></div><div class="line" id="165140"><span class="nick" style="color:#3c5b35"><a href="#165140" label="[16:51:40]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas_: inside chroot</span></div><div class="line" id="165301"><span class="nick" style="color:#3c5b35"><a href="#165301" label="[16:53:01]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: is there a special reason why the tools are built in this order? sed,tar,gzip,gunzip,zcat,cmp,diff ? why dont we just build m4+make to bootstrap e.g. busybox or toybox?</span></div><div class="line" id="165401"><span class="nick" style="color:#6c3d55"><a href="#165401" label="[16:54:01]">&lt;siraben&gt;</a></span><span class="message">I'm pretty sure people here have heard of <a rel="nofollow" href="https://www.youtube.com/watch?v=LA_DrBwkiJA">https://www.youtube.com/watch?v=LA_DrBwkiJA</a> </span></div><div class="line" id="165859"><span class="nick" style="color:#2e2a4a"><a href="#165859" label="[16:58:59]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: sed can be moved after tar</span></div><div class="line" id="165933"><span class="nick" style="color:#2e2a4a"><a href="#165933" label="[16:59:33]">&lt;stikonas&gt;</a></span><span class="message">so that we ship sed.tar instead of using git submodule of sed but we can talk to fossy about that</span></div><div class="line" id="165955"><span class="nick" style="color:#2e2a4a"><a href="#165955" label="[16:59:55]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: gzip needs a small patch (a few lines removed) which I do with sed</span></div><div class="line" id="170006"><span class="nick" style="color:#2e2a4a"><a href="#170006" label="[17:00:06]">&lt;stikonas&gt;</a></span><span class="message">gunzip and zcat are gzip, it's the same thing</span></div><div class="line" id="170022"><span class="nick" style="color:#2e2a4a"><a href="#170022" label="[17:00:22]">&lt;stikonas&gt;</a></span><span class="message">and then we do everything else...</span></div><div class="line" id="170049"><span class="nick" style="color:#2e2a4a"><a href="#170049" label="[17:00:49]">&lt;stikonas&gt;</a></span><span class="message">I did diffutils (cmp and diff) because they were easy, but it doesn't have to be  first thing after gzip...</span></div><div class="line" id="170106"><span class="nick" style="color:#2e2a4a"><a href="#170106" label="[17:01:06]">&lt;stikonas&gt;</a></span><span class="message">in fact it might have been even easier if we had make (which fossy is working on)</span></div><div class="line" id="170121"><span class="nick" style="color:#2e2a4a"><a href="#170121" label="[17:01:21]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: anyway, now we need to bootstrap autotools build system</span></div><div class="line" id="170243"><span class="nick" style="color:#2e2a4a"><a href="#170243" label="[17:02:43]">&lt;stikonas&gt;</a></span><span class="message">so need make/bash/autoconf/automake and maybe some others...</span></div><div class="line" id="170300"><span class="nick" style="color:#2e2a4a"><a href="#170300" label="[17:03:00]">&lt;stikonas&gt;</a></span><span class="message">after that it's just more or less standard build</span></div><div class="line" id="170319"><span class="nick" style="color:#3c5b35"><a href="#170319" label="[17:03:19]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: yes, but m4 + make should be first, everything after that is easy</span></div><div class="line" id="170337"><span class="nick" style="color:#3c5b35"><a href="#170337" label="[17:03:37]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: i will research it and report</span></div><div class="line" id="170349"><span class="nick" style="color:#2e2a4a"><a href="#170349" label="[17:03:49]">&lt;stikonas&gt;</a></span><span class="message">well, fossy doesn't want to rely on pregenerated configure files</span></div><div class="line" id="170355"><span class="nick" style="color:#2e2a4a"><a href="#170355" label="[17:03:55]">&lt;stikonas&gt;</a></span><span class="message">so we might need to write some makefiles</span></div><div class="line" id="170407"><span class="nick" style="color:#3c5b35"><a href="#170407" label="[17:04:07]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: understand</span></div><div class="line" id="170413"><span class="nick" style="color:#2e2a4a"><a href="#170413" label="[17:04:13]">&lt;stikonas&gt;</a></span><span class="message">but yeah, make is first</span></div><div class="line" id="170416"><span class="nick" style="color:#2e2a4a"><a href="#170416" label="[17:04:16]">&lt;stikonas&gt;</a></span><span class="message">then I think bash</span></div><div class="line" id="170422"><span class="nick" style="color:#2e2a4a"><a href="#170422" label="[17:04:22]">&lt;stikonas&gt;</a></span><span class="message">and then others...</span></div><div class="line" id="170432"><span class="nick" style="color:#2e2a4a"><a href="#170432" label="[17:04:32]">&lt;stikonas&gt;</a></span><span class="message">with make/bash we are already out of kaem land</span></div><div class="line" id="170511"><span class="nick" style="color:#3c5b35"><a href="#170511" label="[17:05:11]">&lt;gforce_d11977&gt;</a></span><span class="message">&quot;kaem land&quot; - where milk and honey floats down the river...</span></div><div class="line" id="170719"><span class="nick" style="color:#2e2a4a"><a href="#170719" label="[17:07:19]">&lt;stikonas&gt;</a></span><span class="message">well, kaem is quite simple shell...</span></div><div class="line" id="170754"><span class="nick" style="color:#2e2a4a"><a href="#170754" label="[17:07:54]">&lt;stikonas&gt;</a></span><span class="message">a lot of things could be written much simpler in POSIX sh</span></div><div class="line" id="170810"><span class="nick" style="color:#2e2a4a"><a href="#170810" label="[17:08:10]">&lt;stikonas&gt;</a></span><span class="message">but it's definitly very useful at the beginning</span></div><div class="line" id="170854"><span class="nick" style="color:#2e2a4a"><a href="#170854" label="[17:08:54]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe later I should try to create dockerfile for live-bootstrap, a bit more isolation than chroot...</span></div><div class="line" id="171541"><span class="nick" style="color:#3c5b35"><a href="#171541" label="[17:15:41]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: fossy: i did another full run in chroot-mode: took 1893 seconds here 8-) maybe a faster CPU can do it in 10 minutes...</span></div><div class="line" id="171828"><span class="nick" style="color:#2e2a4a"><a href="#171828" label="[17:18:28]">&lt;stikonas&gt;</a></span><span class="message">comment out blynn-compiler and it will be faster</span></div><div class="line" id="172653"><span class="nick" style="color:#3c5b35"><a href="#172653" label="[17:26:53]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: why is it build, when not needed? just for fun?</span></div><div class="line" id="172747"><span class="nick" style="color:#2e2a4a"><a href="#172747" label="[17:27:47]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: it was added before m2-planet-&gt;mes-m2 bridge was done</span></div><div class="line" id="172821"><span class="nick" style="color:#2e2a4a"><a href="#172821" label="[17:28:21]">&lt;stikonas&gt;</a></span><span class="message">I guess there was some expectation that haskell will be used to run mes</span></div><div class="line" id="172843"><span class="nick" style="color:#3c5b35"><a href="#172843" label="[17:28:43]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: ok, will try to comment out and test if it works without</span></div><div class="line" id="172938"><span class="nick" style="color:#2e2a4a"><a href="#172938" label="[17:29:38]">&lt;stikonas&gt;</a></span><span class="message">it does :), I often do it for debugging</span></div><div class="line" id="173004"><span class="nick" style="color:#2e2a4a"><a href="#173004" label="[17:30:04]">&lt;stikonas&gt;</a></span><span class="message">then you'll see that most of the time is spent running mescc to build mes and tcc</span></div><div class="line" id="175917"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="175920"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="181422"><span class="nick" style="color:#80b1d3"><a href="#181422" label="[18:14:22]">&lt;OriansJ&gt;</a></span><span class="message">siraben: the reason for the reordering was both #define and //CONSTANT worked and the definition that came last &quot;won&quot;; which resulted in not sizeof but 1; which caused it to hang infinitely</span></div><div class="line" id="181609"><span class="nick" style="color:#80b1d3"><a href="#181609" label="[18:16:09]">&lt;OriansJ&gt;</a></span><span class="message">fortunately yt fixed my screw up and now --bootstrap-mode disables #define entirely and removes the need for the change entirely. As my commit caused a merge conflict with your pull request and didn't actually provide anything of value; Hence my dropping of the commit</span></div><div class="line" id="181830"><span class="nick" style="color:#80b1d3"><a href="#181830" label="[18:18:30]">&lt;OriansJ&gt;</a></span><span class="message">gforce_d11977: think of kaem as the worst possible build tool, that you could shove into 737bytes</span></div><div class="line" id="181903"><span class="nick" style="color:#80b1d3"><a href="#181903" label="[18:19:03]">&lt;OriansJ&gt;</a></span><span class="message">that is designed to  error hard and fast if everything isn't perfect</span></div><div class="line" id="182011"><span class="nick" style="color:#2e2a4a"><a href="#182011" label="[18:20:11]">&lt;stikonas&gt;</a></span><span class="message">you can probably cut bit more things out :) like comments and print to screen</span></div><div class="line" id="182031"><span class="nick" style="color:#80b1d3"><a href="#182031" label="[18:20:31]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: there is still hope with blynn-compiler to write a proper scheme in its haskell subset; so that scheme and Haskell are needed to bootstrap C</span></div><div class="line" id="182139"><span class="nick" style="color:#2e2a4a"><a href="#182139" label="[18:21:39]">&lt;stikonas&gt;</a></span><span class="message">well, yeah, that's why haven't removed blynn-compiler from live-bootstrap</span></div><div class="line" id="182214"><span class="nick" style="color:#80b1d3"><a href="#182214" label="[18:22:14]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: Line comment support is always required in stage0. If something doesn't support comments it doesn't belong at all</span></div><div class="line" id="182257"><span class="nick" style="color:#80b1d3"><a href="#182257" label="[18:22:57]">&lt;OriansJ&gt;</a></span><span class="message">the print to screen could be dropped if someone wanted to show me up by making a smaller shell for bootstrap-seeds</span></div><div class="line" id="182258"><span class="nick" style="color:#6c3d55"><a href="#182258" label="[18:22:58]">&lt;siraben&gt;</a></span><span class="message">blynn-compiler has quite a bit of potential IMO, if the VM were written in assembly then we skip the C phase entirely</span></div><div class="line" id="182304"><span class="nick" style="color:#6c3d55"><a href="#182304" label="[18:23:04]">&lt;siraben&gt;</a></span><span class="message">lots of fun directions</span></div><div class="line" id="182335"><span class="nick" style="color:#2e2a4a"><a href="#182335" label="[18:23:35]">&lt;stikonas&gt;</a></span><span class="message">well, I'm not really suggesting to drop print, just saying theoretically you can probably go to something like 600 byte shell...</span></div><div class="line" id="182407"><span class="nick" style="color:#6c3d55"><a href="#182407" label="[18:24:07]">&lt;siraben&gt;</a></span><span class="message">I even had some musings about a shell written in Haskell</span></div><div class="line" id="182414"><span class="nick" style="color:#2e2a4a"><a href="#182414" label="[18:24:14]">&lt;stikonas&gt;</a></span><span class="message">but it's better to have a few more bytes  that make it significantly clearer what happens</span></div><div class="line" id="182431"><span class="nick" style="color:#80b1d3"><a href="#182431" label="[18:24:31]">&lt;OriansJ&gt;</a></span><span class="message">siraben: actually no as a C compiler is needed for the later stages.</span></div><div class="line" id="182432"><span class="nick" style="color:#2e2a4a"><a href="#182432" label="[18:24:32]">&lt;stikonas&gt;</a></span><span class="message">siraben: well, kaem is in principle good enough to go all the way to bash...</span></div><div class="line" id="182554"><span class="nick" style="color:#2e2a4a"><a href="#182554" label="[18:25:54]">&lt;stikonas&gt;</a></span><span class="message">and hex0 is definitely smaller than what VM assembly would be</span></div><div class="line" id="182601"><span class="nick" style="color:#6c3d55"><a href="#182601" label="[18:26:01]">&lt;siraben&gt;</a></span><span class="message">OriansJ: oh I see</span></div><div class="line" id="182612"><span class="nick" style="color:#6c3d55"><a href="#182612" label="[18:26:12]">&lt;siraben&gt;</a></span><span class="message">Hm, then a C compiler written in Haskell!</span></div><div class="line" id="182636"><span class="nick" style="color:#2e2a4a"><a href="#182636" label="[18:26:36]">&lt;stikonas&gt;</a></span><span class="message">siraben: if you can build tcc with a C compiler written in Haskell, then why not</span></div><div class="line" id="182657"><span class="nick" style="color:#2e2a4a"><a href="#182657" label="[18:26:57]">&lt;stikonas&gt;</a></span><span class="message">that is probably not easy though</span></div><div class="line" id="182916"><span class="nick" style="color:#80b1d3"><a href="#182916" label="[18:29:16]">&lt;OriansJ&gt;</a></span><span class="message">hence Scheme in Haskell to run MesCC ^_^</span></div><div class="line" id="183133"><span class="nick" style="color:#80b1d3"><a href="#183133" label="[18:31:33]">&lt;OriansJ&gt;</a></span><span class="message">(and ideally guix too)</span></div><div class="line" id="183136"><span class="nick" style="color:#6c3d55"><a href="#183136" label="[18:31:36]">&lt;siraben&gt;</a></span><span class="message">Heh yes</span></div><div class="line" id="183153"><span class="nick" style="color:#80b1d3"><a href="#183153" label="[18:31:53]">&lt;OriansJ&gt;</a></span><span class="message">but one small miracle at a time right</span></div><div class="line" id="183215"><span class="nick" style="color:#6c3d55"><a href="#183215" label="[18:32:15]">&lt;siraben&gt;</a></span><span class="message">I do hope with a bit of exposure this attracts some programmers from the haskell community</span></div><div class="line" id="183247"><span class="nick" style="color:#80b1d3"><a href="#183247" label="[18:32:47]">&lt;OriansJ&gt;</a></span><span class="message">or atleast shame them enough to help with the GHC bootstrap work</span></div><div class="line" id="183631"><span class="nick" style="color:#3c5b35"><a href="#183631" label="[18:36:31]">&lt;gforce_d11977&gt;</a></span><span class="message">OriansJ: i really like the kaem approach, in the future it can maybe has even less code...</span></div><div class="line" id="183729"><span class="nick" style="color:#3c5b35"><a href="#183729" label="[18:37:29]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: fossy: i did a live-build without 'blynn' and saved &gt;600 seconds... should a add an PR for that? (rip out blynn)</span></div><div class="line" id="183751"><span class="nick" style="color:#2e2a4a"><a href="#183751" label="[18:37:51]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: probably no... it might be useful later. See discussion above</span></div><div class="line" id="184000"><span class="nick" style="color:#3c5b35"><a href="#184000" label="[18:40:00]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: understand</span></div><div class="line" id="184404"><span class="nick" style="color:#80b1d3"><a href="#184404" label="[18:44:04]">&lt;OriansJ&gt;</a></span><span class="message">gforce_d11977: I always look forward to people doing a better job than me; besides we still need to shave 70bytes off the x86 bootstrap seeds to be a 1KB bootstrap</span></div><div class="line" id="184528"><span class="nick" style="color:#80b1d3"><a href="#184528" label="[18:45:28]">&lt;OriansJ&gt;</a></span><span class="message">as the bare metal bootstrap is fortunately at 512bytes (x86) and 342bytes (Knight)</span></div><div class="line" id="184609"><span class="nick" style="color:#bc80bd"><a href="#184609" label="[18:46:09]">&lt;bauen1&gt;</a></span><span class="message">OriansJ: there's already a bare-metal bootstrap for x86 ?</span></div><div class="line" id="184839"><span class="nick" style="color:#bc80bd"><a href="#184839" label="[18:48:39]">&lt;bauen1&gt;</a></span><span class="message">i thought that was still some ways off (unless you're talking about a mbr with a hex editor)</span></div><div class="line" id="185020"><span class="nick" style="color:#234e69"><a href="#185020" label="[18:50:20]">&lt;pder&gt;</a></span><span class="message">Another C compiler that can compile tcc is the one written by gio in the &quot;g&quot; language.  Maybe the g compiler could be ported to M2-Planet so the path would be M2-Planet-&gt;G compiler-&gt;tcc?</span></div><div class="line" id="185027"><span class="nick" style="color:#80b1d3"><a href="#185027" label="[18:50:27]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: I am talking a MBR hex0 for x86 and there unfortunately is a great deal of work remaining there</span></div><div class="line" id="185100"><span class="nick" style="color:#80b1d3"><a href="#185100" label="[18:51:00]">&lt;OriansJ&gt;</a></span><span class="message">pder: gio did an M2-Planet bootstrap in G</span></div><div class="line" id="185148"><span class="nick" style="color:#80b1d3"><a href="#185148" label="[18:51:48]">&lt;OriansJ&gt;</a></span><span class="message">an old version if I remember correctly but good enough to build the current M2-planet</span></div><div class="line" id="185221"><span class="nick" style="color:#bc80bd"><a href="#185221" label="[18:52:21]">&lt;bauen1&gt;</a></span><span class="message">that's interesting, isn't G this pseudo-C language bootstrapped from such an mbr ?</span></div><div class="line" id="185233"><span class="nick" style="color:#234e69"><a href="#185233" label="[18:52:33]">&lt;pder&gt;</a></span><span class="message">Are we talking about the same thing?  I mean a g compiler that can compile c_compile.g.  I dont see source for the g compiler in anything except asm</span></div><div class="line" id="185340"><span class="nick" style="color:#234e69"><a href="#185340" label="[18:53:40]">&lt;pder&gt;</a></span><span class="message">in the asmc repo, the file I am talking about is asmg/asmg.asm</span></div><div class="line" id="185440"><span class="nick" style="color:#389600"><a href="#185440" label="[18:54:40]">&lt;gio&gt;</a></span><span class="message">Yes, I never wrote a G compiler other than the one in x86 assembly.</span></div><div class="line" id="185457"><span class="nick" style="color:#6c3d55"><a href="#185457" label="[18:54:57]">&lt;siraben&gt;</a></span><span class="message">By the way, is it a strict requirement that we have C compiler, what about a C interpreter?</span></div><div class="line" id="185614"><span class="nick" style="color:#bc80bd"><a href="#185614" label="[18:56:14]">&lt;bauen1&gt;</a></span><span class="message">for bootstrapping from bare-metal you eventually want to compile a kernel, so you can have a vague concept of a VFS and processes, hopefully enough to bootstrap all the way to a functioning linux kernel</span></div><div class="line" id="185651"><span class="nick" style="color:#bc80bd"><a href="#185651" label="[18:56:51]">&lt;bauen1&gt;</a></span><span class="message">i don't think a c interpreter would work too well for that task</span></div><div class="line" id="185732"><span class="nick" style="color:#6c3d55"><a href="#185732" label="[18:57:32]">&lt;siraben&gt;</a></span><span class="message">Yeah, the overhead would be too much, even a naive C compiler would do way better</span></div><div class="line" id="185926"><span class="nick" style="color:#bc80bd"><a href="#185926" label="[18:59:26]">&lt;bauen1&gt;</a></span><span class="message">siraben: it depends, if the interpreter is fast enough and some critical functions are written in assembly, then you could get away with it until you have another c compiler bootstrapped</span></div><div class="line" id="185941"><span class="nick" style="color:#bc80bd"><a href="#185941" label="[18:59:41]">&lt;bauen1&gt;</a></span><span class="message">depends on how much time you have really</span></div><div class="line" id="190056"><span class="nick" style="color:#bc80bd"><a href="#190056" label="[19:00:56]">&lt;bauen1&gt;</a></span><span class="message">if it means that you have to review less code at a lower level (with inferior tools) and it only takes a few hours longer, then that might be a worthwile trade-off</span></div><div class="line" id="190316"><span class="nick" style="color:#bc80bd"><a href="#190316" label="[19:03:16]">&lt;bauen1&gt;</a></span><span class="message">couldn't you do some really heavy trade-offs in that direction ? the thing that will take the longest would usually be the code review by a human anyway (limited by the human and maybe the i/o bandwidth of the computer &lt;-&gt; human)</span></div><div class="line" id="190711"><span class="nick" style="color:#bc80bd"><a href="#190711" label="[19:07:11]">&lt;bauen1&gt;</a></span><span class="message">i should talk less and start working on my kernel again</span></div><div class="line" id="204724"><span class="nick" style="color:#389600"><a href="#204724" label="[20:47:24]">&lt;gio&gt;</a></span><span class="message">BTW, let me add that the G language is basically a way to write sort of understandable assembly code. It was never meant to be portable. So it makes little sense to use it other than in the context of ASMC: in a bootloader, as the very first stage to have a compiler out of assembly.</span></div><div class="line" id="204808"><span class="nick" style="color:#389600"><a href="#204808" label="[20:48:08]">&lt;gio&gt;</a></span><span class="message">It makes little sense to implement another G compiler, from my point of view. The G code is not portable, and you will probably have to modify the G code from ASMC if you want to compile it with another compiler.</span></div><div class="line" id="211559"><span class="nick" style="color:#234e69"><a href="#211559" label="[21:15:59]">&lt;pder&gt;</a></span><span class="message">gio: thanks for the info.  I was just brainstorming other paths from M2-Planet to tcc.</span></div><div class="line" id="211720"><span class="nick" style="color:#234e69"><a href="#211720" label="[21:17:20]">&lt;pder&gt;</a></span><span class="message">I am not sure what is missing in M2-Planet that your C compiler written in G has</span></div><div class="line" id="213048"><span class="nick" style="color:#3c5b35"><a href="#213048" label="[21:30:48]">&lt;gforce_d11977&gt;</a></span><span class="message">academic question: is there a measurement-method how long it takes to understand/proof lines of code in language XY? in other words, can one compare the MES and the ASMC approach in such or similar base?</span></div><div class="line" id="221154"><span class="nick" style="color:#2e2a4a"><a href="#221154" label="[22:11:54]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: well, you can set up two courses, have exam and measure performance of students... but even then it's not very precise...</span></div><div class="line" id="221222"><span class="nick" style="color:#389600"><a href="#221222" label="[22:12:22]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: I still dont like the echo statements and the verbose, it already outputs everything it foes using set -x</span></div><div class="line" id="221238"><span class="nick" style="color:#389600"><a href="#221238" label="[22:12:38]">&lt;fossy&gt;</a></span><span class="message">im still writitng a more complex readme too</span></div><div class="line" id="221242"><span class="nick" style="color:#2e2a4a"><a href="#221242" label="[22:12:42]">&lt;stikonas&gt;</a></span><span class="message">yeah, set -x is verbose enough</span></div><div class="line" id="221314"><span class="nick" style="color:#2e2a4a"><a href="#221314" label="[22:13:14]">&lt;stikonas&gt;</a></span><span class="message">for non-debugging purposes set -x is actually more than necessary...</span></div><div class="line" id="221435"><span class="nick" style="color:#2e2a4a"><a href="#221435" label="[22:14:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, should we move sed bootstrap after tar?</span></div><div class="line" id="221446"><span class="nick" style="color:#2e2a4a"><a href="#221446" label="[22:14:46]">&lt;stikonas&gt;</a></span><span class="message">or don't bother?</span></div><div class="line" id="221458"><span class="nick" style="color:#389600"><a href="#221458" label="[22:14:58]">&lt;fossy&gt;</a></span><span class="message">stikonas: well we can, I dont see any reason not to</span></div><div class="line" id="221513"><span class="nick" style="color:#2e2a4a"><a href="#221513" label="[22:15:13]">&lt;stikonas&gt;</a></span><span class="message">although, we have to prepare tar ourselves</span></div><div class="line" id="221519"><span class="nick" style="color:#2e2a4a"><a href="#221519" label="[22:15:19]">&lt;stikonas&gt;</a></span><span class="message">upstream only ships .tar.gz</span></div><div class="line" id="221535"><span class="nick" style="color:#389600"><a href="#221535" label="[22:15:35]">&lt;fossy&gt;</a></span><span class="message">oh dont bother then</span></div><div class="line" id="221610"><span class="nick" style="color:#389600"><a href="#221610" label="[22:16:10]">&lt;fossy&gt;</a></span><span class="message">Im not a fan of repackaging upstreams</span></div><div class="line" id="221944"><span class="nick" style="color:#2e2a4a"><a href="#221944" label="[22:19:44]">&lt;stikonas&gt;</a></span><span class="message">ok, le'ts not bother...</span></div><div class="line" id="221958"><span class="nick" style="color:#2e2a4a"><a href="#221958" label="[22:19:58]">&lt;stikonas&gt;</a></span><span class="message">but I can submit another small patch that might be useful in the future...</span></div><div class="line" id="222001"><span class="nick" style="color:#2e2a4a"><a href="#222001" label="[22:20:01]">&lt;stikonas&gt;</a></span><span class="message">once we have non-kaem scripts</span></div><div class="line" id="222313"><span class="nick" style="color:#2e2a4a"><a href="#222313" label="[22:23:13]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/9/files">https://github.com/fosslinux/live-bootstrap/pull/9/files</a> </span></div><div class="line" id="222409"><span class="nick" style="color:#389600"><a href="#222409" label="[22:24:09]">&lt;fossy&gt;</a></span><span class="message">stikonas: merged</span></div><div class="line" id="222450"><span class="nick" style="color:#389600"><a href="#222450" label="[22:24:50]">&lt;fossy&gt;</a></span><span class="message">stikonas: we will have to build patch before make... the make binary is broken but i figured out where in the source code the probelm is, but it woudl require a 's/a/b' expression which is broken with our sed</span></div><div class="line" id="222510"><span class="nick" style="color:#389600"><a href="#222510" label="[22:25:10]">&lt;fossy&gt;</a></span><span class="message">luckily according to gcc-seed it dosen't require patching</span></div><div class="line" id="222533"><span class="nick" style="color:#8dd3c7"><a href="#222533" label="[22:25:33]">&lt;yt_&gt;</a></span><span class="message">evening folks</span></div><div class="line" id="222534"><span class="nick" style="color:#389600"><a href="#222534" label="[22:25:34]">&lt;fossy&gt;</a></span><span class="message">(patch dosen't require patching, that is)</span></div><div class="line" id="222543"><span class="nick" style="color:#389600"><a href="#222543" label="[22:25:43]">&lt;fossy&gt;</a></span><span class="message">hey yt_ !</span></div><div class="line" id="222553"><span class="nick" style="color:#2e2a4a"><a href="#222553" label="[22:25:53]">&lt;stikonas&gt;</a></span><span class="message">yeah, patch is quite simple</span></div><div class="line" id="222602"><span class="nick" style="color:#2e2a4a"><a href="#222602" label="[22:26:02]">&lt;stikonas&gt;</a></span><span class="message">I think there are less than 10 files to build</span></div><div class="line" id="222607"><span class="nick" style="color:#389600"><a href="#222607" label="[22:26:07]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/gcc-seed/blob/master/x86/patch-2.5.sh#L33">https://github.com/fosslinux/gcc-seed/blob/master/x86/patch-2.5.sh#L33</a> </span></div><div class="line" id="222610"><span class="nick" style="color:#389600"><a href="#222610" label="[22:26:10]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="222620"><span class="nick" style="color:#2e2a4a"><a href="#222620" label="[22:26:20]">&lt;stikonas&gt;</a></span><span class="message">oh, sed s/a/b/ is not working on 4.0.7?</span></div><div class="line" id="222627"><span class="nick" style="color:#389600"><a href="#222627" label="[22:26:27]">&lt;fossy&gt;</a></span><span class="message">no</span></div><div class="line" id="222629"><span class="nick" style="color:#2e2a4a"><a href="#222629" label="[22:26:29]">&lt;stikonas&gt;</a></span><span class="message">4.0.7 is actually not even that old :O</span></div><div class="line" id="222647"><span class="nick" style="color:#389600"><a href="#222647" label="[22:26:47]">&lt;fossy&gt;</a></span><span class="message">stikonas: i believe it should work, just that it is broken under tinycc/mes c library...</span></div><div class="line" id="222651"><span class="nick" style="color:#2e2a4a"><a href="#222651" label="[22:26:51]">&lt;stikonas&gt;</a></span><span class="message">hmm, I just picked some 4.x version at random</span></div><div class="line" id="222653"><span class="nick" style="color:#2e2a4a"><a href="#222653" label="[22:26:53]">&lt;stikonas&gt;</a></span><span class="message">oh, I see...</span></div><div class="line" id="222657"><span class="nick" style="color:#389600"><a href="#222657" label="[22:26:57]">&lt;fossy&gt;</a></span><span class="message">but older versions dont have -i...</span></div><div class="line" id="222703"><span class="nick" style="color:#2e2a4a"><a href="#222703" label="[22:27:03]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="222710"><span class="nick" style="color:#389600"><a href="#222710" label="[22:27:10]">&lt;fossy&gt;</a></span><span class="message">so either is unhelpful tbh</span></div><div class="line" id="222720"><span class="nick" style="color:#389600"><a href="#222720" label="[22:27:20]">&lt;fossy&gt;</a></span><span class="message">except for the basic use we require it for</span></div><div class="line" id="222721"><span class="nick" style="color:#2e2a4a"><a href="#222721" label="[22:27:21]">&lt;stikonas&gt;</a></span><span class="message">well, it was helpful for gzip</span></div><div class="line" id="222731"><span class="nick" style="color:#389600"><a href="#222731" label="[22:27:31]">&lt;fossy&gt;</a></span><span class="message">yea</span></div><div class="line" id="222734"><span class="nick" style="color:#2e2a4a"><a href="#222734" label="[22:27:34]">&lt;stikonas&gt;</a></span><span class="message">but anyway, patch is better for patching</span></div><div class="line" id="222743"><span class="nick" style="color:#389600"><a href="#222743" label="[22:27:43]">&lt;fossy&gt;</a></span><span class="message">as per the name :P</span></div><div class="line" id="223753"><span class="nick" style="color:#2e2a4a"><a href="#223753" label="[22:37:53]">&lt;senzilla&gt;</a></span><span class="message">Does anyone in here feel like you're reinventing the wheel?</span></div><div class="line" id="223853"><span class="nick" style="color:#bc80bd"><a href="#223853" label="[22:38:53]">&lt;bauen1&gt;</a></span><span class="message">senzilla: if you're not reinventing the wheel when working on bootstrapping you're doing something wrong</span></div><div class="line" id="223924"><span class="nick" style="color:#2e2a4a"><a href="#223924" label="[22:39:24]">&lt;senzilla&gt;</a></span><span class="message">Haha, fair point</span></div><div class="line" id="223928"><span class="nick" style="color:#bc80bd"><a href="#223928" label="[22:39:28]">&lt;bauen1&gt;</a></span><span class="message">first commit of the year to myunix and ci has already decided to blow up, off to a good start</span></div><div class="line" id="223935"><span class="nick" style="color:#2e2a4a"><a href="#223935" label="[22:39:35]">&lt;senzilla&gt;</a></span><span class="message"> <a rel="nofollow" href="http://lists.landley.net/pipermail/toybox-landley.net/2021-January/012240.html">http://lists.landley.net/pipermail/toybox-landley.net/2021-January/012240.html</a> </span></div><div class="line" id="224012"><span class="nick" style="color:#2e2a4a"><a href="#224012" label="[22:40:12]">&lt;senzilla&gt;</a></span><span class="message">Just for the record, I was referring to this ^</span></div><div class="line" id="224727"><span class="nick" style="color:#2e2a4a"><a href="#224727" label="[22:47:27]">&lt;stikonas&gt;</a></span><span class="message">why is he sighing...</span></div><div class="line" id="230421"><span class="nick" style="color:#6b8072"><a href="#230421" label="[23:04:21]">&lt;malina&gt;</a></span><span class="message">for the same reason 70 years old sigh when 20 years old talk about their first shag</span></div><div class="line" id="232948"><span class="nick" style="color:#389600"><a href="#232948" label="[23:29:48]">&lt;fossy&gt;</a></span><span class="message">senzilla: confused</span></div><div class="line" id="232954"><span class="nick" style="color:#389600"><a href="#232954" label="[23:29:54]">&lt;fossy&gt;</a></span><span class="message">is this part of a tread</span></div><div class="line" id="232958"><span class="nick" style="color:#389600"><a href="#232958" label="[23:29:58]">&lt;fossy&gt;</a></span><span class="message">or someone having a bad day</span></div><div class="line" id="235248"><span class="nick" style="color:#80b1d3"><a href="#235248" label="[23:52:48]">&lt;mihi&gt;</a></span><span class="message">gforce_d11977, not sure about toybox, but busybox uses lots of glibc'isms to stay small (strchrnul, fnmatch, ...) which don't exist in our mes libc. Probably possible to rip them off e.g. musl or bionic, but for what? At the end everybody wants to have original bash/coreutils/etc. anyway</span></div><div class="line" id="235333"><span class="nick" style="color:#6b8072"><a href="#235333" label="[23:53:33]">&lt;malina&gt;</a></span><span class="message">my anecdote , ye nvm people dont get it. it's nothing to do with a bad day though. Anyway, toybox is old skool and perusing at his talks I am guessing the sigh could have been the fact he has bee doin this a log time. Although form a good while ago, one DOES see he mentions the cc lacks still some (alternative?) toolchain.</span></div><div class="line" id="235348"><span class="nick" style="color:#80b1d3"><a href="#235348" label="[23:53:48]">&lt;mihi&gt;</a></span><span class="message">By the way, any plans how to bootstrap coreutils? It seems to me that very many basic syscalls (e.g. rename) and functions (ctime) are missing from our libc, and I do not think (but may be surprised) that coreutils can live without them... Or are there already plans how to get to a better libc?</span></div><div class="line" id="235409"><span class="nick" style="color:#6b8072"><a href="#235409" label="[23:54:09]">&lt;malina&gt;</a></span><span class="message">mihi, well most of the gnu tools was ripped off from the original, and ironically, the bsd's/posix's were left int he dust.</span></div><div class="line" id="235505"><span class="nick" style="color:#6b8072"><a href="#235505" label="[23:55:05]">&lt;malina&gt;</a></span><span class="message">parastic but for sure, not everyone therefore wants only gnu. however, most want the kernel, which itself, despite movelle claiming elsewise was also totally 'inspired' by the *nix.</span></div><div class="line" id="235605"><span class="nick" style="color:#6b8072"><a href="#235605" label="[23:56:05]">&lt;malina&gt;</a></span><span class="message">the sighing though was nothing to bother about. This is a great project in itself. I think you guys are doing a bottom up approach, not sure if the toybox to some degree was a top down.</span></div><div class="line" id="235844"><span class="nick" style="color:#6b8072"><a href="#235844" label="[23:58:44]">&lt;malina&gt;</a></span><span class="message"> <a rel="nofollow" href="http://landley.net/talks/celf-2013.txt">http://landley.net/talks/celf-2013.txt</a>  &lt;- some of ths opinions about the topics, from 2013.  interesting to see some of it actally in context of today</span></div><br /></div></body></html>