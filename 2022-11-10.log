<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-11-10.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="123726"><span class="nick" style="color:#389600"><a href="#123726" label="[12:37:26]">&lt;zacque&gt;</a></span><span class="message">Hi, I've just started learning about bootstrappable builds. I've done `nasm -o stage0_monitor stage0_monitor.S`, but how can test the output?</span></div><div class="line" id="123802"><span class="nick" style="color:#389600"><a href="#123802" label="[12:38:02]">&lt;zacque&gt;</a></span><span class="message">The instruction states `qemu -fda stage0_monitor`, but there is no qemu, only qemu-* on my system. (x86_64, Linux, Ubuntu)</span></div><div class="line" id="123835"><span class="nick" style="color:#389600"><a href="#123835" label="[12:38:35]">&lt;zacque&gt;</a></span><span class="message">My qemu is version 7.1.0</span></div><div class="line" id="124401"><span class="nick" style="color:#389600"><a href="#124401" label="[12:44:01]">&lt;zacque&gt;</a></span><span class="message">Oh, I can boot with `qemu-system-x86_64 stage0_monitor` instead! Thanks, myself =D</span></div><div class="line" id="125010"><span class="nick" style="color:#8dd3c7"><a href="#125010" label="[12:50:10]">&lt;rickmasters&gt;</a></span><span class="message">zacque: maybe you know this but stage0_monitor is very low level program to start with.</span></div><div class="line" id="125330"><span class="nick" style="color:#8dd3c7"><a href="#125330" label="[12:53:30]">&lt;rickmasters&gt;</a></span><span class="message">zacque: running &quot;./kaem.x86&quot; from the top will run the normal build</span></div><div class="line" id="125731"><span class="nick" style="color:#2e2a4a"><a href="#125731" label="[12:57:31]">&lt;stikonas[m]&gt;</a></span><span class="message">./will start with bash. If you to use kaem run bootstrap-seeds/POSIX/AMD64/kaem-optional-seed</span></div><div class="line" id="125753"><span class="nick" style="color:#2e2a4a"><a href="#125753" label="[12:57:53]">&lt;stikonas[m]&gt;</a></span><span class="message">zacque: oh and you might want to start with stage0-posix first</span></div><div class="line" id="125756"><span class="nick" style="color:#389600"><a href="#125756" label="[12:57:56]">&lt;zacque&gt;</a></span><span class="message">rickmasters: Thanks! I'm fascinated by the idea that one can bootstrap everything from stage0_monitor(?), so I'm eager to study how it works</span></div><div class="line" id="125817"><span class="nick" style="color:#2e2a4a"><a href="#125817" label="[12:58:17]">&lt;stikonas[m]&gt;</a></span><span class="message">leave stage0 baremetal bootstrap for later</span></div><div class="line" id="125818"><span class="nick" style="color:#389600"><a href="#125818" label="[12:58:18]">&lt;zacque&gt;</a></span><span class="message">stikonas[m]: Oh, is stage0 and stage0-posix not the same?</span></div><div class="line" id="125825"><span class="nick" style="color:#389600"><a href="#125825" label="[12:58:25]">&lt;zacque&gt;</a></span><span class="message">Ahh, I see, thanks!</span></div><div class="line" id="125840"><span class="nick" style="color:#2e2a4a"><a href="#125840" label="[12:58:40]">&lt;stikonas[m]&gt;</a></span><span class="message">No, one is running on Linux, the other is baremetal</span></div><div class="line" id="125852"><span class="nick" style="color:#2e2a4a"><a href="#125852" label="[12:58:52]">&lt;stikonas[m]&gt;</a></span><span class="message">We also have WIP stage0-uefi</span></div><div class="line" id="125921"><span class="nick" style="color:#2e2a4a"><a href="#125921" label="[12:59:21]">&lt;stikonas[m]&gt;</a></span><span class="message">That runs as UEFI application</span></div><div class="line" id="125934"><span class="nick" style="color:#2e2a4a"><a href="#125934" label="[12:59:34]">&lt;stikonas[m]&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi">https://git.stikonas.eu/andrius/stage0-uefi</a> </span></div><div class="line" id="125935"><span class="nick" style="color:#389600"><a href="#125935" label="[12:59:35]">&lt;zacque&gt;</a></span><span class="message">Wow!</span></div><div class="line" id="125955"><span class="nick" style="color:#2e2a4a"><a href="#125955" label="[12:59:55]">&lt;stikonas[m]&gt;</a></span><span class="message">Though it still needs a bit more work on C library</span></div><div class="line" id="130014"><span class="nick" style="color:#2e2a4a"><a href="#130014" label="[13:00:14]">&lt;stikonas[m]&gt;</a></span><span class="message">But we are able to build C compiler there</span></div><div class="line" id="130105"><span class="nick" style="color:#389600"><a href="#130105" label="[13:01:05]">&lt;zacque&gt;</a></span><span class="message">Wow, that's good to know!</span></div><div class="line" id="130131"><span class="nick" style="color:#2e2a4a"><a href="#130131" label="[13:01:31]">&lt;stikonas[m]&gt;</a></span><span class="message">rickmasters also has very small kernel that uses BIOS calls to run stage0-posix</span></div><div class="line" id="130226"><span class="nick" style="color:#389600"><a href="#130226" label="[13:02:26]">&lt;zacque&gt;</a></span><span class="message">Oh, is it the live-bootstrap project?</span></div><div class="line" id="130227"><span class="nick" style="color:#2e2a4a"><a href="#130227" label="[13:02:27]">&lt;stikonas[m]&gt;</a></span><span class="message">It can build up to tcc</span></div><div class="line" id="130239"><span class="nick" style="color:#2e2a4a"><a href="#130239" label="[13:02:39]">&lt;stikonas[m]&gt;</a></span><span class="message">No, at least not yet</span></div><div class="line" id="130251"><span class="nick" style="color:#8dd3c7"><a href="#130251" label="[13:02:51]">&lt;rickmasters&gt;</a></span><span class="message">it's here: <a rel="nofollow" href="https://github.com/ironmeld/boot2now">https://github.com/ironmeld/boot2now</a> </span></div><div class="line" id="130301"><span class="nick" style="color:#2e2a4a"><a href="#130301" label="[13:03:01]">&lt;stikonas[m]&gt;</a></span><span class="message">Since that builder-hex0 kernel can't run make yet</span></div><div class="line" id="130305"><span class="nick" style="color:#389600"><a href="#130305" label="[13:03:05]">&lt;zacque&gt;</a></span><span class="message">Oh, thanks!</span></div><div class="line" id="130331"><span class="nick" style="color:#2e2a4a"><a href="#130331" label="[13:03:31]">&lt;stikonas[m]&gt;</a></span><span class="message">So we are still a bit away from being able to build Linux with it</span></div><div class="line" id="130352"><span class="nick" style="color:#8dd3c7"><a href="#130352" label="[13:03:52]">&lt;rickmasters&gt;</a></span><span class="message">the kernel builder-hex0 is a submodule and the source is from live-bootstrap, another submodule</span></div><div class="line" id="130354"><span class="nick" style="color:#2e2a4a"><a href="#130354" label="[13:03:54]">&lt;stikonas[m]&gt;</a></span><span class="message">And stage0-uefi stops even earlier</span></div><div class="line" id="130605"><span class="nick" style="color:#389600"><a href="#130605" label="[13:06:05]">&lt;zacque&gt;</a></span><span class="message">Wow, all these sound amazing, and intrigue me to learn more! =D</span></div><div class="line" id="130640"><span class="nick" style="color:#389600"><a href="#130640" label="[13:06:40]">&lt;zacque&gt;</a></span><span class="message">I'm gonna start learning from hex0? Is this a good place to start?</span></div><div class="line" id="130723"><span class="nick" style="color:#8dd3c7"><a href="#130723" label="[13:07:23]">&lt;rickmasters&gt;</a></span><span class="message">zacque: yes, it was for me</span></div><div class="line" id="130743"><span class="nick" style="color:#2e2a4a"><a href="#130743" label="[13:07:43]">&lt;stikonas[m]&gt;</a></span><span class="message">Yes, it's fairly simple though you need to pick arch</span></div><div class="line" id="130812"><span class="nick" style="color:#389600"><a href="#130812" label="[13:08:12]">&lt;zacque&gt;</a></span><span class="message">That's good to know, thanks!</span></div><div class="line" id="130815"><span class="nick" style="color:#2e2a4a"><a href="#130815" label="[13:08:15]">&lt;stikonas[m]&gt;</a></span><span class="message">e.g. x86 amd64, risc-v, aarch64</span></div><div class="line" id="130828"><span class="nick" style="color:#389600"><a href="#130828" label="[13:08:28]">&lt;zacque&gt;</a></span><span class="message">I'm on x86_64, so it's AMD64 for me</span></div><div class="line" id="131003"><span class="nick" style="color:#2e2a4a"><a href="#131003" label="[13:10:03]">&lt;stikonas[m]&gt;</a></span><span class="message">Start with C or assembly prototype <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-amd64/blob/master/NASM/hex0_AMD64.S">https://github.com/oriansj/stage0-posix-amd64/blob/master/NASM/hex0_AMD64.S</a> </span></div><div class="line" id="131054"><span class="nick" style="color:#2e2a4a"><a href="#131054" label="[13:10:54]">&lt;stikonas[m]&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/High%20Level%20Prototypes/hex0.c">https://github.com/oriansj/stage0-posix/blob/master/High%20Level%20Prototypes/hex0.c</a> </span></div><div class="line" id="131116"><span class="nick" style="color:#2e2a4a"><a href="#131116" label="[13:11:16]">&lt;stikonas[m]&gt;</a></span><span class="message">Or you can look at uefi versions</span></div><div class="line" id="131142"><span class="nick" style="color:#2e2a4a"><a href="#131142" label="[13:11:42]">&lt;stikonas[m]&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/Development/hex0.c">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/Development/hex0.c</a> </span></div><div class="line" id="131154"><span class="nick" style="color:#2e2a4a"><a href="#131154" label="[13:11:54]">&lt;stikonas[m]&gt;</a></span><span class="message">Opening file is much harder in uefi</span></div><div class="line" id="131227"><span class="nick" style="color:#389600"><a href="#131227" label="[13:12:27]">&lt;zacque&gt;</a></span><span class="message">Ah, I'm not family with uefi, so I'll start with POSIX one</span></div><div class="line" id="131242"><span class="nick" style="color:#389600"><a href="#131242" label="[13:12:42]">&lt;zacque&gt;</a></span><span class="message">Thanks for the C and assembly prototype! Now things start to make sense!</span></div><div class="line" id="131431"><span class="nick" style="color:#2e2a4a"><a href="#131431" label="[13:14:31]">&lt;stikonas[m]&gt;</a></span><span class="message">We probably need nicer M0 defines though, I've switched cc_amd to newer style that are closer to GAS syntax</span></div><div class="line" id="131448"><span class="nick" style="color:#2e2a4a"><a href="#131448" label="[13:14:48]">&lt;stikonas[m]&gt;</a></span><span class="message">But early programs use more custom ones</span></div><div class="line" id="131559"><span class="nick" style="color:#2e2a4a"><a href="#131559" label="[13:15:59]">&lt;stikonas[m]&gt;</a></span><span class="message">E.g. <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-amd64/blob/master/Development/M0_AMD64.M1">https://github.com/oriansj/stage0-posix-amd64/blob/master/Development/M0_AMD64.M1</a>  vs <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-amd64/blob/master/GAS/cc_amd64.S">https://github.com/oriansj/stage0-posix-amd64/blob/master/GAS/cc_amd64.S</a> </span></div><div class="line" id="131834"><span class="nick" style="color:#2e2a4a"><a href="#131834" label="[13:18:34]">&lt;stikonas[m]&gt;</a></span><span class="message">Anyway, that will become clearer as you go through hex0, hex1 hex2 M0 and cc_amd64</span></div><div class="line" id="131839"><span class="nick" style="color:#8dd3c7"><a href="#131839" label="[13:18:39]">&lt;rickmasters&gt;</a></span><span class="message">for hex0, I found that understanding the first command in x86/mescc-tools-seed-kaem.kaem was a good place to start because it's basically building itself</span></div><div class="line" id="131946"><span class="nick" style="color:#2e2a4a"><a href="#131946" label="[13:19:46]">&lt;stikonas[m]&gt;</a></span><span class="message">Basically it strips comments and converts ASCII encoded hexadecimals into bytes</span></div><div class="line" id="132002"><span class="nick" style="color:#8dd3c7"><a href="#132002" label="[13:20:02]">&lt;rickmasters&gt;</a></span><span class="message">AMD64/mescc-tools-seed-kaem.kaem for AMD64</span></div><div class="line" id="132038"><span class="nick" style="color:#2e2a4a"><a href="#132038" label="[13:20:38]">&lt;stikonas[m]&gt;</a></span><span class="message">Yes, kaem scripts are also good place to look at</span></div><div class="line" id="132103"><span class="nick" style="color:#389600"><a href="#132103" label="[13:21:03]">&lt;zacque&gt;</a></span><span class="message">I see, I'm looking at AMD64/mescc-tools-seed-kaem now</span></div><div class="line" id="132113"><span class="nick" style="color:#389600"><a href="#132113" label="[13:21:13]">&lt;zacque&gt;</a></span><span class="message">Can I know what does &quot;kaem&quot; stand for?</span></div><div class="line" id="132159"><span class="nick" style="color:#389600"><a href="#132159" label="[13:21:59]">&lt;zacque&gt;</a></span><span class="message">Not sure how to pronounce it as well, kaa-emm?</span></div><div class="line" id="132444"><span class="nick" style="color:#8dd3c7"><a href="#132444" label="[13:24:44]">&lt;rickmasters&gt;</a></span><span class="message">I don't know where kaem comes from. That's probably a question for oriansj</span></div><div class="line" id="132522"><span class="nick" style="color:#8dd3c7"><a href="#132522" label="[13:25:22]">&lt;rickmasters&gt;</a></span><span class="message">In my head, its kaym</span></div><div class="line" id="132943"><span class="nick" style="color:#389600"><a href="#132943" label="[13:29:43]">&lt;zacque&gt;</a></span><span class="message">Ahh, I see =D</span></div><div class="line" id="132950"><span class="nick" style="color:#8dd3c7"><a href="#132950" label="[13:29:50]">&lt;rickmasters&gt;</a></span><span class="message">kaem is a puzzled &quot;make&quot; according to <a rel="nofollow" href="https://logs.guix.gnu.org/bootstrappable/2021-05-18.log">https://logs.guix.gnu.org/bootstrappable/2021-05-18.log</a> </span></div><div class="line" id="133213"><span class="nick" style="color:#389600"><a href="#133213" label="[13:32:13]">&lt;zacque&gt;</a></span><span class="message">Aha! Thanks!</span></div><div class="line" id="133306"><span class="nick" style="color:#389600"><a href="#133306" label="[13:33:06]">&lt;zacque&gt;</a></span><span class="message">This link has other useful info as well!</span></div><div class="line" id="133351"><span class="nick" style="color:#8dd3c7"><a href="#133351" label="[13:33:51]">&lt;rickmasters&gt;</a></span><span class="message">yeah, the chat logs are invaluable, but unfortunately the search is not very good</span></div><div class="line" id="133653"><span class="nick" style="color:#389600"><a href="#133653" label="[13:36:53]">&lt;zacque&gt;</a></span><span class="message">Oh, the previous kaem-optional-seed.hex0 is rename to kaem-minimal.hex0?</span></div><div class="line" id="133713"><span class="nick" style="color:#389600"><a href="#133713" label="[13:37:13]">&lt;zacque&gt;</a></span><span class="message">And so kaem-minimal.hex0 is still 1:1 to kaem-optional-seed?</span></div><div class="line" id="134137"><span class="nick" style="color:#8dd3c7"><a href="#134137" label="[13:41:37]">&lt;rickmasters&gt;</a></span><span class="message">AMD64/kaem-minimal.hex0 and bootstrap-seeds/POSIX/AMD64/kaem-minimal.hex0 are the same</span></div><div class="line" id="134219"><span class="nick" style="color:#8dd3c7"><a href="#134219" label="[13:42:19]">&lt;rickmasters&gt;</a></span><span class="message">I'm not sure why the duplication but bootstrap-seeds is a submodule so its probably for convenience</span></div><div class="line" id="134457"><span class="nick" style="color:#8dd3c7"><a href="#134457" label="[13:44:57]">&lt;rickmasters&gt;</a></span><span class="message">but yes, I'm pretty sure the kaem-optional-seed binary originates from kaem-minimal.hex0</span></div><div class="line" id="135400"><span class="nick" style="color:#389600"><a href="#135400" label="[13:54:00]">&lt;zacque&gt;</a></span><span class="message">Aha, thanks!</span></div><div class="line" id="143405"><span class="nick" style="color:#8dd3c7"><a href="#143405" label="[14:34:05]">&lt;rickmasters&gt;</a></span><span class="message">Everyone: I have an update on my efforts on the next bootstrap kernel.</span></div><div class="line" id="143413"><span class="nick" style="color:#8dd3c7"><a href="#143413" label="[14:34:13]">&lt;rickmasters&gt;</a></span><span class="message">As a reminder, I reported on 10/17 that my efforts to build Linux with tcc were failing.</span></div><div class="line" id="143423"><span class="nick" style="color:#8dd3c7"><a href="#143423" label="[14:34:23]">&lt;rickmasters&gt;</a></span><span class="message">On 10/18 fossy referred me to the linux clone <a rel="nofollow" href="https://github.com/mikaku/Fiwix.">https://github.com/mikaku/Fiwix.</a> </span></div><div class="line" id="143432"><span class="nick" style="color:#8dd3c7"><a href="#143432" label="[14:34:32]">&lt;rickmasters&gt;</a></span><span class="message">This project was started about 25 years ago and is still being worked on.</span></div><div class="line" id="143442"><span class="nick" style="color:#8dd3c7"><a href="#143442" label="[14:34:42]">&lt;rickmasters&gt;</a></span><span class="message">Some history: <a rel="nofollow" href="https://www.osnews.com/story/4839/the-gnufiwix-operating-system/">https://www.osnews.com/story/4839/the-gnufiwix-operating-system/</a> </span></div><div class="line" id="143450"><span class="nick" style="color:#8dd3c7"><a href="#143450" label="[14:34:50]">&lt;rickmasters&gt;</a></span><span class="message">I have spent the last three weeks working with Fiwix and I believe it fits our requirements</span></div><div class="line" id="143457"><span class="nick" style="color:#8dd3c7"><a href="#143457" label="[14:34:57]">&lt;rickmasters&gt;</a></span><span class="message">for the next kernel system which can carry us the rest of the way to building and booting Linux.</span></div><div class="line" id="143507"><span class="nick" style="color:#8dd3c7"><a href="#143507" label="[14:35:07]">&lt;rickmasters&gt;</a></span><span class="message">I'm still in the early stages of this effort but I've learned a lot and solved some difficult problems along the way.</span></div><div class="line" id="143538"><span class="nick" style="color:#8dd3c7"><a href="#143538" label="[14:35:38]">&lt;rickmasters&gt;</a></span><span class="message">My initial focus has been on building it normally (with gcc), running it in qemu, and booting from a large ram drive.</span></div><div class="line" id="143547"><span class="nick" style="color:#8dd3c7"><a href="#143547" label="[14:35:47]">&lt;rickmasters&gt;</a></span><span class="message">I had to get really familiar with how it boots and manages memory, which evolves in several stages,</span></div><div class="line" id="143556"><span class="nick" style="color:#8dd3c7"><a href="#143556" label="[14:35:56]">&lt;rickmasters&gt;</a></span><span class="message">so that I could implement a new strategy for booting off a very large ram disk.</span></div><div class="line" id="143604"><span class="nick" style="color:#8dd3c7"><a href="#143604" label="[14:36:04]">&lt;rickmasters&gt;</a></span><span class="message">I'm pretty happy with how I got that working so I'm going to proceed soon on to building it with tcc.</span></div><div class="line" id="143611"><span class="nick" style="color:#8dd3c7"><a href="#143611" label="[14:36:11]">&lt;rickmasters&gt;</a></span><span class="message">There are errors compiling some of the assembly language with tcc so I'll have to work though that.</span></div><div class="line" id="143617"><span class="nick" style="color:#8dd3c7"><a href="#143617" label="[14:36:17]">&lt;rickmasters&gt;</a></span><span class="message">Anyway, I've got a pretty good idea of all the work that will be needed.</span></div><div class="line" id="143628"><span class="nick" style="color:#8dd3c7"><a href="#143628" label="[14:36:28]">&lt;rickmasters&gt;</a></span><span class="message">It will probably take a number of months to do but I'm pretty hopeful I'll be able to get it done.</span></div><div class="line" id="143635"><span class="nick" style="color:#8dd3c7"><a href="#143635" label="[14:36:35]">&lt;rickmasters&gt;</a></span><span class="message">I'll try to post updates periodically of my progress.</span></div><div class="line" id="153336"><span class="nick" style="color:#389600"><a href="#153336" label="[15:33:36]">&lt;zacque&gt;</a></span><span class="message">Okay! Now I've got an rough idea. But question: At the end of kaem.run, what do I have at my disposal? Is it M2-Planet or M2-Mesoplanet?</span></div><div class="line" id="153342"><span class="nick" style="color:#389600"><a href="#153342" label="[15:33:42]">&lt;zacque&gt;</a></span><span class="message">And how can I use it?</span></div><div class="line" id="153506"><span class="nick" style="color:#389600"><a href="#153506" label="[15:35:06]">&lt;zacque&gt;</a></span><span class="message">I don't see any mescc-tool around?</span></div><div class="line" id="154735"><span class="nick" style="color:#389600"><a href="#154735" label="[15:47:35]">&lt;zacque&gt;</a></span><span class="message">Ah, I get it, I get it. Thanks =D</span></div><div class="line" id="165943"><span class="nick" style="color:#2e2a4a"><a href="#165943" label="[16:59:43]">&lt;stikonas[m]&gt;</a></span><span class="message">zacque: you have both</span></div><div class="line" id="170035"><span class="nick" style="color:#2e2a4a"><a href="#170035" label="[17:00:35]">&lt;stikonas[m]&gt;</a></span><span class="message">M2-Mesoplanet is just a C preprocessor that can invoke M2-Planet, M1 and hex2</span></div><div class="line" id="170108"><span class="nick" style="color:#2e2a4a"><a href="#170108" label="[17:01:08]">&lt;stikonas[m]&gt;</a></span><span class="message">M2-Planet has far weaker preprocess integrated but it has no include support</span></div><div class="line" id="170225"><span class="nick" style="color:#2e2a4a"><a href="#170225" label="[17:02:25]">&lt;stikonas[m]&gt;</a></span><span class="message">But it has basic #if defined #else, #define, etc</span></div><div class="line" id="190035"><span class="nick" style="color:#6b8072"><a href="#190035" label="[19:00:35]">&lt;oriansj&gt;</a></span><span class="message">zacque: I suggest learning posix -&gt; uefi -&gt; Bare metal and hex0-&gt;hex1-&gt;hex2-&gt;M0-&gt;cc_amd64-&gt;M2-Planet (yes kaem [I pronounce it like common] is just make scrambled ^_^)</span></div><div class="line" id="230504"><span class="nick" style="color:#6b8072"><a href="#230504" label="[23:05:04]">&lt;oriansj&gt;</a></span><span class="message">and of course rickmasters' kernel is currently the most advanced x86 bare-metal bootstrap to date</span></div><div class="line" id="231149"><span class="nick" style="color:#389600"><a href="#231149" label="[23:11:49]">&lt;zacque&gt;</a></span><span class="message">stikonas[m] oriansj: I see, thanks!</span></div><div class="line" id="232801"><span class="nick" style="color:#6b8072"><a href="#232801" label="[23:28:01]">&lt;oriansj&gt;</a></span><span class="message">zacque: and if anything doesn't seem obvious in bootstrap-seeds, stage0, stage0-posix, mescc-tools, mescc-tools-extra, M2-Planet or M2-Mesoplanet doesn't appear totally obvious please tell me as I consider that a defect that needs to be fixed.</span></div><br /></div></body></html>