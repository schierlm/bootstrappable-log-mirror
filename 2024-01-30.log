<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-01-30.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="013600"><span class="nick" style="color:#389600"><a href="#013600" label="[01:36:00]">&lt;fosslinux&gt;</a></span><span class="message">I'm doing bare metal testing fairly regularly as well, Christoph and Googulator, so I hope it won't break any time soon</span></div><div class="line" id="013943"><span class="nick" style="color:#8dd3c7"><a href="#013943" label="[01:39:43]">&lt;Googulator&gt;</a></span><span class="message">fosslinux: that's good to hear</span></div><div class="line" id="013951"><span class="nick" style="color:#8dd3c7"><a href="#013951" label="[01:39:51]">&lt;Googulator&gt;</a></span><span class="message">what system are you testing on?</span></div><div class="line" id="014615"><span class="nick" style="color:#2e2a4a"><a href="#014615" label="[01:46:15]">&lt;fossy&gt;</a></span><span class="message">alternates between a 4th-gen Intel Gigabyte minipc, and a 7th-gen Intel Dell Latitude laptop</span></div><div class="line" id="014644"><span class="nick" style="color:#2e2a4a"><a href="#014644" label="[01:46:44]">&lt;fossy&gt;</a></span><span class="message">i keep meaning to test my core2duo old ass laptop but haven't yet</span></div><div class="line" id="014749"><span class="nick" style="color:#8dd3c7"><a href="#014749" label="[01:47:49]">&lt;Googulator&gt;</a></span><span class="message">good to know we can build on HW that new, if CSM is available</span></div><div class="line" id="014917"><span class="nick" style="color:#8dd3c7"><a href="#014917" label="[01:49:17]">&lt;Googulator&gt;</a></span><span class="message">one of us will need to get some period AMD hardware, to cover that angle as well</span></div><div class="line" id="015341"><span class="nick" style="color:#8dd3c7"><a href="#015341" label="[01:53:41]">&lt;Googulator&gt;</a></span><span class="message">interestingly, AMD still kind-of supports CSM/BIOS boot on AM5</span></div><div class="line" id="015401"><span class="nick" style="color:#8dd3c7"><a href="#015401" label="[01:54:01]">&lt;Googulator&gt;</a></span><span class="message">but only when using a discrete graphics card</span></div><div class="line" id="015435"><span class="nick" style="color:#8dd3c7"><a href="#015435" label="[01:54:35]">&lt;Googulator&gt;</a></span><span class="message">because no 16-bit VBIOS exists for RDNA2/3 GPUs like the ones embedded in AM5 CPUs</span></div><div class="line" id="015454"><span class="nick" style="color:#2e2a4a"><a href="#015454" label="[01:54:54]">&lt;fossy&gt;</a></span><span class="message">my desktop is an AM4 system but it's fairly rare i'd be able to have it occupied with a bare metal build</span></div><div class="line" id="015529"><span class="nick" style="color:#8dd3c7"><a href="#015529" label="[01:55:29]">&lt;Googulator&gt;</a></span><span class="message">right, AMD is also clearly still supporting and even releasing new CPUs for AM4</span></div><div class="line" id="015613"><span class="nick" style="color:#8dd3c7"><a href="#015613" label="[01:56:13]">&lt;Googulator&gt;</a></span><span class="message">so even now, 4 years after Intel's announced CSM cutoff, AMD is still an option if you need CSM</span></div><div class="line" id="015747"><span class="nick" style="color:#8dd3c7"><a href="#015747" label="[01:57:47]">&lt;Googulator&gt;</a></span><span class="message">BTW, just achieved pivot to a 64-bit kernel on bare metal</span></div><div class="line" id="015807"><span class="nick" style="color:#8dd3c7"><a href="#015807" label="[01:58:07]">&lt;Googulator&gt;</a></span><span class="message">although it's not exactly friendly to the live-bootstrap build system</span></div><div class="line" id="020057"><span class="nick" style="color:#6b8072"><a href="#020057" label="[02:00:57]">&lt;stikonas&gt;</a></span><span class="message">not friendly?</span></div><div class="line" id="020312"><span class="nick" style="color:#8dd3c7"><a href="#020312" label="[02:03:12]">&lt;Googulator&gt;</a></span><span class="message">I used musl-cross-make</span></div><div class="line" id="020355"><span class="nick" style="color:#2e2a4a"><a href="#020355" label="[02:03:55]">&lt;fossy&gt;</a></span><span class="message">in other news, i just pushed an lfs branch to live-bootstrap (NOT intended for merging into master) that can run jhalfs</span></div><div class="line" id="020356"><span class="nick" style="color:#8dd3c7"><a href="#020356" label="[02:03:56]">&lt;Googulator&gt;</a></span><span class="message">&amp; then rebuilt the kernel with a new config modified from the original using menuconfig, which requires ncurses</span></div><div class="line" id="020417"><span class="nick" style="color:#2e2a4a"><a href="#020417" label="[02:04:17]">&lt;fossy&gt;</a></span><span class="message">(jhalfs must be run with a hand made or outside made config though as I wasn't bothered to add ncurses)</span></div><div class="line" id="020446"><span class="nick" style="color:#2e2a4a"><a href="#020446" label="[02:04:46]">&lt;fossy&gt;</a></span><span class="message">there are some commits from the lfs branch i will cherry pick into PRs, such as a bunch of updates / rebuilds needed for glibc i think</span></div><div class="line" id="020448"><span class="nick" style="color:#8dd3c7"><a href="#020448" label="[02:04:48]">&lt;Googulator&gt;</a></span><span class="message">oh, so same issue as here</span></div><div class="line" id="020520"><span class="nick" style="color:#8dd3c7"><a href="#020520" label="[02:05:20]">&lt;Googulator&gt;</a></span><span class="message">ncurses is a Bravo India Tango Charlie Hotel</span></div><div class="line" id="020557"><span class="nick" style="color:#8dd3c7"><a href="#020557" label="[02:05:57]">&lt;Googulator&gt;</a></span><span class="message">requires a custom version of autoconf to regenerate its configure script, none of our bootstrapped versions work</span></div><div class="line" id="020619"><span class="nick" style="color:#8dd3c7"><a href="#020619" label="[02:06:19]">&lt;Googulator&gt;</a></span><span class="message">(some seem to, generating a script that seems to run OK, but then make fails)</span></div><div class="line" id="020742"><span class="nick" style="color:#8dd3c7"><a href="#020742" label="[02:07:42]">&lt;Googulator&gt;</a></span><span class="message">as for the Linux kernel, even after installing ncurses (built via pregen configure script), menuconfig will fail unless I leave _shipped files in place</span></div><div class="line" id="020817"><span class="nick" style="color:#8dd3c7"><a href="#020817" label="[02:08:17]">&lt;Googulator&gt;</a></span><span class="message">at least menuconfig/ncurses isn't required once you have a config file ready</span></div><div class="line" id="021833"><span class="nick" style="color:#8dd3c7"><a href="#021833" label="[02:18:33]">&lt;Googulator&gt;</a></span><span class="message">fossy: can I ask for some feedback on my PRs?</span></div><div class="line" id="022011"><span class="nick" style="color:#8dd3c7"><a href="#022011" label="[02:20:11]">&lt;Googulator&gt;</a></span><span class="message">#415, #418 and #421 primarily</span></div><div class="line" id="023507"><span class="nick" style="color:#8dd3c7"><a href="#023507" label="[02:35:07]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/Googulator/42fff6e8771912b5b83028c283d1b33e">https://gist.github.com/Googulator/42fff6e8771912b5b83028c283d1b33e</a>  diff for 64-bit kernel config</span></div><div class="line" id="024802"><span class="nick" style="color:#2e2a4a"><a href="#024802" label="[02:48:02]">&lt;fossy&gt;</a></span><span class="message">Googulator: ah, yes, thanks for reminding me</span></div><div class="line" id="025055"><span class="nick" style="color:#6b8072"><a href="#025055" label="[02:50:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: though ideally we should add both ncurses and readline</span></div><div class="line" id="025123"><span class="nick" style="color:#6b8072"><a href="#025123" label="[02:51:23]">&lt;stikonas&gt;</a></span><span class="message">currently our command line tools have very nasty command line interface that does not support readline features that everybody is used to</span></div><div class="line" id="025143"><span class="nick" style="color:#2e2a4a"><a href="#025143" label="[02:51:43]">&lt;fossy&gt;</a></span><span class="message">yes, we should</span></div><div class="line" id="025200"><span class="nick" style="color:#2e2a4a"><a href="#025200" label="[02:52:00]">&lt;fossy&gt;</a></span><span class="message">i just haven't yet :)</span></div><div class="line" id="025213"><span class="nick" style="color:#2e2a4a"><a href="#025213" label="[02:52:13]">&lt;fossy&gt;</a></span><span class="message">also i didn't do pregenerated files for any opf those packages either</span></div><div class="line" id="084008"><span class="nick" style="color:#80b1d3"><a href="#084008" label="[08:40:08]">&lt;Foxboron&gt;</a></span><span class="message">lrvick: Ah yes, Perl is one of them</span></div><div class="line" id="084045"><span class="nick" style="color:#6d2462"><a href="#084045" label="[08:40:45]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Was able to fix it: <a rel="nofollow" href="https://git.distrust.co/public/stagex/src/branch/main/src/core/perl/Dockerfile#L25-L31">https://git.distrust.co/public/stagex/src/branch/main/src/core/perl/Dockerfile#L25-L31</a> </span></div><div class="line" id="084118"><span class="nick" style="color:#80b1d3"><a href="#084118" label="[08:41:18]">&lt;Foxboron&gt;</a></span><span class="message">Ah yes, that works fine</span></div><div class="line" id="084120"><span class="nick" style="color:#6d2462"><a href="#084120" label="[08:41:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; ugly, but gets the job done and at least it is not a patch. Had to downgrade m4 to get around that issue. Now the last package not reproducible is python3.</span></div><div class="line" id="084130"><span class="nick" style="color:#6d2462"><a href="#084130" label="[08:41:30]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Thankfully guix did a patch last week, so trying it</span></div><div class="line" id="110243"><span class="nick" style="color:#234e69"><a href="#110243" label="[11:02:43]">&lt;muurkha&gt;</a></span><span class="message">Christoph: I'm adding Googulator's comments to <a rel="nofollow" href="http://canonical.org/~kragen/sw/pavnotes2.git">http://canonical.org/~kragen/sw/pavnotes2.git</a>  (hope that's okay, Googulator)</span></div><div class="line" id="110401"><span class="nick" style="color:#234e69"><a href="#110401" label="[11:04:01]">&lt;muurkha&gt;</a></span><span class="message">because I think they will be important for me to refer to in the future</span></div><div class="line" id="110534"><span class="nick" style="color:#234e69"><a href="#110534" label="[11:05:34]">&lt;muurkha&gt;</a></span><span class="message">CSM is &quot;Compatibility Support Module&quot; in UEFI?</span></div><div class="line" id="110650"><span class="nick" style="color:#234e69"><a href="#110650" label="[11:06:50]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://en.wikipedia.org/wiki/UEFI#CSM_booting">https://en.wikipedia.org/wiki/UEFI#CSM_booting</a> </span></div><div class="line" id="130621"><span class="nick" style="color:#6d2462"><a href="#130621" label="[13:06:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; muurkha: yes, but it is increasingly less and less available</span></div><div class="line" id="130646"><span class="nick" style="color:#6d2462"><a href="#130646" label="[13:06:46]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; E.g. I have coreboot/uefi system where there is no CSM</span></div><div class="line" id="131038"><span class="nick" style="color:#8dd3c7"><a href="#131038" label="[13:10:38]">&lt;Googulator&gt;</a></span><span class="message">CSM is really only a thing on AMD at this point</span></div><div class="line" id="131151"><span class="nick" style="color:#8dd3c7"><a href="#131151" label="[13:11:51]">&lt;Googulator&gt;</a></span><span class="message">Intel no longer provides CSM-compatible processor and chipset support code to partners for CPUs released since January 2020</span></div><div class="line" id="131227"><span class="nick" style="color:#80b1d3"><a href="#131227" label="[13:12:27]">&lt;Foxboron&gt;</a></span><span class="message">This is accordance with the UEFI rollout plan from the UEFI Forum fwiw</span></div><div class="line" id="131250"><span class="nick" style="color:#8dd3c7"><a href="#131250" label="[13:12:50]">&lt;Googulator&gt;</a></span><span class="message">they have also hinted at silicon changes that will make CSM insufficient for continued IBM PC/BIOS compatibility, something they apparently did for real in Meteor Lake, per pder's testing</span></div><div class="line" id="131401"><span class="nick" style="color:#8dd3c7"><a href="#131401" label="[13:14:01]">&lt;Googulator&gt;</a></span><span class="message">&amp; of course, Gate A20 was officially gone since Haswell, although it may have remained until Coffee Lake, just undocumented</span></div><div class="line" id="131433"><span class="nick" style="color:#8dd3c7"><a href="#131433" label="[13:14:33]">&lt;Googulator&gt;</a></span><span class="message">ARM and RISC-V, of course, never had CSM to begin with</span></div><div class="line" id="131557"><span class="nick" style="color:#8dd3c7"><a href="#131557" label="[13:15:57]">&lt;Googulator&gt;</a></span><span class="message">and Itanium is, well, dead</span></div><div class="line" id="152541"><span class="nick" style="color:#8dd3c7"><a href="#152541" label="[15:25:41]">&lt;Googulator&gt;</a></span><span class="message">Are the maintainers of bootstrappable.org here?</span></div><div class="line" id="153807"><span class="nick" style="color:#6d2462"><a href="#153807" label="[15:38:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Repo is here <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix/bootstrappable.git">https://git.savannah.gnu.org/cgit/guix/bootstrappable.git</a> </span></div><div class="line" id="153856"><span class="nick" style="color:#6d2462"><a href="#153856" label="[15:38:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Seems to be coded in scheme</span></div><div class="line" id="154007"><span class="nick" style="color:#8dd3c7"><a href="#154007" label="[15:40:07]">&lt;Googulator&gt;</a></span><span class="message">That's an interesting way to write web pages :)</span></div><div class="line" id="154018"><span class="nick" style="color:#8dd3c7"><a href="#154018" label="[15:40:18]">&lt;Googulator&gt;</a></span><span class="message">anyway, last update was in 2021</span></div><div class="line" id="154032"><span class="nick" style="color:#8dd3c7"><a href="#154032" label="[15:40:32]">&lt;Googulator&gt;</a></span><span class="message">I was going to ask for live-bootstrap to be linked</span></div><div class="line" id="154049"><span class="nick" style="color:#8dd3c7"><a href="#154049" label="[15:40:49]">&lt;Googulator&gt;</a></span><span class="message">but that seems to be the least of the issues</span></div><div class="line" id="154229"><span class="nick" style="color:#8dd3c7"><a href="#154229" label="[15:42:29]">&lt;Googulator&gt;</a></span><span class="message">back in November, when I first started working on bootstrapping, it took me quite a few false starts (e.g. trying to boot builder-hex0 in Hyper-V) before I stumbled upon LB</span></div><div class="line" id="154401"><span class="nick" style="color:#6d2462"><a href="#154401" label="[15:44:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, live-bootstrap needs more visibility...</span></div><div class="line" id="155113"><span class="nick" style="color:#8dd3c7"><a href="#155113" label="[15:51:13]">&lt;Googulator&gt;</a></span><span class="message">The most recent advance reported on bootstrappable.org is Guix's reduced binary seed bootstrap (i.e. Mes as a bootstrap seed binary)</span></div><div class="line" id="155204"><span class="nick" style="color:#8dd3c7"><a href="#155204" label="[15:52:04]">&lt;Googulator&gt;</a></span><span class="message">since then, Guix has almost achieved what LB has (minus kernel bootstrap and that pesky, non-reproducible static Guile)</span></div><div class="line" id="155251"><span class="nick" style="color:#8dd3c7"><a href="#155251" label="[15:52:51]">&lt;Googulator&gt;</a></span><span class="message">but curiously enough, Guix provides virtually no information on how to _reproduce_ the full source bootstrap</span></div><div class="line" id="155402"><span class="nick" style="color:#8dd3c7"><a href="#155402" label="[15:54:02]">&lt;Googulator&gt;</a></span><span class="message">BTW, looks like the latest builder-hex0 changes fixed live-bootstrap (baremetal image) running in a Gen 1 Hyper-V VM</span></div><div class="line" id="155429"><span class="nick" style="color:#8dd3c7"><a href="#155429" label="[15:54:29]">&lt;Googulator&gt;</a></span><span class="message">building the mes-&gt;tcc transition as we speak</span></div><div class="line" id="155504"><span class="nick" style="color:#8dd3c7"><a href="#155504" label="[15:55:04]">&lt;Googulator&gt;</a></span><span class="message">used to freeze in builder-hex0 stage1, and then in srcfs when stage1 was fixed</span></div><div class="line" id="160106"><span class="nick" style="color:#8dd3c7"><a href="#160106" label="[16:01:06]">&lt;Googulator&gt;</a></span><span class="message">...but it freezes in make_fiwix_initrd</span></div><div class="line" id="221627"><span class="nick" style="color:#8dd3c7"><a href="#221627" label="[22:16:27]">&lt;Googulator&gt;</a></span><span class="message">rickmasters: what would be needed in builder-hex0 to support something like &quot;ls&quot; or &quot;find .&quot;?</span></div><div class="line" id="221711"><span class="nick" style="color:#6c3d55"><a href="#221711" label="[22:17:11]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: A lot that isn't there. There are no data structures for what is in a directory.</span></div><div class="line" id="221831"><span class="nick" style="color:#6c3d55"><a href="#221831" label="[22:18:31]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: So getdirents would have to search the entire file system and would need to remove duplicate filenames which can currently exist.</span></div><div class="line" id="221839"><span class="nick" style="color:#8dd3c7"><a href="#221839" label="[22:18:39]">&lt;Googulator&gt;</a></span><span class="message">I was thinking of a more naive implementation that just searches through the entire file descriptor set for names matching a prefix</span></div><div class="line" id="221901"><span class="nick" style="color:#8dd3c7"><a href="#221901" label="[22:19:01]">&lt;Googulator&gt;</a></span><span class="message">given that we have a hard limit of just over 14000 anyway</span></div><div class="line" id="221909"><span class="nick" style="color:#8dd3c7"><a href="#221909" label="[22:19:09]">&lt;Googulator&gt;</a></span><span class="message">but yeah, duplicates could be a problem</span></div><div class="line" id="222029"><span class="nick" style="color:#6c3d55"><a href="#222029" label="[22:20:29]">&lt;rickmasters&gt;</a></span><span class="message">Googulator, since last dup file wins, the current searches deal with that by just starting at the end.</span></div><div class="line" id="222104"><span class="nick" style="color:#8dd3c7"><a href="#222104" label="[22:21:04]">&lt;Googulator&gt;</a></span><span class="message">how do we even get duplicates in the first place?</span></div><div class="line" id="222127"><span class="nick" style="color:#8dd3c7"><a href="#222127" label="[22:21:27]">&lt;Googulator&gt;</a></span><span class="message">writing twice to the same file?</span></div><div class="line" id="222225"><span class="nick" style="color:#6c3d55"><a href="#222225" label="[22:22:25]">&lt;rickmasters&gt;</a></span><span class="message">yes, and since the current file system is just a bunch of blobs squished together it can't really expand files easily, so I just avoid that</span></div><div class="line" id="222621"><span class="nick" style="color:#6c3d55"><a href="#222621" label="[22:26:21]">&lt;rickmasters&gt;</a></span><span class="message">I've thought of other methods like moving a re-opened file to the end of the file system, and shifting all the others down.</span></div><div class="line" id="222710"><span class="nick" style="color:#6c3d55"><a href="#222710" label="[22:27:10]">&lt;rickmasters&gt;</a></span><span class="message">I've tried to keep the file system as simple as possible.</span></div><div class="line" id="222747"><span class="nick" style="color:#6c3d55"><a href="#222747" label="[22:27:47]">&lt;rickmasters&gt;</a></span><span class="message">The current design doesn't allow writing to more than one open file at a time and miraculously that doesn't happen,</span></div><div class="line" id="222806"><span class="nick" style="color:#6c3d55"><a href="#222806" label="[22:28:06]">&lt;rickmasters&gt;</a></span><span class="message">except for one place in tcc which I was able to easily patch around.</span></div><div class="line" id="222829"><span class="nick" style="color:#8dd3c7"><a href="#222829" label="[22:28:29]">&lt;Googulator&gt;</a></span><span class="message">We could do something similar to FAT's handling of deleted files</span></div><div class="line" id="222903"><span class="nick" style="color:#8dd3c7"><a href="#222903" label="[22:29:03]">&lt;Googulator&gt;</a></span><span class="message">since all filenames, as stored now, begin with a slash - just erase the slash when a file entry is no longer valid</span></div><div class="line" id="222914"><span class="nick" style="color:#8dd3c7"><a href="#222914" label="[22:29:14]">&lt;Googulator&gt;</a></span><span class="message">doesn't free the space, but avoids duplicates</span></div><div class="line" id="222920"><span class="nick" style="color:#8dd3c7"><a href="#222920" label="[22:29:20]">&lt;Googulator&gt;</a></span><span class="message">and makes unlink() possible</span></div><div class="line" id="223039"><span class="nick" style="color:#6c3d55"><a href="#223039" label="[22:30:39]">&lt;rickmasters&gt;</a></span><span class="message">It's all a balance between requirements and complexity. An argument can be made to defer doings stuff like unlink and ls until we have a real OS.</span></div><div class="line" id="223058"><span class="nick" style="color:#6c3d55"><a href="#223058" label="[22:30:58]">&lt;rickmasters&gt;</a></span><span class="message">s/OS/kernel</span></div><div class="line" id="223128"><span class="nick" style="color:#8dd3c7"><a href="#223128" label="[22:31:28]">&lt;Googulator&gt;</a></span><span class="message">my goal with this is to get rid of fiwix_file_list.txt</span></div><div class="line" id="223306"><span class="nick" style="color:#6c3d55"><a href="#223306" label="[22:33:06]">&lt;rickmasters&gt;</a></span><span class="message">Once the code is easy enough to write (after building a good compiler) stuff can also be done in user land by just accessing the kernel memory directly.</span></div><div class="line" id="223356"><span class="nick" style="color:#8dd3c7"><a href="#223356" label="[22:33:56]">&lt;Googulator&gt;</a></span><span class="message">right, make_fiwix_initrd could just parse the FS data structures</span></div><div class="line" id="223520"><span class="nick" style="color:#6c3d55"><a href="#223520" label="[22:35:20]">&lt;rickmasters&gt;</a></span><span class="message">See kexec-fiwix which finds /boot/fiwix.ext2 by directly searching the kernel memory file system entries.</span></div><div class="line" id="223531"><span class="nick" style="color:#8dd3c7"><a href="#223531" label="[22:35:31]">&lt;Googulator&gt;</a></span><span class="message">speaking of which, what would be a future-proof way of doig <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/lwext4-1.0.0-lb1/files/make_fiwix_initrd.c#L206">https://github.com/fosslinux/live-bootstrap/blob/master/steps/lwext4-1.0.0-lb1/files/make_fiwix_initrd.c#L206</a>  ?</span></div><div class="line" id="223634"><span class="nick" style="color:#8dd3c7"><a href="#223634" label="[22:36:34]">&lt;Googulator&gt;</a></span><span class="message">0x7F8D was valid for the version of builder-hex0 included in the kernel-bootstrap subdirectory of LB, but it changes with each commit</span></div><div class="line" id="223651"><span class="nick" style="color:#6c3d55"><a href="#223651" label="[22:36:51]">&lt;rickmasters&gt;</a></span><span class="message">Oh, ugly. Forgot about that.</span></div><div class="line" id="223728"><span class="nick" style="color:#8dd3c7"><a href="#223728" label="[22:37:28]">&lt;Googulator&gt;</a></span><span class="message">kexec-fiwix uses fopen, btw</span></div><div class="line" id="223806"><span class="nick" style="color:#8dd3c7"><a href="#223806" label="[22:38:06]">&lt;Googulator&gt;</a></span><span class="message">oh, I see what you mean</span></div><div class="line" id="223809"><span class="nick" style="color:#8dd3c7"><a href="#223809" label="[22:38:09]">&lt;Googulator&gt;</a></span><span class="message">the initrd</span></div><div class="line" id="224156"><span class="nick" style="color:#6c3d55"><a href="#224156" label="[22:41:56]">&lt;rickmasters&gt;</a></span><span class="message">So, luckily it looks like the code from make_fiwix_initrd you pointed to is informational only.</span></div><div class="line" id="224211"><span class="nick" style="color:#6c3d55"><a href="#224211" label="[22:42:11]">&lt;rickmasters&gt;</a></span><span class="message">I think I was using it to make sure I wasn't exceeding memory limits.</span></div><div class="line" id="224311"><span class="nick" style="color:#6c3d55"><a href="#224311" label="[22:43:11]">&lt;rickmasters&gt;</a></span><span class="message">If I wanted to rewrite that I could search the file table after opening the file and get the location that way.</span></div><div class="line" id="224340"><span class="nick" style="color:#6c3d55"><a href="#224340" label="[22:43:40]">&lt;rickmasters&gt;</a></span><span class="message">Or it could just be removed.</span></div><div class="line" id="230000"><span class="nick" style="color:#6c3d55"><a href="#230000" label="[23:00:00]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: if unlink zero'd the filename and we pre-emptively unlink on opening files for write, then there wouldn't be duplicates.</span></div><br /></div></body></html>