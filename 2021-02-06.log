<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-06.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000101"><span class="nick" style="color:#389600"><a href="#000101" label="[00:01:01]">&lt;Hagfish&gt;</a></span><span class="message">--magic '\x7f\x45\x4c\...</span></div><div class="line" id="000115"><span class="nick" style="color:#389600"><a href="#000115" label="[00:01:15]">&lt;Hagfish&gt;</a></span><span class="message">err, is that a convention for specifying magic?  (i don't know, sorry, i'm not a wizard)</span></div><div class="line" id="000154"><span class="nick" style="color:#389600"><a href="#000154" label="[00:01:54]">&lt;Hagfish&gt;</a></span><span class="message">it seems like, if it's not meant to be understood (in place), it would make sense to have a more compact and selectable form</span></div><div class="line" id="000337"><span class="nick" style="color:#8dd3c7"><a href="#000337" label="[00:03:37]">&lt;fossy&gt;</a></span><span class="message">OriansJ: is there any chance we might get a M2-Planet 2 (?) release or something soon?</span></div><div class="line" id="000354"><span class="nick" style="color:#8dd3c7"><a href="#000354" label="[00:03:54]">&lt;fossy&gt;</a></span><span class="message">mainly so guix updates and wip-m2 updates</span></div><div class="line" id="000403"><span class="nick" style="color:#8dd3c7"><a href="#000403" label="[00:04:03]">&lt;fossy&gt;</a></span><span class="message">cause then i can update live-bootstrap too</span></div><div class="line" id="000734"><span class="nick" style="color:#2e2a4a"><a href="#000734" label="[00:07:34]">&lt;stikonas&gt;</a></span><span class="message">fossy: argh, I copy pasted part of your sentence and there is a typo</span></div><div class="line" id="000738"><span class="nick" style="color:#2e2a4a"><a href="#000738" label="[00:07:38]">&lt;stikonas&gt;</a></span><span class="message">artificats...</span></div><div class="line" id="000802"><span class="nick" style="color:#2e2a4a"><a href="#000802" label="[00:08:02]">&lt;stikonas&gt;</a></span><span class="message">(also scan.l can be backticked...)</span></div><div class="line" id="000809"><span class="nick" style="color:#8dd3c7"><a href="#000809" label="[00:08:09]">&lt;fossy&gt;</a></span><span class="message">stikonas: all good lol, i'll fix</span></div><div class="line" id="000852"><span class="nick" style="color:#2e2a4a"><a href="#000852" label="[00:08:52]">&lt;stikonas&gt;</a></span><span class="message">we can probably move diffutils to the end too...</span></div><div class="line" id="001328"><span class="nick" style="color:#8dd3c7"><a href="#001328" label="[00:13:28]">&lt;fossy&gt;</a></span><span class="message">yeah probably</span></div><div class="line" id="001511"><span class="nick" style="color:#8dd3c7"><a href="#001511" label="[00:15:11]">&lt;fossy&gt;</a></span><span class="message">oops i violated my own rule :|</span></div><div class="line" id="001519"><span class="nick" style="color:#2e2a4a"><a href="#001519" label="[00:15:19]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="001525"><span class="nick" style="color:#8dd3c7"><a href="#001525" label="[00:15:25]">&lt;fossy&gt;</a></span><span class="message">no pushing to master</span></div><div class="line" id="001527"><span class="nick" style="color:#2e2a4a"><a href="#001527" label="[00:15:27]">&lt;stikonas&gt;</a></span><span class="message">oh, direct commit...</span></div><div class="line" id="001529"><span class="nick" style="color:#8dd3c7"><a href="#001529" label="[00:15:29]">&lt;fossy&gt;</a></span><span class="message">oh well it wasnt code</span></div><div class="line" id="001531"><span class="nick" style="color:#2e2a4a"><a href="#001531" label="[00:15:31]">&lt;stikonas&gt;</a></span><span class="message">well, it's just README...</span></div><div class="line" id="001543"><span class="nick" style="color:#2e2a4a"><a href="#001543" label="[00:15:43]">&lt;stikonas&gt;</a></span><span class="message">and I suggested the change...</span></div><div class="line" id="001551"><span class="nick" style="color:#8dd3c7"><a href="#001551" label="[00:15:51]">&lt;fossy&gt;</a></span><span class="message">yea</span></div><div class="line" id="001554"><span class="nick" style="color:#2e2a4a"><a href="#001554" label="[00:15:54]">&lt;stikonas&gt;</a></span><span class="message">so might as well say reviewed</span></div><div class="line" id="001555"><span class="nick" style="color:#8dd3c7"><a href="#001555" label="[00:15:55]">&lt;fossy&gt;</a></span><span class="message">its fine</span></div><div class="line" id="001652"><span class="nick" style="color:#2e2a4a"><a href="#001652" label="[00:16:52]">&lt;stikonas&gt;</a></span><span class="message">ok, cmp and diff build just fine with musl</span></div><div class="line" id="001706"><span class="nick" style="color:#2e2a4a"><a href="#001706" label="[00:17:06]">&lt;stikonas&gt;</a></span><span class="message">(with minor adjustments)</span></div><div class="line" id="001716"><span class="nick" style="color:#2e2a4a"><a href="#001716" label="[00:17:16]">&lt;stikonas&gt;</a></span><span class="message">although, to do PR, once needs to write makefile...</span></div><div class="line" id="001721"><span class="nick" style="color:#2e2a4a"><a href="#001721" label="[00:17:21]">&lt;stikonas&gt;</a></span><span class="message">instead of kaem script</span></div><div class="line" id="001743"><span class="nick" style="color:#2e2a4a"><a href="#001743" label="[00:17:43]">&lt;stikonas&gt;</a></span><span class="message">hmm, not that many mes libc binaries will be left then</span></div><div class="line" id="001800"><span class="nick" style="color:#8dd3c7"><a href="#001800" label="[00:18:00]">&lt;fossy&gt;</a></span><span class="message">stikonas: do you agree that we should license patch files under the same license as the project as which we are patching?</span></div><div class="line" id="001806"><span class="nick" style="color:#8dd3c7"><a href="#001806" label="[00:18:06]">&lt;fossy&gt;</a></span><span class="message">or should we licens ethem under GPLv3</span></div><div class="line" id="001807"><span class="nick" style="color:#2e2a4a"><a href="#001807" label="[00:18:07]">&lt;stikonas&gt;</a></span><span class="message">yeah</span></div><div class="line" id="001810"><span class="nick" style="color:#2e2a4a"><a href="#001810" label="[00:18:10]">&lt;stikonas&gt;</a></span><span class="message">same license</span></div><div class="line" id="001815"><span class="nick" style="color:#8dd3c7"><a href="#001815" label="[00:18:15]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="001821"><span class="nick" style="color:#2e2a4a"><a href="#001821" label="[00:18:21]">&lt;stikonas&gt;</a></span><span class="message">otherwise patching that software</span></div><div class="line" id="001822"><span class="nick" style="color:#8dd3c7"><a href="#001822" label="[00:18:22]">&lt;fossy&gt;</a></span><span class="message">it makes things much simpler in terms of copyright</span></div><div class="line" id="001828"><span class="nick" style="color:#2e2a4a"><a href="#001828" label="[00:18:28]">&lt;stikonas&gt;</a></span><span class="message">is very unclear</span></div><div class="line" id="001829"><span class="nick" style="color:#2e2a4a"><a href="#001829" label="[00:18:29]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="001833"><span class="nick" style="color:#8dd3c7"><a href="#001833" label="[00:18:33]">&lt;fossy&gt;</a></span><span class="message">and especially for cddl</span></div><div class="line" id="001836"><span class="nick" style="color:#2e2a4a"><a href="#001836" label="[00:18:36]">&lt;stikonas&gt;</a></span><span class="message">yeah</span></div><div class="line" id="001848"><span class="nick" style="color:#2e2a4a"><a href="#001848" label="[00:18:48]">&lt;stikonas&gt;</a></span><span class="message">well, cddl binaries are still non-redistributable</span></div><div class="line" id="001858"><span class="nick" style="color:#2e2a4a"><a href="#001858" label="[00:18:58]">&lt;stikonas&gt;</a></span><span class="message">although, I've removed them from /bin now</span></div><div class="line" id="001906"><span class="nick" style="color:#8dd3c7"><a href="#001906" label="[00:19:06]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="001907"><span class="nick" style="color:#2e2a4a"><a href="#001907" label="[00:19:07]">&lt;stikonas&gt;</a></span><span class="message">(they are still in build diretories though)</span></div><div class="line" id="002011"><span class="nick" style="color:#2e2a4a"><a href="#002011" label="[00:20:11]">&lt;stikonas&gt;</a></span><span class="message">ok, I think I'll try to move diffutils to the end, m4 is probably too much for today :(</span></div><div class="line" id="002053"><span class="nick" style="color:#2e2a4a"><a href="#002053" label="[00:20:53]">&lt;stikonas&gt;</a></span><span class="message">and I think then only sed tar gzip patch make bzip2 will use mes libc</span></div><div class="line" id="002205"><span class="nick" style="color:#8dd3c7"><a href="#002205" label="[00:22:05]">&lt;fossy&gt;</a></span><span class="message">dont push yourself to do too much, slow and steady progress wins the race :D</span></div><div class="line" id="002325"><span class="nick" style="color:#2e2a4a"><a href="#002325" label="[00:23:25]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="002344"><span class="nick" style="color:#2e2a4a"><a href="#002344" label="[00:23:44]">&lt;stikonas&gt;</a></span><span class="message">although, I think we are close to the spot where things should be come easy...</span></div><div class="line" id="002354"><span class="nick" style="color:#8dd3c7"><a href="#002354" label="[00:23:54]">&lt;fossy&gt;</a></span><span class="message">stikonas: we have done most of the hard work, yes</span></div><div class="line" id="002404"><span class="nick" style="color:#2e2a4a"><a href="#002404" label="[00:24:04]">&lt;stikonas&gt;</a></span><span class="message">well, bison and then perl...</span></div><div class="line" id="002405"><span class="nick" style="color:#8dd3c7"><a href="#002405" label="[00:24:05]">&lt;fossy&gt;</a></span><span class="message">you have done some of the most vital work so thank you for that :D</span></div><div class="line" id="002418"><span class="nick" style="color:#2e2a4a"><a href="#002418" label="[00:24:18]">&lt;stikonas&gt;</a></span><span class="message">well, this bison bootstrapping was much harder than I thought</span></div><div class="line" id="002424"><span class="nick" style="color:#8dd3c7"><a href="#002424" label="[00:24:24]">&lt;fossy&gt;</a></span><span class="message">yeah :|</span></div><div class="line" id="002426"><span class="nick" style="color:#2e2a4a"><a href="#002426" label="[00:24:26]">&lt;stikonas&gt;</a></span><span class="message">and still not done</span></div><div class="line" id="002432"><span class="nick" style="color:#8dd3c7"><a href="#002432" label="[00:24:32]">&lt;fossy&gt;</a></span><span class="message">but we have a path no</span></div><div class="line" id="002435"><span class="nick" style="color:#8dd3c7"><a href="#002435" label="[00:24:35]">&lt;fossy&gt;</a></span><span class="message">w</span></div><div class="line" id="002437"><span class="nick" style="color:#8dd3c7"><a href="#002437" label="[00:24:37]">&lt;fossy&gt;</a></span><span class="message">thanks to gio</span></div><div class="line" id="002458"><span class="nick" style="color:#2e2a4a"><a href="#002458" label="[00:24:58]">&lt;stikonas&gt;</a></span><span class="message">but we have more stuff now too, musl seems to be working</span></div><div class="line" id="002512"><span class="nick" style="color:#8dd3c7"><a href="#002512" label="[00:25:12]">&lt;fossy&gt;</a></span><span class="message">i reckon we might be able to skip gcc 2 if we are lucky</span></div><div class="line" id="002532"><span class="nick" style="color:#8dd3c7"><a href="#002532" label="[00:25:32]">&lt;fossy&gt;</a></span><span class="message">cause musl</span></div><div class="line" id="002544"><span class="nick" style="color:#8dd3c7"><a href="#002544" label="[00:25:44]">&lt;fossy&gt;</a></span><span class="message">hmm</span></div><div class="line" id="002834"><span class="nick" style="color:#2e2a4a"><a href="#002834" label="[00:28:34]">&lt;stikonas&gt;</a></span><span class="message">yeah, I thought so too</span></div><div class="line" id="002846"><span class="nick" style="color:#2e2a4a"><a href="#002846" label="[00:28:46]">&lt;stikonas&gt;</a></span><span class="message">gcc 2 was chosen for mes libc if I recall correctly</span></div><div class="line" id="002906"><span class="nick" style="color:#2e2a4a"><a href="#002906" label="[00:29:06]">&lt;stikonas&gt;</a></span><span class="message">we might not even need glibc...</span></div><div class="line" id="002916"><span class="nick" style="color:#2e2a4a"><a href="#002916" label="[00:29:16]">&lt;stikonas&gt;</a></span><span class="message">the musl we are using is much newer</span></div><div class="line" id="002928"><span class="nick" style="color:#8dd3c7"><a href="#002928" label="[00:29:28]">&lt;fossy&gt;</a></span><span class="message">hm, that would mean quite a bit of patching, but is plausible</span></div><div class="line" id="002948"><span class="nick" style="color:#2e2a4a"><a href="#002948" label="[00:29:48]">&lt;stikonas&gt;</a></span><span class="message">hmm, then maybe we can downgrade to old glibc...</span></div><div class="line" id="003018"><span class="nick" style="color:#8dd3c7"><a href="#003018" label="[00:30:18]">&lt;fossy&gt;</a></span><span class="message">heres the kind of diff we would need for gcc 4.7.3 musl</span></div><div class="line" id="003021"><span class="nick" style="color:#8dd3c7"><a href="#003021" label="[00:30:21]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://ttm.sh/2I0.txt">https://ttm.sh/2I0.txt</a> </span></div><div class="line" id="003021"><span class="nick" style="color:#2e2a4a"><a href="#003021" label="[00:30:21]">&lt;stikonas&gt;</a></span><span class="message">anyway, that's towards the end...</span></div><div class="line" id="003027"><span class="nick" style="color:#8dd3c7"><a href="#003027" label="[00:30:27]">&lt;fossy&gt;</a></span><span class="message">taken from git history of void linux</span></div><div class="line" id="003049"><span class="nick" style="color:#2e2a4a"><a href="#003049" label="[00:30:49]">&lt;stikonas&gt;</a></span><span class="message">oh, but if we skip gcc 2 we probably need this patch</span></div><div class="line" id="003058"><span class="nick" style="color:#8dd3c7"><a href="#003058" label="[00:30:58]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="003104"><span class="nick" style="color:#2e2a4a"><a href="#003104" label="[00:31:04]">&lt;stikonas&gt;</a></span><span class="message">that's not too bad</span></div><div class="line" id="003107"><span class="nick" style="color:#2e2a4a"><a href="#003107" label="[00:31:07]">&lt;stikonas&gt;</a></span><span class="message">for gcc</span></div><div class="line" id="003126"><span class="nick" style="color:#2e2a4a"><a href="#003126" label="[00:31:26]">&lt;stikonas&gt;</a></span><span class="message">but maybe like you said if we switch to glibc it will mean less patching</span></div><div class="line" id="003130"><span class="nick" style="color:#2e2a4a"><a href="#003130" label="[00:31:30]">&lt;stikonas&gt;</a></span><span class="message">later</span></div><div class="line" id="003136"><span class="nick" style="color:#2e2a4a"><a href="#003136" label="[00:31:36]">&lt;stikonas&gt;</a></span><span class="message">but that's after gcc anyway</span></div><div class="line" id="003143"><span class="nick" style="color:#8dd3c7"><a href="#003143" label="[00:31:43]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="003203"><span class="nick" style="color:#6b8072"><a href="#003203" label="[00:32:03]">*</a></span><span class="message">fossy &lt;3 musl but is not convinced it's the best long term option for later parts of live-bootstrap</span></div><div class="line" id="003226"><span class="nick" style="color:#2e2a4a"><a href="#003226" label="[00:32:26]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'm not convinced either...</span></div><div class="line" id="003243"><span class="nick" style="color:#2e2a4a"><a href="#003243" label="[00:32:43]">&lt;stikonas&gt;</a></span><span class="message">I was only saying that cause we'll be doing in some sense &quot;downgrade&quot; in time</span></div><div class="line" id="005135"><span class="nick" style="color:#2e2a4a"><a href="#005135" label="[00:51:35]">&lt;stikonas&gt;</a></span><span class="message">in principle I think we now have everything to get interactive bash...</span></div><div class="line" id="005143"><span class="nick" style="color:#2e2a4a"><a href="#005143" label="[00:51:43]">&lt;stikonas&gt;</a></span><span class="message">although, that's a bit of extra work</span></div><div class="line" id="005154"><span class="nick" style="color:#2e2a4a"><a href="#005154" label="[00:51:54]">&lt;stikonas&gt;</a></span><span class="message">now it should be possible to build libreadline...</span></div><div class="line" id="005216"><span class="nick" style="color:#2e2a4a"><a href="#005216" label="[00:52:16]">&lt;stikonas&gt;</a></span><span class="message">and populate /dev /proc, /dev/pts</span></div><div class="line" id="005954"><span class="nick" style="color:#389600"><a href="#005954" label="[00:59:54]">&lt;Hagfish&gt;</a></span><span class="message">stikonas?  more like stonksinas!</span></div><div class="line" id="010006"><span class="nick" style="color:#389600"><a href="#010006" label="[01:00:06]">&lt;Hagfish&gt;</a></span><span class="message">i don't even know what that means, i'm sorry :)</span></div><div class="line" id="010310"><span class="nick" style="color:#80b1d3"><a href="#010310" label="[01:03:10]">&lt;stikonas[m]&gt;</a></span><span class="message">I only did some scripting work... That's not particularly hard, just need some trial and error</span></div><div class="line" id="010405"><span class="nick" style="color:#389600"><a href="#010405" label="[01:04:05]">&lt;Hagfish&gt;</a></span><span class="message">like the plumber hitting the pipe with his hammer, i think a lot of expertise had to go into &quot;just some trial and error&quot;</span></div><div class="line" id="011708"><span class="nick" style="color:#234e69"><a href="#011708" label="[01:17:08]">&lt;pder&gt;</a></span><span class="message">stikonas: what issues are you finding with m4?</span></div><div class="line" id="011934"><span class="nick" style="color:#2e2a4a"><a href="#011934" label="[01:19:34]">&lt;stikonas&gt;</a></span><span class="message">hmm, mostly some troubles building gnulib folder (lib/)</span></div><div class="line" id="012120"><span class="nick" style="color:#2e2a4a"><a href="#012120" label="[01:21:20]">&lt;stikonas&gt;</a></span><span class="message">didn't spend too much time on it though</span></div><div class="line" id="012134"><span class="nick" style="color:#2e2a4a"><a href="#012134" label="[01:21:34]">&lt;stikonas&gt;</a></span><span class="message">(went to convert diffutils to musl <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/31">https://github.com/fosslinux/live-bootstrap/pull/31</a>) </span></div><div class="line" id="012152"><span class="nick" style="color:#2e2a4a"><a href="#012152" label="[01:21:52]">&lt;stikonas&gt;</a></span><span class="message">(and makefile instead of kaem)</span></div><div class="line" id="012328"><span class="nick" style="color:#234e69"><a href="#012328" label="[01:23:28]">&lt;pder&gt;</a></span><span class="message">were you trying with m4 1.4.6?</span></div><div class="line" id="012334"><span class="nick" style="color:#2e2a4a"><a href="#012334" label="[01:23:34]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="012348"><span class="nick" style="color:#2e2a4a"><a href="#012348" label="[01:23:48]">&lt;stikonas&gt;</a></span><span class="message">also newest using nbs makefile</span></div><div class="line" id="012354"><span class="nick" style="color:#234e69"><a href="#012354" label="[01:23:54]">&lt;pder&gt;</a></span><span class="message">Ok, I was trying 1.4.16 only because configure recommended it</span></div><div class="line" id="012407"><span class="nick" style="color:#2e2a4a"><a href="#012407" label="[01:24:07]">&lt;stikonas&gt;</a></span><span class="message">oh, does it work?</span></div><div class="line" id="012416"><span class="nick" style="color:#2e2a4a"><a href="#012416" label="[01:24:16]">&lt;stikonas&gt;</a></span><span class="message">well, if you can get it working</span></div><div class="line" id="012421"><span class="nick" style="color:#2e2a4a"><a href="#012421" label="[01:24:21]">&lt;stikonas&gt;</a></span><span class="message">that's less work for me :)</span></div><div class="line" id="012430"><span class="nick" style="color:#234e69"><a href="#012430" label="[01:24:30]">&lt;pder&gt;</a></span><span class="message">not yet, ran into issues also in lib with regex</span></div><div class="line" id="012502"><span class="nick" style="color:#2e2a4a"><a href="#012502" label="[01:25:02]">&lt;stikonas&gt;</a></span><span class="message">yeah, could be similar issues</span></div><div class="line" id="012537"><span class="nick" style="color:#2e2a4a"><a href="#012537" label="[01:25:37]">&lt;stikonas&gt;</a></span><span class="message">some statements are not defined for some reason?</span></div><div class="line" id="012631"><span class="nick" style="color:#2e2a4a"><a href="#012631" label="[01:26:31]">&lt;stikonas&gt;</a></span><span class="message">I think I had some problems with RE_TRANSLATE_TYPE</span></div><div class="line" id="012639"><span class="nick" style="color:#2e2a4a"><a href="#012639" label="[01:26:39]">&lt;stikonas&gt;</a></span><span class="message">but I don't have build logs now</span></div><div class="line" id="012958"><span class="nick" style="color:#6c3d55"><a href="#012958" label="[01:29:58]">&lt;OriansJ&gt;</a></span><span class="message">fossy: I was planning to do a release once I completed the M2libc conversion. Which I should get done this weekend, wife and son willing of course.</span></div><div class="line" id="013058"><span class="nick" style="color:#234e69"><a href="#013058" label="[01:30:58]">&lt;pder&gt;</a></span><span class="message">yes, same here.  I just found the m4 git repo.  The history might help me understand how to get the build working</span></div><div class="line" id="013207"><span class="nick" style="color:#234e69"><a href="#013207" label="[01:32:07]">&lt;pder&gt;</a></span><span class="message">OriansJ, I started converting blynn-compiler over to use M2libc.  The initial stages are working with pack_blobs, but it fails pretty early on after that, and I havent figured out why</span></div><div class="line" id="013310"><span class="nick" style="color:#6c3d55"><a href="#013310" label="[01:33:10]">&lt;OriansJ&gt;</a></span><span class="message">pder: if any of the files are over 20MB I could be to blame</span></div><div class="line" id="013344"><span class="nick" style="color:#6c3d55"><a href="#013344" label="[01:33:44]">&lt;OriansJ&gt;</a></span><span class="message">as I #define BUFSIZ 0x140000 /* 20MB */</span></div><div class="line" id="013409"><span class="nick" style="color:#6c3d55"><a href="#013409" label="[01:34:09]">&lt;OriansJ&gt;</a></span><span class="message">(and yes #define works in M2-Planet now to a degree)</span></div><div class="line" id="013410"><span class="nick" style="color:#234e69"><a href="#013410" label="[01:34:10]">&lt;pder&gt;</a></span><span class="message">No, its actually very early.  ./bin/vm --raw blob/root -pb bootstrap -lf generated/parenthetically -o bin/raw_l</span></div><div class="line" id="013518"><span class="nick" style="color:#234e69"><a href="#013518" label="[01:35:18]">&lt;pder&gt;</a></span><span class="message">Oh, I wonder if the #define might be tripping me up</span></div><div class="line" id="013536"><span class="nick" style="color:#6c3d55"><a href="#013536" label="[01:35:36]">&lt;OriansJ&gt;</a></span><span class="message">definitely</span></div><div class="line" id="013642"><span class="nick" style="color:#234e69"><a href="#013642" label="[01:36:42]">&lt;pder&gt;</a></span><span class="message">If I have #define CELL_SIZE 1\n//CONSTANT CELL_SIZE sizeof(unsigned)  - what is CELL_SIZE?</span></div><div class="line" id="013714"><span class="nick" style="color:#6c3d55"><a href="#013714" label="[01:37:14]">&lt;OriansJ&gt;</a></span><span class="message">1 outside of bootstrap-mode</span></div><div class="line" id="013745"><span class="nick" style="color:#234e69"><a href="#013745" label="[01:37:45]">&lt;pder&gt;</a></span><span class="message">I bet thats it.</span></div><div class="line" id="013805"><span class="nick" style="color:#234e69"><a href="#013805" label="[01:38:05]">&lt;pder&gt;</a></span><span class="message">So I should also be linking with libc-full.M1?</span></div><div class="line" id="013818"><span class="nick" style="color:#6c3d55"><a href="#013818" label="[01:38:18]">&lt;OriansJ&gt;</a></span><span class="message">yes</span></div><div class="line" id="013847"><span class="nick" style="color:#6c3d55"><a href="#013847" label="[01:38:47]">&lt;OriansJ&gt;</a></span><span class="message">and let me double check on the #if you would probably want to ensure M2-Planet proper CELL_SIZE</span></div><div class="line" id="014308"><span class="nick" style="color:#6c3d55"><a href="#014308" label="[01:43:08]">&lt;OriansJ&gt;</a></span><span class="message">hmm it looks like yt didn't include an _M2_ variable for #if to flag on; I guess I am going to need to add that and possibly support for -Dfoo=1 sort of things</span></div><div class="line" id="015952"><span class="nick" style="color:#2e2a4a"><a href="#015952" label="[01:59:52]">&lt;stikonas&gt;</a></span><span class="message">pder: also keep in mind that whenever I used alloca.c on musl (on older m4), it was breaking flex bootstrap, so for now I kept m4 before musl</span></div><div class="line" id="020402"><span class="nick" style="color:#234e69"><a href="#020402" label="[02:04:02]">&lt;pder&gt;</a></span><span class="message">stikonas: interesting, i'll keep that in mind</span></div><div class="line" id="020425"><span class="nick" style="color:#80b1d3"><a href="#020425" label="[02:04:25]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe alloca defines with tcc were similarly broken</span></div><div class="line" id="020434"><span class="nick" style="color:#80b1d3"><a href="#020434" label="[02:04:34]">&lt;stikonas[m]&gt;</a></span><span class="message">To regex</span></div><div class="line" id="022026"><span class="nick" style="color:#234e69"><a href="#022026" label="[02:20:26]">&lt;pder&gt;</a></span><span class="message">Thanks, OriansJ: the CELL_SIZE #define seemed to be the problem</span></div><div class="line" id="022401"><span class="nick" style="color:#6c3d55"><a href="#022401" label="[02:24:01]">&lt;OriansJ&gt;</a></span><span class="message">pder: #if defined(__M2__) will be working on the next commit</span></div><div class="line" id="022746"><span class="nick" style="color:#234e69"><a href="#022746" label="[02:27:46]">&lt;pder&gt;</a></span><span class="message">great, thanks!</span></div><div class="line" id="024140"><span class="nick" style="color:#6c3d55"><a href="#024140" label="[02:41:40]">&lt;OriansJ&gt;</a></span><span class="message">pder: commit is now up</span></div><div class="line" id="024237"><span class="nick" style="color:#6c3d55"><a href="#024237" label="[02:42:37]">&lt;OriansJ&gt;</a></span><span class="message">probably should add support for -D foo=1 now that I made it easy for myself</span></div><div class="line" id="033615"><span class="nick" style="color:#6c3d55"><a href="#033615" label="[03:36:15]">&lt;OriansJ&gt;</a></span><span class="message">and support for -D var and -D var=val has been added to M2-Planet</span></div><div class="line" id="033648"><span class="nick" style="color:#8dd3c7"><a href="#033648" label="[03:36:48]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: i didn't bother with readline bc guix didn't use it and it didn't really matter (no interactive at the time)</span></div><div class="line" id="033704"><span class="nick" style="color:#8dd3c7"><a href="#033704" label="[03:37:04]">&lt;fossy&gt;</a></span><span class="message">OriansJ: ah, ok, very cool</span></div><div class="line" id="064655"><span class="nick" style="color:#6c3d55"><a href="#064655" label="[06:46:55]">&lt;OriansJ&gt;</a></span><span class="message">and knight-posix now is on M2libc; all that remains is x86</span></div><div class="line" id="073010"><span class="nick" style="color:#d9d9d9"><a href="#073010" label="[07:30:10]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: stikonas: I added checksumming: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/30/commits/2de4a40b79d84f7f552262d8e9b59f329468e92b">https://github.com/fosslinux/live-bootstrap/pull/30/commits/2de4a40b79d84f7f552262d8e9b59f329468e92b</a>  - somethings is fishy with the PR (needs rebasing?) but you get the idea and can give comments</span></div><div class="line" id="074254"><span class="nick" style="color:#d9d9d9"><a href="#074254" label="[07:42:54]">&lt;gforce_de1977&gt;</a></span><span class="message">sorry, PR is <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/30">https://github.com/fosslinux/live-bootstrap/pull/30</a>  (now including the checksums)</span></div><div class="line" id="092316"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="104327"><span class="nick" style="color:#80b1d3"><a href="#104327" label="[10:43:27]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: well, guix can't build readline anyway because mes libc is not sufficient</span></div><div class="line" id="110627"><span class="nick" style="color:#bc80bd"><a href="#110627" label="[11:06:27]">&lt;janneke&gt;</a></span><span class="message">stikonas[m]: in practice you're right, but it's somewhat the other way around</span></div><div class="line" id="110659"><span class="nick" style="color:#bc80bd"><a href="#110659" label="[11:06:59]">&lt;janneke&gt;</a></span><span class="message">the mes c library was created to be the absolute minimum required to bootstrap mes</span></div><div class="line" id="110720"><span class="nick" style="color:#bc80bd"><a href="#110720" label="[11:07:20]">&lt;janneke&gt;</a></span><span class="message">then, it was enhanced to support bootstrapping tcc</span></div><div class="line" id="110731"><span class="nick" style="color:#bc80bd"><a href="#110731" label="[11:07:31]">&lt;janneke&gt;</a></span><span class="message">and later, it was enhanced to bootstrap gcc-2.95</span></div><div class="line" id="110748"><span class="nick" style="color:#bc80bd"><a href="#110748" label="[11:07:48]">&lt;janneke&gt;</a></span><span class="message">it's a *feature* that it cannot build much more ;-)</span></div><div class="line" id="112333"><span class="nick" style="color:#2e2a4a"><a href="#112333" label="[11:23:33]">&lt;stikonas&gt;</a></span><span class="message">janneke: oh ok. Well, we are thinking of trying to go directly to gcc-4 in live-bootstrap</span></div><div class="line" id="112356"><span class="nick" style="color:#2e2a4a"><a href="#112356" label="[11:23:56]">&lt;stikonas&gt;</a></span><span class="message">now that we have more complete C library</span></div><div class="line" id="113857"><span class="nick" style="color:#bc80bd"><a href="#113857" label="[11:38:57]">&lt;janneke&gt;</a></span><span class="message">yes, the mes c library will need to be enhanced once we start targeting risc-v or powerpc</span></div><div class="line" id="113918"><span class="nick" style="color:#bc80bd"><a href="#113918" label="[11:39:18]">&lt;janneke&gt;</a></span><span class="message">we'll want to skip gcc-2.95 and target gcc-4</span></div><div class="line" id="113958"><span class="nick" style="color:#d9d9d9"><a href="#113958" label="[11:39:58]">&lt;gforce_de1977&gt;</a></span><span class="message">janneke: i want to encourage you to use this picture in your slides: <a rel="nofollow" href="https://en.wikipedia.org/wiki/M%C3%BCnchhausen_trilemma">https://en.wikipedia.org/wiki/M%C3%BCnchhausen_trilemma</a> </span></div><div class="line" id="114046"><span class="nick" style="color:#bc80bd"><a href="#114046" label="[11:40:46]">&lt;janneke&gt;</a></span><span class="message">gforce_de1977: thanks, that's a nice image ;-)</span></div><div class="line" id="114109"><span class="nick" style="color:#bc80bd"><a href="#114109" label="[11:41:09]">&lt;janneke&gt;</a></span><span class="message">maybe next time; the video had to be made two weeks ago</span></div><div class="line" id="114123"><span class="nick" style="color:#d9d9d9"><a href="#114123" label="[11:41:23]">&lt;gforce_de1977&gt;</a></span><span class="message">janneke: thats ok 8-)</span></div><div class="line" id="114335"><span class="nick" style="color:#8dd3c7"><a href="#114335" label="[11:43:35]">&lt;fossy&gt;</a></span><span class="message">janneke: well we used mes c library to go to musl</span></div><div class="line" id="114433"><span class="nick" style="color:#8dd3c7"><a href="#114433" label="[11:44:33]">&lt;fossy&gt;</a></span><span class="message">janneke: but imo that scope is fine for the most part, as you said</span></div><div class="line" id="114435"><span class="nick" style="color:#bc80bd"><a href="#114435" label="[11:44:35]">&lt;janneke&gt;</a></span><span class="message">fossy: hmm...</span></div><div class="line" id="114503"><span class="nick" style="color:#bc80bd"><a href="#114503" label="[11:45:03]">&lt;janneke&gt;</a></span><span class="message">why musl, what a weird choice?</span></div><div class="line" id="114526"><span class="nick" style="color:#bc80bd"><a href="#114526" label="[11:45:26]">&lt;janneke&gt;</a></span><span class="message">eh, i don't want to sound overly critical</span></div><div class="line" id="114538"><span class="nick" style="color:#bc80bd"><a href="#114538" label="[11:45:38]">&lt;janneke&gt;</a></span><span class="message">anything is &quot;allowed&quot; to &quot;get things going&quot;</span></div><div class="line" id="114622"><span class="nick" style="color:#8dd3c7"><a href="#114622" label="[11:46:22]">&lt;fossy&gt;</a></span><span class="message">janneke: musl was chosen because it has a simple build system</span></div><div class="line" id="114631"><span class="nick" style="color:#8dd3c7"><a href="#114631" label="[11:46:31]">&lt;fossy&gt;</a></span><span class="message">i have an explicit goal of not using pregenerated configure scripts</span></div><div class="line" id="114655"><span class="nick" style="color:#8dd3c7"><a href="#114655" label="[11:46:55]">&lt;fossy&gt;</a></span><span class="message">musl's is readable and handwritten so we used it until we can get to glibc</span></div><div class="line" id="114714"><span class="nick" style="color:#8dd3c7"><a href="#114714" label="[11:47:14]">&lt;fossy&gt;</a></span><span class="message">glibc (obviosuly) uses autotools so we are still working on that autotools stack</span></div><div class="line" id="114721"><span class="nick" style="color:#bc80bd"><a href="#114721" label="[11:47:21]">&lt;janneke&gt;</a></span><span class="message">aha, right</span></div><div class="line" id="114750"><span class="nick" style="color:#bc80bd"><a href="#114750" label="[11:47:50]">&lt;janneke&gt;</a></span><span class="message">there are many considerations and things that need to be fixed, of course</span></div><div class="line" id="114756"><span class="nick" style="color:#8dd3c7"><a href="#114756" label="[11:47:56]">&lt;fossy&gt;</a></span><span class="message">and as you are saying mes c library is just the absolute minimum, since gcc is so large it happens to mostly work for other pieces of software ;D</span></div><div class="line" id="114838"><span class="nick" style="color:#8dd3c7"><a href="#114838" label="[11:48:38]">&lt;fossy&gt;</a></span><span class="message">oh, yeah, of course, it's not cut and dry</span></div><div class="line" id="114925"><span class="nick" style="color:#8dd3c7"><a href="#114925" label="[11:49:25]">&lt;fossy&gt;</a></span><span class="message">as i was saying to stikonas earlier musl isn't the most compatible of things from all time even though it is compliant, and especially back in the 00's when gnu software in particular was by no means standards compliant (relying on extensions etc)</span></div><div class="line" id="115304"><span class="nick" style="color:#2e2a4a"><a href="#115304" label="[11:53:04]">&lt;stikonas&gt;</a></span><span class="message">well, so far musl works alright for us even for old software</span></div><div class="line" id="115525"><span class="nick" style="color:#2e2a4a"><a href="#115525" label="[11:55:25]">&lt;stikonas&gt;</a></span><span class="message">it usually needs slightly different CFLAGS but that's expected</span></div><div class="line" id="115756"><span class="nick" style="color:#bc80bd"><a href="#115756" label="[11:57:56]">&lt;janneke&gt;</a></span><span class="message">as long as you're on linux, yeah</span></div><div class="line" id="115822"><span class="nick" style="color:#2e2a4a"><a href="#115822" label="[11:58:22]">&lt;stikonas&gt;</a></span><span class="message">yeah, maybe if you try hurd it will be more problematic</span></div><div class="line" id="115900"><span class="nick" style="color:#bc80bd"><a href="#115900" label="[11:59:00]">&lt;janneke&gt;</a></span><span class="message">obviously that's ultimately the goal for guix</span></div><div class="line" id="115948"><span class="nick" style="color:#bc80bd"><a href="#115948" label="[11:59:48]">&lt;janneke&gt;</a></span><span class="message">(and for mes)</span></div><div class="line" id="153416"><span class="nick" style="color:#6c3d55"><a href="#153416" label="[15:34:16]">&lt;OriansJ&gt;</a></span><span class="message">well that is the best thing about bootstrapping work, only the trivial to replace pieces ever hit the *DONE* stage, everything else will continue to change and evolve towards better solutions.</span></div><div class="line" id="153547"><span class="nick" style="color:#3c5b35"><a href="#153547" label="[15:35:47]">&lt;siraben&gt;</a></span><span class="message">anyone working on something like live-bootstrap but formalized in Nix?</span></div><div class="line" id="153619"><span class="nick" style="color:#3c5b35"><a href="#153619" label="[15:36:19]">&lt;siraben&gt;</a></span><span class="message">I have some components (kaem, mes, stage0, mescc-tools-seed, mescc) with corresponding Nix expressions if that is useful to anyone</span></div><div class="line" id="153624"><span class="nick" style="color:#af8d2f"><a href="#153624" label="[15:36:24]">&lt;rain1&gt;</a></span><span class="message">no but that would be cool</span></div><div class="line" id="153628"><span class="nick" style="color:#3c5b35"><a href="#153628" label="[15:36:28]">&lt;siraben&gt;</a></span><span class="message">It's in the `pkgs/` folder in blynn-compiler</span></div><div class="line" id="153649"><span class="nick" style="color:#af8d2f"><a href="#153649" label="[15:36:49]">&lt;rain1&gt;</a></span><span class="message">maybe mention it in the nixos community</span></div><div class="line" id="153709"><span class="nick" style="color:#3c5b35"><a href="#153709" label="[15:37:09]">&lt;siraben&gt;</a></span><span class="message">I need to move it out into its own overlay at some point</span></div><div class="line" id="153910"><span class="nick" style="color:#3c5b35"><a href="#153910" label="[15:39:10]">&lt;siraben&gt;</a></span><span class="message">Upstreaming it to Nixpkgs would be interesting as well.</span></div><div class="line" id="154338"><span class="nick" style="color:#6c3d55"><a href="#154338" label="[15:43:38]">&lt;OriansJ&gt;</a></span><span class="message">which reminds me; I really need to find time to harmonize the M1 assembly in M2libc and M2-Planet with MesCC to it can Leverage</span></div><div class="line" id="154344"><span class="nick" style="color:#6c3d55"><a href="#154344" label="[15:43:44]">&lt;OriansJ&gt;</a></span><span class="message">M2libc</span></div><div class="line" id="154544"><span class="nick" style="color:#6c3d55"><a href="#154544" label="[15:45:44]">&lt;OriansJ&gt;</a></span><span class="message">and thus enable to solve MesCC Porting problems in advance and giving M2-Planet a more C standard Library.</span></div><div class="line" id="154656"><span class="nick" style="color:#6c3d55"><a href="#154656" label="[15:46:56]">&lt;OriansJ&gt;</a></span><span class="message">and if the libc license continues to be a problem for live-bootstrap, we can relicense M2libc to LGPLv3 rather easily</span></div><div class="line" id="155355"><span class="nick" style="color:#bc80bd"><a href="#155355" label="[15:53:55]">&lt;janneke&gt;</a></span><span class="message">OriansJ: that sounds really backward; mes c lib is rich enough for the guix bootstrap, and m2-planet compatible?</span></div><div class="line" id="155909"><span class="nick" style="color:#389600"><a href="#155909" label="[15:59:09]">&lt;civodul&gt;</a></span><span class="message">siraben: some are working on something like live-bootstrap, formalized in Guix :-)</span></div><div class="line" id="155938"><span class="nick" style="color:#389600"><a href="#155938" label="[15:59:38]">&lt;civodul&gt;</a></span><span class="message">joke aside, it'd be great to see another distro follow that path, and Nixpkgs is an obvious choice</span></div><div class="line" id="160005"><span class="nick" style="color:#3c5b35"><a href="#160005" label="[16:00:05]">&lt;siraben&gt;</a></span><span class="message">Hehe, I'm aware of the Guix work, which is great.</span></div><div class="line" id="160307"><span class="nick" style="color:#389600"><a href="#160307" label="[16:03:07]">&lt;civodul&gt;</a></span><span class="message">i guess what i mean is that closer collaboration might be more fruitful</span></div><div class="line" id="160722"><span class="nick" style="color:#3c5b35"><a href="#160722" label="[16:07:22]">&lt;siraben&gt;</a></span><span class="message">Right. Diversifying and formalizing the process would definitely help.</span></div><div class="line" id="160900"><span class="nick" style="color:#389600"><a href="#160900" label="[16:09:00]">&lt;civodul&gt;</a></span><span class="message">the process is formalized in Guix, but of course it's not &quot;diversified&quot;--having one thing production-ready is already quite some work</span></div><div class="line" id="161107"><span class="nick" style="color:#3c5b35"><a href="#161107" label="[16:11:07]">&lt;siraben&gt;</a></span><span class="message">side note: I actually tried Guix before Nix but because it's a GNU project they are very intent on not having unfree software and I have a Late 2013 MacBook Pro, so Wi-Fi didn't work among other things</span></div><div class="line" id="161121"><span class="nick" style="color:#3c5b35"><a href="#161121" label="[16:11:21]">&lt;siraben&gt;</a></span><span class="message">I like that they use an actual programming language though instead of inventing a new one like Nix did</span></div><div class="line" id="161326"><span class="nick" style="color:#389600"><a href="#161326" label="[16:13:26]">&lt;civodul&gt;</a></span><span class="message">it's not &quot;they&quot;, it's you and i :-)</span></div><div class="line" id="161330"><span class="nick" style="color:#389600"><a href="#161330" label="[16:13:30]">&lt;civodul&gt;</a></span><span class="message">but okay, i see what you mean</span></div><div class="line" id="161343"><span class="nick" style="color:#389600"><a href="#161343" label="[16:13:43]">&lt;civodul&gt;</a></span><span class="message">Guix proper doesn't provide non-free software, it's a choice for you to make</span></div><div class="line" id="161412"><span class="nick" style="color:#bc80bd"><a href="#161412" label="[16:14:12]">&lt;janneke&gt;</a></span><span class="message">siraben: from a bootstrappable or security perspective, i'd say any non-free software is out?</span></div><div class="line" id="161421"><span class="nick" style="color:#389600"><a href="#161421" label="[16:14:21]">&lt;civodul&gt;</a></span><span class="message">personally, i think that reproducible builds and bootstrapping don't matter much if one ends up running opaque binaries, though</span></div><div class="line" id="161425"><span class="nick" style="color:#389600"><a href="#161425" label="[16:14:25]">&lt;civodul&gt;</a></span><span class="message">yeah</span></div><div class="line" id="161455"><span class="nick" style="color:#3c5b35"><a href="#161455" label="[16:14:55]">&lt;siraben&gt;</a></span><span class="message">janneke: of course but I was talking about from my personal experience getting it to run on the hardware I have.</span></div><div class="line" id="161511"><span class="nick" style="color:#bc80bd"><a href="#161511" label="[16:15:11]">&lt;janneke&gt;</a></span><span class="message">similarly, linux should be &quot;out&quot;, i guess -- which is why i frowned upon musl...</span></div><div class="line" id="161904"><span class="nick" style="color:#bc80bd"><a href="#161904" label="[16:19:04]">&lt;janneke&gt;</a></span><span class="message">siraben: sure, in hindsight it's always easy to suggest picking hardware that supports free software</span></div><div class="line" id="161943"><span class="nick" style="color:#3c5b35"><a href="#161943" label="[16:19:43]">&lt;siraben&gt;</a></span><span class="message">I probably could make Guix work now that I know a lot more about building things but am time constrained</span></div><div class="line" id="161944"><span class="nick" style="color:#bc80bd"><a href="#161944" label="[16:19:44]">&lt;janneke&gt;</a></span><span class="message">fwiw, i have installed atheros wifi cards in some computers, to run linux-libre; or otherwise use a cable</span></div><div class="line" id="162044"><span class="nick" style="color:#389600"><a href="#162044" label="[16:20:44]">&lt;civodul&gt;</a></span><span class="message">same here</span></div><div class="line" id="162051"><span class="nick" style="color:#389600"><a href="#162051" label="[16:20:51]">&lt;civodul&gt;</a></span><span class="message">in the end it's a choice and it's a tradeoff</span></div><div class="line" id="162112"><span class="nick" style="color:#389600"><a href="#162112" label="[16:21:12]">&lt;civodul&gt;</a></span><span class="message">whatever the practical choice, i think it's good to have a horizon</span></div><div class="line" id="163053"><span class="nick" style="color:#d9d9d9"><a href="#163053" label="[16:30:53]">&lt;gforce_de1977&gt;</a></span><span class="message">janneke: OriansJ: because you both are here: can anyone explain why the name is 'kaem'? is it just a mixed 'make'?</span></div><div class="line" id="164319"><span class="nick" style="color:#6c3d55"><a href="#164319" label="[16:43:19]">&lt;OriansJ&gt;</a></span><span class="message">gforce_de1977: well I named it</span></div><div class="line" id="164401"><span class="nick" style="color:#6c3d55"><a href="#164401" label="[16:44:01]">&lt;OriansJ&gt;</a></span><span class="message">to address the need to remove make from my build process. Thus to pay respect to the tool it replaced, I named it after make</span></div><div class="line" id="164425"><span class="nick" style="color:#d9d9d9"><a href="#164425" label="[16:44:25]">&lt;gforce_de1977&gt;</a></span><span class="message">OriansJ: thank you, just want to include it in the docs</span></div><div class="line" id="164533"><span class="nick" style="color:#2e2a4a"><a href="#164533" label="[16:45:33]">&lt;stikonas&gt;</a></span><span class="message">siraben: I actually replaced wifi chip on my laptop...</span></div><div class="line" id="164600"><span class="nick" style="color:#2e2a4a"><a href="#164600" label="[16:46:00]">&lt;stikonas&gt;</a></span><span class="message">so now only bluetooth doesn't work with linux-libre</span></div><div class="line" id="164629"><span class="nick" style="color:#2e2a4a"><a href="#164629" label="[16:46:29]">&lt;stikonas&gt;</a></span><span class="message">which I can live without</span></div><div class="line" id="164830"><span class="nick" style="color:#d9d9d9"><a href="#164830" label="[16:48:30]">&lt;gforce_de1977&gt;</a></span><span class="message">here also: AR93xx/ath9k with 450mbit/s</span></div><div class="line" id="164915"><span class="nick" style="color:#2e2a4a"><a href="#164915" label="[16:49:15]">&lt;stikonas&gt;</a></span><span class="message">I just saw openwifi cards too with open hardware design, although, you still need proprietary software to compile and flash verilog into chip...</span></div><div class="line" id="164933"><span class="nick" style="color:#2e2a4a"><a href="#164933" label="[16:49:33]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/open-sdr/openwifi-hw">https://github.com/open-sdr/openwifi-hw</a> </span></div><div class="line" id="165000"><span class="nick" style="color:#6c3d55"><a href="#165000" label="[16:50:00]">&lt;OriansJ&gt;</a></span><span class="message">siraben: well some people here take the trust problem more seriuosly than others. For example I am running on a libreboot x200 and others have coreboot or vendor provided firmware</span></div><div class="line" id="165026"><span class="nick" style="color:#6c3d55"><a href="#165026" label="[16:50:26]">&lt;OriansJ&gt;</a></span><span class="message">The point is everyone chooses what they are comfortable with</span></div><div class="line" id="165121"><span class="nick" style="color:#6c3d55"><a href="#165121" label="[16:51:21]">&lt;OriansJ&gt;</a></span><span class="message">Some people need non-guix things on their computer and that is their personal choice</span></div><div class="line" id="165213"><span class="nick" style="color:#6c3d55"><a href="#165213" label="[16:52:13]">&lt;OriansJ&gt;</a></span><span class="message">We tend to recommend more freedom  respecting choices by default but that is because then we have an ability to make things better going forward</span></div><div class="line" id="165513"><span class="nick" style="color:#6c3d55"><a href="#165513" label="[16:55:13]">&lt;OriansJ&gt;</a></span><span class="message">Personally I like to think of it as iterating towards a better solution rather than ever being done.</span></div><div class="line" id="165514"><span class="nick" style="color:#389600"><a href="#165514" label="[16:55:14]">&lt;civodul&gt;</a></span><span class="message">yeah i think the user freedom and security requirements are largely aligned</span></div><div class="line" id="165612"><span class="nick" style="color:#3c5b35"><a href="#165612" label="[16:56:12]">&lt;siraben&gt;</a></span><span class="message">OriansJ: The next laptop I use I plan to have 100% libre software</span></div><div class="line" id="165655"><span class="nick" style="color:#3c5b35"><a href="#165655" label="[16:56:55]">&lt;siraben&gt;</a></span><span class="message">though it may be a few more years until something finally breaks in this 2013 MBP</span></div><div class="line" id="170014"><span class="nick" style="color:#6c3d55"><a href="#170014" label="[17:00:14]">&lt;OriansJ&gt;</a></span><span class="message">siraben: buy what makes you happy. We would accept Windows/reactOS/DOS Users here too if they would code to help us achive the dream of bootstrapping all of the things.</span></div><div class="line" id="170359"><span class="nick" style="color:#d9d9d9"><a href="#170359" label="[17:03:59]">&lt;gforce_de1977&gt;</a></span><span class="message">regarding GLBIC + musl, here is an interesting comparison: <a rel="nofollow" href="https://www.etalabs.net/compare_libcs.html">https://www.etalabs.net/compare_libcs.html</a> </span></div><div class="line" id="170415"><span class="nick" style="color:#d9d9d9"><a href="#170415" label="[17:04:15]">&lt;gforce_de1977&gt;</a></span><span class="message">sorry GNU-LIBC</span></div><div class="line" id="170456"><span class="nick" style="color:#d9d9d9"><a href="#170456" label="[17:04:56]">&lt;gforce_de1977&gt;</a></span><span class="message">what is new to me, that GNU-LIBC can not work on no-MMU?</span></div><div class="line" id="173107"><span class="nick" style="color:#6c3d55"><a href="#173107" label="[17:31:07]">&lt;OriansJ&gt;</a></span><span class="message">gforce_de1977: not even remotely surprising; GNU early on explicitly does not work on 8 or 16bit processors or systems without an MMU</span></div><div class="line" id="173307"><span class="nick" style="color:#6c3d55"><a href="#173307" label="[17:33:07]">&lt;OriansJ&gt;</a></span><span class="message">althought on the Bloat comparison chart M2libc+M2-Planet kicks the shit out of everyone on Smallest static C program. test0000 for x86 =&gt; 135bytes</span></div><div class="line" id="174340"><span class="nick" style="color:#6c3d55"><a href="#174340" label="[17:43:40]">&lt;OriansJ&gt;</a></span><span class="message">and I finally finished measuring the average needed write buffer for a function that writes to disk every newline: 29 characters, so I'll be dropping from 20MB down to 4KB and doing malloc instead of calloc to make it a hair faster.</span></div><div class="line" id="175108"><span class="nick" style="color:#6c3d55"><a href="#175108" label="[17:51:08]">&lt;OriansJ&gt;</a></span><span class="message">I guess I use alot of newlines in my output</span></div><div class="line" id="175119"><span class="nick" style="color:#389600"><a href="#175119" label="[17:51:19]">&lt;civodul&gt;</a></span><span class="message">janneke, rekado_: amazing that the GWL Q&amp;A ends up revolving around bootstrapping!</span></div><div class="line" id="175133"><span class="nick" style="color:#389600"><a href="#175133" label="[17:51:33]">&lt;civodul&gt;</a></span><span class="message">i didn't expect it in an HPC track :-)</span></div><div class="line" id="175838"><span class="nick" style="color:#d9d9d9"><a href="#175838" label="[17:58:38]">&lt;gforce_de1977&gt;</a></span><span class="message">civodul: is there an recording/link?</span></div><div class="line" id="175934"><span class="nick" style="color:#d9d9d9"><a href="#175934" label="[17:59:34]">&lt;gforce_de1977&gt;</a></span><span class="message">OriansJ: no-MMU does not mean 8/16bit, e.g. m68k/68000 is 32bit but has no MMU</span></div><div class="line" id="175951"><span class="nick" style="color:#389600"><a href="#175951" label="[17:59:51]">&lt;civodul&gt;</a></span><span class="message">gforce_de1977: recordings will be at <a rel="nofollow" href="https://fosdem.org/2021/schedule/event/guix_workflow/">https://fosdem.org/2021/schedule/event/guix_workflow/</a> </span></div><div class="line" id="180003"><span class="nick" style="color:#8dd3c7"><a href="#180003" label="[18:00:03]">&lt;rjek&gt;</a></span><span class="message">ARM6 and ARM7 had no MMU</span></div><div class="line" id="180014"><span class="nick" style="color:#8dd3c7"><a href="#180014" label="[18:00:14]">&lt;rjek&gt;</a></span><span class="message">(ARM610 and ARM710, on the other hand, did.)</span></div><div class="line" id="180024"><span class="nick" style="color:#8dd3c7"><a href="#180024" label="[18:00:24]">&lt;rjek&gt;</a></span><span class="message">ARM2 and 3 were dependent on external MMUs</span></div><div class="line" id="180025"><span class="nick" style="color:#d9d9d9"><a href="#180025" label="[18:00:25]">&lt;gforce_de1977&gt;</a></span><span class="message">rjek: good point, superH also</span></div><div class="line" id="182855"><span class="nick" style="color:#bc80bd"><a href="#182855" label="[18:28:55]">&lt;janneke&gt;</a></span><span class="message">civodul: yeah, that caught me off-guard -- small world or something</span></div><div class="line" id="184157"><span class="nick" style="color:#6c3d55"><a href="#184157" label="[18:41:57]">&lt;OriansJ&gt;</a></span><span class="message">civodul: completely missed that I guess.</span></div><div class="line" id="184356"><span class="nick" style="color:#6c3d55"><a href="#184356" label="[18:43:56]">&lt;OriansJ&gt;</a></span><span class="message">gforce_de1977: fair but I remember an explicit choice made for glibc not to support machines of those properties to reduce development efforts.</span></div><div class="line" id="184520"><span class="nick" style="color:#6c3d55"><a href="#184520" label="[18:45:20]">&lt;OriansJ&gt;</a></span><span class="message">rjek: well internal vs external MMU isn't something a User Space programmer should ever be able to notice and even a kernel programmer in well designed ISAs wouldn't even care to note.</span></div><div class="line" id="184619"><span class="nick" style="color:#6c3d55"><a href="#184619" label="[18:46:19]">&lt;OriansJ&gt;</a></span><span class="message">Now lack of an MMU however is quite noticable to both userspace and kernel space.</span></div><div class="line" id="184741"><span class="nick" style="color:#6c3d55"><a href="#184741" label="[18:47:41]">&lt;OriansJ&gt;</a></span><span class="message">all M2-Planet and below binaries assume a fixed loading space into memory, which on a system without an MMU would conflict with any other program that used that same memory block.</span></div><div class="line" id="184843"><span class="nick" style="color:#6c3d55"><a href="#184843" label="[18:48:43]">&lt;OriansJ&gt;</a></span><span class="message">So kaem and hex0 would get into each other's shit before hex1 was even done beig built.</span></div><div class="line" id="185019"><span class="nick" style="color:#6c3d55"><a href="#185019" label="[18:50:19]">&lt;OriansJ&gt;</a></span><span class="message">On a system with an MMU, we are fine but should we need to run on a MMU-less system, changes would need to be made (mostly in the hex2 implications for the later stages but custom elf-headers for the earler stages)</span></div><div class="line" id="185544"><span class="nick" style="color:#6c3d55"><a href="#185544" label="[18:55:44]">&lt;OriansJ&gt;</a></span><span class="message">janneke: and you are absolutely right that MesCC's libc is more advanced than M2libc and that for MesCC to use M2libc now would be a big step back.</span></div><div class="line" id="185644"><span class="nick" style="color:#6c3d55"><a href="#185644" label="[18:56:44]">&lt;OriansJ&gt;</a></span><span class="message">However, my goals are not for this week but for addressing the long term needs of bootstrapping; so that we can share efforts in regards to porting and bugfixing.</span></div><div class="line" id="185819"><span class="nick" style="color:#6c3d55"><a href="#185819" label="[18:58:19]">&lt;OriansJ&gt;</a></span><span class="message">yt, deesix (or anyone else who wishes honestly) any objection to me changing M2libc's license to LGPLv3 now?</span></div><div class="line" id="191606"><span class="nick" style="color:#389600"><a href="#191606" label="[19:16:06]">&lt;Hagfish&gt;</a></span><span class="message">would it make sense to dual license it?</span></div><div class="line" id="191918"><span class="nick" style="color:#bc80bd"><a href="#191918" label="[19:19:18]">&lt;janneke&gt;</a></span><span class="message">OriansJ: by all means, feel free to roll your own M2lib instead of contributing to mes lib c</span></div><div class="line" id="191925"><span class="nick" style="color:#6b8072"><a href="#191925" label="[19:19:25]">*</a></span><span class="message">janneke remains terribly puzzled</span></div><div class="line" id="192203"><span class="nick" style="color:#6c3d55"><a href="#192203" label="[19:22:03]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: it is possible but LGPLv3 includes the option to just be straight GPLv3</span></div><div class="line" id="192229"><span class="nick" style="color:#6c3d55"><a href="#192229" label="[19:22:29]">&lt;OriansJ&gt;</a></span><span class="message">probably should be LGPLv3 or later to allow for later versions of the GPL as well.</span></div><div class="line" id="192347"><span class="nick" style="color:#6c3d55"><a href="#192347" label="[19:23:47]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well mes_libc isn't designed for M2-Planet compatibility nor is it something I can just git submodule without bringing in all of Mes</span></div><div class="line" id="192848"><span class="nick" style="color:#6c3d55"><a href="#192848" label="[19:28:48]">&lt;OriansJ&gt;</a></span><span class="message">now I certainly can import functions already completed in mes_libc into M2libc to save effort</span></div><div class="line" id="193205"><span class="nick" style="color:#6c3d55"><a href="#193205" label="[19:32:05]">&lt;OriansJ&gt;</a></span><span class="message">Plus by being seperate it enables seperate licensing to match the needs of the less compatible parts of the bootstrap such as the CDDL pieces, which LGPLv3+ would be able to be used with and still enable distribution (as opposed to straight GPLv3 which would be a distribution problem for the binaries)</span></div><div class="line" id="193628"><span class="nick" style="color:#389600"><a href="#193628" label="[19:36:28]">&lt;Hagfish&gt;</a></span><span class="message">good thinking</span></div><div class="line" id="193917"><span class="nick" style="color:#2e2a4a"><a href="#193917" label="[19:39:17]">&lt;stikonas&gt;</a></span><span class="message">yeah, and in guix distribution problem is actual problem unlike in live-bootstrap</span></div><div class="line" id="193934"><span class="nick" style="color:#2e2a4a"><a href="#193934" label="[19:39:34]">&lt;stikonas&gt;</a></span><span class="message">since guix builders build it and distribute to all users</span></div><div class="line" id="215434"><span class="nick" style="color:#6c3d55"><a href="#215434" label="[21:54:34]">&lt;OriansJ&gt;</a></span><span class="message">One more argument to ponder <a rel="nofollow" href="https://www.gnu.org/licenses/why-not-lgpl.html">https://www.gnu.org/licenses/why-not-lgpl.html</a>  does M2libc contain a feature that is not readily available elsewhere? Personally I don't believe so but I would love to understand if someone believes differently.</span></div><div class="line" id="221314"><span class="nick" style="color:#2e2a4a"><a href="#221314" label="[22:13:14]">&lt;stikonas&gt;</a></span><span class="message">well, that's why glibc is under LGPL and not GPL...</span></div><div class="line" id="221345"><span class="nick" style="color:#6b8072"><a href="#221345" label="[22:13:45]">*</a></span><span class="message">fossy is confused</span></div><div class="line" id="221353"><span class="nick" style="color:#2e2a4a"><a href="#221353" label="[22:13:53]">&lt;stikonas&gt;</a></span><span class="message">fossy: ?</span></div><div class="line" id="221405"><span class="nick" style="color:#2e2a4a"><a href="#221405" label="[22:14:05]">&lt;stikonas&gt;</a></span><span class="message">I was just commenting to OriansJ</span></div><div class="line" id="221408"><span class="nick" style="color:#8dd3c7"><a href="#221408" label="[22:14:08]">&lt;fossy&gt;</a></span><span class="message">M2libc == libc for m2-planet, mes c library == libc for mes, no?</span></div><div class="line" id="221414"><span class="nick" style="color:#2e2a4a"><a href="#221414" label="[22:14:14]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="221424"><span class="nick" style="color:#8dd3c7"><a href="#221424" label="[22:14:24]">&lt;fossy&gt;</a></span><span class="message">Therefore M2libc != mes c library</span></div><div class="line" id="221427"><span class="nick" style="color:#2e2a4a"><a href="#221427" label="[22:14:27]">&lt;stikonas&gt;</a></span><span class="message">mes lib c is probably using constructs unsupported by M2-planet</span></div><div class="line" id="221443"><span class="nick" style="color:#8dd3c7"><a href="#221443" label="[22:14:43]">&lt;fossy&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="221516"><span class="nick" style="color:#2e2a4a"><a href="#221516" label="[22:15:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: any chance to review <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/31">https://github.com/fosslinux/live-bootstrap/pull/31</a>  ?</span></div><div class="line" id="221526"><span class="nick" style="color:#2e2a4a"><a href="#221526" label="[22:15:26]">&lt;stikonas&gt;</a></span><span class="message">it's probably straightforward</span></div><div class="line" id="221529"><span class="nick" style="color:#8dd3c7"><a href="#221529" label="[22:15:29]">&lt;fossy&gt;</a></span><span class="message">OriansJ: the entirety of m2libc provides features not readily avaliable elsewhere (a proper libc for m2-planet)</span></div><div class="line" id="221536"><span class="nick" style="color:#8dd3c7"><a href="#221536" label="[22:15:36]">&lt;fossy&gt;</a></span><span class="message">yeah shortly</span></div><div class="line" id="221603"><span class="nick" style="color:#2e2a4a"><a href="#221603" label="[22:16:03]">&lt;stikonas&gt;</a></span><span class="message">although, I don't know if M2libc will be enough for those cddl components</span></div><div class="line" id="221721"><span class="nick" style="color:#8dd3c7"><a href="#221721" label="[22:17:21]">&lt;fossy&gt;</a></span><span class="message">&lt;janneke&gt; similarly, linux should be &quot;out&quot;, i guess -- which is why i frowned upon musl...</span></div><div class="line" id="221737"><span class="nick" style="color:#8dd3c7"><a href="#221737" label="[22:17:37]">&lt;fossy&gt;</a></span><span class="message">what is wrong with linux as a kernel used in the bootstrap?</span></div><div class="line" id="221742"><span class="nick" style="color:#8dd3c7"><a href="#221742" label="[22:17:42]">&lt;fossy&gt;</a></span><span class="message">particularly linux libre</span></div><div class="line" id="221756"><span class="nick" style="color:#8dd3c7"><a href="#221756" label="[22:17:56]">&lt;fossy&gt;</a></span><span class="message">its a bad bootstrap kernel, sure</span></div><div class="line" id="221759"><span class="nick" style="color:#2e2a4a"><a href="#221759" label="[22:17:59]">&lt;stikonas&gt;</a></span><span class="message">anyway, if mes libc gets good enough, we can just keep it...</span></div><div class="line" id="221807"><span class="nick" style="color:#2e2a4a"><a href="#221807" label="[22:18:07]">&lt;stikonas&gt;</a></span><span class="message">but as of now, mes libc is not enough to bootstrap bison</span></div><div class="line" id="221810"><span class="nick" style="color:#2e2a4a"><a href="#221810" label="[22:18:10]">&lt;stikonas&gt;</a></span><span class="message">or autotools</span></div><div class="line" id="221846"><span class="nick" style="color:#2e2a4a"><a href="#221846" label="[22:18:46]">&lt;stikonas&gt;</a></span><span class="message">and would old glibc be any more hurd friendly than musl?</span></div><div class="line" id="221907"><span class="nick" style="color:#8dd3c7"><a href="#221907" label="[22:19:07]">&lt;fossy&gt;</a></span><span class="message">stikonas: huh? the only purpose for m2libc is m2-planet c, not &quot;real&quot; c, which we need for post tinycc</span></div><div class="line" id="221936"><span class="nick" style="color:#2e2a4a"><a href="#221936" label="[22:19:36]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's what I thought initially, although, OriansJ mentioned CDDL components</span></div><div class="line" id="221940"><span class="nick" style="color:#8dd3c7"><a href="#221940" label="[22:19:40]">&lt;fossy&gt;</a></span><span class="message">m2-planet/m2libc is significantly smaller than mes/mes c library</span></div><div class="line" id="221951"><span class="nick" style="color:#8dd3c7"><a href="#221951" label="[22:19:51]">&lt;fossy&gt;</a></span><span class="message">cddl only matters for redistribution..</span></div><div class="line" id="221952"><span class="nick" style="color:#2e2a4a"><a href="#221952" label="[22:19:52]">&lt;stikonas&gt;</a></span><span class="message">yeah, although, lex and yacc doesn't need that much</span></div><div class="line" id="221954"><span class="nick" style="color:#2e2a4a"><a href="#221954" label="[22:19:54]">&lt;stikonas&gt;</a></span><span class="message">yeah, I know</span></div><div class="line" id="222000"><span class="nick" style="color:#2e2a4a"><a href="#222000" label="[22:20:00]">&lt;stikonas&gt;</a></span><span class="message">but e.g. guix needs redistribution</span></div><div class="line" id="222005"><span class="nick" style="color:#8dd3c7"><a href="#222005" label="[22:20:05]">&lt;fossy&gt;</a></span><span class="message">oh, sure</span></div><div class="line" id="222012"><span class="nick" style="color:#2e2a4a"><a href="#222012" label="[22:20:12]">&lt;stikonas&gt;</a></span><span class="message">because builders build those packages</span></div><div class="line" id="222015"><span class="nick" style="color:#2e2a4a"><a href="#222015" label="[22:20:15]">&lt;stikonas&gt;</a></span><span class="message">and people download</span></div><div class="line" id="222016"><span class="nick" style="color:#8dd3c7"><a href="#222016" label="[22:20:16]">&lt;fossy&gt;</a></span><span class="message">but guix has different goals to us and hence a different path</span></div><div class="line" id="222019"><span class="nick" style="color:#2e2a4a"><a href="#222019" label="[22:20:19]">&lt;stikonas&gt;</a></span><span class="message">for live-bootstrap we are fine</span></div><div class="line" id="222022"><span class="nick" style="color:#2e2a4a"><a href="#222022" label="[22:20:22]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="222045"><span class="nick" style="color:#8dd3c7"><a href="#222045" label="[22:20:45]">&lt;fossy&gt;</a></span><span class="message">well, us being live-bootstrap :)</span></div><div class="line" id="222052"><span class="nick" style="color:#2e2a4a"><a href="#222052" label="[22:20:52]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="222119"><span class="nick" style="color:#2e2a4a"><a href="#222119" label="[22:21:19]">&lt;vagrantc&gt;</a></span><span class="message">it is possible for guix to mark something as not substitutable, if there's a strong argument for it</span></div><div class="line" id="222140"><span class="nick" style="color:#2e2a4a"><a href="#222140" label="[22:21:40]">&lt;vagrantc&gt;</a></span><span class="message">and then it will rebuild from source when needed...</span></div><div class="line" id="222205"><span class="nick" style="color:#8dd3c7"><a href="#222205" label="[22:22:05]">&lt;fossy&gt;</a></span><span class="message">janneke: I am intrigued into the goal of being run on hurd. Is there a specific bootstrapping/foss reason for it, or is it more an alternative type thing?</span></div><div class="line" id="222225"><span class="nick" style="color:#2e2a4a"><a href="#222225" label="[22:22:25]">&lt;stikonas&gt;</a></span><span class="message">pder: by the way, did you have any luck with m4?</span></div><div class="line" id="222306"><span class="nick" style="color:#6c3d55"><a href="#222306" label="[22:23:06]">&lt;OriansJ&gt;</a></span><span class="message">fossy, stikonas: well the plan for M2libc is to create a standard C library which both M2-Planet and MesCC can use which will be powerful enough to enable all of the pieces required to get a proper bootstrap done</span></div><div class="line" id="222343"><span class="nick" style="color:#6c3d55"><a href="#222343" label="[22:23:43]">&lt;OriansJ&gt;</a></span><span class="message">at their core both M2libc and Mes_libc is M1 definitions wrapped in C</span></div><div class="line" id="222415"><span class="nick" style="color:#8dd3c7"><a href="#222415" label="[22:24:15]">&lt;fossy&gt;</a></span><span class="message">why not unify m2libc and mes c library if thats the goal</span></div><div class="line" id="222420"><span class="nick" style="color:#6c3d55"><a href="#222420" label="[22:24:20]">&lt;OriansJ&gt;</a></span><span class="message">So cooperation between the two projects becomes possible if I just harmonize M2-Planet's M1 output to match the DEFINEs in MesCC</span></div><div class="line" id="222525"><span class="nick" style="color:#6c3d55"><a href="#222525" label="[22:25:25]">&lt;OriansJ&gt;</a></span><span class="message">fossy: that is the officially idea for M2libc, although I haven't put in nearly enough time to get it to that state</span></div><div class="line" id="222910"><span class="nick" style="color:#2e2a4a"><a href="#222910" label="[22:29:10]">&lt;stikonas&gt;</a></span><span class="message">although, cooperation might be a bit hard if licenses don't match</span></div><div class="line" id="222920"><span class="nick" style="color:#2e2a4a"><a href="#222920" label="[22:29:20]">&lt;stikonas&gt;</a></span><span class="message">you can move code only in one direction</span></div><div class="line" id="222941"><span class="nick" style="color:#6c3d55"><a href="#222941" label="[22:29:41]">&lt;OriansJ&gt;</a></span><span class="message">Now that M2-Planet supports #if defined(__M2__) and the new bootstrap.c library (to eliminate the cc_* bootstrap problem); there shouldn't be an issue for MesCC and M2-Planet to share the exact same libc (as I only need to change out a handful of strings to make M2-Planet use MesCC's DEFINEs)</span></div><div class="line" id="223131"><span class="nick" style="color:#6c3d55"><a href="#223131" label="[22:31:31]">&lt;OriansJ&gt;</a></span><span class="message">right now mes_libc is GPLv3+ and M2libc is GPLv3+</span></div><div class="line" id="223216"><span class="nick" style="color:#6c3d55"><a href="#223216" label="[22:32:16]">&lt;OriansJ&gt;</a></span><span class="message">So harmonization and import from mes_libc is just a matter of human effort</span></div><div class="line" id="223534"><span class="nick" style="color:#6c3d55"><a href="#223534" label="[22:35:34]">&lt;OriansJ&gt;</a></span><span class="message">as we can literally do #if !defined(__M2__) around whole functions that M2-Planet can't support.</span></div><div class="line" id="224532"><span class="nick" style="color:#6c3d55"><a href="#224532" label="[22:45:32]">&lt;OriansJ&gt;</a></span><span class="message">Which would help MesCC port to new architectures as M2-Planet does porting to new architectures faster and help M2-Planet port to new operating systems as MesCC beat M2-Planet to hurd support.</span></div><div class="line" id="230208"><span class="nick" style="color:#6c3d55"><a href="#230208" label="[23:02:08]">&lt;OriansJ&gt;</a></span><span class="message">Think of M2libc as just another overly ambitious project of mine that I have massively failed to put enough time into; (until it actually gets up to speed)</span></div><div class="line" id="230715"><span class="nick" style="color:#6c3d55"><a href="#230715" label="[23:07:15]">&lt;OriansJ&gt;</a></span><span class="message">(as if I have anything other than overly ambitious projects ^_^)</span></div><div class="line" id="231943"><span class="nick" style="color:#6b8072"><a href="#231943" label="[23:19:43]">&lt;mihi&gt;</a></span><span class="message">OriansJ, I hope you &quot;accept&quot; Windows users even if our shared dream of &quot;bootstrapping all of the things&quot;™ is not achieved :-)</span></div><div class="line" id="232148"><span class="nick" style="color:#6b8072"><a href="#232148" label="[23:21:48]">&lt;mihi&gt;</a></span><span class="message">janneke, I'm also surprised in your interest of using Hurd for the bootstrap. For once, as someone who toyed around with Hurd distros for a few years now, I would not trust it any data remain unmangled just due to filesystem bugs. I run into a situation where the rootfs is corrupted beyond repair every few months, good that I have multiple layers of snapshots. And also the fact that you need extra tools to</span></div><div class="line" id="232149"><span class="nick" style="color:#6b8072"><a href="#232149" label="[23:21:49]">&lt;mihi&gt;</a></span><span class="message">generate some of the microkernel (MiG) is not the best choice for a bootstrap kernel for me.</span></div><div class="line" id="232239"><span class="nick" style="color:#6b8072"><a href="#232239" label="[23:22:39]">&lt;mihi&gt;</a></span><span class="message">(Unfortunately, apart from one pathological case, I was never able to reproduce any of those filesystem corruptions. Only thing I can say that they tend to happen more often if the filesystem is mounted/unmounted more often, or in other words the system is rebooted more often)</span></div><div class="line" id="232918"><span class="nick" style="color:#6c3d55"><a href="#232918" label="[23:29:18]">&lt;OriansJ&gt;</a></span><span class="message">mihi: I was raised to accept people for who they are, not who I want them to be.</span></div><div class="line" id="232937"><span class="nick" style="color:#6b8072"><a href="#232937" label="[23:29:37]">&lt;mihi&gt;</a></span><span class="message">:)</span></div><div class="line" id="233426"><span class="nick" style="color:#8dd3c7"><a href="#233426" label="[23:34:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: what's the purpose of scan.lex.l in flex-2.5.11? it was cleaerly not written by us, can we make it a patch or smth</span></div><div class="line" id="233453"><span class="nick" style="color:#2e2a4a"><a href="#233453" label="[23:34:53]">&lt;stikonas&gt;</a></span><span class="message">fossy: scan.l is too complex for lex, so it was simplified</span></div><div class="line" id="233458"><span class="nick" style="color:#8dd3c7"><a href="#233458" label="[23:34:58]">&lt;fossy&gt;</a></span><span class="message">ah, i see</span></div><div class="line" id="233504"><span class="nick" style="color:#8dd3c7"><a href="#233504" label="[23:35:04]">&lt;fossy&gt;</a></span><span class="message">can we maybe do a cp + patch</span></div><div class="line" id="233505"><span class="nick" style="color:#2e2a4a"><a href="#233505" label="[23:35:05]">&lt;stikonas&gt;</a></span><span class="message">gio manually simplified it</span></div><div class="line" id="233509"><span class="nick" style="color:#8dd3c7"><a href="#233509" label="[23:35:09]">&lt;fossy&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="233514"><span class="nick" style="color:#8dd3c7"><a href="#233514" label="[23:35:14]">&lt;fossy&gt;</a></span><span class="message">so it's gios work i'm looking at here</span></div><div class="line" id="233515"><span class="nick" style="color:#2e2a4a"><a href="#233515" label="[23:35:15]">&lt;stikonas&gt;</a></span><span class="message">patch from scan.l to scan.lex.l?</span></div><div class="line" id="233517"><span class="nick" style="color:#2e2a4a"><a href="#233517" label="[23:35:17]">&lt;stikonas&gt;</a></span><span class="message">yeah</span></div><div class="line" id="233528"><span class="nick" style="color:#2e2a4a"><a href="#233528" label="[23:35:28]">&lt;stikonas&gt;</a></span><span class="message">I just started with tarball of upstream flex</span></div><div class="line" id="233530"><span class="nick" style="color:#8dd3c7"><a href="#233530" label="[23:35:30]">&lt;fossy&gt;</a></span><span class="message">trying to figure out how to best reuseify this file</span></div><div class="line" id="233532"><span class="nick" style="color:#2e2a4a"><a href="#233532" label="[23:35:32]">&lt;stikonas&gt;</a></span><span class="message">instead of submodule</span></div><div class="line" id="233543"><span class="nick" style="color:#8dd3c7"><a href="#233543" label="[23:35:43]">&lt;fossy&gt;</a></span><span class="message">are the *.patch gios or no</span></div><div class="line" id="233551"><span class="nick" style="color:#2e2a4a"><a href="#233551" label="[23:35:51]">&lt;stikonas&gt;</a></span><span class="message">probably, let me check</span></div><div class="line" id="233622"><span class="nick" style="color:#2e2a4a"><a href="#233622" label="[23:36:22]">&lt;stikonas&gt;</a></span><span class="message">yes, they are gio's</span></div><div class="line" id="233638"><span class="nick" style="color:#8dd3c7"><a href="#233638" label="[23:36:38]">&lt;fossy&gt;</a></span><span class="message">ok thanks</span></div><div class="line" id="233657"><span class="nick" style="color:#2e2a4a"><a href="#233657" label="[23:36:57]">&lt;stikonas&gt;</a></span><span class="message">I extracted them from this commit <a rel="nofollow" href="https://gitlab.com/giomasce/flex/-/commit/89128506951fd8f7a38cd495678a3362db324d14">https://gitlab.com/giomasce/flex/-/commit/89128506951fd8f7a38cd495678a3362db324d14</a> </span></div><div class="line" id="233702"><span class="nick" style="color:#2e2a4a"><a href="#233702" label="[23:37:02]">&lt;stikonas&gt;</a></span><span class="message">just split into two patches</span></div><div class="line" id="233718"><span class="nick" style="color:#2e2a4a"><a href="#233718" label="[23:37:18]">&lt;stikonas&gt;</a></span><span class="message">and I'm not using compile.sh or config.h</span></div><div class="line" id="233742"><span class="nick" style="color:#2e2a4a"><a href="#233742" label="[23:37:42]">&lt;stikonas&gt;</a></span><span class="message">(compile.sh is replaced with makefile in the next commit)</span></div><div class="line" id="233744"><span class="nick" style="color:#8dd3c7"><a href="#233744" label="[23:37:44]">&lt;fossy&gt;</a></span><span class="message">:thumbsup:</span></div><div class="line" id="233758"><span class="nick" style="color:#8dd3c7"><a href="#233758" label="[23:37:58]">&lt;fossy&gt;</a></span><span class="message">and the makefile is...?</span></div><div class="line" id="233908"><span class="nick" style="color:#2e2a4a"><a href="#233908" label="[23:39:08]">&lt;stikonas&gt;</a></span><span class="message">main.mk is a small modification of <a rel="nofollow" href="https://gitlab.com/giomasce/flex/-/commit/506e9605baf4638ba47d37133c348df1385ef06c">https://gitlab.com/giomasce/flex/-/commit/506e9605baf4638ba47d37133c348df1385ef06c</a> </span></div><div class="line" id="233913"><span class="nick" style="color:#8dd3c7"><a href="#233913" label="[23:39:13]">&lt;fossy&gt;</a></span><span class="message">okey</span></div><div class="line" id="234001"><span class="nick" style="color:#2e2a4a"><a href="#234001" label="[23:40:01]">&lt;stikonas&gt;</a></span><span class="message">probably minor CFLAGS adjustment, maybe linker options and I think I have make install</span></div><div class="line" id="234125"><span class="nick" style="color:#2e2a4a"><a href="#234125" label="[23:41:25]">&lt;stikonas&gt;</a></span><span class="message">I guess both patches are then using flex license</span></div><div class="line" id="234157"><span class="nick" style="color:#2e2a4a"><a href="#234157" label="[23:41:57]">&lt;stikonas&gt;</a></span><span class="message">one of the BSD licenses...</span></div><div class="line" id="234158"><span class="nick" style="color:#2e2a4a"><a href="#234158" label="[23:41:58]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/giomasce/flex/-/blob/master/COPYING">https://gitlab.com/giomasce/flex/-/blob/master/COPYING</a> </span></div><div class="line" id="234213"><span class="nick" style="color:#2e2a4a"><a href="#234213" label="[23:42:13]">&lt;stikonas&gt;</a></span><span class="message">so actually can be sublicensed</span></div><div class="line" id="234236"><span class="nick" style="color:#8dd3c7"><a href="#234236" label="[23:42:36]">&lt;fossy&gt;</a></span><span class="message">i just put the BSD-2-Clause on them</span></div><div class="line" id="234253"><span class="nick" style="color:#8dd3c7"><a href="#234253" label="[23:42:53]">&lt;fossy&gt;</a></span><span class="message">however, this makefile is a small problem</span></div><div class="line" id="234257"><span class="nick" style="color:#8dd3c7"><a href="#234257" label="[23:42:57]">&lt;fossy&gt;</a></span><span class="message">gio: what license is nbs under</span></div><div class="line" id="234304"><span class="nick" style="color:#8dd3c7"><a href="#234304" label="[23:43:04]">&lt;fossy&gt;</a></span><span class="message">there is no LICENSE in this repo</span></div><div class="line" id="234852"><span class="nick" style="color:#2e2a4a"><a href="#234852" label="[23:48:52]">&lt;stikonas&gt;</a></span><span class="message">makefile is form flex repo added by gio</span></div><div class="line" id="234905"><span class="nick" style="color:#2e2a4a"><a href="#234905" label="[23:49:05]">&lt;stikonas&gt;</a></span><span class="message">although, that doesn't really say what license is makefile under</span></div><div class="line" id="234944"><span class="nick" style="color:#2e2a4a"><a href="#234944" label="[23:49:44]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think you can assume LICENSE from <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/">https://gitlab.com/giomasce/nbs/</a> </span></div><div class="line" id="234946"><span class="nick" style="color:#2e2a4a"><a href="#234946" label="[23:49:46]">&lt;stikonas&gt;</a></span><span class="message">in readme</span></div><div class="line" id="235005"><span class="nick" style="color:#2e2a4a"><a href="#235005" label="[23:50:05]">&lt;stikonas&gt;</a></span><span class="message">two clause BSD license</span></div><div class="line" id="235023"><span class="nick" style="color:#2e2a4a"><a href="#235023" label="[23:50:23]">&lt;stikonas&gt;</a></span><span class="message">let's keep this license in live-bootstrap then</span></div><div class="line" id="235025"><span class="nick" style="color:#2e2a4a"><a href="#235025" label="[23:50:25]">&lt;stikonas&gt;</a></span><span class="message">for those files</span></div><div class="line" id="235029"><span class="nick" style="color:#6c3d55"><a href="#235029" label="[23:50:29]">&lt;OriansJ&gt;</a></span><span class="message">never assume when it comes to license terms</span></div><div class="line" id="235038"><span class="nick" style="color:#6c3d55"><a href="#235038" label="[23:50:38]">&lt;OriansJ&gt;</a></span><span class="message">unlicensed is a major red flag, gio please clarify</span></div><div class="line" id="235104"><span class="nick" style="color:#2e2a4a"><a href="#235104" label="[23:51:04]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: well, it does say in readme...</span></div><div class="line" id="235113"><span class="nick" style="color:#2e2a4a"><a href="#235113" label="[23:51:13]">&lt;stikonas&gt;</a></span><span class="message">reasonably clear <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/">https://gitlab.com/giomasce/nbs/</a> </span></div><div class="line" id="235121"><span class="nick" style="color:#2e2a4a"><a href="#235121" label="[23:51:21]">&lt;stikonas&gt;</a></span><span class="message">The gluing scripts and programs that oversee the bootstrapping and</span></div><div class="line" id="235122"><span class="nick" style="color:#2e2a4a"><a href="#235122" label="[23:51:22]">&lt;stikonas&gt;</a></span><span class="message">compilation processes are written and copyrighted by Giovanni</span></div><div class="line" id="235124"><span class="nick" style="color:#2e2a4a"><a href="#235124" label="[23:51:24]">&lt;stikonas&gt;</a></span><span class="message">Mascellani gio@debian.org. They are released under the two-clauses</span></div><div class="line" id="235126"><span class="nick" style="color:#2e2a4a"><a href="#235126" label="[23:51:26]">&lt;stikonas&gt;</a></span><span class="message">BSD license:</span></div><div class="line" id="235203"><span class="nick" style="color:#2e2a4a"><a href="#235203" label="[23:52:03]">&lt;stikonas&gt;</a></span><span class="message">and</span></div><div class="line" id="235205"><span class="nick" style="color:#2e2a4a"><a href="#235205" label="[23:52:05]">&lt;stikonas&gt;</a></span><span class="message">Most of these programs are lightly</span></div><div class="line" id="235207"><span class="nick" style="color:#2e2a4a"><a href="#235207" label="[23:52:07]">&lt;stikonas&gt;</a></span><span class="message">patched to adapt them to the specific NBS environment, with such</span></div><div class="line" id="235208"><span class="nick" style="color:#2e2a4a"><a href="#235208" label="[23:52:08]">&lt;stikonas&gt;</a></span><span class="message">patches released under the same terms of the original files</span></div><div class="line" id="235209"><span class="nick" style="color:#2e2a4a"><a href="#235209" label="[23:52:09]">&lt;stikonas&gt;</a></span><span class="message">themselves.</span></div><div class="line" id="235222"><span class="nick" style="color:#2e2a4a"><a href="#235222" label="[23:52:22]">&lt;stikonas&gt;</a></span><span class="message">in case of flex they are both BSD</span></div><br /></div></body></html>