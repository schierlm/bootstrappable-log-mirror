<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-04-26.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="014137"><span class="nick" style="color:#389600"><a href="#014137" label="[01:41:37]">&lt;genr8eofl_&gt;</a></span><span class="message">sam_: do you read what goes on in this channel</span></div><div class="line" id="014144"><span class="nick" style="color:#8dd3c7"><a href="#014144" label="[01:41:44]">&lt;sam_&gt;</a></span><span class="message">yes</span></div><div class="line" id="014151"><span class="nick" style="color:#389600"><a href="#014151" label="[01:41:51]">&lt;genr8eofl_&gt;</a></span><span class="message">good</span></div><div class="line" id="014207"><span class="nick" style="color:#389600"><a href="#014207" label="[01:42:07]">&lt;genr8eofl_&gt;</a></span><span class="message">i will return to my normal hideout</span></div><div class="line" id="014314"><span class="nick" style="color:#8dd3c7"><a href="#014314" label="[01:43:14]">&lt;sam_&gt;</a></span><span class="message">:)</span></div><div class="line" id="120902"><span class="nick" style="color:#2e2a4a"><a href="#120902" label="[12:09:02]">&lt;fossy&gt;</a></span><span class="message">oh i didn't realise free was not noop now that's neat</span></div><div class="line" id="121102"><span class="nick" style="color:#2e2a4a"><a href="#121102" label="[12:11:02]">&lt;fossy&gt;</a></span><span class="message">rickmasters: i was also looking at Limine before - it does look like much nicer code than GRUB!</span></div><div class="line" id="121112"><span class="nick" style="color:#2e2a4a"><a href="#121112" label="[12:11:12]">&lt;fossy&gt;</a></span><span class="message">grub's build system and codegen is horrible, i don'</span></div><div class="line" id="121132"><span class="nick" style="color:#2e2a4a"><a href="#121132" label="[12:11:32]">&lt;fossy&gt;</a></span><span class="message">t really think it's feasible for use in live-bootstrap without significant work, so having linux kexec in fiwix makes a lot more sense, imo</span></div><div class="line" id="121152"><span class="nick" style="color:#2e2a4a"><a href="#121152" label="[12:11:52]">&lt;fossy&gt;</a></span><span class="message">(build system uses autogen templates generated by python LOL) (and there's extensive python codegen)</span></div><div class="line" id="130844"><span class="nick" style="color:#6b8072"><a href="#130844" label="[13:08:44]">&lt;rickmasters&gt;</a></span><span class="message">Here is a script that uses Limine to manually complete sysb/sysc after running the current partial kernel bootstrap:</span></div><div class="line" id="130853"><span class="nick" style="color:#6b8072"><a href="#130853" label="[13:08:53]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/rick-masters/8a68efcb9cb7c8797dcf85d861802c3f">https://gist.github.com/rick-masters/8a68efcb9cb7c8797dcf85d861802c3f</a> </span></div><div class="line" id="131541"><span class="nick" style="color:#80b1d3"><a href="#131541" label="[13:15:41]">&lt;pabs3&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.joachim-breitner.de/blog/802-More_thoughts_on_a_bootstrappable_GHC">https://www.joachim-breitner.de/blog/802-More_thoughts_on_a_bootstrappable_GHC</a> </span></div><div class="line" id="132043"><span class="nick" style="color:#6b8072"><a href="#132043" label="[13:20:43]">&lt;rickmasters&gt;</a></span><span class="message">rickmasters: looks like I forgot `mkdir mnt` so do that before running the script</span></div><div class="line" id="132059"><span class="nick" style="color:#6b8072"><a href="#132059" label="[13:20:59]">&lt;rickmasters&gt;</a></span><span class="message">oops, talking to myself now</span></div><div class="line" id="142921"><span class="nick" style="color:#2e2a4a"><a href="#142921" label="[14:29:21]">&lt;fossy&gt;</a></span><span class="message">nice!</span></div><div class="line" id="161824"><span class="nick" style="color:#6d2462"><a href="#161824" label="[16:18:24]">&lt;Irvise_&gt;</a></span><span class="message">Just saw the new bootstrap blog regarding Guix, they have really improved a lot throought the years :D</span></div><div class="line" id="163731"><span class="nick" style="color:#234e69"><a href="#163731" label="[16:37:31]">&lt;janneke&gt;</a></span><span class="message">stage0 -&gt; m2-planet -&gt; gnu mes has landed on guix master \o/</span></div><div class="line" id="163740"><span class="nick" style="color:#234e69"><a href="#163740" label="[16:37:40]">&lt;janneke&gt;</a></span><span class="message">=&gt; <a rel="nofollow" href="https://guix.gnu.org/en/blog/2023/the-full-source-bootstrap-building-from-source-all-the-way-down/">https://guix.gnu.org/en/blog/2023/the-full-source-bootstrap-building-from-source-all-the-way-down/</a> </span></div><div class="line" id="164408"><span class="nick" style="color:#6c3d55"><a href="#164408" label="[16:44:08]">&lt;civodul&gt;</a></span><span class="message">ðŸŽ‰</span></div><div class="line" id="164704"><span class="nick" style="color:#d9d9d9"><a href="#164704" label="[16:47:04]">&lt;next4th&gt;</a></span><span class="message">congrats and thank you for bootstrap guix!</span></div><div class="line" id="170951"><span class="nick" style="color:#bc80bd"><a href="#170951" label="[17:09:51]">&lt;river&gt;</a></span><span class="message">that is incredible!!!!</span></div><div class="line" id="171736"><span class="nick" style="color:#3c5b35"><a href="#171736" label="[17:17:36]">&lt;stikonas[m]&gt;</a></span><span class="message">janneke: we should switch to 256 byte bootstrap :)</span></div><div class="line" id="171736"><span class="nick" style="color:#3c5b35"><a href="#171736" label="[17:17:36]">&lt;stikonas[m]&gt;</a></span><span class="message">Though that is not yet released...</span></div><div class="line" id="171736"><span class="nick" style="color:#3c5b35"><a href="#171736" label="[17:17:36]">&lt;stikonas[m]&gt;</a></span><span class="message">oriansj: maybe make a release when you have some time?</span></div><div class="line" id="173954"><span class="nick" style="color:#234e69"><a href="#173954" label="[17:39:54]">&lt;janneke&gt;</a></span><span class="message">stikonas[m]: something to look forward to</span></div><div class="line" id="174109"><span class="nick" style="color:#af8d2f"><a href="#174109" label="[17:41:09]">&lt;fgaz&gt;</a></span><span class="message">congrats!</span></div><div class="line" id="174149"><span class="nick" style="color:#234e69"><a href="#174149" label="[17:41:49]">&lt;janneke&gt;</a></span><span class="message">it's always nice to have some good news in stock ;)</span></div><div class="line" id="182422"><span class="nick" style="color:#389600"><a href="#182422" label="[18:24:22]">&lt;theruran&gt;</a></span><span class="message">janneke: I am wondering, why is the bootstrap-seeds not at the bottom, and guile-bootstrap is instead?</span></div><div class="line" id="182833"><span class="nick" style="color:#234e69"><a href="#182833" label="[18:28:33]">&lt;janneke&gt;</a></span><span class="message">theruran: bootstrap-seeds would be at the bottom, but in guix it must be untarred which is done by bootar, which is written in guile</span></div><div class="line" id="182909"><span class="nick" style="color:#234e69"><a href="#182909" label="[18:29:09]">&lt;janneke&gt;</a></span><span class="message">so if you would ignore the unpacking, it would also be at the bottom</span></div><div class="line" id="183234"><span class="nick" style="color:#389600"><a href="#183234" label="[18:32:34]">&lt;theruran&gt;</a></span><span class="message">ohh got it :+1</span></div><div class="line" id="183241"><span class="nick" style="color:#389600"><a href="#183241" label="[18:32:41]">&lt;theruran&gt;</a></span><span class="message">great work!</span></div><div class="line" id="183450"><span class="nick" style="color:#234e69"><a href="#183450" label="[18:34:50]">&lt;janneke&gt;</a></span><span class="message">thanks, yeah possibly that dependency should be kept out of the graph, dunno</span></div><div class="line" id="183643"><span class="nick" style="color:#3c5b35"><a href="#183643" label="[18:36:43]">&lt;stikonas[m]&gt;</a></span><span class="message">theruran: that's the bootstrap driver... You could use a smaller one, e.g kaem-optional but that's standalone solution. Might not be the best option for bistro</span></div><div class="line" id="183657"><span class="nick" style="color:#3c5b35"><a href="#183657" label="[18:36:57]">&lt;stikonas[m]&gt;</a></span><span class="message">Where users expect some integration with package manager</span></div><div class="line" id="183846"><span class="nick" style="color:#3c5b35"><a href="#183846" label="[18:38:46]">&lt;stikonas[m]&gt;</a></span><span class="message">And plus kernel is also necessary but it's slightly more hidden than guile or kaem</span></div><div class="line" id="183926"><span class="nick" style="color:#234e69"><a href="#183926" label="[18:39:26]">&lt;janneke&gt;</a></span><span class="message">+1</span></div><div class="line" id="183936"><span class="nick" style="color:#234e69"><a href="#183936" label="[18:39:36]">&lt;janneke&gt;</a></span><span class="message">(or hardware, even)</span></div><div class="line" id="185104"><span class="nick" style="color:#389600"><a href="#185104" label="[18:51:04]">&lt;theruran&gt;</a></span><span class="message">does that mean there's a circular dependency not depicted? that guile-bootstrap is still DDC, but it just deployed as a binary for convenience</span></div><div class="line" id="185106"><span class="nick" style="color:#389600"><a href="#185106" label="[18:51:06]">&lt;theruran&gt;</a></span><span class="message">&quot;If we pull this off, guile-bootstrap will only be used as a dependency of bootar and as the driver for Guix.&quot;</span></div><div class="line" id="190337"><span class="nick" style="color:#234e69"><a href="#190337" label="[19:03:37]">&lt;janneke&gt;</a></span><span class="message">have we heard of DuskOS?</span></div><div class="line" id="190339"><span class="nick" style="color:#234e69"><a href="#190339" label="[19:03:39]">&lt;janneke&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.sr.ht/~vdupras/duskos">https://git.sr.ht/~vdupras/duskos</a> </span></div><div class="line" id="192127"><span class="nick" style="color:#3c5b35"><a href="#192127" label="[19:21:27]">&lt;stikonas[m]&gt;</a></span><span class="message">theruran: yes, but like I said that's unavoidable in package manager</span></div><div class="line" id="192151"><span class="nick" style="color:#3c5b35"><a href="#192151" label="[19:21:51]">&lt;stikonas[m]&gt;</a></span><span class="message">Unless you want to use kaem-optional-seed as package manager</span></div><div class="line" id="192205"><span class="nick" style="color:#3c5b35"><a href="#192205" label="[19:22:05]">&lt;stikonas[m]&gt;</a></span><span class="message">And bootstrap your package manager on each run...</span></div><div class="line" id="192307"><span class="nick" style="color:#3c5b35"><a href="#192307" label="[19:23:07]">&lt;stikonas[m]&gt;</a></span><span class="message">But in principle the whole process can run without guile</span></div><div class="line" id="192315"><span class="nick" style="color:#3c5b35"><a href="#192315" label="[19:23:15]">&lt;stikonas[m]&gt;</a></span><span class="message">Which we have done</span></div><div class="line" id="192323"><span class="nick" style="color:#3c5b35"><a href="#192323" label="[19:23:23]">&lt;stikonas[m]&gt;</a></span><span class="message">(Just not in guix)</span></div><div class="line" id="193100"><span class="nick" style="color:#389600"><a href="#193100" label="[19:31:00]">&lt;theruran&gt;</a></span><span class="message">OK I think I understand except the &quot;bootstrap your package manager on each run.&quot; I thought it would only need to be done once, upon install of Guix?</span></div><div class="line" id="195540"><span class="nick" style="color:#6b8072"><a href="#195540" label="[19:55:40]">&lt;rickmasters&gt;</a></span><span class="message">janneke: I've seen DuskOS. It looks cool. I'm not indoctrinated into Forth but it seems to be a favorite of many do-it-yourselfers.</span></div><div class="line" id="195700"><span class="nick" style="color:#234e69"><a href="#195700" label="[19:57:00]">&lt;janneke&gt;</a></span><span class="message">yeah, i've heard a lot of talk about how bootstrapping would be &quot;almost trivial&quot; with forth, but haven't seen anything before</span></div><div class="line" id="195709"><span class="nick" style="color:#234e69"><a href="#195709" label="[19:57:09]">&lt;janneke&gt;</a></span><span class="message">*anything real before</span></div><div class="line" id="195731"><span class="nick" style="color:#6b8072"><a href="#195731" label="[19:57:31]">&lt;rickmasters&gt;</a></span><span class="message">janneke: Ultimately its a POSIX world out there so he'll need to get to tcc/Fiwix to meet up with a reasonable path, IMHO.</span></div><div class="line" id="195747"><span class="nick" style="color:#234e69"><a href="#195747" label="[19:57:47]">&lt;janneke&gt;</a></span><span class="message">right</span></div><div class="line" id="195826"><span class="nick" style="color:#234e69"><a href="#195826" label="[19:58:26]">&lt;janneke&gt;</a></span><span class="message">of coourse, DuskOS addresses stuff below our bootstrap that we ignore currently, but we have a full gnu/linux distro</span></div><div class="line" id="195955"><span class="nick" style="color:#6b8072"><a href="#195955" label="[19:59:55]">&lt;rickmasters&gt;</a></span><span class="message">Could you elaborate? Yeah I'm a fan of many approaches we can all learn from. Maybe DuskOS can do things better at some layer.</span></div><div class="line" id="200055"><span class="nick" style="color:#234e69"><a href="#200055" label="[20:00:55]">&lt;janneke&gt;</a></span><span class="message">oh, i just read the readme; but they go from bare hardware and a small binary to an &quot;almost c&quot; compiler</span></div><div class="line" id="200341"><span class="nick" style="color:#6b8072"><a href="#200341" label="[20:03:41]">&lt;rickmasters&gt;</a></span><span class="message">Well the new kernel bootstrap does that too. He says DuskOS is smaller though.</span></div><div class="line" id="200436"><span class="nick" style="color:#6b8072"><a href="#200436" label="[20:04:36]">&lt;rickmasters&gt;</a></span><span class="message">The kernel bootstrap starts with a 3.5K POSIX kernel binary but with some work that could be compiled with an approx 384 byte bare metal binary.</span></div><div class="line" id="200618"><span class="nick" style="color:#8dd3c7"><a href="#200618" label="[20:06:18]">&lt;vagrantc&gt;</a></span><span class="message">that sounds suspiciously similar in size to hex0</span></div><div class="line" id="201002"><span class="nick" style="color:#6b8072"><a href="#201002" label="[20:10:02]">&lt;rickmasters&gt;</a></span><span class="message">vagrantc: It has an equivalent hex0 compiler as stage0's but it is an entirely independent implementation.</span></div><div class="line" id="201005"><span class="nick" style="color:#6b8072"><a href="#201005" label="[20:10:05]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/blob/main/builder-hex0-mini.hex0">https://github.com/ironmeld/builder-hex0/blob/main/builder-hex0-mini.hex0</a> </span></div><div class="line" id="201154"><span class="nick" style="color:#8dd3c7"><a href="#201154" label="[20:11:54]">&lt;vagrantc&gt;</a></span><span class="message">it just was interesting to see a similar size ... sort of like a constant of the universe or something :)</span></div><div class="line" id="201427"><span class="nick" style="color:#3c5b35"><a href="#201427" label="[20:14:27]">&lt;stikonas[m]&gt;</a></span><span class="message">vagrantc: hex0 is a bit smaller...</span></div><div class="line" id="201448"><span class="nick" style="color:#3c5b35"><a href="#201448" label="[20:14:48]">&lt;stikonas[m]&gt;</a></span><span class="message">We have hex0 that is 256 bytes including elf header</span></div><div class="line" id="201454"><span class="nick" style="color:#8dd3c7"><a href="#201454" label="[20:14:54]">&lt;vagrantc&gt;</a></span><span class="message">oh, wow.</span></div><div class="line" id="201504"><span class="nick" style="color:#6b8072"><a href="#201504" label="[20:15:04]">&lt;rickmasters&gt;</a></span><span class="message">oriansj also mentions bootOS as possible starting layer: <a rel="nofollow" href="https://github.com/nanochess/bootOS">https://github.com/nanochess/bootOS</a> </span></div><div class="line" id="201523"><span class="nick" style="color:#3c5b35"><a href="#201523" label="[20:15:23]">&lt;stikonas[m]&gt;</a></span><span class="message">This baremetal stuff has no header, so can pack more</span></div><div class="line" id="201537"><span class="nick" style="color:#3c5b35"><a href="#201537" label="[20:15:37]">&lt;stikonas[m]&gt;</a></span><span class="message">But elf header is mostly data, not code</span></div><div class="line" id="201603"><span class="nick" style="color:#8dd3c7"><a href="#201603" label="[20:16:03]">&lt;vagrantc&gt;</a></span><span class="message">in the grand scheme of things, that's getting to be on the same order of magnitude of smallness :)</span></div><div class="line" id="201632"><span class="nick" style="color:#3c5b35"><a href="#201632" label="[20:16:32]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, anything sub 1K is OK...</span></div><div class="line" id="201649"><span class="nick" style="color:#8dd3c7"><a href="#201649" label="[20:16:49]">&lt;vagrantc&gt;</a></span><span class="message">thought i saw 357 bytes being mentioned for hex0 in several places</span></div><div class="line" id="201711"><span class="nick" style="color:#3c5b35"><a href="#201711" label="[20:17:11]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, hex1 is still written in hex0 and that is also less than 1K</span></div><div class="line" id="201727"><span class="nick" style="color:#3c5b35"><a href="#201727" label="[20:17:27]">&lt;stikonas[m]&gt;</a></span><span class="message">vagrantc: 357 was before I made it smaller</span></div><div class="line" id="201802"><span class="nick" style="color:#8dd3c7"><a href="#201802" label="[20:18:02]">&lt;vagrantc&gt;</a></span><span class="message">:)</span></div><div class="line" id="201809"><span class="nick" style="color:#6b8072"><a href="#201809" label="[20:18:09]">&lt;rickmasters&gt;</a></span><span class="message">re: small ELF programs there are unholy hacks that can be done: <a rel="nofollow" href="https://www.muppetlabs.com/~breadbox/software/tiny/teensy.html">https://www.muppetlabs.com/~breadbox/software/tiny/teensy.html</a> </span></div><div class="line" id="201823"><span class="nick" style="color:#234e69"><a href="#201823" label="[20:18:23]">&lt;janneke&gt;</a></span><span class="message">guix uses an already ancient stage0 and m2-planet</span></div><div class="line" id="201831"><span class="nick" style="color:#3c5b35"><a href="#201831" label="[20:18:31]">&lt;stikonas[m]&gt;</a></span><span class="message">E.g. by using stuff like cmp al, 8 bit number instead of cmp eax, 32 bit</span></div><div class="line" id="201856"><span class="nick" style="color:#3c5b35"><a href="#201856" label="[20:18:56]">&lt;stikonas[m]&gt;</a></span><span class="message">256 byte stuff is only from git...</span></div><div class="line" id="201941"><span class="nick" style="color:#3c5b35"><a href="#201941" label="[20:19:41]">&lt;stikonas[m]&gt;</a></span><span class="message">It has been a year since the last release...</span></div><div class="line" id="201948"><span class="nick" style="color:#234e69"><a href="#201948" label="[20:19:48]">&lt;janneke&gt;</a></span><span class="message">yeah, iwbn to have a consistent set of releases, not easy</span></div><div class="line" id="202014"><span class="nick" style="color:#8dd3c7"><a href="#202014" label="[20:20:14]">&lt;vagrantc&gt;</a></span><span class="message">on the other hand, good progress is nice too :)</span></div><div class="line" id="202042"><span class="nick" style="color:#3c5b35"><a href="#202042" label="[20:20:42]">&lt;stikonas[m]&gt;</a></span><span class="message">This is new unreleased stuff: <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/CHANGELOG.org">https://github.com/oriansj/stage0-posix/blob/master/CHANGELOG.org</a> </span></div><div class="line" id="202047"><span class="nick" style="color:#2e2a4a"><a href="#202047" label="[20:20:47]">&lt;genr8eofl&gt;</a></span><span class="message">janneke: nice blog and congrats on guix bootstrap</span></div><div class="line" id="202053"><span class="nick" style="color:#234e69"><a href="#202053" label="[20:20:53]">&lt;janneke&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="202148"><span class="nick" style="color:#234e69"><a href="#202148" label="[20:21:48]">&lt;janneke&gt;</a></span><span class="message">stikonas[m]: very nice</span></div><div class="line" id="202552"><span class="nick" style="color:#6b8072"><a href="#202552" label="[20:25:52]">&lt;fitzsim&gt;</a></span><span class="message">yes, great milestone, congratulations!</span></div><div class="line" id="202644"><span class="nick" style="color:#6b8072"><a href="#202644" label="[20:26:44]">&lt;fitzsim&gt;</a></span><span class="message">have to ask; is a ppc64 bootstrap planned?</span></div><div class="line" id="202656"><span class="nick" style="color:#80b1d3"><a href="#202656" label="[20:26:56]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: we don't have anybody doing it</span></div><div class="line" id="202702"><span class="nick" style="color:#80b1d3"><a href="#202702" label="[20:27:02]">&lt;stikonas&gt;</a></span><span class="message">but feel free to start it</span></div><div class="line" id="202722"><span class="nick" style="color:#80b1d3"><a href="#202722" label="[20:27:22]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix at the moment is x86/amd64/riscv32/riscv64/aarch64</span></div><div class="line" id="202739"><span class="nick" style="color:#80b1d3"><a href="#202739" label="[20:27:39]">&lt;stikonas&gt;</a></span><span class="message">and aarch64 is in slightly worse state than other 4</span></div><div class="line" id="202752"><span class="nick" style="color:#80b1d3"><a href="#202752" label="[20:27:52]">&lt;stikonas&gt;</a></span><span class="message">well, there is also knight architecture but there is no hardware for it</span></div><div class="line" id="202802"><span class="nick" style="color:#80b1d3"><a href="#202802" label="[20:28:02]">&lt;stikonas&gt;</a></span><span class="message">or any POSIX kernel for knight...</span></div><div class="line" id="202830"><span class="nick" style="color:#80b1d3"><a href="#202830" label="[20:28:30]">&lt;stikonas&gt;</a></span><span class="message">and then of course there are higher layers like mes and tcc...</span></div><div class="line" id="202920"><span class="nick" style="color:#6b8072"><a href="#202920" label="[20:29:20]">&lt;fitzsim&gt;</a></span><span class="message">cloning stage0-posix...</span></div><div class="line" id="202932"><span class="nick" style="color:#6b8072"><a href="#202932" label="[20:29:32]">&lt;fitzsim&gt;</a></span><span class="message">does gcc 2.95 have ppc64 support?</span></div><div class="line" id="202957"><span class="nick" style="color:#234e69"><a href="#202957" label="[20:29:57]">&lt;janneke&gt;</a></span><span class="message">no, gcc 2.95 is 32bit</span></div><div class="line" id="203008"><span class="nick" style="color:#6b8072"><a href="#203008" label="[20:30:08]">&lt;fitzsim&gt;</a></span><span class="message">ah, ok</span></div><div class="line" id="203139"><span class="nick" style="color:#80b1d3"><a href="#203139" label="[20:31:39]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: gcc 2.95 is not really necessary</span></div><div class="line" id="203224"><span class="nick" style="color:#80b1d3"><a href="#203224" label="[20:32:24]">&lt;stikonas&gt;</a></span><span class="message">tcc can build at least gcc 4.0.4 (probably newer) and binutils 2.30 (current stable tcc can't go any newer but 2.30 is reasonably modern)</span></div><div class="line" id="203245"><span class="nick" style="color:#6b8072"><a href="#203245" label="[20:32:45]">&lt;fitzsim&gt;</a></span><span class="message">oh cool, hadn't heard that</span></div><div class="line" id="203257"><span class="nick" style="color:#80b1d3"><a href="#203257" label="[20:32:57]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: that's what live-bootstrap builds...</span></div><div class="line" id="203302"><span class="nick" style="color:#80b1d3"><a href="#203302" label="[20:33:02]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="203316"><span class="nick" style="color:#80b1d3"><a href="#203316" label="[20:33:16]">&lt;stikonas&gt;</a></span><span class="message">and gcc 4.0.4 is from the times when we only had binutils 2.14</span></div><div class="line" id="203324"><span class="nick" style="color:#80b1d3"><a href="#203324" label="[20:33:24]">&lt;stikonas&gt;</a></span><span class="message">since then we upgraded to binutils 2.30</span></div><div class="line" id="203459"><span class="nick" style="color:#80b1d3"><a href="#203459" label="[20:34:59]">&lt;stikonas&gt;</a></span><span class="message">gcc 4 is not that old, I think only riscv support is missing but ekaitz backported it to gcc 4.6</span></div><div class="line" id="203658"><span class="nick" style="color:#6d2462"><a href="#203658" label="[20:36:58]">&lt;ekaitz&gt;</a></span><span class="message">i did but I can't say it's perfect</span></div><div class="line" id="203706"><span class="nick" style="color:#6d2462"><a href="#203706" label="[20:37:06]">&lt;ekaitz&gt;</a></span><span class="message">it did compile a really small file</span></div><div class="line" id="203712"><span class="nick" style="color:#6d2462"><a href="#203712" label="[20:37:12]">&lt;ekaitz&gt;</a></span><span class="message">no linking or anything like that</span></div><div class="line" id="203715"><span class="nick" style="color:#6d2462"><a href="#203715" label="[20:37:15]">&lt;ekaitz&gt;</a></span><span class="message">and C only</span></div><div class="line" id="203835"><span class="nick" style="color:#3c5b35"><a href="#203835" label="[20:38:35]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, OK... Still there is some progress</span></div><div class="line" id="204104"><span class="nick" style="color:#80b1d3"><a href="#204104" label="[20:41:04]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: there are a couple of ways of starting a new arch, it's not clear what is better, you could start with C tools and add ppc support there, or you could start with early hex0 steps</span></div><div class="line" id="204143"><span class="nick" style="color:#80b1d3"><a href="#204143" label="[20:41:43]">&lt;stikonas&gt;</a></span><span class="message">although I guess the very first steps would be to figure out how to write elf header</span></div><div class="line" id="204151"><span class="nick" style="color:#6b8072"><a href="#204151" label="[20:41:51]">&lt;fitzsim&gt;</a></span><span class="message">hmm, yeah</span></div><div class="line" id="204231"><span class="nick" style="color:#80b1d3"><a href="#204231" label="[20:42:31]">&lt;stikonas&gt;</a></span><span class="message">i.e. all the stuff until ELF_text in <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/blob/master/POSIX/x86/hex0_x86.hex0">https://github.com/oriansj/bootstrap-seeds/blob/master/POSIX/x86/hex0_x86.hex0</a> </span></div><div class="line" id="204312"><span class="nick" style="color:#80b1d3"><a href="#204312" label="[20:43:12]">&lt;stikonas&gt;</a></span><span class="message">I'm not very familiar with ppc, but then one has to think how to go from opcodes to hex (or octal or binary...)</span></div><div class="line" id="204312"><span class="nick" style="color:#6b8072"><a href="#204312" label="[20:43:12]">&lt;fitzsim&gt;</a></span><span class="message">yeah, just looking at the riscv64 version of that file</span></div><div class="line" id="204329"><span class="nick" style="color:#80b1d3"><a href="#204329" label="[20:43:29]">&lt;stikonas&gt;</a></span><span class="message">so e.g. riscv64 is a fixed word size architecture</span></div><div class="line" id="204331"><span class="nick" style="color:#6b8072"><a href="#204331" label="[20:43:31]">&lt;fitzsim&gt;</a></span><span class="message">how far up the stack must one go before ppc64le is already there?</span></div><div class="line" id="204353"><span class="nick" style="color:#6b8072"><a href="#204353" label="[20:43:53]">&lt;fitzsim&gt;</a></span><span class="message">e.g., cc_ppc64le would need to be written from scratch, I guess</span></div><div class="line" id="204415"><span class="nick" style="color:#80b1d3"><a href="#204415" label="[20:44:15]">&lt;stikonas&gt;</a></span><span class="message">cc_ppc64le definitely needs to be written</span></div><div class="line" id="204424"><span class="nick" style="color:#6b8072"><a href="#204424" label="[20:44:24]">&lt;fitzsim&gt;</a></span><span class="message">and M2libc routines</span></div><div class="line" id="204426"><span class="nick" style="color:#80b1d3"><a href="#204426" label="[20:44:26]">&lt;stikonas&gt;</a></span><span class="message">and after than you need to add support to M2-Planet/M2libc</span></div><div class="line" id="204431"><span class="nick" style="color:#80b1d3"><a href="#204431" label="[20:44:31]">&lt;stikonas&gt;</a></span><span class="message">but those are smaller bits</span></div><div class="line" id="204438"><span class="nick" style="color:#80b1d3"><a href="#204438" label="[20:44:38]">&lt;stikonas&gt;</a></span><span class="message">only a few % of M2-Planet is arch specific</span></div><div class="line" id="204623"><span class="nick" style="color:#80b1d3"><a href="#204623" label="[20:46:23]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: so e.g. on risc-v you can see M1 defines are like RS1_SP RS2_A0 SB and then each of these is converted to somethign like .somehex .somehex2 opcodehex</span></div><div class="line" id="204629"><span class="nick" style="color:#80b1d3"><a href="#204629" label="[20:46:29]">&lt;stikonas&gt;</a></span><span class="message">and . means add it to the next thing</span></div><div class="line" id="204655"><span class="nick" style="color:#80b1d3"><a href="#204655" label="[20:46:55]">&lt;stikonas&gt;</a></span><span class="message">on the other hand on x86 the whole thing is one define</span></div><div class="line" id="204715"><span class="nick" style="color:#80b1d3"><a href="#204715" label="[20:47:15]">&lt;stikonas&gt;</a></span><span class="message">e.g. mov_edi,eax</span></div><div class="line" id="204723"><span class="nick" style="color:#80b1d3"><a href="#204723" label="[20:47:23]">&lt;stikonas&gt;</a></span><span class="message">there is no separate mov or register</span></div><div class="line" id="204735"><span class="nick" style="color:#80b1d3"><a href="#204735" label="[20:47:35]">&lt;stikonas&gt;</a></span><span class="message">so stuff like that is arch specific</span></div><div class="line" id="204743"><span class="nick" style="color:#80b1d3"><a href="#204743" label="[20:47:43]">&lt;stikonas&gt;</a></span><span class="message">and one needs to figure out the easiest way of working</span></div><div class="line" id="204831"><span class="nick" style="color:#80b1d3"><a href="#204831" label="[20:48:31]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: it looks like ppc is fixed word size architecture</span></div><div class="line" id="204838"><span class="nick" style="color:#80b1d3"><a href="#204838" label="[20:48:38]">&lt;stikonas&gt;</a></span><span class="message">so you probably want risc-v method</span></div><div class="line" id="204859"><span class="nick" style="color:#80b1d3"><a href="#204859" label="[20:48:59]">&lt;stikonas&gt;</a></span><span class="message">which is more tedious in early steps</span></div><div class="line" id="204901"><span class="nick" style="color:#80b1d3"><a href="#204901" label="[20:49:01]">&lt;stikonas&gt;</a></span><span class="message">though is nicer later</span></div><div class="line" id="204917"><span class="nick" style="color:#80b1d3"><a href="#204917" label="[20:49:17]">&lt;stikonas&gt;</a></span><span class="message">(by the time cc_ppc64le has to be written)</span></div><div class="line" id="205104"><span class="nick" style="color:#6b8072"><a href="#205104" label="[20:51:04]">&lt;fitzsim&gt;</a></span><span class="message">it looks like lots of work has been done on kernel minimization since I last looked at this</span></div><div class="line" id="205116"><span class="nick" style="color:#80b1d3"><a href="#205116" label="[20:51:16]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: and we also have stage0-uefi (though nothing after that)</span></div><div class="line" id="205135"><span class="nick" style="color:#80b1d3"><a href="#205135" label="[20:51:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: any reason why we are using dhcpcd and not dhcp?</span></div><div class="line" id="205140"><span class="nick" style="color:#80b1d3"><a href="#205140" label="[20:51:40]">&lt;stikonas&gt;</a></span><span class="message">maybe that one has more stable tarballs</span></div><div class="line" id="205219"><span class="nick" style="color:#80b1d3"><a href="#205219" label="[20:52:19]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: see <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi">https://git.stikonas.eu/andrius/stage0-uefi</a>  this runs directly on UEFI</span></div><div class="line" id="205252"><span class="nick" style="color:#6b8072"><a href="#205252" label="[20:52:52]">&lt;fitzsim&gt;</a></span><span class="message">neat!</span></div><div class="line" id="205259"><span class="nick" style="color:#234e69"><a href="#205259" label="[20:52:59]">&lt;nektro&gt;</a></span><span class="message">janneke, and everyone, congrats ðŸŽ‰</span></div><div class="line" id="205323"><span class="nick" style="color:#6b8072"><a href="#205323" label="[20:53:23]">&lt;fitzsim&gt;</a></span><span class="message">I guess eventually there will be a libreboot minimization effort?</span></div><div class="line" id="205343"><span class="nick" style="color:#80b1d3"><a href="#205343" label="[20:53:43]">&lt;stikonas&gt;</a></span><span class="message">fitzsim: libreboot is in a bit of a sad state, it does not run on any new hardware...</span></div><div class="line" id="205358"><span class="nick" style="color:#80b1d3"><a href="#205358" label="[20:53:58]">&lt;stikonas&gt;</a></span><span class="message">I guess eventually all old hardware will break</span></div><div class="line" id="205409"><span class="nick" style="color:#80b1d3"><a href="#205409" label="[20:54:09]">&lt;stikonas&gt;</a></span><span class="message">not sure what will happen to libreboot then</span></div><div class="line" id="205425"><span class="nick" style="color:#80b1d3"><a href="#205425" label="[20:54:25]">&lt;stikonas&gt;</a></span><span class="message">you might have more luck with non x86 arches</span></div><div class="line" id="205426"><span class="nick" style="color:#6b8072"><a href="#205426" label="[20:54:26]">&lt;fitzsim&gt;</a></span><span class="message">sure, but for bootstrapping purposes old hardware can play a role</span></div><div class="line" id="205433"><span class="nick" style="color:#80b1d3"><a href="#205433" label="[20:54:33]">&lt;stikonas&gt;</a></span><span class="message">if you can find it...</span></div><div class="line" id="205455"><span class="nick" style="color:#80b1d3"><a href="#205455" label="[20:54:55]">&lt;stikonas&gt;</a></span><span class="message">e.g. it's hard to dinf PDP-8 these days...</span></div><div class="line" id="205503"><span class="nick" style="color:#6b8072"><a href="#205503" label="[20:55:03]">&lt;fitzsim&gt;</a></span><span class="message">haha</span></div><div class="line" id="205551"><span class="nick" style="color:#80b1d3"><a href="#205551" label="[20:55:51]">&lt;stikonas&gt;</a></span><span class="message">some arm or risc-v boards don't have any non-free firmware (only bootrom)</span></div><div class="line" id="205618"><span class="nick" style="color:#80b1d3"><a href="#205618" label="[20:56:18]">&lt;stikonas&gt;</a></span><span class="message">but something like builder-hex0 would be a few times bigger there as we would need to write some drivers (I/O, memory, etc...)</span></div><div class="line" id="205718"><span class="nick" style="color:#6b8072"><a href="#205718" label="[20:57:18]">&lt;fitzsim&gt;</a></span><span class="message">yeah; one idea is to synthesize a Microwatt-based SoC and start from there</span></div><div class="line" id="205843"><span class="nick" style="color:#6b8072"><a href="#205843" label="[20:58:43]">&lt;fitzsim&gt;</a></span><span class="message">with UEFI, I guess the idea is that someone could fully bootstrap their &quot;daily driver&quot;</span></div><div class="line" id="205850"><span class="nick" style="color:#6b8072"><a href="#205850" label="[20:58:50]">&lt;fitzsim&gt;</a></span><span class="message">which would be really cool</span></div><div class="line" id="220916"><span class="nick" style="color:#6c3d55"><a href="#220916" label="[22:09:16]">&lt;muurkha&gt;</a></span><span class="message">janneke: congratulations!  bootstrapping guix from a 357-byte program is a truly magnificent achievement</span></div><div class="line" id="221350"><span class="nick" style="color:#d9d9d9"><a href="#221350" label="[22:13:50]">&lt;mihi&gt;</a></span><span class="message">janneke, I do know DuskOS (and also CollapseOS by the same author) and incidentally I made my first contribution to it yesterday :)</span></div><div class="line" id="221620"><span class="nick" style="color:#d9d9d9"><a href="#221620" label="[22:16:20]">&lt;mihi&gt;</a></span><span class="message">rickmasters, &quot;Ultimately its a POSIX world out there&quot;: Yes, I think it is sad that today to have an OS as a daily driver it needs to have a &quot;modern web browser&quot; (more complex than many whole niche OSes) and that to speak any network protocol (except gopher and maybe irc) you need a TLS implementation, which pulls in all the X.509, ASN.1, XKCD.2347 stuff. Yet I wonder whether SerenityOS could have</span></div><div class="line" id="221620"><span class="nick" style="color:#d9d9d9"><a href="#221620" label="[22:16:20]">&lt;mihi&gt;</a></span><span class="message">been successful as well if it wasn't inspired by POSIX architecture...</span></div><div class="line" id="221724"><span class="nick" style="color:#d9d9d9"><a href="#221724" label="[22:17:24]">&lt;mihi&gt;</a></span><span class="message">That TLS requirement effectively forces the small community that still want to use Native Oberon as their daily driver to either tunnel all their traffic through stunnel on another machine, resort to using gopher, or start using a different OS for web activity...</span></div><div class="line" id="221727"><span class="nick" style="color:#6c3d55"><a href="#221727" label="[22:17:27]">&lt;muurkha&gt;</a></span><span class="message">it's not successful yet</span></div><div class="line" id="221738"><span class="nick" style="color:#6c3d55"><a href="#221738" label="[22:17:38]">&lt;muurkha&gt;</a></span><span class="message">you could imple</span></div><div class="line" id="221750"><span class="nick" style="color:#6c3d55"><a href="#221750" label="[22:17:50]">&lt;muurkha&gt;</a></span><span class="message">you could implement TLS in Oberon</span></div><div class="line" id="221752"><span class="nick" style="color:#6c3d55"><a href="#221752" label="[22:17:52]">&lt;muurkha&gt;</a></span><span class="message">sorry</span></div><div class="line" id="221835"><span class="nick" style="color:#d9d9d9"><a href="#221835" label="[22:18:35]">&lt;mihi&gt;</a></span><span class="message">muurkha, as &quot;successful&quot; as it is today, I mean. From what it started from, its success is surprisingly large.</span></div><div class="line" id="221854"><span class="nick" style="color:#d9d9d9"><a href="#221854" label="[22:18:54]">&lt;mihi&gt;</a></span><span class="message">muurkha, &quot;you could implement NDISWRAPPER on Linux/Hurd/BSD&quot;. Would you want that? :D</span></div><div class="line" id="221915"><span class="nick" style="color:#d9d9d9"><a href="#221915" label="[22:19:15]">&lt;mihi&gt;</a></span><span class="message">from the Oberon simplicity standpoint, X.509 is part of the problem :D</span></div><div class="line" id="221916"><span class="nick" style="color:#6c3d55"><a href="#221916" label="[22:19:16]">&lt;muurkha&gt;</a></span><span class="message">yes, I think ndiswrapper was a good idea</span></div><div class="line" id="221930"><span class="nick" style="color:#6c3d55"><a href="#221930" label="[22:19:30]">&lt;muurkha&gt;</a></span><span class="message">yes, I agree</span></div><div class="line" id="221953"><span class="nick" style="color:#6c3d55"><a href="#221953" label="[22:19:53]">&lt;muurkha&gt;</a></span><span class="message">maybe you could start with tweetnacl</span></div><div class="line" id="222014"><span class="nick" style="color:#6c3d55"><a href="#222014" label="[22:20:14]">&lt;muurkha&gt;</a></span><span class="message">BER isn't nearly as bad as it looks at first</span></div><div class="line" id="222210"><span class="nick" style="color:#d9d9d9"><a href="#222210" label="[22:22:10]">&lt;mihi&gt;</a></span><span class="message">RSA, AES, Diffie-Hellman exist in Oberon already. So you can encrypt stuff :)</span></div><div class="line" id="222302"><span class="nick" style="color:#d9d9d9"><a href="#222302" label="[22:23:02]">&lt;mihi&gt;</a></span><span class="message">but I'm digressing. To get back to topic, Native Oberon is not boostrappable from itself (there is a cross compilation path via obnc, but to go that route you first need to bootstrap a POSIX system...)</span></div><div class="line" id="222412"><span class="nick" style="color:#d9d9d9"><a href="#222412" label="[22:24:12]">&lt;mihi&gt;</a></span><span class="message">anyway, congrats to janneke and all the guix folks for getting the Full Source Bootstrap merged :)</span></div><div class="line" id="222505"><span class="nick" style="color:#6c3d55"><a href="#222505" label="[22:25:05]">&lt;muurkha&gt;</a></span><span class="message">A bootstrap pa</span></div><div class="line" id="222523"><span class="nick" style="color:#6c3d55"><a href="#222523" label="[22:25:23]">&lt;muurkha&gt;</a></span><span class="message">th for Oberon from a tiny seed would be pretty great</span></div><div class="line" id="222543"><span class="nick" style="color:#6c3d55"><a href="#222543" label="[22:25:43]">&lt;muurkha&gt;</a></span><span class="message">And could plausibly be much shorter than a C system</span></div><div class="line" id="222556"><span class="nick" style="color:#6c3d55"><a href="#222556" label="[22:25:56]">&lt;muurkha&gt;</a></span><span class="message">well, a POSIX system</span></div><div class="line" id="222626"><span class="nick" style="color:#6c3d55"><a href="#222626" label="[22:26:26]">&lt;muurkha&gt;</a></span><span class="message">and it might be an interesting alternative to Fiwix</span></div><div class="line" id="224902"><span class="nick" style="color:#bc80bd"><a href="#224902" label="[22:49:02]">&lt;dongcarl&gt;</a></span><span class="message">civodul, janneke, oriansj: Congrats to all for completing this monumental undertaking. Bootstrappable builds for all!</span></div><div class="line" id="225511"><span class="nick" style="color:#6c3d55"><a href="#225511" label="[22:55:11]">&lt;muurkha&gt;</a></span><span class="message">I found this post about sourciness interesting in this context: <a rel="nofollow" href="http://inamidst.com/whits/2014/source">http://inamidst.com/whits/2014/source</a> </span></div><div class="line" id="225846"><span class="nick" style="color:#6c3d55"><a href="#225846" label="[22:58:46]">&lt;muurkha&gt;</a></span><span class="message">hmm, actually &quot;next steps&quot; says that a 25MB Guile executable is still part of the binary seeds needed</span></div><div class="line" id="225926"><span class="nick" style="color:#6c3d55"><a href="#225926" label="[22:59:26]">&lt;muurkha&gt;</a></span><span class="message">I thought we had Guile's bootstrapping problem licked?</span></div><div class="line" id="230550"><span class="nick" style="color:#d9d9d9"><a href="#230550" label="[23:05:50]">&lt;mihi&gt;</a></span><span class="message">muurkha, that Guile binary is used by Guix to retrieve, unpack, etc. the source files and to orchestrate the bootstrap. It is needed the same way as a git client and python are needed to run live-bootstrap. That Guile executable will not affect any file of the resulting system.</span></div><div class="line" id="230554"><span class="nick" style="color:#80b1d3"><a href="#230554" label="[23:05:54]">&lt;stikonas&gt;</a></span><span class="message">muurkha: these are different problems</span></div><div class="line" id="230612"><span class="nick" style="color:#80b1d3"><a href="#230612" label="[23:06:12]">&lt;stikonas&gt;</a></span><span class="message">mihi: that's only partially true</span></div><div class="line" id="230628"><span class="nick" style="color:#80b1d3"><a href="#230628" label="[23:06:28]">&lt;stikonas&gt;</a></span><span class="message">guile is used to run some scripts inside bootstrap in guix</span></div><div class="line" id="230641"><span class="nick" style="color:#80b1d3"><a href="#230641" label="[23:06:41]">&lt;stikonas&gt;</a></span><span class="message">in particular gash is used that does not yet run on mes</span></div><div class="line" id="230722"><span class="nick" style="color:#d9d9d9"><a href="#230722" label="[23:07:22]">&lt;mihi&gt;</a></span><span class="message">ok, but those are not necessarrily &quot;needed&quot; (both live bootstrap and my own bootstrap-from-git script demonstrate that these scripts run well enough with coreutils/bash as well)</span></div><div class="line" id="230731"><span class="nick" style="color:#80b1d3"><a href="#230731" label="[23:07:31]">&lt;stikonas&gt;</a></span><span class="message">but guile usage inside bootstrap is mostly limited to running shell and unpacking stuff with bootar</span></div><div class="line" id="230737"><span class="nick" style="color:#80b1d3"><a href="#230737" label="[23:07:37]">&lt;stikonas&gt;</a></span><span class="message">mihi: indeed</span></div><br /></div></body></html>