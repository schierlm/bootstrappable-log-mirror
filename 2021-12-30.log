<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-12-30.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="024752"><span class="nick" style="color:#8dd3c7"><a href="#024752" label="[02:47:52]">&lt;oriansj&gt;</a></span><span class="message">muurkha: it happens. Besides hardware bootstrapping is going to be a wonderful challenge and solving the Nexus Intruder problem is going to be much more work to solve.</span></div><div class="line" id="033249"><span class="nick" style="color:#2e2a4a"><a href="#033249" label="[03:32:49]">&lt;stikonas&gt;</a></span><span class="message">the problem with hardware bootstrapping is that it is not as scalable as software bootstrap. Anybody can easily run stage0-posix or live-bootstrap and it only takes a few hours. Yet doing hw bootstrap yourself is hard.</span></div><div class="line" id="033335"><span class="nick" style="color:#2e2a4a"><a href="#033335" label="[03:33:35]">&lt;stikonas&gt;</a></span><span class="message">and to be sure that it is properly bootstrapped, everybody has to do it him/herself</span></div><div class="line" id="125348"><span class="nick" style="color:#8dd3c7"><a href="#125348" label="[12:53:48]">&lt;oriansj&gt;</a></span><span class="message">stikonas: very true. But that is the great secret of hard problems, you first have to solve the smaller slightly easier problems inside them first.</span></div><div class="line" id="144907"><span class="nick" style="color:#6b8072"><a href="#144907" label="[14:49:07]">&lt;bauen1&gt;</a></span><span class="message">oriansj: what is the nexus intruder problem / are there more ressources on it ?</span></div><div class="line" id="144957"><span class="nick" style="color:#6b8072"><a href="#144957" label="[14:49:57]">&lt;bauen1&gt;</a></span><span class="message">stikonas: it depends on how you organize it, e.g. you could reuse many approaches and even large amount of code between many different ARM processors / SoCs</span></div><div class="line" id="145106"><span class="nick" style="color:#6b8072"><a href="#145106" label="[14:51:06]">&lt;bauen1&gt;</a></span><span class="message">stikonas: e.g. what i'm trying to do, writing to SPI flash with switches, can be reused for other boards, and basically every bit of code except some drivers and platform specific code can be reused</span></div><div class="line" id="145238"><span class="nick" style="color:#6b8072"><a href="#145238" label="[14:52:38]">&lt;bauen1&gt;</a></span><span class="message">stikonas: and you don't need that many drivers either, you need at least an UART and SPI driver, and if you're trying to write a posix-like kernel, probably support for interrupts, mmu, task switching, dram (and if you're feeling particularely fancy a network card)</span></div><div class="line" id="145258"><span class="nick" style="color:#6b8072"><a href="#145258" label="[14:52:58]">&lt;bauen1&gt;</a></span><span class="message">stikonas: thankfully at least some are pretty much standarized between ARM systems</span></div><div class="line" id="145356"><span class="nick" style="color:#6b8072"><a href="#145356" label="[14:53:56]">&lt;bauen1&gt;</a></span><span class="message">stikonas: unless you're talking about building the actual hardware, which will be limited by how much money and time you can spend than anything else probably</span></div><div class="line" id="145801"><span class="nick" style="color:#2e2a4a"><a href="#145801" label="[14:58:01]">&lt;stikonas&gt;</a></span><span class="message">well, yes, baremetal bootstrap is somewhere in the middle</span></div><div class="line" id="145815"><span class="nick" style="color:#2e2a4a"><a href="#145815" label="[14:58:15]">&lt;stikonas&gt;</a></span><span class="message">but actually hardawre is much more involved</span></div><div class="line" id="163750"><span class="nick" style="color:#80b1d3"><a href="#163750" label="[16:37:50]">&lt;lagash&gt;</a></span><span class="message">Are there any books on bootstrapping? Like, dead tree manuals in case the apocalypse happens, etc?</span></div><div class="line" id="173859"><span class="nick" style="color:#8dd3c7"><a href="#173859" label="[17:38:59]">&lt;oriansj&gt;</a></span><span class="message">lagash: bootstrapping civilization: yes; bootstrapping software/computer hardware: no</span></div><div class="line" id="174855"><span class="nick" style="color:#8dd3c7"><a href="#174855" label="[17:48:55]">&lt;oriansj&gt;</a></span><span class="message">bauen1: The Nexus Intruder program was a (still very classified) paper written by the DoD in 1958 speculating that computer hardware will be designed in software. Then it basically proposed essentially a hardware trusting trust attack that compromises software; which in turn ensures future hardware is compromised too. creating an unbreaking chain of compromised operating systems and hardware that the United States could forever use</span></div><div class="line" id="174855"><span class="nick" style="color:#8dd3c7"><a href="#174855" label="[17:48:55]">&lt;oriansj&gt;</a></span><span class="message">against the Soviet Union.</span></div><div class="line" id="175037"><span class="nick" style="color:#8dd3c7"><a href="#175037" label="[17:50:37]">&lt;oriansj&gt;</a></span><span class="message">In short if software is used in the design and/or manufacture of hardware, you can't be certain that it isn't going to subtly change the output to produce something which gives a backdoor to an attacker.</span></div><div class="line" id="175136"><span class="nick" style="color:#8dd3c7"><a href="#175136" label="[17:51:36]">&lt;oriansj&gt;</a></span><span class="message">unless one has a chain of trust from human creation of computers all the way to current computer controlled manufacture of chips.</span></div><div class="line" id="192659"><span class="nick" style="color:#6d2462"><a href="#192659" label="[19:26:59]">&lt;muurkha&gt;</a></span><span class="message">interesting, I hadn't heard about that</span></div><div class="line" id="225154"><span class="nick" style="color:#8dd3c7"><a href="#225154" label="[22:51:54]">&lt;oriansj&gt;</a></span><span class="message">it as of this moment is entirely theoretical only as we have no idea if the DoD did ever convert the idea into reality and use it against the Soviet Union. As it would first require implementing a trusting trust attack and getting it to stick in an era where most things were done in assembly and compromising the units that build silicon chips in the Soviet Union.</span></div><div class="line" id="230320"><span class="nick" style="color:#8dd3c7"><a href="#230320" label="[23:03:20]">&lt;oriansj&gt;</a></span><span class="message">These days however, I think such an attack would be quite cheap to do for a government</span></div><div class="line" id="232855"><span class="nick" style="color:#6d2462"><a href="#232855" label="[23:28:55]">&lt;muurkha&gt;</a></span><span class="message">it sounds a lot more difficult than the software version</span></div><div class="line" id="233012"><span class="nick" style="color:#6d2462"><a href="#233012" label="[23:30:12]">&lt;muurkha&gt;</a></span><span class="message">because the compromised software has to somehow figure out how to insert the self-propagating backdoor into CPUs that hadn't been invented yet when the initial software was written</span></div><div class="line" id="233029"><span class="nick" style="color:#6d2462"><a href="#233029" label="[23:30:29]">&lt;muurkha&gt;</a></span><span class="message">that's a lot more difficult than a compiler recognizing itself</span></div><div class="line" id="234129"><span class="nick" style="color:#6d2462"><a href="#234129" label="[23:41:29]">&lt;muurkha&gt;</a></span><span class="message">you could do it with a human in the loop: exfiltrate the unfinished CPU design to the tiger team, who figures out how to backdoor it and then infiltrates the backdoor back to the trojan</span></div><div class="line" id="234200"><span class="nick" style="color:#8dd3c7"><a href="#234200" label="[23:42:00]">&lt;oriansj&gt;</a></span><span class="message">I have no doubts that it is a much bigger task than a drinking night project for Thompson but one can't help but wonder if their funding of Computer design for hardware didn't enable them to ensure certain hooks would exist</span></div><div class="line" id="234234"><span class="nick" style="color:#234e69"><a href="#234234" label="[23:42:34]">&lt;stikonas[m]&gt;</a></span><span class="message">Even Thompson needs basically AI engine to propagate</span></div><div class="line" id="234317"><span class="nick" style="color:#234e69"><a href="#234317" label="[23:43:17]">&lt;stikonas[m]&gt;</a></span><span class="message">So I doubt propagating HW version is feasible even with large funding</span></div><div class="line" id="234416"><span class="nick" style="color:#234e69"><a href="#234416" label="[23:44:16]">&lt;stikonas[m]&gt;</a></span><span class="message">Hiding non-propagating backdoors is probably more realistic</span></div><div class="line" id="234508"><span class="nick" style="color:#8dd3c7"><a href="#234508" label="[23:45:08]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well shutdown backdoors are trivial</span></div><div class="line" id="234550"><span class="nick" style="color:#8dd3c7"><a href="#234550" label="[23:45:50]">&lt;oriansj&gt;</a></span><span class="message">a single transistor attached to turn off power</span></div><div class="line" id="234703"><span class="nick" style="color:#234e69"><a href="#234703" label="[23:47:03]">&lt;stikonas[m]&gt;</a></span><span class="message">Well yes, backdoors in hw should be as simple as in software</span></div><div class="line" id="234719"><span class="nick" style="color:#234e69"><a href="#234719" label="[23:47:19]">&lt;stikonas[m]&gt;</a></span><span class="message">As long as it doesn't propagate</span></div><div class="line" id="235026"><span class="nick" style="color:#8dd3c7"><a href="#235026" label="[23:50:26]">&lt;oriansj&gt;</a></span><span class="message">stikonas: that is where I disagree but I can imagine your perspective.</span></div><div class="line" id="235113"><span class="nick" style="color:#8dd3c7"><a href="#235113" label="[23:51:13]">&lt;oriansj&gt;</a></span><span class="message">it is a hard problem to implement and defense against it requires a large group to trust or some really clever engineering.</span></div><br /></div></body></html>