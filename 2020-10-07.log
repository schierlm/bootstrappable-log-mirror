<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-10-07.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="005013"><span class="nick" style="color:#8dd3c7"><a href="#005013" label="[00:50:13]">&lt;xentrac&gt;</a></span><span class="message">for a compiler you also have to implement all the desired primitives; the difference is that you have to do it in your target language, such as assembly, instead of your implementation language</span></div><div class="line" id="032900"><span class="nick" style="color:#2e2a4a"><a href="#032900" label="[03:29:00]">&lt;OriansJ&gt;</a></span><span class="message">./bin/M3-Meteoroid-x86 -f tmp/min.o -p</span></div><div class="line" id="033058"><span class="nick" style="color:#2e2a4a"><a href="#033058" label="[03:30:58]">&lt;OriansJ&gt;</a></span><span class="message">M3-Meteoriod now is fully reading ELF files correctly and I just need to add the relocation work and then it'll be done (then I have to add the amd64, armv7l and aarch64 pieces)</span></div><div class="line" id="053202"><span class="nick" style="color:#6b8072"><a href="#053202" label="[05:32:02]">&lt;Hagfish&gt;</a></span><span class="message">super Meteoroid work! :P</span></div><div class="line" id="081514"><span class="nick" style="color:#8dd3c7"><a href="#081514" label="[08:15:14]">&lt;xentrac&gt;</a></span><span class="message">tor node down</span></div><div class="line" id="104647"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="104653"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="120631"><span class="nick" style="color:#2e2a4a"><a href="#120631" label="[12:06:31]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: thank you. although the real treat is I think I made it the most easy to understand of all linkers; with the added benefit it can link gnu assembler and NASM relocatable ELF files (With meaningful error messages and -p and -P for looking deeper into the files)</span></div><div class="line" id="121619"><span class="nick" style="color:#80b1d3"><a href="#121619" label="[12:16:19]">&lt;rain1&gt;</a></span><span class="message">hi hows it going?</span></div><div class="line" id="121621"><span class="nick" style="color:#2e2a4a"><a href="#121621" label="[12:16:21]">&lt;OriansJ&gt;</a></span><span class="message">Then when I finish M3-Comet, we will have a drop in replacement for binutils in the bootstrap process and then janneke can stop producing M1 output and instead produce standard gnu assembly output (thus simplifying his porting process forever)</span></div><div class="line" id="121712"><span class="nick" style="color:#2e2a4a"><a href="#121712" label="[12:17:12]">&lt;OriansJ&gt;</a></span><span class="message">rain1: doing alright, how about yourself rain1 ?</span></div><div class="line" id="121743"><span class="nick" style="color:#80b1d3"><a href="#121743" label="[12:17:43]">&lt;rain1&gt;</a></span><span class="message">hard to explain, but it is nice to see you</span></div><div class="line" id="121849"><span class="nick" style="color:#2e2a4a"><a href="#121849" label="[12:18:49]">&lt;OriansJ&gt;</a></span><span class="message">rain1: and it is always nice to see you as well</span></div><div class="line" id="122152"><span class="nick" style="color:#2e2a4a"><a href="#122152" label="[12:21:52]">&lt;OriansJ&gt;</a></span><span class="message">although part of me is apprehensive about the volume of the work I took on</span></div><div class="line" id="122753"><span class="nick" style="color:#80b1d3"><a href="#122753" label="[12:27:53]">&lt;rain1&gt;</a></span><span class="message">:)</span></div><div class="line" id="123019"><span class="nick" style="color:#2e2a4a"><a href="#123019" label="[12:30:19]">&lt;OriansJ&gt;</a></span><span class="message">nothing like being the person responsible for reimplementing binutils, guile and GCC in M2-Planet on one's plate to feel overly ambitious</span></div><div class="line" id="124703"><span class="nick" style="color:#2e2a4a"><a href="#124703" label="[12:47:03]">&lt;OriansJ&gt;</a></span><span class="message">but mostly it is just alot of unsexy, straight-forward, work. Which reminds me; I need to go back and get the kaem work back to the form fosslinux had created (I just couldn't juggle all the balls required when I did the mescc-tools-seed update) and revert 8296db068336040ee5887e3870635e5b3f6553ea so that fossy can get back to hacking on kaem (so that it'll be a bash replacement)</span></div><div class="line" id="135344"><span class="nick" style="color:#80b1d3"><a href="#135344" label="[13:53:44]">&lt;rain1&gt;</a></span><span class="message">could there possibly be any way around reimplementing these tools?</span></div><div class="line" id="152922"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="182836"><span class="nick" style="color:#6b8072"><a href="#182836" label="[18:28:36]">&lt;Hagfish&gt;</a></span><span class="message">&quot;thus simplifying his porting process forever&quot;  that's fantastic.  you're not just helping one person with one current problem, you're helping humanity and its entire future</span></div><div class="line" id="183140"><span class="nick" style="color:#6d2462"><a href="#183140" label="[18:31:40]">&lt;nimaje&gt;</a></span><span class="message">why reimplementing the gnu variants of these tools instead of just what posix demands?</span></div><div class="line" id="184018"><span class="nick" style="color:#234e69"><a href="#184018" label="[18:40:18]">&lt;markjenkinsznc&gt;</a></span><span class="message">I think because people are bootstrapping the GNU stuff which has become self-dependent on its own stuff not in posix</span></div><div class="line" id="184134"><span class="nick" style="color:#6b8072"><a href="#184134" label="[18:41:34]">&lt;Hagfish&gt;</a></span><span class="message">that makes sense</span></div><div class="line" id="191833"><span class="nick" style="color:#80b1d3"><a href="#191833" label="[19:18:33]">&lt;rain1&gt;</a></span><span class="message">but why reimplement them at all if we already have the code</span></div><div class="line" id="193303"><span class="nick" style="color:#234e69"><a href="#193303" label="[19:33:03]">&lt;markjenkinsznc&gt;</a></span><span class="message">code has to be bootstrapped, so we need bootstrap code</span></div><div class="line" id="200311"><span class="nick" style="color:#2e2a4a"><a href="#200311" label="[20:03:11]">&lt;OriansJ&gt;</a></span><span class="message">and we currently only have 1 from zero bootstrapped C compiler (M2-Planet) and the work to get MesCC running on Mes-m2 is non-trivial (with the irony that MesCC is unable to build the bootstrapped mes-m2)</span></div><div class="line" id="200502"><span class="nick" style="color:#8dd3c7"><a href="#200502" label="[20:05:02]">&lt;xentrac&gt;</a></span><span class="message">GNU stuff was starting to get dependent on GNU for building already 25 years ago</span></div><br /></div></body></html>