<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-06-03.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="032328"><span class="nick" style="color:#389600"><a href="#032328" label="[03:23:28]">&lt;Googulator&gt;</a></span><span class="message">Seems like I managed to avoid that weird Guile bug by not using --target and --system together - just --system alone is sufficient to force an AMD64 build on an x86 host userspace (I've already built an AMD64 kernel, so no issue there)</span></div><div class="line" id="032401"><span class="nick" style="color:#389600"><a href="#032401" label="[03:24:01]">&lt;Googulator&gt;</a></span><span class="message">specifying both --target and --system caused 2 separate versions of glibc-mesboot to be built, and the 2nd one failed with that weird error</span></div><div class="line" id="045112"><span class="nick" style="color:#389600"><a href="#045112" label="[04:51:12]">&lt;Googulator&gt;</a></span><span class="message">Is Vala's bootstrapping being tracked anywhere, besides Guix's issue <a rel="nofollow" href="https://issues.guix.gnu.org/56584">https://issues.guix.gnu.org/56584</a>  ?</span></div><div class="line" id="045146"><span class="nick" style="color:#389600"><a href="#045146" label="[04:51:46]">&lt;Googulator&gt;</a></span><span class="message">The standard build &quot;bootstraps&quot; it from .c files generated by Vala's own transpiler, included in release tarballs</span></div><div class="line" id="045152"><span class="nick" style="color:#389600"><a href="#045152" label="[04:51:52]">&lt;Googulator&gt;</a></span><span class="message">i.e. blatant pregenerated code</span></div><div class="line" id="090501"><span class="nick" style="color:#389600"><a href="#090501" label="[09:05:01]">&lt;Googulator&gt;</a></span><span class="message">Looks like we have a working bootstrapped Guix installer image ;)</span></div><div class="line" id="100229"><span class="nick" style="color:#8dd3c7"><a href="#100229" label="[10:02:29]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: probably no... Though I've seen it briefly mentioned here</span></div><div class="line" id="100244"><span class="nick" style="color:#8dd3c7"><a href="#100244" label="[10:02:44]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; No work done though</span></div><div class="line" id="102607"><span class="nick" style="color:#2e2a4a"><a href="#102607" label="[10:26:07]">&lt;janneke&gt;</a></span><span class="message">hi!</span></div><div class="line" id="102628"><span class="nick" style="color:#2e2a4a"><a href="#102628" label="[10:26:28]">&lt;janneke&gt;</a></span><span class="message">i'm having two puzzles/questions</span></div><div class="line" id="102630"><span class="nick" style="color:#2e2a4a"><a href="#102630" label="[10:26:30]">&lt;janneke&gt;</a></span><span class="message">there's this commit</span></div><div class="line" id="102634"><span class="nick" style="color:#2e2a4a"><a href="#102634" label="[10:26:34]">&lt;janneke&gt;</a></span><span class="message">XXX DRAFT mescc: Use long-r when extending unsigned 4-byte integers.</span></div><div class="line" id="102650"><span class="nick" style="color:#2e2a4a"><a href="#102650" label="[10:26:50]">&lt;janneke&gt;</a></span><span class="message">which' message says</span></div><div class="line" id="102658"><span class="nick" style="color:#2e2a4a"><a href="#102658" label="[10:26:58]">&lt;janneke&gt;</a></span><span class="message">This breaks 16-cast, 17-compare-unsigned-le in x86_64</span></div><div class="line" id="102756"><span class="nick" style="color:#2e2a4a"><a href="#102756" label="[10:27:56]">&lt;janneke&gt;</a></span><span class="message">i guess we need this for RISC-V; should we set 16-cast and 17-compare-unsigned-le to XFAIL on x86-64?</span></div><div class="line" id="102846"><span class="nick" style="color:#2e2a4a"><a href="#102846" label="[10:28:46]">&lt;janneke&gt;</a></span><span class="message">(haven't checked this remark, just reading from the commit msg)</span></div><div class="line" id="102941"><span class="nick" style="color:#2e2a4a"><a href="#102941" label="[10:29:41]">&lt;janneke&gt;</a></span><span class="message">it would be bad if x86_64-linux breaks, even if we're not really using/supporting it yet in the bootstrap</span></div><div class="line" id="103349"><span class="nick" style="color:#2e2a4a"><a href="#103349" label="[10:33:49]">&lt;janneke&gt;</a></span><span class="message">then there is the 80-setjmp.c test; does/will it pass for the regular guix package that builds with gcc and m2-planet using ./configure --bootstrap?</span></div><div class="line" id="103414"><span class="nick" style="color:#2e2a4a"><a href="#103414" label="[10:34:14]">&lt;janneke&gt;</a></span><span class="message">(and if so, [why] wasn't that a problem before building the regular guix package?)</span></div><div class="line" id="104758"><span class="nick" style="color:#2e2a4a"><a href="#104758" label="[10:47:58]">&lt;janneke&gt;</a></span><span class="message">i'll postpone/move putenv to the gcc-4 branch, i also already had a putenv stub there</span></div><div class="line" id="105546"><span class="nick" style="color:#6b8072"><a href="#105546" label="[10:55:46]">&lt;oriansj&gt;</a></span><span class="message">Googulator: yeah, no one has taken the time to solve the Vala yet but most likely a version chain will solve that.</span></div><div class="line" id="105717"><span class="nick" style="color:#2e2a4a"><a href="#105717" label="[10:57:17]">&lt;janneke&gt;</a></span><span class="message">* ./configure --with-bootstrap</span></div><div class="line" id="105755"><span class="nick" style="color:#6b8072"><a href="#105755" label="[10:57:55]">&lt;oriansj&gt;</a></span><span class="message">as it was originally bootstrapped in C and one need only build the chain out in guix to solve it (assuming no Bison like bad bootstrapping behavior)</span></div><div class="line" id="111055"><span class="nick" style="color:#389600"><a href="#111055" label="[11:10:55]">&lt;Googulator&gt;</a></span><span class="message">Working LB-&gt;Guix bootstrap, produces a usable 64-bit Guix installer: <a rel="nofollow" href="https://gist.github.com/Googulator/338cce370b2e2a65f23e4f6a5b5c3881">https://gist.github.com/Googulator/338cce370b2e2a65f23e4f6a5b5c3881</a> </span></div><div class="line" id="111156"><span class="nick" style="color:#389600"><a href="#111156" label="[11:11:56]">&lt;Googulator&gt;</a></span><span class="message">next step, replace Guix's bootstrap binaries with ones we can reproduce</span></div><div class="line" id="135811"><span class="nick" style="color:#80b1d3"><a href="#135811" label="[13:58:11]">&lt;civodul&gt;</a></span><span class="message">as in <a rel="nofollow" href="https://guix.gnu.org/manual/devel/en/html_node/Preparing-to-Use-the-Bootstrap-Binaries.html#Building-the-Bootstrap-Binaries">https://guix.gnu.org/manual/devel/en/html_node/Preparing-to-Use-the-Bootstrap-Binaries.html#Building-the-Bootstrap-Binaries</a>  ? :-)</span></div><div class="line" id="140424"><span class="nick" style="color:#389600"><a href="#140424" label="[14:04:24]">&lt;Googulator&gt;</a></span><span class="message">Unfortunately this doesn't reproduce the binaries currently in use - indeed even guix time-machine can't go back far enough for that</span></div><div class="line" id="140519"><span class="nick" style="color:#389600"><a href="#140519" label="[14:05:19]">&lt;Googulator&gt;</a></span><span class="message">also, we need to build the bootstrap binaries both inside and outside Guix, with identical results</span></div><div class="line" id="140526"><span class="nick" style="color:#389600"><a href="#140526" label="[14:05:26]">&lt;Googulator&gt;</a></span><span class="message">otherwise it's another chicken-and-egg</span></div><div class="line" id="140821"><span class="nick" style="color:#80b1d3"><a href="#140821" label="[14:08:21]">&lt;civodul&gt;</a></span><span class="message">yeah, right</span></div><br /></div></body></html>