<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-02-17.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="022843"><span class="nick" style="color:#8dd3c7"><a href="#022843" label="[02:28:43]">&lt;OriansJ&gt;</a></span><span class="message">stupid question but looking at this picture: <a rel="nofollow" href="https://www.pc.gov.au/inquiries/completed/data-access/report/data-summary-large.png">https://www.pc.gov.au/inquiries/completed/data-access/report/data-summary-large.png</a> </span></div><div class="line" id="022947"><span class="nick" style="color:#8dd3c7"><a href="#022947" label="[02:29:47]">&lt;OriansJ&gt;</a></span><span class="message">anyone else think, wouldn't it be cool to have sram with an LED for each bit; so by looking at the memory chips you can see their contents.</span></div><div class="line" id="023650"><span class="nick" style="color:#2e2a4a"><a href="#023650" label="[02:36:50]">&lt;theruran&gt;</a></span><span class="message">OriansJ: there would be way too many LEDs, huh?</span></div><div class="line" id="023921"><span class="nick" style="color:#8dd3c7"><a href="#023921" label="[02:39:21]">&lt;OriansJ&gt;</a></span><span class="message">256x256 for 64Kb</span></div><div class="line" id="024121"><span class="nick" style="color:#2e2a4a"><a href="#024121" label="[02:41:21]">&lt;theruran&gt;</a></span><span class="message">it's an interesting idea. along with using translucent DIP carriers</span></div><div class="line" id="024206"><span class="nick" style="color:#8dd3c7"><a href="#024206" label="[02:42:06]">&lt;OriansJ&gt;</a></span><span class="message">yep, it only works for low memory systems</span></div><div class="line" id="024358"><span class="nick" style="color:#8dd3c7"><a href="#024358" label="[02:43:58]">&lt;OriansJ&gt;</a></span><span class="message">basically a tiny version of this: <a rel="nofollow" href="https://web.archive.org/web/20191230222252im_/http://www.megaprocessor.com/Images/second_birthday.jpg">https://web.archive.org/web/20191230222252im_/http://www.megaprocessor.com/Images/second_birthday.jpg</a> </span></div><div class="line" id="024750"><span class="nick" style="color:#8dd3c7"><a href="#024750" label="[02:47:50]">&lt;OriansJ&gt;</a></span><span class="message">theruran: glass DIP casing</span></div><div class="line" id="024813"><span class="nick" style="color:#2e2a4a"><a href="#024813" label="[02:48:13]">&lt;theruran&gt;</a></span><span class="message">even better :3</span></div><div class="line" id="025633"><span class="nick" style="color:#8dd3c7"><a href="#025633" label="[02:56:33]">&lt;OriansJ&gt;</a></span><span class="message">300nm cmos on Glass process could look like a more advanced version of Star Trek's Isolinear Chips</span></div><div class="line" id="030048"><span class="nick" style="color:#8dd3c7"><a href="#030048" label="[03:00:48]">&lt;OriansJ&gt;</a></span><span class="message">days like this make me wish I knew more people who make hardware.</span></div><div class="line" id="041928"><span class="nick" style="color:#6b8072"><a href="#041928" label="[04:19:28]">&lt;xentrac&gt;</a></span><span class="message">yes, SRAM with an LED per bit would be super awesome</span></div><div class="line" id="041955"><span class="nick" style="color:#6b8072"><a href="#041955" label="[04:19:55]">&lt;xentrac&gt;</a></span><span class="message">that could work even for relatively large memories if you don't mind needing a microscope to see the bits</span></div><div class="line" id="042057"><span class="nick" style="color:#6b8072"><a href="#042057" label="[04:20:57]">&lt;xentrac&gt;</a></span><span class="message">a drawback is that exposing the LEDs would unavoidably lower the immunity of the system to optical attacks, both passive and active, from those who could see them, and also to optical interference</span></div><div class="line" id="133325"><span class="nick" style="color:#8dd3c7"><a href="#133325" label="[13:33:25]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: you mean like someone using a laser on the LED to induce the LED to act like a solar cell and thus change its attached sram's value to 1 instead of zero?</span></div><div class="line" id="133728"><span class="nick" style="color:#8dd3c7"><a href="#133728" label="[13:37:28]">&lt;OriansJ&gt;</a></span><span class="message">as for increasing density, well one could use different colors for the leds such that a group of say 4 or 16 would represent a single visable pixel but the result would be various different colors depending on what values those 4 or 16 cells had inside of them.</span></div><div class="line" id="140217"><span class="nick" style="color:#6b8072"><a href="#140217" label="[14:02:17]">&lt;xentrac&gt;</a></span><span class="message">right</span></div><div class="line" id="151121"><span class="nick" style="color:#8dd3c7"><a href="#151121" label="[15:11:21]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: couldn't one just use a diode to prevent that sort of reverse charging?</span></div><div class="line" id="190843"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="203945"><span class="nick" style="color:#6b8072"><a href="#203945" label="[20:39:45]">&lt;xentrac&gt;</a></span><span class="message">not really, no</span></div><div class="line" id="212847"><span class="nick" style="color:#8dd3c7"><a href="#212847" label="[21:28:47]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: oh well; I guess physical access always wins when it comes to security</span></div><div class="line" id="213336"><span class="nick" style="color:#80b1d3"><a href="#213336" label="[21:33:36]">&lt;bauen1&gt;</a></span><span class="message">we're getting there with tpms that are integerated on the cpu die itself, but with enough time you can still circumvent them ...</span></div><div class="line" id="213836"><span class="nick" style="color:#80b1d3"><a href="#213836" label="[21:38:36]">&lt;bauen1&gt;</a></span><span class="message">btw is there a search-able version of this channels logs or do you need to download all of them ?</span></div><div class="line" id="213956"><span class="nick" style="color:#6d2462"><a href="#213956" label="[21:39:56]">&lt;fossy&gt;</a></span><span class="message">no I think youd need to Download them</span></div><div class="line" id="213959"><span class="nick" style="color:#6d2462"><a href="#213959" label="[21:39:59]">&lt;fossy&gt;</a></span><span class="message">theyre not super bog</span></div><div class="line" id="214003"><span class="nick" style="color:#6d2462"><a href="#214003" label="[21:40:03]">&lt;fossy&gt;</a></span><span class="message">big*</span></div><div class="line" id="214041"><span class="nick" style="color:#80b1d3"><a href="#214041" label="[21:40:41]">&lt;bauen1&gt;</a></span><span class="message">this <a rel="nofollow" href="https://gitlab.com/toaruos/toaruos">https://gitlab.com/toaruos/toaruos</a>  kernel could also be interesting, since it has already achieved self-hosting (and has a small libc) but i'm not sure on how much of the C standard it depends</span></div><div class="line" id="214117"><span class="nick" style="color:#80b1d3"><a href="#214117" label="[21:41:17]">&lt;bauen1&gt;</a></span><span class="message">and it only targets i686</span></div><div class="line" id="214152"><span class="nick" style="color:#80b1d3"><a href="#214152" label="[21:41:52]">&lt;bauen1&gt;</a></span><span class="message">and i'm pretty sure you could also strip the python stuff from the build process</span></div><div class="line" id="215802"><span class="nick" style="color:#6b8072"><a href="#215802" label="[21:58:02]">&lt;xentrac&gt;</a></span><span class="message">yeah, I think that's reasonable, OriansJ</span></div><div class="line" id="220625"><span class="nick" style="color:#8dd3c7"><a href="#220625" label="[22:06:25]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: well we don't need a gui nor anything fancy</span></div><div class="line" id="220705"><span class="nick" style="color:#8dd3c7"><a href="#220705" label="[22:07:05]">&lt;OriansJ&gt;</a></span><span class="message">heck, we don't even require a network stack</span></div><div class="line" id="220823"><span class="nick" style="color:#8dd3c7"><a href="#220823" label="[22:08:23]">&lt;OriansJ&gt;</a></span><span class="message">just a filesystem (that supports directories), a handful of syscalls and basic virtual memory.</span></div><div class="line" id="220924"><span class="nick" style="color:#8dd3c7"><a href="#220924" label="[22:09:24]">&lt;OriansJ&gt;</a></span><span class="message">As it only needs to function well enough to run a kaem.run script on power-on; which then does all the builds locally and generates the Linux bootstrap binary and grub; which is used from there</span></div><div class="line" id="221135"><span class="nick" style="color:#8dd3c7"><a href="#221135" label="[22:11:35]">&lt;OriansJ&gt;</a></span><span class="message">maybe serial port support (optional keyboard and tty)</span></div><div class="line" id="221209"><span class="nick" style="color:#8dd3c7"><a href="#221209" label="[22:12:09]">&lt;OriansJ&gt;</a></span><span class="message">It however needs to be very very portable</span></div><div class="line" id="221259"><span class="nick" style="color:#8dd3c7"><a href="#221259" label="[22:12:59]">&lt;OriansJ&gt;</a></span><span class="message">(we can have seperate assembly files for each architecture but porting to new architectures should be rather straightforward)</span></div><div class="line" id="221434"><span class="nick" style="color:#8dd3c7"><a href="#221434" label="[22:14:34]">&lt;OriansJ&gt;</a></span><span class="message">It only has to be be good enough to run mes-m2 to enable MesCC to compile TCC and bootstrap the rest from there (as GCC 4.7.4 should be able to compile Linux for us)</span></div><div class="line" id="221446"><span class="nick" style="color:#6b8072"><a href="#221446" label="[22:14:46]">&lt;xentrac&gt;</a></span><span class="message">tty emulation is a few hundred bytes of code</span></div><div class="line" id="222055"><span class="nick" style="color:#6d2462"><a href="#222055" label="[22:20:55]">&lt;fossy&gt;</a></span><span class="message">OriansJ I plan to go through GCC 2 series first, as 1. Guix is my point of reference and they do that and 2. Less headache. We can remove it later if we want</span></div><div class="line" id="222119"><span class="nick" style="color:#6d2462"><a href="#222119" label="[22:21:19]">&lt;fossy&gt;</a></span><span class="message">OriansJ: but im sure we can compile a old linux kernel with gcc 2</span></div><div class="line" id="222516"><span class="nick" style="color:#8dd3c7"><a href="#222516" label="[22:25:16]">&lt;OriansJ&gt;</a></span><span class="message">fossy: 4.7.4 can be currently be bootstrapped from TCC (which can be bootstrapped from MesCC)</span></div><div class="line" id="222555"><span class="nick" style="color:#8dd3c7"><a href="#222555" label="[22:25:55]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: we also are planning on having the kernel written in M2-Planet, so size isn't much of an issue</span></div><div class="line" id="222628"><span class="nick" style="color:#234e69"><a href="#222628" label="[22:26:28]">&lt;janneke&gt;</a></span><span class="message">fossy, that makes sense</span></div><div class="line" id="222653"><span class="nick" style="color:#234e69"><a href="#222653" label="[22:26:53]">&lt;janneke&gt;</a></span><span class="message">OriansJ: that's theoretically true, practically not so; at least not yet</span></div><div class="line" id="222732"><span class="nick" style="color:#234e69"><a href="#222732" label="[22:27:32]">&lt;janneke&gt;</a></span><span class="message">OriansJ: you may be overlooking the Mes C Library that does not support building gcc-4.x yet</span></div><div class="line" id="223941"><span class="nick" style="color:#6d2462"><a href="#223941" label="[22:39:41]">&lt;fossy&gt;</a></span><span class="message">OriansJ: as janneke said</span></div><div class="line" id="224012"><span class="nick" style="color:#6d2462"><a href="#224012" label="[22:40:12]">&lt;fossy&gt;</a></span><span class="message">We cannot build gcc 4.x as of yet, because we need a c library</span></div><div class="line" id="224046"><span class="nick" style="color:#234e69"><a href="#224046" label="[22:40:46]">&lt;janneke&gt;</a></span><span class="message">there is work underway for mes c library to support gcc-4.6 as well as support m2-planet</span></div><div class="line" id="224110"><span class="nick" style="color:#6d2462"><a href="#224110" label="[22:41:10]">&lt;fossy&gt;</a></span><span class="message">Mes c library does not support 4, and so we build 2 to build glibc to build 4</span></div><div class="line" id="224117"><span class="nick" style="color:#234e69"><a href="#224117" label="[22:41:17]">&lt;janneke&gt;</a></span><span class="message">note that tcc does not have a c library at all</span></div><div class="line" id="224240"><span class="nick" style="color:#6d2462"><a href="#224240" label="[22:42:40]">&lt;fossy&gt;</a></span><span class="message">Improvements to the system come second: i want to have a known working base</span></div><div class="line" id="224243"><span class="nick" style="color:#6d2462"><a href="#224243" label="[22:42:43]">&lt;fossy&gt;</a></span><span class="message">But remember the first stage of my fork is to convert commencement.scm to bash</span></div><div class="line" id="224246"><span class="nick" style="color:#6d2462"><a href="#224246" label="[22:42:46]">&lt;fossy&gt;</a></span><span class="message">huh</span></div><div class="line" id="224253"><span class="nick" style="color:#6d2462"><a href="#224253" label="[22:42:53]">&lt;fossy&gt;</a></span><span class="message">reverse that, connection weird</span></div><div class="line" id="224613"><span class="nick" style="color:#8dd3c7"><a href="#224613" label="[22:46:13]">&lt;OriansJ&gt;</a></span><span class="message">janneke: you don't have to worry about building M2-Planet; quite the reverse actually.</span></div><div class="line" id="224716"><span class="nick" style="color:#234e69"><a href="#224716" label="[22:47:16]">&lt;janneke&gt;</a></span><span class="message">M2-Planet should worry about building me :-)</span></div><div class="line" id="224742"><span class="nick" style="color:#8dd3c7"><a href="#224742" label="[22:47:42]">&lt;OriansJ&gt;</a></span><span class="message">I guess included in those 57MB of bootstrap binaries is the cheat libc currently being used</span></div><div class="line" id="224857"><span class="nick" style="color:#8dd3c7"><a href="#224857" label="[22:48:57]">&lt;OriansJ&gt;</a></span><span class="message">I could have M2-Planet build a much more advanced libc if needed</span></div><div class="line" id="225156"><span class="nick" style="color:#234e69"><a href="#225156" label="[22:51:56]">&lt;janneke&gt;</a></span><span class="message">OriansJ: actually not, currently &quot;only&quot; a staically built mescc-tools and mes; the bootstrap-mes will build the mes c library for itself and tcc; tcc builds the mes c library for gnu</span></div><div class="line" id="225201"><span class="nick" style="color:#6c3d55"><a href="#225201" label="[22:52:01]">*</a></span><span class="message">janneke needs to go afk for a bit</span></div><div class="line" id="225254"><span class="nick" style="color:#8dd3c7"><a href="#225254" label="[22:52:54]">&lt;OriansJ&gt;</a></span><span class="message">janneke: So what is the problem? Can GCC not use the libc built from TCC?</span></div><div class="line" id="225321"><span class="nick" style="color:#8dd3c7"><a href="#225321" label="[22:53:21]">&lt;OriansJ&gt;</a></span><span class="message">or is the mes libc not complete enough for GCC?</span></div><div class="line" id="230702"><span class="nick" style="color:#8dd3c7"><a href="#230702" label="[23:07:02]">&lt;OriansJ&gt;</a></span><span class="message">as I would prefer to have accurate information in the current bootstrap map</span></div><div class="line" id="234318"><span class="nick" style="color:#d9d9d9"><a href="#234318" label="[23:43:18]">&lt;stikonas&gt;</a></span><span class="message">we need a dependency graph for bootstrap chain which shows finished and unfinished parts :D</span></div><div class="line" id="234941"><span class="nick" style="color:#8dd3c7"><a href="#234941" label="[23:49:41]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: well that is what I thought I had, with the color scheme in my current bootstrap map. <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf</a> </span></div><div class="line" id="235025"><span class="nick" style="color:#8dd3c7"><a href="#235025" label="[23:50:25]">&lt;OriansJ&gt;</a></span><span class="message">and why I made it from a text file to enable easy editing: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.dot">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.dot</a> </span></div><div class="line" id="235100"><span class="nick" style="color:#d9d9d9"><a href="#235100" label="[23:51:00]">&lt;stikonas&gt;</a></span><span class="message">well, yeah, dot files are the best for these types of graphs</span></div><div class="line" id="235103"><span class="nick" style="color:#8dd3c7"><a href="#235103" label="[23:51:03]">&lt;OriansJ&gt;</a></span><span class="message">Such that anyone could update them and just do: cat Current\ bootstrap\ map.dot | dot -Tpdf &gt;| Current\ bootstrap\ map.pdf &amp;&amp; evince Current\ bootstrap\ map.pdf</span></div><div class="line" id="235444"><span class="nick" style="color:#6b8072"><a href="#235444" label="[23:54:44]">&lt;xentrac&gt;</a></span><span class="message">I like graphviz a lot but I think sometimes TiKZ can produce better results.  not sure whether TiKZ or graphviz is easier to install though</span></div><div class="line" id="235628"><span class="nick" style="color:#8dd3c7"><a href="#235628" label="[23:56:28]">&lt;OriansJ&gt;</a></span><span class="message">fossy, janneke please notice that it includes the steps via 2.95.3 to bootstrap 4.7.4</span></div><div class="line" id="235856"><span class="nick" style="color:#8dd3c7"><a href="#235856" label="[23:58:56]">&lt;OriansJ&gt;</a></span><span class="message">So perhaps I was clumsy with my words again;</span></div><div class="line" id="235908"><span class="nick" style="color:#d9d9d9"><a href="#235908" label="[23:59:08]">&lt;stikonas&gt;</a></span><span class="message">isn't slow-utils optional? Since we already have mescc-utils?</span></div><div class="line" id="235925"><span class="nick" style="color:#8dd3c7"><a href="#235925" label="[23:59:25]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: entirely</span></div><div class="line" id="235946"><span class="nick" style="color:#bc80bd"><a href="#235946" label="[23:59:46]">&lt;dddddd&gt;</a></span><span class="message">wait, what?</span></div><div class="line" id="235953"><span class="nick" style="color:#8dd3c7"><a href="#235953" label="[23:59:53]">&lt;OriansJ&gt;</a></span><span class="message">It was more to allow Guix to reduce down to just the Guile static binary</span></div><br /></div></body></html>