<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-11-10.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003406"><span class="nick" style="color:#8dd3c7"><a href="#003406" label="[00:34:06]">&lt;oriansj&gt;</a></span><span class="message">well turns out my talk was 3rd in the round so a bit off schedule</span></div><div class="line" id="003417"><span class="nick" style="color:#2e2a4a"><a href="#003417" label="[00:34:17]">&lt;muurkha&gt;</a></span><span class="message">when?</span></div><div class="line" id="003905"><span class="nick" style="color:#8dd3c7"><a href="#003905" label="[00:39:05]">&lt;oriansj&gt;</a></span><span class="message">today at 21:15 UTC approximately</span></div><div class="line" id="004023"><span class="nick" style="color:#8dd3c7"><a href="#004023" label="[00:40:23]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well types in M2-Planet are still largely the same as was being done in cc_* so it might be time to improve the struct type to be smarter</span></div><div class="line" id="004226"><span class="nick" style="color:#8dd3c7"><a href="#004226" label="[00:42:26]">&lt;oriansj&gt;</a></span><span class="message">as it only really behaves correctly to type* with type** only kinda working correctly and type*** really behaving a bit different.</span></div><div class="line" id="004319"><span class="nick" style="color:#8dd3c7"><a href="#004319" label="[00:43:19]">&lt;oriansj&gt;</a></span><span class="message">Mostly because the only type** we needed was char** argv and char** envp and everything else was type* and below</span></div><div class="line" id="004401"><span class="nick" style="color:#2e2a4a"><a href="#004401" label="[00:44:01]">&lt;muurkha&gt;</a></span><span class="message">how was it?</span></div><div class="line" id="004418"><span class="nick" style="color:#8dd3c7"><a href="#004418" label="[00:44:18]">&lt;oriansj&gt;</a></span><span class="message">rushed, 2 minutes to cover stage0</span></div><div class="line" id="004445"><span class="nick" style="color:#8dd3c7"><a href="#004445" label="[00:44:45]">&lt;oriansj&gt;</a></span><span class="message">and this weird virtual conference thing for after talk questions and/or discussion</span></div><div class="line" id="004553"><span class="nick" style="color:#8dd3c7"><a href="#004553" label="[00:45:53]">&lt;oriansj&gt;</a></span><span class="message">where there was no actual questions about stage0</span></div><div class="line" id="004733"><span class="nick" style="color:#2e2a4a"><a href="#004733" label="[00:47:33]">&lt;muurkha&gt;</a></span><span class="message">that's like 40% of a lightning talk slot</span></div><div class="line" id="004745"><span class="nick" style="color:#2e2a4a"><a href="#004745" label="[00:47:45]">&lt;muurkha&gt;</a></span><span class="message">too bad there were no questions</span></div><div class="line" id="005001"><span class="nick" style="color:#8dd3c7"><a href="#005001" label="[00:50:01]">&lt;oriansj&gt;</a></span><span class="message">I guess no one watching actually cared.</span></div><div class="line" id="005024"><span class="nick" style="color:#2e2a4a"><a href="#005024" label="[00:50:24]">&lt;muurkha&gt;</a></span><span class="message">maybe you weren't able to communicate the important aspects in 2 minutes</span></div><div class="line" id="005034"><span class="nick" style="color:#2e2a4a"><a href="#005034" label="[00:50:34]">&lt;muurkha&gt;</a></span><span class="message">even a 5-minute lightning talk is challenging</span></div><div class="line" id="005200"><span class="nick" style="color:#8dd3c7"><a href="#005200" label="[00:52:00]">&lt;oriansj&gt;</a></span><span class="message">I covered the multics paper, the Ken Thompson paper, David A Wheeler's work, Reproducible builds, Guix, Gnu Mes, stage0 and live-bootstrap and future plans.</span></div><div class="line" id="005252"><span class="nick" style="color:#2e2a4a"><a href="#005252" label="[00:52:52]">&lt;muurkha&gt;</a></span><span class="message">ouch, that's a lot to cover even in 60 minutes</span></div><div class="line" id="005441"><span class="nick" style="color:#8dd3c7"><a href="#005441" label="[00:54:41]">&lt;oriansj&gt;</a></span><span class="message">but because my talk seemed too meh, 2 minutes was the best I could get and did the best I could given those limits</span></div><div class="line" id="010044"><span class="nick" style="color:#8dd3c7"><a href="#010044" label="[01:00:44]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://pretalx.com/packagingcon-2021/talk/E3M8HG/">https://pretalx.com/packagingcon-2021/talk/E3M8HG/</a> </span></div><div class="line" id="010439"><span class="nick" style="color:#8dd3c7"><a href="#010439" label="[01:04:39]">&lt;oriansj&gt;</a></span><span class="message">thus far not yet uploaded: <a rel="nofollow" href="https://www.youtube.com/channel/UCGjb8FEgGAfMaQ98bVjNVJg/videos">https://www.youtube.com/channel/UCGjb8FEgGAfMaQ98bVjNVJg/videos</a> </span></div><div class="line" id="010820"><span class="nick" style="color:#6b8072"><a href="#010820" label="[01:08:20]">&lt;stikonas&gt;</a></span><span class="message">yeah, 2 minutes is really short...</span></div><div class="line" id="010835"><span class="nick" style="color:#8dd3c7"><a href="#010835" label="[01:08:35]">&lt;oriansj&gt;</a></span><span class="message">but I guess this is the first talk of mine about stage0 to be accepted and not cancelled; so there is that for a win I guess.</span></div><div class="line" id="011233"><span class="nick" style="color:#8dd3c7"><a href="#011233" label="[01:12:33]">&lt;oriansj&gt;</a></span><span class="message">The whole send us your slides, does so, yeah we changed our mind on accepting your talk sequence really hurts.</span></div><div class="line" id="011240"><span class="nick" style="color:#6b8072"><a href="#011240" label="[01:12:40]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I've now rebased that dereference branch <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/pull/30">https://github.com/oriansj/M2-Planet/pull/30</a> </span></div><div class="line" id="011331"><span class="nick" style="color:#6b8072"><a href="#011331" label="[01:13:31]">&lt;stikonas&gt;</a></span><span class="message">as for type***, we probably don't need it in bootstrapping...</span></div><div class="line" id="011340"><span class="nick" style="color:#6b8072"><a href="#011340" label="[01:13:40]">&lt;stikonas&gt;</a></span><span class="message">it's rarely used</span></div><div class="line" id="011409"><span class="nick" style="color:#6b8072"><a href="#011409" label="[01:14:09]">&lt;stikonas&gt;</a></span><span class="message">oh, I forgot to commit new files in...</span></div><div class="line" id="011459"><span class="nick" style="color:#6b8072"><a href="#011459" label="[01:14:59]">&lt;stikonas&gt;</a></span><span class="message">ok, now updated and should be good</span></div><div class="line" id="011500"><span class="nick" style="color:#8dd3c7"><a href="#011500" label="[01:15:00]">&lt;oriansj&gt;</a></span><span class="message">yeah the test is missing</span></div><div class="line" id="011515"><span class="nick" style="color:#6b8072"><a href="#011515" label="[01:15:15]">&lt;stikonas&gt;</a></span><span class="message">test passes with after git clean -fd</span></div><div class="line" id="011733"><span class="nick" style="color:#6b8072"><a href="#011733" label="[01:17:33]">&lt;stikonas&gt;</a></span><span class="message">basically in the test I wanted to test char and int dereferencing (as they have different sizes) and also assigning value (so where *variable is to the left hand side of equality)</span></div><div class="line" id="011921"><span class="nick" style="color:#8dd3c7"><a href="#011921" label="[01:19:21]">&lt;oriansj&gt;</a></span><span class="message">good enough</span></div><div class="line" id="011933"><span class="nick" style="color:#6b8072"><a href="#011933" label="[01:19:33]">&lt;stikonas&gt;</a></span><span class="message">well, I guess the test is helpful</span></div><div class="line" id="011939"><span class="nick" style="color:#6b8072"><a href="#011939" label="[01:19:39]">&lt;stikonas&gt;</a></span><span class="message">(to convince myself too, not just you)</span></div><div class="line" id="011956"><span class="nick" style="color:#6b8072"><a href="#011956" label="[01:19:56]">&lt;stikonas&gt;</a></span><span class="message">and it helped me to catch some issues</span></div><div class="line" id="012040"><span class="nick" style="color:#8dd3c7"><a href="#012040" label="[01:20:40]">&lt;oriansj&gt;</a></span><span class="message">well we could make it do the structs as well if we add some complexity to assignment</span></div><div class="line" id="012128"><span class="nick" style="color:#8dd3c7"><a href="#012128" label="[01:21:28]">&lt;oriansj&gt;</a></span><span class="message">as it would only need to know the size of the struct</span></div><div class="line" id="012234"><span class="nick" style="color:#6b8072"><a href="#012234" label="[01:22:34]">&lt;stikonas&gt;</a></span><span class="message">yeah, I thought structs should be possible too by exactly tweaking that assignment part in the same function</span></div><div class="line" id="012246"><span class="nick" style="color:#6b8072"><a href="#012246" label="[01:22:46]">&lt;stikonas&gt;</a></span><span class="message">but it's somewhat other feature than pointers</span></div><div class="line" id="012307"><span class="nick" style="color:#6b8072"><a href="#012307" label="[01:23:07]">&lt;stikonas&gt;</a></span><span class="message">so best not to overcomplicate individual commits</span></div><div class="line" id="012336"><span class="nick" style="color:#8dd3c7"><a href="#012336" label="[01:23:36]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="012528"><span class="nick" style="color:#8dd3c7"><a href="#012528" label="[01:25:28]">&lt;oriansj&gt;</a></span><span class="message">and I'll start a new fuzzing sequence</span></div><div class="line" id="012557"><span class="nick" style="color:#8dd3c7"><a href="#012557" label="[01:25:57]">&lt;oriansj&gt;</a></span><span class="message">with the latest commit as the last commit went 48 hours without any crashes (good job)</span></div><div class="line" id="013428"><span class="nick" style="color:#6b8072"><a href="#013428" label="[01:34:28]">&lt;stikonas&gt;</a></span><span class="message">I think I messed up whitespace  a bit in my last commit</span></div><div class="line" id="013502"><span class="nick" style="color:#6b8072"><a href="#013502" label="[01:35:02]">&lt;stikonas&gt;</a></span><span class="message">well, will fix it locally and sneak into some other PR later...</span></div><div class="line" id="013751"><span class="nick" style="color:#8dd3c7"><a href="#013751" label="[01:37:51]">&lt;oriansj&gt;</a></span><span class="message">fortunately there is a standard astyle command for formatting and we could do a minor formatting cleanup as a single commit</span></div><div class="line" id="013811"><span class="nick" style="color:#8dd3c7"><a href="#013811" label="[01:38:11]">&lt;oriansj&gt;</a></span><span class="message">as not every line is exactly in line with the rules</span></div><div class="line" id="013840"><span class="nick" style="color:#8dd3c7"><a href="#013840" label="[01:38:40]">&lt;oriansj&gt;</a></span><span class="message">astyle -A1tSxejz2fpUxV $filename</span></div><div class="line" id="013941"><span class="nick" style="color:#8dd3c7"><a href="#013941" label="[01:39:41]">&lt;oriansj&gt;</a></span><span class="message">as I know I am probably guilty of a few myself and you can be the hero to help ensure the standard is enforced.</span></div><div class="line" id="014050"><span class="nick" style="color:#6b8072"><a href="#014050" label="[01:40:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, diff is actually quite big...</span></div><div class="line" id="014119"><span class="nick" style="color:#6b8072"><a href="#014119" label="[01:41:19]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's a minor thing...</span></div><div class="line" id="075913"><span class="nick" style="color:#80b1d3"><a href="#075913" label="[07:59:13]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/microsoft/Secure-Supply-Chain">https://github.com/microsoft/Secure-Supply-Chain</a> </span></div><div class="line" id="075942"><span class="nick" style="color:#80b1d3"><a href="#075942" label="[07:59:42]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Today, we [Microsoft] are working to improve trust in OSS developer ecosystem packages (NPM, NuGet, PyPI, Maven Central) by collecting and validating packages and their metadata:&quot;</span></div><div class="line" id="075950"><span class="nick" style="color:#80b1d3"><a href="#075950" label="[07:59:50]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Map packages back to their repository and commit ID&quot;</span></div><div class="line" id="080010"><span class="nick" style="color:#80b1d3"><a href="#080010" label="[08:00:10]">&lt;Hagfish&gt;</a></span><span class="message">given that microsoft own NPM, that really shouldn't be difficult to introduce</span></div><div class="line" id="080020"><span class="nick" style="color:#80b1d3"><a href="#080020" label="[08:00:20]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Verify packaged sources/binaries are faithful compilations of their sources&quot;</span></div><div class="line" id="080050"><span class="nick" style="color:#80b1d3"><a href="#080050" label="[08:00:50]">&lt;Hagfish&gt;</a></span><span class="message">yeah, making sure there are no unversioned files in npm packages would be great</span></div><div class="line" id="080128"><span class="nick" style="color:#80b1d3"><a href="#080128" label="[08:01:28]">&lt;Hagfish&gt;</a></span><span class="message">if each commit (or at least every tag/release) was signed with an offline key, we'd be in a better position too</span></div><div class="line" id="080130"><span class="nick" style="color:#6d2462"><a href="#080130" label="[08:01:30]">&lt;pabs3&gt;</a></span><span class="message">same with Rust, I've seen that before with crates.io</span></div><div class="line" id="080155"><span class="nick" style="color:#80b1d3"><a href="#080155" label="[08:01:55]">&lt;Hagfish&gt;</a></span><span class="message">you can't spell &quot;trust&quot; without &quot;rust&quot; :P</span></div><div class="line" id="080203"><span class="nick" style="color:#6d2462"><a href="#080203" label="[08:02:03]">&lt;pabs3&gt;</a></span><span class="message">ha</span></div><div class="line" id="080231"><span class="nick" style="color:#80b1d3"><a href="#080231" label="[08:02:31]">&lt;Hagfish&gt;</a></span><span class="message">no mention of it on that page, but i know that the Rust community are working on distributed code review, which is a great addition to this space</span></div><div class="line" id="080319"><span class="nick" style="color:#80b1d3"><a href="#080319" label="[08:03:19]">&lt;Hagfish&gt;</a></span><span class="message">realistically it might take another couple of years for tooling to surface the sort of work that microsoft are talking about here</span></div><div class="line" id="080339"><span class="nick" style="color:#80b1d3"><a href="#080339" label="[08:03:39]">&lt;Hagfish&gt;</a></span><span class="message">it has to reach a point where developers can make informed decisions based on the information they presented about packages</span></div><div class="line" id="080356"><span class="nick" style="color:#80b1d3"><a href="#080356" label="[08:03:56]">&lt;Hagfish&gt;</a></span><span class="message">or ideally, policies automatically rule out entire classes of attack, or significantly raise the costs to attackers</span></div><div class="line" id="080425"><span class="nick" style="color:#80b1d3"><a href="#080425" label="[08:04:25]">&lt;Hagfish&gt;</a></span><span class="message">it's going to be like http vs https</span></div><div class="line" id="080435"><span class="nick" style="color:#80b1d3"><a href="#080435" label="[08:04:35]">&lt;Hagfish&gt;</a></span><span class="message">some &quot;critical&quot; sites started adding security</span></div><div class="line" id="080449"><span class="nick" style="color:#80b1d3"><a href="#080449" label="[08:04:49]">&lt;Hagfish&gt;</a></span><span class="message">and we got the UX of that wrong, asking users to deal with strange warnings</span></div><div class="line" id="080507"><span class="nick" style="color:#80b1d3"><a href="#080507" label="[08:05:07]">&lt;Hagfish&gt;</a></span><span class="message">then we stopped expecting users to handle the warnings</span></div><div class="line" id="080514"><span class="nick" style="color:#80b1d3"><a href="#080514" label="[08:05:14]">&lt;Hagfish&gt;</a></span><span class="message">then we made everything https</span></div><div class="line" id="080611"><span class="nick" style="color:#6d2462"><a href="#080611" label="[08:06:11]">&lt;pabs3&gt;</a></span><span class="message">attackers will just shift their malicious code to being committed to git, many git repos are already full of minified obfuscated prebuilt JS, and even the non-obfuscated files are unlikely to be reviewed</span></div><div class="line" id="081643"><span class="nick" style="color:#80b1d3"><a href="#081643" label="[08:16:43]">&lt;Hagfish&gt;</a></span><span class="message">well, if there are distributed reviews, i'd expect that minification/obfuscation would get an automated red flag from even the most casual of reviewer</span></div><div class="line" id="081733"><span class="nick" style="color:#80b1d3"><a href="#081733" label="[08:17:33]">&lt;Hagfish&gt;</a></span><span class="message">you're right, it moves the problem into a different domain, but it's hopefully a domain where we have better tools (because code is more human-readable)</span></div><div class="line" id="082057"><span class="nick" style="color:#6d2462"><a href="#082057" label="[08:20:57]">&lt;pabs3&gt;</a></span><span class="message">this isn't exactly a new problem though, devs have been committing generated files like ./configure into VCS for decades. unless MS starts autoflagging .min.js and similar in their SSC tools</span></div><div class="line" id="125425"><span class="nick" style="color:#234e69"><a href="#125425" label="[12:54:25]">&lt;fossy&gt;</a></span><span class="message">i should make dontcommitblobs.info</span></div><div class="line" id="125600"><span class="nick" style="color:#6b8072"><a href="#125600" label="[12:56:00]">&lt;stikonas&gt;</a></span><span class="message">fossy: what happened?</span></div><div class="line" id="125626"><span class="nick" style="color:#6b8072"><a href="#125626" label="[12:56:26]">&lt;stikonas&gt;</a></span><span class="message">oh, you mean website?</span></div><div class="line" id="125635"><span class="nick" style="color:#6b8072"><a href="#125635" label="[12:56:35]">&lt;stikonas&gt;</a></span><span class="message">not some README file in a repo</span></div><div class="line" id="125704"><span class="nick" style="color:#6b8072"><a href="#125704" label="[12:57:04]">&lt;stikonas&gt;</a></span><span class="message">yeah, some projects love blobs</span></div><div class="line" id="125733"><span class="nick" style="color:#6b8072"><a href="#125733" label="[12:57:33]">&lt;stikonas&gt;</a></span><span class="message">and some of the blobs are not easily readable</span></div><div class="line" id="125801"><span class="nick" style="color:#6b8072"><a href="#125801" label="[12:58:01]">&lt;stikonas&gt;</a></span><span class="message">fossy: was it python this time?</span></div><div class="line" id="125914"><span class="nick" style="color:#234e69"><a href="#125914" label="[12:59:14]">&lt;fossy&gt;</a></span><span class="message">nah just generally from previous conversation</span></div><div class="line" id="155036"><span class="nick">***</span><span class="message notice">ccx_ is now known as ccx</span></div><div class="line" id="184129"><span class="nick" style="color:#6b8072"><a href="#184129" label="[18:41:29]">&lt;stikonas&gt;</a></span><span class="message">5 minute fix to make sha256sum output hashes in the correct order <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/commit/1ac0d018996bb18347de2aed67c0b8b8ecd12b0b">https://github.com/oriansj/mescc-tools-extra/commit/1ac0d018996bb18347de2aed67c0b8b8ecd12b0b</a> </span></div><div class="line" id="184158"><span class="nick" style="color:#6b8072"><a href="#184158" label="[18:41:58]">&lt;stikonas&gt;</a></span><span class="message">(and also servers as an additional test for M2-Planet pointer dereference functionality)</span></div><div class="line" id="184247"><span class="nick" style="color:#6c3d55"><a href="#184247" label="[18:42:47]">&lt;riv&gt;</a></span><span class="message">why have you implemented sha?</span></div><div class="line" id="184325"><span class="nick" style="color:#6b8072"><a href="#184325" label="[18:43:25]">&lt;stikonas&gt;</a></span><span class="message">i didn't write that file, I think oriansj added it</span></div><div class="line" id="184339"><span class="nick" style="color:#6b8072"><a href="#184339" label="[18:43:39]">&lt;stikonas&gt;</a></span><span class="message">but it's to calculate checksums before GNU coreutils is bootstrapped</span></div><div class="line" id="184351"><span class="nick" style="color:#6b8072"><a href="#184351" label="[18:43:51]">&lt;stikonas&gt;</a></span><span class="message">so stage0-posix and early stages in live-bootstrap use it</span></div><div class="line" id="184427"><span class="nick" style="color:#6b8072"><a href="#184427" label="[18:44:27]">&lt;stikonas&gt;</a></span><span class="message">it's not strictly speaking required</span></div><div class="line" id="184432"><span class="nick" style="color:#6c3d55"><a href="#184432" label="[18:44:32]">&lt;riv&gt;</a></span><span class="message">why does it checksum? isn't the data known to be correct?</span></div><div class="line" id="184435"><span class="nick" style="color:#6b8072"><a href="#184435" label="[18:44:35]">&lt;stikonas&gt;</a></span><span class="message">but good to have an optional checksum</span></div><div class="line" id="184524"><span class="nick" style="color:#6b8072"><a href="#184524" label="[18:45:24]">&lt;stikonas&gt;</a></span><span class="message">you mean output binaries?</span></div><div class="line" id="184602"><span class="nick" style="color:#6b8072"><a href="#184602" label="[18:46:02]">&lt;stikonas&gt;</a></span><span class="message">well, it does help to make sure that everybody is getting the same checksum accross different machines</span></div><div class="line" id="184603"><span class="nick" style="color:#6c3d55"><a href="#184603" label="[18:46:03]">&lt;riv&gt;</a></span><span class="message">oh the checksum is done on outputs</span></div><div class="line" id="184610"><span class="nick" style="color:#6c3d55"><a href="#184610" label="[18:46:10]">&lt;riv&gt;</a></span><span class="message">to verify that the output is as expected, I like that</span></div><div class="line" id="184614"><span class="nick" style="color:#6b8072"><a href="#184614" label="[18:46:14]">&lt;stikonas&gt;</a></span><span class="message">yes, on outputs</span></div><div class="line" id="184624"><span class="nick" style="color:#6b8072"><a href="#184624" label="[18:46:24]">&lt;stikonas&gt;</a></span><span class="message">well, mostly to ensure reproducible builds</span></div><div class="line" id="184636"><span class="nick" style="color:#6b8072"><a href="#184636" label="[18:46:36]">&lt;stikonas&gt;</a></span><span class="message">every time you edit code, checksum changes</span></div><div class="line" id="184654"><span class="nick" style="color:#6b8072"><a href="#184654" label="[18:46:54]">&lt;stikonas&gt;</a></span><span class="message">but otherwise, checksum should remain the same</span></div><div class="line" id="184804"><span class="nick" style="color:#6b8072"><a href="#184804" label="[18:48:04]">&lt;stikonas&gt;</a></span><span class="message">well, that reverse list thing is to make output match sha256sum form GNU  coreutils</span></div><div class="line" id="184819"><span class="nick" style="color:#6b8072"><a href="#184819" label="[18:48:19]">&lt;stikonas&gt;</a></span><span class="message">the one from mescc-tools-extra used to print everything in reverse order</span></div><br /></div></body></html>