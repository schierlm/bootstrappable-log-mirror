<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-01-02.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002259"><span class="nick" style="color:#389600"><a href="#002259" label="[00:22:59]">&lt;stikonas&gt;</a></span><span class="message">number of open bugs and PRs in live-bootstrap skyrocketed recently...</span></div><div class="line" id="002315"><span class="nick" style="color:#389600"><a href="#002315" label="[00:23:15]">&lt;stikonas&gt;</a></span><span class="message">though I guess it means project is active</span></div><div class="line" id="002404"><span class="nick" style="color:#389600"><a href="#002404" label="[00:24:04]">&lt;stikonas&gt;</a></span><span class="message">Googulator: I went over your PRs, mostly looks fine, but maybe let's wait for fossy to review too</span></div><div class="line" id="002430"><span class="nick" style="color:#8dd3c7"><a href="#002430" label="[00:24:30]">&lt;Googulator&gt;</a></span><span class="message">yes, I'd prefer a review from fossy too</span></div><div class="line" id="002443"><span class="nick" style="color:#8dd3c7"><a href="#002443" label="[00:24:43]">&lt;Googulator&gt;</a></span><span class="message">&amp; there's more coming</span></div><div class="line" id="002737"><span class="nick" style="color:#389600"><a href="#002737" label="[00:27:37]">&lt;stikonas&gt;</a></span><span class="message">well, with more people, we can afford more review too</span></div><div class="line" id="002750"><span class="nick" style="color:#389600"><a href="#002750" label="[00:27:50]">&lt;stikonas&gt;</a></span><span class="message">you are also reviewing some other PRs...</span></div><div class="line" id="002805"><span class="nick" style="color:#389600"><a href="#002805" label="[00:28:05]">&lt;stikonas&gt;</a></span><span class="message">it's definitely better than me reviewing fossy's PR and fossy reviewing mine</span></div><div class="line" id="002809"><span class="nick" style="color:#389600"><a href="#002809" label="[00:28:09]">&lt;stikonas&gt;</a></span><span class="message">as we had at the beginning</span></div><div class="line" id="002919"><span class="nick" style="color:#389600"><a href="#002919" label="[00:29:19]">&lt;stikonas&gt;</a></span><span class="message">hmm, though after today I'm a bit scared of stuff like Variable *last = NULL;</span></div><div class="line" id="002925"><span class="nick" style="color:#389600"><a href="#002925" label="[00:29:25]">&lt;stikonas&gt;</a></span><span class="message">it probably works in this case</span></div><div class="line" id="002935"><span class="nick" style="color:#389600"><a href="#002935" label="[00:29:35]">&lt;stikonas&gt;</a></span><span class="message">especially since this is constant and not function...</span></div><div class="line" id="002950"><span class="nick" style="color:#389600"><a href="#002950" label="[00:29:50]">&lt;stikonas&gt;</a></span><span class="message">but there is some bug in M2-Planet where assigning doesn't work</span></div><div class="line" id="003020"><span class="nick" style="color:#8dd3c7"><a href="#003020" label="[00:30:20]">&lt;Googulator&gt;</a></span><span class="message">The Directive *last one was an actual bugfix</span></div><div class="line" id="003036"><span class="nick" style="color:#8dd3c7"><a href="#003036" label="[00:30:36]">&lt;Googulator&gt;</a></span><span class="message">Variable *last is just analogous</span></div><div class="line" id="003106"><span class="nick" style="color:#8dd3c7"><a href="#003106" label="[00:31:06]">&lt;Googulator&gt;</a></span><span class="message">and yes, in this case, it does work</span></div><div class="line" id="003115"><span class="nick" style="color:#8dd3c7"><a href="#003115" label="[00:31:15]">&lt;Googulator&gt;</a></span><span class="message">and it does fix the issue</span></div><div class="line" id="003219"><span class="nick" style="color:#389600"><a href="#003219" label="[00:32:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, but look at -223 +220 line here <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/commit/c7c827a1e942ceada80e28081fac41b829e782e6">https://git.stikonas.eu/andrius/stage0-uefi/commit/c7c827a1e942ceada80e28081fac41b829e782e6</a> </span></div><div class="line" id="003313"><span class="nick" style="color:#389600"><a href="#003313" label="[00:33:13]">&lt;stikonas&gt;</a></span><span class="message">took me a while to understand why &quot;child&quot; variable had some bogus value...</span></div><div class="line" id="003911"><span class="nick" style="color:#8dd3c7"><a href="#003911" label="[00:39:11]">&lt;Googulator&gt;</a></span><span class="message">ouch</span></div><div class="line" id="003958"><span class="nick" style="color:#8dd3c7"><a href="#003958" label="[00:39:58]">&lt;Googulator&gt;</a></span><span class="message">you know what would be really crazy here?</span></div><div class="line" id="004022"><span class="nick" style="color:#8dd3c7"><a href="#004022" label="[00:40:22]">&lt;Googulator&gt;</a></span><span class="message">if &quot;struct process* child = current_process&quot; didn't work, but &quot;struct process *child = current_process&quot; inexplicably did :)</span></div><div class="line" id="004129"><span class="nick" style="color:#8dd3c7"><a href="#004129" label="[00:41:29]">&lt;Googulator&gt;</a></span><span class="message">although it seems more likely that the issue is related to referring to a global variable in a variable declaration</span></div><div class="line" id="010810"><span class="nick" style="color:#389600"><a href="#010810" label="[01:08:10]">&lt;stikonas&gt;</a></span><span class="message">Googulator: but the same was happening with assigning calloc result</span></div><div class="line" id="010833"><span class="nick" style="color:#8dd3c7"><a href="#010833" label="[01:08:33]">&lt;Googulator&gt;</a></span><span class="message">hmm, where is script-generator's checksum located?</span></div><div class="line" id="010838"><span class="nick" style="color:#2e2a4a"><a href="#010838" label="[01:08:38]">&lt;sam_&gt;</a></span><span class="message">i'm not sure what to think about this, but</span></div><div class="line" id="010848"><span class="nick" style="color:#2e2a4a"><a href="#010848" label="[01:08:48]">&lt;sam_&gt;</a></span><span class="message">someone sent <a rel="nofollow" href="https://lists.gnu.org/archive/html/sed-devel/2023-12/msg00001.html">https://lists.gnu.org/archive/html/sed-devel/2023-12/msg00001.html</a>  to sed-devel</span></div><div class="line" id="010850"><span class="nick" style="color:#389600"><a href="#010850" label="[01:08:50]">&lt;stikonas&gt;</a></span><span class="message">see line 188...</span></div><div class="line" id="010909"><span class="nick" style="color:#2e2a4a"><a href="#010909" label="[01:09:09]">&lt;sam_&gt;</a></span><span class="message">then it turns out the cpio developer has implemented it (on a branch) at <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/cpio.git/commit/?h=literate&amp;id=09a46abe52e8bd604a5101f1fac0e98f706308d8">https://git.savannah.gnu.org/cgit/cpio.git/commit/?h=literate&amp;id=09a46abe52e8bd604a5101f1fac0e98f706308d8</a> </span></div><div class="line" id="010913"><span class="nick" style="color:#2e2a4a"><a href="#010913" label="[01:09:13]">&lt;sam_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://queue.acm.org/detail.cfm?id=3570938">https://queue.acm.org/detail.cfm?id=3570938</a> </span></div><div class="line" id="011023"><span class="nick" style="color:#389600"><a href="#011023" label="[01:10:23]">&lt;stikonas&gt;</a></span><span class="message">sam_: hmm, a bit odd...</span></div><div class="line" id="011031"><span class="nick" style="color:#2e2a4a"><a href="#011031" label="[01:10:31]">&lt;sam_&gt;</a></span><span class="message">that is my feeling too</span></div><div class="line" id="011108"><span class="nick" style="color:#389600"><a href="#011108" label="[01:11:08]">&lt;stikonas&gt;</a></span><span class="message">though programs that print their own source is nothing new...</span></div><div class="line" id="011142"><span class="nick" style="color:#389600"><a href="#011142" label="[01:11:42]">&lt;stikonas&gt;</a></span><span class="message">and actually hex0 kind of also does that, it's just that source is not stored in the binary itself...</span></div><div class="line" id="011214"><span class="nick" style="color:#389600"><a href="#011214" label="[01:12:14]">&lt;stikonas&gt;</a></span><span class="message">but how can we know that source printed by that executable is real</span></div><div class="line" id="011221"><span class="nick" style="color:#389600"><a href="#011221" label="[01:12:21]">&lt;stikonas&gt;</a></span><span class="message">and not &quot;good&quot; source without backdoor</span></div><div class="line" id="011245"><span class="nick" style="color:#8dd3c7"><a href="#011245" label="[01:12:45]">&lt;Googulator&gt;</a></span><span class="message">next step would be a compiler flag, e.g. -Q, to turn the generated executable into a quine :)</span></div><div class="line" id="011255"><span class="nick" style="color:#8dd3c7"><a href="#011255" label="[01:12:55]">&lt;Googulator&gt;</a></span><span class="message">or --autoquine</span></div><div class="line" id="011419"><span class="nick" style="color:#389600"><a href="#011419" label="[01:14:19]">&lt;stikonas&gt;</a></span><span class="message">oh yeah, I was trying to remember this word &quot;quine&quot;. Thanks!</span></div><div class="line" id="011603"><span class="nick" style="color:#8dd3c7"><a href="#011603" label="[01:16:03]">&lt;Googulator&gt;</a></span><span class="message">BTW, script-generator is definitely missing a checksum - filed <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/394">https://github.com/fosslinux/live-bootstrap/issues/394</a>  for it</span></div><div class="line" id="011700"><span class="nick" style="color:#8dd3c7"><a href="#011700" label="[01:17:00]">&lt;Googulator&gt;</a></span><span class="message">so there's currently no checksum to update in <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/385">https://github.com/fosslinux/live-bootstrap/pull/385</a>  (or <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/387">https://github.com/fosslinux/live-bootstrap/pull/387</a>,  which also touches script-generator)</span></div><div class="line" id="012401"><span class="nick" style="color:#389600"><a href="#012401" label="[01:24:01]">&lt;stikonas&gt;</a></span><span class="message">thanks for opening the ticket</span></div><div class="line" id="012425"><span class="nick" style="color:#389600"><a href="#012425" label="[01:24:25]">&lt;stikonas&gt;</a></span><span class="message">hmm, so M0 in my kernel is broken by something the last two commits...</span></div><div class="line" id="012432"><span class="nick" style="color:#389600"><a href="#012432" label="[01:24:32]">&lt;stikonas&gt;</a></span><span class="message">probably another weird issue...</span></div><div class="line" id="012506"><span class="nick" style="color:#389600"><a href="#012506" label="[01:25:06]">&lt;stikonas&gt;</a></span><span class="message">but at least I'll should be able to &quot;bisect&quot; it by applying changes in smaller bits</span></div><div class="line" id="012913"><span class="nick" style="color:#389600"><a href="#012913" label="[01:29:13]">&lt;stikonas&gt;</a></span><span class="message">ok, got it! I need to keep brk area calloc'ed rather than malloced...</span></div><div class="line" id="012956"><span class="nick" style="color:#389600"><a href="#012956" label="[01:29:56]">&lt;stikonas&gt;</a></span><span class="message">as posix version of M0 assumes that newly allocated memory is zeroed</span></div><div class="line" id="013237"><span class="nick" style="color:#389600"><a href="#013237" label="[01:32:37]">&lt;stikonas&gt;</a></span><span class="message">hmm, and probably need to zero it on execve too...</span></div><div class="line" id="013242"><span class="nick" style="color:#389600"><a href="#013242" label="[01:32:42]">&lt;stikonas&gt;</a></span><span class="message">that will be slowish...</span></div><div class="line" id="013627"><span class="nick" style="color:#8dd3c7"><a href="#013627" label="[01:36:27]">&lt;Googulator&gt;</a></span><span class="message">...time for 2024's first bare metal run :)</span></div><div class="line" id="032815"><span class="nick" style="color:#8dd3c7"><a href="#032815" label="[03:28:15]">&lt;Googulator&gt;</a></span><span class="message">for anyone who wants to test bare metal: <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/tree/bare-metal-full">https://github.com/Googulator/live-bootstrap/tree/bare-metal-full</a>  should work the best</span></div><div class="line" id="032916"><span class="nick" style="color:#8dd3c7"><a href="#032916" label="[03:29:16]">&lt;Googulator&gt;</a></span><span class="message">on some hardware, replacing builder-hex0 with this version may also be needed: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/pull/5">https://github.com/ironmeld/builder-hex0/pull/5</a> </span></div><div class="line" id="035750"><span class="nick" style="color:#6b8072"><a href="#035750" label="[03:57:50]">&lt;fossy&gt;</a></span><span class="message">Googulator: looking over your PRs now</span></div><div class="line" id="035948"><span class="nick" style="color:#6b8072"><a href="#035948" label="[03:59:48]">&lt;fossy&gt;</a></span><span class="message">Googulator: are these ok to be merged in any order</span></div><div class="line" id="040034"><span class="nick" style="color:#6b8072"><a href="#040034" label="[04:00:34]">&lt;fossy&gt;</a></span><span class="message">well, apart from the &quot;Depends on&quot; you are writing in descriptions</span></div><div class="line" id="040235"><span class="nick" style="color:#8dd3c7"><a href="#040235" label="[04:02:35]">&lt;Googulator&gt;</a></span><span class="message">Yeah, I tried to make them independent</span></div><div class="line" id="040248"><span class="nick" style="color:#8dd3c7"><a href="#040248" label="[04:02:48]">&lt;Googulator&gt;</a></span><span class="message">although there can certainly be conflicts</span></div><div class="line" id="040615"><span class="nick" style="color:#8dd3c7"><a href="#040615" label="[04:06:15]">&lt;Googulator&gt;</a></span><span class="message">turns out, stage2 from <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/pull/5">https://github.com/ironmeld/builder-hex0/pull/5</a>  is not usable as is - sector 165 (0xA5) should instead be 166 (0xA6)</span></div><div class="line" id="040627"><span class="nick" style="color:#8dd3c7"><a href="#040627" label="[04:06:27]">&lt;Googulator&gt;</a></span><span class="message">this doesn't affect the PRs, I'm still using the old builder-hex0 there</span></div><div class="line" id="042128"><span class="nick" style="color:#80b1d3"><a href="#042128" label="[04:21:28]">&lt;oriansj&gt;</a></span><span class="message">stikonas: yeah calloc works for any type defined prior to the sizeof expression and will also work well for arrays of structs</span></div><div class="line" id="063542"><span class="nick" style="color:#6b8072"><a href="#063542" label="[06:35:42]">&lt;fossy&gt;</a></span><span class="message">Googulator: 393 &amp; 395 are just the sum of other PRs, yes?</span></div><div class="line" id="063601"><span class="nick" style="color:#8dd3c7"><a href="#063601" label="[06:36:01]">&lt;Googulator&gt;</a></span><span class="message">Yes, they're only for reference.</span></div><div class="line" id="063610"><span class="nick" style="color:#6b8072"><a href="#063610" label="[06:36:10]">&lt;fossy&gt;</a></span><span class="message">amazing</span></div><div class="line" id="063620"><span class="nick" style="color:#8dd3c7"><a href="#063620" label="[06:36:20]">&lt;Googulator&gt;</a></span><span class="message">I'm currently running 393 on one of my boards, and 395 on the other</span></div><div class="line" id="063626"><span class="nick" style="color:#6b8072"><a href="#063626" label="[06:36:26]">&lt;fossy&gt;</a></span><span class="message">thanks for taking the time to upstream a relatively large set of changes :)</span></div><div class="line" id="063646"><span class="nick" style="color:#8dd3c7"><a href="#063646" label="[06:36:46]">&lt;Googulator&gt;</a></span><span class="message">There's one more piece to come - the builder-hex0 upgrades</span></div><div class="line" id="063701"><span class="nick" style="color:#8dd3c7"><a href="#063701" label="[06:37:01]">&lt;Googulator&gt;</a></span><span class="message">once I figure out why hda writes aren't working right now in qemu</span></div><div class="line" id="063718"><span class="nick" style="color:#8dd3c7"><a href="#063718" label="[06:37:18]">&lt;Googulator&gt;</a></span><span class="message">(irrelevant for our use case, but required for upstreaming)</span></div><div class="line" id="065133"><span class="nick" style="color:#8dd3c7"><a href="#065133" label="[06:51:33]">&lt;Googulator&gt;</a></span><span class="message">is builder-hex0 used anywhere outside live-bootstrap? AFAIK Guix doesn't use it.</span></div><div class="line" id="160138"><span class="nick" style="color:#8dd3c7"><a href="#160138" label="[16:01:38]">&lt;Googulator&gt;</a></span><span class="message">janneke: (hoping you know this) how did the static &quot;driver&quot; binaries for Guix get built? That is, the static guile, tar, xz, etc. used to drive the full source bootstrap.</span></div><div class="line" id="160151"><span class="nick" style="color:#8dd3c7"><a href="#160151" label="[16:01:51]">&lt;Googulator&gt;</a></span><span class="message">I'd be interested in reproducing them in the live-bootstrap environment.</span></div><div class="line" id="163028"><span class="nick" style="color:#389600"><a href="#163028" label="[16:30:28]">&lt;stikonas&gt;</a></span><span class="message">Googulator: maybe ask in #guix</span></div><div class="line" id="163040"><span class="nick" style="color:#6d2462"><a href="#163040" label="[16:30:40]">&lt;ekaitz&gt;</a></span><span class="message">Googulator: i might be able to answer</span></div><div class="line" id="163235"><span class="nick" style="color:#6d2462"><a href="#163235" label="[16:32:35]">&lt;ekaitz&gt;</a></span><span class="message">Googulator: they are in a tarball</span></div><div class="line" id="163248"><span class="nick" style="color:#389600"><a href="#163248" label="[16:32:48]">&lt;stikonas&gt;</a></span><span class="message">oh, there is make-bootstrap.scm</span></div><div class="line" id="163353"><span class="nick" style="color:#6d2462"><a href="#163353" label="[16:33:53]">&lt;ekaitz&gt;</a></span><span class="message">you can read them in gnu/packages/bootstrap.scm</span></div><div class="line" id="163408"><span class="nick" style="color:#389600"><a href="#163408" label="[16:34:08]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/make-bootstrap.scm">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/make-bootstrap.scm</a> </span></div><div class="line" id="163411"><span class="nick" style="color:#6d2462"><a href="#163411" label="[16:34:11]">&lt;ekaitz&gt;</a></span><span class="message">and yeah, that too</span></div><div class="line" id="163425"><span class="nick" style="color:#389600"><a href="#163425" label="[16:34:25]">&lt;stikonas&gt;</a></span><span class="message">it basically needs guix to build them...</span></div><div class="line" id="163522"><span class="nick" style="color:#6d2462"><a href="#163522" label="[16:35:22]">&lt;ekaitz&gt;</a></span><span class="message">sure</span></div><div class="line" id="163651"><span class="nick" style="color:#389600"><a href="#163651" label="[16:36:51]">&lt;stikonas&gt;</a></span><span class="message">Googulator: so basically you should try to run guix with different bootstrap binaries that you produced, that will cause all &quot;guix&quot; checksums to be different, but hopefully actual file checksums will be the same</span></div><div class="line" id="163702"><span class="nick" style="color:#389600"><a href="#163702" label="[16:37:02]">&lt;stikonas&gt;</a></span><span class="message">and then it should be able to build those bootstrap binaries</span></div><div class="line" id="163730"><span class="nick" style="color:#8dd3c7"><a href="#163730" label="[16:37:30]">&lt;Googulator&gt;</a></span><span class="message">ekaitz: the bootstrap _binaries_ are themselves in a tarball</span></div><div class="line" id="163742"><span class="nick" style="color:#8dd3c7"><a href="#163742" label="[16:37:42]">&lt;Googulator&gt;</a></span><span class="message">that's not what I'm looking for</span></div><div class="line" id="163750"><span class="nick" style="color:#8dd3c7"><a href="#163750" label="[16:37:50]">&lt;Googulator&gt;</a></span><span class="message">I'm trying to reproduce that tarball from sources</span></div><div class="line" id="163805"><span class="nick" style="color:#6d2462"><a href="#163805" label="[16:38:05]">&lt;ekaitz&gt;</a></span><span class="message">that's what stikonas told you i think</span></div><div class="line" id="163824"><span class="nick" style="color:#6d2462"><a href="#163824" label="[16:38:24]">&lt;ekaitz&gt;</a></span><span class="message">make-bootstrap is where those are built</span></div><div class="line" id="164022"><span class="nick" style="color:#8dd3c7"><a href="#164022" label="[16:40:22]">&lt;Googulator&gt;</a></span><span class="message">oh, I didn't see make-bootstrap</span></div><div class="line" id="164411"><span class="nick" style="color:#8dd3c7"><a href="#164411" label="[16:44:11]">&lt;Googulator&gt;</a></span><span class="message">I can see guile, xz and tar here; mkdir preusmably comes from coreutils</span></div><div class="line" id="164422"><span class="nick" style="color:#8dd3c7"><a href="#164422" label="[16:44:22]">&lt;Googulator&gt;</a></span><span class="message">but not static-bash</span></div><div class="line" id="164511"><span class="nick" style="color:#8dd3c7"><a href="#164511" label="[16:45:11]">&lt;Googulator&gt;</a></span><span class="message">looks like that's in <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/bash.scm">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/bash.scm</a> </span></div><div class="line" id="164948"><span class="nick" style="color:#389600"><a href="#164948" label="[16:49:48]">&lt;stikonas&gt;</a></span><span class="message">yeah, ironically guix is hard to bootstrap from source...</span></div><div class="line" id="165609"><span class="nick" style="color:#8dd3c7"><a href="#165609" label="[16:56:09]">&lt;Googulator&gt;</a></span><span class="message">My plan is to rebuild the 5 bootstrap binaries (bash, xz, tar, mkdir, guile) without using Guix itself (using the Guile 3.0.9 we already have is fine, so long as it doesn't pull in the original bootstrap binaries)</span></div><div class="line" id="165653"><span class="nick" style="color:#8dd3c7"><a href="#165653" label="[16:56:53]">&lt;Googulator&gt;</a></span><span class="message">they should be binary identical to the ones normally downloaded by Guix</span></div><div class="line" id="165714"><span class="nick" style="color:#8dd3c7"><a href="#165714" label="[16:57:14]">&lt;Googulator&gt;</a></span><span class="message">and then somehow override Guix's download location to load the rebuilt ones instead of the originals</span></div><div class="line" id="165843"><span class="nick" style="color:#8dd3c7"><a href="#165843" label="[16:58:43]">&lt;Googulator&gt;</a></span><span class="message">I wonder why tar, xz and bash are even involved in the bootstrap, given gash and bootar</span></div><div class="line" id="170419"><span class="nick" style="color:#389600"><a href="#170419" label="[17:04:19]">&lt;stikonas&gt;</a></span><span class="message">Googulator: it's not that simple I think</span></div><div class="line" id="170433"><span class="nick" style="color:#389600"><a href="#170433" label="[17:04:33]">&lt;stikonas&gt;</a></span><span class="message">you'll have to patch guix for that</span></div><div class="line" id="170502"><span class="nick" style="color:#389600"><a href="#170502" label="[17:05:02]">&lt;stikonas&gt;</a></span><span class="message">let's say you get all the guix dependencies built</span></div><div class="line" id="170635"><span class="nick" style="color:#389600"><a href="#170635" label="[17:06:35]">&lt;stikonas&gt;</a></span><span class="message">then once you install guix binary, you can add it to /gnu/store with &quot;guix download&quot; command</span></div><div class="line" id="170653"><span class="nick" style="color:#389600"><a href="#170653" label="[17:06:53]">&lt;stikonas&gt;</a></span><span class="message">patch guix sources to use those binaries</span></div><div class="line" id="170707"><span class="nick" style="color:#389600"><a href="#170707" label="[17:07:07]">&lt;stikonas&gt;</a></span><span class="message">(i.e. in bootstrap.scm)</span></div><div class="line" id="170745"><span class="nick" style="color:#389600"><a href="#170745" label="[17:07:45]">&lt;stikonas&gt;</a></span><span class="message">then I guess rebuild guix binary</span></div><div class="line" id="170757"><span class="nick" style="color:#389600"><a href="#170757" label="[17:07:57]">&lt;stikonas&gt;</a></span><span class="message">and then you should be able to start building with --no-substitutes</span></div><div class="line" id="170835"><span class="nick" style="color:#389600"><a href="#170835" label="[17:08:35]">&lt;stikonas&gt;</a></span><span class="message">I'm not sure if you'll be able to get it to be binary indentical without guix...</span></div><div class="line" id="170847"><span class="nick" style="color:#389600"><a href="#170847" label="[17:08:47]">&lt;stikonas&gt;</a></span><span class="message">if yes, then maybe everything is simpler</span></div><div class="line" id="170900"><span class="nick" style="color:#389600"><a href="#170900" label="[17:09:00]">&lt;stikonas&gt;</a></span><span class="message">but you'll have to somehow simulate all the build environment that guix has</span></div><div class="line" id="170929"><span class="nick" style="color:#389600"><a href="#170929" label="[17:09:29]">&lt;stikonas&gt;</a></span><span class="message">I'm sure all those guix paths with hashes end up affecting hashes of bootstrap binaries</span></div><div class="line" id="172019"><span class="nick" style="color:#8dd3c7"><a href="#172019" label="[17:20:19]">&lt;Googulator&gt;</a></span><span class="message">If the bootstrap binaries are reproducible within Guix, then rebuilding them in a patched Guix that will accept &quot;wrong&quot; initial binaries can work too</span></div><div class="line" id="172108"><span class="nick" style="color:#8dd3c7"><a href="#172108" label="[17:21:08]">&lt;Googulator&gt;</a></span><span class="message">&amp; then stage the rebuilt binaries in /gnu/store, and rebuild+bootstrap a clean Guix</span></div><div class="line" id="173316"><span class="nick" style="color:#234e69"><a href="#173316" label="[17:33:16]">&lt;janneke&gt;</a></span><span class="message">Googulator: the bootstrap binaries were built doing: guix build bootstrap-tarballs</span></div><div class="line" id="173329"><span class="nick" style="color:#234e69"><a href="#173329" label="[17:33:29]">&lt;janneke&gt;</a></span><span class="message">see <a rel="nofollow" href="https://guix.gnu.org/manual/en/html_node/Preparing-to-Use-the-Bootstrap-Binaries.html">https://guix.gnu.org/manual/en/html_node/Preparing-to-Use-the-Bootstrap-Binaries.html</a> </span></div><div class="line" id="173531"><span class="nick" style="color:#234e69"><a href="#173531" label="[17:35:31]">&lt;janneke&gt;</a></span><span class="message">however, they were last built some 4y ago</span></div><div class="line" id="173532"><span class="nick" style="color:#234e69"><a href="#173532" label="[17:35:32]">&lt;janneke&gt;</a></span><span class="message"> <a rel="nofollow" href="https://ftp.gnu.org/pub/gnu/guix/bootstrap/i686-linux/20190815/">https://ftp.gnu.org/pub/gnu/guix/bootstrap/i686-linux/20190815/</a> </span></div><div class="line" id="173549"><span class="nick" style="color:#8dd3c7"><a href="#173549" label="[17:35:49]">&lt;Googulator&gt;</a></span><span class="message">that was well before full-source bootstrap then</span></div><div class="line" id="173553"><span class="nick" style="color:#234e69"><a href="#173553" label="[17:35:53]">&lt;janneke&gt;</a></span><span class="message">so, to reproduce them, you'd have to checkout an older guix</span></div><div class="line" id="173556"><span class="nick" style="color:#8dd3c7"><a href="#173556" label="[17:35:56]">&lt;Googulator&gt;</a></span><span class="message">before even Scheme-only</span></div><div class="line" id="173609"><span class="nick" style="color:#234e69"><a href="#173609" label="[17:36:09]">&lt;janneke&gt;</a></span><span class="message">sure</span></div><div class="line" id="173613"><span class="nick" style="color:#8dd3c7"><a href="#173613" label="[17:36:13]">&lt;Googulator&gt;</a></span><span class="message">was reduced binary seed even a thing then?</span></div><div class="line" id="173715"><span class="nick" style="color:#234e69"><a href="#173715" label="[17:37:15]">&lt;janneke&gt;</a></span><span class="message">let me check which guile binary exactly is used right now</span></div><div class="line" id="173949"><span class="nick" style="color:#234e69"><a href="#173949" label="[17:39:49]">&lt;janneke&gt;</a></span><span class="message">if you run</span></div><div class="line" id="173951"><span class="nick" style="color:#234e69"><a href="#173951" label="[17:39:51]">&lt;janneke&gt;</a></span><span class="message">guix build -e '(@@ (gnu packages bootstrap) %bootstrap-guile)'</span></div><div class="line" id="174011"><span class="nick" style="color:#234e69"><a href="#174011" label="[17:40:11]">&lt;janneke&gt;</a></span><span class="message">=&gt; /gnu/store/lgi9x15a0w35mcpd7g1kb9274r6wy4pv-guile-bootstrap-2.0</span></div><div class="line" id="174154"><span class="nick" style="color:#234e69"><a href="#174154" label="[17:41:54]">&lt;janneke&gt;</a></span><span class="message">you can see that guile-2.0 is still used, the original guile driver from 2013</span></div><div class="line" id="174157"><span class="nick" style="color:#234e69"><a href="#174157" label="[17:41:57]">&lt;janneke&gt;</a></span><span class="message">=&gt; <a rel="nofollow" href="https://alpha.gnu.org/gnu/guix/bootstrap/i686-linux/20131110/">https://alpha.gnu.org/gnu/guix/bootstrap/i686-linux/20131110/</a> </span></div><div class="line" id="181506"><span class="nick" style="color:#6d2462"><a href="#181506" label="[18:15:06]">&lt;ekaitz&gt;</a></span><span class="message">janneke: are you back?</span></div><div class="line" id="181515"><span class="nick" style="color:#6d2462"><a href="#181515" label="[18:15:15]">&lt;ekaitz&gt;</a></span><span class="message">I sent you some patches for mes and tcc</span></div><div class="line" id="181553"><span class="nick" style="color:#6d2462"><a href="#181553" label="[18:15:53]">&lt;ekaitz&gt;</a></span><span class="message">janneke: if you could apply the tcc one and re-upload I would make a patch for guix to include our riscv work</span></div><div class="line" id="181701"><span class="nick" style="color:#234e69"><a href="#181701" label="[18:17:01]">&lt;janneke&gt;</a></span><span class="message">ekaitz: sort of :)</span></div><div class="line" id="181725"><span class="nick" style="color:#234e69"><a href="#181725" label="[18:17:25]">&lt;janneke&gt;</a></span><span class="message">yes thanks, i updatet mes wip and tcc@mes-0.25 and uploaded a new tarball</span></div><div class="line" id="181806"><span class="nick" style="color:#234e69"><a href="#181806" label="[18:18:06]">&lt;janneke&gt;</a></span><span class="message">ACTION hasn't gotten round to answering email -- nice work tho</span></div><div class="line" id="181930"><span class="nick" style="color:#389600"><a href="#181930" label="[18:19:30]">&lt;stikonas&gt;</a></span><span class="message">janneke: welcome back</span></div><div class="line" id="182114"><span class="nick" style="color:#389600"><a href="#182114" label="[18:21:14]">&lt;stikonas&gt;</a></span><span class="message">janneke: not sure if you saw it yet, but we might have a new option for baremetal bootstrap on UEFI soonish</span></div><div class="line" id="182152"><span class="nick" style="color:#389600"><a href="#182152" label="[18:21:52]">&lt;stikonas&gt;</a></span><span class="message">last week I was writing x86_64 &quot;kernel&quot; for UEFI systems <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/posix-runner/posix-runner/posix-runner.c">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/posix-runner/posix-runner/posix-runner.c</a> </span></div><div class="line" id="182241"><span class="nick" style="color:#389600"><a href="#182241" label="[18:22:41]">&lt;stikonas&gt;</a></span><span class="message">janneke: so rather than porting meslibc to UEFI, we can just use this kernel, though I'm still debugging it on stage0-posix binaries. Mes would be next</span></div><div class="line" id="182332"><span class="nick" style="color:#389600"><a href="#182332" label="[18:23:32]">&lt;stikonas&gt;</a></span><span class="message">though the limitations would be that this is x86_64 only. And will only run position independent binaries</span></div><div class="line" id="182812"><span class="nick" style="color:#6d2462"><a href="#182812" label="[18:28:12]">&lt;ekaitz&gt;</a></span><span class="message">janneke: but I need the link to the tarball please</span></div><div class="line" id="183904"><span class="nick" style="color:#389600"><a href="#183904" label="[18:39:04]">&lt;stikonas&gt;</a></span><span class="message">ekaitz: <a rel="nofollow" href="https://lilypond.org/janneke/tcc/tcc-0.9.26-1148-g12f9c086.tar.gz">https://lilypond.org/janneke/tcc/tcc-0.9.26-1148-g12f9c086.tar.gz</a>  ?</span></div><div class="line" id="184052"><span class="nick" style="color:#6d2462"><a href="#184052" label="[18:40:52]">&lt;ekaitz&gt;</a></span><span class="message">let me see if that's the latest one</span></div><div class="line" id="184107"><span class="nick" style="color:#234e69"><a href="#184107" label="[18:41:07]">&lt;janneke&gt;</a></span><span class="message">yes, that's it</span></div><div class="line" id="184324"><span class="nick" style="color:#6d2462"><a href="#184324" label="[18:43:24]">&lt;ekaitz&gt;</a></span><span class="message">yeah</span></div><div class="line" id="184326"><span class="nick" style="color:#6d2462"><a href="#184326" label="[18:43:26]">&lt;ekaitz&gt;</a></span><span class="message">good</span></div><div class="line" id="184329"><span class="nick" style="color:#6d2462"><a href="#184329" label="[18:43:29]">&lt;ekaitz&gt;</a></span><span class="message">thanks janneke and stikonas</span></div><div class="line" id="184340"><span class="nick" style="color:#6d2462"><a href="#184340" label="[18:43:40]">&lt;ekaitz&gt;</a></span><span class="message">i'll add it to guix and send patch</span></div><div class="line" id="184504"><span class="nick" style="color:#6d2462"><a href="#184504" label="[18:45:04]">&lt;ekaitz&gt;</a></span><span class="message">janneke: i'll cc you in the patch</span></div><div class="line" id="184629"><span class="nick" style="color:#6d2462"><a href="#184629" label="[18:46:29]">&lt;ekaitz&gt;</a></span><span class="message">i'll keep 0.25.1 for the moment until 0.26 has the double compilation fixed</span></div><div class="line" id="190014"><span class="nick" style="color:#234e69"><a href="#190014" label="[19:00:14]">&lt;janneke&gt;</a></span><span class="message">ekaitz: (y)</span></div><div class="line" id="190108"><span class="nick" style="color:#234e69"><a href="#190108" label="[19:01:08]">&lt;janneke&gt;</a></span><span class="message">you need 0.26.1 for that, right? (git has your patch, but yeah -- bootstrap)</span></div><div class="line" id="190518"><span class="nick" style="color:#389600"><a href="#190518" label="[19:05:18]">&lt;stikonas&gt;</a></span><span class="message">yeah, 0.26.1 would be nice</span></div><div class="line" id="192139"><span class="nick" style="color:#6d2462"><a href="#192139" label="[19:21:39]">&lt;ekaitz&gt;</a></span><span class="message">yes, i need that yeah</span></div><div class="line" id="192217"><span class="nick" style="color:#6d2462"><a href="#192217" label="[19:22:17]">&lt;ekaitz&gt;</a></span><span class="message">but as long as 0.25.1 works, there's no hurry</span></div><div class="line" id="193634"><span class="nick" style="color:#234e69"><a href="#193634" label="[19:36:34]">&lt;janneke&gt;</a></span><span class="message">(y)</span></div><div class="line" id="220848"><span class="nick" style="color:#6c3d55"><a href="#220848" label="[22:08:48]">&lt;pder&gt;</a></span><span class="message">Googulator: On current master for live-bootstrap (commit 133c05426c2133c60) running ./rootfs.py -q hangs every time on booting Fiwix.  Applying commit 812b41d4f8593bcfd29 (Update Fiwix sources link to version with PAE passthrough support) fixes the issue for me.  Are there any plans to include this updated Fiwix source?</span></div><div class="line" id="231326"><span class="nick" style="color:#8dd3c7"><a href="#231326" label="[23:13:26]">&lt;Googulator&gt;</a></span><span class="message">AFAIK the plan is to move to Fiwix 1.5 eventually, but if my fork fixes an actual issue in the wild, then maybe we should include it until then</span></div><div class="line" id="231338"><span class="nick" style="color:#8dd3c7"><a href="#231338" label="[23:13:38]">&lt;Googulator&gt;</a></span><span class="message">What is your qemu version?</span></div><div class="line" id="231943"><span class="nick" style="color:#8dd3c7"><a href="#231943" label="[23:19:43]">&lt;Googulator&gt;</a></span><span class="message">I'm gonna test if I can reproduce this on my system</span></div><div class="line" id="233554"><span class="nick" style="color:#8dd3c7"><a href="#233554" label="[23:35:54]">&lt;Googulator&gt;</a></span><span class="message">Appears to boot fine for me</span></div><div class="line" id="233629"><span class="nick" style="color:#8dd3c7"><a href="#233629" label="[23:36:29]">&lt;Googulator&gt;</a></span><span class="message">QEMU emulator version 6.2.0 (Debian 1:6.2+dfsg-2ubuntu6.15)</span></div><div class="line" id="233719"><span class="nick" style="color:#8dd3c7"><a href="#233719" label="[23:37:19]">&lt;Googulator&gt;</a></span><span class="message">pder: I guess your version of QEMU &amp; SeaBIOS uses a different memory map by default</span></div><div class="line" id="233817"><span class="nick" style="color:#8dd3c7"><a href="#233817" label="[23:38:17]">&lt;Googulator&gt;</a></span><span class="message">(I still don't see how PAE passthrough would fix it though, since it merely preserves PAE information for later use by Linux; Fiwix still can't access PAE addresses, and it essentially sees the same memory map as before)</span></div><div class="line" id="234725"><span class="nick" style="color:#80b1d3"><a href="#234725" label="[23:47:25]">&lt;oriansj&gt;</a></span><span class="message">well, guix changing its &quot;root&quot; binaries is a problem as it'll change all of the hashes for all of the packages (a sort of reset world); so they are likely to avoid doing that as long as possible and we will probably have to give them a good reason to do so</span></div><div class="line" id="235101"><span class="nick" style="color:#8dd3c7"><a href="#235101" label="[23:51:01]">&lt;Googulator&gt;</a></span><span class="message">Which is why my goal is to rebuild the exact binaries currently in use</span></div><div class="line" id="235207"><span class="nick" style="color:#8dd3c7"><a href="#235207" label="[23:52:07]">&lt;Googulator&gt;</a></span><span class="message">IMO the only good reason to deviate from that goal would be if upon rebuild, we couldn't get the hashes to match exactly, and the remaining unavoidable difference turned out to be an actual Karger-Thomson retrovirus embedded in the current binaries</span></div><div class="line" id="235651"><span class="nick" style="color:#80b1d3"><a href="#235651" label="[23:56:51]">&lt;oriansj&gt;</a></span><span class="message">which would be surprising but certainly a good reason for them to change</span></div><div class="line" id="235835"><span class="nick" style="color:#8dd3c7"><a href="#235835" label="[23:58:35]">&lt;Googulator&gt;</a></span><span class="message">pder: ./rootfs.py -q (well, sudo ./rootfs.py -q since on WSL2, only root has KVM access) on a clean checkout of 133c05426c2133c60 booted cleanly into Fiwix here, bootstrapping Perl as we speak</span></div><br /></div></body></html>