<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-07-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="005035"><span class="nick" style="color:#389600"><a href="#005035" label="[00:50:35]">&lt;markjenkinsznc&gt;</a></span><span class="message">Once that functionality is present I'll submit a PR for <a rel="nofollow" href="https://github.com/markjenkins/stage0/tree/M0-compact-hex2-redo3">https://github.com/markjenkins/stage0/tree/M0-compact-hex2-redo3</a>  with a comment showing the output of disasm.py disassembling M0-macro-compact.hex2</span></div><div class="line" id="005102"><span class="nick" style="color:#389600"><a href="#005102" label="[00:51:02]">&lt;markjenkinsznc&gt;</a></span><span class="message">which should make for an easy hex2 audit as you'll see the instruction comments from the hex2 side by side with the dissasemblers opinion</span></div><div class="line" id="005430"><span class="nick" style="color:#2e2a4a"><a href="#005430" label="[00:54:30]">&lt;OriansJ`&gt;</a></span><span class="message">very nicely done markjenkinsznc</span></div><div class="line" id="005509"><span class="nick" style="color:#2e2a4a"><a href="#005509" label="[00:55:09]">&lt;OriansJ`&gt;</a></span><span class="message">although I will be making a small tweak with the make test target and breaking it into test and test-all</span></div><div class="line" id="005528"><span class="nick" style="color:#389600"><a href="#005528" label="[00:55:28]">&lt;markjenkinsznc&gt;</a></span><span class="message">good idea</span></div><div class="line" id="005548"><span class="nick" style="color:#2e2a4a"><a href="#005548" label="[00:55:48]">&lt;OriansJ`&gt;</a></span><span class="message">To preserve the previous behavior of only needing to run make clean test to validate all of the core binaries are built identically</span></div><div class="line" id="005745"><span class="nick" style="color:#2e2a4a"><a href="#005745" label="[00:57:45]">&lt;OriansJ`&gt;</a></span><span class="message">I've finally gotten around to fixxing the kaem 32bit regression I caused when I remerged kaem into mescc-tools. (I'm sorry fossy for breaking it on you and then disappearing for a bit)</span></div><div class="line" id="005952"><span class="nick" style="color:#389600"><a href="#005952" label="[00:59:52]">&lt;markjenkinsznc&gt;</a></span><span class="message">Kind of funny that I sat on my disassemble for months and the only thing I needed to do today to fix my show stopper bug was broaden an assert <a rel="nofollow" href="https://github.com/markjenkins/stage0/commit/a3324155d4dacaefa4b3d727eab14777f97a0b24">https://github.com/markjenkins/stage0/commit/a3324155d4dacaefa4b3d727eab14777f97a0b24</a> </span></div><div class="line" id="010336"><span class="nick" style="color:#2e2a4a"><a href="#010336" label="[01:03:36]">&lt;OriansJ`&gt;</a></span><span class="message">markjenkinsznc: well it isn't uncommon to get stuck on tiny assumptions. it is why when we work together we always succeed so much more</span></div><div class="line" id="010503"><span class="nick" style="color:#389600"><a href="#010503" label="[01:05:03]">&lt;markjenkinsznc&gt;</a></span><span class="message">the broader assumption I was carrying and procrastinating on was that my code had got too messy and had a complicated bug that was going to take awhile to fix, but the issue turned out to be strait forward to understand when I gave it a go</span></div><div class="line" id="011106"><span class="nick" style="color:#6b8072"><a href="#011106" label="[01:11:06]">&lt;xentrac&gt;</a></span><span class="message">OriansJ`: collaboration also helps with motivation</span></div><div class="line" id="011120"><span class="nick" style="color:#2e2a4a"><a href="#011120" label="[01:11:20]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: definitely true</span></div><div class="line" id="011159"><span class="nick" style="color:#2e2a4a"><a href="#011159" label="[01:11:59]">&lt;OriansJ`&gt;</a></span><span class="message">the last 4 months of dealing baby, really took me out of the zone of working on code in my free time and I have to get back into the habit of trying to code a little everyday</span></div><div class="line" id="011221"><span class="nick" style="color:#2e2a4a"><a href="#011221" label="[01:12:21]">&lt;OriansJ`&gt;</a></span><span class="message">^dealing baby^dealing with a baby^</span></div><div class="line" id="011659"><span class="nick" style="color:#2e2a4a"><a href="#011659" label="[01:16:59]">&lt;OriansJ`&gt;</a></span><span class="message">That way I can get the M3 and mes-m2/slow-utils work back on track</span></div><div class="line" id="011754"><span class="nick" style="color:#389600"><a href="#011754" label="[01:17:54]">&lt;markjenkinsznc&gt;</a></span><span class="message">Just don't try to combine the two one after the other as bootstrapping, first I'll teach my child to code and then I'll then I'll hand out chores, relevant xkcds <a rel="nofollow" href="https://xkcd.com/1205/">https://xkcd.com/1205/</a>  and <a rel="nofollow" href="https://xkcd.com/1319/">https://xkcd.com/1319/</a> </span></div><div class="line" id="012154"><span class="nick" style="color:#2e2a4a"><a href="#012154" label="[01:21:54]">&lt;OriansJ`&gt;</a></span><span class="message">nice</span></div><div class="line" id="014934"><span class="nick" style="color:#80b1d3"><a href="#014934" label="[01:49:34]">&lt;stikonas&gt;</a></span><span class="message">what is M3?</span></div><div class="line" id="015014"><span class="nick" style="color:#80b1d3"><a href="#015014" label="[01:50:14]">&lt;stikonas&gt;</a></span><span class="message">is it more advanced C compiler?</span></div><div class="line" id="015342"><span class="nick" style="color:#2e2a4a"><a href="#015342" label="[01:53:42]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: it is 3 things actually, a proper ELF linker, a Gnu Assembler compatible assembler (so that mescc can output binutils standard assembly and get even faster binaries and easier porting) and TCC converted into something M2-Planet can build</span></div><div class="line" id="015439"><span class="nick" style="color:#80b1d3"><a href="#015439" label="[01:54:39]">&lt;stikonas&gt;</a></span><span class="message">oh, that's what 3 stands for...</span></div><div class="line" id="015444"><span class="nick" style="color:#80b1d3"><a href="#015444" label="[01:54:44]">&lt;stikonas&gt;</a></span><span class="message">3 things</span></div><div class="line" id="015537"><span class="nick" style="color:#2e2a4a"><a href="#015537" label="[01:55:37]">&lt;OriansJ`&gt;</a></span><span class="message">also a play on being the stage after M2-Planet</span></div><div class="line" id="015915"><span class="nick" style="color:#2e2a4a"><a href="#015915" label="[01:59:15]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: Sorry if I am asking an insanely stupid question but assuming one git clones mes; cd mes and has guile installed and wished to compile hello_world.c into the standard M1 output with mescc. Would the command be: guile -e main -s modules/mescc.scm -c hello_world.c -o hello_world.S ?? because when I do that I get a hard failure.</span></div><div class="line" id="074441"><span class="nick" style="color:#6d2462"><a href="#074441" label="[07:44:41]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: not such a stupid question -- in fact i see that some ARM work has broken guile-compatibility</span></div><div class="line" id="074625"><span class="nick" style="color:#6d2462"><a href="#074625" label="[07:46:25]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: this seems to work: SCHEME=guile ./pre-inst-env mescc -c -o hello.S scaffold/hello.c</span></div><div class="line" id="113100"><span class="nick" style="color:#2e2a4a"><a href="#113100" label="[11:31:00]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: checking out origin/master (52fb6cdbfc7aed9ea07fa41a2c5d0a035778c016) or the tag v0.21 (fbe178810fbf3977ea331289d4aa0a4e5ebaf12e) I get the following error: <a rel="nofollow" href="https://paste.debian.net/1156002/">https://paste.debian.net/1156002/</a> </span></div><div class="line" id="113147"><span class="nick" style="color:#6d2462"><a href="#113147" label="[11:31:47]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: did you run ./configure?</span></div><div class="line" id="113311"><span class="nick" style="color:#2e2a4a"><a href="#113311" label="[11:33:11]">&lt;OriansJ`&gt;</a></span><span class="message">nope</span></div><div class="line" id="113445"><span class="nick" style="color:#2e2a4a"><a href="#113445" label="[11:34:45]">&lt;OriansJ`&gt;</a></span><span class="message">but when I do and then run the command, I get: <a rel="nofollow" href="https://paste.debian.net/1156004/">https://paste.debian.net/1156004/</a> </span></div><div class="line" id="113518"><span class="nick" style="color:#2e2a4a"><a href="#113518" label="[11:35:18]">&lt;OriansJ`&gt;</a></span><span class="message">here is the system configureation being used to test: <a rel="nofollow" href="https://paste.debian.net/1156003">https://paste.debian.net/1156003</a> </span></div><div class="line" id="113616"><span class="nick" style="color:#2e2a4a"><a href="#113616" label="[11:36:16]">&lt;OriansJ`&gt;</a></span><span class="message">also why would a configure script need to be run to enable a scheme interpreter to run a program written in scheme?</span></div><div class="line" id="113617"><span class="nick" style="color:#6d2462"><a href="#113617" label="[11:36:17]">&lt;janneke&gt;</a></span><span class="message">so...guile can't find nyacc</span></div><div class="line" id="113824"><span class="nick" style="color:#2e2a4a"><a href="#113824" label="[11:38:24]">&lt;OriansJ`&gt;</a></span><span class="message">if it makes it easier, we can bash on mes-m2 together to make this workflow easier to implement</span></div><div class="line" id="113855"><span class="nick" style="color:#6d2462"><a href="#113855" label="[11:38:55]">&lt;janneke&gt;</a></span><span class="message">the configure script could tell you that guile can't find nyacc (that check was disabled, though)</span></div><div class="line" id="113918"><span class="nick" style="color:#2e2a4a"><a href="#113918" label="[11:39:18]">&lt;OriansJ`&gt;</a></span><span class="message">aka git clone mes-m2; cd mes-m2; guile -e main -s scripts/mescc.scm -c hello.c -o hello.S</span></div><div class="line" id="113957"><span class="nick" style="color:#2e2a4a"><a href="#113957" label="[11:39:57]">&lt;OriansJ`&gt;</a></span><span class="message">as I can just put a pinned version of nyacc in mes-m2 to remove these sorts of complexities</span></div><div class="line" id="114226"><span class="nick" style="color:#2e2a4a"><a href="#114226" label="[11:42:26]">&lt;OriansJ`&gt;</a></span><span class="message">possibly guile -L module/ -e main -s scripts/mescc.scm -c ../mes/scaffold/hello.c -o hello.S</span></div><div class="line" id="114357"><span class="nick" style="color:#6d2462"><a href="#114357" label="[11:43:57]">&lt;janneke&gt;</a></span><span class="message">the idea is that `pre-inst-env', created by configure, sets up these directories and paths when running from the working tree</span></div><div class="line" id="114523"><span class="nick" style="color:#6d2462"><a href="#114523" label="[11:45:23]">&lt;janneke&gt;</a></span><span class="message">ah, we used to have ./configure --with-cheating to set-up for guile, but that's bitrotted apparently</span></div><div class="line" id="114951"><span class="nick" style="color:#2e2a4a"><a href="#114951" label="[11:49:51]">&lt;OriansJ`&gt;</a></span><span class="message">ok, mes-m2</span></div><div class="line" id="115019"><span class="nick" style="color:#2e2a4a"><a href="#115019" label="[11:50:19]">&lt;OriansJ`&gt;</a></span><span class="message">we need a core of mescc that works out of the box</span></div><div class="line" id="115106"><span class="nick" style="color:#2e2a4a"><a href="#115106" label="[11:51:06]">&lt;OriansJ`&gt;</a></span><span class="message">we can cheat with guile to ensure it works while I make mes-m2 compatible</span></div><div class="line" id="115212"><span class="nick" style="color:#2e2a4a"><a href="#115212" label="[11:52:12]">&lt;OriansJ`&gt;</a></span><span class="message">but using just git clone and a single guile command to get it to simply build a single C file to M1 output is all I need right now</span></div><div class="line" id="115402"><span class="nick" style="color:#2e2a4a"><a href="#115402" label="[11:54:02]">&lt;OriansJ`&gt;</a></span><span class="message">that way when mes-m2 is done; we simply swap the guile command with a mes-m2 compatible.</span></div><div class="line" id="115735"><span class="nick" style="color:#2e2a4a"><a href="#115735" label="[11:57:35]">&lt;OriansJ`&gt;</a></span><span class="message">I know being out of it for 4 months might mean I am missing obvious stuff but honestly people who show up are going to know even less.</span></div><div class="line" id="115849"><span class="nick" style="color:#2e2a4a"><a href="#115849" label="[11:58:49]">&lt;OriansJ`&gt;</a></span><span class="message">so let us get mescc in  mes-m2 into a state where git clone and having fuile is the only thing they need to know to bootstrap some C with MesCC</span></div><div class="line" id="121753"><span class="nick">***</span><span class="message notice">xwvvvvwx- is now known as xwvvvvwx</span></div><div class="line" id="125810"><span class="nick" style="color:#2e2a4a"><a href="#125810" label="[12:58:10]">&lt;OriansJ`&gt;</a></span><span class="message">janneke? yes/no/working on it/nope bad idea/$INPUT</span></div><div class="line" id="130054"><span class="nick" style="color:#6d2462"><a href="#130054" label="[13:00:54]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: sorry bad timing ;-)</span></div><div class="line" id="130111"><span class="nick" style="color:#6d2462"><a href="#130111" label="[13:01:11]">&lt;janneke&gt;</a></span><span class="message">i'm pretty stressed-out atm; need to get some real work (tm) done</span></div><div class="line" id="130154"><span class="nick" style="color:#6d2462"><a href="#130154" label="[13:01:54]">&lt;janneke&gt;</a></span><span class="message">sure, having it &quot;just work&quot; will save a lot of time and frustration</span></div><div class="line" id="130225"><span class="nick" style="color:#6d2462"><a href="#130225" label="[13:02:25]">&lt;janneke&gt;</a></span><span class="message">i do not like bundling, that's what all the evil guys do, right ;)</span></div><div class="line" id="130313"><span class="nick" style="color:#2e2a4a"><a href="#130313" label="[13:03:13]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: bundling is sometimes what is required when you can't depend upon anything else.</span></div><div class="line" id="130315"><span class="nick" style="color:#6d2462"><a href="#130315" label="[13:03:15]">&lt;janneke&gt;</a></span><span class="message">i won't have time to work on mes the coming weeks</span></div><div class="line" id="130334"><span class="nick" style="color:#2e2a4a"><a href="#130334" label="[13:03:34]">&lt;OriansJ`&gt;</a></span><span class="message">and I am sorry if I cause(d) any additional stress</span></div><div class="line" id="130416"><span class="nick" style="color:#6d2462"><a href="#130416" label="[13:04:16]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: np, i feel bad for mostly ignoring the question :-)</span></div><div class="line" id="130450"><span class="nick" style="color:#6d2462"><a href="#130450" label="[13:04:50]">&lt;janneke&gt;</a></span><span class="message">i've been anticipating to return to mes development for about 2months now,</span></div><div class="line" id="130504"><span class="nick" style="color:#6d2462"><a href="#130504" label="[13:05:04]">&lt;janneke&gt;</a></span><span class="message">but i guess that will have to wait a bit</span></div><div class="line" id="130510"><span class="nick" style="color:#2e2a4a"><a href="#130510" label="[13:05:10]">&lt;OriansJ`&gt;</a></span><span class="message">but life just keeps getting in the way</span></div><div class="line" id="130522"><span class="nick" style="color:#2e2a4a"><a href="#130522" label="[13:05:22]">&lt;OriansJ`&gt;</a></span><span class="message">it happens</span></div><div class="line" id="130537"><span class="nick" style="color:#2e2a4a"><a href="#130537" label="[13:05:37]">&lt;OriansJ`&gt;</a></span><span class="message">heck I am just comming back after nothing for 4 months</span></div><div class="line" id="130600"><span class="nick" style="color:#2e2a4a"><a href="#130600" label="[13:06:00]">&lt;OriansJ`&gt;</a></span><span class="message">always take time for yourself and your life first</span></div><div class="line" id="130727"><span class="nick" style="color:#6d2462"><a href="#130727" label="[13:07:27]">&lt;janneke&gt;</a></span><span class="message">i think using guile for debugging/development, like you suggest, is a great idea</span></div><div class="line" id="130738"><span class="nick" style="color:#6d2462"><a href="#130738" label="[13:07:38]">&lt;janneke&gt;</a></span><span class="message">i've done that a lot</span></div><div class="line" id="130741"><span class="nick" style="color:#2e2a4a"><a href="#130741" label="[13:07:41]">&lt;OriansJ`&gt;</a></span><span class="message">remember it is an 80 year old problem and we are miles ahead of everyone else. No need to rush</span></div><div class="line" id="130753"><span class="nick" style="color:#6d2462"><a href="#130753" label="[13:07:53]">&lt;janneke&gt;</a></span><span class="message">you'll want to use 'make' to compile .go files and catch errors early</span></div><div class="line" id="132339"><span class="nick" style="color:#6d2462"><a href="#132339" label="[13:23:39]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: a pitfall of course, is that the mes+mescc build may bitrot once in a while</span></div><div class="line" id="132349"><span class="nick" style="color:#6d2462"><a href="#132349" label="[13:23:49]">&lt;janneke&gt;</a></span><span class="message">at least, that happened to me a few times</span></div><div class="line" id="132433"><span class="nick" style="color:#6d2462"><a href="#132433" label="[13:24:33]">&lt;janneke&gt;</a></span><span class="message">that's mostly why i moved back to using mes for development (and the guile option bitrotted)</span></div><div class="line" id="145925"><span class="nick" style="color:#2e2a4a"><a href="#145925" label="[14:59:25]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: well that is the nice thing about mes-m2; I am not advancing the state of MesCC but rather building a foundation under a stable and stale scheme program that &quot;works&quot;</span></div><div class="line" id="150016"><span class="nick" style="color:#2e2a4a"><a href="#150016" label="[15:00:16]">&lt;OriansJ`&gt;</a></span><span class="message">a yearly update schedule is fine in that paradigm.</span></div><div class="line" id="150612"><span class="nick" style="color:#6d2462"><a href="#150612" label="[15:06:12]">&lt;janneke&gt;</a></span><span class="message">ah, true!</span></div><div class="line" id="150617"><span class="nick" style="color:#6d2462"><a href="#150617" label="[15:06:17]">&lt;janneke&gt;</a></span><span class="message">that's nice</span></div><div class="line" id="150639"><span class="nick" style="color:#2e2a4a"><a href="#150639" label="[15:06:39]">&lt;OriansJ`&gt;</a></span><span class="message">heck getting MesCC v0.1 or v0.20 working raw in mes-m2 is lightyears ahead of &quot;here is a bag of scheme and it needs other things to work, good luck&quot;</span></div><div class="line" id="150823"><span class="nick" style="color:#2e2a4a"><a href="#150823" label="[15:08:23]">&lt;OriansJ`&gt;</a></span><span class="message">that is why I switched to the submodules method, it makes it easier for new users to get started using it immediately.</span></div><div class="line" id="151912"><span class="nick" style="color:#2e2a4a"><a href="#151912" label="[15:19:12]">&lt;OriansJ`&gt;</a></span><span class="message">So deal with your current problems and when you get back we can collaborate on getting Mescc, gash and slow-utils working together in mes-m2; thus providing a single package of scheme which will in the short term need guile but after will be everything needed to bootstrap guix in a single tar</span></div><div class="line" id="152220"><span class="nick" style="color:#80b1d3"><a href="#152220" label="[15:22:20]">&lt;stikonas&gt;</a></span><span class="message">that's nice. At the moment guile-bootstrap is the biggest remaining binary in bootstrap tarballs</span></div><div class="line" id="152304"><span class="nick" style="color:#2e2a4a"><a href="#152304" label="[15:23:04]">&lt;OriansJ`&gt;</a></span><span class="message">and while you are away, I'll hammer on the M3 pieces (linker, assembler and then compiler) so that you'll have more fun with MesCC porting in the future as you'll be able to be leverage binutils as compatibles</span></div><div class="line" id="152501"><span class="nick" style="color:#2e2a4a"><a href="#152501" label="[15:25:01]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: well getting guix to run on anything other than guile is going to require alot of work in mes-m2</span></div><div class="line" id="152509"><span class="nick" style="color:#6d2462"><a href="#152509" label="[15:25:09]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: sounds great...phew, build problem bisected, stress is gone</span></div><div class="line" id="152520"><span class="nick" style="color:#6d2462"><a href="#152520" label="[15:25:20]">&lt;janneke&gt;</a></span><span class="message">now just &quot;more work&quot;</span></div><div class="line" id="152541"><span class="nick" style="color:#6d2462"><a href="#152541" label="[15:25:41]">&lt;janneke&gt;</a></span><span class="message">not knowing what and where and how long to bisect against a deadline is no fun</span></div><div class="line" id="152600"><span class="nick" style="color:#6d2462"><a href="#152600" label="[15:26:00]">&lt;janneke&gt;</a></span><span class="message">oh well...</span></div><div class="line" id="152622"><span class="nick" style="color:#2e2a4a"><a href="#152622" label="[15:26:22]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: well that is a risk that comes with your aggressive code style janneke</span></div><div class="line" id="152706"><span class="nick" style="color:#2e2a4a"><a href="#152706" label="[15:27:06]">&lt;OriansJ`&gt;</a></span><span class="message">which has many other benefits to productivity</span></div><div class="line" id="152837"><span class="nick" style="color:#6d2462"><a href="#152837" label="[15:28:37]">&lt;janneke&gt;</a></span><span class="message">hehe, yes i guess you're right</span></div><div class="line" id="152935"><span class="nick" style="color:#2e2a4a"><a href="#152935" label="[15:29:35]">&lt;OriansJ`&gt;</a></span><span class="message">me, I just am not smart enough to work that way. So I tend to be stopped on the sorts of things you just seem to blow through janneke</span></div><div class="line" id="153717"><span class="nick" style="color:#2e2a4a"><a href="#153717" label="[15:37:17]">&lt;OriansJ`&gt;</a></span><span class="message">but I guess my style is better if you need to write a C compiler in Assembly and yours is if you wish to bootstrap GCC with scheme</span></div><div class="line" id="162036"><span class="nick">***</span><span class="message notice">xwvvvvwx- is now known as xwvvvvwx</span></div><div class="line" id="233936"><span class="nick" style="color:#234e69"><a href="#233936" label="[23:39:36]">&lt;fossy&gt;</a></span><span class="message">OriansJ`: the minimum version required for mes-m2 to run mescc which can compile tinycc iirc is v0.11</span></div><br /></div></body></html>