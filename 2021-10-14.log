<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-10-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="014045"><span class="nick" style="color:#8dd3c7"><a href="#014045" label="[01:40:45]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged</span></div><div class="line" id="022504"><span class="nick" style="color:#2e2a4a"><a href="#022504" label="[02:25:04]">&lt;stikonas&gt;</a></span><span class="message">fossy: shall I just push stage0-posix update in live-bootstrap?</span></div><div class="line" id="022516"><span class="nick" style="color:#2e2a4a"><a href="#022516" label="[02:25:16]">&lt;stikonas&gt;</a></span><span class="message">nothing else changes, no checksum chage, etc...</span></div><div class="line" id="022539"><span class="nick" style="color:#6b8072"><a href="#022539" label="[02:25:39]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="022545"><span class="nick" style="color:#2e2a4a"><a href="#022545" label="[02:25:45]">&lt;stikonas&gt;</a></span><span class="message">(since those early checksums are done as part of stage0-posix)</span></div><div class="line" id="022555"><span class="nick" style="color:#6b8072"><a href="#022555" label="[02:25:55]">&lt;fossy&gt;</a></span><span class="message">go ahead</span></div><div class="line" id="022638"><span class="nick" style="color:#2e2a4a"><a href="#022638" label="[02:26:38]">&lt;stikonas&gt;</a></span><span class="message">that should bring kaem conditionals and match in</span></div><div class="line" id="131826"><span class="nick" style="color:#80b1d3"><a href="#131826" label="[13:18:26]">&lt;civodul&gt;</a></span><span class="message">hello!</span></div><div class="line" id="131831"><span class="nick" style="color:#80b1d3"><a href="#131831" label="[13:18:31]">&lt;civodul&gt;</a></span><span class="message">i've automated rebuilds of <a rel="nofollow" href="https://bootstrappable.org/">https://bootstrappable.org/</a> </span></div><div class="line" id="131852"><span class="nick" style="color:#80b1d3"><a href="#131852" label="[13:18:52]">&lt;civodul&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix/maintenance.git/commit/?id=b8d25fc43a51e0d8259e88c808ebd68c729fffa8">https://git.savannah.gnu.org/cgit/guix/maintenance.git/commit/?id=b8d25fc43a51e0d8259e88c808ebd68c729fffa8</a> </span></div><div class="line" id="131904"><span class="nick" style="color:#80b1d3"><a href="#131904" label="[13:19:04]">&lt;civodul&gt;</a></span><span class="message">so if you push smoething to the repo, it should show up on-line within an hour</span></div><div class="line" id="134308"><span class="nick" style="color:#8dd3c7"><a href="#134308" label="[13:43:08]">&lt;oriansj&gt;</a></span><span class="message">nice</span></div><div class="line" id="134926"><span class="nick" style="color:#6d2462"><a href="#134926" label="[13:49:26]">&lt;Hagfish&gt;</a></span><span class="message">yeah, that's smart</span></div><div class="line" id="171326"><span class="nick" style="color:#234e69"><a href="#171326" label="[17:13:26]">&lt;gbrlwck&gt;</a></span><span class="message">i just tried to bootstrap stage0-posix on my HiFive Unmatched (riscv64) and failed executing kaem.riscv64 (Subprocess error; ABORTING HARD).  compiled hex0 manually, but the binaries differ (except in length)</span></div><div class="line" id="171407"><span class="nick" style="color:#2e2a4a"><a href="#171407" label="[17:14:07]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: and you pulled in all submodules?</span></div><div class="line" id="171425"><span class="nick" style="color:#2e2a4a"><a href="#171425" label="[17:14:25]">&lt;stikonas&gt;</a></span><span class="message">well, riscv64 was only tested on qemu, so if something is wrong we'll have to rely on your help</span></div><div class="line" id="171430"><span class="nick" style="color:#234e69"><a href="#171430" label="[17:14:30]">&lt;gbrlwck&gt;</a></span><span class="message">yes (git clone ... --recurse-submodules)</span></div><div class="line" id="171454"><span class="nick" style="color:#2e2a4a"><a href="#171454" label="[17:14:54]">&lt;stikonas&gt;</a></span><span class="message">can you paste the whole log?</span></div><div class="line" id="171454"><span class="nick" style="color:#234e69"><a href="#171454" label="[17:14:54]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: that's exactly why i'm here! so it all works fine on qemu?</span></div><div class="line" id="171502"><span class="nick" style="color:#2e2a4a"><a href="#171502" label="[17:15:02]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: yes</span></div><div class="line" id="171505"><span class="nick" style="color:#234e69"><a href="#171505" label="[17:15:05]">&lt;gbrlwck&gt;</a></span><span class="message">i can also paste you the hexdumps ;)</span></div><div class="line" id="171514"><span class="nick" style="color:#2e2a4a"><a href="#171514" label="[17:15:14]">&lt;stikonas&gt;</a></span><span class="message">Subprocess error just means that child process failed</span></div><div class="line" id="171521"><span class="nick" style="color:#234e69"><a href="#171521" label="[17:15:21]">&lt;gbrlwck&gt;</a></span><span class="message">yeah, i figured</span></div><div class="line" id="171524"><span class="nick" style="color:#2e2a4a"><a href="#171524" label="[17:15:24]">&lt;stikonas&gt;</a></span><span class="message">either hexdumps or i fyou have diffoscope</span></div><div class="line" id="171529"><span class="nick" style="color:#2e2a4a"><a href="#171529" label="[17:15:29]">&lt;stikonas&gt;</a></span><span class="message">between two binaries</span></div><div class="line" id="171830"><span class="nick" style="color:#234e69"><a href="#171830" label="[17:18:30]">&lt;gbrlwck&gt;</a></span><span class="message">oh wow, diffoscope is a *huge* package? let's see how long that takes</span></div><div class="line" id="171840"><span class="nick" style="color:#2e2a4a"><a href="#171840" label="[17:18:40]">&lt;stikonas&gt;</a></span><span class="message">oh, is it huge?</span></div><div class="line" id="171846"><span class="nick" style="color:#2e2a4a"><a href="#171846" label="[17:18:46]">&lt;stikonas&gt;</a></span><span class="message">I thought it's some python script</span></div><div class="line" id="171848"><span class="nick" style="color:#234e69"><a href="#171848" label="[17:18:48]">&lt;gbrlwck&gt;</a></span><span class="message">it has *lots* of inputs</span></div><div class="line" id="171854"><span class="nick" style="color:#2e2a4a"><a href="#171854" label="[17:18:54]">&lt;stikonas&gt;</a></span><span class="message">anyway, maybe paste run log first</span></div><div class="line" id="171937"><span class="nick" style="color:#234e69"><a href="#171937" label="[17:19:37]">&lt;gbrlwck&gt;</a></span><span class="message">on my HiFive-ready ubunut it asks to install 931 pacakges and up to 5GiB space ;)</span></div><div class="line" id="171947"><span class="nick" style="color:#2e2a4a"><a href="#171947" label="[17:19:47]">&lt;stikonas&gt;</a></span><span class="message">I guess it's the command after hex0 that fails (if hex0 differs from seed)</span></div><div class="line" id="171958"><span class="nick" style="color:#2e2a4a"><a href="#171958" label="[17:19:58]">&lt;stikonas&gt;</a></span><span class="message">doesn't matter, I can run diffoscope locally</span></div><div class="line" id="172139"><span class="nick" style="color:#2e2a4a"><a href="#172139" label="[17:21:39]">&lt;stikonas&gt;</a></span><span class="message">I see this in my qemu run: <a rel="nofollow" href="https://paste.debian.net/1215410/">https://paste.debian.net/1215410/</a> </span></div><div class="line" id="172530"><span class="nick" style="color:#234e69"><a href="#172530" label="[17:25:30]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://termbin.com/jagv">https://termbin.com/jagv</a> </span></div><div class="line" id="172711"><span class="nick" style="color:#234e69"><a href="#172711" label="[17:27:11]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://termbin.com/wv97">https://termbin.com/wv97</a> </span></div><div class="line" id="172832"><span class="nick" style="color:#234e69"><a href="#172832" label="[17:28:32]">&lt;gbrlwck&gt;</a></span><span class="message">the error makes sense: output of the very first hex0 artifact has no valid header so it doesn't execute</span></div><div class="line" id="172852"><span class="nick" style="color:#2e2a4a"><a href="#172852" label="[17:28:52]">&lt;stikonas&gt;</a></span><span class="message">hmm, hex0 is completely different...</span></div><div class="line" id="172855"><span class="nick" style="color:#234e69"><a href="#172855" label="[17:28:55]">&lt;gbrlwck&gt;</a></span><span class="message">yes</span></div><div class="line" id="172911"><span class="nick" style="color:#234e69"><a href="#172911" label="[17:29:11]">&lt;gbrlwck&gt;</a></span><span class="message">at first i thought it was a big-/litte-endian issue, but it is not</span></div><div class="line" id="173002"><span class="nick" style="color:#2e2a4a"><a href="#173002" label="[17:30:02]">&lt;stikonas&gt;</a></span><span class="message">it's slightly reminds it</span></div><div class="line" id="173006"><span class="nick" style="color:#2e2a4a"><a href="#173006" label="[17:30:06]">&lt;stikonas&gt;</a></span><span class="message">but in a bit more complicated way</span></div><div class="line" id="173015"><span class="nick" style="color:#2e2a4a"><a href="#173015" label="[17:30:15]">&lt;stikonas&gt;</a></span><span class="message">somehow some bits are swapped</span></div><div class="line" id="173021"><span class="nick" style="color:#2e2a4a"><a href="#173021" label="[17:30:21]">&lt;stikonas&gt;</a></span><span class="message">but not in big/little endian wy</span></div><div class="line" id="173023"><span class="nick" style="color:#2e2a4a"><a href="#173023" label="[17:30:23]">&lt;stikonas&gt;</a></span><span class="message">way</span></div><div class="line" id="173028"><span class="nick" style="color:#234e69"><a href="#173028" label="[17:30:28]">&lt;gbrlwck&gt;</a></span><span class="message">though the second row: the quartets seem the same (it's the same hex characters) but in a scrambled order</span></div><div class="line" id="173110"><span class="nick" style="color:#2e2a4a"><a href="#173110" label="[17:31:10]">&lt;stikonas&gt;</a></span><span class="message">I think yes, the bits are the same but somehow scrambled</span></div><div class="line" id="173116"><span class="nick" style="color:#2e2a4a"><a href="#173116" label="[17:31:16]">&lt;stikonas&gt;</a></span><span class="message">which is very strange...</span></div><div class="line" id="173224"><span class="nick" style="color:#2e2a4a"><a href="#173224" label="[17:32:24]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: and they are always scrambled in the same way</span></div><div class="line" id="173235"><span class="nick" style="color:#2e2a4a"><a href="#173235" label="[17:32:35]">&lt;stikonas&gt;</a></span><span class="message">can you run hex0 on 12345678 ?</span></div><div class="line" id="173240"><span class="nick" style="color:#2e2a4a"><a href="#173240" label="[17:32:40]">&lt;stikonas&gt;</a></span><span class="message">just so that we see order</span></div><div class="line" id="173240"><span class="nick" style="color:#234e69"><a href="#173240" label="[17:32:40]">&lt;gbrlwck&gt;</a></span><span class="message">sure</span></div><div class="line" id="173249"><span class="nick" style="color:#2e2a4a"><a href="#173249" label="[17:32:49]">&lt;stikonas&gt;</a></span><span class="message">too lazy to manually work it out...</span></div><div class="line" id="173919"><span class="nick" style="color:#234e69"><a href="#173919" label="[17:39:19]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://termbin.com/hh69t">https://termbin.com/hh69t</a> </span></div><div class="line" id="174055"><span class="nick" style="color:#2e2a4a"><a href="#174055" label="[17:40:55]">&lt;stikonas&gt;</a></span><span class="message">hmm, this one is not evne the same length...</span></div><div class="line" id="174208"><span class="nick" style="color:#234e69"><a href="#174208" label="[17:42:08]">&lt;gbrlwck&gt;</a></span><span class="message">yeah, i need some coding tasks anyhow, so this might be the adequate point to dive in :)</span></div><div class="line" id="174210"><span class="nick" style="color:#2e2a4a"><a href="#174210" label="[17:42:10]">&lt;stikonas&gt;</a></span><span class="message">somehow numbers go asscci encoding</span></div><div class="line" id="174220"><span class="nick" style="color:#2e2a4a"><a href="#174220" label="[17:42:20]">&lt;stikonas&gt;</a></span><span class="message">ascii encoded...</span></div><div class="line" id="174314"><span class="nick" style="color:#234e69"><a href="#174314" label="[17:43:14]">&lt;gbrlwck&gt;</a></span><span class="message">not sure if i understand</span></div><div class="line" id="174347"><span class="nick" style="color:#2e2a4a"><a href="#174347" label="[17:43:47]">&lt;stikonas&gt;</a></span><span class="message">I mean I get just this from my run on teststring: &quot;0000000 2301 6745 ab89 efcd&quot; (this is hexdump)</span></div><div class="line" id="174355"><span class="nick" style="color:#2e2a4a"><a href="#174355" label="[17:43:55]">&lt;stikonas&gt;</a></span><span class="message">your paste is somehow much longer</span></div><div class="line" id="174410"><span class="nick" style="color:#2e2a4a"><a href="#174410" label="[17:44:10]">&lt;stikonas&gt;</a></span><span class="message">which seemed to me strange given that your miscompiled hex0 had the same length</span></div><div class="line" id="174414"><span class="nick" style="color:#2e2a4a"><a href="#174414" label="[17:44:14]">&lt;stikonas&gt;</a></span><span class="message">and just scrambled characters</span></div><div class="line" id="174525"><span class="nick" style="color:#234e69"><a href="#174525" label="[17:45:25]">&lt;gbrlwck&gt;</a></span><span class="message">well, it was not &quot;just&quot; scrambled characters. the first line of both are really different</span></div><div class="line" id="174531"><span class="nick" style="color:#234e69"><a href="#174531" label="[17:45:31]">&lt;gbrlwck&gt;</a></span><span class="message">but yeah, i know what you mean</span></div><div class="line" id="174548"><span class="nick" style="color:#234e69"><a href="#174548" label="[17:45:48]">&lt;gbrlwck&gt;</a></span><span class="message">what image are you running in qemu?</span></div><div class="line" id="174705"><span class="nick" style="color:#2e2a4a"><a href="#174705" label="[17:47:05]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: it's qemu-user</span></div><div class="line" id="174715"><span class="nick" style="color:#2e2a4a"><a href="#174715" label="[17:47:15]">&lt;stikonas&gt;</a></span><span class="message">so I'm running it directly on amd64 machine</span></div><div class="line" id="174739"><span class="nick" style="color:#2e2a4a"><a href="#174739" label="[17:47:39]">&lt;stikonas&gt;</a></span><span class="message">hmm, yeah, I think some later lines are also not simply scambled in oktets...</span></div><div class="line" id="174754"><span class="nick" style="color:#2e2a4a"><a href="#174754" label="[17:47:54]">&lt;stikonas&gt;</a></span><span class="message">and oriansj was getting the same hashes on his qemu-user instance</span></div><div class="line" id="174823"><span class="nick" style="color:#2e2a4a"><a href="#174823" label="[17:48:23]">&lt;stikonas&gt;</a></span><span class="message">well, in the worst case, we'll have to fire up gdb and see what happens</span></div><div class="line" id="174847"><span class="nick" style="color:#2e2a4a"><a href="#174847" label="[17:48:47]">&lt;stikonas&gt;</a></span><span class="message">although, debugging this early code in gdb is not super easy...</span></div><div class="line" id="175101"><span class="nick" style="color:#2e2a4a"><a href="#175101" label="[17:51:01]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: one test you can try, is to try compiling GAS prototype in GAS/hex0_riscv64.S and see if you get the same issue</span></div><div class="line" id="175232"><span class="nick" style="color:#2e2a4a"><a href="#175232" label="[17:52:32]">&lt;stikonas&gt;</a></span><span class="message">riscv64-unknown-linux-gnu-as hex0_riscv64.S -o hex0.o; riscv64-unknown-linux-gnu-ld hex0.o -o hex0</span></div><div class="line" id="175704"><span class="nick" style="color:#234e69"><a href="#175704" label="[17:57:04]">&lt;gbrlwck&gt;</a></span><span class="message">now we get a 1.3K binary file with really similar first bytes! it starts to differ at e_ident[EI_OSABI]</span></div><div class="line" id="175718"><span class="nick" style="color:#2e2a4a"><a href="#175718" label="[17:57:18]">&lt;stikonas&gt;</a></span><span class="message">when you use GAS version of hex0?</span></div><div class="line" id="175727"><span class="nick" style="color:#234e69"><a href="#175727" label="[17:57:27]">&lt;gbrlwck&gt;</a></span><span class="message">yes</span></div><div class="line" id="175733"><span class="nick" style="color:#234e69"><a href="#175733" label="[17:57:33]">&lt;gbrlwck&gt;</a></span><span class="message">no</span></div><div class="line" id="175734"><span class="nick" style="color:#234e69"><a href="#175734" label="[17:57:34]">&lt;gbrlwck&gt;</a></span><span class="message">wait</span></div><div class="line" id="175753"><span class="nick" style="color:#234e69"><a href="#175753" label="[17:57:53]">&lt;gbrlwck&gt;</a></span><span class="message">i compiled the GAS version, this results in a 1.3K binary</span></div><div class="line" id="175755"><span class="nick" style="color:#2e2a4a"><a href="#175755" label="[17:57:55]">&lt;stikonas&gt;</a></span><span class="message">well, the built binary is different (GAS compiled version will be bigger)</span></div><div class="line" id="175757"><span class="nick" style="color:#2e2a4a"><a href="#175757" label="[17:57:57]">&lt;stikonas&gt;</a></span><span class="message">that's expected</span></div><div class="line" id="175807"><span class="nick" style="color:#2e2a4a"><a href="#175807" label="[17:58:07]">&lt;stikonas&gt;</a></span><span class="message">it has larger header with section tables</span></div><div class="line" id="175813"><span class="nick" style="color:#2e2a4a"><a href="#175813" label="[17:58:13]">&lt;stikonas&gt;</a></span><span class="message">but I mean use this binary on</span></div><div class="line" id="175818"><span class="nick" style="color:#2e2a4a"><a href="#175818" label="[17:58:18]">&lt;stikonas&gt;</a></span><span class="message">hex0_riscv64.hex0</span></div><div class="line" id="175824"><span class="nick" style="color:#234e69"><a href="#175824" label="[17:58:24]">&lt;gbrlwck&gt;</a></span><span class="message">i did</span></div><div class="line" id="175827"><span class="nick" style="color:#2e2a4a"><a href="#175827" label="[17:58:27]">&lt;stikonas&gt;</a></span><span class="message">and see if output is still garbled</span></div><div class="line" id="175838"><span class="nick" style="color:#2e2a4a"><a href="#175838" label="[17:58:38]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="175839"><span class="nick" style="color:#2e2a4a"><a href="#175839" label="[17:58:39]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="175949"><span class="nick" style="color:#234e69"><a href="#175949" label="[17:59:49]">&lt;gbrlwck&gt;</a></span><span class="message">it is still scrambled and identical to the first bootstrapped version (riscv64/artifact/hex0)</span></div><div class="line" id="180012"><span class="nick" style="color:#2e2a4a"><a href="#180012" label="[18:00:12]">&lt;stikonas&gt;</a></span><span class="message">ok, so if we need to debug it it will be easier than debugging that smaller hex0</span></div><div class="line" id="180032"><span class="nick" style="color:#2e2a4a"><a href="#180032" label="[18:00:32]">&lt;stikonas&gt;</a></span><span class="message">althoguh for debug info you need to build it with riscv64-unknown-linux-gnu-as -g hex0_riscv64.S  -o hex0.o; riscv64-unknown-linux-gnu-ld hex0.o -o hex0</span></div><div class="line" id="180055"><span class="nick" style="color:#234e69"><a href="#180055" label="[18:00:55]">&lt;gbrlwck&gt;</a></span><span class="message">i did just `as` and `ld` (because i wasn't cross compiling)</span></div><div class="line" id="180105"><span class="nick" style="color:#2e2a4a"><a href="#180105" label="[18:01:05]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's fine</span></div><div class="line" id="180119"><span class="nick" style="color:#2e2a4a"><a href="#180119" label="[18:01:19]">&lt;stikonas&gt;</a></span><span class="message">I just copy/pasted what I had</span></div><div class="line" id="180133"><span class="nick" style="color:#2e2a4a"><a href="#180133" label="[18:01:33]">&lt;stikonas&gt;</a></span><span class="message">well, full trippled would work for you too, but short version is fine</span></div><div class="line" id="180157"><span class="nick" style="color:#2e2a4a"><a href="#180157" label="[18:01:57]">&lt;stikonas&gt;</a></span><span class="message">anyway as -g can produce bigger file with some debug info</span></div><div class="line" id="180243"><span class="nick" style="color:#2e2a4a"><a href="#180243" label="[18:02:43]">&lt;stikonas&gt;</a></span><span class="message">so far I have no other ideas besides looking what happens in gdb</span></div><div class="line" id="180246"><span class="nick" style="color:#2e2a4a"><a href="#180246" label="[18:02:46]">&lt;stikonas&gt;</a></span><span class="message">oriansj: any thoughts?</span></div><div class="line" id="180452"><span class="nick" style="color:#2e2a4a"><a href="#180452" label="[18:04:52]">&lt;stikonas&gt;</a></span><span class="message">for gdb I guess one can start looking at what happens on this line: <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/riscv64/GAS/hex0_riscv64.S#L130">https://github.com/oriansj/stage0-posix/blob/master/riscv64/GAS/hex0_riscv64.S#L130</a> </span></div><div class="line" id="180510"><span class="nick" style="color:#2e2a4a"><a href="#180510" label="[18:05:10]">&lt;stikonas&gt;</a></span><span class="message">what is the value $a0 for each write</span></div><div class="line" id="180805"><span class="nick" style="color:#234e69"><a href="#180805" label="[18:08:05]">&lt;gbrlwck&gt;</a></span><span class="message">installing gdb will take a while. i'll be back :)</span></div><div class="line" id="180918"><span class="nick" style="color:#2e2a4a"><a href="#180918" label="[18:09:18]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: if you need help using gdb also feel free to ask</span></div><div class="line" id="180946"><span class="nick" style="color:#2e2a4a"><a href="#180946" label="[18:09:46]">&lt;stikonas&gt;</a></span><span class="message">I've also never used gdb on assembly programs until 3 months ago...</span></div><div class="line" id="181117"><span class="nick" style="color:#6c3d55"><a href="#181117" label="[18:11:17]">&lt;xentrac&gt;</a></span><span class="message">gdb sort of wants you to be using a high-level language</span></div><div class="line" id="181132"><span class="nick" style="color:#2e2a4a"><a href="#181132" label="[18:11:32]">&lt;stikonas&gt;</a></span><span class="message">sort of but there are some useful tips</span></div><div class="line" id="181143"><span class="nick" style="color:#6c3d55"><a href="#181143" label="[18:11:43]">&lt;xentrac&gt;</a></span><span class="message">yeah, it definitely copes okay with assembly</span></div><div class="line" id="181200"><span class="nick" style="color:#2e2a4a"><a href="#181200" label="[18:12:00]">&lt;stikonas&gt;</a></span><span class="message">first of all &quot;layout asm&quot; followed by &quot;layout regs&quot; can help you see assembly code and cpu registers</span></div><div class="line" id="181208"><span class="nick" style="color:#6c3d55"><a href="#181208" label="[18:12:08]">&lt;xentrac&gt;</a></span><span class="message">although I haven't been able to figure out how to get `finish` to work</span></div><div class="line" id="181225"><span class="nick" style="color:#6c3d55"><a href="#181225" label="[18:12:25]">&lt;xentrac&gt;</a></span><span class="message">I don't know how to use things like radare2 which are designed for debugging machine code</span></div><div class="line" id="181247"><span class="nick" style="color:#2e2a4a"><a href="#181247" label="[18:12:47]">&lt;stikonas&gt;</a></span><span class="message">oh, I've never used it either</span></div><div class="line" id="181255"><span class="nick" style="color:#6c3d55"><a href="#181255" label="[18:12:55]">&lt;xentrac&gt;</a></span><span class="message">I tend to do `display/i $pc` and `info registers` in GDB rather than the TUI</span></div><div class="line" id="181419"><span class="nick" style="color:#2e2a4a"><a href="#181419" label="[18:14:19]">&lt;stikonas&gt;</a></span><span class="message">there is also some trick to display memory contents</span></div><div class="line" id="181513"><span class="nick" style="color:#2e2a4a"><a href="#181513" label="[18:15:13]">&lt;stikonas&gt;</a></span><span class="message">something like &quot;x/8x memory address&quot;</span></div><div class="line" id="181520"><span class="nick" style="color:#2e2a4a"><a href="#181520" label="[18:15:20]">&lt;stikonas&gt;</a></span><span class="message">although we don't need that for hex0</span></div><div class="line" id="182700"><span class="nick" style="color:#6c3d55"><a href="#182700" label="[18:27:00]">&lt;xentrac&gt;</a></span><span class="message">yeah, I use that a lot</span></div><div class="line" id="182801"><span class="nick" style="color:#6c3d55"><a href="#182801" label="[18:28:01]">&lt;xentrac&gt;</a></span><span class="message">also p/x *$@8</span></div><div class="line" id="182933"><span class="nick" style="color:#2e2a4a"><a href="#182933" label="[18:29:33]">&lt;stikonas&gt;</a></span><span class="message">oh, what does $@8 do?</span></div><div class="line" id="182944"><span class="nick" style="color:#2e2a4a"><a href="#182944" label="[18:29:44]">&lt;stikonas&gt;</a></span><span class="message">I've used p/x *$register a lot</span></div><div class="line" id="182957"><span class="nick" style="color:#2e2a4a"><a href="#182957" label="[18:29:57]">&lt;stikonas&gt;</a></span><span class="message">but it's a bit hard when you work with 64bit pointers</span></div><div class="line" id="183003"><span class="nick" style="color:#2e2a4a"><a href="#183003" label="[18:30:03]">&lt;stikonas&gt;</a></span><span class="message">as gdb only shows 32-bits</span></div><div class="line" id="183121"><span class="nick" style="color:#6c3d55"><a href="#183121" label="[18:31:21]">&lt;xentrac&gt;</a></span><span class="message">well, $ is the last output</span></div><div class="line" id="183214"><span class="nick" style="color:#6c3d55"><a href="#183214" label="[18:32:14]">&lt;xentrac&gt;</a></span><span class="message">so if the register pointed to memory, p *(void**)$ would follow that pointer</span></div><div class="line" id="183308"><span class="nick" style="color:#6c3d55"><a href="#183308" label="[18:33:08]">&lt;xentrac&gt;</a></span><span class="message">and @8 means &quot;an array of 8 things&quot;</span></div><div class="line" id="183423"><span class="nick" style="color:#234e69"><a href="#183423" label="[18:34:23]">&lt;gbrlwck&gt;</a></span><span class="message">$a0 is the content of register 0?</span></div><div class="line" id="183441"><span class="nick" style="color:#2e2a4a"><a href="#183441" label="[18:34:41]">&lt;stikonas&gt;</a></span><span class="message">no, it's content of register a0</span></div><div class="line" id="183451"><span class="nick" style="color:#2e2a4a"><a href="#183451" label="[18:34:51]">&lt;stikonas&gt;</a></span><span class="message">risc-v has two names for registers</span></div><div class="line" id="183457"><span class="nick" style="color:#2e2a4a"><a href="#183457" label="[18:34:57]">&lt;stikonas&gt;</a></span><span class="message">it's either x0 to x31</span></div><div class="line" id="183514"><span class="nick" style="color:#234e69"><a href="#183514" label="[18:35:14]">&lt;gbrlwck&gt;</a></span><span class="message">yeah, right :)</span></div><div class="line" id="183531"><span class="nick" style="color:#2e2a4a"><a href="#183531" label="[18:35:31]">&lt;stikonas&gt;</a></span><span class="message">or there are some more semantic names like zero, a0, a1, a2,... (for function calls), t0, t1, ... (for temporaries), and similar</span></div><div class="line" id="183554"><span class="nick" style="color:#234e69"><a href="#183554" label="[18:35:54]">&lt;gbrlwck&gt;</a></span><span class="message">the content at the first break is: $1 = 4395898842368</span></div><div class="line" id="183612"><span class="nick" style="color:#2e2a4a"><a href="#183612" label="[18:36:12]">&lt;stikonas&gt;</a></span><span class="message">there is a list or registers here <a rel="nofollow" href="https://web.eecs.utk.edu/~smarz1/courses/ece356/notes/assembly/">https://web.eecs.utk.edu/~smarz1/courses/ece356/notes/assembly/</a> </span></div><div class="line" id="183622"><span class="nick" style="color:#2e2a4a"><a href="#183622" label="[18:36:22]">&lt;stikonas&gt;</a></span><span class="message">this is value of a0?</span></div><div class="line" id="183632"><span class="nick" style="color:#2e2a4a"><a href="#183632" label="[18:36:32]">&lt;stikonas&gt;</a></span><span class="message">strange, that looks like memory address to me</span></div><div class="line" id="183635"><span class="nick" style="color:#2e2a4a"><a href="#183635" label="[18:36:35]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="183637"><span class="nick" style="color:#2e2a4a"><a href="#183637" label="[18:36:37]">&lt;stikonas&gt;</a></span><span class="message">let me fire up my gdb</span></div><div class="line" id="183648"><span class="nick" style="color:#234e69"><a href="#183648" label="[18:36:48]">&lt;gbrlwck&gt;</a></span><span class="message">that's the output of: p $a0</span></div><div class="line" id="183723"><span class="nick" style="color:#2e2a4a"><a href="#183723" label="[18:37:23]">&lt;stikonas&gt;</a></span><span class="message">ok, let me check mine</span></div><div class="line" id="183729"><span class="nick" style="color:#6c3d55"><a href="#183729" label="[18:37:29]">&lt;xentrac&gt;</a></span><span class="message">may be more useful to p/x $a0</span></div><div class="line" id="183828"><span class="nick" style="color:#2e2a4a"><a href="#183828" label="[18:38:28]">&lt;stikonas&gt;</a></span><span class="message">and is this before that line or after?</span></div><div class="line" id="183853"><span class="nick" style="color:#2e2a4a"><a href="#183853" label="[18:38:53]">&lt;stikonas&gt;</a></span><span class="message">I have $1 = 0x7f</span></div><div class="line" id="183902"><span class="nick" style="color:#234e69"><a href="#183902" label="[18:39:02]">&lt;gbrlwck&gt;</a></span><span class="message">how do i check that?</span></div><div class="line" id="183920"><span class="nick" style="color:#234e69"><a href="#183920" label="[18:39:20]">&lt;gbrlwck&gt;</a></span><span class="message">it might be before, since i added the breakpoint at line 130</span></div><div class="line" id="183921"><span class="nick" style="color:#2e2a4a"><a href="#183921" label="[18:39:21]">&lt;stikonas&gt;</a></span><span class="message">actually it shouldn't matter, that line does not change a0</span></div><div class="line" id="183934"><span class="nick" style="color:#2e2a4a"><a href="#183934" label="[18:39:34]">&lt;stikonas&gt;</a></span><span class="message">ok, same here</span></div><div class="line" id="183936"><span class="nick" style="color:#2e2a4a"><a href="#183936" label="[18:39:36]">&lt;stikonas&gt;</a></span><span class="message">anyway, that's fie</span></div><div class="line" id="183942"><span class="nick" style="color:#2e2a4a"><a href="#183942" label="[18:39:42]">&lt;stikonas&gt;</a></span><span class="message">but we see some difference already</span></div><div class="line" id="184015"><span class="nick" style="color:#2e2a4a"><a href="#184015" label="[18:40:15]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="184022"><span class="nick" style="color:#234e69"><a href="#184022" label="[18:40:22]">&lt;gbrlwck&gt;</a></span><span class="message">so, when i continue, the next value is 0x12 (18)</span></div><div class="line" id="184039"><span class="nick" style="color:#234e69"><a href="#184039" label="[18:40:39]">&lt;gbrlwck&gt;</a></span><span class="message">which seems to be more like it</span></div><div class="line" id="184118"><span class="nick" style="color:#2e2a4a"><a href="#184118" label="[18:41:18]">&lt;stikonas&gt;</a></span><span class="message">still, 18 is a bit strange number</span></div><div class="line" id="184129"><span class="nick" style="color:#2e2a4a"><a href="#184129" label="[18:41:29]">&lt;stikonas&gt;</a></span><span class="message">it's not a readable letter or number in ascii encoding</span></div><div class="line" id="184130"><span class="nick" style="color:#2e2a4a"><a href="#184130" label="[18:41:30]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="184144"><span class="nick" style="color:#2e2a4a"><a href="#184144" label="[18:41:44]">&lt;stikonas&gt;</a></span><span class="message">oh, you mean continue to 2nd breakpoint</span></div><div class="line" id="184150"><span class="nick" style="color:#234e69"><a href="#184150" label="[18:41:50]">&lt;gbrlwck&gt;</a></span><span class="message">yes</span></div><div class="line" id="184156"><span class="nick" style="color:#2e2a4a"><a href="#184156" label="[18:41:56]">&lt;stikonas&gt;</a></span><span class="message">I get 0x45</span></div><div class="line" id="184205"><span class="nick" style="color:#2e2a4a"><a href="#184205" label="[18:42:05]">&lt;stikonas&gt;</a></span><span class="message">actually, instead of p/x it might be good to run p/c $a0</span></div><div class="line" id="184211"><span class="nick" style="color:#2e2a4a"><a href="#184211" label="[18:42:11]">&lt;stikonas&gt;</a></span><span class="message">it decodes it into letter</span></div><div class="line" id="184230"><span class="nick" style="color:#6c3d55"><a href="#184230" label="[18:42:30]">&lt;xentrac&gt;</a></span><span class="message">yeah, /x is useful for values like 4395898842368</span></div><div class="line" id="184236"><span class="nick" style="color:#8dd3c7"><a href="#184236" label="[18:42:36]">&lt;oriansj&gt;</a></span><span class="message">my first question is what happens when given 01 23 45 67 89 AB CD EF and single step in gdb with si</span></div><div class="line" id="184244"><span class="nick" style="color:#6c3d55"><a href="#184244" label="[18:42:44]">&lt;xentrac&gt;</a></span><span class="message">but 7f is delete</span></div><div class="line" id="184253"><span class="nick" style="color:#2e2a4a"><a href="#184253" label="[18:42:53]">&lt;stikonas&gt;</a></span><span class="message">oh, hmm</span></div><div class="line" id="184256"><span class="nick" style="color:#234e69"><a href="#184256" label="[18:42:56]">&lt;gbrlwck&gt;</a></span><span class="message">oriansj: i can do that ;)</span></div><div class="line" id="184309"><span class="nick" style="color:#2e2a4a"><a href="#184309" label="[18:43:09]">&lt;stikonas&gt;</a></span><span class="message">ok, let's try that 0123... file</span></div><div class="line" id="184315"><span class="nick" style="color:#8dd3c7"><a href="#184315" label="[18:43:15]">&lt;oriansj&gt;</a></span><span class="message">and put break points on the reading and writing of bytes</span></div><div class="line" id="184317"><span class="nick" style="color:#234e69"><a href="#184317" label="[18:43:17]">&lt;gbrlwck&gt;</a></span><span class="message">ah</span></div><div class="line" id="184321"><span class="nick" style="color:#234e69"><a href="#184321" label="[18:43:21]">&lt;gbrlwck&gt;</a></span><span class="message">i'm already doing that file</span></div><div class="line" id="184327"><span class="nick" style="color:#234e69"><a href="#184327" label="[18:43:27]">&lt;gbrlwck&gt;</a></span><span class="message">sorry</span></div><div class="line" id="184329"><span class="nick" style="color:#2e2a4a"><a href="#184329" label="[18:43:29]">&lt;stikonas&gt;</a></span><span class="message">oh, that's why</span></div><div class="line" id="184330"><span class="nick" style="color:#2e2a4a"><a href="#184330" label="[18:43:30]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="184338"><span class="nick" style="color:#2e2a4a"><a href="#184338" label="[18:43:38]">&lt;stikonas&gt;</a></span><span class="message">I was doing hex0_riscv64.hex1</span></div><div class="line" id="184340"><span class="nick" style="color:#8dd3c7"><a href="#184340" label="[18:43:40]">&lt;oriansj&gt;</a></span><span class="message">So you should see exactly 2 reads that are correct followed by one write that is correct</span></div><div class="line" id="184407"><span class="nick" style="color:#2e2a4a"><a href="#184407" label="[18:44:07]">&lt;stikonas&gt;</a></span><span class="message">so I have file &quot;01 23 45 67 89 AB CD EF&quot; (with newline at the end)</span></div><div class="line" id="184419"><span class="nick" style="color:#2e2a4a"><a href="#184419" label="[18:44:19]">&lt;stikonas&gt;</a></span><span class="message">and sha256sum c45792734f2045a48f4db7f86189009be6824055b9f139f2d4d80b831303218e</span></div><div class="line" id="184443"><span class="nick" style="color:#2e2a4a"><a href="#184443" label="[18:44:43]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: on risc-v read will be stored in a0 after ecall</span></div><div class="line" id="184515"><span class="nick" style="color:#2e2a4a"><a href="#184515" label="[18:45:15]">&lt;stikonas&gt;</a></span><span class="message">sorry, that's totally wrong</span></div><div class="line" id="184522"><span class="nick" style="color:#2e2a4a"><a href="#184522" label="[18:45:22]">&lt;stikonas&gt;</a></span><span class="message">a0 will have number of bytes read</span></div><div class="line" id="184551"><span class="nick" style="color:#2e2a4a"><a href="#184551" label="[18:45:51]">&lt;stikonas&gt;</a></span><span class="message">value will be in the address pointed out by stack pointer, but the next line loads it into a0</span></div><div class="line" id="184553"><span class="nick" style="color:#2e2a4a"><a href="#184553" label="[18:45:53]">&lt;stikonas&gt;</a></span><span class="message">lb a0, (sp)</span></div><div class="line" id="184558"><span class="nick" style="color:#2e2a4a"><a href="#184558" label="[18:45:58]">&lt;stikonas&gt;</a></span><span class="message">so you can put breakpoint there</span></div><div class="line" id="184608"><span class="nick" style="color:#2e2a4a"><a href="#184608" label="[18:46:08]">&lt;stikonas&gt;</a></span><span class="message">that's line 66</span></div><div class="line" id="184713"><span class="nick" style="color:#234e69"><a href="#184713" label="[18:47:13]">&lt;gbrlwck&gt;</a></span><span class="message">so, i added a newline to my teststring file but the sums dont check out (no idea why)</span></div><div class="line" id="184714"><span class="nick" style="color:#8dd3c7"><a href="#184714" label="[18:47:14]">&lt;oriansj&gt;</a></span><span class="message">and if the gas version has the same error, we can safely assume it isn't our instruction encoding (as gas shouldn't be encoding the wrong instructions)</span></div><div class="line" id="184755"><span class="nick" style="color:#2e2a4a"><a href="#184755" label="[18:47:55]">&lt;stikonas&gt;</a></span><span class="message">yes, that's why this is strange, one would think kernel bug... but that's such a basic functionality</span></div><div class="line" id="184800"><span class="nick" style="color:#2e2a4a"><a href="#184800" label="[18:48:00]">&lt;stikonas&gt;</a></span><span class="message">reads and writes shouldn't be buggy</span></div><div class="line" id="184820"><span class="nick" style="color:#8dd3c7"><a href="#184820" label="[18:48:20]">&lt;oriansj&gt;</a></span><span class="message">using gdb does it read the correct values?</span></div><div class="line" id="184820"><span class="nick" style="color:#234e69"><a href="#184820" label="[18:48:20]">&lt;gbrlwck&gt;</a></span><span class="message">(gdb) p/c $a0</span></div><div class="line" id="184821"><span class="nick" style="color:#234e69"><a href="#184821" label="[18:48:21]">&lt;gbrlwck&gt;</a></span><span class="message">$1 = 1 '\001'</span></div><div class="line" id="184826"><span class="nick" style="color:#2e2a4a"><a href="#184826" label="[18:48:26]">&lt;stikonas&gt;</a></span><span class="message">oh, do it after lb line</span></div><div class="line" id="184840"><span class="nick" style="color:#2e2a4a"><a href="#184840" label="[18:48:40]">&lt;stikonas&gt;</a></span><span class="message">you still have number of bytes read in a0</span></div><div class="line" id="184841"><span class="nick" style="color:#234e69"><a href="#184841" label="[18:48:41]">&lt;gbrlwck&gt;</a></span><span class="message">this is when breaking on line 66</span></div><div class="line" id="184850"><span class="nick" style="color:#2e2a4a"><a href="#184850" label="[18:48:50]">&lt;stikonas&gt;</a></span><span class="message">can yo do line 67</span></div><div class="line" id="184852"><span class="nick" style="color:#2e2a4a"><a href="#184852" label="[18:48:52]">&lt;stikonas&gt;</a></span><span class="message">or do si</span></div><div class="line" id="184855"><span class="nick" style="color:#2e2a4a"><a href="#184855" label="[18:48:55]">&lt;stikonas&gt;</a></span><span class="message">to step to it</span></div><div class="line" id="184903"><span class="nick" style="color:#2e2a4a"><a href="#184903" label="[18:49:03]">&lt;stikonas&gt;</a></span><span class="message">but 1 on line 66 is good</span></div><div class="line" id="184908"><span class="nick" style="color:#234e69"><a href="#184908" label="[18:49:08]">&lt;gbrlwck&gt;</a></span><span class="message">(gdb) p/c $a0</span></div><div class="line" id="184908"><span class="nick" style="color:#234e69"><a href="#184908" label="[18:49:08]">&lt;gbrlwck&gt;</a></span><span class="message">$2 = 48 '0'</span></div><div class="line" id="184910"><span class="nick" style="color:#2e2a4a"><a href="#184910" label="[18:49:10]">&lt;stikonas&gt;</a></span><span class="message">that's what I expect</span></div><div class="line" id="184911"><span class="nick" style="color:#234e69"><a href="#184911" label="[18:49:11]">&lt;gbrlwck&gt;</a></span><span class="message">also good, no?</span></div><div class="line" id="184913"><span class="nick" style="color:#2e2a4a"><a href="#184913" label="[18:49:13]">&lt;stikonas&gt;</a></span><span class="message">that's good</span></div><div class="line" id="184917"><span class="nick" style="color:#2e2a4a"><a href="#184917" label="[18:49:17]">&lt;stikonas&gt;</a></span><span class="message">yes, that's the first byte</span></div><div class="line" id="184942"><span class="nick" style="color:#2e2a4a"><a href="#184942" label="[18:49:42]">&lt;stikonas&gt;</a></span><span class="message">next should be 1</span></div><div class="line" id="184946"><span class="nick" style="color:#234e69"><a href="#184946" label="[18:49:46]">&lt;gbrlwck&gt;</a></span><span class="message">it is</span></div><div class="line" id="185000"><span class="nick" style="color:#234e69"><a href="#185000" label="[18:50:00]">&lt;gbrlwck&gt;</a></span><span class="message">then comes a space</span></div><div class="line" id="185011"><span class="nick" style="color:#2e2a4a"><a href="#185011" label="[18:50:11]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe restart and also add breakpoint on 130</span></div><div class="line" id="185015"><span class="nick" style="color:#2e2a4a"><a href="#185015" label="[18:50:15]">&lt;stikonas&gt;</a></span><span class="message">so that you can check writes</span></div><div class="line" id="185045"><span class="nick" style="color:#2e2a4a"><a href="#185045" label="[18:50:45]">&lt;stikonas&gt;</a></span><span class="message">so you should get reads 0 then 1, and then 1 at the write part</span></div><div class="line" id="185102"><span class="nick" style="color:#2e2a4a"><a href="#185102" label="[18:51:02]">&lt;stikonas&gt;</a></span><span class="message">then indeed space</span></div><div class="line" id="185151"><span class="nick" style="color:#2e2a4a"><a href="#185151" label="[18:51:51]">&lt;stikonas&gt;</a></span><span class="message">then '2', '3' for reads (p/c $a0)</span></div><div class="line" id="185155"><span class="nick" style="color:#234e69"><a href="#185155" label="[18:51:55]">&lt;gbrlwck&gt;</a></span><span class="message">the first interation has 48 '0' on line 66 and 0 '\000' on line 130</span></div><div class="line" id="185157"><span class="nick" style="color:#2e2a4a"><a href="#185157" label="[18:51:57]">&lt;stikonas&gt;</a></span><span class="message">and 0x23 for write (p/x $a0)</span></div><div class="line" id="185214"><span class="nick" style="color:#234e69"><a href="#185214" label="[18:52:14]">&lt;gbrlwck&gt;</a></span><span class="message">second iteration has 49 '1' on line 66 and 32 ' ' on line 130</span></div><div class="line" id="185216"><span class="nick" style="color:#2e2a4a"><a href="#185216" label="[18:52:16]">&lt;stikonas&gt;</a></span><span class="message">oh, you got to write before read?</span></div><div class="line" id="185224"><span class="nick" style="color:#2e2a4a"><a href="#185224" label="[18:52:24]">&lt;stikonas&gt;</a></span><span class="message">that's strange</span></div><div class="line" id="185232"><span class="nick" style="color:#2e2a4a"><a href="#185232" label="[18:52:32]">&lt;stikonas&gt;</a></span><span class="message">it should do 2 reads before write</span></div><div class="line" id="185239"><span class="nick" style="color:#234e69"><a href="#185239" label="[18:52:39]">&lt;gbrlwck&gt;</a></span><span class="message">wait</span></div><div class="line" id="185240"><span class="nick" style="color:#234e69"><a href="#185240" label="[18:52:40]">&lt;gbrlwck&gt;</a></span><span class="message">sorry</span></div><div class="line" id="185257"><span class="nick" style="color:#2e2a4a"><a href="#185257" label="[18:52:57]">&lt;stikonas&gt;</a></span><span class="message">so for writes do p/x rather than p/c</span></div><div class="line" id="185306"><span class="nick" style="color:#2e2a4a"><a href="#185306" label="[18:53:06]">&lt;stikonas&gt;</a></span><span class="message">as it is binary stuff that we are writing</span></div><div class="line" id="185311"><span class="nick" style="color:#8dd3c7"><a href="#185311" label="[18:53:11]">&lt;oriansj&gt;</a></span><span class="message">it should always do atleast 2 reads before write (more if whitespace or comments)</span></div><div class="line" id="185348"><span class="nick" style="color:#234e69"><a href="#185348" label="[18:53:48]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://termbin.com/3jshv">https://termbin.com/3jshv</a> </span></div><div class="line" id="185350"><span class="nick" style="color:#234e69"><a href="#185350" label="[18:53:50]">&lt;gbrlwck&gt;</a></span><span class="message">it doesn't</span></div><div class="line" id="185359"><span class="nick" style="color:#8dd3c7"><a href="#185359" label="[18:53:59]">&lt;oriansj&gt;</a></span><span class="message">the contents of the register a0 at combine should be what is written out</span></div><div class="line" id="185453"><span class="nick" style="color:#2e2a4a"><a href="#185453" label="[18:54:53]">&lt;stikonas&gt;</a></span><span class="message">ok, something is messed up if this is what happens</span></div><div class="line" id="185510"><span class="nick" style="color:#8dd3c7"><a href="#185510" label="[18:55:10]">&lt;oriansj&gt;</a></span><span class="message">break point at hex_read</span></div><div class="line" id="185535"><span class="nick" style="color:#2e2a4a"><a href="#185535" label="[18:55:35]">&lt;stikonas&gt;</a></span><span class="message">also value of s4 might be goot to watch</span></div><div class="line" id="185539"><span class="nick" style="color:#8dd3c7"><a href="#185539" label="[18:55:39]">&lt;oriansj&gt;</a></span><span class="message">what happens at the: bnez s4, combine</span></div><div class="line" id="185553"><span class="nick" style="color:#2e2a4a"><a href="#185553" label="[18:55:53]">&lt;stikonas&gt;</a></span><span class="message">that is a boolean toggle to decide whether we write the combined byte or not</span></div><div class="line" id="185601"><span class="nick" style="color:#2e2a4a"><a href="#185601" label="[18:56:01]">&lt;stikonas&gt;</a></span><span class="message">oh, what we should check</span></div><div class="line" id="185609"><span class="nick" style="color:#2e2a4a"><a href="#185609" label="[18:56:09]">&lt;stikonas&gt;</a></span><span class="message">is what are the values of all registers when we start</span></div><div class="line" id="185613"><span class="nick" style="color:#234e69"><a href="#185613" label="[18:56:13]">&lt;gbrlwck&gt;</a></span><span class="message">should i stream this live via jitsi or something? might be easier?</span></div><div class="line" id="185624"><span class="nick" style="color:#2e2a4a"><a href="#185624" label="[18:56:24]">&lt;stikonas&gt;</a></span><span class="message">I thought kernel should initialize all registers to 0</span></div><div class="line" id="185635"><span class="nick" style="color:#2e2a4a"><a href="#185635" label="[18:56:35]">&lt;stikonas&gt;</a></span><span class="message">(except special purpose ones like stack pointer)</span></div><div class="line" id="185648"><span class="nick" style="color:#8dd3c7"><a href="#185648" label="[18:56:48]">&lt;oriansj&gt;</a></span><span class="message">does s4 start out as zero?</span></div><div class="line" id="185657"><span class="nick" style="color:#2e2a4a"><a href="#185657" label="[18:56:57]">&lt;stikonas&gt;</a></span><span class="message">hmm, let's check initial values of registers</span></div><div class="line" id="185659"><span class="nick" style="color:#2e2a4a"><a href="#185659" label="[18:56:59]">&lt;stikonas&gt;</a></span><span class="message">when your start</span></div><div class="line" id="185706"><span class="nick" style="color:#234e69"><a href="#185706" label="[18:57:06]">&lt;gbrlwck&gt;</a></span><span class="message">how do i do that?</span></div><div class="line" id="185711"><span class="nick" style="color:#234e69"><a href="#185711" label="[18:57:11]">&lt;gbrlwck&gt;</a></span><span class="message">i'm not that fluent in gdb</span></div><div class="line" id="185717"><span class="nick" style="color:#8dd3c7"><a href="#185717" label="[18:57:17]">&lt;oriansj&gt;</a></span><span class="message">b _start</span></div><div class="line" id="185734"><span class="nick" style="color:#8dd3c7"><a href="#185734" label="[18:57:34]">&lt;oriansj&gt;</a></span><span class="message">p $s4</span></div><div class="line" id="185735"><span class="nick" style="color:#2e2a4a"><a href="#185735" label="[18:57:35]">&lt;stikonas&gt;</a></span><span class="message">there is also starti command</span></div><div class="line" id="185737"><span class="nick" style="color:#2e2a4a"><a href="#185737" label="[18:57:37]">&lt;stikonas&gt;</a></span><span class="message">I think...</span></div><div class="line" id="185741"><span class="nick" style="color:#234e69"><a href="#185741" label="[18:57:41]">&lt;gbrlwck&gt;</a></span><span class="message">183253003312</span></div><div class="line" id="185743"><span class="nick" style="color:#2e2a4a"><a href="#185743" label="[18:57:43]">&lt;stikonas&gt;</a></span><span class="message">but b _start would put breakpoint</span></div><div class="line" id="185750"><span class="nick" style="color:#2e2a4a"><a href="#185750" label="[18:57:50]">&lt;stikonas&gt;</a></span><span class="message">oh, that's the problem then</span></div><div class="line" id="185755"><span class="nick" style="color:#234e69"><a href="#185755" label="[18:57:55]">&lt;gbrlwck&gt;</a></span><span class="message">0x2aaabaec30</span></div><div class="line" id="185819"><span class="nick" style="color:#2e2a4a"><a href="#185819" label="[18:58:19]">&lt;stikonas&gt;</a></span><span class="message">I have $s4 = 0</span></div><div class="line" id="185828"><span class="nick" style="color:#2e2a4a"><a href="#185828" label="[18:58:28]">&lt;stikonas&gt;</a></span><span class="message">we need to initialize them then</span></div><div class="line" id="185843"><span class="nick" style="color:#2e2a4a"><a href="#185843" label="[18:58:43]">&lt;stikonas&gt;</a></span><span class="message">I thought kernel does that when loading binaries</span></div><div class="line" id="185845"><span class="nick" style="color:#2e2a4a"><a href="#185845" label="[18:58:45]">&lt;stikonas&gt;</a></span><span class="message">strange...</span></div><div class="line" id="185859"><span class="nick" style="color:#234e69"><a href="#185859" label="[18:58:59]">&lt;gbrlwck&gt;</a></span><span class="message">li s4,0 ?</span></div><div class="line" id="185913"><span class="nick" style="color:#2e2a4a"><a href="#185913" label="[18:59:13]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="185916"><span class="nick" style="color:#2e2a4a"><a href="#185916" label="[18:59:16]">&lt;stikonas&gt;</a></span><span class="message">and maybe s5 too</span></div><div class="line" id="185950"><span class="nick" style="color:#6c3d55"><a href="#185950" label="[18:59:50]">&lt;xentrac&gt;</a></span><span class="message">yeah, the kernel needs to do that when loading binaries; the alternative is a covert information leak through execve()</span></div><div class="line" id="190036"><span class="nick" style="color:#234e69"><a href="#190036" label="[19:00:36]">&lt;gbrlwck&gt;</a></span><span class="message">so that fixed it :)</span></div><div class="line" id="190042"><span class="nick" style="color:#2e2a4a"><a href="#190042" label="[19:00:42]">&lt;stikonas&gt;</a></span><span class="message">just s4?</span></div><div class="line" id="190044"><span class="nick" style="color:#2e2a4a"><a href="#190044" label="[19:00:44]">&lt;stikonas&gt;</a></span><span class="message">or s5 too?</span></div><div class="line" id="190054"><span class="nick" style="color:#234e69"><a href="#190054" label="[19:00:54]">&lt;gbrlwck&gt;</a></span><span class="message">0000000 2301 6745 ab89 efcd</span></div><div class="line" id="190102"><span class="nick" style="color:#234e69"><a href="#190102" label="[19:01:02]">&lt;gbrlwck&gt;</a></span><span class="message">i initialized both</span></div><div class="line" id="190104"><span class="nick" style="color:#2e2a4a"><a href="#190104" label="[19:01:04]">&lt;stikonas&gt;</a></span><span class="message">ok, so at least we understand what was going wrong</span></div><div class="line" id="190106"><span class="nick" style="color:#2e2a4a"><a href="#190106" label="[19:01:06]">&lt;stikonas&gt;</a></span><span class="message">but not why</span></div><div class="line" id="190109"><span class="nick" style="color:#2e2a4a"><a href="#190109" label="[19:01:09]">&lt;stikonas&gt;</a></span><span class="message">can you try just s4?</span></div><div class="line" id="190113"><span class="nick" style="color:#234e69"><a href="#190113" label="[19:01:13]">&lt;gbrlwck&gt;</a></span><span class="message">sure</span></div><div class="line" id="190131"><span class="nick" style="color:#2e2a4a"><a href="#190131" label="[19:01:31]">&lt;stikonas&gt;</a></span><span class="message">the fewer bytes we have in seed the better</span></div><div class="line" id="190145"><span class="nick" style="color:#234e69"><a href="#190145" label="[19:01:45]">&lt;gbrlwck&gt;</a></span><span class="message">works with only initializing s4</span></div><div class="line" id="190206"><span class="nick" style="color:#2e2a4a"><a href="#190206" label="[19:02:06]">&lt;stikonas&gt;</a></span><span class="message">ok, that's good</span></div><div class="line" id="190210"><span class="nick" style="color:#2e2a4a"><a href="#190210" label="[19:02:10]">&lt;stikonas&gt;</a></span><span class="message">do you want to make PR?</span></div><div class="line" id="190216"><span class="nick" style="color:#234e69"><a href="#190216" label="[19:02:16]">&lt;gbrlwck&gt;</a></span><span class="message">i'd love to</span></div><div class="line" id="190223"><span class="nick" style="color:#2e2a4a"><a href="#190223" label="[19:02:23]">&lt;stikonas&gt;</a></span><span class="message">well, I can help you with changes</span></div><div class="line" id="190236"><span class="nick" style="color:#234e69"><a href="#190236" label="[19:02:36]">&lt;gbrlwck&gt;</a></span><span class="message">do i need a github acoount for that?</span></div><div class="line" id="190247"><span class="nick" style="color:#2e2a4a"><a href="#190247" label="[19:02:47]">&lt;stikonas&gt;</a></span><span class="message">oriansj: ?</span></div><div class="line" id="190254"><span class="nick" style="color:#2e2a4a"><a href="#190254" label="[19:02:54]">&lt;stikonas&gt;</a></span><span class="message">that's one option</span></div><div class="line" id="190312"><span class="nick" style="color:#2e2a4a"><a href="#190312" label="[19:03:12]">&lt;stikonas&gt;</a></span><span class="message">might be the easier one, but not necesserily the only way</span></div><div class="line" id="190332"><span class="nick" style="color:#234e69"><a href="#190332" label="[19:03:32]">&lt;gbrlwck&gt;</a></span><span class="message">ok, i'll set up an account, then</span></div><div class="line" id="190410"><span class="nick" style="color:#2e2a4a"><a href="#190410" label="[19:04:10]">&lt;stikonas&gt;</a></span><span class="message">luckily, it would be too hard to fix up this, as  this is at the beginning of the file</span></div><div class="line" id="190424"><span class="nick" style="color:#2e2a4a"><a href="#190424" label="[19:04:24]">&lt;stikonas&gt;</a></span><span class="message">so don't need to redo any calculations of where to jump</span></div><div class="line" id="190436"><span class="nick" style="color:#8dd3c7"><a href="#190436" label="[19:04:36]">&lt;oriansj&gt;</a></span><span class="message">gbrlwck: I can pull from any git repo that I can git fetch from</span></div><div class="line" id="190506"><span class="nick" style="color:#8dd3c7"><a href="#190506" label="[19:05:06]">&lt;oriansj&gt;</a></span><span class="message">So notabug, savannah, gitlab, etc are all fine</span></div><div class="line" id="190553"><span class="nick" style="color:#2e2a4a"><a href="#190553" label="[19:05:53]">&lt;stikonas&gt;</a></span><span class="message">but in the meantime I'm confused</span></div><div class="line" id="190557"><span class="nick" style="color:#2e2a4a"><a href="#190557" label="[19:05:57]">&lt;stikonas&gt;</a></span><span class="message">why s4 is not zeroed</span></div><div class="line" id="190622"><span class="nick" style="color:#2e2a4a"><a href="#190622" label="[19:06:22]">&lt;stikonas&gt;</a></span><span class="message">oh, it probably depends on ABI</span></div><div class="line" id="190627"><span class="nick" style="color:#2e2a4a"><a href="#190627" label="[19:06:27]">&lt;stikonas&gt;</a></span><span class="message">maybe s registers are not zeroed...</span></div><div class="line" id="190628"><span class="nick" style="color:#8dd3c7"><a href="#190628" label="[19:06:28]">&lt;oriansj&gt;</a></span><span class="message">stikonas: for relative jumps yes but fortunately hex0 doesn't need absolute addresses</span></div><div class="line" id="190651"><span class="nick" style="color:#2e2a4a"><a href="#190651" label="[19:06:51]">&lt;stikonas&gt;</a></span><span class="message">well, we just need to copy paste the line from the end of the file where we also initialize s4 to 0</span></div><div class="line" id="190701"><span class="nick" style="color:#2e2a4a"><a href="#190701" label="[19:07:01]">&lt;stikonas&gt;</a></span><span class="message">and in hex0 file we also need to recalculate file size</span></div><div class="line" id="190708"><span class="nick" style="color:#2e2a4a"><a href="#190708" label="[19:07:08]">&lt;stikonas&gt;</a></span><span class="message">anyway, let's wait for gbrlwck to be ready</span></div><div class="line" id="190748"><span class="nick" style="color:#8dd3c7"><a href="#190748" label="[19:07:48]">&lt;oriansj&gt;</a></span><span class="message">first fixing bootstrap-seeds and then updating stage0-posix</span></div><div class="line" id="190806"><span class="nick" style="color:#2e2a4a"><a href="#190806" label="[19:08:06]">&lt;stikonas&gt;</a></span><span class="message">well, for pull yes</span></div><div class="line" id="190823"><span class="nick" style="color:#8dd3c7"><a href="#190823" label="[19:08:23]">&lt;oriansj&gt;</a></span><span class="message">and there are probably similiar bugs in hex1, hex2, M0 and cc_riscv64</span></div><div class="line" id="190840"><span class="nick" style="color:#2e2a4a"><a href="#190840" label="[19:08:40]">&lt;stikonas&gt;</a></span><span class="message">but for fixing files it might be easier to update GAS file, then M1 file then hex2 prototype and then we can update hex0 source and commit to bootstrap-seeds</span></div><div class="line" id="190900"><span class="nick" style="color:#2e2a4a"><a href="#190900" label="[19:09:00]">&lt;stikonas&gt;</a></span><span class="message">yes, there might be</span></div><div class="line" id="190917"><span class="nick" style="color:#2e2a4a"><a href="#190917" label="[19:09:17]">&lt;stikonas&gt;</a></span><span class="message">fortunately, they are not too hard to fix</span></div><div class="line" id="190927"><span class="nick" style="color:#2e2a4a"><a href="#190927" label="[19:09:27]">&lt;stikonas&gt;</a></span><span class="message">now that we found what causes them</span></div><div class="line" id="191046"><span class="nick" style="color:#8dd3c7"><a href="#191046" label="[19:10:46]">&lt;oriansj&gt;</a></span><span class="message">best not to assume the state of a register before we set it with RISC-V</span></div><div class="line" id="191109"><span class="nick" style="color:#8dd3c7"><a href="#191109" label="[19:11:09]">&lt;oriansj&gt;</a></span><span class="message">as there may be register side-effect differences from ecalls as well</span></div><div class="line" id="191201"><span class="nick" style="color:#2e2a4a"><a href="#191201" label="[19:12:01]">&lt;stikonas&gt;</a></span><span class="message">hmm, risc-v elf.h file in kernel source does not have ELF_PLAT_INIT</span></div><div class="line" id="191213"><span class="nick" style="color:#2e2a4a"><a href="#191213" label="[19:12:13]">&lt;stikonas&gt;</a></span><span class="message">so I think we can't assume that they are set to 0</span></div><div class="line" id="191215"><span class="nick" style="color:#2e2a4a"><a href="#191215" label="[19:12:15]">&lt;stikonas&gt;</a></span><span class="message">on x86 they are</span></div><div class="line" id="191241"><span class="nick" style="color:#2e2a4a"><a href="#191241" label="[19:12:41]">&lt;stikonas&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/elf.h?h=v5.15-rc5#n107">https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/elf.h?h=v5.15-rc5#n107</a> </span></div><div class="line" id="191321"><span class="nick" style="color:#2e2a4a"><a href="#191321" label="[19:13:21]">&lt;stikonas&gt;</a></span><span class="message">but yes, at the very least we'll see this bug in hex1 and hex2</span></div><div class="line" id="191331"><span class="nick" style="color:#2e2a4a"><a href="#191331" label="[19:13:31]">&lt;stikonas&gt;</a></span><span class="message">maybe not in M0</span></div><div class="line" id="191331"><span class="nick" style="color:#8dd3c7"><a href="#191331" label="[19:13:31]">&lt;oriansj&gt;</a></span><span class="message">actually every architectures including AArch64, PowerPC64LE zero on exec</span></div><div class="line" id="191356"><span class="nick" style="color:#8dd3c7"><a href="#191356" label="[19:13:56]">&lt;oriansj&gt;</a></span><span class="message">but not RISC-V for some reason</span></div><div class="line" id="191413"><span class="nick" style="color:#2e2a4a"><a href="#191413" label="[19:14:13]">&lt;stikonas&gt;</a></span><span class="message">yes, I can see e.g. aarch64 here <a rel="nofollow" href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm64/include/asm/elf.h?h=v5.15-rc5#n159">https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm64/include/asm/elf.h?h=v5.15-rc5#n159</a> </span></div><div class="line" id="191414"><span class="nick" style="color:#2e2a4a"><a href="#191414" label="[19:14:14]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="191420"><span class="nick" style="color:#2e2a4a"><a href="#191420" label="[19:14:20]">&lt;stikonas&gt;</a></span><span class="message">that is a bit surprising</span></div><div class="line" id="191550"><span class="nick" style="color:#2e2a4a"><a href="#191550" label="[19:15:50]">&lt;stikonas&gt;</a></span><span class="message">we'll need a new release of stage0-posix at some point</span></div><div class="line" id="191559"><span class="nick" style="color:#8dd3c7"><a href="#191559" label="[19:15:59]">&lt;oriansj&gt;</a></span><span class="message">failing to zero would result in a data leak from the kernel</span></div><div class="line" id="191600"><span class="nick" style="color:#2e2a4a"><a href="#191600" label="[19:16:00]">&lt;stikonas&gt;</a></span><span class="message">at least with minor number update...</span></div><div class="line" id="191609"><span class="nick" style="color:#8dd3c7"><a href="#191609" label="[19:16:09]">&lt;oriansj&gt;</a></span><span class="message">it is a potential security problem</span></div><div class="line" id="191618"><span class="nick" style="color:#2e2a4a"><a href="#191618" label="[19:16:18]">&lt;stikonas&gt;</a></span><span class="message">maybe should ask on #riscv</span></div><div class="line" id="192020"><span class="nick" style="color:#8dd3c7"><a href="#192020" label="[19:20:20]">&lt;oriansj&gt;</a></span><span class="message">so until they fix that, lets assume it will not be fixed and update our binaries accordingly</span></div><div class="line" id="192034"><span class="nick" style="color:#8dd3c7"><a href="#192034" label="[19:20:34]">&lt;oriansj&gt;</a></span><span class="message">afk</span></div><div class="line" id="192153"><span class="nick" style="color:#2e2a4a"><a href="#192153" label="[19:21:53]">&lt;stikonas&gt;</a></span><span class="message">we should update anyway</span></div><div class="line" id="192211"><span class="nick" style="color:#2e2a4a"><a href="#192211" label="[19:22:11]">&lt;stikonas&gt;</a></span><span class="message">as there are some kernels out that don't do zeroing</span></div><div class="line" id="192349"><span class="nick" style="color:#234e69"><a href="#192349" label="[19:23:49]">&lt;gbrlwck&gt;</a></span><span class="message">should i add my chmod'ed kaem.riscv64 too, or is there a reason why it's not executable?</span></div><div class="line" id="192917"><span class="nick" style="color:#d9d9d9"><a href="#192917" label="[19:29:17]">&lt;stikonas[m]&gt;</a></span><span class="message">It doesn't have to be executable</span></div><div class="line" id="192926"><span class="nick" style="color:#d9d9d9"><a href="#192926" label="[19:29:26]">&lt;stikonas[m]&gt;</a></span><span class="message">Kaem doesn't care</span></div><div class="line" id="193054"><span class="nick" style="color:#d9d9d9"><a href="#193054" label="[19:30:54]">&lt;stikonas[m]&gt;</a></span><span class="message">But you'll have to update prototypes in riscv64/Development</span></div><div class="line" id="193121"><span class="nick" style="color:#234e69"><a href="#193121" label="[19:31:21]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/58">https://github.com/oriansj/stage0-posix/pull/58</a> </span></div><div class="line" id="193339"><span class="nick" style="color:#2e2a4a"><a href="#193339" label="[19:33:39]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: yeah, .S change looks alright. But can you do others too?</span></div><div class="line" id="193349"><span class="nick" style="color:#234e69"><a href="#193349" label="[19:33:49]">&lt;gbrlwck&gt;</a></span><span class="message">i'll go for it</span></div><div class="line" id="193358"><span class="nick" style="color:#2e2a4a"><a href="#193358" label="[19:33:58]">&lt;stikonas&gt;</a></span><span class="message">for M1 file you need to copy this line <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/riscv64/Development/hex0_riscv64.M1#L135">https://github.com/oriansj/stage0-posix/blob/master/riscv64/Development/hex0_riscv64.M1#L135</a> </span></div><div class="line" id="193431"><span class="nick" style="color:#2e2a4a"><a href="#193431" label="[19:34:31]">&lt;stikonas&gt;</a></span><span class="message">RD means destination register there</span></div><div class="line" id="193544"><span class="nick" style="color:#234e69"><a href="#193544" label="[19:35:44]">&lt;gbrlwck&gt;</a></span><span class="message">copy this where to?</span></div><div class="line" id="193641"><span class="nick" style="color:#2e2a4a"><a href="#193641" label="[19:36:41]">&lt;stikonas&gt;</a></span><span class="message">well to the beginning</span></div><div class="line" id="193647"><span class="nick" style="color:#2e2a4a"><a href="#193647" label="[19:36:47]">&lt;stikonas&gt;</a></span><span class="message">where you inserted li in .S file</span></div><div class="line" id="193710"><span class="nick" style="color:#2e2a4a"><a href="#193710" label="[19:37:10]">&lt;stikonas&gt;</a></span><span class="message">li s4, 0 translates to RD_S4 MV in .M1 language</span></div><div class="line" id="193727"><span class="nick" style="color:#234e69"><a href="#193727" label="[19:37:27]">&lt;gbrlwck&gt;</a></span><span class="message">:)  thanks!</span></div><div class="line" id="193814"><span class="nick" style="color:#234e69"><a href="#193814" label="[19:38:14]">&lt;gbrlwck&gt;</a></span><span class="message">comment it with &quot;initialize register&quot;?</span></div><div class="line" id="194114"><span class="nick" style="color:#234e69"><a href="#194114" label="[19:41:14]">&lt;gbrlwck&gt;</a></span><span class="message">are there any more left? sorry, lost track</span></div><div class="line" id="194351"><span class="nick" style="color:#2e2a4a"><a href="#194351" label="[19:43:51]">&lt;stikonas&gt;</a></span><span class="message">yeah, that comment is fine</span></div><div class="line" id="194403"><span class="nick" style="color:#2e2a4a"><a href="#194403" label="[19:44:03]">&lt;stikonas&gt;</a></span><span class="message">yes, then there is hex0_riscv64.hex2 prototype</span></div><div class="line" id="194411"><span class="nick" style="color:#2e2a4a"><a href="#194411" label="[19:44:11]">&lt;stikonas&gt;</a></span><span class="message">and finally hex0_riscv64.hex0 file itself</span></div><div class="line" id="194532"><span class="nick" style="color:#2e2a4a"><a href="#194532" label="[19:45:32]">&lt;stikonas&gt;</a></span><span class="message">for hex2 you again hex the same place to copy from <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/riscv64/Development/hex0_riscv64.hex2#L244">https://github.com/oriansj/stage0-posix/blob/master/riscv64/Development/hex0_riscv64.hex2#L244</a> </span></div><div class="line" id="194557"><span class="nick" style="color:#2e2a4a"><a href="#194557" label="[19:45:57]">&lt;stikonas&gt;</a></span><span class="message">first line is comment (M1 code) and second code is actual, hex encoding</span></div><div class="line" id="194559"><span class="nick" style="color:#2e2a4a"><a href="#194559" label="[19:45:59]">&lt;stikonas&gt;</a></span><span class="message">so copy both</span></div><div class="line" id="194625"><span class="nick" style="color:#234e69"><a href="#194625" label="[19:46:25]">&lt;gbrlwck&gt;</a></span><span class="message">i got that :)</span></div><div class="line" id="194631"><span class="nick" style="color:#2e2a4a"><a href="#194631" label="[19:46:31]">&lt;stikonas&gt;</a></span><span class="message">and then for hex0 file</span></div><div class="line" id="194634"><span class="nick" style="color:#2e2a4a"><a href="#194634" label="[19:46:34]">&lt;stikonas&gt;</a></span><span class="message">all the same stuff plus</span></div><div class="line" id="194637"><span class="nick" style="color:#2e2a4a"><a href="#194637" label="[19:46:37]">&lt;stikonas&gt;</a></span><span class="message">update file size in <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/riscv64/hex0_riscv64.hex0#L66">https://github.com/oriansj/stage0-posix/blob/master/riscv64/hex0_riscv64.hex0#L66</a> </span></div><div class="line" id="194643"><span class="nick" style="color:#2e2a4a"><a href="#194643" label="[19:46:43]">&lt;stikonas&gt;</a></span><span class="message">right now it is 0x188</span></div><div class="line" id="194658"><span class="nick" style="color:#2e2a4a"><a href="#194658" label="[19:46:58]">&lt;stikonas&gt;</a></span><span class="message">88 01 00 00 00 00 00 00 ## p_filesz</span></div><div class="line" id="194704"><span class="nick" style="color:#2e2a4a"><a href="#194704" label="[19:47:04]">&lt;stikonas&gt;</a></span><span class="message">and same in next line</span></div><div class="line" id="194705"><span class="nick" style="color:#234e69"><a href="#194705" label="[19:47:05]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/gbrlwck/stage0-posix/commit/14792da03ad46ada370986671f95b50c4f00ed41">https://github.com/gbrlwck/stage0-posix/commit/14792da03ad46ada370986671f95b50c4f00ed41</a> </span></div><div class="line" id="194723"><span class="nick" style="color:#2e2a4a"><a href="#194723" label="[19:47:23]">&lt;stikonas&gt;</a></span><span class="message">ok, looks good</span></div><div class="line" id="194735"><span class="nick" style="color:#2e2a4a"><a href="#194735" label="[19:47:35]">&lt;stikonas&gt;</a></span><span class="message">do hex0 file and update the seed too...</span></div><div class="line" id="194807"><span class="nick" style="color:#234e69"><a href="#194807" label="[19:48:07]">&lt;gbrlwck&gt;</a></span><span class="message">p_filesz is the file-size of the compiled file in bytes?</span></div><div class="line" id="194812"><span class="nick" style="color:#2e2a4a"><a href="#194812" label="[19:48:12]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="194819"><span class="nick" style="color:#2e2a4a"><a href="#194819" label="[19:48:19]">&lt;stikonas&gt;</a></span><span class="message">so you are adding 1 instruction</span></div><div class="line" id="194828"><span class="nick" style="color:#2e2a4a"><a href="#194828" label="[19:48:28]">&lt;stikonas&gt;</a></span><span class="message">that's +4 byes</span></div><div class="line" id="194830"><span class="nick" style="color:#2e2a4a"><a href="#194830" label="[19:48:30]">&lt;stikonas&gt;</a></span><span class="message">byteds</span></div><div class="line" id="194921"><span class="nick" style="color:#234e69"><a href="#194921" label="[19:49:21]">&lt;gbrlwck&gt;</a></span><span class="message">this will be 8b 01 00 00 00 00 00 00 ## p_filesz ?</span></div><div class="line" id="195247"><span class="nick" style="color:#234e69"><a href="#195247" label="[19:52:47]">&lt;gbrlwck&gt;</a></span><span class="message">and also adjust p_memsz?</span></div><div class="line" id="195451"><span class="nick" style="color:#2e2a4a"><a href="#195451" label="[19:54:51]">&lt;stikonas&gt;</a></span><span class="message">yes, that's right</span></div><div class="line" id="195508"><span class="nick" style="color:#2e2a4a"><a href="#195508" label="[19:55:08]">&lt;stikonas&gt;</a></span><span class="message">sorry I'm on and off here, so might need to wait a bit for my answers</span></div><div class="line" id="195537"><span class="nick" style="color:#234e69"><a href="#195537" label="[19:55:37]">&lt;gbrlwck&gt;</a></span><span class="message">ok, so now my 1.3K assembly hex0 produces a 396 Byte hex0_bootstrapped; but this in turn produces a 392 Byte hex0_bootstrapped2</span></div><div class="line" id="195654"><span class="nick" style="color:#2e2a4a"><a href="#195654" label="[19:56:54]">&lt;stikonas&gt;</a></span><span class="message">396 is the correct size</span></div><div class="line" id="195700"><span class="nick" style="color:#2e2a4a"><a href="#195700" label="[19:57:00]">&lt;stikonas&gt;</a></span><span class="message">are you running it on new source?</span></div><div class="line" id="195707"><span class="nick" style="color:#2e2a4a"><a href="#195707" label="[19:57:07]">&lt;stikonas&gt;</a></span><span class="message">when it produces 392 byte binary</span></div><div class="line" id="195738"><span class="nick" style="color:#234e69"><a href="#195738" label="[19:57:38]">&lt;gbrlwck&gt;</a></span><span class="message">all run against the new source</span></div><div class="line" id="195752"><span class="nick" style="color:#2e2a4a"><a href="#195752" label="[19:57:52]">&lt;stikonas&gt;</a></span><span class="message">or sorry, also</span></div><div class="line" id="195756"><span class="nick" style="color:#2e2a4a"><a href="#195756" label="[19:57:56]">&lt;stikonas&gt;</a></span><span class="message">it's not 88 01</span></div><div class="line" id="195800"><span class="nick" style="color:#2e2a4a"><a href="#195800" label="[19:58:00]">&lt;stikonas&gt;</a></span><span class="message">not 8b 01</span></div><div class="line" id="195802"><span class="nick" style="color:#2e2a4a"><a href="#195802" label="[19:58:02]">&lt;stikonas&gt;</a></span><span class="message">but 8c 01</span></div><div class="line" id="195819"><span class="nick" style="color:#234e69"><a href="#195819" label="[19:58:19]">&lt;gbrlwck&gt;</a></span><span class="message">yeah, right</span></div><div class="line" id="195832"><span class="nick" style="color:#2e2a4a"><a href="#195832" label="[19:58:32]">&lt;stikonas&gt;</a></span><span class="message">c is 12</span></div><div class="line" id="195843"><span class="nick" style="color:#2e2a4a"><a href="#195843" label="[19:58:43]">&lt;stikonas&gt;</a></span><span class="message">but that shouldn't really affect the size</span></div><div class="line" id="195858"><span class="nick" style="color:#2e2a4a"><a href="#195858" label="[19:58:58]">&lt;stikonas&gt;</a></span><span class="message">against new source it should be producing 396 byte binary</span></div><div class="line" id="195903"><span class="nick" style="color:#2e2a4a"><a href="#195903" label="[19:59:03]">&lt;stikonas&gt;</a></span><span class="message">maybe show the commit?</span></div><div class="line" id="195959"><span class="nick" style="color:#234e69"><a href="#195959" label="[19:59:59]">&lt;gbrlwck&gt;</a></span><span class="message">this looks promising: <a rel="nofollow" href="https://termbin.com/nrcm">https://termbin.com/nrcm</a> </span></div><div class="line" id="200039"><span class="nick" style="color:#234e69"><a href="#200039" label="[20:00:39]">&lt;gbrlwck&gt;</a></span><span class="message">i fixed the size(s) and now it seems to work</span></div><div class="line" id="200104"><span class="nick" style="color:#2e2a4a"><a href="#200104" label="[20:01:04]">&lt;stikonas&gt;</a></span><span class="message">ok, good</span></div><div class="line" id="200104"><span class="nick" style="color:#234e69"><a href="#200104" label="[20:01:04]">&lt;gbrlwck&gt;</a></span><span class="message">so should this (hex0_b or hex0_b2) become the new seed?</span></div><div class="line" id="200112"><span class="nick" style="color:#2e2a4a"><a href="#200112" label="[20:01:12]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="200118"><span class="nick" style="color:#2e2a4a"><a href="#200118" label="[20:01:18]">&lt;stikonas&gt;</a></span><span class="message">well, they are identical</span></div><div class="line" id="200128"><span class="nick" style="color:#2e2a4a"><a href="#200128" label="[20:01:28]">&lt;stikonas&gt;</a></span><span class="message">so first push this seed to bootstrap-seeds repository</span></div><div class="line" id="200134"><span class="nick" style="color:#2e2a4a"><a href="#200134" label="[20:01:34]">&lt;stikonas&gt;</a></span><span class="message">along with a copy of hex0 source</span></div><div class="line" id="200149"><span class="nick" style="color:#2e2a4a"><a href="#200149" label="[20:01:49]">&lt;stikonas&gt;</a></span><span class="message">to here <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/tree/master/POSIX/riscv64">https://github.com/oriansj/bootstrap-seeds/tree/master/POSIX/riscv64</a> </span></div><div class="line" id="200156"><span class="nick" style="color:#2e2a4a"><a href="#200156" label="[20:01:56]">&lt;stikonas&gt;</a></span><span class="message">then once oriansj merges it</span></div><div class="line" id="200216"><span class="nick" style="color:#2e2a4a"><a href="#200216" label="[20:02:16]">&lt;stikonas&gt;</a></span><span class="message">you can also update bootstrap-seeds submodule in stage0-posix</span></div><div class="line" id="200249"><span class="nick" style="color:#2e2a4a"><a href="#200249" label="[20:02:49]">&lt;stikonas&gt;</a></span><span class="message">(after bootstrap seeds is merged just go to bootstrap-seeds subdirectory, git switch master; git pull)</span></div><div class="line" id="200305"><span class="nick" style="color:#2e2a4a"><a href="#200305" label="[20:03:05]">&lt;stikonas&gt;</a></span><span class="message">then it will show up in git status</span></div><div class="line" id="200310"><span class="nick" style="color:#2e2a4a"><a href="#200310" label="[20:03:10]">&lt;stikonas&gt;</a></span><span class="message">and cna do git add bootstrap-seeds</span></div><div class="line" id="200340"><span class="nick" style="color:#2e2a4a"><a href="#200340" label="[20:03:40]">&lt;stikonas&gt;</a></span><span class="message">after that you should be able to proceed 1 step further until things break...</span></div><div class="line" id="200353"><span class="nick" style="color:#2e2a4a"><a href="#200353" label="[20:03:53]">&lt;stikonas&gt;</a></span><span class="message">I think hex1 binary and hex2 will also need fixing</span></div><div class="line" id="201117"><span class="nick" style="color:#234e69"><a href="#201117" label="[20:11:17]">&lt;gbrlwck&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/pull/11">https://github.com/oriansj/bootstrap-seeds/pull/11</a> </span></div><div class="line" id="201719"><span class="nick" style="color:#2e2a4a"><a href="#201719" label="[20:17:19]">&lt;stikonas&gt;</a></span><span class="message">ok looks good</span></div><div class="line" id="201732"><span class="nick" style="color:#2e2a4a"><a href="#201732" label="[20:17:32]">&lt;stikonas&gt;</a></span><span class="message">I can't merge myself though</span></div><div class="line" id="201758"><span class="nick" style="color:#2e2a4a"><a href="#201758" label="[20:17:58]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: does it build (broken) hex1 now?</span></div><div class="line" id="201818"><span class="nick" style="color:#234e69"><a href="#201818" label="[20:18:18]">&lt;gbrlwck&gt;</a></span><span class="message">lemme check</span></div><div class="line" id="201844"><span class="nick" style="color:#2e2a4a"><a href="#201844" label="[20:18:44]">&lt;stikonas&gt;</a></span><span class="message">oh, actually hex1 has initialization at the beginning</span></div><div class="line" id="201853"><span class="nick" style="color:#2e2a4a"><a href="#201853" label="[20:18:53]">&lt;stikonas&gt;</a></span><span class="message">so everything else might just work</span></div><div class="line" id="201918"><span class="nick" style="color:#234e69"><a href="#201918" label="[20:19:18]">&lt;gbrlwck&gt;</a></span><span class="message">hex1 compiles fine</span></div><div class="line" id="201942"><span class="nick" style="color:#2e2a4a"><a href="#201942" label="[20:19:42]">&lt;stikonas&gt;</a></span><span class="message">and later?</span></div><div class="line" id="202259"><span class="nick" style="color:#234e69"><a href="#202259" label="[20:22:59]">&lt;gbrlwck&gt;</a></span><span class="message">kaem-0 built successfully</span></div><div class="line" id="202316"><span class="nick" style="color:#234e69"><a href="#202316" label="[20:23:16]">&lt;gbrlwck&gt;</a></span><span class="message">./riscv64/artifact/kaem-0 stops at</span></div><div class="line" id="202318"><span class="nick" style="color:#234e69"><a href="#202318" label="[20:23:18]">&lt;gbrlwck&gt;</a></span><span class="message"> +&gt; ./riscv64/artifact/M0 ./riscv64/artifact/cc_riscv64.M1 ./riscv64/artifact/cc_riscv64.hex2</span></div><div class="line" id="202326"><span class="nick" style="color:#234e69"><a href="#202326" label="[20:23:26]">&lt;gbrlwck&gt;</a></span><span class="message">Subprocess error</span></div><div class="line" id="202420"><span class="nick" style="color:#234e69"><a href="#202420" label="[20:24:20]">&lt;gbrlwck&gt;</a></span><span class="message">i'll probably continue my works tomorrow; need to eat some dinner now</span></div><div class="line" id="202537"><span class="nick" style="color:#2e2a4a"><a href="#202537" label="[20:25:37]">&lt;stikonas&gt;</a></span><span class="message">sure</span></div><div class="line" id="202546"><span class="nick" style="color:#2e2a4a"><a href="#202546" label="[20:25:46]">&lt;stikonas&gt;</a></span><span class="message">thanks for notifying us about this</span></div><div class="line" id="202620"><span class="nick" style="color:#234e69"><a href="#202620" label="[20:26:20]">&lt;gbrlwck&gt;</a></span><span class="message">you're welcome!</span></div><div class="line" id="202621"><span class="nick" style="color:#2e2a4a"><a href="#202621" label="[20:26:21]">&lt;stikonas&gt;</a></span><span class="message">so I guess next is M0 that is broken</span></div><div class="line" id="202631"><span class="nick" style="color:#234e69"><a href="#202631" label="[20:26:31]">&lt;gbrlwck&gt;</a></span><span class="message">i guess so, too ;)</span></div><div class="line" id="202724"><span class="nick" style="color:#2e2a4a"><a href="#202724" label="[20:27:24]">&lt;stikonas&gt;</a></span><span class="message">and it's coincidentally also s4</span></div><div class="line" id="202735"><span class="nick" style="color:#2e2a4a"><a href="#202735" label="[20:27:35]">&lt;stikonas&gt;</a></span><span class="message">although it does completely different thing there</span></div><div class="line" id="202745"><span class="nick" style="color:#2e2a4a"><a href="#202745" label="[20:27:45]">&lt;stikonas&gt;</a></span><span class="message">it's a pointer to linked list</span></div><div class="line" id="222459"><span class="nick" style="color:#2e2a4a"><a href="#222459" label="[22:24:59]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, so actually we don't even have M2-Planet -&gt; mes step on amd64</span></div><div class="line" id="222614"><span class="nick" style="color:#2e2a4a"><a href="#222614" label="[22:26:14]">&lt;stikonas&gt;</a></span><span class="message">I think nobody tried building it yet, and there is no lib/linux/x86_64-mes-m2 directory</span></div><div class="line" id="222729"><span class="nick" style="color:#2e2a4a"><a href="#222729" label="[22:27:29]">&lt;stikonas&gt;</a></span><span class="message">I have some initial adjustment for live-bootstrap that allows using stage0-posix on amd64 <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/8c0694bcdd8ce0f01e77b8e55d5cb73ea230b85e">https://github.com/stikonas/live-bootstrap/commit/8c0694bcdd8ce0f01e77b8e55d5cb73ea230b85e</a> </span></div><div class="line" id="222741"><span class="nick" style="color:#2e2a4a"><a href="#222741" label="[22:27:41]">&lt;stikonas&gt;</a></span><span class="message">although, of course it later builds 32-bit mes</span></div><div class="line" id="224156"><span class="nick" style="color:#6b8072"><a href="#224156" label="[22:41:56]">&lt;fossy&gt;</a></span><span class="message">yes, correct</span></div><div class="line" id="231311"><span class="nick" style="color:#8dd3c7"><a href="#231311" label="[23:13:11]">&lt;oriansj&gt;</a></span><span class="message">bootstrap-seeds has been merged</span></div><div class="line" id="231445"><span class="nick" style="color:#2e2a4a"><a href="#231445" label="[23:14:45]">&lt;stikonas&gt;</a></span><span class="message">oriansj: rest is <a rel="nofollow" href="https://github.com/gbrlwck/stage0-posix/commits/master">https://github.com/gbrlwck/stage0-posix/commits/master</a>  but if you want to merge you probably want to squash and also pull in bootstrap seeds</span></div><div class="line" id="231815"><span class="nick" style="color:#8dd3c7"><a href="#231815" label="[23:18:15]">&lt;oriansj&gt;</a></span><span class="message">yep, all merged in now</span></div><div class="line" id="231836"><span class="nick" style="color:#2e2a4a"><a href="#231836" label="[23:18:36]">&lt;stikonas&gt;</a></span><span class="message">so hex1 and hex2 are fine</span></div><div class="line" id="231840"><span class="nick" style="color:#2e2a4a"><a href="#231840" label="[23:18:40]">&lt;stikonas&gt;</a></span><span class="message">but M0 has similar issue</span></div><div class="line" id="232212"><span class="nick" style="color:#8dd3c7"><a href="#232212" label="[23:22:12]">&lt;oriansj&gt;</a></span><span class="message">fossy: I still haven't had time to incorporate the meslibc functions from mes-m2 into M2libc but once I do, then all of the architectures should be able to build and run MesCC (even if MesCC doesn't support that arch yet)</span></div><div class="line" id="232404"><span class="nick" style="color:#8dd3c7"><a href="#232404" label="[23:24:04]">&lt;oriansj&gt;</a></span><span class="message">plus I still need to fix the security issue with untar with untrusted inputs.</span></div><div class="line" id="232517"><span class="nick" style="color:#8dd3c7"><a href="#232517" label="[23:25:17]">&lt;oriansj&gt;</a></span><span class="message">and get back to doing the armv7l port of stage0-posix</span></div><div class="line" id="232929"><span class="nick" style="color:#2e2a4a"><a href="#232929" label="[23:29:29]">&lt;stikonas&gt;</a></span><span class="message">oriansj: can we actually take those functions? M2libc is LGPL and meslibc is GPL</span></div><div class="line" id="233010"><span class="nick" style="color:#2e2a4a"><a href="#233010" label="[23:30:10]">&lt;stikonas&gt;</a></span><span class="message">although, M2libc does need some improvements</span></div><div class="line" id="233022"><span class="nick" style="color:#2e2a4a"><a href="#233022" label="[23:30:22]">&lt;stikonas&gt;</a></span><span class="message">it's a bit annoying to write each function in assembly</span></div><div class="line" id="233051"><span class="nick" style="color:#2e2a4a"><a href="#233051" label="[23:30:51]">&lt;stikonas&gt;</a></span><span class="message">I think usually libc's have a few syscall functions (one per syscall number of arguments)</span></div><div class="line" id="235307"><span class="nick" style="color:#8dd3c7"><a href="#235307" label="[23:53:07]">&lt;oriansj&gt;</a></span><span class="message">stikonas: true; however debugging M2libc syscalls is easier than meslibc syscalls (you can just do b FUNCTION_name and boom done)</span></div><div class="line" id="235321"><span class="nick" style="color:#2e2a4a"><a href="#235321" label="[23:53:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's true</span></div><div class="line" id="235347"><span class="nick" style="color:#2e2a4a"><a href="#235347" label="[23:53:47]">&lt;stikonas&gt;</a></span><span class="message">we had to do quite a bit of debugging for risc-v just before stage0-posix release</span></div><div class="line" id="235459"><span class="nick" style="color:#8dd3c7"><a href="#235459" label="[23:54:59]">&lt;oriansj&gt;</a></span><span class="message">So in many ways meslibc gets to benefit from what is learned by stage0-posix and M2-Planet; it is why MesCC always gets architectures AFTER M2-Planet is up and working</span></div><div class="line" id="235537"><span class="nick" style="color:#8dd3c7"><a href="#235537" label="[23:55:37]">&lt;oriansj&gt;</a></span><span class="message">hence why despite starting months earlier on RISC-V support, M2-Planet+stage0-posix finished getting it first</span></div><div class="line" id="235602"><span class="nick" style="color:#2e2a4a"><a href="#235602" label="[23:56:02]">&lt;stikonas&gt;</a></span><span class="message">well, laanwj got stuck with old hex2 syntax...</span></div><div class="line" id="235625"><span class="nick" style="color:#8dd3c7"><a href="#235625" label="[23:56:25]">&lt;oriansj&gt;</a></span><span class="message">until I had to fix it for M2-Planet+stage0-posix</span></div><div class="line" id="235632"><span class="nick" style="color:#2e2a4a"><a href="#235632" label="[23:56:32]">&lt;stikonas&gt;</a></span><span class="message">or maybe too many bitcoin PRs to merge...</span></div><div class="line" id="235642"><span class="nick" style="color:#8dd3c7"><a href="#235642" label="[23:56:42]">&lt;oriansj&gt;</a></span><span class="message">hard to say honestly</span></div><div class="line" id="235707"><span class="nick" style="color:#8dd3c7"><a href="#235707" label="[23:57:07]">&lt;oriansj&gt;</a></span><span class="message">but now the work is done and it should be much easier for MesCC to gain RISC-V support</span></div><br /></div></body></html>