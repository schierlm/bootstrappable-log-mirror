<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-10-07.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="013708"><span class="nick" style="color:#8dd3c7"><a href="#013708" label="[01:37:08]">&lt;oriansj&gt;</a></span><span class="message">stikonas: thank you. I guess I was too tired to notice that.</span></div><div class="line" id="013720"><span class="nick" style="color:#2e2a4a"><a href="#013720" label="[01:37:20]">&lt;stikonas&gt;</a></span><span class="message">well, this happens if you work too late</span></div><div class="line" id="013726"><span class="nick" style="color:#2e2a4a"><a href="#013726" label="[01:37:26]">&lt;stikonas&gt;</a></span><span class="message">happened to me too...</span></div><div class="line" id="013739"><span class="nick" style="color:#2e2a4a"><a href="#013739" label="[01:37:39]">&lt;stikonas&gt;</a></span><span class="message">anyway, I've got the next interesting thing</span></div><div class="line" id="013758"><span class="nick" style="color:#2e2a4a"><a href="#013758" label="[01:37:58]">&lt;stikonas&gt;</a></span><span class="message">fossy, oriansj: do you want conditionals in kaem?</span></div><div class="line" id="014001"><span class="nick" style="color:#8dd3c7"><a href="#014001" label="[01:40:01]">&lt;oriansj&gt;</a></span><span class="message">well with it we could enable the use of kaem scripts for mescc-tools and M2-Planet tests.</span></div><div class="line" id="014134"><span class="nick" style="color:#2e2a4a"><a href="#014134" label="[01:41:34]">&lt;stikonas&gt;</a></span><span class="message">so I mostly got it working</span></div><div class="line" id="014146"><span class="nick" style="color:#8dd3c7"><a href="#014146" label="[01:41:46]">&lt;oriansj&gt;</a></span><span class="message">nice</span></div><div class="line" id="014157"><span class="nick" style="color:#2e2a4a"><a href="#014157" label="[01:41:57]">&lt;stikonas&gt;</a></span><span class="message">it's not 100% nice with output in --verbose mode but not too bad</span></div><div class="line" id="014401"><span class="nick" style="color:#8dd3c7"><a href="#014401" label="[01:44:01]">&lt;oriansj&gt;</a></span><span class="message">So it'll be some work</span></div><div class="line" id="014441"><span class="nick" style="color:#2e2a4a"><a href="#014441" label="[01:44:41]">&lt;stikonas&gt;</a></span><span class="message">well, let me paste how it looks</span></div><div class="line" id="014443"><span class="nick" style="color:#8dd3c7"><a href="#014443" label="[01:44:43]">&lt;oriansj&gt;</a></span><span class="message">and I have some work to do on untar to address: <a rel="nofollow" href="https://www.openwall.com/lists/oss-security/2021/10/03/1">https://www.openwall.com/lists/oss-security/2021/10/03/1</a> </span></div><div class="line" id="014624"><span class="nick" style="color:#2e2a4a"><a href="#014624" label="[01:46:24]">&lt;stikonas&gt;</a></span><span class="message">so for this kame file <a rel="nofollow" href="https://paste.debian.net/1214547/">https://paste.debian.net/1214547/</a> </span></div><div class="line" id="014631"><span class="nick" style="color:#2e2a4a"><a href="#014631" label="[01:46:31]">&lt;stikonas&gt;</a></span><span class="message">I get the following output <a rel="nofollow" href="https://paste.debian.net/1214548/">https://paste.debian.net/1214548/</a> </span></div><div class="line" id="014921"><span class="nick" style="color:#8dd3c7"><a href="#014921" label="[01:49:21]">&lt;oriansj&gt;</a></span><span class="message">so didnt' echo the else</span></div><div class="line" id="015039"><span class="nick" style="color:#2e2a4a"><a href="#015039" label="[01:50:39]">&lt;stikonas&gt;</a></span><span class="message">if I have else block, it echos just else but nothing after else</span></div><div class="line" id="015043"><span class="nick" style="color:#2e2a4a"><a href="#015043" label="[01:50:43]">&lt;stikonas&gt;</a></span><span class="message">but else is printed</span></div><div class="line" id="015059"><span class="nick" style="color:#2e2a4a"><a href="#015059" label="[01:50:59]">&lt;stikonas&gt;</a></span><span class="message">and then in that case fi is not printed</span></div><div class="line" id="015117"><span class="nick" style="color:#2e2a4a"><a href="#015117" label="[01:51:17]">&lt;stikonas&gt;</a></span><span class="message">so maybe it's acceptable...</span></div><div class="line" id="015149"><span class="nick" style="color:#2e2a4a"><a href="#015149" label="[01:51:49]">&lt;stikonas&gt;</a></span><span class="message">and this is the implementation: <a rel="nofollow" href="https://github.com/stikonas/mescc-tools/commit/8831dac1366c979df3e1d226e30bf6c8f5729c46">https://github.com/stikonas/mescc-tools/commit/8831dac1366c979df3e1d226e30bf6c8f5729c46</a> </span></div><div class="line" id="015536"><span class="nick" style="color:#2e2a4a"><a href="#015536" label="[01:55:36]">&lt;stikonas&gt;</a></span><span class="message">ok, I made a PR now</span></div><div class="line" id="015542"><span class="nick" style="color:#8dd3c7"><a href="#015542" label="[01:55:42]">&lt;oriansj&gt;</a></span><span class="message">the old_VERBOSE might not be the right way.</span></div><div class="line" id="015547"><span class="nick" style="color:#2e2a4a"><a href="#015547" label="[01:55:47]">&lt;stikonas&gt;</a></span><span class="message">fossy: you might want to take a look <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/pull/28">https://github.com/oriansj/mescc-tools/pull/28</a> </span></div><div class="line" id="015549"><span class="nick" style="color:#2e2a4a"><a href="#015549" label="[01:55:49]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="015606"><span class="nick" style="color:#2e2a4a"><a href="#015606" label="[01:56:06]">&lt;stikonas&gt;</a></span><span class="message">oriansj: what do you suggest?</span></div><div class="line" id="015721"><span class="nick" style="color:#2e2a4a"><a href="#015721" label="[01:57:21]">&lt;stikonas&gt;</a></span><span class="message">well, even with this PR conditionals are not fully useful as one needs test command...</span></div><div class="line" id="015733"><span class="nick" style="color:#2e2a4a"><a href="#015733" label="[01:57:33]">&lt;stikonas&gt;</a></span><span class="message">but one step at a time...</span></div><div class="line" id="020008"><span class="nick" style="color:#8dd3c7"><a href="#020008" label="[02:00:08]">&lt;oriansj&gt;</a></span><span class="message">break it into 2 loops, one for the if and one for the else (if it exists)</span></div><div class="line" id="020111"><span class="nick" style="color:#2e2a4a"><a href="#020111" label="[02:01:11]">&lt;stikonas&gt;</a></span><span class="message">yeah, maybe that would be clearer...</span></div><div class="line" id="021107"><span class="nick" style="color:#2e2a4a"><a href="#021107" label="[02:11:07]">&lt;stikonas&gt;</a></span><span class="message">hmm, somehow 2 loops look worse...</span></div><div class="line" id="021115"><span class="nick" style="color:#2e2a4a"><a href="#021115" label="[02:11:15]">&lt;stikonas&gt;</a></span><span class="message">or at least my implementation</span></div><div class="line" id="021221"><span class="nick" style="color:#2e2a4a"><a href="#021221" label="[02:12:21]">&lt;stikonas&gt;</a></span><span class="message">wrote something like <a rel="nofollow" href="https://paste.debian.net/1214551/">https://paste.debian.net/1214551/</a>  but I don't like it...</span></div><div class="line" id="021426"><span class="nick" style="color:#2e2a4a"><a href="#021426" label="[02:14:26]">&lt;stikonas&gt;</a></span><span class="message">it's basically twice as much code</span></div><div class="line" id="022108"><span class="nick" style="color:#2e2a4a"><a href="#022108" label="[02:21:08]">&lt;stikonas&gt;</a></span><span class="message">probably can't do much more with kaem without requiring extra syscalls</span></div><div class="line" id="022209"><span class="nick" style="color:#2e2a4a"><a href="#022209" label="[02:22:09]">&lt;stikonas&gt;</a></span><span class="message">globs need opendir, $() needs dup2. for loops might not need extra syscalls but tricky to implement with current design (kaem reads line by line)</span></div><div class="line" id="025135"><span class="nick" style="color:#8dd3c7"><a href="#025135" label="[02:51:35]">&lt;oriansj&gt;</a></span><span class="message">stikonas: absolutely true. kaem was never designed for half the things it does. They kind of grew organically.</span></div><div class="line" id="025221"><span class="nick" style="color:#8dd3c7"><a href="#025221" label="[02:52:21]">&lt;oriansj&gt;</a></span><span class="message">So the question becomes should we continue to extend kaem or should we pick up a better shell?</span></div><div class="line" id="025230"><span class="nick" style="color:#2e2a4a"><a href="#025230" label="[02:52:30]">&lt;stikonas&gt;</a></span><span class="message">well, we have bash</span></div><div class="line" id="025240"><span class="nick" style="color:#2e2a4a"><a href="#025240" label="[02:52:40]">&lt;stikonas&gt;</a></span><span class="message">which is built fairly quickly</span></div><div class="line" id="025309"><span class="nick" style="color:#2e2a4a"><a href="#025309" label="[02:53:09]">&lt;stikonas&gt;</a></span><span class="message">but I don't know if we want something between bash and kaem</span></div><div class="line" id="025322"><span class="nick" style="color:#2e2a4a"><a href="#025322" label="[02:53:22]">&lt;stikonas&gt;</a></span><span class="message">at some point we might get gash</span></div><div class="line" id="025325"><span class="nick" style="color:#8dd3c7"><a href="#025325" label="[02:53:25]">&lt;oriansj&gt;</a></span><span class="message">for example: <a rel="nofollow" href="https://github.com/rain-1/s">https://github.com/rain-1/s</a> </span></div><div class="line" id="025404"><span class="nick" style="color:#2e2a4a"><a href="#025404" label="[02:54:04]">&lt;stikonas&gt;</a></span><span class="message">but we should definitely keep a shell (kaem) that requires minimal number of syscalls</span></div><div class="line" id="025447"><span class="nick" style="color:#2e2a4a"><a href="#025447" label="[02:54:47]">&lt;stikonas&gt;</a></span><span class="message">I think I saw this s</span></div><div class="line" id="025507"><span class="nick" style="color:#2e2a4a"><a href="#025507" label="[02:55:07]">&lt;stikonas&gt;</a></span><span class="message">I don't remember what was the issue with it that prevented it from being included into live-bootstrap</span></div><div class="line" id="025538"><span class="nick" style="color:#8dd3c7"><a href="#025538" label="[02:55:38]">&lt;oriansj&gt;</a></span><span class="message">it wasn't buildable previously as if I remember correctly.</span></div><div class="line" id="025619"><span class="nick" style="color:#2e2a4a"><a href="#025619" label="[02:56:19]">&lt;stikonas&gt;</a></span><span class="message">possibly</span></div><div class="line" id="025634"><span class="nick" style="color:#2e2a4a"><a href="#025634" label="[02:56:34]">&lt;stikonas&gt;</a></span><span class="message">maybe tcc had problems with it</span></div><div class="line" id="025640"><span class="nick" style="color:#2e2a4a"><a href="#025640" label="[02:56:40]">&lt;stikonas&gt;</a></span><span class="message">or maybe uses more libc than mes has</span></div><div class="line" id="025649"><span class="nick" style="color:#2e2a4a"><a href="#025649" label="[02:56:49]">&lt;stikonas&gt;</a></span><span class="message">probably the latter</span></div><div class="line" id="025754"><span class="nick" style="color:#8dd3c7"><a href="#025754" label="[02:57:54]">&lt;oriansj&gt;</a></span><span class="message">but that is the problem with shell interpreters.</span></div><div class="line" id="025817"><span class="nick" style="color:#8dd3c7"><a href="#025817" label="[02:58:17]">&lt;oriansj&gt;</a></span><span class="message">They are very heavy in syscalls required and can easily turn into unmaintainable messes</span></div><div class="line" id="025832"><span class="nick" style="color:#2e2a4a"><a href="#025832" label="[02:58:32]">&lt;stikonas&gt;</a></span><span class="message">well, I started working on if/else cause that might be useful for multiple arch support...</span></div><div class="line" id="025855"><span class="nick" style="color:#8dd3c7"><a href="#025855" label="[02:58:55]">&lt;oriansj&gt;</a></span><span class="message">with get_machine I am guessing</span></div><div class="line" id="025901"><span class="nick" style="color:#2e2a4a"><a href="#025901" label="[02:59:01]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="025910"><span class="nick" style="color:#2e2a4a"><a href="#025910" label="[02:59:10]">&lt;stikonas&gt;</a></span><span class="message">get_machine needs modifications I guess</span></div><div class="line" id="025915"><span class="nick" style="color:#8dd3c7"><a href="#025915" label="[02:59:15]">&lt;oriansj&gt;</a></span><span class="message">no</span></div><div class="line" id="025919"><span class="nick" style="color:#2e2a4a"><a href="#025919" label="[02:59:19]">&lt;stikonas&gt;</a></span><span class="message">we can't redirect stdout</span></div><div class="line" id="025920"><span class="nick" style="color:#8dd3c7"><a href="#025920" label="[02:59:20]">&lt;oriansj&gt;</a></span><span class="message">but I got an idea</span></div><div class="line" id="025920"><span class="nick" style="color:#2e2a4a"><a href="#025920" label="[02:59:20]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="025945"><span class="nick" style="color:#2e2a4a"><a href="#025945" label="[02:59:45]">&lt;stikonas&gt;</a></span><span class="message">well, it can return arch number...</span></div><div class="line" id="025957"><span class="nick" style="color:#2e2a4a"><a href="#025957" label="[02:59:57]">&lt;stikonas&gt;</a></span><span class="message">oh, that's still trickyu</span></div><div class="line" id="025959"><span class="nick" style="color:#2e2a4a"><a href="#025959" label="[02:59:59]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="030004"><span class="nick" style="color:#8dd3c7"><a href="#030004" label="[03:00:04]">&lt;oriansj&gt;</a></span><span class="message">get_machine -if x86 -exec &quot;./kaem -f foo&quot;</span></div><div class="line" id="030012"><span class="nick" style="color:#2e2a4a"><a href="#030012" label="[03:00:12]">&lt;stikonas&gt;</a></span><span class="message">do we actually need get_machine?</span></div><div class="line" id="030022"><span class="nick" style="color:#2e2a4a"><a href="#030022" label="[03:00:22]">&lt;stikonas&gt;</a></span><span class="message">if we just define ARCH=&quot;whatever&quot; in initial kaem.arch</span></div><div class="line" id="030027"><span class="nick" style="color:#8dd3c7"><a href="#030027" label="[03:00:27]">&lt;oriansj&gt;</a></span><span class="message">no we could create something custom</span></div><div class="line" id="030101"><span class="nick" style="color:#2e2a4a"><a href="#030101" label="[03:01:01]">&lt;stikonas&gt;</a></span><span class="message">although, initial kaem.arch is kaem-minimal</span></div><div class="line" id="030104"><span class="nick" style="color:#2e2a4a"><a href="#030104" label="[03:01:04]">&lt;stikonas&gt;</a></span><span class="message">so can't define much</span></div><div class="line" id="030123"><span class="nick" style="color:#2e2a4a"><a href="#030123" label="[03:01:23]">&lt;stikonas&gt;</a></span><span class="message">well, actually we can define after we build full kaem</span></div><div class="line" id="030149"><span class="nick" style="color:#8dd3c7"><a href="#030149" label="[03:01:49]">&lt;oriansj&gt;</a></span><span class="message">but kaem might benefit from being able to do: ./kaem -f foo.$(get_machine)</span></div><div class="line" id="030221"><span class="nick" style="color:#2e2a4a"><a href="#030221" label="[03:02:21]">&lt;stikonas&gt;</a></span><span class="message">but $() needs extra syscalls</span></div><div class="line" id="030222"><span class="nick" style="color:#2e2a4a"><a href="#030222" label="[03:02:22]">&lt;stikonas&gt;</a></span><span class="message">dup2</span></div><div class="line" id="030235"><span class="nick" style="color:#8dd3c7"><a href="#030235" label="[03:02:35]">&lt;oriansj&gt;</a></span><span class="message">yeah unfortunately</span></div><div class="line" id="030251"><span class="nick" style="color:#2e2a4a"><a href="#030251" label="[03:02:51]">&lt;stikonas&gt;</a></span><span class="message">hence I'm thinking of just defining it as env variable</span></div><div class="line" id="030321"><span class="nick" style="color:#2e2a4a"><a href="#030321" label="[03:03:21]">&lt;stikonas&gt;</a></span><span class="message">which should be doable</span></div><div class="line" id="030335"><span class="nick" style="color:#2e2a4a"><a href="#030335" label="[03:03:35]">&lt;stikonas&gt;</a></span><span class="message">(possibly just before after.kaem)</span></div><div class="line" id="030343"><span class="nick" style="color:#2e2a4a"><a href="#030343" label="[03:03:43]">&lt;stikonas&gt;</a></span><span class="message">or maybe even earlier</span></div><div class="line" id="034959"><span class="nick" style="color:#8dd3c7"><a href="#034959" label="[03:49:59]">&lt;oriansj&gt;</a></span><span class="message">well extending kaem to have access to the uname data would be trivial</span></div><div class="line" id="050618"><span class="nick" style="color:#6b8072"><a href="#050618" label="[05:06:18]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: conditionals would be nice it was ob my todo list a while ago</span></div><div class="line" id="051849"><span class="nick" style="color:#80b1d3"><a href="#051849" label="[05:18:49]">&lt;pabs3&gt;</a></span><span class="message">will bootstrappable be at LibrePlanet? <a rel="nofollow" href="https://www.fsf.org/blogs/community/libreplanet-2022-returns-online-submit-your-session-proposal-by-dec-1">https://www.fsf.org/blogs/community/libreplanet-2022-returns-online-submit-your-session-proposal-by-dec-1</a> </span></div><div class="line" id="063203"><span class="nick" style="color:#8dd3c7"><a href="#063203" label="[06:32:03]">&lt;oriansj&gt;</a></span><span class="message">pabs3: well the last 3 proposals were rejected. So I think I need to make a much better proposal to get accepted.</span></div><div class="line" id="123245"><span class="nick" style="color:#2e2a4a"><a href="#123245" label="[12:32:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: if you have some spare time maybe review my kaem PR?</span></div><br /></div></body></html>