<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-04-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000224"><span class="nick" style="color:#389600"><a href="#000224" label="[00:02:24]">&lt;Googulator&gt;</a></span><span class="message">looks like some kind of #if...#endif issue</span></div><div class="line" id="000354"><span class="nick" style="color:#389600"><a href="#000354" label="[00:03:54]">&lt;Googulator&gt;</a></span><span class="message">if I remove the #if YYDEBUG ... #endif block from the generated parse.c file, the error changes</span></div><div class="line" id="000403"><span class="nick" style="color:#389600"><a href="#000403" label="[00:04:03]">&lt;Googulator&gt;</a></span><span class="message">(to a missing #endif at the very end)</span></div><div class="line" id="000439"><span class="nick" style="color:#389600"><a href="#000439" label="[00:04:39]">&lt;Googulator&gt;</a></span><span class="message">...is this a tcc preprocessor bug?</span></div><div class="line" id="000724"><span class="nick" style="color:#8dd3c7"><a href="#000724" label="[00:07:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, but strange, why would it not happen before?</span></div><div class="line" id="000822"><span class="nick" style="color:#389600"><a href="#000822" label="[00:08:22]">&lt;Googulator&gt;</a></span><span class="message">given the issues related to 0.9.27 self-hosting with different libcs, I'm not that surprised</span></div><div class="line" id="001733"><span class="nick" style="color:#389600"><a href="#001733" label="[00:17:33]">&lt;Googulator&gt;</a></span><span class="message">alright, the preprocessor is going absolutely haywire indeed</span></div><div class="line" id="001840"><span class="nick" style="color:#389600"><a href="#001840" label="[00:18:40]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/Googulator/3ef74f629f74f2705ed267bdcdbbf196">https://gist.github.com/Googulator/3ef74f629f74f2705ed267bdcdbbf196</a> </span></div><div class="line" id="002730"><span class="nick" style="color:#389600"><a href="#002730" label="[00:27:30]">&lt;Googulator&gt;</a></span><span class="message">tried generating with byacc instead - it succeeds (on parse.y), and the resulting parse.c does compile with tcc (invoked by hand), unlike the one made by heirloom yacc</span></div><div class="line" id="002756"><span class="nick" style="color:#389600"><a href="#002756" label="[00:27:56]">&lt;Googulator&gt;</a></span><span class="message">so much for not trying to make byacc + heirloom lex work; maybe it's the easy way out :)</span></div><div class="line" id="004332"><span class="nick" style="color:#8dd3c7"><a href="#004332" label="[00:43:32]">&lt;stikonas&gt;</a></span><span class="message">yeah, if byacc works, let's use it</span></div><div class="line" id="004343"><span class="nick" style="color:#8dd3c7"><a href="#004343" label="[00:43:43]">&lt;stikonas&gt;</a></span><span class="message">then we don't even need to build heirloom yacc?</span></div><div class="line" id="004408"><span class="nick" style="color:#8dd3c7"><a href="#004408" label="[00:44:08]">&lt;stikonas&gt;</a></span><span class="message">Googulator: also have you removed my heirloom patches?</span></div><div class="line" id="004418"><span class="nick" style="color:#389600"><a href="#004418" label="[00:44:18]">&lt;Googulator&gt;</a></span><span class="message">yes, otherwise it wouldn't even build</span></div><div class="line" id="004421"><span class="nick" style="color:#8dd3c7"><a href="#004421" label="[00:44:21]">&lt;stikonas&gt;</a></span><span class="message">I did some nasty wstring -&gt; string stuff to be able to build</span></div><div class="line" id="004429"><span class="nick" style="color:#8dd3c7"><a href="#004429" label="[00:44:29]">&lt;stikonas&gt;</a></span><span class="message">meslibc didn't have those wide strings</span></div><div class="line" id="011617"><span class="nick" style="color:#389600"><a href="#011617" label="[01:16:17]">&lt;Googulator&gt;</a></span><span class="message">rm: cannot lstat `*/Makefile.in': No such file or directory</span></div><div class="line" id="011618"><span class="nick" style="color:#389600"><a href="#011618" label="[01:16:18]">&lt;Googulator&gt;</a></span><span class="message">rm: cannot lstat `*/*/Makefile.in': No such file or directory</span></div><div class="line" id="011632"><span class="nick" style="color:#389600"><a href="#011632" label="[01:16:32]">&lt;Googulator&gt;</a></span><span class="message">-&gt; Task failed successfully! :)</span></div><div class="line" id="011706"><span class="nick" style="color:#389600"><a href="#011706" label="[01:17:06]">&lt;Googulator&gt;</a></span><span class="message">(this, of course, is the well-known WSL bash globbing bug, which means, flex bootstrap was successful)</span></div><div class="line" id="012417"><span class="nick" style="color:#8dd3c7"><a href="#012417" label="[01:24:17]">&lt;stikonas&gt;</a></span><span class="message">oh you are running it on WSL...</span></div><div class="line" id="012431"><span class="nick" style="color:#8dd3c7"><a href="#012431" label="[01:24:31]">&lt;stikonas&gt;</a></span><span class="message">but yes, good job!</span></div><div class="line" id="012709"><span class="nick" style="color:#389600"><a href="#012709" label="[01:27:09]">&lt;Googulator&gt;</a></span><span class="message">PR time: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/457">https://github.com/fosslinux/live-bootstrap/pull/457</a> </span></div><div class="line" id="012751"><span class="nick" style="color:#389600"><a href="#012751" label="[01:27:51]">&lt;Googulator&gt;</a></span><span class="message">...reuse bit me</span></div><div class="line" id="012818"><span class="nick" style="color:#389600"><a href="#012818" label="[01:28:18]">&lt;Googulator&gt;</a></span><span class="message">How do you even indicate &quot;public domain&quot; in a reuse-compliant way?</span></div><div class="line" id="013034"><span class="nick" style="color:#8dd3c7"><a href="#013034" label="[01:30:34]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="013316"><span class="nick" style="color:#8dd3c7"><a href="#013316" label="[01:33:16]">&lt;stikonas&gt;</a></span><span class="message">there is this page <a rel="nofollow" href="https://opensource.stackexchange.com/questions/13960/which-spdx-license-identifier-should-i-use-for-public-domain">https://opensource.stackexchange.com/questions/13960/which-spdx-license-identifier-should-i-use-for-public-domain</a> </span></div><div class="line" id="013403"><span class="nick" style="color:#8dd3c7"><a href="#013403" label="[01:34:03]">&lt;stikonas&gt;</a></span><span class="message">Googulator: one option is to set it to CC0...</span></div><div class="line" id="013518"><span class="nick" style="color:#8dd3c7"><a href="#013518" label="[01:35:18]">&lt;stikonas&gt;</a></span><span class="message">(especially since you made some modifications...)</span></div><div class="line" id="014719"><span class="nick" style="color:#389600"><a href="#014719" label="[01:47:19]">&lt;Googulator&gt;</a></span><span class="message">...and I've just realized I forgot something</span></div><div class="line" id="014721"><span class="nick" style="color:#389600"><a href="#014721" label="[01:47:21]">&lt;Googulator&gt;</a></span><span class="message">checksums!</span></div><div class="line" id="020143"><span class="nick" style="color:#8dd3c7"><a href="#020143" label="[02:01:43]">&lt;stikonas&gt;</a></span><span class="message">Googulator: should we squash all those commits?</span></div><div class="line" id="020322"><span class="nick" style="color:#389600"><a href="#020322" label="[02:03:22]">&lt;Googulator&gt;</a></span><span class="message">IMO it's good development history, none of the commits are really fixups</span></div><div class="line" id="020512"><span class="nick" style="color:#8dd3c7"><a href="#020512" label="[02:05:12]">&lt;stikonas&gt;</a></span><span class="message">ok, fine</span></div><div class="line" id="021522"><span class="nick" style="color:#389600"><a href="#021522" label="[02:15:22]">&lt;Googulator&gt;</a></span><span class="message">Meanwhile, pushed a workaround for Savannah being unreliable</span></div><div class="line" id="021539"><span class="nick" style="color:#389600"><a href="#021539" label="[02:15:39]">&lt;Googulator&gt;</a></span><span class="message">(backup mirror links to oriansj's files.bootstrapping.world server)</span></div><div class="line" id="021649"><span class="nick" style="color:#8dd3c7"><a href="#021649" label="[02:16:49]">&lt;stikonas&gt;</a></span><span class="message">and  I checked that that weak symbols/exit musl patch is not needed</span></div><div class="line" id="021703"><span class="nick" style="color:#8dd3c7"><a href="#021703" label="[02:17:03]">&lt;stikonas&gt;</a></span><span class="message">got the new checksums too but now they are again out of date...</span></div><div class="line" id="022516"><span class="nick" style="color:#389600"><a href="#022516" label="[02:25:16]">&lt;Googulator&gt;</a></span><span class="message">in other news, openela kernel passed baremetal testing</span></div><div class="line" id="023006"><span class="nick" style="color:#2e2a4a"><a href="#023006" label="[02:30:06]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Arch, base tarball sneaked in because it was printed at the end of bootstrap...</span></div><div class="line" id="024010"><span class="nick" style="color:#6b8072"><a href="#024010" label="[02:40:10]">&lt;oriansj&gt;</a></span><span class="message">Googulator: yeah I setup files.bootstrapping.world to be append only; so it'll have old version around as long as someone needs them and new versions as well; hopefully we don't need more than 200GB of tarballs.</span></div><div class="line" id="114914"><span class="nick" style="color:#389600"><a href="#114914" label="[11:49:14]">&lt;Googulator&gt;</a></span><span class="message">oriansj: can I ask you to add this to files.bootstrapping.world? <a rel="nofollow" href="https://archive.org/download/live-bootstrap-sources/nyacc-1.00.2-lb1.tar.gz">https://archive.org/download/live-bootstrap-sources/nyacc-1.00.2-lb1.tar.gz</a> </span></div><div class="line" id="115246"><span class="nick" style="color:#389600"><a href="#115246" label="[11:52:46]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/356">https://github.com/fosslinux/live-bootstrap/pull/356</a>  is back from the ashes, and will need fresh checksums</span></div><div class="line" id="135301"><span class="nick" style="color:#6b8072"><a href="#135301" label="[13:53:01]">&lt;oriansj&gt;</a></span><span class="message">Googulator: no problem, what is the expected checksum?</span></div><div class="line" id="135701"><span class="nick" style="color:#6b8072"><a href="#135701" label="[13:57:01]">&lt;oriansj&gt;</a></span><span class="message"> 708c943f89c972910e9544ee077771acbd0a2c0fc6d33496fe158264ddb65327 ??</span></div><div class="line" id="141954"><span class="nick" style="color:#389600"><a href="#141954" label="[14:19:54]">&lt;Googulator&gt;</a></span><span class="message">oriansj: yes</span></div><div class="line" id="142038"><span class="nick" style="color:#6b8072"><a href="#142038" label="[14:20:38]">&lt;oriansj&gt;</a></span><span class="message">ok, it is mirror'd</span></div><div class="line" id="142850"><span class="nick" style="color:#389600"><a href="#142850" label="[14:28:50]">&lt;Googulator&gt;</a></span><span class="message">Thanks!</span></div><div class="line" id="144301"><span class="nick" style="color:#2e2a4a"><a href="#144301" label="[14:43:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Hmm, we should be more careful with rnames in live-bootstrap</span></div><div class="line" id="144336"><span class="nick" style="color:#2e2a4a"><a href="#144336" label="[14:43:36]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Right now we were renaming various tcc snapshots from janneke to tcc-0.9.26.tar.gz</span></div><div class="line" id="144413"><span class="nick" style="color:#2e2a4a"><a href="#144413" label="[14:44:13]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But that would not work with files.bootstrapping.world</span></div><div class="line" id="144449"><span class="nick" style="color:#389600"><a href="#144449" label="[14:44:49]">&lt;Googulator&gt;</a></span><span class="message">That's basically something we had this way since time immemorial, but I agree, we shouldn't continue doing that, especially now that there's an established convention for situations like this</span></div><div class="line" id="144459"><span class="nick" style="color:#389600"><a href="#144459" label="[14:44:59]">&lt;Googulator&gt;</a></span><span class="message">should be tcc-0.9.26-lb1.tar.gz</span></div><div class="line" id="144647"><span class="nick" style="color:#389600"><a href="#144647" label="[14:46:47]">&lt;Googulator&gt;</a></span><span class="message">BTW, #356 (mes-0.26 + nyacc regen) is ready for review again</span></div><div class="line" id="144704"><span class="nick" style="color:#389600"><a href="#144704" label="[14:47:04]">&lt;Googulator&gt;</a></span><span class="message">solved the double compilation with a single &quot;replace&quot;</span></div><div class="line" id="144734"><span class="nick" style="color:#389600"><a href="#144734" label="[14:47:34]">&lt;Googulator&gt;</a></span><span class="message">paging @stikonas for risc-v checksums</span></div><div class="line" id="150120"><span class="nick" style="color:#389600"><a href="#150120" label="[15:01:20]">&lt;Googulator&gt;</a></span><span class="message">source repo for the patched nyacc: <a rel="nofollow" href="https://github.com/Googulator/nyacc/tree/rel-1.00-lb">https://github.com/Googulator/nyacc/tree/rel-1.00-lb</a> </span></div><div class="line" id="151300"><span class="nick" style="color:#389600"><a href="#151300" label="[15:13:00]">&lt;Googulator&gt;</a></span><span class="message">the downside of regenerating those nyacc files is - _it takes a while_</span></div><div class="line" id="151317"><span class="nick" style="color:#389600"><a href="#151317" label="[15:13:17]">&lt;Googulator&gt;</a></span><span class="message">6+ minutes on CI</span></div><div class="line" id="190322"><span class="nick" style="color:#2e2a4a"><a href="#190322" label="[19:03:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: nice work! 6+ minuted on CI should be acceptable...</span></div><div class="line" id="190344"><span class="nick" style="color:#2e2a4a"><a href="#190344" label="[19:03:44]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But at least we are properly bootstrappable there</span></div><div class="line" id="203942"><span class="nick" style="color:#8dd3c7"><a href="#203942" label="[20:39:42]">&lt;stikonas&gt;</a></span><span class="message">Googulator, fossy: have you tested recently with --external-sources?</span></div><div class="line" id="203947"><span class="nick" style="color:#8dd3c7"><a href="#203947" label="[20:39:47]">&lt;stikonas&gt;</a></span><span class="message">I seem to get this error <a rel="nofollow" href="https://paste.debian.net/1314203/">https://paste.debian.net/1314203/</a> </span></div><div class="line" id="204009"><span class="nick" style="color:#8dd3c7"><a href="#204009" label="[20:40:09]">&lt;stikonas&gt;</a></span><span class="message">oh, that might be due to my dirty workspace...</span></div><div class="line" id="204011"><span class="nick" style="color:#389600"><a href="#204011" label="[20:40:11]">&lt;Googulator&gt;</a></span><span class="message">what bootstrap mode is this?</span></div><div class="line" id="204026"><span class="nick" style="color:#8dd3c7"><a href="#204026" label="[20:40:26]">&lt;stikonas&gt;</a></span><span class="message">no, I just realized</span></div><div class="line" id="204029"><span class="nick" style="color:#389600"><a href="#204029" label="[20:40:29]">&lt;Googulator&gt;</a></span><span class="message">CI runs bwrap with --external-sources</span></div><div class="line" id="204038"><span class="nick" style="color:#8dd3c7"><a href="#204038" label="[20:40:38]">&lt;stikonas&gt;</a></span><span class="message">that I had unpacked some tarballs for inspection</span></div><div class="line" id="204048"><span class="nick" style="color:#8dd3c7"><a href="#204048" label="[20:40:48]">&lt;stikonas&gt;</a></span><span class="message">so they propagated into bwrap sandbox</span></div><div class="line" id="204101"><span class="nick" style="color:#389600"><a href="#204101" label="[20:41:01]">&lt;Googulator&gt;</a></span><span class="message">qemu or baremetal with --external-sources may be broken indeed, but I'd be surprised if we broke bwrap</span></div><div class="line" id="204130"><span class="nick" style="color:#8dd3c7"><a href="#204130" label="[20:41:30]">&lt;stikonas&gt;</a></span><span class="message">well, it was just &quot;extra unexpected files&quot;</span></div><div class="line" id="204457"><span class="nick" style="color:#8dd3c7"><a href="#204457" label="[20:44:57]">&lt;stikonas&gt;</a></span><span class="message">Googulator: mes 0.26 PR looks good but I left a minor question about commented out bits</span></div><div class="line" id="204511"><span class="nick" style="color:#8dd3c7"><a href="#204511" label="[20:45:11]">&lt;stikonas&gt;</a></span><span class="message">and I think let's leave out riscv checksums for now</span></div><div class="line" id="204606"><span class="nick" style="color:#389600"><a href="#204606" label="[20:46:06]">&lt;Googulator&gt;</a></span><span class="message">I don't see your comments...</span></div><div class="line" id="204637"><span class="nick" style="color:#8dd3c7"><a href="#204637" label="[20:46:37]">&lt;stikonas&gt;</a></span><span class="message">oh, I didn't click add comment</span></div><div class="line" id="204650"><span class="nick" style="color:#8dd3c7"><a href="#204650" label="[20:46:50]">&lt;stikonas&gt;</a></span><span class="message">done</span></div><div class="line" id="204858"><span class="nick" style="color:#8dd3c7"><a href="#204858" label="[20:48:58]">&lt;stikonas&gt;</a></span><span class="message">the annoying thing about riscv checksums is that you either need hardware (which is really slow with mes) or qemu. And qemu is slow too (just not as bad) but also some versions of qemu don't work with stage0-posix-riscv64 (random segfaults).</span></div><div class="line" id="204924"><span class="nick" style="color:#8dd3c7"><a href="#204924" label="[20:49:24]">&lt;stikonas&gt;</a></span><span class="message">(so for now I'm pinned to qemu-8.0.4)</span></div><div class="line" id="205449"><span class="nick" style="color:#389600"><a href="#205449" label="[20:54:49]">&lt;Googulator&gt;</a></span><span class="message">pwn2de4d/riscv-toolchain Docker image seems to work for me</span></div><div class="line" id="205505"><span class="nick" style="color:#389600"><a href="#205505" label="[20:55:05]">&lt;Googulator&gt;</a></span><span class="message">(needs some trickery to set up binfmt_misc inside the container though)</span></div><div class="line" id="205559"><span class="nick" style="color:#389600"><a href="#205559" label="[20:55:59]">&lt;Googulator&gt;</a></span><span class="message">start it with `docker run --name &quot;riscv-toolchain&quot; -v ./target:/target -v /proc/sys/fs/binfmt_misc:/binfmt_misc --privileged -it pwn2de4d/riscv-toolchain:latest`</span></div><div class="line" id="205632"><span class="nick" style="color:#389600"><a href="#205632" label="[20:56:32]">&lt;Googulator&gt;</a></span><span class="message">in the container, issue `echo ':qemu-riscv64:M::\x7f\x45\x4c\x46\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\xf3\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/opt/qemu-riscv-static/bin/qemu-riscv64:CF' &gt; /binfmt_misc/register`</span></div><div class="line" id="205706"><span class="nick" style="color:#8dd3c7"><a href="#205706" label="[20:57:06]">&lt;stikonas&gt;</a></span><span class="message">well, for now I just use an older qemu from my gentoo system (with binfmt configured)</span></div><div class="line" id="205720"><span class="nick" style="color:#8dd3c7"><a href="#205720" label="[20:57:20]">&lt;stikonas&gt;</a></span><span class="message">but I didn't fully understand the cause of the crashes...</span></div><div class="line" id="205721"><span class="nick" style="color:#389600"><a href="#205721" label="[20:57:21]">&lt;Googulator&gt;</a></span><span class="message">and finally `chroot . ./bootstrap-seeds/POSIX/riscv64/kaem-optional-seed`</span></div><div class="line" id="205730"><span class="nick" style="color:#389600"><a href="#205730" label="[20:57:30]">&lt;Googulator&gt;</a></span><span class="message">not sure what qemu version this is, I didn't check</span></div><div class="line" id="205812"><span class="nick" style="color:#8dd3c7"><a href="#205812" label="[20:58:12]">&lt;stikonas&gt;</a></span><span class="message">with other qemu versions the crash could happen at random point in bootstrap (though generally around the time M2 is first built, I never managed to reach end of stage0-posix)</span></div><div class="line" id="205846"><span class="nick" style="color:#389600"><a href="#205846" label="[20:58:46]">&lt;Googulator&gt;</a></span><span class="message">qemu-riscv64 version 7.0.0 (v7.0.0)</span></div><div class="line" id="205846"><span class="nick" style="color:#389600"><a href="#205846" label="[20:58:46]">&lt;Googulator&gt;</a></span><span class="message">Copyright (c) 2003-2022 Fabrice Bellard and the QEMU Project developers</span></div><div class="line" id="205910"><span class="nick" style="color:#8dd3c7"><a href="#205910" label="[20:59:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's quite old...</span></div><div class="line" id="205927"><span class="nick" style="color:#8dd3c7"><a href="#205927" label="[20:59:27]">&lt;stikonas&gt;</a></span><span class="message">I had trouble with 8.1.x</span></div><div class="line" id="210027"><span class="nick" style="color:#389600"><a href="#210027" label="[21:00:27]">&lt;Googulator&gt;</a></span><span class="message">mach.d regeneration took 95 minutes with this qemu on a Zen 4</span></div><div class="line" id="210044"><span class="nick" style="color:#8dd3c7"><a href="#210044" label="[21:00:44]">&lt;stikonas&gt;</a></span><span class="message">95 minutes :O</span></div><div class="line" id="210055"><span class="nick" style="color:#8dd3c7"><a href="#210055" label="[21:00:55]">&lt;stikonas&gt;</a></span><span class="message">this was with builder-hex0?</span></div><div class="line" id="210108"><span class="nick" style="color:#389600"><a href="#210108" label="[21:01:08]">&lt;Googulator&gt;</a></span><span class="message">no, qemu-riscv64</span></div><div class="line" id="210110"><span class="nick" style="color:#8dd3c7"><a href="#210110" label="[21:01:10]">&lt;stikonas&gt;</a></span><span class="message">oh I see</span></div><div class="line" id="210115"><span class="nick" style="color:#389600"><a href="#210115" label="[21:01:15]">&lt;Googulator&gt;</a></span><span class="message">usermode</span></div><div class="line" id="210121"><span class="nick" style="color:#8dd3c7"><a href="#210121" label="[21:01:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, riscv64 stuff is very slow ...</span></div><div class="line" id="210140"><span class="nick" style="color:#389600"><a href="#210140" label="[21:01:40]">&lt;Googulator&gt;</a></span><span class="message">builder-hex0 on bare metal took ~15-20 minutes</span></div><div class="line" id="210142"><span class="nick" style="color:#8dd3c7"><a href="#210142" label="[21:01:42]">&lt;stikonas&gt;</a></span><span class="message">though real HW board that I have is even slow (which we thought is due to slow memory bandwidth)</span></div><div class="line" id="210151"><span class="nick" style="color:#389600"><a href="#210151" label="[21:01:51]">&lt;Googulator&gt;</a></span><span class="message">about half the time of mes -&gt; tcc step</span></div><div class="line" id="210205"><span class="nick" style="color:#389600"><a href="#210205" label="[21:02:05]">&lt;Googulator&gt;</a></span><span class="message">on ci, it takes 6 minutes, vs ~4 for mes-&gt;tcc</span></div><div class="line" id="210236"><span class="nick" style="color:#8dd3c7"><a href="#210236" label="[21:02:36]">&lt;stikonas&gt;</a></span><span class="message">anyway, nice that this is out of the way</span></div><div class="line" id="210242"><span class="nick" style="color:#8dd3c7"><a href="#210242" label="[21:02:42]">&lt;stikonas&gt;</a></span><span class="message">we are basically out of blockers for 1.0 release</span></div><div class="line" id="210245"><span class="nick" style="color:#389600"><a href="#210245" label="[21:02:45]">&lt;Googulator&gt;</a></span><span class="message">I guess it's more dependent on CPU speed / IPC, vs. mes-&gt;tcc, which is memory bandwidth limited</span></div><div class="line" id="210336"><span class="nick" style="color:#389600"><a href="#210336" label="[21:03:36]">&lt;Googulator&gt;</a></span><span class="message">we still have script-generator checksum, but that's easy</span></div><div class="line" id="210421"><span class="nick" style="color:#389600"><a href="#210421" label="[21:04:21]">&lt;Googulator&gt;</a></span><span class="message">NSS update is trivial (in fact, has been done at least once since #292 was posted)</span></div><div class="line" id="210435"><span class="nick" style="color:#8dd3c7"><a href="#210435" label="[21:04:35]">&lt;stikonas&gt;</a></span><span class="message">Well, those are just for new certs...</span></div><div class="line" id="210441"><span class="nick" style="color:#389600"><a href="#210441" label="[21:04:41]">&lt;Googulator&gt;</a></span><span class="message">README/parts.rst update is trivial too</span></div><div class="line" id="210500"><span class="nick" style="color:#8dd3c7"><a href="#210500" label="[21:05:00]">&lt;stikonas&gt;</a></span><span class="message">given that root certificate expires, it's best to be as up to date as possible</span></div><div class="line" id="210533"><span class="nick" style="color:#8dd3c7"><a href="#210533" label="[21:05:33]">&lt;stikonas&gt;</a></span><span class="message">yeah, most of the other stuff is trivial/documentation</span></div><div class="line" id="210544"><span class="nick" style="color:#389600"><a href="#210544" label="[21:05:44]">&lt;Googulator&gt;</a></span><span class="message">&quot;Describe how to &quot;latch on&quot; to the end of live-bootstrap (eg, freedesktop-sdk)&quot; - fairly trivial as well, just add an extra improve step to the manifest</span></div><div class="line" id="210550"><span class="nick" style="color:#389600"><a href="#210550" label="[21:05:50]">&lt;Googulator&gt;</a></span><span class="message">&quot;improve&quot; is basically a catch-all</span></div><div class="line" id="210606"><span class="nick" style="color:#8dd3c7"><a href="#210606" label="[21:06:06]">&lt;stikonas&gt;</a></span><span class="message">well, even before there was after.sh script</span></div><div class="line" id="210616"><span class="nick" style="color:#8dd3c7"><a href="#210616" label="[21:06:16]">&lt;stikonas&gt;</a></span><span class="message"> Provide option for not all command output to be displayed on-screen</span></div><div class="line" id="210621"><span class="nick" style="color:#389600"><a href="#210621" label="[21:06:21]">&lt;Googulator&gt;</a></span><span class="message">there still is, you can just modify that</span></div><div class="line" id="210638"><span class="nick" style="color:#8dd3c7"><a href="#210638" label="[21:06:38]">&lt;stikonas&gt;</a></span><span class="message">probably doable</span></div><div class="line" id="210641"><span class="nick" style="color:#8dd3c7"><a href="#210641" label="[21:06:41]">&lt;stikonas&gt;</a></span><span class="message">but arguably is optional</span></div><div class="line" id="210652"><span class="nick" style="color:#389600"><a href="#210652" label="[21:06:52]">&lt;Googulator&gt;</a></span><span class="message">all the UI parts I'd put as optional tbh</span></div><div class="line" id="210702"><span class="nick" style="color:#8dd3c7"><a href="#210702" label="[21:07:02]">&lt;stikonas&gt;</a></span><span class="message">indeed...</span></div><div class="line" id="210708"><span class="nick" style="color:#389600"><a href="#210708" label="[21:07:08]">&lt;Googulator&gt;</a></span><span class="message">could even be a &quot;1.1&quot;</span></div><div class="line" id="210725"><span class="nick" style="color:#8dd3c7"><a href="#210725" label="[21:07:25]">&lt;stikonas&gt;</a></span><span class="message">for 1.1 it would be nice to package ncurses/readline too...</span></div><div class="line" id="210742"><span class="nick" style="color:#389600"><a href="#210742" label="[21:07:42]">&lt;Googulator&gt;</a></span><span class="message">yeah, also git</span></div><div class="line" id="210750"><span class="nick" style="color:#8dd3c7"><a href="#210750" label="[21:07:50]">&lt;stikonas&gt;</a></span><span class="message">since now a lot of our tools have fairly poor command line editing capability</span></div><div class="line" id="210805"><span class="nick" style="color:#8dd3c7"><a href="#210805" label="[21:08:05]">&lt;stikonas&gt;</a></span><span class="message">yeah, git makes sense too</span></div><div class="line" id="210814"><span class="nick" style="color:#389600"><a href="#210814" label="[21:08:14]">&lt;Googulator&gt;</a></span><span class="message">nano is easy once you have ncurses</span></div><div class="line" id="210822"><span class="nick" style="color:#389600"><a href="#210822" label="[21:08:22]">&lt;Googulator&gt;</a></span><span class="message">not sure about mc</span></div><div class="line" id="210826"><span class="nick" style="color:#8dd3c7"><a href="#210826" label="[21:08:26]">&lt;stikonas&gt;</a></span><span class="message">oh yeah. editor is good</span></div><div class="line" id="210843"><span class="nick" style="color:#8dd3c7"><a href="#210843" label="[21:08:43]">&lt;stikonas&gt;</a></span><span class="message">I do use mc from time to time...</span></div><div class="line" id="210855"><span class="nick" style="color:#8dd3c7"><a href="#210855" label="[21:08:55]">&lt;stikonas&gt;</a></span><span class="message">it's useful but probably needs more discussion, see what fossy thinks</span></div><div class="line" id="211013"><span class="nick" style="color:#389600"><a href="#211013" label="[21:10:13]">&lt;Googulator&gt;</a></span><span class="message">ssh/sftp server could be useful too (<a rel="nofollow" href="https://gist.github.com/Googulator/86af97ed078eb9e6c18c6eb49e46c96d">https://gist.github.com/Googulator/86af97ed078eb9e6c18c6eb49e46c96d</a>  includes it commented out, but probably shouldn't autostart, unless controlled via bootstrap.cfg)</span></div><div class="line" id="211054"><span class="nick" style="color:#389600"><a href="#211054" label="[21:10:54]">&lt;Googulator&gt;</a></span><span class="message">but all of these are really 1.x, not 1.0 material</span></div><div class="line" id="211132"><span class="nick" style="color:#389600"><a href="#211132" label="[21:11:32]">&lt;Googulator&gt;</a></span><span class="message">Bootstrapping without rootfs.py is gonna be a bit of a b*tch though</span></div><div class="line" id="211205"><span class="nick" style="color:#389600"><a href="#211205" label="[21:12:05]">&lt;Googulator&gt;</a></span><span class="message">we do have some instructions that could be updated, but they rely on manually maintained pre-network-sources file</span></div><div class="line" id="211210"><span class="nick" style="color:#389600"><a href="#211210" label="[21:12:10]">&lt;Googulator&gt;</a></span><span class="message">which is gone</span></div><div class="line" id="211228"><span class="nick" style="color:#389600"><a href="#211228" label="[21:12:28]">&lt;Googulator&gt;</a></span><span class="message">we have code to generate the equivalent - but it's written in Python and calls into generator.py</span></div><div class="line" id="211339"><span class="nick" style="color:#389600"><a href="#211339" label="[21:13:39]">&lt;Googulator&gt;</a></span><span class="message">and IMO writing &quot;Only copy distfiles listed in sources files for build steps coming before improve: get-network in the manifest into this disk.&quot; would be a bit of a dick move</span></div><div class="line" id="211723"><span class="nick" style="color:#8dd3c7"><a href="#211723" label="[21:17:23]">&lt;stikonas&gt;</a></span><span class="message">there is also bash downloader?</span></div><div class="line" id="211742"><span class="nick" style="color:#8dd3c7"><a href="#211742" label="[21:17:42]">&lt;stikonas&gt;</a></span><span class="message">or just write that you needto go over all sources files</span></div><div class="line" id="211745"><span class="nick" style="color:#8dd3c7"><a href="#211745" label="[21:17:45]">&lt;stikonas&gt;</a></span><span class="message">and download all of them</span></div><div class="line" id="211754"><span class="nick" style="color:#8dd3c7"><a href="#211754" label="[21:17:54]">&lt;stikonas&gt;</a></span><span class="message">it is a bit annoying to user</span></div><div class="line" id="211807"><span class="nick" style="color:#8dd3c7"><a href="#211807" label="[21:18:07]">&lt;stikonas&gt;</a></span><span class="message">but it's not particularly complex thing to do</span></div><div class="line" id="211832"><span class="nick" style="color:#8dd3c7"><a href="#211832" label="[21:18:32]">&lt;stikonas&gt;</a></span><span class="message">Googulator: oh another thing that might be good to restore</span></div><div class="line" id="211839"><span class="nick" style="color:#8dd3c7"><a href="#211839" label="[21:18:39]">&lt;stikonas&gt;</a></span><span class="message">is bootstrappign on top of linux kernel</span></div><div class="line" id="211902"><span class="nick" style="color:#8dd3c7"><a href="#211902" label="[21:19:02]">&lt;stikonas&gt;</a></span><span class="message">(given that kernel bootstrap only works on BIOS)</span></div><div class="line" id="211909"><span class="nick" style="color:#8dd3c7"><a href="#211909" label="[21:19:09]">&lt;stikonas&gt;</a></span><span class="message">it's kind of working</span></div><div class="line" id="211922"><span class="nick" style="color:#8dd3c7"><a href="#211922" label="[21:19:22]">&lt;stikonas&gt;</a></span><span class="message">but needs somewhat awkward manual editing of bootstrap.cfg</span></div><div class="line" id="211954"><span class="nick" style="color:#8dd3c7"><a href="#211954" label="[21:19:54]">&lt;stikonas&gt;</a></span><span class="message">there is no rootfs option to preset it</span></div><div class="line" id="212009"><span class="nick" style="color:#8dd3c7"><a href="#212009" label="[21:20:09]">&lt;stikonas&gt;</a></span><span class="message">you kind of want to follow chroot/bwrap bootstrap path in that mode</span></div><div class="line" id="212042"><span class="nick" style="color:#8dd3c7"><a href="#212042" label="[21:20:42]">&lt;stikonas&gt;</a></span><span class="message">or maybe we should focus on fixing UEFI bootstrap... But that's not super easy either</span></div><div class="line" id="212100"><span class="nick" style="color:#8dd3c7"><a href="#212100" label="[21:21:00]">&lt;stikonas&gt;</a></span><span class="message">I haven't done any work on posix-runner recently</span></div><div class="line" id="213711"><span class="nick" style="color:#389600"><a href="#213711" label="[21:37:11]">&lt;Googulator&gt;</a></span><span class="message">what kind of manual editing?</span></div><div class="line" id="213824"><span class="nick" style="color:#389600"><a href="#213824" label="[21:38:24]">&lt;Googulator&gt;</a></span><span class="message">marking as CHROOT?</span></div><div class="line" id="213837"><span class="nick" style="color:#389600"><a href="#213837" label="[21:38:37]">&lt;Googulator&gt;</a></span><span class="message">Won't that also disable kexecing into the built kernel?</span></div><div class="line" id="214143"><span class="nick" style="color:#8dd3c7"><a href="#214143" label="[21:41:43]">&lt;stikonas&gt;</a></span><span class="message">Googulator: well, that path is broken if you start with linux kernel</span></div><div class="line" id="214201"><span class="nick" style="color:#8dd3c7"><a href="#214201" label="[21:42:01]">&lt;stikonas&gt;</a></span><span class="message">I don't think we support kexecing from 64-bit kernel to bootstrapped 32-bit kernel</span></div><div class="line" id="214224"><span class="nick" style="color:#389600"><a href="#214224" label="[21:42:24]">&lt;Googulator&gt;</a></span><span class="message">I did several 32-&gt;64-&gt;32 tests when bootstrapping Gentoo</span></div><div class="line" id="214230"><span class="nick" style="color:#8dd3c7"><a href="#214230" label="[21:42:30]">&lt;stikonas&gt;</a></span><span class="message">with kexec?</span></div><div class="line" id="214237"><span class="nick" style="color:#389600"><a href="#214237" label="[21:42:37]">&lt;Googulator&gt;</a></span><span class="message">yes</span></div><div class="line" id="214250"><span class="nick" style="color:#389600"><a href="#214250" label="[21:42:50]">&lt;Googulator&gt;</a></span><span class="message">although it was on BIOS</span></div><div class="line" id="214254"><span class="nick" style="color:#8dd3c7"><a href="#214254" label="[21:42:54]">&lt;stikonas&gt;</a></span><span class="message">hmm, fossy was under impression that it was broken</span></div><div class="line" id="214308"><span class="nick" style="color:#8dd3c7"><a href="#214308" label="[21:43:08]">&lt;stikonas&gt;</a></span><span class="message">anyway, this is something that we didn't test much and documentation is lacking</span></div><div class="line" id="215135"><span class="nick" style="color:#389600"><a href="#215135" label="[21:51:35]">&lt;Googulator&gt;</a></span><span class="message">AFAIK the originally intended usage of -qk is for booting with an old Linux kernel on BIOS, and then kexecing up to the newly built one</span></div><div class="line" id="215214"><span class="nick" style="color:#389600"><a href="#215214" label="[21:52:14]">&lt;Googulator&gt;</a></span><span class="message">performing essentially a chroot bootstrap on top of a recent kernel should be a new mode</span></div><div class="line" id="220202"><span class="nick" style="color:#389600"><a href="#220202" label="[22:02:02]">&lt;Googulator&gt;</a></span><span class="message">tried to test -qk here - qemu won't pass an e820 memory map to a kernel specified via -kernel</span></div><div class="line" id="220217"><span class="nick" style="color:#389600"><a href="#220217" label="[22:02:17]">&lt;Googulator&gt;</a></span><span class="message">only e801 up to 15MiB</span></div><div class="line" id="222840"><span class="nick" style="color:#8dd3c7"><a href="#222840" label="[22:28:40]">&lt;stikonas&gt;</a></span><span class="message">well, it's probably fine to do 32-bit kernel bootstrap starting with 64-bit kernel if that works</span></div><div class="line" id="222845"><span class="nick" style="color:#8dd3c7"><a href="#222845" label="[22:28:45]">&lt;stikonas&gt;</a></span><span class="message">I wasn't aware that it works</span></div><div class="line" id="222932"><span class="nick" style="color:#8dd3c7"><a href="#222932" label="[22:29:32]">&lt;stikonas&gt;</a></span><span class="message">(since you can't directly boot 32-bit kernel on UEFI)</span></div><div class="line" id="232302"><span class="nick" style="color:#389600"><a href="#232302" label="[23:23:02]">&lt;Googulator&gt;</a></span><span class="message">stikonas: seems like that grub hash change is reproducible</span></div><div class="line" id="232318"><span class="nick" style="color:#8dd3c7"><a href="#232318" label="[23:23:18]">&lt;stikonas&gt;</a></span><span class="message">hmm,something changed in April?</span></div><div class="line" id="232330"><span class="nick" style="color:#8dd3c7"><a href="#232330" label="[23:23:30]">&lt;stikonas&gt;</a></span><span class="message">usually these things are in documentation, some month is hardcoded</span></div><div class="line" id="232334"><span class="nick" style="color:#8dd3c7"><a href="#232334" label="[23:23:34]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="232338"><span class="nick" style="color:#389600"><a href="#232338" label="[23:23:38]">&lt;Googulator&gt;</a></span><span class="message">no, it seems to actually depend on that one patch somehow</span></div><div class="line" id="232348"><span class="nick" style="color:#8dd3c7"><a href="#232348" label="[23:23:48]">&lt;stikonas&gt;</a></span><span class="message">wow...</span></div><div class="line" id="232357"><span class="nick" style="color:#8dd3c7"><a href="#232357" label="[23:23:57]">&lt;stikonas&gt;</a></span><span class="message">that patch is so early in the build chain</span></div><div class="line" id="232409"><span class="nick" style="color:#8dd3c7"><a href="#232409" label="[23:24:09]">&lt;stikonas&gt;</a></span><span class="message">and is not applied to musl 1.2.4...</span></div><div class="line" id="232414"><span class="nick" style="color:#8dd3c7"><a href="#232414" label="[23:24:14]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="232424"><span class="nick" style="color:#8dd3c7"><a href="#232424" label="[23:24:24]">&lt;stikonas&gt;</a></span><span class="message">maybe some static library</span></div><div class="line" id="232430"><span class="nick" style="color:#8dd3c7"><a href="#232430" label="[23:24:30]">&lt;stikonas&gt;</a></span><span class="message">that grub uses comes from that early</span></div><div class="line" id="232456"><span class="nick" style="color:#8dd3c7"><a href="#232456" label="[23:24:56]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll probably wait till after mes 0.26 and redo checksums again</span></div><div class="line" id="232505"><span class="nick" style="color:#8dd3c7"><a href="#232505" label="[23:25:05]">&lt;stikonas&gt;</a></span><span class="message">I don't want to delay that thing for some cleanup...</span></div><div class="line" id="232522"><span class="nick" style="color:#8dd3c7"><a href="#232522" label="[23:25:22]">&lt;stikonas&gt;</a></span><span class="message">nyacc issue is higher priority</span></div><div class="line" id="233301"><span class="nick" style="color:#389600"><a href="#233301" label="[23:33:01]">&lt;Googulator&gt;</a></span><span class="message">actually - it turns out that the grub tarball that gets produced is unchanged from before the commit</span></div><div class="line" id="233314"><span class="nick" style="color:#389600"><a href="#233314" label="[23:33:14]">&lt;Googulator&gt;</a></span><span class="message">but somehow your commit includes a new expected hash for it</span></div><div class="line" id="233331"><span class="nick" style="color:#389600"><a href="#233331" label="[23:33:31]">&lt;Googulator&gt;</a></span><span class="message">do you happen to have the tarball that actually hashed to 0bf613f1f142d53baea81643383b66dcaf38438ee6ba33fb9ed1c135a0be9e47  ?</span></div><div class="line" id="233403"><span class="nick" style="color:#8dd3c7"><a href="#233403" label="[23:34:03]">&lt;stikonas&gt;</a></span><span class="message">hmm, I've removed that build tree...</span></div><div class="line" id="233415"><span class="nick" style="color:#8dd3c7"><a href="#233415" label="[23:34:15]">&lt;stikonas&gt;</a></span><span class="message">I would have to re-run...</span></div><div class="line" id="233439"><span class="nick" style="color:#389600"><a href="#233439" label="[23:34:39]">&lt;Googulator&gt;</a></span><span class="message">maybe it was another dirty tree?</span></div><div class="line" id="233449"><span class="nick" style="color:#8dd3c7"><a href="#233449" label="[23:34:49]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe...</span></div><div class="line" id="233507"><span class="nick" style="color:#8dd3c7"><a href="#233507" label="[23:35:07]">&lt;stikonas&gt;</a></span><span class="message">anyway, I need to rebase now anyway</span></div><div class="line" id="233509"><span class="nick" style="color:#8dd3c7"><a href="#233509" label="[23:35:09]">&lt;stikonas&gt;</a></span><span class="message">and retest...</span></div><div class="line" id="233523"><span class="nick" style="color:#8dd3c7"><a href="#233523" label="[23:35:23]">&lt;stikonas&gt;</a></span><span class="message">and I think best to merge mes 0.26 first anyway</span></div><div class="line" id="233539"><span class="nick" style="color:#389600"><a href="#233539" label="[23:35:39]">&lt;Googulator&gt;</a></span><span class="message">How far is riscv64 supposed to get right now?</span></div><div class="line" id="233546"><span class="nick" style="color:#389600"><a href="#233546" label="[23:35:46]">&lt;Googulator&gt;</a></span><span class="message">Currently doing mes-&gt;tcc step</span></div><div class="line" id="233558"><span class="nick" style="color:#389600"><a href="#233558" label="[23:35:58]">&lt;Googulator&gt;</a></span><span class="message">already printed the first set of bogus messages</span></div><div class="line" id="234611"><span class="nick" style="color:#8dd3c7"><a href="#234611" label="[23:46:11]">&lt;stikonas&gt;</a></span><span class="message">Googulator: yes, first mes-tcc step</span></div><div class="line" id="234621"><span class="nick" style="color:#8dd3c7"><a href="#234621" label="[23:46:21]">&lt;stikonas&gt;</a></span><span class="message">after that tcc 0.9.27 has no riscv support</span></div><div class="line" id="234631"><span class="nick" style="color:#8dd3c7"><a href="#234631" label="[23:46:31]">&lt;stikonas&gt;</a></span><span class="message">if we want to continue with riscv, we need ot switch to tcc-mob</span></div><div class="line" id="234636"><span class="nick" style="color:#8dd3c7"><a href="#234636" label="[23:46:36]">&lt;stikonas&gt;</a></span><span class="message">(or maybe 0.9.28 if it comes out)</span></div><div class="line" id="234646"><span class="nick" style="color:#8dd3c7"><a href="#234646" label="[23:46:46]">&lt;stikonas&gt;</a></span><span class="message">ekaitz was fixing some issues there</span></div><div class="line" id="234651"><span class="nick" style="color:#8dd3c7"><a href="#234651" label="[23:46:51]">&lt;stikonas&gt;</a></span><span class="message">and it's getting usable</span></div><div class="line" id="234656"><span class="nick" style="color:#8dd3c7"><a href="#234656" label="[23:46:56]">&lt;stikonas&gt;</a></span><span class="message">but we still haven't reached gcc</span></div><div class="line" id="234718"><span class="nick" style="color:#80b1d3"><a href="#234718" label="[23:47:18]">&lt;ekaitz&gt;</a></span><span class="message">more than usable at this point yeah</span></div><div class="line" id="234718"><span class="nick" style="color:#8dd3c7"><a href="#234718" label="[23:47:18]">&lt;stikonas&gt;</a></span><span class="message">but I think it's not far from being done</span></div><div class="line" id="234732"><span class="nick" style="color:#80b1d3"><a href="#234732" label="[23:47:32]">&lt;ekaitz&gt;</a></span><span class="message">i'm pretty happy with it at the moment</span></div><div class="line" id="234736"><span class="nick" style="color:#8dd3c7"><a href="#234736" label="[23:47:36]">&lt;stikonas&gt;</a></span><span class="message">we are now working on musl and binutils</span></div><div class="line" id="234741"><span class="nick" style="color:#8dd3c7"><a href="#234741" label="[23:47:41]">&lt;stikonas&gt;</a></span><span class="message">after that we need gcc</span></div><div class="line" id="234746"><span class="nick" style="color:#80b1d3"><a href="#234746" label="[23:47:46]">&lt;ekaitz&gt;</a></span><span class="message">not perfect but pretty near from being stable-ish</span></div><div class="line" id="234805"><span class="nick" style="color:#8dd3c7"><a href="#234805" label="[23:48:05]">&lt;stikonas&gt;</a></span><span class="message">well for now we are doing the minimum needed for bootstrap and not doing any of the pregenerated file stuff</span></div><div class="line" id="234814"><span class="nick" style="color:#8dd3c7"><a href="#234814" label="[23:48:14]">&lt;stikonas&gt;</a></span><span class="message">but that's mostly just perl/autotools</span></div><div class="line" id="234841"><span class="nick" style="color:#80b1d3"><a href="#234841" label="[23:48:41]">&lt;ekaitz&gt;</a></span><span class="message">from my side i'm interested on having a proper tcc, so i implemented way more than we needed</span></div><br /></div></body></html>