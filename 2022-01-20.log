<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-01-20.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="024514"><span class="nick" style="color:#8dd3c7"><a href="#024514" label="[02:45:14]">&lt;oriansj&gt;</a></span><span class="message">I really need to find time to fix M2-Mesoplanet's nested macro support</span></div><div class="line" id="064526"><span class="nick">***</span><span class="message notice">janneke_ is now known as janneke</span></div><div class="line" id="110111"><span class="nick">***</span><span class="message notice">gio_ is now known as gio</span></div><div class="line" id="133856"><span class="nick" style="color:#8dd3c7"><a href="#133856" label="[13:38:56]">&lt;oriansj&gt;</a></span><span class="message">stikonas: good news. I've fixed nest #if blocks in M2-Mesoplanet</span></div><div class="line" id="133924"><span class="nick" style="color:#8dd3c7"><a href="#133924" label="[13:39:24]">&lt;oriansj&gt;</a></span><span class="message">it now correctly compiles on all architectures</span></div><div class="line" id="134349"><span class="nick" style="color:#2e2a4a"><a href="#134349" label="[13:43:49]">&lt;stikonas&gt;</a></span><span class="message">oriansj: oh nice. Maybe worth backporting to M2-Planet?</span></div><div class="line" id="134530"><span class="nick" style="color:#8dd3c7"><a href="#134530" label="[13:45:30]">&lt;oriansj&gt;</a></span><span class="message">possibly, it is a small change</span></div><div class="line" id="134942"><span class="nick" style="color:#8dd3c7"><a href="#134942" label="[13:49:42]">&lt;oriansj&gt;</a></span><span class="message">now just to start testing bigger programs to flush out additional bugs</span></div><div class="line" id="135318"><span class="nick" style="color:#8dd3c7"><a href="#135318" label="[13:53:18]">&lt;oriansj&gt;</a></span><span class="message">probably should add a little logic to keep the tempfile around if we need to dig in</span></div><div class="line" id="135436"><span class="nick" style="color:#2e2a4a"><a href="#135436" label="[13:54:36]">&lt;stikonas&gt;</a></span><span class="message">oriansj: also there is segfault if its build with M2-Planet</span></div><div class="line" id="135444"><span class="nick" style="color:#2e2a4a"><a href="#135444" label="[13:54:44]">&lt;stikonas&gt;</a></span><span class="message">s/build/built/</span></div><div class="line" id="135548"><span class="nick" style="color:#2e2a4a"><a href="#135548" label="[13:55:48]">&lt;stikonas&gt;</a></span><span class="message">might be something to do with tempfiles too...</span></div><div class="line" id="135559"><span class="nick" style="color:#8dd3c7"><a href="#135559" label="[13:55:59]">&lt;oriansj&gt;</a></span><span class="message">oh joy</span></div><div class="line" id="135617"><span class="nick" style="color:#8dd3c7"><a href="#135617" label="[13:56:17]">&lt;oriansj&gt;</a></span><span class="message">ok, I'll add that to my todo list</span></div><div class="line" id="135710"><span class="nick" style="color:#2e2a4a"><a href="#135710" label="[13:57:10]">&lt;stikonas&gt;</a></span><span class="message">hmm, blood_elf.c fails with &quot;non-line number: / provided to #FILENAME&quot;</span></div><div class="line" id="135730"><span class="nick" style="color:#2e2a4a"><a href="#135730" label="[13:57:30]">&lt;stikonas&gt;</a></span><span class="message">(that's if I build with gcc)</span></div><div class="line" id="140120"><span class="nick" style="color:#8dd3c7"><a href="#140120" label="[14:01:20]">&lt;oriansj&gt;</a></span><span class="message">./bin/M2-Mesoplanet -f ../mescc-tools/blood-elf.c -f ../mescc-tools/stringify.c -o foo</span></div><div class="line" id="140212"><span class="nick" style="color:#8dd3c7"><a href="#140212" label="[14:02:12]">&lt;oriansj&gt;</a></span><span class="message">hmm</span></div><div class="line" id="140227"><span class="nick" style="color:#8dd3c7"><a href="#140227" label="[14:02:27]">&lt;oriansj&gt;</a></span><span class="message">no segfault here</span></div><div class="line" id="151136"><span class="nick" style="color:#2e2a4a"><a href="#151136" label="[15:11:36]">&lt;stikonas&gt;</a></span><span class="message">oriansj: and you are using Mesoplanet built with M2-Planet?</span></div><div class="line" id="151140"><span class="nick" style="color:#2e2a4a"><a href="#151140" label="[15:11:40]">&lt;stikonas&gt;</a></span><span class="message">not gcc</span></div><div class="line" id="151204"><span class="nick" style="color:#2e2a4a"><a href="#151204" label="[15:12:04]">&lt;stikonas&gt;</a></span><span class="message">because I do get segfault with your command line</span></div><div class="line" id="151233"><span class="nick" style="color:#2e2a4a"><a href="#151233" label="[15:12:33]">&lt;stikonas&gt;</a></span><span class="message">something crashes in DO_match_3</span></div><div class="line" id="151305"><span class="nick" style="color:#2e2a4a"><a href="#151305" label="[15:13:05]">&lt;stikonas&gt;</a></span><span class="message">but I can't see any backtrace with those binaries</span></div><div class="line" id="155210"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o janneke</span></div><div class="line" id="185007"><span class="nick" style="color:#6b8072"><a href="#185007" label="[18:50:07]">&lt;alMalsamo&gt;</a></span><span class="message">So I checked this site: <a rel="nofollow" href="https://www.bootstrappable.org/projects/mes.html">https://www.bootstrappable.org/projects/mes.html</a>  which mentions stage0 okay, but there is no mention of M2-Planet or M2-Mesoplanet, what are those projects for?</span></div><div class="line" id="185242"><span class="nick" style="color:#6b8072"><a href="#185242" label="[18:52:42]">&lt;alMalsamo&gt;</a></span><span class="message">ALso why does it go MesCC --&gt; TinyCC --&gt; GCC 2.95.0 --&gt; GCC 4.7.4</span></div><div class="line" id="185309"><span class="nick" style="color:#6b8072"><a href="#185309" label="[18:53:09]">&lt;alMalsamo&gt;</a></span><span class="message">I understand TinyC to GCC but what is the purpose of compiling 2.95.0?  Why not go straight from TinyCC to GCC 4.7.4?</span></div><div class="line" id="185754"><span class="nick" style="color:#6b8072"><a href="#185754" label="[18:57:54]">&lt;alMalsamo&gt;</a></span><span class="message">Hmm I just checked out source for stage0 to understand what that is, and I see a file git clone <a rel="nofollow" href="https://git.savannah.nongnu.org/git/stage0.git">https://git.savannah.nongnu.org/git/stage0.git</a> </span></div><div class="line" id="185813"><span class="nick" style="color:#6b8072"><a href="#185813" label="[18:58:13]">&lt;alMalsamo&gt;</a></span><span class="message">oops I meant to paste: stage0/stage3/M2-Planet_x86.c</span></div><div class="line" id="185841"><span class="nick" style="color:#6b8072"><a href="#185841" label="[18:58:41]">&lt;alMalsamo&gt;</a></span><span class="message">Does this mean M2-Planet is a part of stage0?</span></div><div class="line" id="190319"><span class="nick" style="color:#80b1d3"><a href="#190319" label="[19:03:19]">&lt;janneke&gt;</a></span><span class="message">alMalsamo: because this was easier, we will want to get rid of gcc-2.95.3 some time soon</span></div><div class="line" id="192643"><span class="nick" style="color:#2e2a4a"><a href="#192643" label="[19:26:43]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: first of all you can't go to GCC 4.7.4 with stable TCC</span></div><div class="line" id="192657"><span class="nick" style="color:#2e2a4a"><a href="#192657" label="[19:26:57]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: you could go to GCC 4.0.4</span></div><div class="line" id="192704"><span class="nick" style="color:#2e2a4a"><a href="#192704" label="[19:27:04]">&lt;stikonas&gt;</a></span><span class="message">and that is what was done in live-bootstrap</span></div><div class="line" id="192755"><span class="nick" style="color:#2e2a4a"><a href="#192755" label="[19:27:55]">&lt;stikonas&gt;</a></span><span class="message">and to understand M2-Mesoplanet, I should first note that stage0 is for bootstrapping on baremetal</span></div><div class="line" id="192830"><span class="nick" style="color:#2e2a4a"><a href="#192830" label="[19:28:30]">&lt;stikonas&gt;</a></span><span class="message">but we have another similar project stage0-posix that assumes posix environent (i.e. some simple kernel) with basic syscalls</span></div><div class="line" id="193000"><span class="nick" style="color:#2e2a4a"><a href="#193000" label="[19:30:00]">&lt;stikonas&gt;</a></span><span class="message">in principle both stage0 and stage0-posix follow similar early steps, hex0-&gt;hex1 (simple linker)-&gt;hex2 (more advanced linker)-&gt;M0 (macro assembler) -&gt; cc_* (C compiler written in assembly) -&gt; M2-Planet</span></div><div class="line" id="193015"><span class="nick" style="color:#2e2a4a"><a href="#193015" label="[19:30:15]">&lt;stikonas&gt;</a></span><span class="message">and all those steps are designed to run on both POSIX and baremetal</span></div><div class="line" id="193040"><span class="nick" style="color:#2e2a4a"><a href="#193040" label="[19:30:40]">&lt;stikonas&gt;</a></span><span class="message">though obviously that would require much more manual work on baremetal unlike POSIX version which can be scripted</span></div><div class="line" id="193116"><span class="nick" style="color:#2e2a4a"><a href="#193116" label="[19:31:16]">&lt;stikonas&gt;</a></span><span class="message">because M2-Planet is designed to run on baremetal, there are some things it can't suppport, e.g. #include statements</span></div><div class="line" id="193216"><span class="nick" style="color:#2e2a4a"><a href="#193216" label="[19:32:16]">&lt;stikonas&gt;</a></span><span class="message">on baremetal, you would have to do #includes manually, i.e. combine sources</span></div><div class="line" id="193219"><span class="nick" style="color:#2e2a4a"><a href="#193219" label="[19:32:19]">&lt;stikonas&gt;</a></span><span class="message">so we are now working on M2-Mesoplanet which is specific to posix bootstrap</span></div><div class="line" id="193247"><span class="nick" style="color:#2e2a4a"><a href="#193247" label="[19:32:47]">&lt;stikonas&gt;</a></span><span class="message">and is basically a C preprocessor plus some wrapper around M2-Planet (it's similar to gcc vs cc1)</span></div><div class="line" id="193258"><span class="nick" style="color:#2e2a4a"><a href="#193258" label="[19:32:58]">&lt;stikonas&gt;</a></span><span class="message">gcc executable is not a C compiler</span></div><div class="line" id="193305"><span class="nick" style="color:#2e2a4a"><a href="#193305" label="[19:33:05]">&lt;stikonas&gt;</a></span><span class="message">it just invokes a few other binaries</span></div><div class="line" id="193327"><span class="nick" style="color:#2e2a4a"><a href="#193327" label="[19:33:27]">&lt;stikonas&gt;</a></span><span class="message">(e.g. cc1 is a C compiler, then as is assembler, ld is linker)</span></div><div class="line" id="193353"><span class="nick" style="color:#2e2a4a"><a href="#193353" label="[19:33:53]">&lt;stikonas&gt;</a></span><span class="message">similarly, M2-Mesoplanet invokes M2-Planet, M1 and hex2</span></div><div class="line" id="193423"><span class="nick" style="color:#2e2a4a"><a href="#193423" label="[19:34:23]">&lt;stikonas&gt;</a></span><span class="message">and to avoid confusion M1 is a cross-platform (written in C) equivalent of M0 (written in hex2)</span></div><div class="line" id="193435"><span class="nick" style="color:#2e2a4a"><a href="#193435" label="[19:34:35]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: hopefully that clarifies things a little bit</span></div><div class="line" id="193852"><span class="nick" style="color:#2e2a4a"><a href="#193852" label="[19:38:52]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: to go to GCC 4.7.4 you can follow these steps <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="193924"><span class="nick" style="color:#2e2a4a"><a href="#193924" label="[19:39:24]">&lt;stikonas&gt;</a></span><span class="message">these are fairly strict in not using any pre-generated files (not just pre-compiled binaries)</span></div><div class="line" id="193946"><span class="nick" style="color:#2e2a4a"><a href="#193946" label="[19:39:46]">&lt;stikonas&gt;</a></span><span class="message">can skip about half of them if you are not bothered by those</span></div><div class="line" id="195426"><span class="nick" style="color:#6d2462"><a href="#195426" label="[19:54:26]">&lt;ekaitz&gt;</a></span><span class="message">janneke: should I announce my future work now?</span></div><div class="line" id="195435"><span class="nick" style="color:#6d2462"><a href="#195435" label="[19:54:35]">&lt;ekaitz&gt;</a></span><span class="message">looks like a good moment for it</span></div><div class="line" id="200347"><span class="nick" style="color:#6d2462"><a href="#200347" label="[20:03:47]">&lt;ekaitz&gt;</a></span><span class="message">so the thing is that I'm going to work on backporting gcc for riscv</span></div><div class="line" id="200359"><span class="nick" style="color:#6d2462"><a href="#200359" label="[20:03:59]">&lt;ekaitz&gt;</a></span><span class="message">in order to have a bootstrappable compiler for riscv</span></div><div class="line" id="200435"><span class="nick" style="color:#6d2462"><a href="#200435" label="[20:04:35]">&lt;ekaitz&gt;</a></span><span class="message">I have a whole year for that since I got some funds</span></div><div class="line" id="200528"><span class="nick" style="color:#234e69"><a href="#200528" label="[20:05:28]">&lt;muurkha&gt;</a></span><span class="message">oh, that's wonderful!</span></div><div class="line" id="200621"><span class="nick" style="color:#234e69"><a href="#200621" label="[20:06:21]">&lt;muurkha&gt;</a></span><span class="message">I wonder if an emulator for an old processor that could run old versions of GCC would be less work</span></div><div class="line" id="200707"><span class="nick" style="color:#2e2a4a"><a href="#200707" label="[20:07:07]">&lt;stikonas&gt;</a></span><span class="message">oh nice!</span></div><div class="line" id="200716"><span class="nick" style="color:#234e69"><a href="#200716" label="[20:07:16]">&lt;muurkha&gt;</a></span><span class="message">we tend to default to i386, but MIPS might be easier to write an emulator for</span></div><div class="line" id="200722"><span class="nick" style="color:#2e2a4a"><a href="#200722" label="[20:07:22]">&lt;stikonas&gt;</a></span><span class="message">ekaitz: which versions are you going to target?</span></div><div class="line" id="200751"><span class="nick" style="color:#6d2462"><a href="#200751" label="[20:07:51]">&lt;ekaitz&gt;</a></span><span class="message">i talked with janneke and he suggests 4.6</span></div><div class="line" id="200822"><span class="nick" style="color:#2e2a4a"><a href="#200822" label="[20:08:22]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="200859"><span class="nick" style="color:#2e2a4a"><a href="#200859" label="[20:08:59]">&lt;stikonas&gt;</a></span><span class="message">well, if that works, we can always switch from 4.7.4 to 4.6 in bootstrap</span></div><div class="line" id="200911"><span class="nick" style="color:#6d2462"><a href="#200911" label="[20:09:11]">&lt;ekaitz&gt;</a></span><span class="message">I was looking into 4.7</span></div><div class="line" id="200938"><span class="nick" style="color:#6d2462"><a href="#200938" label="[20:09:38]">&lt;ekaitz&gt;</a></span><span class="message">but I was suggested to check 4.6 because of its code modularity if i'm not mistaken</span></div><div class="line" id="200949"><span class="nick" style="color:#6d2462"><a href="#200949" label="[20:09:49]">&lt;ekaitz&gt;</a></span><span class="message">i was going to ask janneke for more clarifications on that</span></div><div class="line" id="201002"><span class="nick" style="color:#6d2462"><a href="#201002" label="[20:10:02]">&lt;ekaitz&gt;</a></span><span class="message">i'm still preparing the project plan</span></div><div class="line" id="212226"><span class="nick" style="color:#80b1d3"><a href="#212226" label="[21:22:26]">&lt;janneke&gt;</a></span><span class="message">ekaitz: sure, why not?</span></div><div class="line" id="212256"><span class="nick" style="color:#6d2462"><a href="#212256" label="[21:22:56]">&lt;ekaitz&gt;</a></span><span class="message">:)</span></div><div class="line" id="212310"><span class="nick">***</span><span class="message notice">ChanServ sets mode: -o janneke</span></div><div class="line" id="212644"><span class="nick" style="color:#80b1d3"><a href="#212644" label="[21:26:44]">&lt;janneke&gt;</a></span><span class="message">ekaitz: the wip-full-source-bootstrap branch already uses gcc-4.6 but still has the gcc-2.95.3 intermediate step</span></div><div class="line" id="212715"><span class="nick" style="color:#6d2462"><a href="#212715" label="[21:27:15]">&lt;ekaitz&gt;</a></span><span class="message">janneke: but is there any issue with moving to 4.7?</span></div><div class="line" id="212718"><span class="nick" style="color:#6d2462"><a href="#212718" label="[21:27:18]">&lt;ekaitz&gt;</a></span><span class="message">just asking</span></div><div class="line" id="212743"><span class="nick" style="color:#6d2462"><a href="#212743" label="[21:27:43]">&lt;ekaitz&gt;</a></span><span class="message">why did you choose 4.6</span></div><div class="line" id="213053"><span class="nick" style="color:#80b1d3"><a href="#213053" label="[21:30:53]">&lt;janneke&gt;</a></span><span class="message">gcc-4.7.4.tar.gz 102M</span></div><div class="line" id="213059"><span class="nick" style="color:#80b1d3"><a href="#213059" label="[21:30:59]">&lt;janneke&gt;</a></span><span class="message">gcc-core-4.6.4.tar.gz 37M</span></div><div class="line" id="213133"><span class="nick" style="color:#80b1d3"><a href="#213133" label="[21:31:33]">&lt;janneke&gt;</a></span><span class="message">gcc-4.7 has no modular distribution</span></div><div class="line" id="213319"><span class="nick" style="color:#80b1d3"><a href="#213319" label="[21:33:19]">&lt;janneke&gt;</a></span><span class="message">for every iteration trying to build the first gcc-core, which can take many tries, you'll be unpacking a lot of unnecessary cruft</span></div><div class="line" id="213320"><span class="nick" style="color:#80b1d3"><a href="#213320" label="[21:33:20]">&lt;janneke&gt;</a></span><span class="message">not funny</span></div><div class="line" id="215554"><span class="nick" style="color:#6d2462"><a href="#215554" label="[21:55:54]">&lt;ekaitz&gt;</a></span><span class="message">ooooh</span></div><div class="line" id="215859"><span class="nick" style="color:#2e2a4a"><a href="#215859" label="[21:58:59]">&lt;stikonas&gt;</a></span><span class="message">unpacking 100MB isn't that long though...</span></div><div class="line" id="215913"><span class="nick" style="color:#2e2a4a"><a href="#215913" label="[21:59:13]">&lt;stikonas&gt;</a></span><span class="message">or maybe it's quicker because I have SSD...</span></div><div class="line" id="220007"><span class="nick" style="color:#2e2a4a"><a href="#220007" label="[22:00:07]">&lt;stikonas&gt;</a></span><span class="message">anyway, there is probably not significant difference in terms of bootstrap (4.6 vs 4.7.4)</span></div><div class="line" id="224413"><span class="nick" style="color:#6b8072"><a href="#224413" label="[22:44:13]">&lt;alMalsamo&gt;</a></span><span class="message">stikonas: Thanks for that link to the fosslinux github, this is a lot more complicated than I imagined!  But to bootstrap following this process, won't I need to rely on something like the GNU Guix live image to have some sort of environment within which to run stage0-posix utilities and M2-Planet to finally get GNU Mes compiled?</span></div><div class="line" id="224437"><span class="nick" style="color:#2e2a4a"><a href="#224437" label="[22:44:37]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: no, it's completely self-contained</span></div><div class="line" id="224512"><span class="nick" style="color:#2e2a4a"><a href="#224512" label="[22:45:12]">&lt;stikonas&gt;</a></span><span class="message">you only need to start with hex0 and kaem-optional-seed (trivial shell)</span></div><div class="line" id="224549"><span class="nick" style="color:#2e2a4a"><a href="#224549" label="[22:45:49]">&lt;stikonas&gt;</a></span><span class="message">kaem-optional-seed is 757 byte long and can only read commands and their arguments from file and run it</span></div><div class="line" id="224549"><span class="nick" style="color:#2e2a4a"><a href="#224549" label="[22:45:49]">&lt;stikonas&gt;</a></span><span class="message">(well, and strip comments from that file)</span></div><div class="line" id="224554"><span class="nick" style="color:#2e2a4a"><a href="#224554" label="[22:45:54]">&lt;stikonas&gt;</a></span><span class="message">but you do need some kernel</span></div><div class="line" id="224612"><span class="nick" style="color:#2e2a4a"><a href="#224612" label="[22:46:12]">&lt;stikonas&gt;</a></span><span class="message">just doesn't have to be Guix live image</span></div><div class="line" id="224707"><span class="nick" style="color:#2e2a4a"><a href="#224707" label="[22:47:07]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: but you need some kind of kernel anyway for GNU Mes</span></div><div class="line" id="224713"><span class="nick" style="color:#2e2a4a"><a href="#224713" label="[22:47:13]">&lt;stikonas&gt;</a></span><span class="message">GNU Mes does not run on baremetal systems</span></div><div class="line" id="224720"><span class="nick" style="color:#2e2a4a"><a href="#224720" label="[22:47:20]">&lt;stikonas&gt;</a></span><span class="message">it really needs POSIX</span></div><div class="line" id="224750"><span class="nick" style="color:#2e2a4a"><a href="#224750" label="[22:47:50]">&lt;stikonas&gt;</a></span><span class="message">and we don't have any simple kernel for bootstrapping right now</span></div><div class="line" id="224909"><span class="nick" style="color:#6b8072"><a href="#224909" label="[22:49:09]">&lt;alMalsamo&gt;</a></span><span class="message">stikonas: So what kernel should I be using if I want to try starting with hex0 and kaem-optional-seed?</span></div><div class="line" id="224925"><span class="nick" style="color:#6b8072"><a href="#224925" label="[22:49:25]">&lt;alMalsamo&gt;</a></span><span class="message">And is kaem in stage0-posix or where is the code for this, I haven't heard of this shell before...</span></div><div class="line" id="224928"><span class="nick" style="color:#234e69"><a href="#224928" label="[22:49:28]">&lt;muurkha&gt;</a></span><span class="message">linux</span></div><div class="line" id="224932"><span class="nick" style="color:#2e2a4a"><a href="#224932" label="[22:49:32]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: any Linxu kernel</span></div><div class="line" id="225006"><span class="nick" style="color:#2e2a4a"><a href="#225006" label="[22:50:06]">&lt;stikonas&gt;</a></span><span class="message">well, live-bootstrap needs 32-bit kernel (not 64) but early stages work fine with 64-bit kernels too</span></div><div class="line" id="225212"><span class="nick" style="color:#2e2a4a"><a href="#225212" label="[22:52:12]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: so you can do bootstrap in chroot, qemu or real system</span></div><div class="line" id="225234"><span class="nick" style="color:#2e2a4a"><a href="#225234" label="[22:52:34]">&lt;stikonas&gt;</a></span><span class="message">real system is the most involved though  since you need to get some bootloader for linux kernel, etc...</span></div><div class="line" id="225246"><span class="nick" style="color:#2e2a4a"><a href="#225246" label="[22:52:46]">&lt;stikonas&gt;</a></span><span class="message">you'll also need some empty disk</span></div><div class="line" id="225258"><span class="nick" style="color:#2e2a4a"><a href="#225258" label="[22:52:58]">&lt;stikonas&gt;</a></span><span class="message">running it in qemu or chroot is of course much simpler</span></div><div class="line" id="225332"><span class="nick" style="color:#2e2a4a"><a href="#225332" label="[22:53:32]">&lt;stikonas&gt;</a></span><span class="message">and if you just run stage0-posix, you can run it without any isolation inside your distro</span></div><div class="line" id="225445"><span class="nick" style="color:#6b8072"><a href="#225445" label="[22:54:45]">&lt;alMalsamo&gt;</a></span><span class="message">Hmm well I want to end up with GNU Guix amd64 binaries, is this possible even if I start iwth an i686 kernel?</span></div><div class="line" id="225614"><span class="nick" style="color:#6b8072"><a href="#225614" label="[22:56:14]">&lt;alMalsamo&gt;</a></span><span class="message">I have two empty SSDs in my laptop without even a partition table on them, so I must install GNU Grub first somehow then boot an i686 Linux kernel?</span></div><div class="line" id="225623"><span class="nick" style="color:#2e2a4a"><a href="#225623" label="[22:56:23]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: kernel bits do not affect binaries</span></div><div class="line" id="225644"><span class="nick" style="color:#2e2a4a"><a href="#225644" label="[22:56:44]">&lt;stikonas&gt;</a></span><span class="message">but what you have to keep in mind that bootsrap process works ONLY on x86</span></div><div class="line" id="225707"><span class="nick" style="color:#2e2a4a"><a href="#225707" label="[22:57:07]">&lt;stikonas&gt;</a></span><span class="message">nothing else works</span></div><div class="line" id="225725"><span class="nick" style="color:#2e2a4a"><a href="#225725" label="[22:57:25]">&lt;stikonas&gt;</a></span><span class="message">we do have some steps for other arches</span></div><div class="line" id="225736"><span class="nick" style="color:#6b8072"><a href="#225736" label="[22:57:36]">&lt;alMalsamo&gt;</a></span><span class="message">Hmm okay that's a bummer I would like to do this on other microarchitectures eventually, but for now I only have x86_64 machines available so this doesn't bother me much FOR NOW</span></div><div class="line" id="225751"><span class="nick" style="color:#2e2a4a"><a href="#225751" label="[22:57:51]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix supports x86 x86_64, aarch64, riscv32, riscv64 but further steps work only on x86</span></div><div class="line" id="225844"><span class="nick" style="color:#2e2a4a"><a href="#225844" label="[22:58:44]">&lt;stikonas&gt;</a></span><span class="message">alMalsamo: well, contributions are welcome</span></div><div class="line" id="225846"><span class="nick" style="color:#6b8072"><a href="#225846" label="[22:58:46]">&lt;alMalsamo&gt;</a></span><span class="message">Oh cool even RISC-V support, I thought GNU Guix didn't even work on RISC-V yet</span></div><div class="line" id="225855"><span class="nick" style="color:#2e2a4a"><a href="#225855" label="[22:58:55]">&lt;stikonas&gt;</a></span><span class="message">no, Guix doesn't</span></div><div class="line" id="225900"><span class="nick" style="color:#2e2a4a"><a href="#225900" label="[22:59:00]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix does work on risc-v</span></div><div class="line" id="225908"><span class="nick" style="color:#2e2a4a"><a href="#225908" label="[22:59:08]">&lt;stikonas&gt;</a></span><span class="message">and it builds M2-Planet and some utilities</span></div><div class="line" id="225917"><span class="nick" style="color:#6b8072"><a href="#225917" label="[22:59:17]">&lt;alMalsamo&gt;</a></span><span class="message">OKay I want some RISC-V hardware but i don't want SiFive chips because they are proprietary so I am looking for chips with libre HDL code</span></div><div class="line" id="225918"><span class="nick" style="color:#2e2a4a"><a href="#225918" label="[22:59:18]">&lt;stikonas&gt;</a></span><span class="message">so you are in C land for furthter bootstrap</span></div><div class="line" id="225930"><span class="nick" style="color:#2e2a4a"><a href="#225930" label="[22:59:30]">&lt;stikonas&gt;</a></span><span class="message">no more assembly  / hex programming</span></div><div class="line" id="230039"><span class="nick" style="color:#6b8072"><a href="#230039" label="[23:00:39]">&lt;alMalsamo&gt;</a></span><span class="message">So I cloned this repo: <a rel="nofollow" href="https://git.savannah.nongnu.org/git/stage0.git">https://git.savannah.nongnu.org/git/stage0.git</a>   Is this completely unnecessary as I should just look for stage0-posix repo instead?</span></div><div class="line" id="230117"><span class="nick" style="color:#2e2a4a"><a href="#230117" label="[23:01:17]">&lt;stikonas&gt;</a></span><span class="message">well, stage0 is baremetal bootstrap...</span></div><div class="line" id="230124"><span class="nick" style="color:#2e2a4a"><a href="#230124" label="[23:01:24]">&lt;stikonas&gt;</a></span><span class="message">but yes, you don't need that if you have POSIX</span></div><div class="line" id="230140"><span class="nick" style="color:#2e2a4a"><a href="#230140" label="[23:01:40]">&lt;stikonas&gt;</a></span><span class="message">most people look at stage0-posix but there is some work on stage0</span></div><div class="line" id="230145"><span class="nick" style="color:#234e69"><a href="#230145" label="[23:01:45]">&lt;muurkha&gt;</a></span><span class="message">alMalsamo: there are a lot of libre RISC-V designs, like VexRiscV and PicoRV32.  not sure if there's a fully libre toolchain to get them running on an FPGA but I think VexRiscV can</span></div><div class="line" id="230151"><span class="nick" style="color:#2e2a4a"><a href="#230151" label="[23:01:51]">&lt;stikonas&gt;</a></span><span class="message">e.g. bauen1 is trying to run bootstrap on baremetal ARM</span></div><div class="line" id="232724"><span class="nick" style="color:#6b8072"><a href="#232724" label="[23:27:24]">&lt;alMalsamo&gt;</a></span><span class="message">Yeah there is also Boomv2 from Berkely and Alibaba XuanTie E902, E906, C906 and C910 which are RISC-V 64-bit</span></div><div class="line" id="232733"><span class="nick" style="color:#6b8072"><a href="#232733" label="[23:27:33]">&lt;alMalsamo&gt;</a></span><span class="message">not copylefted though :(</span></div><div class="line" id="232759"><span class="nick" style="color:#6b8072"><a href="#232759" label="[23:27:59]">&lt;alMalsamo&gt;</a></span><span class="message">But I kind of want a SoC board with a GPU because I am a newb</span></div><div class="line" id="232812"><span class="nick" style="color:#6b8072"><a href="#232812" label="[23:28:12]">&lt;alMalsamo&gt;</a></span><span class="message">So I am still waiting...</span></div><div class="line" id="232841"><span class="nick" style="color:#234e69"><a href="#232841" label="[23:28:41]">&lt;muurkha&gt;</a></span><span class="message">you can make your own copylefted derivative work if you want</span></div><div class="line" id="232917"><span class="nick" style="color:#234e69"><a href="#232917" label="[23:29:17]">&lt;muurkha&gt;</a></span><span class="message">but the big problem for copylefted silicon is how do you tell if the silicon really implements the purported design and how do you run your changes if you make a changed versio</span></div><div class="line" id="232957"><span class="nick" style="color:#2e2a4a"><a href="#232957" label="[23:29:57]">&lt;stikonas&gt;</a></span><span class="message">well, toolchain to build it on FPGA will definitely be non-bootstrappable</span></div><div class="line" id="233221"><span class="nick" style="color:#2e2a4a"><a href="#233221" label="[23:32:21]">&lt;stikonas&gt;</a></span><span class="message">but CPU bootstrap vs bootstrap on FPGA  is somewhat similar to stage0 vs stage0-posix</span></div><div class="line" id="233238"><span class="nick" style="color:#2e2a4a"><a href="#233238" label="[23:32:38]">&lt;stikonas&gt;</a></span><span class="message">except that it's probably easier to build simple kernel than your own hardware</span></div><div class="line" id="233241"><span class="nick" style="color:#234e69"><a href="#233241" label="[23:32:41]">&lt;muurkha&gt;</a></span><span class="message">not forever.  yosys/nextpnr is potentially bootstrappable</span></div><br /></div></body></html>