<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-07-21.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="024305"><span class="nick" style="color:#8dd3c7"><a href="#024305" label="[02:43:05]">&lt;OriansJ`&gt;</a></span><span class="message">christianbundy: that is because people don't actually remember things but rather only stories in their estimated 700MB of organic data storage unit called a brain. Because they compress better and allow a higher novelty value to ensure better probability of storage.</span></div><div class="line" id="024826"><span class="nick" style="color:#8dd3c7"><a href="#024826" label="[02:48:26]">&lt;OriansJ`&gt;</a></span><span class="message">although I believe they were unfair to multiple languages in their metric as libc can be entirely portable but usually are not for performance reasons. There are recursively defined libc entirely written in portable C; they are just slower and require either a native C compiler or a proper cross-platform C compiler.</span></div><div class="line" id="025019"><span class="nick" style="color:#2e2a4a"><a href="#025019" label="[02:50:19]">&lt;xentrac&gt;</a></span><span class="message">by &quot;portable&quot; they don't mean &quot;can be recompiled for a different platform&quot;</span></div><div class="line" id="025033"><span class="nick" style="color:#2e2a4a"><a href="#025033" label="[02:50:33]">&lt;xentrac&gt;</a></span><span class="message">they mean &quot;can be placed on a USB stick&quot;</span></div><div class="line" id="025042"><span class="nick" style="color:#8dd3c7"><a href="#025042" label="[02:50:42]">&lt;OriansJ`&gt;</a></span><span class="message">and they missed the Heavy environment entanglement in all of the interpreters (save for python and Perl where they did correctly identify it)</span></div><div class="line" id="025121"><span class="nick" style="color:#8dd3c7"><a href="#025121" label="[02:51:21]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: I could place a FULL linux distro on a USB stick</span></div><div class="line" id="025131"><span class="nick" style="color:#8dd3c7"><a href="#025131" label="[02:51:31]">&lt;OriansJ`&gt;</a></span><span class="message">we have been able to do that for years</span></div><div class="line" id="025235"><span class="nick" style="color:#8dd3c7"><a href="#025235" label="[02:52:35]">&lt;OriansJ`&gt;</a></span><span class="message">I mean another system usually is either x86/AMD64 or ARMv7l/AArch64</span></div><div class="line" id="025303"><span class="nick" style="color:#2e2a4a"><a href="#025303" label="[02:53:03]">&lt;xentrac&gt;</a></span><span class="message">yeah, but if you copy just an executable onto a USB stick, and then plug it into another computer, the executable may fail due to not having the shared library versions it expects</span></div><div class="line" id="025319"><span class="nick" style="color:#2e2a4a"><a href="#025319" label="[02:53:19]">&lt;xentrac&gt;</a></span><span class="message">unless it's statically linked</span></div><div class="line" id="025323"><span class="nick" style="color:#8dd3c7"><a href="#025323" label="[02:53:23]">&lt;OriansJ`&gt;</a></span><span class="message">Assuming you are not mixing POSIX and Win32 and build staticly it works just fine.</span></div><div class="line" id="025350"><span class="nick" style="color:#8dd3c7"><a href="#025350" label="[02:53:50]">&lt;OriansJ`&gt;</a></span><span class="message">but that does ballon binaries to a degree</span></div><div class="line" id="025408"><span class="nick" style="color:#8dd3c7"><a href="#025408" label="[02:54:08]">&lt;OriansJ`&gt;</a></span><span class="message">Guix of course really helps with the portable binary tars</span></div><div class="line" id="025545"><span class="nick" style="color:#8dd3c7"><a href="#025545" label="[02:55:45]">&lt;OriansJ`&gt;</a></span><span class="message">and I don't know of any packages in Guix that don't work when built for export and most of those languages are in Guix</span></div><div class="line" id="030325"><span class="nick" style="color:#2e2a4a"><a href="#030325" label="[03:03:25]">&lt;xentrac&gt;</a></span><span class="message">Right, but you can't assume you build statically.  That page is written specifically to identify which language implementations are capable of building statically --- more generally, building self-contained executables which depend on nothing from their natal environment.</span></div><div class="line" id="030333"><span class="nick" style="color:#2e2a4a"><a href="#030333" label="[03:03:33]">&lt;xentrac&gt;</a></span><span class="message">Not just libraries, but also interpreters, data files, and so on.</span></div><div class="line" id="031029"><span class="nick" style="color:#8dd3c7"><a href="#031029" label="[03:10:29]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: well dynamic binaries can never be assumed to work because the kernel's loader implementation can ignore or violate all of your assumptions</span></div><div class="line" id="031425"><span class="nick" style="color:#2e2a4a"><a href="#031425" label="[03:14:25]">&lt;xentrac&gt;</a></span><span class="message">you mean static ones?</span></div><div class="line" id="031450"><span class="nick" style="color:#2e2a4a"><a href="#031450" label="[03:14:50]">&lt;xentrac&gt;</a></span><span class="message">sure, you aren't avoiding the dependency on the kernel</span></div><div class="line" id="031508"><span class="nick" style="color:#2e2a4a"><a href="#031508" label="[03:15:08]">&lt;xentrac&gt;</a></span><span class="message">(I don't think he's talking about building bare-metal executables that can run without an OS)</span></div><div class="line" id="031831"><span class="nick" style="color:#2e2a4a"><a href="#031831" label="[03:18:31]">&lt;xentrac&gt;</a></span><span class="message">on another topic, I think there are things in the standard C library that can't be written in portable C.  va_start, exit, and longjmp come to mind</span></div><div class="line" id="053804"><span class="nick">***</span><span class="message notice">terpri__ is now known as terpri</span></div><div class="line" id="161131"><span class="nick">***</span><span class="message notice">terpri_ is now known as terpri</span></div><div class="line" id="204832"><span class="nick">***</span><span class="message notice">edef_ is now known as edef</span></div><br /></div></body></html>