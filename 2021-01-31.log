<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-31.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000019"><span class="nick" style="color:#389600"><a href="#000019" label="[00:00:19]">&lt;pder&gt;</a></span><span class="message">I guess I am still not clear how guix manages to get to gcc just using mes-libc?</span></div><div class="line" id="000122"><span class="nick" style="color:#389600"><a href="#000122" label="[00:01:22]">&lt;pder&gt;</a></span><span class="message">is it due to gash and other utilities written in scheme?</span></div><div class="line" id="000409"><span class="nick" style="color:#8dd3c7"><a href="#000409" label="[00:04:09]">&lt;fossy&gt;</a></span><span class="message">stikonas: I'll make a roadmap issue today I guess</span></div><div class="line" id="000523"><span class="nick" style="color:#2e2a4a"><a href="#000523" label="[00:05:23]">&lt;stikonas&gt;</a></span><span class="message">pder: yes, and some shortcuts too...</span></div><div class="line" id="000539"><span class="nick" style="color:#2e2a4a"><a href="#000539" label="[00:05:39]">&lt;stikonas&gt;</a></span><span class="message">I guess gash has some utils to help with configure scripts that we are struggling</span></div><div class="line" id="000610"><span class="nick" style="color:#2e2a4a"><a href="#000610" label="[00:06:10]">&lt;stikonas&gt;</a></span><span class="message">basically guix goes directly to binutils and gcc from where we are...</span></div><div class="line" id="000841"><span class="nick" style="color:#2e2a4a"><a href="#000841" label="[00:08:41]">&lt;stikonas&gt;</a></span><span class="message">pder: here <a rel="nofollow" href="https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html">https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html</a>  we have everything except for gash binutils and gcc</span></div><div class="line" id="000849"><span class="nick" style="color:#2e2a4a"><a href="#000849" label="[00:08:49]">&lt;stikonas&gt;</a></span><span class="message">and we actually have more stuff...</span></div><div class="line" id="001112"><span class="nick" style="color:#2e2a4a"><a href="#001112" label="[00:11:12]">&lt;stikonas&gt;</a></span><span class="message">coreutils actually has regex.c and regex.h which flex needs</span></div><div class="line" id="001115"><span class="nick" style="color:#2e2a4a"><a href="#001115" label="[00:11:15]">&lt;stikonas&gt;</a></span><span class="message">maybe we can use that somehow</span></div><div class="line" id="001142"><span class="nick" style="color:#2e2a4a"><a href="#001142" label="[00:11:42]">&lt;stikonas&gt;</a></span><span class="message">although, regex on its own is not enough...</span></div><div class="line" id="001929"><span class="nick" style="color:#2e2a4a"><a href="#001929" label="[00:19:29]">&lt;stikonas&gt;</a></span><span class="message">guix even builds coreutils after gcc and glibc...</span></div><div class="line" id="002455"><span class="nick" style="color:#2e2a4a"><a href="#002455" label="[00:24:55]">&lt;stikonas&gt;</a></span><span class="message">but at least we seem to be reproducible for now</span></div><div class="line" id="002506"><span class="nick" style="color:#2e2a4a"><a href="#002506" label="[00:25:06]">&lt;stikonas&gt;</a></span><span class="message">bash hash matches between two runs</span></div><div class="line" id="003100"><span class="nick" style="color:#389600"><a href="#003100" label="[00:31:00]">&lt;pder&gt;</a></span><span class="message">I havent tried it yet, but I am curious if our tcc version can build later versions of tcc.</span></div><div class="line" id="003358"><span class="nick" style="color:#389600"><a href="#003358" label="[00:33:58]">&lt;pder&gt;</a></span><span class="message">It would be interesting to try using musl, but personally I think it would be better in the long run to add missing things to mes-libc and fix any bugs there, since its important to have that solid before building another toolchain</span></div><div class="line" id="003505"><span class="nick" style="color:#80b1d3"><a href="#003505" label="[00:35:05]">&lt;rain1&gt;</a></span><span class="message">it's a good question</span></div><div class="line" id="003533"><span class="nick" style="color:#80b1d3"><a href="#003533" label="[00:35:33]">&lt;rain1&gt;</a></span><span class="message">what about a meta bug tracker for bootstrapping in general to post and stay updated on questions like that?</span></div><div class="line" id="004635"><span class="nick" style="color:#2e2a4a"><a href="#004635" label="[00:46:35]">&lt;stikonas&gt;</a></span><span class="message">pder: we have latest tcc</span></div><div class="line" id="004644"><span class="nick" style="color:#2e2a4a"><a href="#004644" label="[00:46:44]">&lt;stikonas&gt;</a></span><span class="message">latest released...</span></div><div class="line" id="004712"><span class="nick" style="color:#2e2a4a"><a href="#004712" label="[00:47:12]">&lt;stikonas&gt;</a></span><span class="message">but yeah, either we need to expand mes libc or get musl</span></div><div class="line" id="004729"><span class="nick" style="color:#389600"><a href="#004729" label="[00:47:29]">&lt;pder&gt;</a></span><span class="message">True, but I think someone added musl support to a later version than 0.9.27</span></div><div class="line" id="004811"><span class="nick" style="color:#389600"><a href="#004811" label="[00:48:11]">&lt;pder&gt;</a></span><span class="message">I might be mistaken</span></div><div class="line" id="005023"><span class="nick" style="color:#389600"><a href="#005023" label="[00:50:23]">&lt;pder&gt;</a></span><span class="message">Actually the first commit related to musl I see is release_0_9_26-1030-g0ac29b53</span></div><div class="line" id="005145"><span class="nick" style="color:#389600"><a href="#005145" label="[00:51:45]">&lt;pder&gt;</a></span><span class="message">Has uclibc been considered?</span></div><div class="line" id="012324"><span class="nick" style="color:#2e2a4a"><a href="#012324" label="[01:23:24]">&lt;stikonas&gt;</a></span><span class="message">pder: I briefly looked at it</span></div><div class="line" id="012325"><span class="nick" style="color:#2e2a4a"><a href="#012325" label="[01:23:25]">&lt;stikonas&gt;</a></span><span class="message">and dietlibc</span></div><div class="line" id="012335"><span class="nick" style="color:#2e2a4a"><a href="#012335" label="[01:23:35]">&lt;stikonas&gt;</a></span><span class="message">not too much luck</span></div><div class="line" id="012346"><span class="nick" style="color:#2e2a4a"><a href="#012346" label="[01:23:46]">&lt;stikonas&gt;</a></span><span class="message">musl seems the easiest</span></div><div class="line" id="012610"><span class="nick" style="color:#2e2a4a"><a href="#012610" label="[01:26:10]">&lt;stikonas&gt;</a></span><span class="message">(or if that doesn't work, then maybe extending mes-libc)</span></div><div class="line" id="012626"><span class="nick" style="color:#2e2a4a"><a href="#012626" label="[01:26:26]">&lt;stikonas&gt;</a></span><span class="message">in the very worse case, it might be possible to write makefile for gcc...</span></div><div class="line" id="012704"><span class="nick" style="color:#2e2a4a"><a href="#012704" label="[01:27:04]">&lt;stikonas&gt;</a></span><span class="message">(and binutils and glibc)</span></div><div class="line" id="012708"><span class="nick" style="color:#2e2a4a"><a href="#012708" label="[01:27:08]">&lt;stikonas&gt;</a></span><span class="message">but I would rather avoid that</span></div><div class="line" id="012831"><span class="nick" style="color:#2e2a4a"><a href="#012831" label="[01:28:31]">&lt;stikonas&gt;</a></span><span class="message">musl probably got a bit easier now that we have bash and coreutils...</span></div><div class="line" id="012853"><span class="nick" style="color:#2e2a4a"><a href="#012853" label="[01:28:53]">&lt;stikonas&gt;</a></span><span class="message">so we don't need to write our own build system</span></div><div class="line" id="012903"><span class="nick" style="color:#2e2a4a"><a href="#012903" label="[01:29:03]">&lt;stikonas&gt;</a></span><span class="message">but there were still tcc problems when compiling musl</span></div><div class="line" id="013005"><span class="nick" style="color:#6d2462"><a href="#013005" label="[01:30:05]">&lt;xentrac&gt;</a></span><span class="message">I may have missed messages intended for me :(</span></div><div class="line" id="013012"><span class="nick" style="color:#8dd3c7"><a href="#013012" label="[01:30:12]">&lt;fossy&gt;</a></span><span class="message">i don't think you did</span></div><div class="line" id="013126"><span class="nick" style="color:#6d2462"><a href="#013126" label="[01:31:26]">&lt;xentrac&gt;</a></span><span class="message">that's good!</span></div><div class="line" id="013517"><span class="nick" style="color:#2e2a4a"><a href="#013517" label="[01:35:17]">&lt;stikonas&gt;</a></span><span class="message">oh, I also missed yes from coreutils</span></div><div class="line" id="013521"><span class="nick" style="color:#2e2a4a"><a href="#013521" label="[01:35:21]">&lt;stikonas&gt;</a></span><span class="message">and it builds very easily</span></div><div class="line" id="013524"><span class="nick" style="color:#8dd3c7"><a href="#013524" label="[01:35:24]">&lt;fossy&gt;</a></span><span class="message">i love yes</span></div><div class="line" id="013543"><span class="nick" style="color:#2e2a4a"><a href="#013543" label="[01:35:43]">&lt;stikonas&gt;</a></span><span class="message">well, I think we need it for configure</span></div><div class="line" id="013547"><span class="nick" style="color:#2e2a4a"><a href="#013547" label="[01:35:47]">&lt;stikonas&gt;</a></span><span class="message">anyway PR here <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/25">https://github.com/fosslinux/live-bootstrap/pull/25</a> </span></div><div class="line" id="013623"><span class="nick" style="color:#2e2a4a"><a href="#013623" label="[01:36:23]">&lt;stikonas&gt;</a></span><span class="message">it's just literally adding it to COREUTILS in makefile</span></div><div class="line" id="013631"><span class="nick" style="color:#8dd3c7"><a href="#013631" label="[01:36:31]">&lt;fossy&gt;</a></span><span class="message">&lt;3 makefiles :D</span></div><div class="line" id="013655"><span class="nick" style="color:#2e2a4a"><a href="#013655" label="[01:36:55]">&lt;stikonas&gt;</a></span><span class="message">argh, I think yes was the missing piece for manu configure scripts</span></div><div class="line" id="013704"><span class="nick" style="color:#8dd3c7"><a href="#013704" label="[01:37:04]">&lt;fossy&gt;</a></span><span class="message">really? like what?</span></div><div class="line" id="013704"><span class="nick" style="color:#2e2a4a"><a href="#013704" label="[01:37:04]">&lt;stikonas&gt;</a></span><span class="message">so that's good now :)</span></div><div class="line" id="013712"><span class="nick" style="color:#6d2462"><a href="#013712" label="[01:37:12]">&lt;xentrac&gt;</a></span><span class="message">makefiles are pretty nice</span></div><div class="line" id="013714"><span class="nick" style="color:#8dd3c7"><a href="#013714" label="[01:37:14]">&lt;fossy&gt;</a></span><span class="message">ooh can we build musl now</span></div><div class="line" id="013720"><span class="nick" style="color:#8dd3c7"><a href="#013720" label="[01:37:20]">&lt;fossy&gt;</a></span><span class="message">because configure handwritten, no?</span></div><div class="line" id="013721"><span class="nick" style="color:#2e2a4a"><a href="#013721" label="[01:37:21]">&lt;stikonas&gt;</a></span><span class="message">fossy: we can try</span></div><div class="line" id="013727"><span class="nick" style="color:#2e2a4a"><a href="#013727" label="[01:37:27]">&lt;stikonas&gt;</a></span><span class="message">yes, configure is handwritten</span></div><div class="line" id="013736"><span class="nick" style="color:#2e2a4a"><a href="#013736" label="[01:37:36]">&lt;stikonas&gt;</a></span><span class="message">but there are some problems last I checked (with busybox)</span></div><div class="line" id="013742"><span class="nick" style="color:#8dd3c7"><a href="#013742" label="[01:37:42]">&lt;fossy&gt;</a></span><span class="message">hooray the first piece of software that we can use a real buiild system for</span></div><div class="line" id="013745"><span class="nick" style="color:#2e2a4a"><a href="#013745" label="[01:37:45]">&lt;stikonas&gt;</a></span><span class="message">tcc -ar is a bit broken</span></div><div class="line" id="013747"><span class="nick" style="color:#8dd3c7"><a href="#013747" label="[01:37:47]">&lt;fossy&gt;</a></span><span class="message">or at least attempt</span></div><div class="line" id="013750"><span class="nick" style="color:#8dd3c7"><a href="#013750" label="[01:37:50]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="013750"><span class="nick" style="color:#2e2a4a"><a href="#013750" label="[01:37:50]">&lt;stikonas&gt;</a></span><span class="message">so we need to workaround that</span></div><div class="line" id="013759"><span class="nick" style="color:#2e2a4a"><a href="#013759" label="[01:37:59]">&lt;stikonas&gt;</a></span><span class="message">and there are some problems with some assembly files</span></div><div class="line" id="013800"><span class="nick" style="color:#8dd3c7"><a href="#013800" label="[01:38:00]">&lt;fossy&gt;</a></span><span class="message">the too many files issue?</span></div><div class="line" id="013805"><span class="nick" style="color:#2e2a4a"><a href="#013805" label="[01:38:05]">&lt;stikonas&gt;</a></span><span class="message">yeah</span></div><div class="line" id="013805"><span class="nick" style="color:#8dd3c7"><a href="#013805" label="[01:38:05]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh, i know what that is</span></div><div class="line" id="013813"><span class="nick" style="color:#2e2a4a"><a href="#013813" label="[01:38:13]">&lt;stikonas&gt;</a></span><span class="message">but do you have fix?</span></div><div class="line" id="013815"><span class="nick" style="color:#2e2a4a"><a href="#013815" label="[01:38:15]">&lt;stikonas&gt;</a></span><span class="message">or workaround?</span></div><div class="line" id="013820"><span class="nick" style="color:#8dd3c7"><a href="#013820" label="[01:38:20]">&lt;fossy&gt;</a></span><span class="message">the assembly thing is that tinycc (our one at least) dosen't have hex numbers</span></div><div class="line" id="013828"><span class="nick" style="color:#8dd3c7"><a href="#013828" label="[01:38:28]">&lt;fossy&gt;</a></span><span class="message">all hex numbers have to be converted to decimal in assembly</span></div><div class="line" id="013839"><span class="nick" style="color:#2e2a4a"><a href="#013839" label="[01:38:39]">&lt;stikonas&gt;</a></span><span class="message">well, maybe...</span></div><div class="line" id="013848"><span class="nick" style="color:#2e2a4a"><a href="#013848" label="[01:38:48]">&lt;stikonas&gt;</a></span><span class="message">you can try to look at those problems I had...</span></div><div class="line" id="013852"><span class="nick" style="color:#8dd3c7"><a href="#013852" label="[01:38:52]">&lt;fossy&gt;</a></span><span class="message">that's at least one issue, i ran into it with linux</span></div><div class="line" id="013855"><span class="nick" style="color:#2e2a4a"><a href="#013855" label="[01:38:55]">&lt;stikonas&gt;</a></span><span class="message">maybe together we can wrestle it...</span></div><div class="line" id="013858"><span class="nick" style="color:#8dd3c7"><a href="#013858" label="[01:38:58]">&lt;fossy&gt;</a></span><span class="message">yeah sure</span></div><div class="line" id="013914"><span class="nick" style="color:#2e2a4a"><a href="#013914" label="[01:39:14]">&lt;stikonas&gt;</a></span><span class="message">also there was static keyword issue</span></div><div class="line" id="013918"><span class="nick" style="color:#8dd3c7"><a href="#013918" label="[01:39:18]">&lt;fossy&gt;</a></span><span class="message">also, what do you think about removing sources/ directory and downloading directly to tmp/?</span></div><div class="line" id="013920"><span class="nick" style="color:#234e69"><a href="#013920" label="[01:39:20]">&lt;deesix&gt;</a></span><span class="message">&quot;&quot;&quot;xentrac did an amazing job with stone-knife FORTH but eventually opcodes still has to show up eventually.&quot;&quot;&quot; That was the msg with you nick.</span></div><div class="line" id="013921"><span class="nick" style="color:#2e2a4a"><a href="#013921" label="[01:39:21]">&lt;stikonas&gt;</a></span><span class="message">we can either patch source or get tcc snapshot...</span></div><div class="line" id="013941"><span class="nick" style="color:#8dd3c7"><a href="#013941" label="[01:39:41]">&lt;fossy&gt;</a></span><span class="message">it would mean that it would have to redownload each time tho</span></div><div class="line" id="013952"><span class="nick" style="color:#2e2a4a"><a href="#013952" label="[01:39:52]">&lt;stikonas&gt;</a></span><span class="message">fossy: a bit cheating, but I finally managed to use configure...</span></div><div class="line" id="013954"><span class="nick" style="color:#2e2a4a"><a href="#013954" label="[01:39:54]">&lt;stikonas&gt;</a></span><span class="message">on tar</span></div><div class="line" id="013956"><span class="nick" style="color:#8dd3c7"><a href="#013956" label="[01:39:56]">&lt;fossy&gt;</a></span><span class="message">stikonas: i am still not a fan of mob</span></div><div class="line" id="014016"><span class="nick" style="color:#2e2a4a"><a href="#014016" label="[01:40:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, we'll see, it's not too hard to patch statics out of source</span></div><div class="line" id="014023"><span class="nick" style="color:#2e2a4a"><a href="#014023" label="[01:40:23]">&lt;stikonas&gt;</a></span><span class="message">there is a dozen or so...</span></div><div class="line" id="014027"><span class="nick" style="color:#8dd3c7"><a href="#014027" label="[01:40:27]">&lt;fossy&gt;</a></span><span class="message">i swear tcc supports static</span></div><div class="line" id="014029"><span class="nick" style="color:#8dd3c7"><a href="#014029" label="[01:40:29]">&lt;fossy&gt;</a></span><span class="message">does it noT?</span></div><div class="line" id="014046"><span class="nick" style="color:#2e2a4a"><a href="#014046" label="[01:40:46]">&lt;stikonas&gt;</a></span><span class="message">maybe not when it's used so strangely</span></div><div class="line" id="014049"><span class="nick" style="color:#8dd3c7"><a href="#014049" label="[01:40:49]">&lt;fossy&gt;</a></span><span class="message">ohhh</span></div><div class="line" id="014054"><span class="nick" style="color:#8dd3c7"><a href="#014054" label="[01:40:54]">&lt;fossy&gt;</a></span><span class="message">i remember now, the weird syntax</span></div><div class="line" id="014059"><span class="nick" style="color:#2e2a4a"><a href="#014059" label="[01:40:59]">&lt;stikonas&gt;</a></span><span class="message">it's not complaining about everything</span></div><div class="line" id="014103"><span class="nick" style="color:#2e2a4a"><a href="#014103" label="[01:41:03]">&lt;stikonas&gt;</a></span><span class="message">it was inside array index</span></div><div class="line" id="014106"><span class="nick" style="color:#8dd3c7"><a href="#014106" label="[01:41:06]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="014109"><span class="nick" style="color:#2e2a4a"><a href="#014109" label="[01:41:09]">&lt;stikonas&gt;</a></span><span class="message">[static something]</span></div><div class="line" id="014110"><span class="nick" style="color:#8dd3c7"><a href="#014110" label="[01:41:10]">&lt;fossy&gt;</a></span><span class="message">patch that out imo</span></div><div class="line" id="014316"><span class="nick" style="color:#2e2a4a"><a href="#014316" label="[01:43:16]">&lt;stikonas&gt;</a></span><span class="message">do we want to rebuild tar with makefile and getdata that we patched out? Or not worth it?</span></div><div class="line" id="014328"><span class="nick" style="color:#2e2a4a"><a href="#014328" label="[01:43:28]">&lt;stikonas&gt;</a></span><span class="message">it wouldn't really give us any benefits...</span></div><div class="line" id="014344"><span class="nick" style="color:#2e2a4a"><a href="#014344" label="[01:43:44]">&lt;stikonas&gt;</a></span><span class="message">but yacc is able to deal with tar's getdata.y</span></div><div class="line" id="014344"><span class="nick" style="color:#8dd3c7"><a href="#014344" label="[01:43:44]">&lt;fossy&gt;</a></span><span class="message">what kind of data?</span></div><div class="line" id="014352"><span class="nick" style="color:#2e2a4a"><a href="#014352" label="[01:43:52]">&lt;stikonas&gt;</a></span><span class="message">sorry date</span></div><div class="line" id="014353"><span class="nick" style="color:#2e2a4a"><a href="#014353" label="[01:43:53]">&lt;stikonas&gt;</a></span><span class="message">not data</span></div><div class="line" id="014354"><span class="nick" style="color:#8dd3c7"><a href="#014354" label="[01:43:54]">&lt;fossy&gt;</a></span><span class="message">oh, getdata the file LOL</span></div><div class="line" id="014407"><span class="nick" style="color:#2e2a4a"><a href="#014407" label="[01:44:07]">&lt;stikonas&gt;</a></span><span class="message">yeah, getdate.y -&gt; getdate.{c,h}</span></div><div class="line" id="014422"><span class="nick" style="color:#8dd3c7"><a href="#014422" label="[01:44:22]">&lt;fossy&gt;</a></span><span class="message">um, i don't really mind. i don't think it provides much of a benefit</span></div><div class="line" id="014438"><span class="nick" style="color:#8dd3c7"><a href="#014438" label="[01:44:38]">&lt;fossy&gt;</a></span><span class="message">hm, it might be worth for configure scripts though</span></div><div class="line" id="014446"><span class="nick" style="color:#8dd3c7"><a href="#014446" label="[01:44:46]">&lt;fossy&gt;</a></span><span class="message">i know autotools configure scripts are datesensitive</span></div><div class="line" id="014501"><span class="nick" style="color:#2e2a4a"><a href="#014501" label="[01:45:01]">&lt;stikonas&gt;</a></span><span class="message">files have dates</span></div><div class="line" id="014506"><span class="nick" style="color:#8dd3c7"><a href="#014506" label="[01:45:06]">&lt;fossy&gt;</a></span><span class="message">but i think it's just it has to be newer than a file in the tarball (and i think all our files are unix time 0)</span></div><div class="line" id="014507"><span class="nick" style="color:#2e2a4a"><a href="#014507" label="[01:45:07]">&lt;stikonas&gt;</a></span><span class="message">so I'm not too sure what's not working</span></div><div class="line" id="014517"><span class="nick" style="color:#2e2a4a"><a href="#014517" label="[01:45:17]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="014521"><span class="nick" style="color:#2e2a4a"><a href="#014521" label="[01:45:21]">&lt;stikonas&gt;</a></span><span class="message">so far we have no time</span></div><div class="line" id="014526"><span class="nick" style="color:#2e2a4a"><a href="#014526" label="[01:45:26]">&lt;stikonas&gt;</a></span><span class="message">which is good for reproducibility</span></div><div class="line" id="014529"><span class="nick" style="color:#8dd3c7"><a href="#014529" label="[01:45:29]">&lt;fossy&gt;</a></span><span class="message">yeah, everything is at Jan 1 1970</span></div><div class="line" id="014537"><span class="nick" style="color:#2e2a4a"><a href="#014537" label="[01:45:37]">&lt;stikonas&gt;</a></span><span class="message">well, I check bash between 2 runs was identical</span></div><div class="line" id="014540"><span class="nick" style="color:#8dd3c7"><a href="#014540" label="[01:45:40]">&lt;fossy&gt;</a></span><span class="message">well if we extract the time, that's still reproducible</span></div><div class="line" id="014543"><span class="nick" style="color:#8dd3c7"><a href="#014543" label="[01:45:43]">&lt;fossy&gt;</a></span><span class="message">that's good</span></div><div class="line" id="014636"><span class="nick" style="color:#2e2a4a"><a href="#014636" label="[01:46:36]">&lt;stikonas&gt;</a></span><span class="message">by the way, we used some proper build system for something</span></div><div class="line" id="014639"><span class="nick" style="color:#2e2a4a"><a href="#014639" label="[01:46:39]">&lt;stikonas&gt;</a></span><span class="message">I think bzip2</span></div><div class="line" id="014644"><span class="nick" style="color:#2e2a4a"><a href="#014644" label="[01:46:44]">&lt;stikonas&gt;</a></span><span class="message">but it's a simple package</span></div><div class="line" id="014645"><span class="nick" style="color:#8dd3c7"><a href="#014645" label="[01:46:45]">&lt;fossy&gt;</a></span><span class="message">oh yeah it was bzip2</span></div><div class="line" id="014654"><span class="nick" style="color:#8dd3c7"><a href="#014654" label="[01:46:54]">&lt;fossy&gt;</a></span><span class="message">bc it has just a file</span></div><div class="line" id="014932"><span class="nick" style="color:#6c3d55"><a href="#014932" label="[01:49:32]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://fsharpforfunandprofit.com/posts/cyclic-dependencies/">https://fsharpforfunandprofit.com/posts/cyclic-dependencies/</a>  not about bootstrapping specifically, but makes some relevant points</span></div><div class="line" id="014952"><span class="nick" style="color:#6c3d55"><a href="#014952" label="[01:49:52]">&lt;Hagfish&gt;</a></span><span class="message">in the Hacker News comments, someone even talks about bootstrapping gcc</span></div><div class="line" id="014954"><span class="nick" style="color:#6c3d55"><a href="#014954" label="[01:49:54]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://news.ycombinator.com/item?id=25971245">https://news.ycombinator.com/item?id=25971245</a> </span></div><div class="line" id="025611"><span class="nick" style="color:#d9d9d9"><a href="#025611" label="[02:56:11]">&lt;OriansJ&gt;</a></span><span class="message">I love the create a C compiler in assembly line, like they don't even realize that we have already done that to bootstrap M2-Planet</span></div><div class="line" id="025801"><span class="nick" style="color:#6d2462"><a href="#025801" label="[02:58:01]">&lt;xentrac&gt;</a></span><span class="message">the orange website is invariably full of highly-voted fools; you don't get highly-voted comments by waiting until after you've read through an entire article to post a comment about it</span></div><div class="line" id="041317"><span class="nick" style="color:#bc80bd"><a href="#041317" label="[04:13:17]">&lt;siraben&gt;</a></span><span class="message">upvoted that mes comment :D</span></div><div class="line" id="054744"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="080507"><span class="nick" style="color:#3c5b35"><a href="#080507" label="[08:05:07]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: can you maybe use 'mkimage' from uboot to convert your vmlinux to bzimage?</span></div><div class="line" id="080524"><span class="nick" style="color:#8dd3c7"><a href="#080524" label="[08:05:24]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: thanks for the pointer, i will def take a look</span></div><div class="line" id="080539"><span class="nick" style="color:#8dd3c7"><a href="#080539" label="[08:05:39]">&lt;fossy&gt;</a></span><span class="message">i am seeing that kexec can take an elf. but the elf dosen't work</span></div><div class="line" id="080541"><span class="nick" style="color:#8dd3c7"><a href="#080541" label="[08:05:41]">&lt;fossy&gt;</a></span><span class="message">in kexec</span></div><div class="line" id="080549"><span class="nick" style="color:#8dd3c7"><a href="#080549" label="[08:05:49]">&lt;fossy&gt;</a></span><span class="message">so i might have better luck with bzimage</span></div><div class="line" id="082544"><span class="nick" style="color:#3c5b35"><a href="#082544" label="[08:25:44]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: at least it's worth a try for fast conversion and if it succeeds, the tool is maybe not too hard to compile</span></div><div class="line" id="090737"><span class="nick" style="color:#8dd3c7"><a href="#090737" label="[09:07:37]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: for sure</span></div><div class="line" id="090834"><span class="nick" style="color:#8dd3c7"><a href="#090834" label="[09:08:34]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: are you use it makes it into a bzimage <a rel="nofollow" href="https://linux.die.net/man/1/mkimage">https://linux.die.net/man/1/mkimage</a> </span></div><div class="line" id="090855"><span class="nick" style="color:#8dd3c7"><a href="#090855" label="[09:08:55]">&lt;fossy&gt;</a></span><span class="message">it dosen't seem to make it into a bzimage, rahter a &quot;u-boot image&quot;</span></div><div class="line" id="100359"><span class="nick" style="color:#3c5b35"><a href="#100359" label="[10:03:59]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: you are right. i just read: <a rel="nofollow" href="https://unix.stackexchange.com/questions/197225/is-vmlinuz-and-bzimage-really-the-same">https://unix.stackexchange.com/questions/197225/is-vmlinuz-and-bzimage-really-the-same</a> </span></div><div class="line" id="100453"><span class="nick" style="color:#3c5b35"><a href="#100453" label="[10:04:53]">&lt;gforce_d11977&gt;</a></span><span class="message">and <a rel="nofollow" href="https://github.com/torvalds/linux/blob/master/arch/x86/boot/compressed/Makefile">https://github.com/torvalds/linux/blob/master/arch/x86/boot/compressed/Makefile</a> </span></div><div class="line" id="100538"><span class="nick" style="color:#3c5b35"><a href="#100538" label="[10:05:38]">&lt;gforce_d11977&gt;</a></span><span class="message">and <a rel="nofollow" href="https://www.kernel.org/doc/Documentation/x86/boot.rst">https://www.kernel.org/doc/Documentation/x86/boot.rst</a> </span></div><div class="line" id="100634"><span class="nick" style="color:#3c5b35"><a href="#100634" label="[10:06:34]">&lt;gforce_d11977&gt;</a></span><span class="message">so you dont need any compression, but a bootable kernel (e.g. bootsect.o + setup.o + misc.o + piggy.o)</span></div><div class="line" id="100713"><span class="nick" style="color:#3c5b35"><a href="#100713" label="[10:07:13]">&lt;gforce_d11977&gt;</a></span><span class="message">but maybe tis is not true for kexec, I must further</span></div><div class="line" id="101303"><span class="nick" style="color:#3c5b35"><a href="#101303" label="[10:13:03]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: have you tried to build 'kexec' for userspace with the minimal toolset what live-bootstrap provides for now?</span></div><div class="line" id="102606"><span class="nick" style="color:#af8d2f"><a href="#102606" label="[10:26:06]">&lt;bauen1&gt;</a></span><span class="message">pder: i'm using a stripped down version of musl with tinycc, but i've choosen some commit from mob, iirc because some minor features where added that made my life easier</span></div><div class="line" id="102617"><span class="nick" style="color:#af8d2f"><a href="#102617" label="[10:26:17]">&lt;bauen1&gt;</a></span><span class="message">but i can't remember if it was just related to the kernel or also musl</span></div><div class="line" id="102634"><span class="nick" style="color:#af8d2f"><a href="#102634" label="[10:26:34]">&lt;bauen1&gt;</a></span><span class="message">in any case building musl with tinycc is doable, but requires some adjusting due to unknown assembly opcodes</span></div><div class="line" id="102639"><span class="nick" style="color:#af8d2f"><a href="#102639" label="[10:26:39]">&lt;bauen1&gt;</a></span><span class="message">and a few other things</span></div><div class="line" id="103228"><span class="nick" style="color:#af8d2f"><a href="#103228" label="[10:32:28]">&lt;bauen1&gt;</a></span><span class="message">actually i may have some patched musl code lying around for building most of the library for linux-x86_64, let me check</span></div><div class="line" id="103521"><span class="nick" style="color:#af8d2f"><a href="#103521" label="[10:35:21]">&lt;bauen1&gt;</a></span><span class="message">weird, something keeps setting +x on musls libc, breaking my ci</span></div><div class="line" id="103905"><span class="nick" style="color:#af8d2f"><a href="#103905" label="[10:39:05]">&lt;bauen1&gt;</a></span><span class="message">of course it doesn't happen locally, because that would be too boring</span></div><div class="line" id="103958"><span class="nick" style="color:#3c5b35"><a href="#103958" label="[10:39:58]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: 8-)))</span></div><div class="line" id="104146"><span class="nick" style="color:#af8d2f"><a href="#104146" label="[10:41:46]">&lt;bauen1&gt;</a></span><span class="message">looking at what tinycc commit i'm using for myunix fb1fb8219ccf4813d63edf8c40fddc756e0c60cc, there is:</span></div><div class="line" id="104149"><span class="nick" style="color:#af8d2f"><a href="#104149" label="[10:41:49]">&lt;bauen1&gt;</a></span><span class="message">2f94390 musl: disable boundcheck tests</span></div><div class="line" id="104154"><span class="nick" style="color:#af8d2f"><a href="#104154" label="[10:41:54]">&lt;bauen1&gt;</a></span><span class="message">245f6a0 stdarg: always have the __builtin_va_* available</span></div><div class="line" id="104158"><span class="nick" style="color:#af8d2f"><a href="#104158" label="[10:41:58]">&lt;bauen1&gt;</a></span><span class="message">8c6143d Fix stdarg on x86-64</span></div><div class="line" id="104208"><span class="nick" style="color:#af8d2f"><a href="#104208" label="[10:42:08]">&lt;bauen1&gt;</a></span><span class="message">those three commits are probably important for building musl</span></div><div class="line" id="104228"><span class="nick" style="color:#af8d2f"><a href="#104228" label="[10:42:28]">&lt;bauen1&gt;</a></span><span class="message">iirc with older versions there are some problems with double defines, and redefinitions with different values</span></div><div class="line" id="105213"><span class="nick" style="color:#8dd3c7"><a href="#105213" label="[10:52:13]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: not yet</span></div><div class="line" id="105226"><span class="nick" style="color:#8dd3c7"><a href="#105226" label="[10:52:26]">&lt;fossy&gt;</a></span><span class="message">but its a pretty simple package</span></div><div class="line" id="105241"><span class="nick" style="color:#8dd3c7"><a href="#105241" label="[10:52:41]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: i did extract the vmlinux from your very useful chroot mode and then try to kexec it on anther system</span></div><div class="line" id="105245"><span class="nick" style="color:#8dd3c7"><a href="#105245" label="[10:52:45]">&lt;fossy&gt;</a></span><span class="message">however that failed</span></div><div class="line" id="105248"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="105252"><span class="nick" style="color:#8dd3c7"><a href="#105252" label="[10:52:52]">&lt;fossy&gt;</a></span><span class="message">due to word size alignment</span></div><div class="line" id="111109"><span class="nick" style="color:#389600"><a href="#111109" label="[11:11:09]">&lt;stikonas[m]&gt;</a></span><span class="message">bauen1: I might try that</span></div><div class="line" id="114630"><span class="nick" style="color:#2e2a4a"><a href="#114630" label="[11:46:30]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh you now downloading directly into tmp?</span></div><div class="line" id="114701"><span class="nick" style="color:#2e2a4a"><a href="#114701" label="[11:47:01]">&lt;stikonas&gt;</a></span><span class="message">if some upstream mirror is gone, we might not have any copy of tarballs</span></div><div class="line" id="114715"><span class="nick" style="color:#2e2a4a"><a href="#114715" label="[11:47:15]">&lt;stikonas&gt;</a></span><span class="message">even locally in that case</span></div><div class="line" id="114806"><span class="nick" style="color:#2e2a4a"><a href="#114806" label="[11:48:06]">&lt;stikonas&gt;</a></span><span class="message">maybe it's better to download into .gitignored files in sysa/*/src?</span></div><div class="line" id="120619"><span class="nick" style="color:#2e2a4a"><a href="#120619" label="[12:06:19]">&lt;stikonas&gt;</a></span><span class="message">bauen1: which musl version were you using?</span></div><div class="line" id="122142"><span class="nick" style="color:#af8d2f"><a href="#122142" label="[12:21:42]">&lt;bauen1&gt;</a></span><span class="message">stikonas: my myunix fork is based of v1.2.1</span></div><div class="line" id="122154"><span class="nick" style="color:#af8d2f"><a href="#122154" label="[12:21:54]">&lt;bauen1&gt;</a></span><span class="message">so of commit 73cc775bee53300c7cf759f37580220b18ac13d3</span></div><div class="line" id="122547"><span class="nick" style="color:#2e2a4a"><a href="#122547" label="[12:25:47]">&lt;stikonas&gt;</a></span><span class="message">ok, thanks, I'll try to build tcc first</span></div><div class="line" id="122554"><span class="nick" style="color:#2e2a4a"><a href="#122554" label="[12:25:54]">&lt;stikonas&gt;</a></span><span class="message">although, I think that commit is too new for mes libc</span></div><div class="line" id="122602"><span class="nick" style="color:#2e2a4a"><a href="#122602" label="[12:26:02]">&lt;stikonas&gt;</a></span><span class="message">maybe will have to backport</span></div><div class="line" id="122615"><span class="nick" style="color:#2e2a4a"><a href="#122615" label="[12:26:15]">&lt;stikonas&gt;</a></span><span class="message">I think we can build up to something in 2019</span></div><div class="line" id="132646"><span class="nick" style="color:#2e2a4a"><a href="#132646" label="[13:26:46]">&lt;stikonas&gt;</a></span><span class="message">pder: by the way, coreutils cut is also a bit broken, some memory allocation problems</span></div><div class="line" id="133555"><span class="nick" style="color:#bc80bd"><a href="#133555" label="[13:35:55]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/zeux/3ce4fcc3a43072b4315abde95319ecb6">https://gist.github.com/zeux/3ce4fcc3a43072b4315abde95319ecb6</a> </span></div><div class="line" id="133607"><span class="nick" style="color:#bc80bd"><a href="#133607" label="[13:36:07]">&lt;siraben&gt;</a></span><span class="message">&quot;How does Clang 2.7 hold up in 2021? (gist.github.com)&quot;</span></div><div class="line" id="133941"><span class="nick" style="color:#6d2462"><a href="#133941" label="[13:39:41]">&lt;xentrac&gt;</a></span><span class="message">that was depressing, siraben</span></div><div class="line" id="134005"><span class="nick" style="color:#bc80bd"><a href="#134005" label="[13:40:05]">&lt;siraben&gt;</a></span><span class="message">xentrac: how come?</span></div><div class="line" id="134247"><span class="nick" style="color:#6d2462"><a href="#134247" label="[13:42:47]">&lt;xentrac&gt;</a></span><span class="message">so much cost, so little gain</span></div><div class="line" id="134653"><span class="nick" style="color:#af8d2f"><a href="#134653" label="[13:46:53]">&lt;bauen1&gt;</a></span><span class="message">isn't that not actually too bad ?</span></div><div class="line" id="134708"><span class="nick" style="color:#af8d2f"><a href="#134708" label="[13:47:08]">&lt;bauen1&gt;</a></span><span class="message">you (ideally) only compile once and then run the resulting object a lot more often</span></div><div class="line" id="135056"><span class="nick" style="color:#6d2462"><a href="#135056" label="[13:50:56]">&lt;xentrac&gt;</a></span><span class="message">bauen1: the situation is dramatically worse than Proebsting had said, with respect to C compilers at least</span></div><div class="line" id="143306"><span class="nick" style="color:#2e2a4a"><a href="#143306" label="[14:33:06]">&lt;stikonas&gt;</a></span><span class="message">well, you can't expect exponential increase for that long...</span></div><div class="line" id="213534"><span class="nick" style="color:#389600"><a href="#213534" label="[21:35:34]">&lt;pder&gt;</a></span><span class="message">stikonas: I looked at cut and its a strange bug.  cut seems to work fine with reading from files, but when reading from stdin is when you get the memory exhausted error</span></div><div class="line" id="213741"><span class="nick" style="color:#389600"><a href="#213741" label="[21:37:41]">&lt;pder&gt;</a></span><span class="message">in lib/getstr.c on line 54, there is a check for !lineptr || !n || !stream.  But if stream is stdin which is 0, that function will always return an error</span></div><div class="line" id="213812"><span class="nick" style="color:#389600"><a href="#213812" label="[21:38:12]">&lt;pder&gt;</a></span><span class="message">Not sure how that code ever would normally work</span></div><div class="line" id="214925"><span class="nick" style="color:#8dd3c7"><a href="#214925" label="[21:49:25]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah</span></div><div class="line" id="214940"><span class="nick" style="color:#8dd3c7"><a href="#214940" label="[21:49:40]">&lt;fossy&gt;</a></span><span class="message">I think source not existing is a seperate problem</span></div><div class="line" id="215005"><span class="nick" style="color:#8dd3c7"><a href="#215005" label="[21:50:05]">&lt;fossy&gt;</a></span><span class="message">we should address that in a separate script or smth</span></div><div class="line" id="215021"><span class="nick" style="color:#8dd3c7"><a href="#215021" label="[21:50:21]">&lt;fossy&gt;</a></span><span class="message">or maybe a completely separate project</span></div><div class="line" id="215046"><span class="nick" style="color:#8dd3c7"><a href="#215046" label="[21:50:46]">&lt;fossy&gt;</a></span><span class="message">stikonas: try 1.1.x series, it is very more simple iirc</span></div><div class="line" id="215127"><span class="nick" style="color:#2e2a4a"><a href="#215127" label="[21:51:27]">&lt;stikonas&gt;</a></span><span class="message">1.1.x series of coreutils?</span></div><div class="line" id="215134"><span class="nick" style="color:#8dd3c7"><a href="#215134" label="[21:51:34]">&lt;fossy&gt;</a></span><span class="message">musl</span></div><div class="line" id="215139"><span class="nick" style="color:#2e2a4a"><a href="#215139" label="[21:51:39]">&lt;stikonas&gt;</a></span><span class="message">oh...</span></div><div class="line" id="215145"><span class="nick" style="color:#2e2a4a"><a href="#215145" label="[21:51:45]">&lt;stikonas&gt;</a></span><span class="message">I was trying the one from gio repo</span></div><div class="line" id="215156"><span class="nick" style="color:#8dd3c7"><a href="#215156" label="[21:51:56]">&lt;fossy&gt;</a></span><span class="message">oh yeah</span></div><div class="line" id="215157"><span class="nick" style="color:#8dd3c7"><a href="#215157" label="[21:51:57]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="215203"><span class="nick" style="color:#2e2a4a"><a href="#215203" label="[21:52:03]">&lt;stikonas&gt;</a></span><span class="message">by the way, I briefly tried to check tcc -ar issue...</span></div><div class="line" id="215212"><span class="nick" style="color:#2e2a4a"><a href="#215212" label="[21:52:12]">&lt;stikonas&gt;</a></span><span class="message">I think it's not tcc problem itself</span></div><div class="line" id="215225"><span class="nick" style="color:#8dd3c7"><a href="#215225" label="[21:52:25]">&lt;fossy&gt;</a></span><span class="message">possible...</span></div><div class="line" id="215234"><span class="nick" style="color:#2e2a4a"><a href="#215234" label="[21:52:34]">&lt;stikonas&gt;</a></span><span class="message">probably somewhere lower in the stack there is a 1024 byte buffer</span></div><div class="line" id="215247"><span class="nick" style="color:#2e2a4a"><a href="#215247" label="[21:52:47]">&lt;stikonas&gt;</a></span><span class="message">so we can't fit in more stuff in argv</span></div><div class="line" id="215259"><span class="nick" style="color:#2e2a4a"><a href="#215259" label="[21:52:59]">&lt;stikonas&gt;</a></span><span class="message">but I don't know where exactly</span></div><div class="line" id="215309"><span class="nick" style="color:#8dd3c7"><a href="#215309" label="[21:53:09]">&lt;fossy&gt;</a></span><span class="message">hmmmm</span></div><div class="line" id="215311"><span class="nick" style="color:#2e2a4a"><a href="#215311" label="[21:53:11]">&lt;stikonas&gt;</a></span><span class="message">there are quite a few places hardcoding 1024 byte buffers</span></div><div class="line" id="215321"><span class="nick" style="color:#8dd3c7"><a href="#215321" label="[21:53:21]">&lt;fossy&gt;</a></span><span class="message">I think you could be right...n</span></div><div class="line" id="215341"><span class="nick" style="color:#8dd3c7"><a href="#215341" label="[21:53:41]">&lt;fossy&gt;</a></span><span class="message">tcc probably has some kind of max length constant for argv</span></div><div class="line" id="215347"><span class="nick" style="color:#2e2a4a"><a href="#215347" label="[21:53:47]">&lt;stikonas&gt;</a></span><span class="message">either tcc</span></div><div class="line" id="215353"><span class="nick" style="color:#2e2a4a"><a href="#215353" label="[21:53:53]">&lt;stikonas&gt;</a></span><span class="message">or somewhere in make</span></div><div class="line" id="215357"><span class="nick" style="color:#2e2a4a"><a href="#215357" label="[21:53:57]">&lt;stikonas&gt;</a></span><span class="message">or even in mes libc</span></div><div class="line" id="215400"><span class="nick" style="color:#2e2a4a"><a href="#215400" label="[21:54:00]">&lt;stikonas&gt;</a></span><span class="message">or maybe in multiple place</span></div><div class="line" id="215403"><span class="nick" style="color:#2e2a4a"><a href="#215403" label="[21:54:03]">&lt;stikonas&gt;</a></span><span class="message">places</span></div><div class="line" id="215433"><span class="nick" style="color:#2e2a4a"><a href="#215433" label="[21:54:33]">&lt;stikonas&gt;</a></span><span class="message">but in any case I think we have to go for musl...</span></div><div class="line" id="215437"><span class="nick" style="color:#2e2a4a"><a href="#215437" label="[21:54:37]">&lt;stikonas&gt;</a></span><span class="message">:(</span></div><div class="line" id="215455"><span class="nick" style="color:#2e2a4a"><a href="#215455" label="[21:54:55]">&lt;stikonas&gt;</a></span><span class="message">basically everything else I tried needs more libs</span></div><div class="line" id="215503"><span class="nick" style="color:#2e2a4a"><a href="#215503" label="[21:55:03]">&lt;stikonas&gt;</a></span><span class="message">including perl</span></div><div class="line" id="215630"><span class="nick" style="color:#2e2a4a"><a href="#215630" label="[21:56:30]">&lt;stikonas&gt;</a></span><span class="message">fossy: so the first error that I get when building musl now is &quot;./arch/i386/syscall_arch.h:40: error: incorrect prefix&quot;</span></div><div class="line" id="215724"><span class="nick" style="color:#2e2a4a"><a href="#215724" label="[21:57:24]">&lt;stikonas&gt;</a></span><span class="message">(ignoring those static errors that are either patchable or newer tcc works on them)</span></div><div class="line" id="215850"><span class="nick" style="color:#2e2a4a"><a href="#215850" label="[21:58:50]">&lt;stikonas&gt;</a></span><span class="message">that disappears with -DSYSCALL_NO_TLS but I'm not sure if we are allowed to use it...</span></div><div class="line" id="220014"><span class="nick" style="color:#8dd3c7"><a href="#220014" label="[22:00:14]">&lt;fossy&gt;</a></span><span class="message">:/</span></div><div class="line" id="220027"><span class="nick" style="color:#8dd3c7"><a href="#220027" label="[22:00:27]">&lt;fossy&gt;</a></span><span class="message">the question is if that macro is correct.</span></div><div class="line" id="220206"><span class="nick" style="color:#2e2a4a"><a href="#220206" label="[22:02:06]">&lt;stikonas&gt;</a></span><span class="message">but somehow it's not triggered on two earlier macros</span></div><div class="line" id="220220"><span class="nick" style="color:#2e2a4a"><a href="#220220" label="[22:02:20]">&lt;stikonas&gt;</a></span><span class="message">and if I comment it out, then following macros again all trigger it</span></div><div class="line" id="220232"><span class="nick" style="color:#8dd3c7"><a href="#220232" label="[22:02:32]">&lt;fossy&gt;</a></span><span class="message">Odd</span></div><div class="line" id="220251"><span class="nick" style="color:#2e2a4a"><a href="#220251" label="[22:02:51]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="220318"><span class="nick" style="color:#2e2a4a"><a href="#220318" label="[22:03:18]">&lt;stikonas&gt;</a></span><span class="message">you found gio's source code?</span></div><div class="line" id="220322"><span class="nick" style="color:#2e2a4a"><a href="#220322" label="[22:03:22]">&lt;stikonas&gt;</a></span><span class="message">(so that line numbers are the same)</span></div><div class="line" id="220351"><span class="nick" style="color:#2e2a4a"><a href="#220351" label="[22:03:51]">&lt;stikonas&gt;</a></span><span class="message">this commit <a rel="nofollow" href="https://gitlab.com/giomasce/musl/-/tree/58f2f63aab655c47ff998201408b3c5aa4042ea0">https://gitlab.com/giomasce/musl/-/tree/58f2f63aab655c47ff998201408b3c5aa4042ea0</a> </span></div><div class="line" id="220358"><span class="nick" style="color:#2e2a4a"><a href="#220358" label="[22:03:58]">&lt;stikonas&gt;</a></span><span class="message">and I configure musl with CC=tcc AR=&quot;tcc -ar&quot; RANLIB=true ./configure --host=i386 --disable-shared</span></div><div class="line" id="220412"><span class="nick" style="color:#8dd3c7"><a href="#220412" label="[22:04:12]">&lt;fossy&gt;</a></span><span class="message">yeah I found</span></div><div class="line" id="220504"><span class="nick" style="color:#8dd3c7"><a href="#220504" label="[22:05:04]">&lt;fossy&gt;</a></span><span class="message">stikonas: is SYSCALL_INSNS defined</span></div><div class="line" id="220651"><span class="nick" style="color:#2e2a4a"><a href="#220651" label="[22:06:51]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, it's either one or the other</span></div><div class="line" id="220655"><span class="nick" style="color:#2e2a4a"><a href="#220655" label="[22:06:55]">&lt;stikonas&gt;</a></span><span class="message">we define it at the top of the file</span></div><div class="line" id="220708"><span class="nick" style="color:#2e2a4a"><a href="#220708" label="[22:07:08]">&lt;stikonas&gt;</a></span><span class="message">normally it would be #define SYSCALL_INSNS &quot;call *%gs:16&quot;</span></div><div class="line" id="220716"><span class="nick" style="color:#2e2a4a"><a href="#220716" label="[22:07:16]">&lt;stikonas&gt;</a></span><span class="message">and this makes tcc unhappy</span></div><div class="line" id="220725"><span class="nick" style="color:#2e2a4a"><a href="#220725" label="[22:07:25]">&lt;stikonas&gt;</a></span><span class="message">it does compile with #define SYSCALL_INSNS &quot;int $128&quot;</span></div><div class="line" id="220758"><span class="nick" style="color:#2e2a4a"><a href="#220758" label="[22:07:58]">&lt;stikonas&gt;</a></span><span class="message">but I guess it would crash later if we use int instruction</span></div><div class="line" id="221027"><span class="nick" style="color:#2e2a4a"><a href="#221027" label="[22:10:27]">&lt;stikonas&gt;</a></span><span class="message">so tcc prints incorrect prefix in i386-asm.c if (pop-&gt;type != OP_SEG || seg_prefix)</span></div><div class="line" id="221200"><span class="nick" style="color:#2e2a4a"><a href="#221200" label="[22:12:00]">&lt;stikonas&gt;</a></span><span class="message">I guess seg_prefix is %gs in this case so 0x65</span></div><div class="line" id="221355"><span class="nick" style="color:#2e2a4a"><a href="#221355" label="[22:13:55]">&lt;stikonas&gt;</a></span><span class="message">so seg_prefix on its own triggers that condition</span></div><div class="line" id="221918"><span class="nick" style="color:#2e2a4a"><a href="#221918" label="[22:19:18]">&lt;stikonas&gt;</a></span><span class="message">ok, that's not what happens</span></div><div class="line" id="221935"><span class="nick" style="color:#2e2a4a"><a href="#221935" label="[22:19:35]">&lt;stikonas&gt;</a></span><span class="message">seg_prefix is 0 and pop-&gt;type=524544</span></div><div class="line" id="222134"><span class="nick" style="color:#2e2a4a"><a href="#222134" label="[22:21:34]">&lt;stikonas&gt;</a></span><span class="message">and OP_SEG is I guess 1 &lt;&lt; 8 so not equal to pop-&gt;typo</span></div><div class="line" id="223024"><span class="nick" style="color:#2e2a4a"><a href="#223024" label="[22:30:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'll try some other musl version</span></div><div class="line" id="223043"><span class="nick" style="color:#2e2a4a"><a href="#223043" label="[22:30:43]">&lt;stikonas&gt;</a></span><span class="message">early 1.1.x version don't work, due to other errors, but 1.1.20 might work</span></div><div class="line" id="223106"><span class="nick" style="color:#2e2a4a"><a href="#223106" label="[22:31:06]">&lt;stikonas&gt;</a></span><span class="message">ok, now I got src/fcntl/fcntl.c:12: warning: implicit declaration of function '__builtin_va_start'</span></div><div class="line" id="223116"><span class="nick" style="color:#2e2a4a"><a href="#223116" label="[22:31:16]">&lt;stikonas&gt;</a></span><span class="message">probably need patch from nsb...</span></div><div class="line" id="223237"><span class="nick" style="color:#2e2a4a"><a href="#223237" label="[22:32:37]">&lt;stikonas&gt;</a></span><span class="message">yes, that worked</span></div><div class="line" id="223305"><span class="nick" style="color:#2e2a4a"><a href="#223305" label="[22:33:05]">&lt;stikonas&gt;</a></span><span class="message">so 1.1.20 is more promising right now</span></div><div class="line" id="223308"><span class="nick" style="color:#2e2a4a"><a href="#223308" label="[22:33:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: now I get src/fenv/i386/fenv.s:20: error: unknown opcode 'stmxcsr'</span></div><div class="line" id="223330"><span class="nick" style="color:#2e2a4a"><a href="#223330" label="[22:33:30]">&lt;stikonas&gt;</a></span><span class="message">I guess tcc does not what stmxsr is...</span></div><div class="line" id="223353"><span class="nick" style="color:#2e2a4a"><a href="#223353" label="[22:33:53]">&lt;stikonas&gt;</a></span><span class="message">(and I also don't know) need to go read docs...</span></div><div class="line" id="223406"><span class="nick" style="color:#af8d2f"><a href="#223406" label="[22:34:06]">&lt;bauen1&gt;</a></span><span class="message">stikonas: there's a few others, try running make with `--keep-going` to find most of the issues</span></div><div class="line" id="223423"><span class="nick" style="color:#af8d2f"><a href="#223423" label="[22:34:23]">&lt;bauen1&gt;</a></span><span class="message">might be few enough to hand assemble it</span></div><div class="line" id="223440"><span class="nick" style="color:#2e2a4a"><a href="#223440" label="[22:34:40]">&lt;stikonas&gt;</a></span><span class="message">I think it's almost done</span></div><div class="line" id="223444"><span class="nick" style="color:#2e2a4a"><a href="#223444" label="[22:34:44]">&lt;stikonas&gt;</a></span><span class="message">I tried that on gio's version</span></div><div class="line" id="223454"><span class="nick" style="color:#2e2a4a"><a href="#223454" label="[22:34:54]">&lt;stikonas&gt;</a></span><span class="message">with that SYSCALL_NO_TLS...</span></div><div class="line" id="223500"><span class="nick" style="color:#2e2a4a"><a href="#223500" label="[22:35:00]">&lt;stikonas&gt;</a></span><span class="message">so there is this fenv.s file</span></div><div class="line" id="223509"><span class="nick" style="color:#2e2a4a"><a href="#223509" label="[22:35:09]">&lt;stikonas&gt;</a></span><span class="message">and one more that I think I knew how to fix</span></div><div class="line" id="223606"><span class="nick" style="color:#2e2a4a"><a href="#223606" label="[22:36:06]">&lt;stikonas&gt;</a></span><span class="message">that had jecxz 1f which I replaced with cmp %ecx, 0 and je 1f</span></div><div class="line" id="224018"><span class="nick" style="color:#2e2a4a"><a href="#224018" label="[22:40:18]">&lt;stikonas&gt;</a></span><span class="message">bauen1: fossy, so I think only those two issues, stmxcsr in fenv.s and jecxz in signal/i386/sigsetjmp.s which I think I replaced (but would be good if somebody knowing more assembly confirm that my fix is valid)</span></div><div class="line" id="224803"><span class="nick" style="color:#af8d2f"><a href="#224803" label="[22:48:03]">&lt;bauen1&gt;</a></span><span class="message">stikonas: did you hand-assemble them or did you replace them with equivilent instruction sequences ?</span></div><div class="line" id="224830"><span class="nick" style="color:#2e2a4a"><a href="#224830" label="[22:48:30]">&lt;stikonas&gt;</a></span><span class="message">oh, I tried replacing with equivalent instruction sequence</span></div><div class="line" id="224838"><span class="nick" style="color:#2e2a4a"><a href="#224838" label="[22:48:38]">&lt;stikonas&gt;</a></span><span class="message">but I only did one for now ( and it needs reviewing)</span></div><div class="line" id="224944"><span class="nick" style="color:#2e2a4a"><a href="#224944" label="[22:49:44]">&lt;stikonas&gt;</a></span><span class="message">jecxz 1f -&gt;  cmp %ecx,0 \n je 1f</span></div><div class="line" id="225027"><span class="nick" style="color:#2e2a4a"><a href="#225027" label="[22:50:27]">&lt;stikonas&gt;</a></span><span class="message">can I have 0 as cmp operand or does it have to be register?</span></div><div class="line" id="225307"><span class="nick" style="color:#af8d2f"><a href="#225307" label="[22:53:07]">&lt;bauen1&gt;</a></span><span class="message">stikonas: <a rel="nofollow" href="https://www.felixcloutier.com/x86/cmp">https://www.felixcloutier.com/x86/cmp</a>  it can be an immediate value</span></div><div class="line" id="225315"><span class="nick" style="color:#af8d2f"><a href="#225315" label="[22:53:15]">&lt;bauen1&gt;</a></span><span class="message">so that should probably work</span></div><div class="line" id="225335"><span class="nick" style="color:#af8d2f"><a href="#225335" label="[22:53:35]">&lt;bauen1&gt;</a></span><span class="message">and looks good</span></div><div class="line" id="225343"><span class="nick" style="color:#2e2a4a"><a href="#225343" label="[22:53:43]">&lt;stikonas&gt;</a></span><span class="message">all of this if floating point code, so hopefully not too critical</span></div><div class="line" id="225348"><span class="nick" style="color:#2e2a4a"><a href="#225348" label="[22:53:48]">&lt;stikonas&gt;</a></span><span class="message">we don't use floats much</span></div><div class="line" id="225622"><span class="nick" style="color:#2e2a4a"><a href="#225622" label="[22:56:22]">&lt;stikonas&gt;</a></span><span class="message">argh, now I got the same error I was getting with earlier musl: src/internal/i386/syscall.s:27: error: bad expression syntax [[]</span></div><div class="line" id="225630"><span class="nick" style="color:#2e2a4a"><a href="#225630" label="[22:56:30]">&lt;stikonas&gt;</a></span><span class="message">add $[__sysinfo-2b],%eax</span></div><div class="line" id="225645"><span class="nick" style="color:#2e2a4a"><a href="#225645" label="[22:56:45]">&lt;stikonas&gt;</a></span><span class="message">I deleted those offending fenv.s lines for now</span></div><div class="line" id="231448"><span class="nick" style="color:#2e2a4a"><a href="#231448" label="[23:14:48]">&lt;stikonas&gt;</a></span><span class="message">hmm, after I removed those lines, I get the same crash that I had when I initially compiled with -DSYSCALL_NO_TLS...</span></div><div class="line" id="231456"><span class="nick" style="color:#2e2a4a"><a href="#231456" label="[23:14:56]">&lt;stikonas&gt;</a></span><span class="message">so maybe that was fine and the problem is elsewhere...</span></div><div class="line" id="231532"><span class="nick" style="color:#2e2a4a"><a href="#231532" label="[23:15:32]">&lt;stikonas&gt;</a></span><span class="message">not much info in this backtrace though <a rel="nofollow" href="https://paste.debian.net/1183492/">https://paste.debian.net/1183492/</a> </span></div><div class="line" id="231713"><span class="nick" style="color:#af8d2f"><a href="#231713" label="[23:17:13]">&lt;bauen1&gt;</a></span><span class="message">stikonas: a_crash is a musl helper that gets called (in code) when something is wrong, so it should be easy to find where</span></div><div class="line" id="231815"><span class="nick" style="color:#2e2a4a"><a href="#231815" label="[23:18:15]">&lt;stikonas&gt;</a></span><span class="message">well,I'm trying to find init_tls</span></div><div class="line" id="231835"><span class="nick" style="color:#2e2a4a"><a href="#231835" label="[23:18:35]">&lt;stikonas&gt;</a></span><span class="message">that's in src/env/__init_tls.c</span></div><div class="line" id="231930"><span class="nick" style="color:#2e2a4a"><a href="#231930" label="[23:19:30]">&lt;stikonas&gt;</a></span><span class="message">hmm /* Failure to initialize thread pointer is always fatal. */  if (__init_tp(__copy_tls(mem)) &lt; 0)</span></div><div class="line" id="232255"><span class="nick" style="color:#2e2a4a"><a href="#232255" label="[23:22:55]">&lt;stikonas&gt;</a></span><span class="message">and this points to assembly again <a rel="nofollow" href="https://gitlab.com/giomasce/musl/-/blob/master/src/thread/i386/__set_thread_area.s">https://gitlab.com/giomasce/musl/-/blob/master/src/thread/i386/__set_thread_area.s</a> </span></div><div class="line" id="232257"><span class="nick" style="color:#2e2a4a"><a href="#232257" label="[23:22:57]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="232440"><span class="nick" style="color:#2e2a4a"><a href="#232440" label="[23:24:40]">&lt;stikonas&gt;</a></span><span class="message">sigh :(</span></div><div class="line" id="233612"><span class="nick" style="color:#2e2a4a"><a href="#233612" label="[23:36:12]">&lt;stikonas&gt;</a></span><span class="message">maybe I need this <a rel="nofollow" href="https://git.musl-libc.org/cgit/musl/commit/src/thread/i386/__set_thread_area.s?id=0b0640219338b80cf47026d1970b5503414ed7f3">https://git.musl-libc.org/cgit/musl/commit/src/thread/i386/__set_thread_area.s?id=0b0640219338b80cf47026d1970b5503414ed7f3</a> </span></div><div class="line" id="233822"><span class="nick" style="color:#2e2a4a"><a href="#233822" label="[23:38:22]">&lt;stikonas&gt;</a></span><span class="message">fossy: wow, I think that worked</span></div><div class="line" id="233830"><span class="nick" style="color:#2e2a4a"><a href="#233830" label="[23:38:30]">&lt;stikonas&gt;</a></span><span class="message">oh, sorry, too early</span></div><div class="line" id="233833"><span class="nick" style="color:#2e2a4a"><a href="#233833" label="[23:38:33]">&lt;stikonas&gt;</a></span><span class="message">wrong tcc</span></div><div class="line" id="233852"><span class="nick" style="color:#2e2a4a"><a href="#233852" label="[23:38:52]">&lt;stikonas&gt;</a></span><span class="message">:(</span></div><div class="line" id="233857"><span class="nick" style="color:#2e2a4a"><a href="#233857" label="[23:38:57]">&lt;stikonas&gt;</a></span><span class="message">yeah, still crashes</span></div><div class="line" id="234026"><span class="nick" style="color:#2e2a4a"><a href="#234026" label="[23:40:26]">&lt;stikonas&gt;</a></span><span class="message">oh, actually, that fix helped, it just crashes later</span></div><div class="line" id="234032"><span class="nick" style="color:#2e2a4a"><a href="#234032" label="[23:40:32]">&lt;stikonas&gt;</a></span><span class="message">in vsyscall..</span></div><div class="line" id="234702"><span class="nick" style="color:#2e2a4a"><a href="#234702" label="[23:47:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: bauen1: that's a bit better! <a rel="nofollow" href="https://paste.debian.net/1183495/">https://paste.debian.net/1183495/</a> </span></div><div class="line" id="234724"><span class="nick" style="color:#af8d2f"><a href="#234724" label="[23:47:24]">&lt;bauen1&gt;</a></span><span class="message">nice</span></div><div class="line" id="234732"><span class="nick" style="color:#2e2a4a"><a href="#234732" label="[23:47:32]">&lt;stikonas&gt;</a></span><span class="message">(this is back to gio form with that extra patch  <a rel="nofollow" href="https://git.musl-libc.org/cgit/musl/commit/src/thread/i386/__set_thread_area.s?id=0b0640219338b80cf47026d1970b5503414ed7f3">https://git.musl-libc.org/cgit/musl/commit/src/thread/i386/__set_thread_area.s?id=0b0640219338b80cf47026d1970b5503414ed7f3</a>) </span></div><div class="line" id="234738"><span class="nick" style="color:#2e2a4a"><a href="#234738" label="[23:47:38]">&lt;stikonas&gt;</a></span><span class="message">but I cheated a bit with ar for now</span></div><div class="line" id="234750"><span class="nick" style="color:#2e2a4a"><a href="#234750" label="[23:47:50]">&lt;stikonas&gt;</a></span><span class="message">used gnu ar from outside system</span></div><div class="line" id="234757"><span class="nick" style="color:#2e2a4a"><a href="#234757" label="[23:47:57]">&lt;stikonas&gt;</a></span><span class="message">but I think that's understood problem</span></div><div class="line" id="235154"><span class="nick" style="color:#2e2a4a"><a href="#235154" label="[23:51:54]">&lt;stikonas&gt;</a></span><span class="message">and</span></div><div class="line" id="235155"><span class="nick" style="color:#2e2a4a"><a href="#235155" label="[23:51:55]">&lt;stikonas&gt;</a></span><span class="message">/after/flex/src # ./flex --version</span></div><div class="line" id="235156"><span class="nick" style="color:#2e2a4a"><a href="#235156" label="[23:51:56]">&lt;stikonas&gt;</a></span><span class="message">flex 2.6.4</span></div><div class="line" id="235204"><span class="nick" style="color:#2e2a4a"><a href="#235204" label="[23:52:04]">&lt;stikonas&gt;</a></span><span class="message">so I think it works!</span></div><div class="line" id="235215"><span class="nick" style="color:#2e2a4a"><a href="#235215" label="[23:52:15]">&lt;stikonas&gt;</a></span><span class="message">that's non-trivial example</span></div><div class="line" id="235226"><span class="nick" style="color:#2e2a4a"><a href="#235226" label="[23:52:26]">&lt;stikonas&gt;</a></span><span class="message">still quite a bit of work to automate musl...</span></div><div class="line" id="235449"><span class="nick" style="color:#2e2a4a"><a href="#235449" label="[23:54:49]">&lt;stikonas&gt;</a></span><span class="message">fossy: should we keep musl binaries in the same prefix /after?</span></div><br /></div></body></html>