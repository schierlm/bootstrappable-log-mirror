<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-04-04.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000001"><span class="nick" style="color:#389600"><a href="#000001" label="[00:00:01]">&lt;stikonas&gt;</a></span><span class="message">at least with libtool files</span></div><div class="line" id="000012"><span class="nick" style="color:#389600"><a href="#000012" label="[00:00:12]">&lt;stikonas&gt;</a></span><span class="message">but we can always use it</span></div><div class="line" id="000625"><span class="nick" style="color:#389600"><a href="#000625" label="[00:06:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: so any idea what to do with guile? Try to get glibc first?</span></div><div class="line" id="000637"><span class="nick" style="color:#389600"><a href="#000637" label="[00:06:37]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe some distro has some musl patches for guile</span></div><div class="line" id="000821"><span class="nick">***</span><span class="message notice">nckx is now known as jorts</span></div><div class="line" id="000840"><span class="nick" style="color:#2e2a4a"><a href="#000840" label="[00:08:40]">&lt;OriansJ`&gt;</a></span><span class="message">bootstrapping: an adventure where you have to know other people's shit</span></div><div class="line" id="001051"><span class="nick" style="color:#6b8072"><a href="#001051" label="[00:10:51]">&lt;ericonr&gt;</a></span><span class="message">stikonas: guile works fine on musl</span></div><div class="line" id="001107"><span class="nick" style="color:#6b8072"><a href="#001107" label="[00:11:07]">&lt;ericonr&gt;</a></span><span class="message">void has a single patch for guile 2</span></div><div class="line" id="001203"><span class="nick" style="color:#389600"><a href="#001203" label="[00:12:03]">&lt;stikonas&gt;</a></span><span class="message">yeah, and I just checked PR for guile 3</span></div><div class="line" id="001212"><span class="nick" style="color:#389600"><a href="#001212" label="[00:12:12]">&lt;stikonas&gt;</a></span><span class="message">nothing similar to what I'm observing with configure</span></div><div class="line" id="002410"><span class="nick" style="color:#389600"><a href="#002410" label="[00:24:10]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe we need to install autoconf-archive</span></div><div class="line" id="002613"><span class="nick" style="color:#389600"><a href="#002613" label="[00:26:13]">&lt;stikonas&gt;</a></span><span class="message">hmm, no, doesn't help</span></div><div class="line" id="003223"><span class="nick" style="color:#389600"><a href="#003223" label="[00:32:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, it could be that gforce_de1977's bash build has different hashes due to gcc defines that are automatically defined</span></div><div class="line" id="003242"><span class="nick" style="color:#389600"><a href="#003242" label="[00:32:42]">&lt;stikonas&gt;</a></span><span class="message">and bash picks something up...</span></div><div class="line" id="003417"><span class="nick" style="color:#389600"><a href="#003417" label="[00:34:17]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: worth checking output of gcc -dM -E -xc /dev/null</span></div><div class="line" id="003516"><span class="nick" style="color:#389600"><a href="#003516" label="[00:35:16]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: worth comparing with mine: <a rel="nofollow" href="https://paste.debian.net/1192247/">https://paste.debian.net/1192247/</a> </span></div><div class="line" id="003557"><span class="nick" style="color:#389600"><a href="#003557" label="[00:35:57]">&lt;stikonas&gt;</a></span><span class="message">and then check if bash uses anything that is different</span></div><div class="line" id="011656"><span class="nick" style="color:#80b1d3"><a href="#011656" label="[01:16:56]">&lt;fossy&gt;</a></span><span class="message">stikonas: does guile use autogen</span></div><div class="line" id="011658"><span class="nick" style="color:#80b1d3"><a href="#011658" label="[01:16:58]">&lt;fossy&gt;</a></span><span class="message">uh</span></div><div class="line" id="011702"><span class="nick" style="color:#80b1d3"><a href="#011702" label="[01:17:02]">&lt;fossy&gt;</a></span><span class="message">does glibc use autogen</span></div><div class="line" id="011745"><span class="nick" style="color:#389600"><a href="#011745" label="[01:17:45]">&lt;stikonas&gt;</a></span><span class="message">not sure, maybe not</span></div><div class="line" id="011751"><span class="nick" style="color:#389600"><a href="#011751" label="[01:17:51]">&lt;stikonas&gt;</a></span><span class="message">let me check</span></div><div class="line" id="011802"><span class="nick" style="color:#389600"><a href="#011802" label="[01:18:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, CI failed with some strange failure</span></div><div class="line" id="011804"><span class="nick" style="color:#389600"><a href="#011804" label="[01:18:04]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/89/checks?check_run_id=2261575542">https://github.com/fosslinux/live-bootstrap/pull/89/checks?check_run_id=2261575542</a> </span></div><div class="line" id="011808"><span class="nick" style="color:#389600"><a href="#011808" label="[01:18:08]">&lt;stikonas&gt;</a></span><span class="message">I guess rare intermittent error</span></div><div class="line" id="011821"><span class="nick" style="color:#80b1d3"><a href="#011821" label="[01:18:21]">&lt;fossy&gt;</a></span><span class="message">i just put in a re-run</span></div><div class="line" id="011827"><span class="nick" style="color:#80b1d3"><a href="#011827" label="[01:18:27]">&lt;fossy&gt;</a></span><span class="message">we will see if it happens agagin</span></div><div class="line" id="011841"><span class="nick" style="color:#389600"><a href="#011841" label="[01:18:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: in any case we have a away to deal with autogen</span></div><div class="line" id="011845"><span class="nick" style="color:#389600"><a href="#011845" label="[01:18:45]">&lt;stikonas&gt;</a></span><span class="message">even if it's a bit annoying</span></div><div class="line" id="011848"><span class="nick" style="color:#80b1d3"><a href="#011848" label="[01:18:48]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="011858"><span class="nick" style="color:#80b1d3"><a href="#011858" label="[01:18:58]">&lt;fossy&gt;</a></span><span class="message">but we will def need it for later gcc probably</span></div><div class="line" id="011911"><span class="nick" style="color:#80b1d3"><a href="#011911" label="[01:19:11]">&lt;fossy&gt;</a></span><span class="message">it will get big fast</span></div><div class="line" id="011935"><span class="nick" style="color:#389600"><a href="#011935" label="[01:19:35]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="011941"><span class="nick" style="color:#389600"><a href="#011941" label="[01:19:41]">&lt;stikonas&gt;</a></span><span class="message">especially with C++ modules</span></div><div class="line" id="011948"><span class="nick" style="color:#389600"><a href="#011948" label="[01:19:48]">&lt;stikonas&gt;</a></span><span class="message">by the way, maybe we should switch to <a rel="nofollow" href="https://ftpmirror.gnu.org/">https://ftpmirror.gnu.org/</a>  ?</span></div><div class="line" id="012015"><span class="nick" style="color:#389600"><a href="#012015" label="[01:20:15]">&lt;stikonas&gt;</a></span><span class="message">I don't want to hammer main gnu server on each CI run...</span></div><div class="line" id="012119"><span class="nick" style="color:#389600"><a href="#012119" label="[01:21:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: no autogen in glibc</span></div><div class="line" id="012125"><span class="nick" style="color:#389600"><a href="#012125" label="[01:21:25]">&lt;stikonas&gt;</a></span><span class="message">at least nothing strange in 2.18</span></div><div class="line" id="012138"><span class="nick" style="color:#389600"><a href="#012138" label="[01:21:38]">&lt;stikonas&gt;</a></span><span class="message">we might have to go for older version</span></div><div class="line" id="012142"><span class="nick" style="color:#389600"><a href="#012142" label="[01:21:42]">&lt;stikonas&gt;</a></span><span class="message">I think some new versions need python</span></div><div class="line" id="012146"><span class="nick" style="color:#389600"><a href="#012146" label="[01:21:46]">&lt;stikonas&gt;</a></span><span class="message">not sure since when</span></div><div class="line" id="012553"><span class="nick" style="color:#80b1d3"><a href="#012553" label="[01:25:53]">&lt;fossy&gt;</a></span><span class="message">reasonably new</span></div><div class="line" id="012601"><span class="nick" style="color:#80b1d3"><a href="#012601" label="[01:26:01]">&lt;fossy&gt;</a></span><span class="message">late 2.2x or earl 2.3x</span></div><div class="line" id="012605"><span class="nick" style="color:#80b1d3"><a href="#012605" label="[01:26:05]">&lt;fossy&gt;</a></span><span class="message">i remember when it was introduced</span></div><div class="line" id="012607"><span class="nick" style="color:#80b1d3"><a href="#012607" label="[01:26:07]">&lt;fossy&gt;</a></span><span class="message">i feel like 2.28</span></div><div class="line" id="012642"><span class="nick" style="color:#389600"><a href="#012642" label="[01:26:42]">&lt;stikonas&gt;</a></span><span class="message">I guess we should be able to build the version just before that...</span></div><div class="line" id="012652"><span class="nick" style="color:#389600"><a href="#012652" label="[01:26:52]">&lt;stikonas&gt;</a></span><span class="message">or alternatively, build python...</span></div><div class="line" id="012659"><span class="nick" style="color:#389600"><a href="#012659" label="[01:26:59]">&lt;stikonas&gt;</a></span><span class="message">but buildign python might need building openssl</span></div><div class="line" id="012716"><span class="nick" style="color:#80b1d3"><a href="#012716" label="[01:27:16]">&lt;fossy&gt;</a></span><span class="message">eh, we will have to do it at some point</span></div><div class="line" id="012721"><span class="nick" style="color:#80b1d3"><a href="#012721" label="[01:27:21]">&lt;fossy&gt;</a></span><span class="message">openssl shouldn't be hard at all</span></div><div class="line" id="012737"><span class="nick" style="color:#80b1d3"><a href="#012737" label="[01:27:37]">&lt;fossy&gt;</a></span><span class="message">hm</span></div><div class="line" id="012737"><span class="nick" style="color:#389600"><a href="#012737" label="[01:27:37]">&lt;stikonas&gt;</a></span><span class="message">it shouldn't</span></div><div class="line" id="012745"><span class="nick" style="color:#80b1d3"><a href="#012745" label="[01:27:45]">&lt;fossy&gt;</a></span><span class="message">i have doubts that such a new glibc will work but we can try</span></div><div class="line" id="012805"><span class="nick" style="color:#389600"><a href="#012805" label="[01:28:05]">&lt;stikonas&gt;</a></span><span class="message">hmm, most of the stuff actually builds now that we have gcc</span></div><div class="line" id="012823"><span class="nick" style="color:#389600"><a href="#012823" label="[01:28:23]">&lt;stikonas&gt;</a></span><span class="message">way fewer problems and workarounds needed than with tcc</span></div><div class="line" id="012828"><span class="nick" style="color:#80b1d3"><a href="#012828" label="[01:28:28]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="012841"><span class="nick" style="color:#389600"><a href="#012841" label="[01:28:41]">&lt;stikonas&gt;</a></span><span class="message">although, I'm a bit unsure at what should we aim for in the short term</span></div><div class="line" id="012856"><span class="nick" style="color:#389600"><a href="#012856" label="[01:28:56]">&lt;stikonas&gt;</a></span><span class="message">there are maybe things that will eventually be useful</span></div><div class="line" id="012901"><span class="nick" style="color:#80b1d3"><a href="#012901" label="[01:29:01]">&lt;fossy&gt;</a></span><span class="message">this is how i envisinge what we should do:</span></div><div class="line" id="012905"><span class="nick" style="color:#80b1d3"><a href="#012905" label="[01:29:05]">&lt;fossy&gt;</a></span><span class="message">- autogen</span></div><div class="line" id="012913"><span class="nick" style="color:#80b1d3"><a href="#012913" label="[01:29:13]">&lt;fossy&gt;</a></span><span class="message">- gcc with c++</span></div><div class="line" id="012923"><span class="nick" style="color:#389600"><a href="#012923" label="[01:29:23]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's my though for medium term...</span></div><div class="line" id="012934"><span class="nick" style="color:#80b1d3"><a href="#012934" label="[01:29:34]">&lt;fossy&gt;</a></span><span class="message">- jump to modern triplet</span></div><div class="line" id="012937"><span class="nick" style="color:#80b1d3"><a href="#012937" label="[01:29:37]">&lt;fossy&gt;</a></span><span class="message">i think we can do that</span></div><div class="line" id="012939"><span class="nick" style="color:#389600"><a href="#012939" label="[01:29:39]">&lt;stikonas&gt;</a></span><span class="message">but the question is what do we need to do to get to autogen</span></div><div class="line" id="012944"><span class="nick" style="color:#389600"><a href="#012944" label="[01:29:44]">&lt;stikonas&gt;</a></span><span class="message">so it needs guile</span></div><div class="line" id="012953"><span class="nick" style="color:#80b1d3"><a href="#012953" label="[01:29:53]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="013003"><span class="nick" style="color:#389600"><a href="#013003" label="[01:30:03]">&lt;stikonas&gt;</a></span><span class="message">guile needs libunistring (another gnulib package)</span></div><div class="line" id="013012"><span class="nick" style="color:#389600"><a href="#013012" label="[01:30:12]">&lt;stikonas&gt;</a></span><span class="message">it might buidl with musl, but we need to solve configure problem</span></div><div class="line" id="013015"><span class="nick" style="color:#80b1d3"><a href="#013015" label="[01:30:15]">&lt;fossy&gt;</a></span><span class="message">how about we solve gnulib first</span></div><div class="line" id="013017"><span class="nick" style="color:#389600"><a href="#013017" label="[01:30:17]">&lt;stikonas&gt;</a></span><span class="message">or build glibc alternatively</span></div><div class="line" id="013020"><span class="nick" style="color:#389600"><a href="#013020" label="[01:30:20]">&lt;stikonas&gt;</a></span><span class="message">yeah, maybe</span></div><div class="line" id="013031"><span class="nick" style="color:#80b1d3"><a href="#013031" label="[01:30:31]">&lt;fossy&gt;</a></span><span class="message">because theres findutils and pending tar and libunistring</span></div><div class="line" id="013037"><span class="nick" style="color:#389600"><a href="#013037" label="[01:30:37]">&lt;stikonas&gt;</a></span><span class="message">well, gnulib according to my reading should be quite compatible</span></div><div class="line" id="013051"><span class="nick" style="color:#389600"><a href="#013051" label="[01:30:51]">&lt;stikonas&gt;</a></span><span class="message">so everything appart from findutils might work with just latest checkout</span></div><div class="line" id="013100"><span class="nick" style="color:#80b1d3"><a href="#013100" label="[01:31:00]">&lt;fossy&gt;</a></span><span class="message">maybe</span></div><div class="line" id="013104"><span class="nick" style="color:#80b1d3"><a href="#013104" label="[01:31:04]">&lt;fossy&gt;</a></span><span class="message">i am not so sure about that</span></div><div class="line" id="013110"><span class="nick" style="color:#389600"><a href="#013110" label="[01:31:10]">&lt;stikonas&gt;</a></span><span class="message">findutils wouldn't have latest autoconf thoug</span></div><div class="line" id="013112"><span class="nick" style="color:#389600"><a href="#013112" label="[01:31:12]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="013123"><span class="nick" style="color:#80b1d3"><a href="#013123" label="[01:31:23]">&lt;fossy&gt;</a></span><span class="message">if there are no releases, there could be api breaks all over the place that are never detected</span></div><div class="line" id="013151"><span class="nick" style="color:#389600"><a href="#013151" label="[01:31:51]">&lt;stikonas&gt;</a></span><span class="message">oh indeed</span></div><div class="line" id="013153"><span class="nick" style="color:#389600"><a href="#013153" label="[01:31:53]">&lt;stikonas&gt;</a></span><span class="message">Note: From time to time, changes are made in Gnulib that are not backward compatible. When updating to a more recent Gnulib, you should consult Gnulib’s NEWS file to check whether the incompatible changes affect your project.</span></div><div class="line" id="013212"><span class="nick" style="color:#80b1d3"><a href="#013212" label="[01:32:12]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="013303"><span class="nick" style="color:#389600"><a href="#013303" label="[01:33:03]">&lt;stikonas&gt;</a></span><span class="message">well, gnulib issue is quite annoying, but at least we know we don't need to bootstrap anything so solve it</span></div><div class="line" id="013331"><span class="nick" style="color:#389600"><a href="#013331" label="[01:33:31]">&lt;stikonas&gt;</a></span><span class="message">hmm, I wonder how git checkouts build ...</span></div><div class="line" id="013351"><span class="nick" style="color:#389600"><a href="#013351" label="[01:33:51]">&lt;stikonas&gt;</a></span><span class="message">there must be some mechanism in build system...</span></div><div class="line" id="013445"><span class="nick" style="color:#389600"><a href="#013445" label="[01:34:45]">&lt;stikonas&gt;</a></span><span class="message">because it just points to commit hash <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/findutils.git/tree/">https://git.savannah.gnu.org/cgit/findutils.git/tree/</a> </span></div><div class="line" id="013503"><span class="nick">***</span><span class="message notice">jorts is now known as nckx</span></div><div class="line" id="013829"><span class="nick" style="color:#389600"><a href="#013829" label="[01:38:29]">&lt;stikonas&gt;</a></span><span class="message">fossy: so git checkouts seem to have bootstrap script that runs gnulib-tool automatically</span></div><div class="line" id="014030"><span class="nick" style="color:#389600"><a href="#014030" label="[01:40:30]">&lt;stikonas&gt;</a></span><span class="message">hmm, although, our findutils is too old</span></div><div class="line" id="014126"><span class="nick" style="color:#389600"><a href="#014126" label="[01:41:26]">&lt;stikonas&gt;</a></span><span class="message">need something from 2015</span></div><div class="line" id="014202"><span class="nick" style="color:#389600"><a href="#014202" label="[01:42:02]">&lt;stikonas&gt;</a></span><span class="message">oh, that's findutils 4.6.0 or later</span></div><div class="line" id="014317"><span class="nick" style="color:#389600"><a href="#014317" label="[01:43:17]">&lt;stikonas&gt;</a></span><span class="message">maybe we can delay findutils until after gcc then?</span></div><div class="line" id="014340"><span class="nick" style="color:#389600"><a href="#014340" label="[01:43:40]">&lt;stikonas&gt;</a></span><span class="message">as far as I remember, we only use it a bit in autotools/libtool ./bootstrap scripts</span></div><div class="line" id="014357"><span class="nick" style="color:#6d2462"><a href="#014357" label="[01:43:57]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: but why should my bash build output different results, it's always on the same cpu/kernel/whatever...</span></div><div class="line" id="014424"><span class="nick" style="color:#389600"><a href="#014424" label="[01:44:24]">&lt;stikonas&gt;</a></span><span class="message">oh, even on your system it's not reproducible</span></div><div class="line" id="014425"><span class="nick" style="color:#389600"><a href="#014425" label="[01:44:25]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="014439"><span class="nick" style="color:#389600"><a href="#014439" label="[01:44:39]">&lt;stikonas&gt;</a></span><span class="message">then maybe some timestamp is slipping in</span></div><div class="line" id="014513"><span class="nick" style="color:#6d2462"><a href="#014513" label="[01:45:13]">&lt;gforce_de1977&gt;</a></span><span class="message">awk</span></div><div class="line" id="023230"><span class="nick" style="color:#80b1d3"><a href="#023230" label="[02:32:30]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: can you upload two binaries to somewhere + i will compare?</span></div><div class="line" id="023240"><span class="nick" style="color:#80b1d3"><a href="#023240" label="[02:32:40]">&lt;fossy&gt;</a></span><span class="message">stikonas: that's good</span></div><div class="line" id="023704"><span class="nick" style="color:#234e69"><a href="#023704" label="[02:37:04]">&lt;pabs3&gt;</a></span><span class="message">siraben, fossy: so my mail didn't reach the list, I guess I need to subscribe and resend</span></div><div class="line" id="070222"><span class="nick" style="color:#2e2a4a"><a href="#070222" label="[07:02:22]">&lt;OriansJ`&gt;</a></span><span class="message">oh and for extra fun the M1 and hex2 used by mescc will also be faster</span></div><div class="line" id="071444"><span class="nick" style="color:#2e2a4a"><a href="#071444" label="[07:14:44]">&lt;OriansJ`&gt;</a></span><span class="message">got all the way up to kaem working with M2libc; just need to figure out the kaem segfault reason</span></div><div class="line" id="071709"><span class="nick" style="color:#2e2a4a"><a href="#071709" label="[07:17:09]">&lt;OriansJ`&gt;</a></span><span class="message">right to this level: <a rel="nofollow" href="https://paste.debian.net/1192267/">https://paste.debian.net/1192267/</a>  for anyone curious</span></div><div class="line" id="072433"><span class="nick" style="color:#2e2a4a"><a href="#072433" label="[07:24:33]">&lt;OriansJ`&gt;</a></span><span class="message">I'll try to sort this out when I have time.</span></div><div class="line" id="151204"><span class="nick" style="color:#2e2a4a"><a href="#151204" label="[15:12:04]">&lt;OriansJ`&gt;</a></span><span class="message">how the heck is GCC setting token-&gt;value to &quot;&quot; when token is calloc'd and value is never assigned???</span></div><div class="line" id="152053"><span class="nick" style="color:#2e2a4a"><a href="#152053" label="[15:20:53]">&lt;OriansJ`&gt;</a></span><span class="message">ok got kaem nice and happy again</span></div><div class="line" id="152740"><span class="nick" style="color:#6c3d55"><a href="#152740" label="[15:27:40]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: regarding different bash5.1 / bash-binaries: there are some links already in the backlog, let me search:</span></div><div class="line" id="153126"><span class="nick" style="color:#6c3d55"><a href="#153126" label="[15:31:26]">&lt;gforce_d11977&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="http://intercity-vpn.de/bash5.1-sha256-41dd3dfa62efcd8a71392e09747aab93660b0549f39cb4e673547db47a02bc27-kernel-config.txt">http://intercity-vpn.de/bash5.1-sha256-41dd3dfa62efcd8a71392e09747aab93660b0549f39cb4e673547db47a02bc27-kernel-config.txt</a> </span></div><div class="line" id="153134"><span class="nick" style="color:#6c3d55"><a href="#153134" label="[15:31:34]">&lt;gforce_d11977&gt;</a></span><span class="message">and <a rel="nofollow" href="http://intercity-vpn.de/bash5.1-sha256-41dd3dfa62efcd8a71392e09747aab93660b0549f39cb4e673547db47a02bc27.bin">http://intercity-vpn.de/bash5.1-sha256-41dd3dfa62efcd8a71392e09747aab93660b0549f39cb4e673547db47a02bc27.bin</a> </span></div><div class="line" id="153332"><span class="nick" style="color:#6c3d55"><a href="#153332" label="[15:33:32]">&lt;gforce_d11977&gt;</a></span><span class="message">my goal for tonight is having base64 and let the bootstrap run e.g. 20 times so i can see in the log (via base64) the binaries</span></div><div class="line" id="232613"><span class="nick" style="color:#d9d9d9"><a href="#232613" label="[23:26:13]">&lt;bauen1&gt;</a></span><span class="message">now that i have stow working correctly i've updated a few steps to use it as a test: <a rel="nofollow" href="https://github.com/bauen1/live-bootstrap/commit/4f1cb3c8e38d9813f63cbe1bf20cf47c30ac8d84">https://github.com/bauen1/live-bootstrap/commit/4f1cb3c8e38d9813f63cbe1bf20cf47c30ac8d84</a> </span></div><div class="line" id="232724"><span class="nick" style="color:#389600"><a href="#232724" label="[23:27:24]">&lt;stikonas&gt;</a></span><span class="message">bauen1: do you know if it would be possible to hide some of the stow complexity in some bash function?</span></div><div class="line" id="232740"><span class="nick" style="color:#389600"><a href="#232740" label="[23:27:40]">&lt;stikonas&gt;</a></span><span class="message">most of the command line arguments are the same</span></div><div class="line" id="232746"><span class="nick" style="color:#d9d9d9"><a href="#232746" label="[23:27:46]">&lt;bauen1&gt;</a></span><span class="message">yes</span></div><div class="line" id="232809"><span class="nick" style="color:#d9d9d9"><a href="#232809" label="[23:28:09]">&lt;bauen1&gt;</a></span><span class="message">i already have a test implementation of a &quot;upkg&quot; utility that does the stow + a bit of house keeping</span></div><div class="line" id="232824"><span class="nick" style="color:#d9d9d9"><a href="#232824" label="[23:28:24]">&lt;bauen1&gt;</a></span><span class="message">so you can only have a single version of a package &quot;selected&quot; at a time</span></div><div class="line" id="232846"><span class="nick" style="color:#d9d9d9"><a href="#232846" label="[23:28:46]">&lt;bauen1&gt;</a></span><span class="message">but i've realised i need to extend it to support multiple operations in a single go</span></div><div class="line" id="233000"><span class="nick" style="color:#389600"><a href="#233000" label="[23:30:00]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think you'll have to experiment a bit to find what works nicely</span></div><div class="line" id="233020"><span class="nick" style="color:#389600"><a href="#233020" label="[23:30:20]">&lt;stikonas&gt;</a></span><span class="message">I'm not having a second attempt at GNU Tar 1.34</span></div><div class="line" id="233202"><span class="nick" style="color:#389600"><a href="#233202" label="[23:32:02]">&lt;stikonas&gt;</a></span><span class="message">s/not/now/</span></div><div class="line" id="233553"><span class="nick" style="color:#d9d9d9"><a href="#233553" label="[23:35:53]">&lt;bauen1&gt;</a></span><span class="message">the only drawback the current way of storing &quot;packages&quot; has it that you need seperate invokations per package</span></div><div class="line" id="233617"><span class="nick" style="color:#d9d9d9"><a href="#233617" label="[23:36:17]">&lt;bauen1&gt;</a></span><span class="message">or write a bit of perl to invoke Stow.pm from the same perl process if you want to do so with a single invokation (to rotate libraries etc)</span></div><div class="line" id="233656"><span class="nick" style="color:#d9d9d9"><a href="#233656" label="[23:36:56]">&lt;bauen1&gt;</a></span><span class="message">but it's simple and easy to understand, can be extended with a /upkgs/pkg/current symlink to the &quot;installed&quot; version to make for a simple &quot;package manager&quot; (upkg)</span></div><div class="line" id="234317"><span class="nick" style="color:#389600"><a href="#234317" label="[23:43:17]">&lt;stikonas&gt;</a></span><span class="message">ok, I think tar is working now</span></div><div class="line" id="234908"><span class="nick" style="color:#389600"><a href="#234908" label="[23:49:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/87">https://github.com/fosslinux/live-bootstrap/pull/87</a> </span></div><div class="line" id="234934"><span class="nick" style="color:#389600"><a href="#234934" label="[23:49:34]">&lt;stikonas&gt;</a></span><span class="message">I had more luck with directy using gnulib-tool than ./bootsrap script from tar repo</span></div><div class="line" id="234957"><span class="nick" style="color:#389600"><a href="#234957" label="[23:49:57]">&lt;stikonas&gt;</a></span><span class="message">(we are still a bit low on tools and bootstrap script assumes that we have those)</span></div><div class="line" id="235451"><span class="nick" style="color:#80b1d3"><a href="#235451" label="[23:54:51]">&lt;fossy&gt;</a></span><span class="message">stikonas: 1. i would prefer /not/ to use a submodule wherever possible, as this requires more processing on the host system (bad). 2. (not a problem but out of interest) how did you generate the list in import-gnulib.sh?</span></div><div class="line" id="235508"><span class="nick" style="color:#389600"><a href="#235508" label="[23:55:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: I just took it from the comment</span></div><div class="line" id="235521"><span class="nick" style="color:#389600"><a href="#235521" label="[23:55:21]">&lt;stikonas&gt;</a></span><span class="message">it's copy paste from gnu/Makefile.am</span></div><div class="line" id="235533"><span class="nick" style="color:#80b1d3"><a href="#235533" label="[23:55:33]">&lt;fossy&gt;</a></span><span class="message">oh, right</span></div><div class="line" id="235534"><span class="nick" style="color:#389600"><a href="#235534" label="[23:55:34]">&lt;stikonas&gt;</a></span><span class="message">(removed # and added ../../src/gnulib)</span></div><div class="line" id="235550"><span class="nick" style="color:#389600"><a href="#235550" label="[23:55:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, we can think about something else instead of submodule</span></div><div class="line" id="235607"><span class="nick" style="color:#389600"><a href="#235607" label="[23:56:07]">&lt;stikonas&gt;</a></span><span class="message">although, it will work... (submodule is just way of distributing it)</span></div><div class="line" id="235615"><span class="nick" style="color:#389600"><a href="#235615" label="[23:56:15]">&lt;stikonas&gt;</a></span><span class="message">but we'll need ot use something on the host anyway</span></div><div class="line" id="235621"><span class="nick" style="color:#389600"><a href="#235621" label="[23:56:21]">&lt;stikonas&gt;</a></span><span class="message">as gnulib does not ship any tarballs</span></div><div class="line" id="235642"><span class="nick" style="color:#389600"><a href="#235642" label="[23:56:42]">&lt;stikonas&gt;</a></span><span class="message">and I think we'll need a lot of different revisions...</span></div><div class="line" id="235655"><span class="nick" style="color:#389600"><a href="#235655" label="[23:56:55]">&lt;stikonas&gt;</a></span><span class="message">each package depends on different checkout of gnulib...</span></div><div class="line" id="235743"><span class="nick" style="color:#80b1d3"><a href="#235743" label="[23:57:43]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/gnulib.git/snapshot/gnulib-30820c.tar.gz">https://git.savannah.gnu.org/cgit/gnulib.git/snapshot/gnulib-30820c.tar.gz</a>  ?</span></div><div class="line" id="235817"><span class="nick" style="color:#389600"><a href="#235817" label="[23:58:17]">&lt;stikonas&gt;</a></span><span class="message">well, we can have that...</span></div><div class="line" id="235844"><span class="nick" style="color:#389600"><a href="#235844" label="[23:58:44]">&lt;stikonas&gt;</a></span><span class="message">although, I'm not convinced that there is less processing... It's just that instead of processing on the host, remote git server does processing</span></div><div class="line" id="235915"><span class="nick" style="color:#389600"><a href="#235915" label="[23:59:15]">&lt;stikonas&gt;</a></span><span class="message">but if you think snapshot is better, I can switch to snapshots...</span></div><div class="line" id="235925"><span class="nick" style="color:#80b1d3"><a href="#235925" label="[23:59:25]">&lt;fossy&gt;</a></span><span class="message">i think the main advantage of tars is that they are easier to &quot;check&quot; their validity</span></div><div class="line" id="235928"><span class="nick" style="color:#389600"><a href="#235928" label="[23:59:28]">&lt;stikonas&gt;</a></span><span class="message">another option I can think of</span></div><div class="line" id="235935"><span class="nick" style="color:#389600"><a href="#235935" label="[23:59:35]">&lt;stikonas&gt;</a></span><span class="message">is generate tars locally</span></div><div class="line" id="235942"><span class="nick" style="color:#389600"><a href="#235942" label="[23:59:42]">&lt;stikonas&gt;</a></span><span class="message">but then checksum is checked from inside bootstrap</span></div><div class="line" id="235956"><span class="nick" style="color:#389600"><a href="#235956" label="[23:59:56]">&lt;stikonas&gt;</a></span><span class="message">then we don't need to download million of gnulib snapshots</span></div><br /></div></body></html>