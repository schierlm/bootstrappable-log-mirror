<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-05-21.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="185809"><span class="nick" style="color:#389600"><a href="#185809" label="[18:58:09]">&lt;Googulator&gt;</a></span><span class="message">just testing the logger</span></div><div class="line" id="185818"><span class="nick" style="color:#389600"><a href="#185818" label="[18:58:18]">&lt;Googulator&gt;</a></span><span class="message">...works!</span></div><div class="line" id="191535"><span class="nick" style="color:#8dd3c7"><a href="#191535" label="[19:15:35]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; Bridge room is also aliased to #bootstrappable:kde.org</span></div><div class="line" id="200659"><span class="nick" style="color:#389600"><a href="#200659" label="[20:06:59]">&lt;Googulator&gt;</a></span><span class="message">fossy: what's the reasoning behind the sbin-&gt;bin merge in live-bootstrap? It seems to be a rather nonstandard configuration.</span></div><div class="line" id="200903"><span class="nick" style="color:#389600"><a href="#200903" label="[20:09:03]">&lt;Googulator&gt;</a></span><span class="message">(Unlike merged-usr, which is fairly common.)</span></div><div class="line" id="202106"><span class="nick" style="color:#2e2a4a"><a href="#202106" label="[20:21:06]">&lt;stikonas&gt;</a></span><span class="message">probably just simpler?</span></div><div class="line" id="202110"><span class="nick" style="color:#2e2a4a"><a href="#202110" label="[20:21:10]">&lt;stikonas&gt;</a></span><span class="message">we are running as root anyway</span></div><div class="line" id="202125"><span class="nick" style="color:#2e2a4a"><a href="#202125" label="[20:21:25]">&lt;stikonas&gt;</a></span><span class="message">so there is no point of splitting programs that are only available for root</span></div><div class="line" id="202249"><span class="nick" style="color:#389600"><a href="#202249" label="[20:22:49]">&lt;Googulator&gt;</a></span><span class="message">Just hope it won't come back to bite us when bootstrapping something on top...</span></div><div class="line" id="202326"><span class="nick" style="color:#389600"><a href="#202326" label="[20:23:26]">&lt;Googulator&gt;</a></span><span class="message">(Guix in particular)</span></div><div class="line" id="202410"><span class="nick" style="color:#389600"><a href="#202410" label="[20:24:10]">&lt;Googulator&gt;</a></span><span class="message">just like how linking almost everything statically is already causing headaches there</span></div><div class="line" id="202432"><span class="nick" style="color:#389600"><a href="#202432" label="[20:24:32]">&lt;Googulator&gt;</a></span><span class="message">well, not static linking per se, but the combination of static linking and Musl</span></div><div class="line" id="202449"><span class="nick" style="color:#389600"><a href="#202449" label="[20:24:49]">&lt;Googulator&gt;</a></span><span class="message">(Musl disables dlopen support when it's built statically)</span></div><div class="line" id="210650"><span class="nick" style="color:#2e2a4a"><a href="#210650" label="[21:06:50]">&lt;stikonas&gt;</a></span><span class="message">well, if necessary, we could switch to glibc in the late bootstrap...</span></div><div class="line" id="210700"><span class="nick" style="color:#2e2a4a"><a href="#210700" label="[21:07:00]">&lt;stikonas&gt;</a></span><span class="message">or just start using more of the dynamic linking...</span></div><div class="line" id="214945"><span class="nick" style="color:#2e2a4a"><a href="#214945" label="[21:49:45]">&lt;stikonas&gt;</a></span><span class="message">Googulator: not sure if you saw it yet but riscv userspace bootstrapping is now possible</span></div><div class="line" id="215005"><span class="nick" style="color:#389600"><a href="#215005" label="[21:50:05]">&lt;Googulator&gt;</a></span><span class="message">yeah, I've been following ekaitz's posts</span></div><div class="line" id="215007"><span class="nick" style="color:#2e2a4a"><a href="#215007" label="[21:50:07]">&lt;stikonas&gt;</a></span><span class="message">(with a few minor issues)</span></div><div class="line" id="215021"><span class="nick" style="color:#389600"><a href="#215021" label="[21:50:21]">&lt;Googulator&gt;</a></span><span class="message">I'm just waiting for the 1.0 branch</span></div><div class="line" id="215026"><span class="nick" style="color:#2e2a4a"><a href="#215026" label="[21:50:26]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="215033"><span class="nick" style="color:#2e2a4a"><a href="#215033" label="[21:50:33]">&lt;stikonas&gt;</a></span><span class="message">riscv is post 1.0...</span></div><div class="line" id="215042"><span class="nick" style="color:#2e2a4a"><a href="#215042" label="[21:50:42]">&lt;stikonas&gt;</a></span><span class="message">first of all because it depends on tcc mob...</span></div><div class="line" id="215057"><span class="nick" style="color:#2e2a4a"><a href="#215057" label="[21:50:57]">&lt;stikonas&gt;</a></span><span class="message">and that's non-trivial risk...</span></div><div class="line" id="215132"><span class="nick" style="color:#389600"><a href="#215132" label="[21:51:32]">&lt;Googulator&gt;</a></span><span class="message">there are also mes changes</span></div><div class="line" id="215248"><span class="nick" style="color:#389600"><a href="#215248" label="[21:52:48]">&lt;Googulator&gt;</a></span><span class="message">I'd also like to do a &quot;pivot-to-x64&quot; option on the same codebase as riscv64 support</span></div><div class="line" id="215327"><span class="nick" style="color:#2e2a4a"><a href="#215327" label="[21:53:27]">&lt;stikonas&gt;</a></span><span class="message">mes changes are small</span></div><div class="line" id="215334"><span class="nick" style="color:#2e2a4a"><a href="#215334" label="[21:53:34]">&lt;stikonas&gt;</a></span><span class="message">the biggest are already merged with 0.26</span></div><div class="line" id="215338"><span class="nick" style="color:#389600"><a href="#215338" label="[21:53:38]">&lt;Googulator&gt;</a></span><span class="message">where we start out using a 32-bit userland, and then either build the Linux kernel already 64-bit, or build an initial 32-bit kernel, then build and kexec over to a 64-bit version</span></div><div class="line" id="215339"><span class="nick" style="color:#2e2a4a"><a href="#215339" label="[21:53:39]">&lt;stikonas&gt;</a></span><span class="message">there are some small</span></div><div class="line" id="215400"><span class="nick" style="color:#2e2a4a"><a href="#215400" label="[21:54:00]">&lt;stikonas&gt;</a></span><span class="message">yaeh, bit-switching might be useful in some cases</span></div><div class="line" id="215433"><span class="nick" style="color:#389600"><a href="#215433" label="[21:54:33]">&lt;Googulator&gt;</a></span><span class="message">&amp; of course, using ekaitz's tcc &amp; gcc also for pure x86</span></div><div class="line" id="215443"><span class="nick" style="color:#2e2a4a"><a href="#215443" label="[21:54:43]">&lt;stikonas&gt;</a></span><span class="message">e.g. right now if you start bootstrapping on UEFI (with preexisting kernel), you can't do kexec to linux kernel from live-bootstrap</span></div><div class="line" id="215444"><span class="nick" style="color:#389600"><a href="#215444" label="[21:54:44]">&lt;Googulator&gt;</a></span><span class="message">dropping 4.0.4</span></div><div class="line" id="215446"><span class="nick" style="color:#2e2a4a"><a href="#215446" label="[21:54:46]">&lt;stikonas&gt;</a></span><span class="message">yeah, that needs testing too</span></div><div class="line" id="215457"><span class="nick" style="color:#2e2a4a"><a href="#215457" label="[21:54:57]">&lt;stikonas&gt;</a></span><span class="message">we haven't done much testing of that gcc for x86</span></div><div class="line" id="215513"><span class="nick" style="color:#2e2a4a"><a href="#215513" label="[21:55:13]">&lt;stikonas&gt;</a></span><span class="message">well, tcc is tested well enough...</span></div><div class="line" id="215550"><span class="nick" style="color:#6b8072"><a href="#215550" label="[21:55:50]">&lt;ekaitz&gt;</a></span><span class="message">i think my changes in tcc don't change anything in x86</span></div><div class="line" id="215606"><span class="nick" style="color:#2e2a4a"><a href="#215606" label="[21:56:06]">&lt;stikonas&gt;</a></span><span class="message">gcc is more risky I guess</span></div><div class="line" id="215610"><span class="nick" style="color:#6b8072"><a href="#215610" label="[21:56:10]">&lt;ekaitz&gt;</a></span><span class="message">but i made a fix in x86's extended asm</span></div><div class="line" id="215614"><span class="nick" style="color:#6b8072"><a href="#215614" label="[21:56:14]">&lt;ekaitz&gt;</a></span><span class="message">(in tcc)</span></div><div class="line" id="215618"><span class="nick" style="color:#2e2a4a"><a href="#215618" label="[21:56:18]">&lt;stikonas&gt;</a></span><span class="message">but in the worst case x86 can use upstream gcc 4.6.4</span></div><div class="line" id="215626"><span class="nick" style="color:#6b8072"><a href="#215626" label="[21:56:26]">&lt;ekaitz&gt;</a></span><span class="message">yeah, sure</span></div><div class="line" id="215633"><span class="nick" style="color:#6b8072"><a href="#215633" label="[21:56:33]">&lt;ekaitz&gt;</a></span><span class="message">i don't think i changed anything there either</span></div><div class="line" id="215635"><span class="nick" style="color:#2e2a4a"><a href="#215635" label="[21:56:35]">&lt;stikonas&gt;</a></span><span class="message">but hopefully your release would work</span></div><div class="line" id="215647"><span class="nick" style="color:#6b8072"><a href="#215647" label="[21:56:47]">&lt;ekaitz&gt;</a></span><span class="message">in fact, now it should have also musl support for x86</span></div><div class="line" id="215653"><span class="nick" style="color:#6b8072"><a href="#215653" label="[21:56:53]">&lt;ekaitz&gt;</a></span><span class="message">which upstream doesn't</span></div><div class="line" id="215709"><span class="nick" style="color:#6b8072"><a href="#215709" label="[21:57:09]">&lt;ekaitz&gt;</a></span><span class="message">but i didn't make that perfect probably</span></div><div class="line" id="215847"><span class="nick" style="color:#2e2a4a"><a href="#215847" label="[21:58:47]">&lt;stikonas&gt;</a></span><span class="message">well, integration into bootstrapping projects will test everything more...</span></div><div class="line" id="215858"><span class="nick" style="color:#2e2a4a"><a href="#215858" label="[21:58:58]">&lt;stikonas&gt;</a></span><span class="message">but bootstrapping should be doable now</span></div><div class="line" id="215902"><span class="nick" style="color:#2e2a4a"><a href="#215902" label="[21:59:02]">&lt;stikonas&gt;</a></span><span class="message">I'm reasonably convinced...</span></div><div class="line" id="215923"><span class="nick" style="color:#2e2a4a"><a href="#215923" label="[21:59:23]">&lt;stikonas&gt;</a></span><span class="message">well, I should still look at longjmp problem in meslibc...</span></div><div class="line" id="220234"><span class="nick" style="color:#6b8072"><a href="#220234" label="[22:02:34]">&lt;ekaitz&gt;</a></span><span class="message">yeah</span></div><div class="line" id="220237"><span class="nick" style="color:#6b8072"><a href="#220237" label="[22:02:37]">&lt;ekaitz&gt;</a></span><span class="message">and the args thing</span></div><div class="line" id="221218"><span class="nick" style="color:#389600"><a href="#221218" label="[22:12:18]">&lt;Googulator&gt;</a></span><span class="message">out of curiosity, why was 4.6.4 selected instead of 4.7.4?</span></div><div class="line" id="221630"><span class="nick" style="color:#2e2a4a"><a href="#221630" label="[22:16:30]">&lt;stikonas&gt;</a></span><span class="message">Googulator: I think ekaitz selected it because it had split tarballs</span></div><div class="line" id="221640"><span class="nick" style="color:#2e2a4a"><a href="#221640" label="[22:16:40]">&lt;stikonas&gt;</a></span><span class="message">i.e. you can just take core and C++ separately</span></div><div class="line" id="221655"><span class="nick" style="color:#2e2a4a"><a href="#221655" label="[22:16:55]">&lt;stikonas&gt;</a></span><span class="message">though arguably if we area making our own fork, we could do the same with 4.7.4...</span></div><div class="line" id="221712"><span class="nick" style="color:#389600"><a href="#221712" label="[22:17:12]">&lt;Googulator&gt;</a></span><span class="message">assuming 4.7.4 didn't rearrange the code in a way that makes that harder</span></div><div class="line" id="221716"><span class="nick" style="color:#2e2a4a"><a href="#221716" label="[22:17:16]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="221728"><span class="nick" style="color:#389600"><a href="#221728" label="[22:17:28]">&lt;Googulator&gt;</a></span><span class="message">e.g. makefiles assuming that every source component is present</span></div><div class="line" id="221729"><span class="nick" style="color:#2e2a4a"><a href="#221729" label="[22:17:29]">&lt;stikonas&gt;</a></span><span class="message">or maybe it's vice versa and riscv patches apply fairly cleanly to 4.7.4...</span></div><div class="line" id="221737"><span class="nick" style="color:#6b8072"><a href="#221737" label="[22:17:37]">&lt;ekaitz&gt;</a></span><span class="message">i also used that because i was told to</span></div><div class="line" id="221739"><span class="nick" style="color:#6b8072"><a href="#221739" label="[22:17:39]">&lt;ekaitz&gt;</a></span><span class="message">hehe</span></div><div class="line" id="221748"><span class="nick" style="color:#6b8072"><a href="#221748" label="[22:17:48]">&lt;ekaitz&gt;</a></span><span class="message">but yeah it's the latest modular distribution</span></div><div class="line" id="221816"><span class="nick" style="color:#389600"><a href="#221816" label="[22:18:16]">&lt;Googulator&gt;</a></span><span class="message">Others clearly are targeting 4.7 instead: <a rel="nofollow" href="https://fosdem.org/2024/schedule/event/fosdem-2024-2690-build-distribution-for-maintaining-the-famous-gcc-4-7/">https://fosdem.org/2024/schedule/event/fosdem-2024-2690-build-distribution-for-maintaining-the-famous-gcc-4-7/</a> </span></div><div class="line" id="221836"><span class="nick" style="color:#2e2a4a"><a href="#221836" label="[22:18:36]">&lt;stikonas&gt;</a></span><span class="message">the good thing is that at least I don't think 4.7.4 gives us much more over 4.6.4</span></div><div class="line" id="221841"><span class="nick" style="color:#389600"><a href="#221841" label="[22:18:41]">&lt;Googulator&gt;</a></span><span class="message">but modularity is indeed really useful for maintaining the 256MiB footprint target</span></div><div class="line" id="221846"><span class="nick" style="color:#2e2a4a"><a href="#221846" label="[22:18:46]">&lt;stikonas&gt;</a></span><span class="message">but yes... others are targeting 4.7.4</span></div><div class="line" id="221856"><span class="nick" style="color:#2e2a4a"><a href="#221856" label="[22:18:56]">&lt;stikonas&gt;</a></span><span class="message">but 4.6 already unlocks as new kernel as 4.7</span></div><div class="line" id="221859"><span class="nick" style="color:#389600"><a href="#221859" label="[22:18:59]">&lt;Googulator&gt;</a></span><span class="message">most importantly, 4.6.4 already unlocks Linux 4.19</span></div><div class="line" id="221916"><span class="nick" style="color:#389600"><a href="#221916" label="[22:19:16]">&lt;Googulator&gt;</a></span><span class="message">with its super long SLTS support</span></div><div class="line" id="221918"><span class="nick" style="color:#2e2a4a"><a href="#221918" label="[22:19:18]">&lt;stikonas&gt;</a></span><span class="message">oh that just build project is strange...</span></div><div class="line" id="221927"><span class="nick" style="color:#2e2a4a"><a href="#221927" label="[22:19:27]">&lt;stikonas&gt;</a></span><span class="message">I don't see any advantages over proper bootstrapping</span></div><div class="line" id="222425"><span class="nick" style="color:#389600"><a href="#222425" label="[22:24:25]">&lt;Googulator&gt;</a></span><span class="message">the next SLTS, Linux 5.10, is unfortunately impossible, unless we can backport the necessary GCC 4.9 compiler features (and make gcc-bootstrap lie about its version)</span></div><div class="line" id="222451"><span class="nick" style="color:#2e2a4a"><a href="#222451" label="[22:24:51]">&lt;stikonas&gt;</a></span><span class="message">(or patch the check out of 5.10)</span></div><div class="line" id="222457"><span class="nick" style="color:#389600"><a href="#222457" label="[22:24:57]">&lt;Googulator&gt;</a></span><span class="message">but 4.19 is good for another 5 years luckily</span></div><div class="line" id="222638"><span class="nick" style="color:#389600"><a href="#222638" label="[22:26:38]">&lt;Googulator&gt;</a></span><span class="message">for the 1.0 release, OpenELA supports the 4.14 kernel &quot;at least until the end of 2024&quot; (hopefully we can roll out 1.1 before that happens)</span></div><div class="line" id="235254"><span class="nick" style="color:#389600"><a href="#235254" label="[23:52:54]">&lt;Googulator&gt;</a></span><span class="message">Any idea why this was done? <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/282/commits/55a44d93476ac8a9aae85812d98dd00593ce925e">https://github.com/fosslinux/live-bootstrap/pull/282/commits/55a44d93476ac8a9aae85812d98dd00593ce925e</a> </span></div><div class="line" id="235324"><span class="nick" style="color:#389600"><a href="#235324" label="[23:53:24]">&lt;Googulator&gt;</a></span><span class="message">stikonas: looks like you requested it specifically: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/282#discussion_r1167668812">https://github.com/fosslinux/live-bootstrap/pull/282#discussion_r1167668812</a> </span></div><div class="line" id="235418"><span class="nick" style="color:#2e2a4a"><a href="#235418" label="[23:54:18]">&lt;stikonas&gt;</a></span><span class="message">well, if we need to update checksums</span></div><div class="line" id="235427"><span class="nick" style="color:#2e2a4a"><a href="#235427" label="[23:54:27]">&lt;stikonas&gt;</a></span><span class="message">then we need to build all packages</span></div><div class="line" id="235512"><span class="nick" style="color:#2e2a4a"><a href="#235512" label="[23:55:12]">&lt;stikonas&gt;</a></span><span class="message">otherwise your new checksum file will be missing some entries</span></div><div class="line" id="235524"><span class="nick" style="color:#389600"><a href="#235524" label="[23:55:24]">&lt;Googulator&gt;</a></span><span class="message">assuming you're using --update-checksums to update checksums</span></div><div class="line" id="235533"><span class="nick" style="color:#389600"><a href="#235533" label="[23:55:33]">&lt;Googulator&gt;</a></span><span class="message">which is a minority of cases</span></div><div class="line" id="235538"><span class="nick" style="color:#2e2a4a"><a href="#235538" label="[23:55:38]">&lt;stikonas&gt;</a></span><span class="message">though right now we have too many entries (base.tar.bz2 is included in the final list)</span></div><div class="line" id="235609"><span class="nick" style="color:#2e2a4a"><a href="#235609" label="[23:56:09]">&lt;stikonas&gt;</a></span><span class="message">well, when some library changes (musl or mes) you basically have to do that</span></div><div class="line" id="235621"><span class="nick" style="color:#2e2a4a"><a href="#235621" label="[23:56:21]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="235624"><span class="nick" style="color:#389600"><a href="#235624" label="[23:56:24]">&lt;Googulator&gt;</a></span><span class="message">realistically, in the overwhelming majority of runs using it, --update-checksums actually means &quot;I don't want to fail for checksum changes, but also don't care about the final checksums&quot;</span></div><div class="line" id="235626"><span class="nick" style="color:#2e2a4a"><a href="#235626" label="[23:56:26]">&lt;stikonas&gt;</a></span><span class="message">but if you want, we can change that</span></div><div class="line" id="235701"><span class="nick" style="color:#389600"><a href="#235701" label="[23:57:01]">&lt;Googulator&gt;</a></span><span class="message">perhaps skipping the final checksum update step if --build-kernels wasn't also specified</span></div><div class="line" id="235715"><span class="nick" style="color:#2e2a4a"><a href="#235715" label="[23:57:15]">&lt;stikonas&gt;</a></span><span class="message">well, final checksum update is inside chroot anywya</span></div><div class="line" id="235725"><span class="nick" style="color:#2e2a4a"><a href="#235725" label="[23:57:25]">&lt;stikonas&gt;</a></span><span class="message">but yeah, we can skip printing it</span></div><div class="line" id="235923"><span class="nick" style="color:#389600"><a href="#235923" label="[23:59:23]">&lt;Googulator&gt;</a></span><span class="message">noticed this while debugging another issue where bash-5.2.15 would proceed straight to the extraction phase, skipping the download, and then fail because the tarball didn't exist, if I changed the 2nd build of musl-1.2.4 to build dynamic libraries</span></div><div class="line" id="235950"><span class="nick" style="color:#389600"><a href="#235950" label="[23:59:50]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/blob/master/steps/helpers.sh#L256">https://github.com/Googulator/live-bootstrap/blob/master/steps/helpers.sh#L256</a> </span></div><div class="line" id="235954"><span class="nick" style="color:#389600"><a href="#235954" label="[23:59:54]">&lt;Googulator&gt;</a></span><span class="message">see if you notice it :)</span></div><br /></div></body></html>