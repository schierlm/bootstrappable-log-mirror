<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-11-01.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001733"><span class="nick" style="color:#389600"><a href="#001733" label="[00:17:33]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I have #error working in M2-Planet now</span></div><div class="line" id="001741"><span class="nick" style="color:#389600"><a href="#001741" label="[00:17:41]">&lt;stikonas&gt;</a></span><span class="message">but it breaks mes-m2 a bit</span></div><div class="line" id="001921"><span class="nick" style="color:#389600"><a href="#001921" label="[00:19:21]">&lt;stikonas&gt;</a></span><span class="message">we need some extra defines</span></div><div class="line" id="002109"><span class="nick" style="color:#389600"><a href="#002109" label="[00:21:09]">&lt;stikonas&gt;</a></span><span class="message">or maybe it would be better to properly fix mes</span></div><div class="line" id="002159"><span class="nick" style="color:#389600"><a href="#002159" label="[00:21:59]">&lt;stikonas&gt;</a></span><span class="message">e.g. this file <a rel="nofollow" href="https://github.com/oriansj/mes-m2/blob/master/lib/linux/waitpid.c#L32">https://github.com/oriansj/mes-m2/blob/master/lib/linux/waitpid.c#L32</a> </span></div><div class="line" id="002221"><span class="nick" style="color:#389600"><a href="#002221" label="[00:22:21]">&lt;stikonas&gt;</a></span><span class="message">rather than #if __i386__ I think it should be #ifdef SYS_waitpid</span></div><div class="line" id="002335"><span class="nick" style="color:#389600"><a href="#002335" label="[00:23:35]">&lt;stikonas&gt;</a></span><span class="message">janneke_: does this change sound reasonable?</span></div><div class="line" id="002355"><span class="nick" style="color:#389600"><a href="#002355" label="[00:23:55]">&lt;stikonas&gt;</a></span><span class="message">&quot;#if __i386__&quot; -&gt; &quot;#ifdef SYS_waitpid&quot; ?</span></div><div class="line" id="002429"><span class="nick" style="color:#389600"><a href="#002429" label="[00:24:29]">&lt;stikonas&gt;</a></span><span class="message">than rather than hardcoding all arches, we can just go over the list of syscalls</span></div><div class="line" id="003348"><span class="nick" style="color:#389600"><a href="#003348" label="[00:33:48]">&lt;stikonas&gt;</a></span><span class="message">and this is #error's implementation in M2-Planet <a rel="nofollow" href="https://github.com/stikonas/M2-Planet/tree/preprocess_error">https://github.com/stikonas/M2-Planet/tree/preprocess_error</a> </span></div><div class="line" id="003420"><span class="nick" style="color:#389600"><a href="#003420" label="[00:34:20]">&lt;stikonas&gt;</a></span><span class="message">very similar to #define but actually simpler</span></div><div class="line" id="004017"><span class="nick" style="color:#389600"><a href="#004017" label="[00:40:17]">&lt;stikonas&gt;</a></span><span class="message">hmm, there are other places in mes where __i386__ is checked. So we probably need to deal with it in M2-Planet in any case</span></div><div class="line" id="004529"><span class="nick">***</span><span class="message notice">Thalheim is now known as zv</span></div><div class="line" id="012218"><span class="nick" style="color:#389600"><a href="#012218" label="[01:22:18]">&lt;stikonas&gt;</a></span><span class="message">ok, I might be able to add support for macro variables but need to do a bit more testing tomorrow</span></div><div class="line" id="012223"><span class="nick" style="color:#389600"><a href="#012223" label="[01:22:23]">&lt;stikonas&gt;</a></span><span class="message">but what I have seems promising</span></div><div class="line" id="030659"><span class="nick" style="color:#2e2a4a"><a href="#030659" label="[03:06:59]">&lt;oriansj&gt;</a></span><span class="message">stikonas: instead of adding host architecture detection to M2-Planet, just use -D __i386__=1 in the command arguments</span></div><div class="line" id="030731"><span class="nick" style="color:#2e2a4a"><a href="#030731" label="[03:07:31]">&lt;oriansj&gt;</a></span><span class="message">as it does support arbitrary number of -D statements=num</span></div><div class="line" id="030803"><span class="nick" style="color:#2e2a4a"><a href="#030803" label="[03:08:03]">&lt;oriansj&gt;</a></span><span class="message">I might even use it to remove the hand updating of version numbers in mescc-tools</span></div><div class="line" id="030828"><span class="nick" style="color:#2e2a4a"><a href="#030828" label="[03:08:28]">&lt;oriansj&gt;</a></span><span class="message">as for mkdir -p yeah just skipping over the -p will work just fine.</span></div><div class="line" id="030925"><span class="nick" style="color:#2e2a4a"><a href="#030925" label="[03:09:25]">&lt;oriansj&gt;</a></span><span class="message">for 2 reasons, it is only expected to work if the folder isn't there (which it will not be when bootstrapping) and if it is there, we just ignore the failure.</span></div><div class="line" id="030940"><span class="nick" style="color:#2e2a4a"><a href="#030940" label="[03:09:40]">&lt;oriansj&gt;</a></span><span class="message">stat requires 16bit fields if I remember correctly</span></div><div class="line" id="031000"><span class="nick" style="color:#2e2a4a"><a href="#031000" label="[03:10:00]">&lt;oriansj&gt;</a></span><span class="message">which means we would need to add proper 16bit field support to M2-Planet</span></div><div class="line" id="045638"><span class="nick" style="color:#6b8072"><a href="#045638" label="[04:56:38]">&lt;Hagfish&gt;</a></span><span class="message">nice to see dwheeler commenting on <a rel="nofollow" href="https://news.ycombinator.com/item?id=29061987">https://news.ycombinator.com/item?id=29061987</a> </span></div><div class="line" id="064651"><span class="nick" style="color:#80b1d3"><a href="#064651" label="[06:46:51]">&lt;janneke_&gt;</a></span><span class="message">stikonas[m]: yes that makes sense.  i guess many preprocessor directives need to be revisited once mes switches to an m2 version that doesn't treat them as comments</span></div><div class="line" id="064741"><span class="nick">***</span><span class="message notice">janneke_ is now known as janneke</span></div><div class="line" id="073902"><span class="nick">***</span><span class="message notice">Jeremy_Rand_ is now known as Jeremy_Rand</span></div><div class="line" id="111917"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="123004"><span class="nick" style="color:#6d2462"><a href="#123004" label="[12:30:04]">&lt;gbrlwck&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/pull/7">https://github.com/oriansj/mescc-tools-extra/pull/7</a> </span></div><div class="line" id="123052"><span class="nick" style="color:#6d2462"><a href="#123052" label="[12:30:52]">&lt;gbrlwck&gt;</a></span><span class="message">it's tested, works and does not add a dependency on stat syscall :)</span></div><div class="line" id="124746"><span class="nick" style="color:#6d2462"><a href="#124746" label="[12:47:46]">&lt;gbrlwck&gt;</a></span><span class="message">is pmatch part of mes?  i can't find a reference to it in Guile Reference neither in my GUILE_LOAD_PATH....</span></div><div class="line" id="125059"><span class="nick" style="color:#6d2462"><a href="#125059" label="[12:50:59]">&lt;gbrlwck&gt;</a></span><span class="message">is there any kind of reference or documentation on the (internal) workings of mescc?</span></div><div class="line" id="125739"><span class="nick" style="color:#389600"><a href="#125739" label="[12:57:39]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: mes/module/mes/pmatch.scm</span></div><div class="line" id="125758"><span class="nick" style="color:#389600"><a href="#125758" label="[12:57:58]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: and I'm not aware of any additional documentation</span></div><div class="line" id="125938"><span class="nick" style="color:#6d2462"><a href="#125938" label="[12:59:38]">&lt;gbrlwck&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="130749"><span class="nick" style="color:#389600"><a href="#130749" label="[13:07:49]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: change looks good to me, but maybe you can use tab to indent i = 2; (and also the other create_dir line which you haven't touched but that line also had inconsistent indentation)</span></div><div class="line" id="130818"><span class="nick" style="color:#6d2462"><a href="#130818" label="[13:08:18]">&lt;gbrlwck&gt;</a></span><span class="message">of course :)</span></div><div class="line" id="130930"><span class="nick" style="color:#389600"><a href="#130930" label="[13:09:30]">&lt;stikonas&gt;</a></span><span class="message">also maybe a short comment somewhere</span></div><div class="line" id="131251"><span class="nick" style="color:#6d2462"><a href="#131251" label="[13:12:51]">&lt;gbrlwck&gt;</a></span><span class="message">something like: &quot;we imitate GNU mkdir's &quot;-p&quot; argument because it's relied	on in bootstrapping&quot; ?</span></div><div class="line" id="131721"><span class="nick" style="color:#6d2462"><a href="#131721" label="[13:17:21]">&lt;gbrlwck&gt;</a></span><span class="message">pull request updated</span></div><div class="line" id="131722"><span class="nick" style="color:#389600"><a href="#131722" label="[13:17:22]">&lt;stikonas&gt;</a></span><span class="message">something like that or maybe we immitate GNU mkdir's &quot;-p&quot; for compatibility reasons</span></div><div class="line" id="131726"><span class="nick" style="color:#389600"><a href="#131726" label="[13:17:26]">&lt;stikonas&gt;</a></span><span class="message">ok, that's fine</span></div><div class="line" id="131813"><span class="nick" style="color:#6d2462"><a href="#131813" label="[13:18:13]">&lt;gbrlwck&gt;</a></span><span class="message">well, it's not *really* compatibility, since coreutils' `mkdir -p` would also create all the parent directories :)</span></div><div class="line" id="131827"><span class="nick" style="color:#389600"><a href="#131827" label="[13:18:27]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think it will do</span></div><div class="line" id="135238"><span class="nick" style="color:#6d2462"><a href="#135238" label="[13:52:38]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: i got mes-m2 to build correctly.  my first `./bin/mes-m2 -c &quot;(display 'hello) (newline)&quot;` got stuck (nothing happened for a couple of minutes, strace showed nothing, so i aborted execution).</span></div><div class="line" id="135304"><span class="nick" style="color:#6d2462"><a href="#135304" label="[13:53:04]">&lt;gbrlwck&gt;</a></span><span class="message">so i started again, attached strace which showed tons of SYS_read calls (all for one character each), then this:</span></div><div class="line" id="135306"><span class="nick" style="color:#6d2462"><a href="#135306" label="[13:53:06]">&lt;gbrlwck&gt;</a></span><span class="message">clock_gettime(CLOCK_PROCESS_CPUTIME_ID, {tv_sec=85, tv_nsec=123165000}) = 0</span></div><div class="line" id="135306"><span class="nick" style="color:#6d2462"><a href="#135306" label="[13:53:06]">&lt;gbrlwck&gt;</a></span><span class="message">brk(0x3dd315e2)                         = 0x3dd315e2</span></div><div class="line" id="135314"><span class="nick" style="color:#6d2462"><a href="#135314" label="[13:53:14]">&lt;gbrlwck&gt;</a></span><span class="message">it seems stuck again</span></div><div class="line" id="135321"><span class="nick" style="color:#389600"><a href="#135321" label="[13:53:21]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="135326"><span class="nick" style="color:#6d2462"><a href="#135326" label="[13:53:26]">&lt;gbrlwck&gt;</a></span><span class="message">wait</span></div><div class="line" id="135332"><span class="nick" style="color:#6d2462"><a href="#135332" label="[13:53:32]">&lt;gbrlwck&gt;</a></span><span class="message">i forgot the envvars</span></div><div class="line" id="135342"><span class="nick" style="color:#389600"><a href="#135342" label="[13:53:42]">&lt;stikonas&gt;</a></span><span class="message">yeah, those are important</span></div><div class="line" id="135357"><span class="nick" style="color:#389600"><a href="#135357" label="[13:53:57]">&lt;stikonas&gt;</a></span><span class="message">maybe try running without strace first</span></div><div class="line" id="135402"><span class="nick" style="color:#389600"><a href="#135402" label="[13:54:02]">&lt;stikonas&gt;</a></span><span class="message">strace will slow things down</span></div><div class="line" id="135850"><span class="nick" style="color:#6d2462"><a href="#135850" label="[13:58:50]">&lt;gbrlwck&gt;</a></span><span class="message">ok, this works (but it took 139s)</span></div><div class="line" id="140012"><span class="nick" style="color:#234e69"><a href="#140012" label="[14:00:12]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, so slow...</span></div><div class="line" id="140018"><span class="nick" style="color:#234e69"><a href="#140018" label="[14:00:18]">&lt;stikonas[m]&gt;</a></span><span class="message">Is that with strace?</span></div><div class="line" id="140027"><span class="nick" style="color:#6d2462"><a href="#140027" label="[14:00:27]">&lt;gbrlwck&gt;</a></span><span class="message">no, just with `time`</span></div><div class="line" id="140047"><span class="nick" style="color:#234e69"><a href="#140047" label="[14:00:47]">&lt;stikonas[m]&gt;</a></span><span class="message">That is really slow...</span></div><div class="line" id="140056"><span class="nick" style="color:#6d2462"><a href="#140056" label="[14:00:56]">&lt;gbrlwck&gt;</a></span><span class="message">and rn the machine is not under stress</span></div><div class="line" id="140112"><span class="nick" style="color:#6d2462"><a href="#140112" label="[14:01:12]">&lt;gbrlwck&gt;</a></span><span class="message">did it again: still the same time</span></div><div class="line" id="140121"><span class="nick" style="color:#6d2462"><a href="#140121" label="[14:01:21]">&lt;gbrlwck&gt;</a></span><span class="message">have you managed to eliminate the segfault issue?</span></div><div class="line" id="140425"><span class="nick" style="color:#234e69"><a href="#140425" label="[14:04:25]">&lt;stikonas[m]&gt;</a></span><span class="message">On qemu it takes a few seconds</span></div><div class="line" id="140436"><span class="nick" style="color:#234e69"><a href="#140436" label="[14:04:36]">&lt;stikonas[m]&gt;</a></span><span class="message">No, I haven't eliminated it</span></div><div class="line" id="140438"><span class="nick" style="color:#6d2462"><a href="#140438" label="[14:04:38]">&lt;gbrlwck&gt;</a></span><span class="message">time reports: (0major+2973minor)pagefaults</span></div><div class="line" id="140942"><span class="nick" style="color:#6d2462"><a href="#140942" label="[14:09:42]">&lt;gbrlwck&gt;</a></span><span class="message">4/4 runs succeeded, no segfaults on risc-v hardware</span></div><div class="line" id="141127"><span class="nick" style="color:#234e69"><a href="#141127" label="[14:11:27]">&lt;stikonas[m]&gt;</a></span><span class="message">OK, maybe do a few more</span></div><div class="line" id="141157"><span class="nick" style="color:#234e69"><a href="#141157" label="[14:11:57]">&lt;stikonas[m]&gt;</a></span><span class="message">4 is not that many with 50% success rate</span></div><div class="line" id="143013"><span class="nick" style="color:#389600"><a href="#143013" label="[14:30:13]">&lt;stikonas&gt;</a></span><span class="message">hmm, those crashes might actually be qemu specific</span></div><div class="line" id="143028"><span class="nick" style="color:#389600"><a href="#143028" label="[14:30:28]">&lt;stikonas&gt;</a></span><span class="message">I think qemu only reserves 16 MB of space of brk purposes</span></div><div class="line" id="143044"><span class="nick" style="color:#389600"><a href="#143044" label="[14:30:44]">&lt;stikonas&gt;</a></span><span class="message">or rather qemu-user specific</span></div><div class="line" id="143122"><span class="nick" style="color:#389600"><a href="#143122" label="[14:31:22]">&lt;stikonas&gt;</a></span><span class="message">and expects normal apps to use malloc with mmap</span></div><div class="line" id="143845"><span class="nick">***</span><span class="message notice">dekenevs is now known as kitzman</span></div><div class="line" id="143905"><span class="nick" style="color:#389600"><a href="#143905" label="[14:39:05]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: if you don't have any segfaults, you can try using mescc to build mes (although, right now only mes for x86 as mescc is not ported to riscv\)</span></div><div class="line" id="144108"><span class="nick" style="color:#6d2462"><a href="#144108" label="[14:41:08]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://termbin.com/tso8">https://termbin.com/tso8</a>  no segfaults, but i guess the speed/segfaults/pagefaults are related</span></div><div class="line" id="144420"><span class="nick" style="color:#389600"><a href="#144420" label="[14:44:20]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: possibly</span></div><div class="line" id="144442"><span class="nick" style="color:#389600"><a href="#144442" label="[14:44:42]">&lt;stikonas&gt;</a></span><span class="message">well, we just do brk syscall to reserve memory</span></div><div class="line" id="144448"><span class="nick" style="color:#389600"><a href="#144448" label="[14:44:48]">&lt;stikonas&gt;</a></span><span class="message">not sure what's needed to avoid pagefaults</span></div><div class="line" id="144516"><span class="nick" style="color:#389600"><a href="#144516" label="[14:45:16]">&lt;stikonas&gt;</a></span><span class="message">I guess that's expected if you use brk rather than mmap</span></div><div class="line" id="144950"><span class="nick" style="color:#6d2462"><a href="#144950" label="[14:49:50]">&lt;gbrlwck&gt;</a></span><span class="message">do we allocate tiny memory regions with sys_brk?</span></div><div class="line" id="145052"><span class="nick" style="color:#6d2462"><a href="#145052" label="[14:50:52]">&lt;gbrlwck&gt;</a></span><span class="message">i'm trying to compile a tiny &quot;return 42&quot; c program with mescc; it's been running for ages...  not sure if trying to compile mes with mescc is any fun at this stage</span></div><div class="line" id="145159"><span class="nick" style="color:#6d2462"><a href="#145159" label="[14:51:59]">&lt;gbrlwck&gt;</a></span><span class="message">btw i'm looking into the risc-v port of mescc but i'm not completely sure what things mean.  i.e. &quot;r2-&gt;r0&quot; means load value from register 2 into register 0?</span></div><div class="line" id="145720"><span class="nick" style="color:#389600"><a href="#145720" label="[14:57:20]">&lt;stikonas&gt;</a></span><span class="message">not necessrily tiny</span></div><div class="line" id="145722"><span class="nick" style="color:#389600"><a href="#145722" label="[14:57:22]">&lt;stikonas&gt;</a></span><span class="message">any reagions</span></div><div class="line" id="145744"><span class="nick" style="color:#389600"><a href="#145744" label="[14:57:44]">&lt;stikonas&gt;</a></span><span class="message">and I'm afraid I can't help with mescc</span></div><div class="line" id="145749"><span class="nick" style="color:#389600"><a href="#145749" label="[14:57:49]">&lt;stikonas&gt;</a></span><span class="message">I haven't look at it yet</span></div><div class="line" id="145751"><span class="nick" style="color:#389600"><a href="#145751" label="[14:57:51]">&lt;stikonas&gt;</a></span><span class="message">just ran it</span></div><div class="line" id="145751"><span class="nick" style="color:#6d2462"><a href="#145751" label="[14:57:51]">&lt;gbrlwck&gt;</a></span><span class="message">&quot; Using sys_brk directly for tiny allocations is terrible for performance&quot; <a rel="nofollow" href="https://stackoverflow.com/questions/48871138/what-is-the-aligment-requirements-for-sys-brk">https://stackoverflow.com/questions/48871138/what-is-the-aligment-requirements-for-sys-brk</a> </span></div><div class="line" id="145802"><span class="nick" style="color:#6d2462"><a href="#145802" label="[14:58:02]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: that's ok; i'll figure it out</span></div><div class="line" id="145813"><span class="nick" style="color:#389600"><a href="#145813" label="[14:58:13]">&lt;stikonas&gt;</a></span><span class="message">checkout out that branch in upstream mes</span></div><div class="line" id="145818"><span class="nick" style="color:#389600"><a href="#145818" label="[14:58:18]">&lt;stikonas&gt;</a></span><span class="message">it might have some helpful things</span></div><div class="line" id="145825"><span class="nick" style="color:#6d2462"><a href="#145825" label="[14:58:25]">&lt;gbrlwck&gt;</a></span><span class="message">but you do know about x86 M1, don't you?</span></div><div class="line" id="145827"><span class="nick" style="color:#389600"><a href="#145827" label="[14:58:27]">&lt;stikonas&gt;</a></span><span class="message">even if things are a bit differnt now</span></div><div class="line" id="145857"><span class="nick" style="color:#389600"><a href="#145857" label="[14:58:57]">&lt;stikonas&gt;</a></span><span class="message">well, I've more at  riscv M1</span></div><div class="line" id="145922"><span class="nick" style="color:#389600"><a href="#145922" label="[14:59:22]">&lt;stikonas&gt;</a></span><span class="message">some often I can figure out x86 M1 but maybe not always</span></div><div class="line" id="145935"><span class="nick" style="color:#6d2462"><a href="#145935" label="[14:59:35]">&lt;gbrlwck&gt;</a></span><span class="message">:)</span></div><div class="line" id="154635"><span class="nick" style="color:#389600"><a href="#154635" label="[15:46:35]">&lt;stikonas&gt;</a></span><span class="message">anyway, I guess try to get mes faster first, maybe profile where most of the time is spent. Otherwise indeed mescc will be too slow to be fun</span></div><div class="line" id="154810"><span class="nick" style="color:#6d2462"><a href="#154810" label="[15:48:10]">&lt;gbrlwck&gt;</a></span><span class="message">it's no hurry for me: i can run mescc with guile</span></div><div class="line" id="215233"><span class="nick" style="color:#389600"><a href="#215233" label="[21:52:33]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/pull/27">https://github.com/oriansj/M2-Planet/pull/27</a> </span></div><div class="line" id="215348"><span class="nick" style="color:#389600"><a href="#215348" label="[21:53:48]">&lt;stikonas&gt;</a></span><span class="message">I've ended up getting preprocessor variables working, it was actually fairly simple. So thing like #if __i386__ now work. No need to do #if defined(__i386__).</span></div><br /></div></body></html>