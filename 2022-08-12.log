<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-08-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002210"><span class="nick" style="color:#8dd3c7"><a href="#002210" label="[00:22:10]">&lt;oriansj&gt;</a></span><span class="message">theruran: stikonas is correct. All M0 files are valid M1 files as well and with care M0 can also build M1 files for a single architecture.</span></div><div class="line" id="002406"><span class="nick" style="color:#2e2a4a"><a href="#002406" label="[00:24:06]">&lt;stikonas&gt;</a></span><span class="message">in practive we are not careful enough to keep to uppercase hex immediates</span></div><div class="line" id="011104"><span class="nick" style="color:#6b8072"><a href="#011104" label="[01:11:04]">&lt;theruran&gt;</a></span><span class="message">I noticed prototype_lisp cannot read some deeply nested lists in ascension.scm</span></div><div class="line" id="011152"><span class="nick" style="color:#80b1d3"><a href="#011152" label="[01:11:52]">&lt;muurkha&gt;</a></span><span class="message">runs out of stack?</span></div><div class="line" id="011400"><span class="nick" style="color:#6b8072"><a href="#011400" label="[01:14:00]">&lt;theruran&gt;</a></span><span class="message">fails on line 193 of lisp_read.c and gdb tells me `p head`: $1 = (cell *) 0x0</span></div><div class="line" id="011418"><span class="nick" style="color:#6b8072"><a href="#011418" label="[01:14:18]">&lt;theruran&gt;</a></span><span class="message">if I enter get-index line by line it will work though</span></div><div class="line" id="011504"><span class="nick" style="color:#6b8072"><a href="#011504" label="[01:15:04]">&lt;theruran&gt;</a></span><span class="message">pretty weird!</span></div><div class="line" id="011726"><span class="nick" style="color:#80b1d3"><a href="#011726" label="[01:17:26]">&lt;muurkha&gt;</a></span><span class="message">huh!</span></div><div class="line" id="023033"><span class="nick" style="color:#8dd3c7"><a href="#023033" label="[02:30:33]">&lt;oriansj&gt;</a></span><span class="message">theruran: probably a bug in the garbage collection</span></div><div class="line" id="023300"><span class="nick" style="color:#6d2462"><a href="#023300" label="[02:33:00]">&lt;axxi&gt;</a></span><span class="message">greetings</span></div><div class="line" id="023355"><span class="nick" style="color:#6d2462"><a href="#023355" label="[02:33:55]">&lt;axxi&gt;</a></span><span class="message">struggling with, bootstrapping gcc-4.7.4, compile/linking with BUILD=arm-tcc HOST/TARGET=armv6-musleabihf</span></div><div class="line" id="023437"><span class="nick" style="color:#6d2462"><a href="#023437" label="[02:34:37]">&lt;axxi&gt;</a></span><span class="message">i remember boostrappable.org confirmed gcc-4.7.4 compiled/linked with x86_64-tcc</span></div><div class="line" id="023554"><span class="nick" style="color:#6d2462"><a href="#023554" label="[02:35:54]">&lt;axxi&gt;</a></span><span class="message">anyway, binutils-2.22 linked/compiled with arm-tcc already, musl-libc almost done, almost, and ~700 userspace builds</span></div><div class="line" id="023559"><span class="nick" style="color:#8dd3c7"><a href="#023559" label="[02:35:59]">&lt;oriansj&gt;</a></span><span class="message">axxi: have you looked at <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap">https://github.com/fosslinux/live-bootstrap</a>  yet?</span></div><div class="line" id="023721"><span class="nick" style="color:#6d2462"><a href="#023721" label="[02:37:21]">&lt;axxi&gt;</a></span><span class="message">not yet, moment</span></div><div class="line" id="023743"><span class="nick" style="color:#6d2462"><a href="#023743" label="[02:37:43]">&lt;axxi&gt;</a></span><span class="message">oriansj: does this project contain a confirmed gcc-4.7 bootstrapping with tcc compiler?</span></div><div class="line" id="023924"><span class="nick" style="color:#234e69"><a href="#023924" label="[02:39:24]">&lt;stikonas[m]&gt;</a></span><span class="message">axxi: not directly</span></div><div class="line" id="023938"><span class="nick" style="color:#234e69"><a href="#023938" label="[02:39:38]">&lt;stikonas[m]&gt;</a></span><span class="message">We go via GCC 4.0.4</span></div><div class="line" id="024020"><span class="nick" style="color:#234e69"><a href="#024020" label="[02:40:20]">&lt;stikonas[m]&gt;</a></span><span class="message">Tcc 0.9.27, GCC 4.0.4 then GCC 4.7.4</span></div><div class="line" id="024038"><span class="nick" style="color:#6d2462"><a href="#024038" label="[02:40:38]">&lt;axxi&gt;</a></span><span class="message">thanks for the hint stikonas[m]</span></div><div class="line" id="024115"><span class="nick" style="color:#6d2462"><a href="#024115" label="[02:41:15]">&lt;axxi&gt;</a></span><span class="message">could this route be confirmed for BUILD=arm-tcc HOST/TARGET=anyarm-hardfloat?</span></div><div class="line" id="024154"><span class="nick" style="color:#234e69"><a href="#024154" label="[02:41:54]">&lt;stikonas[m]&gt;</a></span><span class="message">Nobody tried arm here</span></div><div class="line" id="024217"><span class="nick" style="color:#234e69"><a href="#024217" label="[02:42:17]">&lt;stikonas[m]&gt;</a></span><span class="message">We can only bootstrap on x86</span></div><div class="line" id="024303"><span class="nick" style="color:#6d2462"><a href="#024303" label="[02:43:03]">&lt;axxi&gt;</a></span><span class="message">nothing wrong with that (x86 i mean), and there's some nasty side-effects with arm eabi linkage occasionally, for example</span></div><div class="line" id="024316"><span class="nick" style="color:#6d2462"><a href="#024316" label="[02:43:16]">&lt;axxi&gt;</a></span><span class="message">any reason for gcc-4.0.4?</span></div><div class="line" id="024340"><span class="nick" style="color:#6d2462"><a href="#024340" label="[02:43:40]">&lt;axxi&gt;</a></span><span class="message">i chose 4.7.4 because it was the last one known to remain c-only if desired</span></div><div class="line" id="024355"><span class="nick" style="color:#234e69"><a href="#024355" label="[02:43:55]">&lt;stikonas[m]&gt;</a></span><span class="message">Possibly had problems building dependencies of newer GCC with stable tcc</span></div><div class="line" id="024431"><span class="nick" style="color:#234e69"><a href="#024431" label="[02:44:31]">&lt;stikonas[m]&gt;</a></span><span class="message">4.7.4 needs gmp, mpc, mpfr, etc</span></div><div class="line" id="024459"><span class="nick" style="color:#6d2462"><a href="#024459" label="[02:44:59]">&lt;axxi&gt;</a></span><span class="message">ok. since i made some considerable progress with tcc on git-HEAD (jan-2022), gmp/mpc/mpfr are all compiled with arm-tcc already, and most of gcc-4.7.4 too</span></div><div class="line" id="024557"><span class="nick" style="color:#234e69"><a href="#024557" label="[02:45:57]">&lt;stikonas[m]&gt;</a></span><span class="message">Also live-bootstrap has no pregenerated files, so some extra requirements</span></div><div class="line" id="024711"><span class="nick" style="color:#6d2462"><a href="#024711" label="[02:47:11]">&lt;axxi&gt;</a></span><span class="message">i utilize gentoo-crossdev still, for the regular cross/toolchain maintenance, with some patching this is mostly stable for any cross-compile desired and supported with gcc-4.7.4</span></div><div class="line" id="024731"><span class="nick" style="color:#6d2462"><a href="#024731" label="[02:47:31]">&lt;axxi&gt;</a></span><span class="message">now working on tcc-integration</span></div><div class="line" id="024809"><span class="nick" style="color:#6d2462"><a href="#024809" label="[02:48:09]">&lt;axxi&gt;</a></span><span class="message">this is the type of trouble currently, when statically linking gcc-4.7 with arm-tcc: tcc: error: Unknown relocation type for got: 106</span></div><div class="line" id="025047"><span class="nick" style="color:#6d2462"><a href="#025047" label="[02:50:47]">&lt;axxi&gt;</a></span><span class="message">i'll try dynamic linking again</span></div><div class="line" id="025223"><span class="nick" style="color:#234e69"><a href="#025223" label="[02:52:23]">&lt;stikonas[m]&gt;</a></span><span class="message">I was never able to get dynamic linking working in lived bootstrap</span></div><div class="line" id="025231"><span class="nick" style="color:#234e69"><a href="#025231" label="[02:52:31]">&lt;stikonas[m]&gt;</a></span><span class="message">It's all static...</span></div><div class="line" id="025509"><span class="nick" style="color:#6d2462"><a href="#025509" label="[02:55:09]">&lt;axxi&gt;</a></span><span class="message">ideally, i can remove GNU-toolchain/gcc/binutils entirely, however i want to ensure then tcc (and possibly elfutils) can bootstrap the GNU-toolchain</span></div><div class="line" id="025549"><span class="nick" style="color:#6d2462"><a href="#025549" label="[02:55:49]">&lt;axxi&gt;</a></span><span class="message">meaning, i want the entire userspace and kernel pass compilation/linking without gcc/binutils</span></div><div class="line" id="025630"><span class="nick" style="color:#6d2462"><a href="#025630" label="[02:56:30]">&lt;axxi&gt;</a></span><span class="message">there's some nasty blockers remaining</span></div><div class="line" id="074225"><span class="nick" style="color:#6d2462"><a href="#074225" label="[07:42:25]">&lt;axxi&gt;</a></span><span class="message">host: CC=arm-tcc LD=arm-tcc AS=arm-tcc AR=ar &gt;&gt;&gt; sys-devel/gcc-4.7.4 merged.</span></div><div class="line" id="192117"><span class="nick" style="color:#6c3d55"><a href="#192117" label="[19:21:17]">&lt;aggi&gt;</a></span><span class="message">anyway, compiled an entire userspace (~600builds currently), with tcc compiler</span></div><div class="line" id="192153"><span class="nick" style="color:#6c3d55"><a href="#192153" label="[19:21:53]">&lt;aggi&gt;</a></span><span class="message">and some blockers are noteworthy, what required patching, and/or version-downgrade</span></div><div class="line" id="192222"><span class="nick" style="color:#6c3d55"><a href="#192222" label="[19:22:22]">&lt;aggi&gt;</a></span><span class="message">such as iproute2-5.x utilities, yet couldn't be compiled with tcc compiler...</span></div><div class="line" id="192338"><span class="nick" style="color:#6c3d55"><a href="#192338" label="[19:23:38]">&lt;aggi&gt;</a></span><span class="message">libffi(for python)... required as build-dependency for some... recent iputils (meson)</span></div><div class="line" id="192419"><span class="nick" style="color:#6c3d55"><a href="#192419" label="[19:24:19]">&lt;aggi&gt;</a></span><span class="message">net-dns/bind ... c11 threading didn't pass with tcc compiler or gcc-4.7</span></div><div class="line" id="192450"><span class="nick" style="color:#6c3d55"><a href="#192450" label="[19:24:50]">&lt;aggi&gt;</a></span><span class="message">as an alternative, busybox contains some userspace utilities for network-admins...</span></div><div class="line" id="192511"><span class="nick" style="color:#6c3d55"><a href="#192511" label="[19:25:11]">&lt;aggi&gt;</a></span><span class="message">busybox build-system freaks out over gcc-specific extensions entangled into the makefiles</span></div><div class="line" id="192524"><span class="nick" style="color:#6c3d55"><a href="#192524" label="[19:25:24]">&lt;aggi&gt;</a></span><span class="message">toybox is missing implementation for various ip utilities</span></div><div class="line" id="192702"><span class="nick" style="color:#6c3d55"><a href="#192702" label="[19:27:02]">&lt;aggi&gt;</a></span><span class="message">not sure what bootsrappable.org covers in it's entirety</span></div><div class="line" id="192725"><span class="nick" style="color:#6c3d55"><a href="#192725" label="[19:27:25]">&lt;aggi&gt;</a></span><span class="message">i try to maintain an entire _userspace_ compiled/linked with tcc _only_</span></div><div class="line" id="192802"><span class="nick" style="color:#6c3d55"><a href="#192802" label="[19:28:02]">&lt;aggi&gt;</a></span><span class="message">linux kernel is on todo still, for compilation with tcc... remember susematz tried and didn't finish</span></div><div class="line" id="195544"><span class="nick" style="color:#2e2a4a"><a href="#195544" label="[19:55:44]">&lt;stikonas&gt;</a></span><span class="message">aggi: well, there is not precise definition what bootstrappable covers</span></div><div class="line" id="195557"><span class="nick" style="color:#2e2a4a"><a href="#195557" label="[19:55:57]">&lt;stikonas&gt;</a></span><span class="message">there is a lot of low level stuff done here</span></div><div class="line" id="195613"><span class="nick" style="color:#2e2a4a"><a href="#195613" label="[19:56:13]">&lt;stikonas&gt;</a></span><span class="message">i.e. bootstrapping simple C compiler from hex</span></div><div class="line" id="195700"><span class="nick" style="color:#2e2a4a"><a href="#195700" label="[19:57:00]">&lt;stikonas&gt;</a></span><span class="message">then we also have bootstrap chains from there to GCC. But like I said yesterday, this only works on x86 (unlike lower level stuff which is often done for multiple platforms)</span></div><div class="line" id="195809"><span class="nick" style="color:#6c3d55"><a href="#195809" label="[19:58:09]">&lt;aggi&gt;</a></span><span class="message">stikonas: some issues with low-level parts are blocked with arm-tcc still</span></div><div class="line" id="195833"><span class="nick" style="color:#6c3d55"><a href="#195833" label="[19:58:33]">&lt;aggi&gt;</a></span><span class="message">unsupported GNU asm syntax and/or missing implementations with arm-tcc assembler</span></div><div class="line" id="195834"><span class="nick" style="color:#2e2a4a"><a href="#195834" label="[19:58:34]">&lt;stikonas&gt;</a></span><span class="message">aggi: by low level parts I mean much lower</span></div><div class="line" id="195858"><span class="nick" style="color:#6c3d55"><a href="#195858" label="[19:58:58]">&lt;aggi&gt;</a></span><span class="message">ok</span></div><div class="line" id="195904"><span class="nick" style="color:#2e2a4a"><a href="#195904" label="[19:59:04]">&lt;stikonas&gt;</a></span><span class="message">by the time we reach tcc, it's considered quite high level...</span></div><div class="line" id="195918"><span class="nick" style="color:#2e2a4a"><a href="#195918" label="[19:59:18]">&lt;stikonas&gt;</a></span><span class="message">since tcc is quite capable compiler</span></div><div class="line" id="195926"><span class="nick" style="color:#2e2a4a"><a href="#195926" label="[19:59:26]">&lt;stikonas&gt;</a></span><span class="message">but e.g. how do you build tcc in the first place?</span></div><div class="line" id="195944"><span class="nick" style="color:#6c3d55"><a href="#195944" label="[19:59:44]">&lt;aggi&gt;</a></span><span class="message">stikonas: with gcc-4.7</span></div><div class="line" id="195954"><span class="nick" style="color:#6c3d55"><a href="#195954" label="[19:59:54]">&lt;aggi&gt;</a></span><span class="message">i am well aware of what you mean...</span></div><div class="line" id="200013"><span class="nick" style="color:#6c3d55"><a href="#200013" label="[20:00:13]">&lt;aggi&gt;</a></span><span class="message">too back-tracked this, to GNU Guix and their bootstrapping for gcc-2.7...</span></div><div class="line" id="200027"><span class="nick" style="color:#2e2a4a"><a href="#200027" label="[20:00:27]">&lt;stikonas&gt;</a></span><span class="message">well, gcc 2.7 is not needed...</span></div><div class="line" id="200031"><span class="nick" style="color:#6c3d55"><a href="#200031" label="[20:00:31]">&lt;aggi&gt;</a></span><span class="message">and digged down deeper into, what i consider a &quot;supply chain&quot;, including hardware</span></div><div class="line" id="200056"><span class="nick" style="color:#2e2a4a"><a href="#200056" label="[20:00:56]">&lt;stikonas&gt;</a></span><span class="message">but we can do stuff like hex0-&gt;hex1-&gt;hex2-&gt;M0-&gt;M2-Planet-&gt;mes-&gt;mescc-&gt;tcc where hex0 is 256 byte binary</span></div><div class="line" id="200109"><span class="nick" style="color:#2e2a4a"><a href="#200109" label="[20:01:09]">&lt;stikonas&gt;</a></span><span class="message">and rest is source code</span></div><div class="line" id="200110"><span class="nick" style="color:#d9d9d9"><a href="#200110" label="[20:01:10]">&lt;jbowen&gt;</a></span><span class="message">To bake an apple pie from scratch, you must first invent the universe</span></div><div class="line" id="200111"><span class="nick" style="color:#6c3d55"><a href="#200111" label="[20:01:11]">&lt;aggi&gt;</a></span><span class="message">it's just, to my knowledge, the procedure to bootstrap gcc with guix was documented with gnu guix, including a rather big binary bundle with some scheme etc</span></div><div class="line" id="200153"><span class="nick" style="color:#6c3d55"><a href="#200153" label="[20:01:53]">&lt;aggi&gt;</a></span><span class="message">no clue, how to begin with a wozmon, and arrive at a compile such as tcc and a bootable system</span></div><div class="line" id="200204"><span class="nick" style="color:#2e2a4a"><a href="#200204" label="[20:02:04]">&lt;stikonas&gt;</a></span><span class="message">not everything is done...</span></div><div class="line" id="200215"><span class="nick" style="color:#2e2a4a"><a href="#200215" label="[20:02:15]">&lt;stikonas&gt;</a></span><span class="message">we still can't do it in many cases</span></div><div class="line" id="200216"><span class="nick" style="color:#6c3d55"><a href="#200216" label="[20:02:16]">&lt;aggi&gt;</a></span><span class="message">at the lower hardware level... i arrived at Gigatron TTL, as a side note only</span></div><div class="line" id="200320"><span class="nick" style="color:#2e2a4a"><a href="#200320" label="[20:03:20]">&lt;stikonas&gt;</a></span><span class="message">still it's impressive how much tcc can build...</span></div><div class="line" id="200337"><span class="nick" style="color:#2e2a4a"><a href="#200337" label="[20:03:37]">&lt;stikonas&gt;</a></span><span class="message">I saw it too when I worked on live-bootstrap</span></div><div class="line" id="200347"><span class="nick" style="color:#2e2a4a"><a href="#200347" label="[20:03:47]">&lt;stikonas&gt;</a></span><span class="message">though sometimes quite a bit of patching is needed</span></div><div class="line" id="200432"><span class="nick" style="color:#6c3d55"><a href="#200432" label="[20:04:32]">&lt;aggi&gt;</a></span><span class="message">it is too noteworthy, what fails with tcc, because i want the userspace parts to contain a self-hosting development environment</span></div><div class="line" id="200442"><span class="nick" style="color:#6c3d55"><a href="#200442" label="[20:04:42]">&lt;aggi&gt;</a></span><span class="message">which can compile everything...</span></div><div class="line" id="200507"><span class="nick" style="color:#6c3d55"><a href="#200507" label="[20:05:07]">&lt;aggi&gt;</a></span><span class="message">situation surrounding busybox and the networking utilities, is just one example among many others</span></div><div class="line" id="200518"><span class="nick" style="color:#2e2a4a"><a href="#200518" label="[20:05:18]">&lt;stikonas&gt;</a></span><span class="message">well, we had some trouble building musl initially</span></div><div class="line" id="200521"><span class="nick" style="color:#6c3d55"><a href="#200521" label="[20:05:21]">&lt;aggi&gt;</a></span><span class="message">too stumbled upon some very nasty dependency graphs with gnu-autotools/perl involved</span></div><div class="line" id="200553"><span class="nick" style="color:#6c3d55"><a href="#200553" label="[20:05:53]">&lt;aggi&gt;</a></span><span class="message">yep, with musl there is some minor blocker remaining too, on aarch32... which is some unsupported ASM syntax in crt*.S files</span></div><div class="line" id="200604"><span class="nick" style="color:#2e2a4a"><a href="#200604" label="[20:06:04]">&lt;stikonas&gt;</a></span><span class="message">gnu-autotools/perl is solvable, we managed to completely bootstrap autotools and perl</span></div><div class="line" id="200621"><span class="nick" style="color:#2e2a4a"><a href="#200621" label="[20:06:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, on x86 there was some unsupported asm syntax too</span></div><div class="line" id="200624"><span class="nick" style="color:#2e2a4a"><a href="#200624" label="[20:06:24]">&lt;stikonas&gt;</a></span><span class="message">had to patch it out a bit</span></div><div class="line" id="200630"><span class="nick" style="color:#6c3d55"><a href="#200630" label="[20:06:30]">&lt;aggi&gt;</a></span><span class="message">currently i am struggling with GNU gettext btw... which is requires as a bdep</span></div><div class="line" id="200703"><span class="nick" style="color:#2e2a4a"><a href="#200703" label="[20:07:03]">&lt;stikonas&gt;</a></span><span class="message">no, I haven't tried building gettext with tcc since we first built gcc 4.0.4 without gettext and then used gcc to build gettext</span></div><div class="line" id="200745"><span class="nick" style="color:#6c3d55"><a href="#200745" label="[20:07:45]">&lt;aggi&gt;</a></span><span class="message">elfutils is another problem (because i want a non-GNU toolchain without binutils/gcc being capable to bootstrap a gnu toolchain)</span></div><div class="line" id="200801"><span class="nick" style="color:#6c3d55"><a href="#200801" label="[20:08:01]">&lt;aggi&gt;</a></span><span class="message">elfutils are cluttered with unsupported C11 __thread extension</span></div><div class="line" id="200812"><span class="nick" style="color:#6c3d55"><a href="#200812" label="[20:08:12]">&lt;aggi&gt;</a></span><span class="message">it's a long list of such problems</span></div><div class="line" id="200901"><span class="nick" style="color:#6c3d55"><a href="#200901" label="[20:09:01]">&lt;aggi&gt;</a></span><span class="message">i maintain the repositories and dozens of patches with gentoo-tooling, to keep this reproducible with all logfiles</span></div><div class="line" id="200958"><span class="nick" style="color:#6c3d55"><a href="#200958" label="[20:09:58]">&lt;aggi&gt;</a></span><span class="message">python is another issue, in _userspace_</span></div><div class="line" id="201005"><span class="nick" style="color:#6c3d55"><a href="#201005" label="[20:10:05]">&lt;aggi&gt;</a></span><span class="message">i'll remove it</span></div><div class="line" id="201007"><span class="nick" style="color:#2e2a4a"><a href="#201007" label="[20:10:07]">&lt;stikonas&gt;</a></span><span class="message">well, at some point I would like to get portage working when starting with live-bootstrap</span></div><div class="line" id="201012"><span class="nick" style="color:#2e2a4a"><a href="#201012" label="[20:10:12]">&lt;stikonas&gt;</a></span><span class="message">but we don't have python there yet</span></div><div class="line" id="201019"><span class="nick" style="color:#2e2a4a"><a href="#201019" label="[20:10:19]">&lt;stikonas&gt;</a></span><span class="message">although fossy is working on adding it</span></div><div class="line" id="201103"><span class="nick" style="color:#6c3d55"><a href="#201103" label="[20:11:03]">&lt;aggi&gt;</a></span><span class="message">i try to avoid python, and will keep rolling with gentoo (gcc-4.7 c-only toolchain system profile for aarch32/aarch64/amd64) in parallel to a c-only tcc-toolchain profile</span></div><div class="line" id="201129"><span class="nick" style="color:#2e2a4a"><a href="#201129" label="[20:11:29]">&lt;stikonas&gt;</a></span><span class="message">well, you can't avoid python with gentoo...</span></div><div class="line" id="201130"><span class="nick" style="color:#6c3d55"><a href="#201130" label="[20:11:30]">&lt;aggi&gt;</a></span><span class="message">meaning, i got several automated system-integration paths</span></div><div class="line" id="201133"><span class="nick" style="color:#2e2a4a"><a href="#201133" label="[20:11:33]">&lt;stikonas&gt;</a></span><span class="message">you need it for portage</span></div><div class="line" id="201217"><span class="nick" style="color:#6c3d55"><a href="#201217" label="[20:12:17]">&lt;aggi&gt;</a></span><span class="message">with gentoo, i blocked at gcc-4.7/binutils-2.22 with a c-only toolchain system profile, and can compile/cross-compile/upgrade wherever i wish</span></div><div class="line" id="201246"><span class="nick" style="color:#d9d9d9"><a href="#201246" label="[20:12:46]">&lt;jbowen&gt;</a></span><span class="message">How frequently do you run into issues emerging packages with that setup?</span></div><div class="line" id="201311"><span class="nick" style="color:#6c3d55"><a href="#201311" label="[20:13:11]">&lt;aggi&gt;</a></span><span class="message">and, that's the idea, which is already implemented, i can emit a tcc-toolchain profile, with the tcc-toolchain i'll minify the package set down to what can be maintained _without_ gentoo</span></div><div class="line" id="201323"><span class="nick" style="color:#6c3d55"><a href="#201323" label="[20:13:23]">&lt;aggi&gt;</a></span><span class="message">jbowen: my overlay contains ~300 ebuilds currently</span></div><div class="line" id="201428"><span class="nick" style="color:#6c3d55"><a href="#201428" label="[20:14:28]">&lt;aggi&gt;</a></span><span class="message">in total the userspace (with which i retained most legacy c-only variants of various software) currently contains ~600 ebuilds</span></div><div class="line" id="201533"><span class="nick" style="color:#6c3d55"><a href="#201533" label="[20:15:33]">&lt;aggi&gt;</a></span><span class="message">anyway, arm-tcc can compile/link both gcc-4.7 and binutils-2.22 already, and 99% of all ebuilds</span></div><div class="line" id="201558"><span class="nick" style="color:#6c3d55"><a href="#201558" label="[20:15:58]">&lt;aggi&gt;</a></span><span class="message">what remained as blocked currently, is rather concerning nonetheless, although it's only handfull of builds</span></div><div class="line" id="201603"><span class="nick" style="color:#6c3d55"><a href="#201603" label="[20:16:03]">&lt;aggi&gt;</a></span><span class="message">including: linux kernel</span></div><div class="line" id="201759"><span class="nick" style="color:#6c3d55"><a href="#201759" label="[20:17:59]">&lt;aggi&gt;</a></span><span class="message">anyway, i'd like to coordinate those efforts with like-minded developers</span></div><div class="line" id="204603"><span class="nick" style="color:#6c3d55"><a href="#204603" label="[20:46:03]">&lt;aggi&gt;</a></span><span class="message">next one, gnu gettext (and intltool), are wrecked when compiling with tcc... not sure where this will hit me as a build-time dependency...</span></div><div class="line" id="204905"><span class="nick" style="color:#6c3d55"><a href="#204905" label="[20:49:05]">&lt;aggi&gt;</a></span><span class="message">it's a dozen of builds only which depend on gettext as bdep... sys-apps/shadow and app-crypt/pinentry for example, weird</span></div><div class="line" id="204922"><span class="nick" style="color:#6c3d55"><a href="#204922" label="[20:49:22]">&lt;aggi&gt;</a></span><span class="message">i'll try to fully remove gettext as build-dependency</span></div><div class="line" id="205010"><span class="nick" style="color:#6c3d55"><a href="#205010" label="[20:50:10]">&lt;aggi&gt;</a></span><span class="message">not sure, where dev-util/intltool will hit the build system</span></div><div class="line" id="205022"><span class="nick" style="color:#6c3d55"><a href="#205022" label="[20:50:22]">&lt;aggi&gt;</a></span><span class="message">anyway... GNU</span></div><div class="line" id="205040"><span class="nick" style="color:#6c3d55"><a href="#205040" label="[20:50:40]">&lt;aggi&gt;</a></span><span class="message">ideally, i can fully remove gcc and binutils</span></div><div class="line" id="205154"><span class="nick" style="color:#6c3d55"><a href="#205154" label="[20:51:54]">&lt;aggi&gt;</a></span><span class="message">the alternative route to bootstrapping of those which i can confirm: arm-tcc compiler/linker seemed to fully digest those toolchain parts, meaning it won't be locked out</span></div><div class="line" id="205214"><span class="nick" style="color:#6c3d55"><a href="#205214" label="[20:52:14]">&lt;aggi&gt;</a></span><span class="message">however, gettext and intltool could bite somewhere, not sure yet... i'll know soon enough</span></div><div class="line" id="211235"><span class="nick" style="color:#6c3d55"><a href="#211235" label="[21:12:35]">&lt;aggi&gt;</a></span><span class="message">another problem, which is hitting heavily concerning bootstrapping</span></div><div class="line" id="211300"><span class="nick" style="color:#6c3d55"><a href="#211300" label="[21:13:00]">&lt;aggi&gt;</a></span><span class="message">uboot loader on aarch32/64... which requires python-swig and a c++ compiler</span></div><div class="line" id="211328"><span class="nick" style="color:#6c3d55"><a href="#211328" label="[21:13:28]">&lt;aggi&gt;</a></span><span class="message">python itself is blocked against arm-tcc compiler because of libffi and incompatible ASM syntax</span></div><div class="line" id="211345"><span class="nick" style="color:#6c3d55"><a href="#211345" label="[21:13:45]">&lt;aggi&gt;</a></span><span class="message">python-swig is written in c++, which of cause cannot be digested by arm(64)-tcc</span></div><div class="line" id="211423"><span class="nick" style="color:#6c3d55"><a href="#211423" label="[21:14:23]">&lt;aggi&gt;</a></span><span class="message">however, the cross-compilation setup from-to aarch32/64 &lt;-&gt; amd64 is stabilized with gentoo crossdev and the c-only toolchain profile</span></div><div class="line" id="211457"><span class="nick" style="color:#6c3d55"><a href="#211457" label="[21:14:57]">&lt;aggi&gt;</a></span><span class="message">hence, i can use both amd64 and aarch32/64 as a development base</span></div><div class="line" id="211524"><span class="nick" style="color:#6c3d55"><a href="#211524" label="[21:15:24]">&lt;aggi&gt;</a></span><span class="message">the criteria are: c-only toolchain profile, no c++</span></div><div class="line" id="211543"><span class="nick" style="color:#6c3d55"><a href="#211543" label="[21:15:43]">&lt;aggi&gt;</a></span><span class="message">everything compiles/links with tcc compiler/linker and elfutils (no binutils, no gcc, no llvm)</span></div><div class="line" id="211634"><span class="nick" style="color:#6c3d55"><a href="#211634" label="[21:16:34]">&lt;aggi&gt;</a></span><span class="message">another criteria, the tcc-toolchain with a c-only system profile does _not_ lock out bootstrapping gcc/binutils (done already, except some potential quirks with gettext/intltool)</span></div><div class="line" id="235206"><span class="nick" style="color:#2e2a4a"><a href="#235206" label="[23:52:06]">&lt;stikonas&gt;</a></span><span class="message">argh, annoyingly hex2.efi that I wrote tends to stuck occasionally. It works maybe 80% of the time, so there is still some bug left</span></div><br /></div></body></html>