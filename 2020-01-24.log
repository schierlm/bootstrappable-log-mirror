<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-01-24.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003627"><span class="nick" style="color:#8dd3c7"><a href="#003627" label="[00:36:27]">&lt;oriansj&gt;</a></span><span class="message">looking at sloccount's output for mescc-tools-seed makes me happy</span></div><div class="line" id="094334"><span class="nick" style="color:#2e2a4a"><a href="#094334" label="[09:43:34]">&lt;jelle&gt;</a></span><span class="message">hmm I never uploaded mes to Arch</span></div><div class="line" id="094758"><span class="nick" style="color:#2e2a4a"><a href="#094758" label="[09:47:58]">&lt;jelle&gt;</a></span><span class="message">ah a configure failure might be related, I need to find some time to work on it again</span></div><div class="line" id="103741"><span class="nick" style="color:#6b8072"><a href="#103741" label="[10:37:41]">&lt;vagrantc&gt;</a></span><span class="message"> <a rel="nofollow" href="https://tracker.debian.org/news/1096297/accepted-mes-022-1-source-into-unstable/">https://tracker.debian.org/news/1096297/accepted-mes-022-1-source-into-unstable/</a> </span></div><div class="line" id="103807"><span class="nick" style="color:#6b8072"><a href="#103807" label="[10:38:07]">&lt;vagrantc&gt;</a></span><span class="message">my favorite line from the changelog: &quot;Drop all patches, applied upstream.&quot; :)</span></div><div class="line" id="105026"><span class="nick" style="color:#2e2a4a"><a href="#105026" label="[10:50:26]">&lt;jelle&gt;</a></span><span class="message">\o/</span></div><div class="line" id="105210"><span class="nick" style="color:#6b8072"><a href="#105210" label="[10:52:10]">&lt;vagrantc&gt;</a></span><span class="message">jelle: i think there were 32-bit vs. 64-bit issues ... mostly mes is still targeting 32-bit ... from what i recall</span></div><div class="line" id="105229"><span class="nick" style="color:#6b8072"><a href="#105229" label="[10:52:29]">&lt;vagrantc&gt;</a></span><span class="message">jelle: and arch has some cross-compiler for 32-bit or something?</span></div><div class="line" id="105303"><span class="nick" style="color:#2e2a4a"><a href="#105303" label="[10:53:03]">&lt;jelle&gt;</a></span><span class="message">vagrantc: this time I got a &quot;no limits.h&quot; found</span></div><div class="line" id="105402"><span class="nick" style="color:#80b1d3"><a href="#105402" label="[10:54:02]">&lt;janneke&gt;</a></span><span class="message">vagrantc: \o/</span></div><div class="line" id="142552"><span class="nick" style="color:#80b1d3"><a href="#142552" label="[14:25:52]">&lt;janneke&gt;</a></span><span class="message">jelle: i'm sure you have found and looked at ./configure --verbose</span></div><div class="line" id="165810"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="204132"><span class="nick">***</span><span class="message notice">opal is now known as wowaname</span></div><div class="line" id="204304"><span class="nick">***</span><span class="message notice">wowaname is now known as opal</span></div><div class="line" id="221244"><span class="nick" style="color:#8dd3c7"><a href="#221244" label="[22:12:44]">&lt;oriansj&gt;</a></span><span class="message">and the first round of fuzzing hex2 and blood-elf have found a couple segfaults that are now cleared and catm now will detect if it isn't able to create an output file or read an input file</span></div><div class="line" id="221254"><span class="nick" style="color:#8dd3c7"><a href="#221254" label="[22:12:54]">&lt;oriansj&gt;</a></span><span class="message">patches are up</span></div><div class="line" id="221336"><span class="nick" style="color:#8dd3c7"><a href="#221336" label="[22:13:36]">&lt;oriansj&gt;</a></span><span class="message">pder: I'll be reviewing your pull request shortly (I just noticed it, wish you mentioned it here sooner)</span></div><div class="line" id="222007"><span class="nick" style="color:#8dd3c7"><a href="#222007" label="[22:20:07]">&lt;oriansj&gt;</a></span><span class="message">pder: looks good, thank you ^_^</span></div><div class="line" id="222051"><span class="nick" style="color:#6d2462"><a href="#222051" label="[22:20:51]">&lt;pder&gt;</a></span><span class="message">thanks, I was just trying to keep mescc-tools-seed up to date with the various changes going on in the submodules.</span></div><div class="line" id="222349"><span class="nick" style="color:#8dd3c7"><a href="#222349" label="[22:23:49]">&lt;oriansj&gt;</a></span><span class="message">pder: and I need all the help I can get ^_^</span></div><div class="line" id="225409"><span class="nick" style="color:#6d2462"><a href="#225409" label="[22:54:09]">&lt;pder&gt;</a></span><span class="message">Great, well I just sent another pull request that is very similar.  This time it updates mescc-tools and M2-Planet submodules and fixes the build scripts</span></div><div class="line" id="225805"><span class="nick" style="color:#234e69"><a href="#225805" label="[22:58:05]">&lt;fossy&gt;</a></span><span class="message">hm better rebase</span></div><div class="line" id="230345"><span class="nick" style="color:#8dd3c7"><a href="#230345" label="[23:03:45]">&lt;oriansj&gt;</a></span><span class="message">fossy: ?</span></div><div class="line" id="230426"><span class="nick" style="color:#234e69"><a href="#230426" label="[23:04:26]">&lt;fossy&gt;</a></span><span class="message">my fork needs rebasing</span></div><div class="line" id="230434"><span class="nick" style="color:#234e69"><a href="#230434" label="[23:04:34]">&lt;fossy&gt;</a></span><span class="message">on your upstream</span></div><div class="line" id="230549"><span class="nick" style="color:#8dd3c7"><a href="#230549" label="[23:05:49]">&lt;oriansj&gt;</a></span><span class="message">pder: merged</span></div><div class="line" id="230743"><span class="nick" style="color:#8dd3c7"><a href="#230743" label="[23:07:43]">&lt;oriansj&gt;</a></span><span class="message">fossy: actually you might be able to merge those changes</span></div><div class="line" id="230831"><span class="nick" style="color:#8dd3c7"><a href="#230831" label="[23:08:31]">&lt;oriansj&gt;</a></span><span class="message">although you don't need to #include .c files to get gcc to compile kaem (if you look at the makefile)</span></div><div class="line" id="230950"><span class="nick" style="color:#8dd3c7"><a href="#230950" label="[23:09:50]">&lt;oriansj&gt;</a></span><span class="message">(as #including function implementations generally is a very very bad idea)</span></div><div class="line" id="231035"><span class="nick" style="color:#234e69"><a href="#231035" label="[23:10:35]">&lt;fossy&gt;</a></span><span class="message">oh?</span></div><div class="line" id="231045"><span class="nick" style="color:#234e69"><a href="#231045" label="[23:10:45]">&lt;fossy&gt;</a></span><span class="message">Why is that a bad idea</span></div><div class="line" id="231110"><span class="nick" style="color:#8dd3c7"><a href="#231110" label="[23:11:10]">&lt;oriansj&gt;</a></span><span class="message">what happens inside of a C compiler that has multiple files that #include a .c?</span></div><div class="line" id="231148"><span class="nick" style="color:#8dd3c7"><a href="#231148" label="[23:11:48]">&lt;oriansj&gt;</a></span><span class="message">well macro expansion simply copies in that code; now you have multiple functions with globals with the exact same names</span></div><div class="line" id="231204"><span class="nick" style="color:#234e69"><a href="#231204" label="[23:12:04]">&lt;fossy&gt;</a></span><span class="message">Oh true</span></div><div class="line" id="231256"><span class="nick" style="color:#8dd3c7"><a href="#231256" label="[23:12:56]">&lt;oriansj&gt;</a></span><span class="message">now if that compiler complies exactly with the C standard, it should be throwing a big red flag saying &quot;Nope can't compile this crap&quot;</span></div><div class="line" id="231332"><span class="nick" style="color:#8dd3c7"><a href="#231332" label="[23:13:32]">&lt;oriansj&gt;</a></span><span class="message">The problem is that Compilers like GCC and Clang do duplicate code elimination optimizations; that hide that error</span></div><div class="line" id="231447"><span class="nick" style="color:#8dd3c7"><a href="#231447" label="[23:14:47]">&lt;oriansj&gt;</a></span><span class="message">Hence traditionally only .h files are EVER #include'd and it was assumed only function prototypes and globals are put in them</span></div><div class="line" id="231842"><span class="nick" style="color:#8dd3c7"><a href="#231842" label="[23:18:42]">&lt;oriansj&gt;</a></span><span class="message">also note on limited machines, people traditionally did cc -c source.c -o source.o for all of the files being used and just cc *.o -o program to combine the result into a production binary.</span></div><div class="line" id="232120"><span class="nick" style="color:#8dd3c7"><a href="#232120" label="[23:21:20]">&lt;oriansj&gt;</a></span><span class="message">This was to reduce compile time to just the source files that changed and if you #include'd actual functions, it would have to recompile them; even if they didn't change. Where as if you just #include'd a .h which just had prototypes; no wasted work would be performed.</span></div><div class="line" id="232317"><span class="nick" style="color:#8dd3c7"><a href="#232317" label="[23:23:17]">&lt;oriansj&gt;</a></span><span class="message">make of course is able to figure out if a source file is newer than the .o that corresponds with it and recompile that source file; significantly reducing the compute requirements to compile and test an in development application.</span></div><div class="line" id="232503"><span class="nick" style="color:#8dd3c7"><a href="#232503" label="[23:25:03]">&lt;oriansj&gt;</a></span><span class="message">Those old guys, despite not having anything to learn from but their own mistakes, were really bright and minus a handful of bad trade-offs were generally headed in the right direction.</span></div><div class="line" id="233703"><span class="nick" style="color:#8dd3c7"><a href="#233703" label="[23:37:03]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: if one wanted to get started on static code checking for mescc-tools, M2-Planet or mes-m2; splint is readily available for checking C files. Running something like: splint functions/match.c functions/in_set.c functions/numerate_number.c functions/file_print.c functions/number_pack.c functions/string.c functions/require.c cc_reader.c cc_strings.c cc_types.c cc_core.c cc.c cc.h gcc_req.h | less would point out alot of existing</span></div><div class="line" id="233703"><span class="nick" style="color:#8dd3c7"><a href="#233703" label="[23:37:03]">&lt;oriansj&gt;</a></span><span class="message">flaws in M2-Planet's implementation</span></div><br /></div></body></html>