<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-03-02.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="111954"><span class="nick" style="color:#389600"><a href="#111954" label="[11:19:54]">&lt;webczat&gt;</a></span><span class="message">hi, I can officially say I am at gcc level.</span></div><div class="line" id="143747"><span class="nick" style="color:#8dd3c7"><a href="#143747" label="[14:37:47]">&lt;oriansj&gt;</a></span><span class="message">webczat: well the rest should be relatively simple (unless you run into programs which require specific versions of gcc to work)</span></div><div class="line" id="143820"><span class="nick" style="color:#389600"><a href="#143820" label="[14:38:20]">&lt;webczat&gt;</a></span><span class="message">oriansj: i am used to doing things starting from this stage.</span></div><div class="line" id="143905"><span class="nick" style="color:#389600"><a href="#143905" label="[14:39:05]">&lt;webczat&gt;</a></span><span class="message">except one thing, I have to jump from a 32 bit toolchain to a 64 bit one. although I did build few cross toolchains in the past</span></div><div class="line" id="143956"><span class="nick" style="color:#389600"><a href="#143956" label="[14:39:56]">&lt;webczat&gt;</a></span><span class="message">now i am trying to jump to newest available gcc on 32 bits and possibly recompile the rest of toolchain with itself.</span></div><div class="line" id="144035"><span class="nick" style="color:#389600"><a href="#144035" label="[14:40:35]">&lt;webczat&gt;</a></span><span class="message">and jumping from musl to glibc. later. but that I've also done once</span></div><div class="line" id="144114"><span class="nick" style="color:#389600"><a href="#144114" label="[14:41:14]">&lt;webczat&gt;</a></span><span class="message">you can't compile gcc-13 with gcc-4.7. you need to jump through something else, like gcc-9.5 in my case</span></div><div class="line" id="150511"><span class="nick" style="color:#2e2a4a"><a href="#150511" label="[15:05:11]">&lt;stikonas&gt;</a></span><span class="message">gcc 10 is the last version buildable with gcc 4</span></div><div class="line" id="150601"><span class="nick" style="color:#389600"><a href="#150601" label="[15:06:01]">&lt;webczat&gt;</a></span><span class="message">stikonas: good to know. had to experiment and assumed i don't necessarily need the newest buildable version to build gcc13</span></div><div class="line" id="150619"><span class="nick" style="color:#2e2a4a"><a href="#150619" label="[15:06:19]">&lt;stikonas&gt;</a></span><span class="message">gcc 9 should work too</span></div><div class="line" id="150629"><span class="nick" style="color:#2e2a4a"><a href="#150629" label="[15:06:29]">&lt;stikonas&gt;</a></span><span class="message">even something like gcc 7 should work I think</span></div><div class="line" id="150634"><span class="nick" style="color:#389600"><a href="#150634" label="[15:06:34]">&lt;webczat&gt;</a></span><span class="message">but i lost some time building gcc 4.5 because i forgot which version I should build first. and because gcc 4.5 could not do -std=c++11... uh</span></div><div class="line" id="150647"><span class="nick" style="color:#389600"><a href="#150647" label="[15:06:47]">&lt;webczat&gt;</a></span><span class="message">already building 13.2</span></div><div class="line" id="150846"><span class="nick" style="color:#6b8072"><a href="#150846" label="[15:08:46]">&lt;bauen1&gt;</a></span><span class="message">webczat: congratulations on reaching gcc :)</span></div><div class="line" id="150954"><span class="nick" style="color:#389600"><a href="#150954" label="[15:09:54]">&lt;webczat&gt;</a></span><span class="message">I've done this without instructions. but probably had easier job than some being able to use bootstrap scripts, as I started with kernel+busybox</span></div><div class="line" id="151003"><span class="nick" style="color:#389600"><a href="#151003" label="[15:10:03]">&lt;webczat&gt;</a></span><span class="message">i mean with minimal instructions</span></div><div class="line" id="180823"><span class="nick" style="color:#389600"><a href="#180823" label="[18:08:23]">&lt;webczat&gt;</a></span><span class="message">actually for me it's interesting how much busybox became usable over... a decade or more. I remember long tim=e ago you couldn't run configure with it in most cases for example because awk was missing some features</span></div><div class="line" id="182031"><span class="nick" style="color:#80b1d3"><a href="#182031" label="[18:20:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; webczat: congratulations on getting to gcc. Are you planning on publishing your script online somewhere? Presumably you are doing something like stage-0-posix -&gt; mescc -&gt; tcc-mob -&gt; musl -&gt; gcc-4.7.4 ?</span></div><div class="line" id="182100"><span class="nick" style="color:#389600"><a href="#182100" label="[18:21:00]">&lt;webczat&gt;</a></span><span class="message">why do you think I have a script?</span></div><div class="line" id="182119"><span class="nick" style="color:#389600"><a href="#182119" label="[18:21:19]">&lt;webczat&gt;</a></span><span class="message">yes i am doing exactly what you described. of course bootstrappable tcc is also involved</span></div><div class="line" id="182209"><span class="nick" style="color:#8dd3c7"><a href="#182209" label="[18:22:09]">&lt;oriansj&gt;</a></span><span class="message">looks like the guix rustc bootstrap to rustc-1.60.0 got refined and the steps can complete in just 2 days;</span></div><div class="line" id="182225"><span class="nick" style="color:#8dd3c7"><a href="#182225" label="[18:22:25]">&lt;oriansj&gt;</a></span><span class="message">(on an x200 with 8GB of RAM)</span></div><div class="line" id="182256"><span class="nick" style="color:#80b1d3"><a href="#182256" label="[18:22:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; webczat: I assumed the process was automated (eg your busybox ran a script that built all the way up to gcc)</span></div><div class="line" id="182329"><span class="nick" style="color:#389600"><a href="#182329" label="[18:23:29]">&lt;webczat&gt;</a></span><span class="message">no. my process is completely manual</span></div><div class="line" id="182416"><span class="nick" style="color:#80b1d3"><a href="#182416" label="[18:24:16]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; fair enough, though presumably that could be converted into a script?</span></div><div class="line" id="182535"><span class="nick" style="color:#389600"><a href="#182535" label="[18:25:35]">&lt;webczat&gt;</a></span><span class="message">i don't see anything in there that wouldn't be scriptable.</span></div><div class="line" id="182541"><span class="nick" style="color:#80b1d3"><a href="#182541" label="[18:25:41]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; oriansj: what's an x200? A core 2 duo based thinkpad?</span></div><div class="line" id="182620"><span class="nick" style="color:#389600"><a href="#182620" label="[18:26:20]">&lt;webczat&gt;</a></span><span class="message">because the busybox is built insside of the kernel as initramfs, the script also could. although this would require better hardware support/ability to load stuff/pack sources inside whatever.</span></div><div class="line" id="182627"><span class="nick" style="color:#389600"><a href="#182627" label="[18:26:27]">&lt;webczat&gt;</a></span><span class="message">oriansj: 2 days... oh my god</span></div><div class="line" id="182635"><span class="nick" style="color:#389600"><a href="#182635" label="[18:26:35]">&lt;webczat&gt;</a></span><span class="message">if that's an improvement...</span></div><div class="line" id="182648"><span class="nick" style="color:#389600"><a href="#182648" label="[18:26:48]">&lt;webczat&gt;</a></span><span class="message">but I've never tried to compile or use rust so not sure how long it goes to compile a single version\</span></div><div class="line" id="182702"><span class="nick" style="color:#8dd3c7"><a href="#182702" label="[18:27:02]">&lt;oriansj&gt;</a></span><span class="message">cosinusoidally: correct</span></div><div class="line" id="182721"><span class="nick" style="color:#8dd3c7"><a href="#182721" label="[18:27:21]">&lt;oriansj&gt;</a></span><span class="message">webczat: the old build process took about 2 weeks.</span></div><div class="line" id="182722"><span class="nick" style="color:#80b1d3"><a href="#182722" label="[18:27:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; I do wonder with rustc why they need to use a 6 week old version to compile the current version. If they stuck to a sensible subset of rust in rustc then they could jump years worth of versions in a single step.</span></div><div class="line" id="182753"><span class="nick" style="color:#389600"><a href="#182753" label="[18:27:53]">&lt;webczat&gt;</a></span><span class="message">oriansj: wow</span></div><div class="line" id="182821"><span class="nick" style="color:#8dd3c7"><a href="#182821" label="[18:28:21]">&lt;oriansj&gt;</a></span><span class="message">cosinusoidally: the reason is simple, people want to use the feature they created to make their own work easier now.</span></div><div class="line" id="182956"><span class="nick" style="color:#80b1d3"><a href="#182956" label="[18:29:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; oriansj: yep, but a 6 week old feature is taking it a bit to the extreme :)</span></div><div class="line" id="182956"><span class="nick" style="color:#8dd3c7"><a href="#182956" label="[18:29:56]">&lt;oriansj&gt;</a></span><span class="message">webczat: bootstrap path optimization is a very complex problem and the optimal path might be surprising.</span></div><div class="line" id="183040"><span class="nick" style="color:#389600"><a href="#183040" label="[18:30:40]">&lt;webczat&gt;</a></span><span class="message">i've heard about building rust with older rust etc, but didn't expect that</span></div><div class="line" id="183115"><span class="nick" style="color:#8dd3c7"><a href="#183115" label="[18:31:15]">&lt;oriansj&gt;</a></span><span class="message">Well Gnu Bison implemented a new feature and depended upon that feature in that exact same commit.</span></div><div class="line" id="183209"><span class="nick" style="color:#8dd3c7"><a href="#183209" label="[18:32:09]">&lt;oriansj&gt;</a></span><span class="message">and the fact they were not immediately screamed at, kind of shows the low value many distros put on bootstrapping.</span></div><div class="line" id="183422"><span class="nick" style="color:#80b1d3"><a href="#183422" label="[18:34:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Hopefully gcc doesn't go the same direction, but I think they have started down that path with using more and more C++ features.</span></div><div class="line" id="183451"><span class="nick" style="color:#80b1d3"><a href="#183451" label="[18:34:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Though at least gcc releases are less frequent</span></div><div class="line" id="183535"><span class="nick" style="color:#80b1d3"><a href="#183535" label="[18:35:35]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; or maybe gcc will grow a hard rust dependency :P</span></div><div class="line" id="183611"><span class="nick" style="color:#389600"><a href="#183611" label="[18:36:11]">&lt;webczat&gt;</a></span><span class="message">they will definitely rewrite to rust :P</span></div><div class="line" id="183635"><span class="nick" style="color:#389600"><a href="#183635" label="[18:36:35]">&lt;webczat&gt;</a></span><span class="message">legitimately curious if it's possible to bootstrap an ada compiler. not like I'd need it</span></div><div class="line" id="183704"><span class="nick" style="color:#389600"><a href="#183704" label="[18:37:04]">&lt;webczat&gt;</a></span><span class="message">but it's probably the only compiler in gcc that requires an existing compiler different than c/c++.</span></div><div class="line" id="184204"><span class="nick" style="color:#80b1d3"><a href="#184204" label="[18:42:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; The linux kernel could end up actually growing a hard rust dependency <a rel="nofollow" href="https://www.kernel.org/doc/html/next/rust/index.html">https://www.kernel.org/doc/html/next/rust/index.html</a>  . Hopefully by that point <a rel="nofollow" href="https://rust-gcc.github.io/">https://rust-gcc.github.io/</a>  will be mature. If not that will add a couple of days to a live-bootstrap run.</span></div><div class="line" id="184819"><span class="nick" style="color:#8dd3c7"><a href="#184819" label="[18:48:19]">&lt;oriansj&gt;</a></span><span class="message">webczat: well the Ada bootstrap path has not been built yet</span></div><div class="line" id="184837"><span class="nick" style="color:#389600"><a href="#184837" label="[18:48:37]">&lt;webczat&gt;</a></span><span class="message">oriansj: curious if possible</span></div><div class="line" id="184850"><span class="nick" style="color:#8dd3c7"><a href="#184850" label="[18:48:50]">&lt;oriansj&gt;</a></span><span class="message">in theory there is one with GCC but the exact details has not been done yet.</span></div><div class="line" id="185049"><span class="nick" style="color:#389600"><a href="#185049" label="[18:50:49]">&lt;webczat&gt;</a></span><span class="message">oriansj: one with gcc... thought with gcc there is none, unless the first version of gnad wasn't in ada</span></div><div class="line" id="185135"><span class="nick" style="color:#389600"><a href="#185135" label="[18:51:35]">&lt;webczat&gt;</a></span><span class="message">curious who uses this language btw. I'm myself playing mostly with c# and have never touched it.</span></div><div class="line" id="185215"><span class="nick" style="color:#8dd3c7"><a href="#185215" label="[18:52:15]">&lt;oriansj&gt;</a></span><span class="message">well there is the Ada/Ed translator/interpreter which is written in C and what was used to bootstrap the first Ada Compiler in GCC</span></div><div class="line" id="185238"><span class="nick" style="color:#8dd3c7"><a href="#185238" label="[18:52:38]">&lt;oriansj&gt;</a></span><span class="message">Ada is primary of use for military software</span></div><div class="line" id="185251"><span class="nick" style="color:#8dd3c7"><a href="#185251" label="[18:52:51]">&lt;oriansj&gt;</a></span><span class="message">secondary is spacecraft</span></div><div class="line" id="185338"><span class="nick" style="color:#389600"><a href="#185338" label="[18:53:38]">&lt;webczat&gt;</a></span><span class="message">mh</span></div><div class="line" id="185353"><span class="nick" style="color:#389600"><a href="#185353" label="[18:53:53]">&lt;webczat&gt;</a></span><span class="message">curious what is so special in it. i know it has very strong parallel library.</span></div><div class="line" id="185412"><span class="nick" style="color:#8dd3c7"><a href="#185412" label="[18:54:12]">&lt;oriansj&gt;</a></span><span class="message">So there is either some combination or a finite amount of work required to connect that last bit and then everything else is just a straight bootstrap chain.</span></div><div class="line" id="185449"><span class="nick" style="color:#8dd3c7"><a href="#185449" label="[18:54:49]">&lt;oriansj&gt;</a></span><span class="message">webczat: it just has proper data types that by default do the correct thing.</span></div><div class="line" id="185532"><span class="nick" style="color:#389600"><a href="#185532" label="[18:55:32]">&lt;webczat&gt;</a></span><span class="message">i've heard it has complex type system, but have never tried to learn it</span></div><div class="line" id="191130"><span class="nick" style="color:#8dd3c7"><a href="#191130" label="[19:11:30]">&lt;oriansj&gt;</a></span><span class="message">webczat: one doesn't need a complex type system, only a handful of sane types that do reasonable things when it comes to saturation and wrap around</span></div><div class="line" id="191211"><span class="nick" style="color:#389600"><a href="#191211" label="[19:12:11]">&lt;webczat&gt;</a></span><span class="message">no integer wrapping in ada?</span></div><div class="line" id="191255"><span class="nick" style="color:#8dd3c7"><a href="#191255" label="[19:12:55]">&lt;oriansj&gt;</a></span><span class="message">webczat: you specify what behavior you expect</span></div><div class="line" id="191320"><span class="nick" style="color:#8dd3c7"><a href="#191320" label="[19:13:20]">&lt;oriansj&gt;</a></span><span class="message">throw an exception or saturate or wrap on overflow.</span></div><div class="line" id="191322"><span class="nick" style="color:#389600"><a href="#191322" label="[19:13:22]">&lt;webczat&gt;</a></span><span class="message">tbh because of a language barrier I am not sure what a saturation is in this context</span></div><div class="line" id="191340"><span class="nick" style="color:#8dd3c7"><a href="#191340" label="[19:13:40]">&lt;oriansj&gt;</a></span><span class="message">int_max + 1 == int_max</span></div><div class="line" id="191350"><span class="nick" style="color:#389600"><a href="#191350" label="[19:13:50]">&lt;webczat&gt;</a></span><span class="message">as for overflow checking i know only one language that can optionally do this for integers and it's c#. most others don't care or have unlimited size integers/autoconversions</span></div><div class="line" id="191408"><span class="nick" style="color:#389600"><a href="#191408" label="[19:14:08]">&lt;webczat&gt;</a></span><span class="message">wait what?</span></div><div class="line" id="191506"><span class="nick" style="color:#8dd3c7"><a href="#191506" label="[19:15:06]">&lt;oriansj&gt;</a></span><span class="message">imagine uint8_t 0-&gt;255; 250 + 20 == 255 ; (that is saturation math)</span></div><div class="line" id="191543"><span class="nick" style="color:#8dd3c7"><a href="#191543" label="[19:15:43]">&lt;oriansj&gt;</a></span><span class="message">on overflow, it is reduced to the max value.</span></div><div class="line" id="191549"><span class="nick" style="color:#389600"><a href="#191549" label="[19:15:49]">&lt;webczat&gt;</a></span><span class="message">oriansj: i understood you. what I meant is I've never heard about this specific thing. it was always either wraparound or an error</span></div><div class="line" id="191640"><span class="nick" style="color:#389600"><a href="#191640" label="[19:16:40]">&lt;webczat&gt;</a></span><span class="message">actually few years ago .net got some math utilities for example methods with names like CreateSaturating and I was wondering what they do, but it was the first time.</span></div><div class="line" id="191642"><span class="nick" style="color:#8dd3c7"><a href="#191642" label="[19:16:42]">&lt;oriansj&gt;</a></span><span class="message">well some CPUs support saturation integer instructions (some even have tagged integer instructions)</span></div><div class="line" id="192056"><span class="nick" style="color:#389600"><a href="#192056" label="[19:20:56]">&lt;webczat&gt;</a></span><span class="message">oriansj: cpus? maybe. i know nothing about what cpus support. they can definitely do many weird things i've never heard about or tried related to all the sse/whatever family of things</span></div><div class="line" id="192420"><span class="nick" style="color:#80b1d3"><a href="#192420" label="[19:24:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Think about compositing pixels. In that case you want it to saturate to white rather than wrap around.</span></div><div class="line" id="192508"><span class="nick" style="color:#389600"><a href="#192508" label="[19:25:08]">&lt;webczat&gt;</a></span><span class="message">fair</span></div><div class="line" id="192521"><span class="nick" style="color:#389600"><a href="#192521" label="[19:25:21]">&lt;webczat&gt;</a></span><span class="message">i just haven't heard that term or about language level support for that</span></div><div class="line" id="193021"><span class="nick" style="color:#8dd3c7"><a href="#193021" label="[19:30:21]">&lt;oriansj&gt;</a></span><span class="message">well most languages are not well thought out when it comes to primitives</span></div><div class="line" id="193234"><span class="nick" style="color:#8dd3c7"><a href="#193234" label="[19:32:34]">&lt;oriansj&gt;</a></span><span class="message">for example why not allow the programmer to explicitly state bit and byte endianness and skip having to include logic for swapping endianness.</span></div><div class="line" id="193406"><span class="nick" style="color:#8dd3c7"><a href="#193406" label="[19:34:06]">&lt;oriansj&gt;</a></span><span class="message">why do bit operations when one can define types down to the bit in a record (also called struct) type?</span></div><div class="line" id="193724"><span class="nick" style="color:#8dd3c7"><a href="#193724" label="[19:37:24]">&lt;oriansj&gt;</a></span><span class="message">suddenly the compiler can optimize a great deal of things safely and your code gets cleaner.</span></div><div class="line" id="193849"><span class="nick" style="color:#389600"><a href="#193849" label="[19:38:49]">&lt;webczat&gt;</a></span><span class="message">oriansj: not sure. aren't processors generally byte oriented and that's kinda why? although at least c/cpp does have bit fields, and other languages I worked with don't.</span></div><div class="line" id="193955"><span class="nick" style="color:#8dd3c7"><a href="#193955" label="[19:39:55]">&lt;oriansj&gt;</a></span><span class="message">processors are VLIW machines these days; hidden behind a decoder.</span></div><div class="line" id="194533"><span class="nick" style="color:#389600"><a href="#194533" label="[19:45:33]">&lt;webczat&gt;</a></span><span class="message">idk what's that</span></div><div class="line" id="195645"><span class="nick" style="color:#80b1d3"><a href="#195645" label="[19:56:45]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; cosinusoidally: I thought rust dependency was soft, just some drivers</span></div><div class="line" id="195858"><span class="nick" style="color:#8dd3c7"><a href="#195858" label="[19:58:58]">&lt;oriansj&gt;</a></span><span class="message">webczat: Very Large Instruction Words; effectively 2-8 instructions bundled together and executed in a single clock cycle.</span></div><div class="line" id="195926"><span class="nick" style="color:#8dd3c7"><a href="#195926" label="[19:59:26]">&lt;oriansj&gt;</a></span><span class="message">bits and bytes are just subsets of words being operated upon.</span></div><div class="line" id="195956"><span class="nick" style="color:#389600"><a href="#195956" label="[19:59:56]">&lt;webczat&gt;</a></span><span class="message">still, it's not bit by bit</span></div><div class="line" id="200025"><span class="nick" style="color:#8dd3c7"><a href="#200025" label="[20:00:25]">&lt;oriansj&gt;</a></span><span class="message">ever since Pentium Pro, CPU architecture and instruction set have largely been decoupled (except where optimizations are possible)</span></div><div class="line" id="200046"><span class="nick" style="color:#80b1d3"><a href="#200046" label="[20:00:46]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Andrius Štikonas: I don't know what the long term plans are. It's soft for now, but it could hypothetically become a hard dependency (eg what if a driver for some popular hardware was only available as a rust version)</span></div><div class="line" id="200101"><span class="nick" style="color:#2e2a4a"><a href="#200101" label="[20:01:01]">&lt;stikonas&gt;</a></span><span class="message">probably depends on support in GCC...</span></div><div class="line" id="200123"><span class="nick" style="color:#2e2a4a"><a href="#200123" label="[20:01:23]">&lt;stikonas&gt;</a></span><span class="message">also for bootstrapping we are unlikely to need even popular driver</span></div><div class="line" id="200132"><span class="nick" style="color:#2e2a4a"><a href="#200132" label="[20:01:32]">&lt;stikonas&gt;</a></span><span class="message">unless it's one of the very few critical drivers</span></div><div class="line" id="200138"><span class="nick" style="color:#8dd3c7"><a href="#200138" label="[20:01:38]">&lt;oriansj&gt;</a></span><span class="message">cosinusoidally: libreboot and coreboot have a hard dependency on Ada (which we have not bootstrapped yet)</span></div><div class="line" id="200139"><span class="nick" style="color:#2e2a4a"><a href="#200139" label="[20:01:39]">&lt;stikonas&gt;</a></span><span class="message">i.e. storage...</span></div><div class="line" id="200206"><span class="nick" style="color:#8dd3c7"><a href="#200206" label="[20:02:06]">&lt;oriansj&gt;</a></span><span class="message">(atleast with rust we have a working bootstrapping path)</span></div><div class="line" id="200248"><span class="nick" style="color:#2e2a4a"><a href="#200248" label="[20:02:48]">&lt;stikonas&gt;</a></span><span class="message">and 2 days is basically maximum</span></div><div class="line" id="200257"><span class="nick" style="color:#2e2a4a"><a href="#200257" label="[20:02:57]">&lt;stikonas&gt;</a></span><span class="message">we are now not too far from the next mrustc release</span></div><div class="line" id="200302"><span class="nick" style="color:#2e2a4a"><a href="#200302" label="[20:03:02]">&lt;stikonas&gt;</a></span><span class="message">which will then target 1.74</span></div><div class="line" id="200321"><span class="nick" style="color:#2e2a4a"><a href="#200321" label="[20:03:21]">&lt;stikonas&gt;</a></span><span class="message">(though on gentoo bootstrapping path of rust might be less optimized)</span></div><div class="line" id="200336"><span class="nick" style="color:#2e2a4a"><a href="#200336" label="[20:03:36]">&lt;stikonas&gt;</a></span><span class="message">it's still doing full multi-stage build for each version</span></div><div class="line" id="200346"><span class="nick" style="color:#2e2a4a"><a href="#200346" label="[20:03:46]">&lt;stikonas&gt;</a></span><span class="message">and uses bundled llvm for each version too</span></div><div class="line" id="200405"><span class="nick" style="color:#2e2a4a"><a href="#200405" label="[20:04:05]">&lt;stikonas&gt;</a></span><span class="message">well if one uses my overlay...</span></div><div class="line" id="200952"><span class="nick" style="color:#80b1d3"><a href="#200952" label="[20:09:52]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Ah I see <a rel="nofollow" href="https://github.com/thepowersgang/mrustc/tree/rust_1.74">https://github.com/thepowersgang/mrustc/tree/rust_1.74</a>  which is presumably the in progress 1.74 update. That resets the clock, but won't they be back in the same position in a year or two (unless mrustc keeps track with rustc)</span></div><div class="line" id="201422"><span class="nick" style="color:#2e2a4a"><a href="#201422" label="[20:14:22]">&lt;stikonas&gt;</a></span><span class="message">yeah, 1.74 is in progress, though still early stages</span></div><div class="line" id="201430"><span class="nick" style="color:#2e2a4a"><a href="#201430" label="[20:14:30]">&lt;stikonas&gt;</a></span><span class="message">it was started recently</span></div><div class="line" id="201434"><span class="nick" style="color:#2e2a4a"><a href="#201434" label="[20:14:34]">&lt;stikonas&gt;</a></span><span class="message">probably needs a few more months</span></div><div class="line" id="201934"><span class="nick" style="color:#8dd3c7"><a href="#201934" label="[20:19:34]">&lt;oriansj&gt;</a></span><span class="message">well the mrustc team is great and their work is important for keeping rust's bootstrap path simple.</span></div><div class="line" id="202237"><span class="nick" style="color:#2e2a4a"><a href="#202237" label="[20:22:37]">&lt;stikonas&gt;</a></span><span class="message">well, the good thing is that we are getting updates to target newer versions</span></div><div class="line" id="202259"><span class="nick" style="color:#2e2a4a"><a href="#202259" label="[20:22:59]">&lt;stikonas&gt;</a></span><span class="message">unlike java whose bootstrap path is simpler but each step is harder to maintain</span></div><div class="line" id="202319"><span class="nick" style="color:#2e2a4a"><a href="#202319" label="[20:23:19]">&lt;stikonas&gt;</a></span><span class="message">i.e. patching for different libc's or new arches is harder there</span></div><div class="line" id="205844"><span class="nick" style="color:#389600"><a href="#205844" label="[20:58:44]">&lt;webczat&gt;</a></span><span class="message">how did I manage to somehow replace /dev/null with a regular file without noticing? and then I was seeing gcc selftest errors during compilations related to /dev/null which magically had contents.</span></div><div class="line" id="213156"><span class="nick" style="color:#2e2a4a"><a href="#213156" label="[21:31:56]">&lt;stikonas&gt;</a></span><span class="message">webczat: building musl most likely</span></div><div class="line" id="213249"><span class="nick" style="color:#2e2a4a"><a href="#213249" label="[21:32:49]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/4737ab7481817e2bccab42669571cff7cca712d3/steps/musl-1.1.24/pass1.sh#L23">https://github.com/fosslinux/live-bootstrap/blob/4737ab7481817e2bccab42669571cff7cca712d3/steps/musl-1.1.24/pass1.sh#L23</a> </span></div><div class="line" id="213303"><span class="nick" style="color:#2e2a4a"><a href="#213303" label="[21:33:03]">&lt;stikonas&gt;</a></span><span class="message">bug in one of the components I think</span></div><div class="line" id="213309"><span class="nick" style="color:#2e2a4a"><a href="#213309" label="[21:33:09]">&lt;stikonas&gt;</a></span><span class="message">but since you don't use our bash</span></div><div class="line" id="213319"><span class="nick" style="color:#2e2a4a"><a href="#213319" label="[21:33:19]">&lt;stikonas&gt;</a></span><span class="message">then it must be something else</span></div><div class="line" id="213327"><span class="nick" style="color:#2e2a4a"><a href="#213327" label="[21:33:27]">&lt;stikonas&gt;</a></span><span class="message">but probably still caused by meslibc  or tcc</span></div><div class="line" id="213516"><span class="nick" style="color:#389600"><a href="#213516" label="[21:35:16]">&lt;webczat&gt;</a></span><span class="message">stikonas: interesting</span></div><div class="line" id="213525"><span class="nick" style="color:#389600"><a href="#213525" label="[21:35:25]">&lt;webczat&gt;</a></span><span class="message">and very unexpected.</span></div><br /></div></body></html>