<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-30.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000031"><span class="nick" style="color:#389600"><a href="#000031" label="[00:00:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; oriansj, fossy: what do you think about <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/339">https://github.com/fosslinux/live-bootstrap/pull/339</a>  I'm a bit reluctant to have those assembly functions in wrap.c...</span></div><div class="line" id="000043"><span class="nick" style="color:#389600"><a href="#000043" label="[00:00:43]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Maybe it's better to put them into M2libc?</span></div><div class="line" id="000934"><span class="nick" style="color:#8dd3c7"><a href="#000934" label="[00:09:34]">&lt;oriansj&gt;</a></span><span class="message">stikonas: The syscalls definitely belong in M2libc; the wrap.c program minus the assembly syscalls definitely should go in mescc-tools-extra</span></div><div class="line" id="001017"><span class="nick" style="color:#2e2a4a"><a href="#001017" label="[00:10:17]">&lt;stikonas&gt;</a></span><span class="message">do you want to leave a comment there?</span></div><div class="line" id="001022"><span class="nick" style="color:#2e2a4a"><a href="#001022" label="[00:10:22]">&lt;stikonas&gt;</a></span><span class="message">or should I write</span></div><div class="line" id="001033"><span class="nick" style="color:#8dd3c7"><a href="#001033" label="[00:10:33]">&lt;oriansj&gt;</a></span><span class="message">I can leave a comment</span></div><div class="line" id="001039"><span class="nick" style="color:#2e2a4a"><a href="#001039" label="[00:10:39]">&lt;stikonas&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="001505"><span class="nick" style="color:#8dd3c7"><a href="#001505" label="[00:15:05]">&lt;oriansj&gt;</a></span><span class="message">done</span></div><div class="line" id="001746"><span class="nick" style="color:#6b8072"><a href="#001746" label="[00:17:46]">&lt;Googulator&gt;</a></span><span class="message">Is it intentional that the &quot;src&quot; command in builder-hex0 never closes the file descriptor it writes to?</span></div><div class="line" id="002409"><span class="nick" style="color:#6b8072"><a href="#002409" label="[00:24:09]">&lt;Googulator&gt;</a></span><span class="message">I tried adding a close system call to the end, but it actually breaks things</span></div><div class="line" id="002811"><span class="nick" style="color:#2e2a4a"><a href="#002811" label="[00:28:11]">&lt;stikonas&gt;</a></span><span class="message">I think only rickmasters know this...</span></div><div class="line" id="002818"><span class="nick" style="color:#2e2a4a"><a href="#002818" label="[00:28:18]">&lt;stikonas&gt;</a></span><span class="message">s/know/knows/</span></div><div class="line" id="002822"><span class="nick" style="color:#2e2a4a"><a href="#002822" label="[00:28:22]">&lt;stikonas&gt;</a></span><span class="message">oriansj: thanks again!</span></div><div class="line" id="043840"><span class="nick" style="color:#80b1d3"><a href="#043840" label="[04:38:40]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah i agree with the functions going in M2libc. I'm not sure i understand the overarching purpose of the PR yet either though. while it does reduce the binary seed, in such a mode bwrap is such a small part of the binary seed cause you have a whole Linux userland underneath, unless i'm misinterpreting the PR?</span></div><div class="line" id="043923"><span class="nick" style="color:#80b1d3"><a href="#043923" label="[04:39:23]">&lt;fossy&gt;</a></span><span class="message">stikonas: also if you could review #337 #340 #341 (but don't merge, I'd like them to be merged at the same time as the big PR) i'd appreciate that. those 3 are relatively smaller PRs</span></div><div class="line" id="043934"><span class="nick" style="color:#80b1d3"><a href="#043934" label="[04:39:34]">&lt;fossy&gt;</a></span><span class="message">but i still want eyes on them</span></div><div class="line" id="140832"><span class="nick" style="color:#6d2462"><a href="#140832" label="[14:08:32]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: The src command doesn't call close because close was not implemented when the src command was originally written</span></div><div class="line" id="141050"><span class="nick" style="color:#6d2462"><a href="#141050" label="[14:10:50]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: close was implemented later as part of per-process file descriptors</span></div><div class="line" id="141151"><span class="nick" style="color:#6d2462"><a href="#141151" label="[14:11:51]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: I probably should have added a close call to src when per-process file descriptors was implemented.</span></div><div class="line" id="141325"><span class="nick" style="color:#6d2462"><a href="#141325" label="[14:13:25]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: Without the close, the kernel process (process zero) will probably overflow its file descriptor table.</span></div><div class="line" id="141512"><span class="nick" style="color:#6d2462"><a href="#141512" label="[14:15:12]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: From inspection, it appears that overflowing the table will go into memory that is not used yet, so technically the close does not appear to be necessary</span></div><div class="line" id="141553"><span class="nick" style="color:#6d2462"><a href="#141553" label="[14:15:53]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: But I don't like that so I think adding a close is a good idea.</span></div><div class="line" id="141702"><span class="nick" style="color:#6d2462"><a href="#141702" label="[14:17:02]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: Just looking at the source, I can't see why that would not work, so I'm surprised you ran into trouble.</span></div><div class="line" id="141820"><span class="nick" style="color:#6d2462"><a href="#141820" label="[14:18:20]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: close sets eax to zero but that's normal for a system call and I don't see that causing any trouble.</span></div><div class="line" id="150352"><span class="nick" style="color:#6b8072"><a href="#150352" label="[15:03:52]">&lt;Googulator&gt;</a></span><span class="message">rickmasters: the effect of adding a close is that hex2-0 never completes linking catm</span></div><div class="line" id="150615"><span class="nick" style="color:#6b8072"><a href="#150615" label="[15:06:15]">&lt;Googulator&gt;</a></span><span class="message">./x86/artifact/hex2-0 ./x86/catm_x86.hex2 ./x86/artifact/catm is the command that fails</span></div><div class="line" id="150620"><span class="nick" style="color:#6b8072"><a href="#150620" label="[15:06:20]">&lt;Googulator&gt;</a></span><span class="message">it just seems to loop forever</span></div><div class="line" id="150910"><span class="nick" style="color:#6d2462"><a href="#150910" label="[15:09:10]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: Hmm that's mysterious because that comes well after src commands are done</span></div><div class="line" id="151148"><span class="nick" style="color:#6d2462"><a href="#151148" label="[15:11:48]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: I can try to reproduce that by inserting a close here:</span></div><div class="line" id="151150"><span class="nick" style="color:#6d2462"><a href="#151150" label="[15:11:50]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/blob/3f20b992161a1e1976549d5a74db617164b0a1ac/builder-hex0.hex2#L2020">https://github.com/ironmeld/builder-hex0/blob/3f20b992161a1e1976549d5a74db617164b0a1ac/builder-hex0.hex2#L2020</a> </span></div><div class="line" id="151339"><span class="nick" style="color:#6b8072"><a href="#151339" label="[15:13:39]">&lt;Googulator&gt;</a></span><span class="message">that's exactly what I did</span></div><div class="line" id="151340"><span class="nick" style="color:#6b8072"><a href="#151340" label="[15:13:40]">&lt;Googulator&gt;</a></span><span class="message">I have</span></div><div class="line" id="151341"><span class="nick" style="color:#6b8072"><a href="#151341" label="[15:13:41]">&lt;Googulator&gt;</a></span><span class="message">:src_finish</span></div><div class="line" id="151342"><span class="nick" style="color:#6b8072"><a href="#151342" label="[15:13:42]">&lt;Googulator&gt;</a></span><span class="message">EB 07 # 89 D3         # mov ebx, edx</span></div><div class="line" id="151342"><span class="nick" style="color:#6b8072"><a href="#151342" label="[15:13:42]">&lt;Googulator&gt;</a></span><span class="message">B8 04 00 00 00        # mov eax, 6  ; syscall_close</span></div><div class="line" id="151343"><span class="nick" style="color:#6b8072"><a href="#151343" label="[15:13:43]">&lt;Googulator&gt;</a></span><span class="message">CD 80                 # int 80</span></div><div class="line" id="151343"><span class="nick" style="color:#6b8072"><a href="#151343" label="[15:13:43]">&lt;Googulator&gt;</a></span><span class="message">5F                    # pop edi</span></div><div class="line" id="151344"><span class="nick" style="color:#6b8072"><a href="#151344" label="[15:13:44]">&lt;Googulator&gt;</a></span><span class="message">5E                    # pop esi</span></div><div class="line" id="151344"><span class="nick" style="color:#6b8072"><a href="#151344" label="[15:13:44]">&lt;Googulator&gt;</a></span><span class="message">5A                    # pop edx</span></div><div class="line" id="151345"><span class="nick" style="color:#6b8072"><a href="#151345" label="[15:13:45]">&lt;Googulator&gt;</a></span><span class="message">59                    # pop ecx</span></div><div class="line" id="151345"><span class="nick" style="color:#6b8072"><a href="#151345" label="[15:13:45]">&lt;Googulator&gt;</a></span><span class="message">5B                    # pop ebx</span></div><div class="line" id="151346"><span class="nick" style="color:#6b8072"><a href="#151346" label="[15:13:46]">&lt;Googulator&gt;</a></span><span class="message">58                    # pop eax</span></div><div class="line" id="151346"><span class="nick" style="color:#6b8072"><a href="#151346" label="[15:13:46]">&lt;Googulator&gt;</a></span><span class="message">CB                    # ret</span></div><div class="line" id="151445"><span class="nick" style="color:#6b8072"><a href="#151445" label="[15:14:45]">&lt;Googulator&gt;</a></span><span class="message">EB 07 to skip it - delete it to actually run the close</span></div><div class="line" id="151535"><span class="nick" style="color:#6d2462"><a href="#151535" label="[15:15:35]">&lt;rickmasters&gt;</a></span><span class="message">shoudn't that be B8 06 00 00 00  ?</span></div><div class="line" id="151552"><span class="nick" style="color:#6b8072"><a href="#151552" label="[15:15:52]">&lt;Googulator&gt;</a></span><span class="message">oh sh*t...</span></div><div class="line" id="151556"><span class="nick" style="color:#6b8072"><a href="#151556" label="[15:15:56]">&lt;Googulator&gt;</a></span><span class="message">you're right</span></div><div class="line" id="151853"><span class="nick" style="color:#6b8072"><a href="#151853" label="[15:18:53]">&lt;Googulator&gt;</a></span><span class="message">BTW, is scratch actually used here for anything?</span></div><div class="line" id="151920"><span class="nick" style="color:#6b8072"><a href="#151920" label="[15:19:20]">&lt;Googulator&gt;</a></span><span class="message">:readwrite_loop</span></div><div class="line" id="151920"><span class="nick" style="color:#6b8072"><a href="#151920" label="[15:19:20]">&lt;Googulator&gt;</a></span><span class="message">85 C9                 # test ecx, ecx</span></div><div class="line" id="151921"><span class="nick" style="color:#6b8072"><a href="#151921" label="[15:19:21]">&lt;Googulator&gt;</a></span><span class="message">74 !src_finish        # jz src_finish</span></div><div class="line" id="151921"><span class="nick" style="color:#6b8072"><a href="#151921" label="[15:19:21]">&lt;Googulator&gt;</a></span><span class="message">BF 00 02 04 00        # mov edi, 0x00040200     ; scratch buffer</span></div><div class="line" id="151922"><span class="nick" style="color:#6b8072"><a href="#151922" label="[15:19:22]">&lt;Googulator&gt;</a></span><span class="message">57                    # push edi                ; save buffer address</span></div><div class="line" id="151922"><span class="nick" style="color:#6b8072"><a href="#151922" label="[15:19:22]">&lt;Googulator&gt;</a></span><span class="message">31 DB                 # xor ebx, ebx            ; ebx=0=stdin</span></div><div class="line" id="151923"><span class="nick" style="color:#6b8072"><a href="#151923" label="[15:19:23]">&lt;Googulator&gt;</a></span><span class="message">9A &amp;read 08 00        # call read</span></div><div class="line" id="151923"><span class="nick" style="color:#6b8072"><a href="#151923" label="[15:19:23]">&lt;Googulator&gt;</a></span><span class="message">89 D3                 # mov ebx, edx            ;  prepare to write</span></div><div class="line" id="151924"><span class="nick" style="color:#6b8072"><a href="#151924" label="[15:19:24]">&lt;Googulator&gt;</a></span><span class="message">5E                    # pop esi                 ; restore buffer address to esi</span></div><div class="line" id="151924"><span class="nick" style="color:#6b8072"><a href="#151924" label="[15:19:24]">&lt;Googulator&gt;</a></span><span class="message">9A &amp;write 08 00       # call write</span></div><div class="line" id="151925"><span class="nick" style="color:#6b8072"><a href="#151925" label="[15:19:25]">&lt;Googulator&gt;</a></span><span class="message">49                    # dec ecx   ; count--</span></div><div class="line" id="151925"><span class="nick" style="color:#6b8072"><a href="#151925" label="[15:19:25]">&lt;Googulator&gt;</a></span><span class="message">EB !readwrite_loop    # jmp readwrite_loop</span></div><div class="line" id="152003"><span class="nick" style="color:#6b8072"><a href="#152003" label="[15:20:03]">&lt;Googulator&gt;</a></span><span class="message">...but nothing in there seems to use edi or esi</span></div><div class="line" id="152706"><span class="nick" style="color:#6d2462"><a href="#152706" label="[15:27:06]">&lt;rickmasters&gt;</a></span><span class="message">right, that looks unused. Its probably left over from old code that worked differently. I'd have to research that. Good find.</span></div><div class="line" id="152814"><span class="nick" style="color:#6b8072"><a href="#152814" label="[15:28:14]">&lt;Googulator&gt;</a></span><span class="message">OK, with the correct system call number, it now works in qemu</span></div><div class="line" id="152844"><span class="nick" style="color:#6b8072"><a href="#152844" label="[15:28:44]">&lt;Googulator&gt;</a></span><span class="message">but it unfortunately didn't solve the lockup on bare metal</span></div><div class="line" id="153025"><span class="nick" style="color:#6d2462"><a href="#153025" label="[15:30:25]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: Does the lockup happen every time? I seem to remember you said you got the bootstrap to work on your birthday...</span></div><div class="line" id="153155"><span class="nick" style="color:#6b8072"><a href="#153155" label="[15:31:55]">&lt;Googulator&gt;</a></span><span class="message">It happens every time if the drive controller is in standard or enhanced IDE mkde</span></div><div class="line" id="153158"><span class="nick" style="color:#6b8072"><a href="#153158" label="[15:31:58]">&lt;Googulator&gt;</a></span><span class="message">*mode</span></div><div class="line" id="153202"><span class="nick" style="color:#6b8072"><a href="#153202" label="[15:32:02]">&lt;Googulator&gt;</a></span><span class="message">Works in AHCI or RAID</span></div><div class="line" id="153218"><span class="nick" style="color:#6b8072"><a href="#153218" label="[15:32:18]">&lt;Googulator&gt;</a></span><span class="message">But only one of my boards can actually enable and boot from AHCI or RAID</span></div><div class="line" id="153244"><span class="nick" style="color:#6b8072"><a href="#153244" label="[15:32:44]">&lt;Googulator&gt;</a></span><span class="message">the others either lack those options in the BIOS, or require the boot drive to be configured as IDE</span></div><div class="line" id="153343"><span class="nick" style="color:#6d2462"><a href="#153343" label="[15:33:43]">&lt;rickmasters&gt;</a></span><span class="message">ok</span></div><div class="line" id="154450"><span class="nick" style="color:#6d2462"><a href="#154450" label="[15:44:50]">&lt;rickmasters&gt;</a></span><span class="message">To explain the unused scratch, this is left over from when builder-hex0 only supported text files and src read/wrote a line at a time into a scratch buffer</span></div><div class="line" id="154529"><span class="nick" style="color:#6d2462"><a href="#154529" label="[15:45:29]">&lt;rickmasters&gt;</a></span><span class="message">That changed to a byte at a time here: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/commit/66ca665f1645646494f4813db8c5250742649e0d">https://github.com/ironmeld/builder-hex0/commit/66ca665f1645646494f4813db8c5250742649e0d</a> </span></div><div class="line" id="154621"><span class="nick" style="color:#6d2462"><a href="#154621" label="[15:46:21]">&lt;rickmasters&gt;</a></span><span class="message">I should have removed the buffer setup in that commit. I'll work on that.</span></div><div class="line" id="174452"><span class="nick" style="color:#6b8072"><a href="#174452" label="[17:44:52]">&lt;Googulator&gt;</a></span><span class="message">The freeze issue is reproducible also on a HP D530 USDT with a Socket 478 Pentium 4 (with a modified builder-hex0 that puts file data @ 0x14000000 instead of 0x54000000 - of course, such a kernel will never successfully run a real build, but it's enough to test the srcfs reading code)</span></div><div class="line" id="174509"><span class="nick" style="color:#6b8072"><a href="#174509" label="[17:45:09]">&lt;Googulator&gt;</a></span><span class="message">Totally different BIOS, totally different chipset</span></div><div class="line" id="174523"><span class="nick" style="color:#6b8072"><a href="#174523" label="[17:45:23]">&lt;Googulator&gt;</a></span><span class="message">I don't have a period AMD system to test with, unfortunately</span></div><div class="line" id="174541"><span class="nick" style="color:#6b8072"><a href="#174541" label="[17:45:41]">&lt;Googulator&gt;</a></span><span class="message">&amp; yet it somehow works in qemu with SeaBIOS, even if I use legacy IDE as the emulated HDD interface</span></div><div class="line" id="175319"><span class="nick" style="color:#6d2462"><a href="#175319" label="[17:53:19]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: I wish I could help more. I've got hardware to test with but I won't be at that location until late December.</span></div><div class="line" id="175437"><span class="nick" style="color:#6d2462"><a href="#175437" label="[17:54:37]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: The nature of the problem makes it difficult to determine where the fault lies.</span></div><div class="line" id="175639"><span class="nick" style="color:#6d2462"><a href="#175639" label="[17:56:39]">&lt;rickmasters&gt;</a></span><span class="message">it's hard to imagine that such varied hardware has the same kind of problem - software seems more likely.</span></div><div class="line" id="175805"><span class="nick" style="color:#6d2462"><a href="#175805" label="[17:58:05]">&lt;rickmasters&gt;</a></span><span class="message">Working towards the simplest test case possible seems like the way to go.</span></div><div class="line" id="182515"><span class="nick" style="color:#6d2462"><a href="#182515" label="[18:25:15]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: looking back at your previous comments it looks like you said that after changing stage1 memory writes to noop you were able to read consistently?</span></div><div class="line" id="185028"><span class="nick" style="color:#234e69"><a href="#185028" label="[18:50:28]">&lt;GoogulatorMobile&gt;</a></span><span class="message">rickmasters: in stage1 only</span></div><div class="line" id="185043"><span class="nick" style="color:#234e69"><a href="#185043" label="[18:50:43]">&lt;GoogulatorMobile&gt;</a></span><span class="message">The same stage1 code with a real stage2 triggers the bug in stage2</span></div><div class="line" id="185132"><span class="nick" style="color:#234e69"><a href="#185132" label="[18:51:32]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I've also seen the bug trigger as early as sector 0x96 (srcfs starts at 0x93 with my current code)</span></div><div class="line" id="185200"><span class="nick" style="color:#234e69"><a href="#185200" label="[18:52:00]">&lt;GoogulatorMobile&gt;</a></span><span class="message">If I force stage1 to read garbage data, it reads well past that</span></div><div class="line" id="185312"><span class="nick" style="color:#234e69"><a href="#185312" label="[18:53:12]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Actually not the same stage1 code, since what I did there was to not store read bytes at all</span></div><div class="line" id="185336"><span class="nick" style="color:#6d2462"><a href="#185336" label="[18:53:36]">&lt;rickmasters&gt;</a></span><span class="message">right, so with a hacked up stage1 you can consistently read much further into the disk without lockups?</span></div><div class="line" id="202325"><span class="nick" style="color:#234e69"><a href="#202325" label="[20:23:25]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Yes, stage1 with the stosb commented out reads all the way to the cylinder boundary</span></div><div class="line" id="202403"><span class="nick" style="color:#234e69"><a href="#202403" label="[20:24:03]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Even the unmodified stage1 can read up to about 600KiB (where it runs out of low memory)</span></div><div class="line" id="202511"><span class="nick" style="color:#234e69"><a href="#202511" label="[20:25:11]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Stage2 fails at a random point, no more than 512 sectors in (sometimes as early as the 4th sector read)</span></div><div class="line" id="202525"><span class="nick" style="color:#234e69"><a href="#202525" label="[20:25:25]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&amp; it fails regardless of which reading code I use</span></div><div class="line" id="202537"><span class="nick" style="color:#234e69"><a href="#202537" label="[20:25:37]">&lt;GoogulatorMobile&gt;</a></span><span class="message">CHS one matching stage1</span></div><div class="line" id="202542"><span class="nick" style="color:#234e69"><a href="#202542" label="[20:25:42]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Or my new LBA one</span></div><div class="line" id="202551"><span class="nick" style="color:#234e69"><a href="#202551" label="[20:25:51]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Both show the same behavior</span></div><div class="line" id="202610"><span class="nick" style="color:#234e69"><a href="#202610" label="[20:26:10]">&lt;GoogulatorMobile&gt;</a></span><span class="message">If I had to guess, we don't quite return to real mode properly</span></div><div class="line" id="202614"><span class="nick" style="color:#234e69"><a href="#202614" label="[20:26:14]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Hmm...</span></div><div class="line" id="202641"><span class="nick" style="color:#234e69"><a href="#202641" label="[20:26:41]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Do we disable Gate A20 when returning to real mode?</span></div><div class="line" id="202647"><span class="nick" style="color:#234e69"><a href="#202647" label="[20:26:47]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I think not</span></div><div class="line" id="203218"><span class="nick" style="color:#234e69"><a href="#203218" label="[20:32:18]">&lt;GoogulatorMobile&gt;</a></span><span class="message">...flaky connection</span></div><div class="line" id="220613"><span class="nick" style="color:#6d2462"><a href="#220613" label="[22:06:13]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: something related to switching back and forth between 16-bit and 32-bit was my first guess as well.</span></div><div class="line" id="220633"><span class="nick" style="color:#6d2462"><a href="#220633" label="[22:06:33]">&lt;rickmasters&gt;</a></span><span class="message">It's the biggest difference between stage1 and stage2.</span></div><div class="line" id="220818"><span class="nick" style="color:#6d2462"><a href="#220818" label="[22:08:18]">&lt;rickmasters&gt;</a></span><span class="message">Just getting the switching to work at all was a big challenge. There isn't much code available as a guide so I had to piece it together with some guesswork.</span></div><div class="line" id="005059"><span class="nick" style="color:#2e2a4a"><a href="#005059" label="[00:50:59]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'll take a look at your PRs, but a bit later, maybe next week</span></div><div class="line" id="013528"><span class="nick" style="color:#80b1d3"><a href="#013528" label="[01:35:28]">&lt;fossy&gt;</a></span><span class="message">stikonas, thanks, no rush</span></div><br /></div></body></html>