<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-01-01.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000923"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="053106"><span class="nick" style="color:#8dd3c7"><a href="#053106" label="[05:31:06]">&lt;fossy&gt;</a></span><span class="message">yeah, bauen1, src directory is gone</span></div><div class="line" id="101839"><span class="nick" style="color:#2e2a4a"><a href="#101839" label="[10:18:39]">&lt;doras&gt;</a></span><span class="message">I'm getting the following error when building bash-2.05b:</span></div><div class="line" id="101839"><span class="nick" style="color:#2e2a4a"><a href="#101839" label="[10:18:39]">&lt;doras&gt;</a></span><span class="message">     +&gt; make mkbuiltins</span></div><div class="line" id="101839"><span class="nick" style="color:#2e2a4a"><a href="#101839" label="[10:18:39]">&lt;doras&gt;</a></span><span class="message">    make: Makefile: error 13</span></div><div class="line" id="101839"><span class="nick" style="color:#2e2a4a"><a href="#101839" label="[10:18:39]">&lt;doras&gt;</a></span><span class="message">    make: *** No rule to make target `mkbuiltins'.  Stop.</span></div><div class="line" id="101908"><span class="nick" style="color:#2e2a4a"><a href="#101908" label="[10:19:08]">&lt;doras&gt;</a></span><span class="message">But I can't figure out what's wrong. Everything looks correct as far as I can tell.</span></div><div class="line" id="102237"><span class="nick" style="color:#2e2a4a"><a href="#102237" label="[10:22:37]">&lt;doras&gt;</a></span><span class="message">This only happens when running the bootstrap using BuildStream, whose sandbox is internally based on bubblewrap as far as I know.</span></div><div class="line" id="102323"><span class="nick" style="color:#2e2a4a"><a href="#102323" label="[10:23:23]">&lt;doras&gt;</a></span><span class="message">Unfortunately there's no &quot;env&quot; to check if there is anything suspicious in the environment.</span></div><div class="line" id="102355"><span class="nick" style="color:#2e2a4a"><a href="#102355" label="[10:23:55]">&lt;doras&gt;</a></span><span class="message">And running &quot;make V=1 mkbuiltins&quot; doesn't show any additional information</span></div><div class="line" id="102543"><span class="nick" style="color:#2e2a4a"><a href="#102543" label="[10:25:43]">&lt;doras&gt;</a></span><span class="message">No &quot;strace&quot; either.</span></div><div class="line" id="102551"><span class="nick" style="color:#2e2a4a"><a href="#102551" label="[10:25:51]">&lt;doras&gt;</a></span><span class="message">How do you debug such issues?</span></div><div class="line" id="105301"><span class="nick" style="color:#2e2a4a"><a href="#105301" label="[10:53:01]">&lt;doras&gt;</a></span><span class="message">I guess I could build static versions of those and copy them to the chroot</span></div><div class="line" id="113153"><span class="nick" style="color:#2e2a4a"><a href="#113153" label="[11:31:53]">&lt;doras&gt;</a></span><span class="message">I managed to attach to the bootstrap process with strace externally. I'll see if it helps me figure out what goes wrong.</span></div><div class="line" id="123924"><span class="nick" style="color:#2e2a4a"><a href="#123924" label="[12:39:24]">&lt;doras&gt;</a></span><span class="message">I think this is my issue:</span></div><div class="line" id="123924"><span class="nick" style="color:#2e2a4a"><a href="#123924" label="[12:39:24]">&lt;doras&gt;</a></span><span class="message">[pid 3241191] open(&quot;Makefile&quot;, O_RDONLY) = -1 EACCES (Permission denied)</span></div><div class="line" id="124713"><span class="nick" style="color:#2e2a4a"><a href="#124713" label="[12:47:13]">&lt;doras&gt;</a></span><span class="message">I think these &quot;cp&quot; commands somehow result in the file permission changing from &quot;-rw-r--r--&quot; to &quot;--w-r--r--&quot;:</span></div><div class="line" id="124713"><span class="nick" style="color:#2e2a4a"><a href="#124713" label="[12:47:13]">&lt;doras&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/bash-2.05b/bash-2.05b.kaem#L18">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/bash-2.05b/bash-2.05b.kaem#L18</a> </span></div><div class="line" id="124828"><span class="nick" style="color:#2e2a4a"><a href="#124828" label="[12:48:28]">&lt;doras&gt;</a></span><span class="message">Since the owner can't read the file (only write), and the owner is the one running &quot;make&quot;, we get EACCES.</span></div><div class="line" id="125022"><span class="nick" style="color:#2e2a4a"><a href="#125022" label="[12:50:22]">&lt;doras&gt;</a></span><span class="message">I'm guessing umask may be involved here.</span></div><div class="line" id="125303"><span class="nick" style="color:#2e2a4a"><a href="#125303" label="[12:53:03]">&lt;doras&gt;</a></span><span class="message">kaem is missing the umask built-in command, so it's hard to check what it is...</span></div><div class="line" id="125508"><span class="nick" style="color:#6b8072"><a href="#125508" label="[12:55:08]">&lt;stikonas&gt;</a></span><span class="message">hmm, at that stage cp should be coreutils cp, not cp from stage0-posix</span></div><div class="line" id="125559"><span class="nick" style="color:#2e2a4a"><a href="#125559" label="[12:55:59]">&lt;doras&gt;</a></span><span class="message">Then this is what changed. Up until then there wasn't an issue with &quot;cp&quot; and permissions.</span></div><div class="line" id="125625"><span class="nick" style="color:#6b8072"><a href="#125625" label="[12:56:25]">&lt;stikonas&gt;</a></span><span class="message">well, stage0-posix cp does not support copying permissions</span></div><div class="line" id="125638"><span class="nick" style="color:#6b8072"><a href="#125638" label="[12:56:38]">&lt;stikonas&gt;</a></span><span class="message">so at least for executables we set 755 after that</span></div><div class="line" id="130122"><span class="nick" style="color:#2e2a4a"><a href="#130122" label="[13:01:22]">&lt;doras&gt;</a></span><span class="message">A difference in the BuildStream bootstrap compared to my bwrap mode bootstrap is that the user isn't a fake (namespace-mapped) or real root. It's the normal user.</span></div><div class="line" id="130140"><span class="nick" style="color:#2e2a4a"><a href="#130140" label="[13:01:40]">&lt;doras&gt;</a></span><span class="message">Maybe this makes &quot;cp&quot; behave differently...</span></div><div class="line" id="130142"><span class="nick" style="color:#6b8072"><a href="#130142" label="[13:01:42]">&lt;stikonas&gt;</a></span><span class="message">but why would it have some strange umask, hmm...</span></div><div class="line" id="130255"><span class="nick" style="color:#6b8072"><a href="#130255" label="[13:02:55]">&lt;stikonas&gt;</a></span><span class="message">so the stage0-posix cp might not respect umask at all</span></div><div class="line" id="130300"><span class="nick" style="color:#6b8072"><a href="#130300" label="[13:03:00]">&lt;stikonas&gt;</a></span><span class="message">since it uses M2libc</span></div><div class="line" id="130317"><span class="nick" style="color:#6b8072"><a href="#130317" label="[13:03:17]">&lt;stikonas&gt;</a></span><span class="message">oh, actually M2libc is probably unrelated</span></div><div class="line" id="130325"><span class="nick" style="color:#6b8072"><a href="#130325" label="[13:03:25]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="130331"><span class="nick" style="color:#6b8072"><a href="#130331" label="[13:03:31]">&lt;stikonas&gt;</a></span><span class="message">let me see if meslibc has support for umask</span></div><div class="line" id="130358"><span class="nick" style="color:#6b8072"><a href="#130358" label="[13:03:58]">&lt;stikonas&gt;</a></span><span class="message">looks like no, it's stubbed out</span></div><div class="line" id="130533"><span class="nick" style="color:#2e2a4a"><a href="#130533" label="[13:05:33]">&lt;doras&gt;</a></span><span class="message">Does this mean that it always preserves permissions?</span></div><div class="line" id="130816"><span class="nick" style="color:#2e2a4a"><a href="#130816" label="[13:08:16]">&lt;doras&gt;</a></span><span class="message">This is suspicious:</span></div><div class="line" id="130816"><span class="nick" style="color:#2e2a4a"><a href="#130816" label="[13:08:16]">&lt;doras&gt;</a></span><span class="message">[pid 3241120] read(8, &quot;\n\0/dev/tty0\0\0\0\0\0umask stub\n\0\0\0\0\0&quot;..., 4096) = 516</span></div><div class="line" id="130816"><span class="nick" style="color:#2e2a4a"><a href="#130816" label="[13:08:16]">&lt;doras&gt;</a></span><span class="message">[pid 3241120] write(9, &quot;\n\0/dev/tty0\0\0\0\0\0umask stub\n\0\0\0\0\0&quot;..., 516) = 516</span></div><div class="line" id="130914"><span class="nick" style="color:#6b8072"><a href="#130914" label="[13:09:14]">&lt;stikonas&gt;</a></span><span class="message">yeah, so this is a function in meslibc</span></div><div class="line" id="130946"><span class="nick" style="color:#6b8072"><a href="#130946" label="[13:09:46]">&lt;stikonas&gt;</a></span><span class="message">doras: <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/stub/umask.c">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/stub/umask.c</a> </span></div><div class="line" id="131131"><span class="nick" style="color:#6b8072"><a href="#131131" label="[13:11:31]">&lt;stikonas&gt;</a></span><span class="message">so it just prints it and doesn't do anything</span></div><div class="line" id="131135"><span class="nick" style="color:#2e2a4a"><a href="#131135" label="[13:11:35]">&lt;doras&gt;</a></span><span class="message">Is meslibc the libc library being statically linked with when &quot;cp&quot; is built?</span></div><div class="line" id="131149"><span class="nick" style="color:#6b8072"><a href="#131149" label="[13:11:49]">&lt;stikonas&gt;</a></span><span class="message">yes, at that time we don't have anything else yet</span></div><div class="line" id="131207"><span class="nick" style="color:#6b8072"><a href="#131207" label="[13:12:07]">&lt;stikonas&gt;</a></span><span class="message">if you look at <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a>,  musl is a few steps later</span></div><div class="line" id="131314"><span class="nick" style="color:#2e2a4a"><a href="#131314" label="[13:13:14]">&lt;doras&gt;</a></span><span class="message">Is &quot;umask&quot; something that the kernel manages? Or the standard library?</span></div><div class="line" id="131331"><span class="nick" style="color:#6b8072"><a href="#131331" label="[13:13:31]">&lt;stikonas&gt;</a></span><span class="message">doras: that I'm not sure</span></div><div class="line" id="131334"><span class="nick" style="color:#6b8072"><a href="#131334" label="[13:13:34]">&lt;stikonas&gt;</a></span><span class="message">we can check in musl</span></div><div class="line" id="131400"><span class="nick" style="color:#6b8072"><a href="#131400" label="[13:14:00]">&lt;stikonas&gt;</a></span><span class="message">it must be some information that process carries</span></div><div class="line" id="131446"><span class="nick" style="color:#6b8072"><a href="#131446" label="[13:14:46]">&lt;stikonas&gt;</a></span><span class="message">doras: <a rel="nofollow" href="https://git.musl-libc.org/cgit/musl/tree/src/stat/umask.c">https://git.musl-libc.org/cgit/musl/tree/src/stat/umask.c</a> </span></div><div class="line" id="131450"><span class="nick" style="color:#6b8072"><a href="#131450" label="[13:14:50]">&lt;stikonas&gt;</a></span><span class="message">so it's entirely in the kernel</span></div><div class="line" id="131638"><span class="nick" style="color:#2e2a4a"><a href="#131638" label="[13:16:38]">&lt;doras&gt;</a></span><span class="message">I'll see if I can reproduce the permissions change by calling cp myself.</span></div><div class="line" id="131729"><span class="nick" style="color:#6b8072"><a href="#131729" label="[13:17:29]">&lt;stikonas&gt;</a></span><span class="message">it might be something that buildstream sets</span></div><div class="line" id="131751"><span class="nick" style="color:#6b8072"><a href="#131751" label="[13:17:51]">&lt;stikonas&gt;</a></span><span class="message">if it for some reason sets umask, then it would be passed through all child processes</span></div><div class="line" id="131804"><span class="nick" style="color:#6b8072"><a href="#131804" label="[13:18:04]">&lt;stikonas&gt;</a></span><span class="message">and everything in live-bootstrap is a child process of kaem-optional-seed</span></div><div class="line" id="131847"><span class="nick" style="color:#2e2a4a"><a href="#131847" label="[13:18:47]">&lt;doras&gt;</a></span><span class="message">Strange. I see &quot;-rwSr--r--&quot; on the original files inside the chroot.</span></div><div class="line" id="132036"><span class="nick" style="color:#2e2a4a"><a href="#132036" label="[13:20:36]">&lt;doras&gt;</a></span><span class="message">What does it even mean that they have setuid?</span></div><div class="line" id="132114"><span class="nick" style="color:#6b8072"><a href="#132114" label="[13:21:14]">&lt;stikonas&gt;</a></span><span class="message">that capital S is suspicious</span></div><div class="line" id="132126"><span class="nick" style="color:#2e2a4a"><a href="#132126" label="[13:21:26]">&lt;doras&gt;</a></span><span class="message">Actually, all files seems to have it. Hmmm...</span></div><div class="line" id="132219"><span class="nick" style="color:#2e2a4a"><a href="#132219" label="[13:22:19]">&lt;doras&gt;</a></span><span class="message">Also, I don't see why BuildStream would set such a strange umask.</span></div><div class="line" id="132236"><span class="nick" style="color:#2e2a4a"><a href="#132236" label="[13:22:36]">&lt;doras&gt;</a></span><span class="message">Removing read permissions for the owner? It's too strange to make sense.</span></div><div class="line" id="132534"><span class="nick" style="color:#2e2a4a"><a href="#132534" label="[13:25:34]">&lt;doras&gt;</a></span><span class="message">It seems that I can reproduce it in a non-BuildStream chroot.</span></div><div class="line" id="132634"><span class="nick" style="color:#2e2a4a"><a href="#132634" label="[13:26:34]">&lt;doras&gt;</a></span><span class="message">I used this:</span></div><div class="line" id="132634"><span class="nick" style="color:#2e2a4a"><a href="#132634" label="[13:26:34]">&lt;doras&gt;</a></span><span class="message">env -i PATH=/usr/bin sudo chroot /path/to/bootstrap/root cp /after/bash-2.05b/mk/main.mk /after/bash-2.05b/build/bash-2.05b/Makefile.test</span></div><div class="line" id="132730"><span class="nick" style="color:#2e2a4a"><a href="#132730" label="[13:27:30]">&lt;doras&gt;</a></span><span class="message">I end up with the following permissions:</span></div><div class="line" id="132730"><span class="nick" style="color:#2e2a4a"><a href="#132730" label="[13:27:30]">&lt;doras&gt;</a></span><span class="message">--w-r--r--    1 root     root         2572 Jan  0 00:00 Makefile.test</span></div><div class="line" id="132906"><span class="nick" style="color:#2e2a4a"><a href="#132906" label="[13:29:06]">&lt;doras&gt;</a></span><span class="message">And since I'm root, the read permission doesn't matter for some reason. &quot;cat&quot; on the file works. This must be why it doesn't reproduce when root is used for the build.</span></div><div class="line" id="133028"><span class="nick" style="color:#2e2a4a"><a href="#133028" label="[13:30:28]">&lt;doras&gt;</a></span><span class="message">Alright, so there issue is there anyway, but it's exposed only when non-root users are used for the bootstrap.</span></div><div class="line" id="133117"><span class="nick" style="color:#2e2a4a"><a href="#133117" label="[13:31:17]">&lt;doras&gt;</a></span><span class="message">I still suspect this stub. Maybe it results in &quot;cp&quot; getting the wrong impression about the umask.</span></div><div class="line" id="133135"><span class="nick" style="color:#2e2a4a"><a href="#133135" label="[13:31:35]">&lt;doras&gt;</a></span><span class="message">I'll try with &quot;cp -p&quot; to see what happens.</span></div><div class="line" id="133237"><span class="nick" style="color:#2e2a4a"><a href="#133237" label="[13:32:37]">&lt;doras&gt;</a></span><span class="message">It seems that &quot;cp -p&quot; works around the issue.</span></div><div class="line" id="133408"><span class="nick" style="color:#2e2a4a"><a href="#133408" label="[13:34:08]">&lt;doras&gt;</a></span><span class="message">It keeps the permissions of the original file:</span></div><div class="line" id="133408"><span class="nick" style="color:#2e2a4a"><a href="#133408" label="[13:34:08]">&lt;doras&gt;</a></span><span class="message">-rwSr--r--    1 root     root         2572 Jan  0 00:00 Makefile.test</span></div><div class="line" id="133849"><span class="nick" style="color:#6b8072"><a href="#133849" label="[13:38:49]">&lt;stikonas&gt;</a></span><span class="message">so it works in build-stream with -p?</span></div><div class="line" id="133906"><span class="nick" style="color:#6b8072"><a href="#133906" label="[13:39:06]">&lt;stikonas&gt;</a></span><span class="message">in principle it should be harmless</span></div><div class="line" id="133946"><span class="nick" style="color:#2e2a4a"><a href="#133946" label="[13:39:46]">&lt;doras&gt;</a></span><span class="message">Haven't checked through BuildStream since it requires running the entire bootstrap again and I'm still exploring the sysroot, but I'm pretty sure it would work.</span></div><div class="line" id="133949"><span class="nick" style="color:#6b8072"><a href="#133949" label="[13:39:49]">&lt;stikonas&gt;</a></span><span class="message">so should be fine to just add it to live-bootstrap in general</span></div><div class="line" id="134011"><span class="nick" style="color:#2e2a4a"><a href="#134011" label="[13:40:11]">&lt;doras&gt;</a></span><span class="message">But it feels like a deeper issue, probably not specific to &quot;cp&quot;.</span></div><div class="line" id="134030"><span class="nick" style="color:#6b8072"><a href="#134030" label="[13:40:30]">&lt;stikonas&gt;</a></span><span class="message">well, maybe something is wrong with umask</span></div><div class="line" id="134036"><span class="nick" style="color:#2e2a4a"><a href="#134036" label="[13:40:36]">&lt;doras&gt;</a></span><span class="message">And would we do if &quot;cp&quot; is used as part of the build of the following packages?</span></div><div class="line" id="134036"><span class="nick" style="color:#6b8072"><a href="#134036" label="[13:40:36]">&lt;stikonas&gt;</a></span><span class="message">but you can't easily check umask right now</span></div><div class="line" id="134109"><span class="nick" style="color:#6b8072"><a href="#134109" label="[13:41:09]">&lt;stikonas&gt;</a></span><span class="message">I'm a bit confused. What do you mean?</span></div><div class="line" id="134111"><span class="nick" style="color:#2e2a4a"><a href="#134111" label="[13:41:11]">&lt;doras&gt;</a></span><span class="message">Basically it seems that &quot;cp&quot; from coreutils uses this to get the umask: <a rel="nofollow" href="https://github.com/coreutils/coreutils/blob/00ea4bacf6063ccc125209d5186f8f2382c6f0d4/src/copy.c#L3292">https://github.com/coreutils/coreutils/blob/00ea4bacf6063ccc125209d5186f8f2382c6f0d4/src/copy.c#L3292</a> </span></div><div class="line" id="134129"><span class="nick" style="color:#6b8072"><a href="#134129" label="[13:41:29]">&lt;stikonas&gt;</a></span><span class="message">well, it goes to stub</span></div><div class="line" id="134130"><span class="nick" style="color:#2e2a4a"><a href="#134130" label="[13:41:30]">&lt;doras&gt;</a></span><span class="message">If our umask is stub, maybe it confuses it.</span></div><div class="line" id="134139"><span class="nick" style="color:#6b8072"><a href="#134139" label="[13:41:39]">&lt;stikonas&gt;</a></span><span class="message">maybe...</span></div><div class="line" id="134200"><span class="nick" style="color:#6b8072"><a href="#134200" label="[13:42:00]">&lt;stikonas&gt;</a></span><span class="message">in chroot mode it runs as root</span></div><div class="line" id="134203"><span class="nick" style="color:#6b8072"><a href="#134203" label="[13:42:03]">&lt;stikonas&gt;</a></span><span class="message">so we don't see this</span></div><div class="line" id="134220"><span class="nick" style="color:#6b8072"><a href="#134220" label="[13:42:20]">&lt;stikonas&gt;</a></span><span class="message">anyway, it should be fine to use cp -p unconditionally</span></div><div class="line" id="134230"><span class="nick" style="color:#6b8072"><a href="#134230" label="[13:42:30]">&lt;stikonas&gt;</a></span><span class="message">since generally we weant to preserve permissions when copying</span></div><div class="line" id="134304"><span class="nick" style="color:#2e2a4a"><a href="#134304" label="[13:43:04]">&lt;doras&gt;</a></span><span class="message">stikonas: I was saying that our coreutils &quot;cp&quot; may be broken for non-root users, regardless of the actual umask.</span></div><div class="line" id="134313"><span class="nick" style="color:#2e2a4a"><a href="#134313" label="[13:43:13]">&lt;doras&gt;</a></span><span class="message">At least as long as we use meslibc.</span></div><div class="line" id="134326"><span class="nick" style="color:#2e2a4a"><a href="#134326" label="[13:43:26]">&lt;doras&gt;</a></span><span class="message">Or rather that it's built against it.</span></div><div class="line" id="134413"><span class="nick" style="color:#2e2a4a"><a href="#134413" label="[13:44:13]">&lt;doras&gt;</a></span><span class="message">So if we build the next step in the bootstrap, which internally uses &quot;cp&quot; too, or even the build of bash itself uses &quot;cp&quot; internally, we may end up with similar failures in those places too.</span></div><div class="line" id="134454"><span class="nick" style="color:#6b8072"><a href="#134454" label="[13:44:54]">&lt;stikonas&gt;</a></span><span class="message">yes, that's true</span></div><div class="line" id="134514"><span class="nick" style="color:#6b8072"><a href="#134514" label="[13:45:14]">&lt;stikonas&gt;</a></span><span class="message">and coreutils is not rebuilt until much later</span></div><div class="line" id="134532"><span class="nick" style="color:#6b8072"><a href="#134532" label="[13:45:32]">&lt;stikonas&gt;</a></span><span class="message">(step 30)</span></div><div class="line" id="134608"><span class="nick" style="color:#6b8072"><a href="#134608" label="[13:46:08]">&lt;stikonas&gt;</a></span><span class="message">although it might be possible to move it to step 23 (after musl)</span></div><div class="line" id="135426"><span class="nick" style="color:#2e2a4a"><a href="#135426" label="[13:54:26]">&lt;doras&gt;</a></span><span class="message">I created a file with rw permissions for owner, group and other (&quot;-rwSrw-rw-&quot;). Then copied it using &quot;cp&quot; without &quot;-p&quot;. I ended up with &quot;--w-r--r--&quot;</span></div><div class="line" id="140447"><span class="nick" style="color:#6b8072"><a href="#140447" label="[14:04:47]">&lt;stikonas&gt;</a></span><span class="message">anyway, it looks like cp -p resolves it</span></div><div class="line" id="140508"><span class="nick" style="color:#6b8072"><a href="#140508" label="[14:05:08]">&lt;stikonas&gt;</a></span><span class="message">so maybe you can test it and then do PR to fix it where it's necessary</span></div><div class="line" id="141524"><span class="nick" style="color:#2e2a4a"><a href="#141524" label="[14:15:24]">&lt;doras&gt;</a></span><span class="message">This is how &quot;cp&quot; creates the file:</span></div><div class="line" id="141524"><span class="nick" style="color:#2e2a4a"><a href="#141524" label="[14:15:24]">&lt;doras&gt;</a></span><span class="message">[pid 3247028] open(&quot;/after/bash-2.05b/build/bash-2.05b/Makefile-new.test&quot;, O_WRONLY|O_CREAT, 0100266) = 4</span></div><div class="line" id="141548"><span class="nick" style="color:#2e2a4a"><a href="#141548" label="[14:15:48]">&lt;doras&gt;</a></span><span class="message">Notice the O_WRONLY, which means owner should have write-only permissions.</span></div><div class="line" id="141814"><span class="nick" style="color:#2e2a4a"><a href="#141814" label="[14:18:14]">&lt;doras&gt;</a></span><span class="message">And one line after the command above it uses stat() so we can see the actual permissions being 0244 (AKA &quot;--w-r--r--&quot;):</span></div><div class="line" id="141814"><span class="nick" style="color:#2e2a4a"><a href="#141814" label="[14:18:14]">&lt;doras&gt;</a></span><span class="message">[pid 3247028] fstat(4, {st_mode=S_IFREG|0244, st_size=0, ...}) = 0</span></div><div class="line" id="141858"><span class="nick" style="color:#2e2a4a"><a href="#141858" label="[14:18:58]">&lt;doras&gt;</a></span><span class="message">fstat()*</span></div><div class="line" id="142003"><span class="nick" style="color:#2e2a4a"><a href="#142003" label="[14:20:03]">&lt;doras&gt;</a></span><span class="message">Then it just keeps these permissions as-is and exits with success (0).</span></div><div class="line" id="142137"><span class="nick" style="color:#2e2a4a"><a href="#142137" label="[14:21:37]">&lt;doras&gt;</a></span><span class="message">You can see the entire execution as seen my strace here:</span></div><div class="line" id="142138"><span class="nick" style="color:#2e2a4a"><a href="#142138" label="[14:21:38]">&lt;doras&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.gnome.org/pgu2qczb4/aczafu/raw">https://paste.gnome.org/pgu2qczb4/aczafu/raw</a> </span></div><div class="line" id="142203"><span class="nick" style="color:#2e2a4a"><a href="#142203" label="[14:22:03]">&lt;doras&gt;</a></span><span class="message">by*</span></div><div class="line" id="142443"><span class="nick" style="color:#2e2a4a"><a href="#142443" label="[14:24:43]">&lt;doras&gt;</a></span><span class="message">stikonas: I'd rather fix &quot;cp&quot;.</span></div><div class="line" id="142646"><span class="nick" style="color:#6b8072"><a href="#142646" label="[14:26:46]">&lt;stikonas&gt;</a></span><span class="message">doras: it might involve implementing the stub in mes libc</span></div><div class="line" id="142725"><span class="nick" style="color:#6b8072"><a href="#142725" label="[14:27:25]">&lt;stikonas&gt;</a></span><span class="message">mes libc is really minimal and not everything works when you build complicated executables with i</span></div><div class="line" id="142728"><span class="nick" style="color:#6b8072"><a href="#142728" label="[14:27:28]">&lt;stikonas&gt;</a></span><span class="message">with it</span></div><div class="line" id="142801"><span class="nick" style="color:#2e2a4a"><a href="#142801" label="[14:28:01]">&lt;doras&gt;</a></span><span class="message">Hmmm</span></div><div class="line" id="142831"><span class="nick" style="color:#2e2a4a"><a href="#142831" label="[14:28:31]">&lt;doras&gt;</a></span><span class="message">Is the final sysc &quot;cp&quot; built with a different libc implementation?</span></div><div class="line" id="142845"><span class="nick" style="color:#2e2a4a"><a href="#142845" label="[14:28:45]">&lt;doras&gt;</a></span><span class="message">I'll check if I see the same behavior there too.</span></div><div class="line" id="142854"><span class="nick" style="color:#2e2a4a"><a href="#142854" label="[14:28:54]">&lt;doras&gt;</a></span><span class="message">For sanity reasons.</span></div><div class="line" id="143016"><span class="nick" style="color:#6b8072"><a href="#143016" label="[14:30:16]">&lt;stikonas&gt;</a></span><span class="message">doras: even step 30 cp is built with different libc</span></div><div class="line" id="143021"><span class="nick" style="color:#6b8072"><a href="#143021" label="[14:30:21]">&lt;stikonas&gt;</a></span><span class="message">so sysc is definitely fine</span></div><div class="line" id="143157"><span class="nick" style="color:#2e2a4a"><a href="#143157" label="[14:31:57]">&lt;doras&gt;</a></span><span class="message">Yeah, it seems fine.</span></div><div class="line" id="143356"><span class="nick" style="color:#6b8072"><a href="#143356" label="[14:33:56]">&lt;stikonas&gt;</a></span><span class="message">but yes, we observed other peculiar behaviour with meslibc</span></div><div class="line" id="143407"><span class="nick" style="color:#6b8072"><a href="#143407" label="[14:34:07]">&lt;stikonas&gt;</a></span><span class="message">but since we don't use it for long, we didn't focus too much on it</span></div><div class="line" id="143440"><span class="nick" style="color:#6b8072"><a href="#143440" label="[14:34:40]">&lt;stikonas&gt;</a></span><span class="message">after bash musl is the next thing...</span></div><div class="line" id="143459"><span class="nick" style="color:#6b8072"><a href="#143459" label="[14:34:59]">&lt;stikonas&gt;</a></span><span class="message">well, there is flex before musl but it's for some technical reasons</span></div><div class="line" id="143509"><span class="nick" style="color:#2e2a4a"><a href="#143509" label="[14:35:09]">&lt;doras&gt;</a></span><span class="message">This is when using the sysc &quot;cp&quot;: <a rel="nofollow" href="https://paste.gnome.org/pgkiberj0/ax43wl/raw">https://paste.gnome.org/pgkiberj0/ax43wl/raw</a> </span></div><div class="line" id="143526"><span class="nick" style="color:#6b8072"><a href="#143526" label="[14:35:26]">&lt;stikonas&gt;</a></span><span class="message">(flex 2.5.11 links against heirloom tools, so have to be built against the same libc)</span></div><div class="line" id="143550"><span class="nick" style="color:#6b8072"><a href="#143550" label="[14:35:50]">&lt;stikonas&gt;</a></span><span class="message">well, that looks fine</span></div><div class="line" id="143911"><span class="nick" style="color:#2e2a4a"><a href="#143911" label="[14:39:11]">&lt;doras&gt;</a></span><span class="message">Mmhm</span></div><div class="line" id="143922"><span class="nick" style="color:#2e2a4a"><a href="#143922" label="[14:39:22]">&lt;doras&gt;</a></span><span class="message">This this looks rather different:</span></div><div class="line" id="143922"><span class="nick" style="color:#2e2a4a"><a href="#143922" label="[14:39:22]">&lt;doras&gt;</a></span><span class="message">open(&quot;/usr/share/info/make.info-1.copy&quot;, O_WRONLY|O_CREAT|O_EXCL|O_LARGEFILE, 0644) = 4</span></div><div class="line" id="144256"><span class="nick" style="color:#2e2a4a"><a href="#144256" label="[14:42:56]">&lt;doras&gt;</a></span><span class="message">The last parameter is &quot;0644&quot;, which looks like a valid permission mask, rather than &quot;0100266&quot; in the previous case.</span></div><div class="line" id="144741"><span class="nick" style="color:#2e2a4a"><a href="#144741" label="[14:47:41]">&lt;doras&gt;</a></span><span class="message">Aha, reproduced it with sysc's &quot;cp&quot; too.</span></div><div class="line" id="144820"><span class="nick" style="color:#2e2a4a"><a href="#144820" label="[14:48:20]">&lt;doras&gt;</a></span><span class="message">Hmm... well, not exactly. Never mind.</span></div><div class="line" id="144843"><span class="nick" style="color:#6b8072"><a href="#144843" label="[14:48:43]">&lt;stikonas&gt;</a></span><span class="message">hmm, so 0100266 must be coming from mes libc</span></div><div class="line" id="144856"><span class="nick" style="color:#6b8072"><a href="#144856" label="[14:48:56]">&lt;stikonas&gt;</a></span><span class="message">well, open is called here <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/stdio/fopen.c">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/stdio/fopen.c</a> </span></div><div class="line" id="144936"><span class="nick" style="color:#6b8072"><a href="#144936" label="[14:49:36]">&lt;stikonas&gt;</a></span><span class="message">hmm, but here it just uses 0600...</span></div><div class="line" id="145124"><span class="nick" style="color:#6b8072"><a href="#145124" label="[14:51:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, probably this place <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/posix/open.c#n40">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/posix/open.c#n40</a> </span></div><div class="line" id="145139"><span class="nick" style="color:#6b8072"><a href="#145139" label="[14:51:39]">&lt;stikonas&gt;</a></span><span class="message">but it just passes through that mode...</span></div><div class="line" id="145328"><span class="nick" style="color:#2e2a4a"><a href="#145328" label="[14:53:28]">&lt;doras&gt;</a></span><span class="message">This is the correct source: <a rel="nofollow" href="https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L252">https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L252</a> </span></div><div class="line" id="145337"><span class="nick" style="color:#2e2a4a"><a href="#145337" label="[14:53:37]">&lt;doras&gt;</a></span><span class="message">I previously looked at a newer version.</span></div><div class="line" id="145445"><span class="nick" style="color:#2e2a4a"><a href="#145445" label="[14:54:45]">&lt;doras&gt;</a></span><span class="message">I think this is the previous call: <a rel="nofollow" href="https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L1379">https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L1379</a> </span></div><div class="line" id="145610"><span class="nick" style="color:#2e2a4a"><a href="#145610" label="[14:56:10]">&lt;doras&gt;</a></span><span class="message">So this may be relevant: <a rel="nofollow" href="https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L117">https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L117</a> </span></div><div class="line" id="150120"><span class="nick" style="color:#6b8072"><a href="#150120" label="[15:01:20]">&lt;stikonas&gt;</a></span><span class="message">hmm, yes, that loosk relevant</span></div><div class="line" id="150247"><span class="nick" style="color:#2e2a4a"><a href="#150247" label="[15:02:47]">&lt;doras&gt;</a></span><span class="message">According to this and the stub source code, our option-&gt;umask_kill should be all mask bits active (!0): <a rel="nofollow" href="https://github.com/coreutils/coreutils/blob/v5.0/src/cp.c#L746">https://github.com/coreutils/coreutils/blob/v5.0/src/cp.c#L746</a> </span></div><div class="line" id="155657"><span class="nick" style="color:#2e2a4a"><a href="#155657" label="[15:56:57]">&lt;doras&gt;</a></span><span class="message">I don't see any issue coreutils or in meslibc that could explain this.</span></div><div class="line" id="160223"><span class="nick" style="color:#2e2a4a"><a href="#160223" label="[16:02:23]">&lt;doras&gt;</a></span><span class="message">I'll try to add a bunch of prints in &quot;cp&quot; to see if it helps figure out what's going on here.</span></div><div class="line" id="183432"><span class="nick" style="color:#2e2a4a"><a href="#183432" label="[18:34:32]">&lt;doras&gt;</a></span><span class="message">stikonas:  the issue is in the line I highlighted above: <a rel="nofollow" href="https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L117">https://github.com/coreutils/coreutils/blob/v5.0/src/copy.c#L117</a> </span></div><div class="line" id="183636"><span class="nick" style="color:#2e2a4a"><a href="#183636" label="[18:36:36]">&lt;doras&gt;</a></span><span class="message">&quot;mode&quot; is ~0 in that function, which is essentially -1.</span></div><div class="line" id="183705"><span class="nick" style="color:#2e2a4a"><a href="#183705" label="[18:37:05]">&lt;doras&gt;</a></span><span class="message">Sorry, I mean, &quot;option-&gt;umask_kill&quot; is.</span></div><div class="line" id="183751"><span class="nick" style="color:#2e2a4a"><a href="#183751" label="[18:37:51]">&lt;doras&gt;</a></span><span class="message">&quot;mode&quot; is 100664.</span></div><div class="line" id="183950"><span class="nick" style="color:#2e2a4a"><a href="#183950" label="[18:39:50]">&lt;doras&gt;</a></span><span class="message">Yet this logic works fine on a different compiler.</span></div><div class="line" id="184043"><span class="nick" style="color:#2e2a4a"><a href="#184043" label="[18:40:43]">&lt;doras&gt;</a></span><span class="message">So either the compiler logic is broken in some form, or the defines are wrong.</span></div><div class="line" id="185059"><span class="nick" style="color:#2e2a4a"><a href="#185059" label="[18:50:59]">&lt;doras&gt;</a></span><span class="message">I added more prints to I can break down that statement into smaller parts and figure out which one is handled incorrectly.</span></div><div class="line" id="190452"><span class="nick" style="color:#6b8072"><a href="#190452" label="[19:04:52]">&lt;stikonas&gt;</a></span><span class="message">hmm, compiler is at that point tcc 0.9.26</span></div><div class="line" id="190456"><span class="nick" style="color:#6b8072"><a href="#190456" label="[19:04:56]">&lt;stikonas&gt;</a></span><span class="message">it's an old version of tcc</span></div><div class="line" id="190510"><span class="nick" style="color:#6b8072"><a href="#190510" label="[19:05:10]">&lt;stikonas&gt;</a></span><span class="message">although if necessary, we can build tcc 0.9.27</span></div><div class="line" id="190558"><span class="nick" style="color:#2e2a4a"><a href="#190558" label="[19:05:58]">&lt;doras&gt;</a></span><span class="message">I think it's tcc-0.9.27</span></div><div class="line" id="190606"><span class="nick" style="color:#2e2a4a"><a href="#190606" label="[19:06:06]">&lt;doras&gt;</a></span><span class="message">Or at least it is already built at that point.</span></div><div class="line" id="190624"><span class="nick" style="color:#6b8072"><a href="#190624" label="[19:06:24]">&lt;stikonas&gt;</a></span><span class="message">oh yes, we build it then</span></div><div class="line" id="190628"><span class="nick" style="color:#6b8072"><a href="#190628" label="[19:06:28]">&lt;stikonas&gt;</a></span><span class="message">just before coreutils</span></div><div class="line" id="190630"><span class="nick" style="color:#2e2a4a"><a href="#190630" label="[19:06:30]">&lt;doras&gt;</a></span><span class="message">I highly suspect the compiler. I'll know in a minute.</span></div><div class="line" id="190955"><span class="nick" style="color:#2e2a4a"><a href="#190955" label="[19:09:55]">&lt;doras&gt;</a></span><span class="message">Surprisingly, it's not the compiler</span></div><div class="line" id="191006"><span class="nick" style="color:#2e2a4a"><a href="#191006" label="[19:10:06]">&lt;doras&gt;</a></span><span class="message">It's the define</span></div><div class="line" id="191027"><span class="nick" style="color:#2e2a4a"><a href="#191027" label="[19:10:27]">&lt;doras&gt;</a></span><span class="message">S_ISUID is 0400 instead of 04000</span></div><div class="line" id="191042"><span class="nick" style="color:#80b1d3"><a href="#191042" label="[19:10:42]">*</a></span><span class="message">doras sighs</span></div><div class="line" id="191204"><span class="nick" style="color:#2e2a4a"><a href="#191204" label="[19:12:04]">&lt;doras&gt;</a></span><span class="message">Now where is that one coming from?</span></div><div class="line" id="191205"><span class="nick" style="color:#2e2a4a"><a href="#191205" label="[19:12:05]">&lt;doras&gt;</a></span><span class="message">I basically need the package that creates our sys/stat.h</span></div><div class="line" id="191243"><span class="nick" style="color:#2e2a4a"><a href="#191243" label="[19:12:43]">&lt;doras&gt;</a></span><span class="message">linux-headers-5.10.41?</span></div><div class="line" id="191301"><span class="nick" style="color:#2e2a4a"><a href="#191301" label="[19:13:01]">&lt;doras&gt;</a></span><span class="message">Hmmm, can't be.</span></div><div class="line" id="191316"><span class="nick" style="color:#6b8072"><a href="#191316" label="[19:13:16]">&lt;stikonas&gt;</a></span><span class="message">no, we don't use linux headers at that point</span></div><div class="line" id="191320"><span class="nick" style="color:#6b8072"><a href="#191320" label="[19:13:20]">&lt;stikonas&gt;</a></span><span class="message">it must be mes headers</span></div><div class="line" id="191345"><span class="nick" style="color:#6b8072"><a href="#191345" label="[19:13:45]">&lt;stikonas&gt;</a></span><span class="message">let me grep</span></div><div class="line" id="191359"><span class="nick" style="color:#6b8072"><a href="#191359" label="[19:13:59]">&lt;stikonas&gt;</a></span><span class="message">yes, found it</span></div><div class="line" id="191433"><span class="nick" style="color:#6b8072"><a href="#191433" label="[19:14:33]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/include/sys/stat.h#n110">https://git.savannah.gnu.org/cgit/mes.git/tree/include/sys/stat.h#n110</a> </span></div><div class="line" id="191519"><span class="nick" style="color:#2e2a4a"><a href="#191519" label="[19:15:19]">&lt;doras&gt;</a></span><span class="message">Yep!</span></div><div class="line" id="191530"><span class="nick" style="color:#6b8072"><a href="#191530" label="[19:15:30]">&lt;stikonas&gt;</a></span><span class="message">janneke: ^^</span></div><div class="line" id="191544"><span class="nick" style="color:#6b8072"><a href="#191544" label="[19:15:44]">&lt;stikonas&gt;</a></span><span class="message">S_ISUID is missing a zero at the end</span></div><div class="line" id="191618"><span class="nick" style="color:#6b8072"><a href="#191618" label="[19:16:18]">&lt;stikonas&gt;</a></span><span class="message">doras: maybe send  a patch to <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-mes/">https://lists.gnu.org/archive/html/bug-mes/</a> </span></div><div class="line" id="191713"><span class="nick" style="color:#6b8072"><a href="#191713" label="[19:17:13]">&lt;stikonas&gt;</a></span><span class="message">although, we'll also have to add that patch to mes-m2</span></div><div class="line" id="191728"><span class="nick" style="color:#6b8072"><a href="#191728" label="[19:17:28]">&lt;stikonas&gt;</a></span><span class="message">anyway, good job debugging this!</span></div><div class="line" id="191736"><span class="nick" style="color:#2e2a4a"><a href="#191736" label="[19:17:36]">&lt;doras&gt;</a></span><span class="message">:)</span></div><div class="line" id="191852"><span class="nick" style="color:#2e2a4a"><a href="#191852" label="[19:18:52]">&lt;doras&gt;</a></span><span class="message">Maybe this is also the reason all of our files in bootstrap have the setuid bit flipped.</span></div><div class="line" id="191926"><span class="nick" style="color:#2e2a4a"><a href="#191926" label="[19:19:26]">&lt;doras&gt;</a></span><span class="message">Or at least they appear to have it, I doubt they actually do.</span></div><div class="line" id="192009"><span class="nick" style="color:#2e2a4a"><a href="#192009" label="[19:20:09]">&lt;doras&gt;</a></span><span class="message">I'll start with a patch for live-bootstrap. Or is this before we build &quot;patch&quot;?</span></div><div class="line" id="192340"><span class="nick" style="color:#2e2a4a"><a href="#192340" label="[19:23:40]">&lt;doras&gt;</a></span><span class="message">Yep, it is.</span></div><div class="line" id="192424"><span class="nick" style="color:#6b8072"><a href="#192424" label="[19:24:24]">&lt;stikonas&gt;</a></span><span class="message">no, patch is already built</span></div><div class="line" id="192443"><span class="nick" style="color:#6b8072"><a href="#192443" label="[19:24:43]">&lt;stikonas&gt;</a></span><span class="message">although at that stage we have not yet rebuilt meslibc with patches</span></div><div class="line" id="192456"><span class="nick" style="color:#6b8072"><a href="#192456" label="[19:24:56]">&lt;stikonas&gt;</a></span><span class="message">but you can move things around a bit</span></div><div class="line" id="192749"><span class="nick" style="color:#2e2a4a"><a href="#192749" label="[19:27:49]">&lt;doras&gt;</a></span><span class="message">Is it?</span></div><div class="line" id="192751"><span class="nick" style="color:#2e2a4a"><a href="#192751" label="[19:27:51]">&lt;doras&gt;</a></span><span class="message">Hmmm...</span></div><div class="line" id="193031"><span class="nick" style="color:#2e2a4a"><a href="#193031" label="[19:30:31]">&lt;doras&gt;</a></span><span class="message">&quot;patch&quot; comes after &quot;mes&quot; as far as I can tell.</span></div><div class="line" id="193047"><span class="nick" style="color:#2e2a4a"><a href="#193047" label="[19:30:47]">&lt;doras&gt;</a></span><span class="message">Unless stage0 creates &quot;patch&quot; too.</span></div><div class="line" id="193129"><span class="nick" style="color:#2e2a4a"><a href="#193129" label="[19:31:29]">&lt;doras&gt;</a></span><span class="message">&quot;mes&quot; is basically the first thing we build in after.kaem as far as I can tell.</span></div><div class="line" id="193239"><span class="nick" style="color:#2e2a4a"><a href="#193239" label="[19:32:39]">&lt;doras&gt;</a></span><span class="message">It's &quot;mes&quot; -&gt; &quot;tcc&quot; -&gt; &quot;gzip&quot; -&gt; &quot;tar&quot; -&gt; &quot;sed&quot; -&gt; &quot;patch&quot;</span></div><div class="line" id="193335"><span class="nick" style="color:#6b8072"><a href="#193335" label="[19:33:35]">&lt;stikonas&gt;</a></span><span class="message">doras: yes, but there is another build of mes later</span></div><div class="line" id="193344"><span class="nick" style="color:#6b8072"><a href="#193344" label="[19:33:44]">&lt;stikonas&gt;</a></span><span class="message">or rather we should say mes libc</span></div><div class="line" id="193350"><span class="nick" style="color:#6b8072"><a href="#193350" label="[19:33:50]">&lt;stikonas&gt;</a></span><span class="message">mes itself is no longer used after tcc</span></div><div class="line" id="193408"><span class="nick" style="color:#2e2a4a"><a href="#193408" label="[19:34:08]">&lt;doras&gt;</a></span><span class="message">Both need the fix.</span></div><div class="line" id="193429"><span class="nick" style="color:#6b8072"><a href="#193429" label="[19:34:29]">&lt;stikonas&gt;</a></span><span class="message">well, for early binaries yes</span></div><div class="line" id="193435"><span class="nick" style="color:#6b8072"><a href="#193435" label="[19:34:35]">&lt;stikonas&gt;</a></span><span class="message">gzip, tar, etc...</span></div><div class="line" id="193444"><span class="nick" style="color:#2e2a4a"><a href="#193444" label="[19:34:44]">&lt;doras&gt;</a></span><span class="message">&quot;coreutils&quot; is impacted by the first &quot;mes&quot;.</span></div><div class="line" id="193451"><span class="nick" style="color:#6b8072"><a href="#193451" label="[19:34:51]">&lt;stikonas&gt;</a></span><span class="message">but mes-m2 has no releases</span></div><div class="line" id="193459"><span class="nick" style="color:#6b8072"><a href="#193459" label="[19:34:59]">&lt;stikonas&gt;</a></span><span class="message">it's an older fork of mes</span></div><div class="line" id="193503"><span class="nick" style="color:#2e2a4a"><a href="#193503" label="[19:35:03]">&lt;doras&gt;</a></span><span class="message">Which is why &quot;cp&quot; is broken.</span></div><div class="line" id="193508"><span class="nick" style="color:#6b8072"><a href="#193508" label="[19:35:08]">&lt;stikonas&gt;</a></span><span class="message">but only used with M2-Planet</span></div><div class="line" id="193516"><span class="nick" style="color:#6b8072"><a href="#193516" label="[19:35:16]">&lt;stikonas&gt;</a></span><span class="message">so we can just fix it now</span></div><div class="line" id="193525"><span class="nick" style="color:#6b8072"><a href="#193525" label="[19:35:25]">&lt;stikonas&gt;</a></span><span class="message">or at least once oriansj merges it</span></div><div class="line" id="193533"><span class="nick" style="color:#6b8072"><a href="#193533" label="[19:35:33]">&lt;stikonas&gt;</a></span><span class="message">but ideally we also send patch to upstream mes</span></div><div class="line" id="193541"><span class="nick" style="color:#2e2a4a"><a href="#193541" label="[19:35:41]">&lt;doras&gt;</a></span><span class="message">Sure</span></div><div class="line" id="193543"><span class="nick" style="color:#6b8072"><a href="#193543" label="[19:35:43]">&lt;stikonas&gt;</a></span><span class="message">since mes-m2 might be a temporary thing</span></div><div class="line" id="193555"><span class="nick" style="color:#2e2a4a"><a href="#193555" label="[19:35:55]">&lt;doras&gt;</a></span><span class="message">I'll create a fork and test the fix.</span></div><div class="line" id="194329"><span class="nick" style="color:#6b8072"><a href="#194329" label="[19:43:29]">&lt;stikonas&gt;</a></span><span class="message">doras: it won't work if you just patch mes-m2</span></div><div class="line" id="194340"><span class="nick" style="color:#6b8072"><a href="#194340" label="[19:43:40]">&lt;stikonas&gt;</a></span><span class="message">mes libc is used from mes-0.23</span></div><div class="line" id="194352"><span class="nick" style="color:#6b8072"><a href="#194352" label="[19:43:52]">&lt;stikonas&gt;</a></span><span class="message">so patching mes-m2 will have absolutely no effect</span></div><div class="line" id="194406"><span class="nick" style="color:#2e2a4a"><a href="#194406" label="[19:44:06]">&lt;doras&gt;</a></span><span class="message">I'm confused.</span></div><div class="line" id="194450"><span class="nick" style="color:#2e2a4a"><a href="#194450" label="[19:44:50]">&lt;doras&gt;</a></span><span class="message">stikonas: where is this coming from? <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes/mes.kaem#L277">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes/mes.kaem#L277</a> </span></div><div class="line" id="194536"><span class="nick" style="color:#6b8072"><a href="#194536" label="[19:45:36]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/tcc-0.9.26/tcc-0.9.26.kaem#L27">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/tcc-0.9.26/tcc-0.9.26.kaem#L27</a> </span></div><div class="line" id="194558"><span class="nick" style="color:#6b8072"><a href="#194558" label="[19:45:58]">&lt;stikonas&gt;</a></span><span class="message">oh, it might be a bigger mess</span></div><div class="line" id="194604"><span class="nick" style="color:#6b8072"><a href="#194604" label="[19:46:04]">&lt;stikonas&gt;</a></span><span class="message">headers might be from older mes-m2</span></div><div class="line" id="194617"><span class="nick" style="color:#6b8072"><a href="#194617" label="[19:46:17]">&lt;stikonas&gt;</a></span><span class="message">but library itself is from newer mes</span></div><div class="line" id="194639"><span class="nick" style="color:#6b8072"><a href="#194639" label="[19:46:39]">&lt;stikonas&gt;</a></span><span class="message">so right now actually</span></div><div class="line" id="194645"><span class="nick" style="color:#6b8072"><a href="#194645" label="[19:46:45]">&lt;stikonas&gt;</a></span><span class="message">you only need to fix header in mes-m2</span></div><div class="line" id="194652"><span class="nick" style="color:#6b8072"><a href="#194652" label="[19:46:52]">&lt;stikonas&gt;</a></span><span class="message">and I think everything will work</span></div><div class="line" id="194758"><span class="nick" style="color:#6b8072"><a href="#194758" label="[19:47:58]">&lt;stikonas&gt;</a></span><span class="message">oh, but when we build next meslibc</span></div><div class="line" id="194809"><span class="nick" style="color:#6b8072"><a href="#194809" label="[19:48:09]">&lt;stikonas&gt;</a></span><span class="message">meslibc itself uses its own headers from build tree</span></div><div class="line" id="194813"><span class="nick" style="color:#6b8072"><a href="#194813" label="[19:48:13]">&lt;stikonas&gt;</a></span><span class="message">so not sure what happens</span></div><div class="line" id="194850"><span class="nick" style="color:#6b8072"><a href="#194850" label="[19:48:50]">&lt;stikonas&gt;</a></span><span class="message">it might just work if you update mes-m2</span></div><div class="line" id="194852"><span class="nick" style="color:#2e2a4a"><a href="#194852" label="[19:48:52]">&lt;doras&gt;</a></span><span class="message">Hmhmhm</span></div><div class="line" id="194854"><span class="nick" style="color:#6b8072"><a href="#194854" label="[19:48:54]">&lt;stikonas&gt;</a></span><span class="message">but I am not sure</span></div><div class="line" id="194901"><span class="nick" style="color:#2e2a4a"><a href="#194901" label="[19:49:01]">&lt;doras&gt;</a></span><span class="message">I'll start with that.</span></div><div class="line" id="195021"><span class="nick" style="color:#6b8072"><a href="#195021" label="[19:50:21]">&lt;stikonas&gt;</a></span><span class="message">doras: some of the bugs from mes libc propatage a bit, so we had to build tcc and musl twice...</span></div><div class="line" id="195041"><span class="nick" style="color:#6b8072"><a href="#195041" label="[19:50:41]">&lt;stikonas&gt;</a></span><span class="message">but it's probably not this bug you found</span></div><div class="line" id="200050"><span class="nick" style="color:#6d2462"><a href="#200050" label="[20:00:50]">&lt;bauen1&gt;</a></span><span class="message">nice, i think i have a very simple and quite short uart read/write driver, thinks are actually easy if you're calculating the divisors with the correct clock frequency (and 24mhz != 20mhz)</span></div><div class="line" id="200802"><span class="nick" style="color:#2e2a4a"><a href="#200802" label="[20:08:02]">&lt;doras&gt;</a></span><span class="message">stikonas: it changes a few checksums.</span></div><div class="line" id="200823"><span class="nick" style="color:#2e2a4a"><a href="#200823" label="[20:08:23]">&lt;doras&gt;</a></span><span class="message">How do you update those?</span></div><div class="line" id="200824"><span class="nick" style="color:#6b8072"><a href="#200824" label="[20:08:24]">&lt;stikonas&gt;</a></span><span class="message">doras: that's expected</span></div><div class="line" id="200832"><span class="nick" style="color:#6b8072"><a href="#200832" label="[20:08:32]">&lt;stikonas&gt;</a></span><span class="message">well, just manually for now</span></div><div class="line" id="200839"><span class="nick" style="color:#6b8072"><a href="#200839" label="[20:08:39]">&lt;stikonas&gt;</a></span><span class="message">I think fossy is working on something better</span></div><div class="line" id="200842"><span class="nick" style="color:#6b8072"><a href="#200842" label="[20:08:42]">&lt;stikonas&gt;</a></span><span class="message">but I haven't seen any code</span></div><div class="line" id="200857"><span class="nick" style="color:#6b8072"><a href="#200857" label="[20:08:57]">&lt;stikonas&gt;</a></span><span class="message">it is a bit slow and annoying...</span></div><div class="line" id="200902"><span class="nick" style="color:#2e2a4a"><a href="#200902" label="[20:09:02]">&lt;doras&gt;</a></span><span class="message">The build fails when it finds a different checksum.</span></div><div class="line" id="200911"><span class="nick" style="color:#2e2a4a"><a href="#200911" label="[20:09:11]">&lt;doras&gt;</a></span><span class="message">Do you run it all over again each time?</span></div><div class="line" id="201011"><span class="nick" style="color:#234e69"><a href="#201011" label="[20:10:11]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, you can try to inject busybox sh and manually run next steps</span></div><div class="line" id="201021"><span class="nick" style="color:#234e69"><a href="#201021" label="[20:10:21]">&lt;stikonas[m]&gt;</a></span><span class="message">But it might just be simpler to let it run a few times</span></div><div class="line" id="201031"><span class="nick" style="color:#234e69"><a href="#201031" label="[20:10:31]">&lt;stikonas[m]&gt;</a></span><span class="message">And do something else in the meantime</span></div><div class="line" id="201126"><span class="nick" style="color:#2e2a4a"><a href="#201126" label="[20:11:26]">&lt;doras&gt;</a></span><span class="message">I'll try to make the checksum failures a warning instead, and maybe write them to a file.</span></div><div class="line" id="202055"><span class="nick" style="color:#234e69"><a href="#202055" label="[20:20:55]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, that might be possible now...</span></div><div class="line" id="202114"><span class="nick" style="color:#234e69"><a href="#202114" label="[20:21:14]">&lt;stikonas[m]&gt;</a></span><span class="message">I recently added support for if command in kaem</span></div><div class="line" id="202143"><span class="nick" style="color:#234e69"><a href="#202143" label="[20:21:43]">&lt;stikonas[m]&gt;</a></span><span class="message">Or alternatively sha256sum can be patched</span></div><div class="line" id="202217"><span class="nick" style="color:#2e2a4a"><a href="#202217" label="[20:22:17]">&lt;doras&gt;</a></span><span class="message">I'm actually not building sysb at all</span></div><div class="line" id="202229"><span class="nick" style="color:#2e2a4a"><a href="#202229" label="[20:22:29]">&lt;doras&gt;</a></span><span class="message">So I'm not sure if it would also differ.</span></div><div class="line" id="202338"><span class="nick" style="color:#6c3d55"><a href="#202338" label="[20:23:38]">&lt;janneke&gt;</a></span><span class="message">stikonas: thanks!</span></div><div class="line" id="202843"><span class="nick" style="color:#234e69"><a href="#202843" label="[20:28:43]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, most credit goes to doras, not me</span></div><div class="line" id="214401"><span class="nick" style="color:#6c3d55"><a href="#214401" label="[21:44:01]">&lt;janneke&gt;</a></span><span class="message">oops, thanks doras!</span></div><div class="line" id="222737"><span class="nick" style="color:#d9d9d9"><a href="#222737" label="[22:27:37]">&lt;oriansj&gt;</a></span><span class="message">nice find on S_ISUID; turns out M2libc is wrong for it as well</span></div><div class="line" id="222747"><span class="nick" style="color:#d9d9d9"><a href="#222747" label="[22:27:47]">&lt;oriansj&gt;</a></span><span class="message">so fixing that now</span></div><div class="line" id="223536"><span class="nick" style="color:#d9d9d9"><a href="#223536" label="[22:35:36]">&lt;oriansj&gt;</a></span><span class="message">also if umask was at the kernel level, the mescc-tools-extra cp would be impacted as well</span></div><div class="line" id="223938"><span class="nick" style="color:#d9d9d9"><a href="#223938" label="[22:39:38]">&lt;oriansj&gt;</a></span><span class="message">and guessing by the kernel ABI, it would probably be the sys_umask command</span></div><div class="line" id="224006"><span class="nick" style="color:#d9d9d9"><a href="#224006" label="[22:40:06]">&lt;oriansj&gt;</a></span><span class="message">So what would be making that call?</span></div><div class="line" id="235350"><span class="nick" style="color:#2e2a4a"><a href="#235350" label="[23:53:50]">&lt;doras&gt;</a></span><span class="message">janneke: sure :)</span></div><div class="line" id="235612"><span class="nick" style="color:#2e2a4a"><a href="#235612" label="[23:56:12]">&lt;doras&gt;</a></span><span class="message">Would you like me to submit a patch somewhere?</span></div><br /></div></body></html>