<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-10-26.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="024434"><span class="nick" style="color:#8dd3c7"><a href="#024434" label="[02:44:34]">&lt;oriansj&gt;</a></span><span class="message">well supporting envp is far cheaper and simpler to implement than getenv()</span></div><div class="line" id="024513"><span class="nick" style="color:#8dd3c7"><a href="#024513" label="[02:45:13]">&lt;oriansj&gt;</a></span><span class="message">to add support for getenv out of the gate would require a larger and more complex libc.M1 than is currently in M2libc</span></div><div class="line" id="024543"><span class="nick" style="color:#8dd3c7"><a href="#024543" label="[02:45:43]">&lt;oriansj&gt;</a></span><span class="message">And only 2 programs actually use envp: kaem and mes.c/MesCC</span></div><div class="line" id="122501"><span class="nick" style="color:#2e2a4a"><a href="#122501" label="[12:25:01]">&lt;gbrlwck&gt;</a></span><span class="message">i fail building mes-m2 on riscv64, because it can't find lib/m2/riscv64/ELF-riscv64-debug.hex2; when i copy it from stage0-posix hex2 complains: &quot;Target label _start is not valid&quot;</span></div><div class="line" id="122511"><span class="nick" style="color:#2e2a4a"><a href="#122511" label="[12:25:11]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: how did you build it, exactly?</span></div><div class="line" id="122738"><span class="nick" style="color:#6b8072"><a href="#122738" label="[12:27:38]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: kaem --verbose --file kaem.riscv64</span></div><div class="line" id="122751"><span class="nick" style="color:#6b8072"><a href="#122751" label="[12:27:51]">&lt;stikonas&gt;</a></span><span class="message">let me check if I forgot to commit it</span></div><div class="line" id="122818"><span class="nick" style="color:#2e2a4a"><a href="#122818" label="[12:28:18]">&lt;gbrlwck&gt;</a></span><span class="message">no, kaem.riscv64 is there :)</span></div><div class="line" id="122846"><span class="nick" style="color:#6b8072"><a href="#122846" label="[12:28:46]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: ok, ELF pushed</span></div><div class="line" id="122905"><span class="nick" style="color:#6b8072"><a href="#122905" label="[12:29:05]">&lt;stikonas&gt;</a></span><span class="message">it got ignored because .hex2 files are in .gitignore</span></div><div class="line" id="123001"><span class="nick" style="color:#6b8072"><a href="#123001" label="[12:30:01]">&lt;stikonas&gt;</a></span><span class="message">it should be there</span></div><div class="line" id="123003"><span class="nick" style="color:#6b8072"><a href="#123003" label="[12:30:03]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/stikonas/mes-m2/tree/riscv64">https://github.com/stikonas/mes-m2/tree/riscv64</a> </span></div><div class="line" id="123024"><span class="nick" style="color:#6b8072"><a href="#123024" label="[12:30:24]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: are you on my fork (and not on oriansj's or upstream mes)</span></div><div class="line" id="123104"><span class="nick" style="color:#2e2a4a"><a href="#123104" label="[12:31:04]">&lt;gbrlwck&gt;</a></span><span class="message">yes i am, but i was on the wrong branch :)</span></div><div class="line" id="123541"><span class="nick" style="color:#2e2a4a"><a href="#123541" label="[12:35:41]">&lt;gbrlwck&gt;</a></span><span class="message">ok, built!</span></div><div class="line" id="123612"><span class="nick" style="color:#2e2a4a"><a href="#123612" label="[12:36:12]">&lt;gbrlwck&gt;</a></span><span class="message">does `./bin/mes-m2 -c (display 'Hello,M2-mes!) (newline)` actually produce output in your setup?</span></div><div class="line" id="124618"><span class="nick" style="color:#2e2a4a"><a href="#124618" label="[12:46:18]">&lt;gbrlwck&gt;</a></span><span class="message">i'll try to compile with gcc and see what's happening there</span></div><div class="line" id="125010"><span class="nick" style="color:#2e2a4a"><a href="#125010" label="[12:50:10]">&lt;gbrlwck&gt;</a></span><span class="message">no, that obviously won't work (since we output M1 in asm calls)</span></div><div class="line" id="131953"><span class="nick" style="color:#2e2a4a"><a href="#131953" label="[13:19:53]">&lt;gbrlwck&gt;</a></span><span class="message">what do these _common_recursion comments mean/indicate in m2/mes.M1 (there's 5262 of them)</span></div><div class="line" id="132838"><span class="nick" style="color:#6b8072"><a href="#132838" label="[13:28:38]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: no, it does not produce output</span></div><div class="line" id="132839"><span class="nick" style="color:#6b8072"><a href="#132839" label="[13:28:39]">&lt;stikonas&gt;</a></span><span class="message">it crashes</span></div><div class="line" id="133307"><span class="nick" style="color:#2e2a4a"><a href="#133307" label="[13:33:07]">&lt;gbrlwck&gt;</a></span><span class="message">i get output like this when running the binary through strace:</span></div><div class="line" id="133309"><span class="nick" style="color:#2e2a4a"><a href="#133309" label="[13:33:09]">&lt;gbrlwck&gt;</a></span><span class="message">write(214, NULL, 274877297592)          = -1 EBADF (Bad file descriptor)</span></div><div class="line" id="133326"><span class="nick" style="color:#2e2a4a"><a href="#133326" label="[13:33:26]">&lt;gbrlwck&gt;</a></span><span class="message">does 214 mean SYS_brk? is this NULL the reason for segfault?</span></div><div class="line" id="133359"><span class="nick" style="color:#2e2a4a"><a href="#133359" label="[13:33:59]">&lt;gbrlwck&gt;</a></span><span class="message">does strace document a write sys-call here?</span></div><div class="line" id="133531"><span class="nick" style="color:#80b1d3"><a href="#133531" label="[13:35:31]">&lt;qyliss&gt;</a></span><span class="message">yes</span></div><div class="line" id="133537"><span class="nick" style="color:#80b1d3"><a href="#133537" label="[13:35:37]">&lt;qyliss&gt;</a></span><span class="message">try strace -yy to see what it's writing to</span></div><div class="line" id="133555"><span class="nick" style="color:#80b1d3"><a href="#133555" label="[13:35:55]">&lt;qyliss&gt;</a></span><span class="message">although I suppose if it's writing to a file descriptor that doesn't exist that isn't actually going to help you</span></div><div class="line" id="133601"><span class="nick" style="color:#2e2a4a"><a href="#133601" label="[13:36:01]">&lt;gbrlwck&gt;</a></span><span class="message">that's actually -yy output here</span></div><div class="line" id="133949"><span class="nick" style="color:#2e2a4a"><a href="#133949" label="[13:39:49]">&lt;gbrlwck&gt;</a></span><span class="message">not sure if i understand correctly, but do we want to write to file-descriptor 214? with content in NULL? and length of 274873537464274873537464?</span></div><div class="line" id="134033"><span class="nick" style="color:#2e2a4a"><a href="#134033" label="[13:40:33]">&lt;gbrlwck&gt;</a></span><span class="message">seems like we want to execute a syscall (214/SYS_brk) to get some more memory (?)</span></div><div class="line" id="134555"><span class="nick" style="color:#6d2462"><a href="#134555" label="[13:45:55]">&lt;nimaje&gt;</a></span><span class="message">as it says EBADF the NULL doesn't matter, but it doesn't seem like that should be a write(â€¦)</span></div><div class="line" id="134639"><span class="nick" style="color:#2e2a4a"><a href="#134639" label="[13:46:39]">&lt;gbrlwck&gt;</a></span><span class="message">wdym &quot;the NULL doesn't matter&quot;?</span></div><div class="line" id="134735"><span class="nick" style="color:#6d2462"><a href="#134735" label="[13:47:35]">&lt;nimaje&gt;</a></span><span class="message">does linux have (s)brk on riscv64? my brk manpage on freebsd says  &quot;They are deprecated and not present on the arm64 or riscv architectures.&quot;</span></div><div class="line" id="134830"><span class="nick" style="color:#2e2a4a"><a href="#134830" label="[13:48:30]">&lt;gbrlwck&gt;</a></span><span class="message">nimaje: the 214 had to come from somewhere ;)</span></div><div class="line" id="134909"><span class="nick" style="color:#2e2a4a"><a href="#134909" label="[13:49:09]">&lt;gbrlwck&gt;</a></span><span class="message">i find references to SYS_brk i.e. <a rel="nofollow" href="https://github.com/westerndigitalcorporation/RISC-V-Linux/blob/master/riscv-pk/pk/syscall.h">https://github.com/westerndigitalcorporation/RISC-V-Linux/blob/master/riscv-pk/pk/syscall.h</a> </span></div><div class="line" id="134943"><span class="nick" style="color:#6d2462"><a href="#134943" label="[13:49:43]">&lt;nimaje&gt;</a></span><span class="message">that was an answer to the &quot;is this NULL the reason for segfault?&quot; question; as it is a bad file descriptor write will just fail, but shouldn't cause a segfault</span></div><div class="line" id="135022"><span class="nick" style="color:#2e2a4a"><a href="#135022" label="[13:50:22]">&lt;gbrlwck&gt;</a></span><span class="message">huh, thanks for clarification!</span></div><div class="line" id="135225"><span class="nick" style="color:#6b8072"><a href="#135225" label="[13:52:25]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: nimaje we  definitely have sys_brk on riscv64</span></div><div class="line" id="135230"><span class="nick" style="color:#6b8072"><a href="#135230" label="[13:52:30]">&lt;stikonas&gt;</a></span><span class="message">that's what stage0-posix uses</span></div><div class="line" id="135500"><span class="nick" style="color:#6d2462"><a href="#135500" label="[13:55:00]">&lt;nimaje&gt;</a></span><span class="message">the segfault happens somewhere after that strange write, probably some misgenerated code to make a brk syscall and code after that trying to use invalid memory as a result</span></div><div class="line" id="140641"><span class="nick" style="color:#2e2a4a"><a href="#140641" label="[14:06:41]">&lt;gbrlwck&gt;</a></span><span class="message">is it possible to step through the whole execution with gdb (label _start is missing)?</span></div><div class="line" id="141652"><span class="nick" style="color:#6b8072"><a href="#141652" label="[14:16:52]">&lt;stikonas&gt;</a></span><span class="message">_start should be present</span></div><div class="line" id="141740"><span class="nick" style="color:#6b8072"><a href="#141740" label="[14:17:40]">&lt;stikonas&gt;</a></span><span class="message">it should be in lib/linux/riscv64-mes-m2/crt1.M1</span></div><div class="line" id="142318"><span class="nick" style="color:#234e69"><a href="#142318" label="[14:23:18]">&lt;deesix&gt;</a></span><span class="message">gbrlwck, I'm not sure that the word recursion is the right one everytime, but those PUSH/POP are saving intermediate results before going deeper into expressions, IIRC. See cc_core.c of M2-Planet.</span></div><div class="line" id="152442"><span class="nick" style="color:#2e2a4a"><a href="#152442" label="[15:24:42]">&lt;gbrlwck&gt;</a></span><span class="message">does `RS1_SP RS2_A0 SD` store the value in A0 in SP or the other way round?</span></div><div class="line" id="153503"><span class="nick" style="color:#6b8072"><a href="#153503" label="[15:35:03]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: it stores A0 in SP</span></div><div class="line" id="153530"><span class="nick" style="color:#6b8072"><a href="#153530" label="[15:35:30]">&lt;stikonas&gt;</a></span><span class="message">so it's pushing onto the stack</span></div><div class="line" id="153547"><span class="nick" style="color:#6b8072"><a href="#153547" label="[15:35:47]">&lt;stikonas&gt;</a></span><span class="message">then you can pop from the stack with RD_A0 RS1_SP LD</span></div><div class="line" id="153604"><span class="nick" style="color:#2e2a4a"><a href="#153604" label="[15:36:04]">&lt;gbrlwck&gt;</a></span><span class="message">i see</span></div><div class="line" id="155849"><span class="nick" style="color:#6c3d55"><a href="#155849" label="[15:58:49]">&lt;muurkha&gt;</a></span><span class="message">not *in* SP but *at* SP</span></div><div class="line" id="155924"><span class="nick" style="color:#6c3d55"><a href="#155924" label="[15:59:24]">&lt;muurkha&gt;</a></span><span class="message">you have to increment and decrement SP separately, but I'm guessing gbrlwck is looking at the code so that goes without saying</span></div><div class="line" id="160833"><span class="nick" style="color:#2e2a4a"><a href="#160833" label="[16:08:33]">&lt;gbrlwck&gt;</a></span><span class="message">thanks for clarification! are we sure RV64 follows RV32 conventions (i saw mentions of this not being the case)</span></div><div class="line" id="163345"><span class="nick" style="color:#6b8072"><a href="#163345" label="[16:33:45]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: which conventions?</span></div><div class="line" id="163403"><span class="nick" style="color:#6b8072"><a href="#163403" label="[16:34:03]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet has its own calling convention and does not follow standard risc-v callin conventions</span></div><div class="line" id="163458"><span class="nick" style="color:#6b8072"><a href="#163458" label="[16:34:58]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet is mostly stack based (and does the same thing for all arches)</span></div><div class="line" id="163502"><span class="nick" style="color:#6b8072"><a href="#163502" label="[16:35:02]">&lt;stikonas&gt;</a></span><span class="message">so it uses very few registers</span></div><div class="line" id="163506"><span class="nick" style="color:#2e2a4a"><a href="#163506" label="[16:35:06]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://inst.eecs.berkeley.edu/~cs61c/sp18/lec/06/lec06.pdf">https://inst.eecs.berkeley.edu/~cs61c/sp18/lec/06/lec06.pdf</a>  page 50</span></div><div class="line" id="163508"><span class="nick" style="color:#6b8072"><a href="#163508" label="[16:35:08]">&lt;stikonas&gt;</a></span><span class="message">(since x86 does not have that many)</span></div><div class="line" id="163608"><span class="nick" style="color:#6b8072"><a href="#163608" label="[16:36:08]">&lt;stikonas&gt;</a></span><span class="message">well, the difference is pointer size I guess</span></div><div class="line" id="163646"><span class="nick" style="color:#6b8072"><a href="#163646" label="[16:36:46]">&lt;stikonas&gt;</a></span><span class="message">s/pointer/register/</span></div><div class="line" id="163648"><span class="nick" style="color:#6b8072"><a href="#163648" label="[16:36:48]">&lt;stikonas&gt;</a></span><span class="message">for RV32 you add 4 bytes to push register to stack</span></div><div class="line" id="163655"><span class="nick" style="color:#6b8072"><a href="#163655" label="[16:36:55]">&lt;stikonas&gt;</a></span><span class="message">but for RV64 you need 8 bytes</span></div><div class="line" id="163816"><span class="nick" style="color:#6b8072"><a href="#163816" label="[16:38:16]">&lt;stikonas&gt;</a></span><span class="message">.reserved .text .data and .stack spaces should be the same...</span></div><div class="line" id="163908"><span class="nick" style="color:#6b8072"><a href="#163908" label="[16:39:08]">&lt;stikonas&gt;</a></span><span class="message">well, mes uses different base-address</span></div><div class="line" id="163918"><span class="nick" style="color:#6b8072"><a href="#163918" label="[16:39:18]">&lt;stikonas&gt;</a></span><span class="message">but that just sets where .text starts</span></div><div class="line" id="164125"><span class="nick" style="color:#6b8072"><a href="#164125" label="[16:41:25]">&lt;stikonas&gt;</a></span><span class="message">but M2-Planet mostly uses only stack pointer SP, base pointer FP, A0, A1, return address RA, TP register as temp register when doign recursion and T1 when loading big number</span></div><div class="line" id="164129"><span class="nick" style="color:#6b8072"><a href="#164129" label="[16:41:29]">&lt;stikonas&gt;</a></span><span class="message">but mostly A0 and A1</span></div><div class="line" id="164154"><span class="nick" style="color:#6b8072"><a href="#164154" label="[16:41:54]">&lt;stikonas&gt;</a></span><span class="message">well, and implicitely it uses zero register...</span></div><div class="line" id="164159"><span class="nick" style="color:#6b8072"><a href="#164159" label="[16:41:59]">&lt;stikonas&gt;</a></span><span class="message">but that's not visible in M1</span></div><div class="line" id="164318"><span class="nick" style="color:#6b8072"><a href="#164318" label="[16:43:18]">&lt;stikonas&gt;</a></span><span class="message">and when making function calls, M2-Planet's convention is to push arguments onto stack while in calling function</span></div><div class="line" id="164326"><span class="nick" style="color:#6b8072"><a href="#164326" label="[16:43:26]">&lt;stikonas&gt;</a></span><span class="message">then called functions pulls them from stack</span></div><div class="line" id="165601"><span class="nick" style="color:#2e2a4a"><a href="#165601" label="[16:56:01]">&lt;gbrlwck&gt;</a></span><span class="message">do we expect the bug to be in M2-Planet?</span></div><div class="line" id="170719"><span class="nick" style="color:#2e2a4a"><a href="#170719" label="[17:07:19]">&lt;gbrlwck&gt;</a></span><span class="message">and circling back to the SYS_brk thingy: i've read that SYS_brk may work with small amounts of data but might raise a segfault when trying to gain access on too much memory.  the crash happens *really early* -- maybe we're just trying to initialize too many globels (there are a few in mes) ?</span></div><div class="line" id="171220"><span class="nick" style="color:#2e2a4a"><a href="#171220" label="[17:12:20]">&lt;gbrlwck&gt;</a></span><span class="message">readelf does shows neither .heap nor .stack sections.  is this as intended?</span></div><div class="line" id="172034"><span class="nick" style="color:#6d2462"><a href="#172034" label="[17:20:34]">&lt;nimaje&gt;</a></span><span class="message">why would there a .stack section in a binary? heap and stack start both empty and are dynamically managed while the program is running</span></div><div class="line" id="173522"><span class="nick" style="color:#6b8072"><a href="#173522" label="[17:35:22]">&lt;stikonas&gt;</a></span><span class="message">nimaje: no, .stack is not in binary, I was talking about memory layout after loading</span></div><div class="line" id="173602"><span class="nick" style="color:#6b8072"><a href="#173602" label="[17:36:02]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: unlikely to be because of SYS_brk</span></div><div class="line" id="173614"><span class="nick" style="color:#6b8072"><a href="#173614" label="[17:36:14]">&lt;stikonas&gt;</a></span><span class="message">we did hit similar SYS_brk issue with qemu</span></div><div class="line" id="173633"><span class="nick" style="color:#6b8072"><a href="#173633" label="[17:36:33]">&lt;stikonas&gt;</a></span><span class="message">but that was after reserving maybe 16 MB of data</span></div><div class="line" id="173642"><span class="nick" style="color:#6b8072"><a href="#173642" label="[17:36:42]">&lt;stikonas&gt;</a></span><span class="message">(this happened in M1 I think )</span></div><div class="line" id="173647"><span class="nick" style="color:#6b8072"><a href="#173647" label="[17:36:47]">&lt;stikonas&gt;</a></span><span class="message">or  rather M0</span></div><div class="line" id="173725"><span class="nick" style="color:#6b8072"><a href="#173725" label="[17:37:25]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: as for whether the bug is in M2-Planet, we don't know</span></div><div class="line" id="173741"><span class="nick" style="color:#6b8072"><a href="#173741" label="[17:37:41]">&lt;stikonas&gt;</a></span><span class="message">but M2-Planet is self-hosting, we build it with itself</span></div><div class="line" id="173805"><span class="nick" style="color:#6b8072"><a href="#173805" label="[17:38:05]">&lt;stikonas&gt;</a></span><span class="message">and it uses (slightly different malloc compared to meslibc) when building itself</span></div><div class="line" id="173826"><span class="nick" style="color:#6b8072"><a href="#173826" label="[17:38:26]">&lt;stikonas&gt;</a></span><span class="message">so can't be completely broken</span></div><div class="line" id="173858"><span class="nick" style="color:#6b8072"><a href="#173858" label="[17:38:58]">&lt;stikonas&gt;</a></span><span class="message">anyway, right now the bug could be anywhere...</span></div><div class="line" id="173904"><span class="nick" style="color:#6b8072"><a href="#173904" label="[17:39:04]">&lt;stikonas&gt;</a></span><span class="message">might even be in crt1.M1</span></div><div class="line" id="174156"><span class="nick" style="color:#6b8072"><a href="#174156" label="[17:41:56]">&lt;stikonas&gt;</a></span><span class="message">(given that M2-Planet is self-hosting, it can't be completely broken)</span></div><div class="line" id="174204"><span class="nick" style="color:#6b8072"><a href="#174204" label="[17:42:04]">&lt;stikonas&gt;</a></span><span class="message">(so bug is more likely to be in new code)</span></div><div class="line" id="175753"><span class="nick" style="color:#2e2a4a"><a href="#175753" label="[17:57:53]">&lt;gbrlwck&gt;</a></span><span class="message">would it be an option to compile simpler programs with our M2 toolchain until we hit the same bug?</span></div><div class="line" id="175800"><span class="nick" style="color:#2e2a4a"><a href="#175800" label="[17:58:00]">&lt;gbrlwck&gt;</a></span><span class="message">TDD style?</span></div><div class="line" id="175827"><span class="nick" style="color:#6b8072"><a href="#175827" label="[17:58:27]">&lt;stikonas&gt;</a></span><span class="message">yes, that's one way to find the bug</span></div><div class="line" id="175832"><span class="nick" style="color:#6b8072"><a href="#175832" label="[17:58:32]">&lt;stikonas&gt;</a></span><span class="message">find a smallest reproducer</span></div><div class="line" id="175841"><span class="nick" style="color:#6b8072"><a href="#175841" label="[17:58:41]">&lt;stikonas&gt;</a></span><span class="message">although all previous programs were built with M2libc</span></div><div class="line" id="175845"><span class="nick" style="color:#6b8072"><a href="#175845" label="[17:58:45]">&lt;stikonas&gt;</a></span><span class="message">and mes has its own libc</span></div><div class="line" id="175902"><span class="nick" style="color:#6b8072"><a href="#175902" label="[17:59:02]">&lt;stikonas&gt;</a></span><span class="message">so you might want to build something very small with mes libc</span></div><div class="line" id="175920"><span class="nick" style="color:#6b8072"><a href="#175920" label="[17:59:20]">&lt;stikonas&gt;</a></span><span class="message">start with hello world or something like that</span></div><div class="line" id="185744"><span class="nick" style="color:#2e2a4a"><a href="#185744" label="[18:57:44]">&lt;gbrlwck&gt;</a></span><span class="message">M1 reports: Target label GLOBAL___stdin is not valid.  did i forget an include? <a rel="nofollow" href="https://github.com/gbrlwck/mes-m2/tree/tdd-bughunt">https://github.com/gbrlwck/mes-m2/tree/tdd-bughunt</a> </span></div><div class="line" id="185812"><span class="nick" style="color:#2e2a4a"><a href="#185812" label="[18:58:12]">&lt;gbrlwck&gt;</a></span><span class="message">this happens with both: kaem-test.riscv64 and kaem-test.riscv64-minimal</span></div><div class="line" id="191637"><span class="nick" style="color:#6b8072"><a href="#191637" label="[19:16:37]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: probably missing include/m2/lib.h</span></div><div class="line" id="191712"><span class="nick" style="color:#6b8072"><a href="#191712" label="[19:17:12]">&lt;stikonas&gt;</a></span><span class="message">that's where that global is defined</span></div><div class="line" id="191747"><span class="nick" style="color:#6b8072"><a href="#191747" label="[19:17:47]">&lt;stikonas&gt;</a></span><span class="message">actually you have it in kaem file...</span></div><div class="line" id="192514"><span class="nick" style="color:#6b8072"><a href="#192514" label="[19:25:14]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: I tried it and my error is include/stdio.h:27:#define missing actual definition</span></div><div class="line" id="192524"><span class="nick" style="color:#6b8072"><a href="#192524" label="[19:25:24]">&lt;stikonas&gt;</a></span><span class="message">I think you are running kaem without --strict</span></div><div class="line" id="192539"><span class="nick" style="color:#6b8072"><a href="#192539" label="[19:25:39]">&lt;stikonas&gt;</a></span><span class="message">so it continues with linking despite compile failure</span></div><div class="line" id="192732"><span class="nick" style="color:#6b8072"><a href="#192732" label="[19:27:32]">&lt;stikonas&gt;</a></span><span class="message">it's somewhat annoying but meslibc has lots of ifndefs that M2-Planet does not support</span></div><div class="line" id="193110"><span class="nick" style="color:#6b8072"><a href="#193110" label="[19:31:10]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: and printf might be too complicated here</span></div><div class="line" id="193117"><span class="nick" style="color:#6b8072"><a href="#193117" label="[19:31:17]">&lt;stikonas&gt;</a></span><span class="message">start with fputs</span></div><div class="line" id="193836"><span class="nick" style="color:#2e2a4a"><a href="#193836" label="[19:38:36]">&lt;gbrlwck&gt;</a></span><span class="message">i'll try that</span></div><div class="line" id="193914"><span class="nick" style="color:#2e2a4a"><a href="#193914" label="[19:39:14]">&lt;gbrlwck&gt;</a></span><span class="message">i get a segfault when trying to compile</span></div><div class="line" id="194101"><span class="nick" style="color:#6b8072"><a href="#194101" label="[19:41:01]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: ok, I got it working</span></div><div class="line" id="194138"><span class="nick" style="color:#6b8072"><a href="#194138" label="[19:41:38]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: not sure if all changes are needed <a rel="nofollow" href="https://github.com/stikonas/mes-m2/tree/tdd-bughunt">https://github.com/stikonas/mes-m2/tree/tdd-bughunt</a> </span></div><div class="line" id="194224"><span class="nick" style="color:#6b8072"><a href="#194224" label="[19:42:24]">&lt;stikonas&gt;</a></span><span class="message">I removed some files from compilation list later</span></div><div class="line" id="194328"><span class="nick" style="color:#6b8072"><a href="#194328" label="[19:43:28]">&lt;stikonas&gt;</a></span><span class="message">it's also the issue that nor all mes libc is supported by M2-Planet</span></div><div class="line" id="194337"><span class="nick" style="color:#6b8072"><a href="#194337" label="[19:43:37]">&lt;stikonas&gt;</a></span><span class="message">you sometimes have to restrict yourself to mini subset</span></div><div class="line" id="194449"><span class="nick" style="color:#6b8072"><a href="#194449" label="[19:44:49]">&lt;stikonas&gt;</a></span><span class="message">argh, now accidentally squashed my changes into your commit</span></div><div class="line" id="194553"><span class="nick" style="color:#6b8072"><a href="#194553" label="[19:45:53]">&lt;stikonas&gt;</a></span><span class="message">ok, fixed (force-pushed)</span></div><div class="line" id="194651"><span class="nick" style="color:#6b8072"><a href="#194651" label="[19:46:51]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: so diff is <a rel="nofollow" href="https://github.com/stikonas/mes-m2/commit/a7a81d2671237bf3b4f722fd92d4b63583dd0503">https://github.com/stikonas/mes-m2/commit/a7a81d2671237bf3b4f722fd92d4b63583dd0503</a> </span></div><div class="line" id="194920"><span class="nick" style="color:#2e2a4a"><a href="#194920" label="[19:49:20]">&lt;gbrlwck&gt;</a></span><span class="message">this is weird</span></div><div class="line" id="194937"><span class="nick" style="color:#6b8072"><a href="#194937" label="[19:49:37]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="194959"><span class="nick" style="color:#2e2a4a"><a href="#194959" label="[19:49:59]">&lt;gbrlwck&gt;</a></span><span class="message">still got a segfault with M2-Planet</span></div><div class="line" id="195025"><span class="nick" style="color:#6b8072"><a href="#195025" label="[19:50:25]">&lt;stikonas&gt;</a></span><span class="message">are you using latest M2-Planet?</span></div><div class="line" id="195033"><span class="nick" style="color:#6b8072"><a href="#195033" label="[19:50:33]">&lt;stikonas&gt;</a></span><span class="message">or the one from stage0-posix</span></div><div class="line" id="195037"><span class="nick" style="color:#6b8072"><a href="#195037" label="[19:50:37]">&lt;stikonas&gt;</a></span><span class="message">there are newer commits</span></div><div class="line" id="195040"><span class="nick" style="color:#2e2a4a"><a href="#195040" label="[19:50:40]">&lt;gbrlwck&gt;</a></span><span class="message">ahh</span></div><div class="line" id="195048"><span class="nick" style="color:#2e2a4a"><a href="#195048" label="[19:50:48]">&lt;gbrlwck&gt;</a></span><span class="message">M2-Planet is most recent?</span></div><div class="line" id="195053"><span class="nick" style="color:#6b8072"><a href="#195053" label="[19:50:53]">&lt;stikonas&gt;</a></span><span class="message">you need newest</span></div><div class="line" id="195058"><span class="nick" style="color:#6b8072"><a href="#195058" label="[19:50:58]">&lt;stikonas&gt;</a></span><span class="message">oriansj made some fixes</span></div><div class="line" id="195115"><span class="nick" style="color:#6b8072"><a href="#195115" label="[19:51:15]">&lt;stikonas&gt;</a></span><span class="message">&quot;Catch segfault for half defined #defines and provide a warning for #unkowns&quot;</span></div><div class="line" id="195137"><span class="nick" style="color:#6b8072"><a href="#195137" label="[19:51:37]">&lt;stikonas&gt;</a></span><span class="message">feel free to update M2-Planet in stage0-posix</span></div><div class="line" id="195209"><span class="nick" style="color:#2e2a4a"><a href="#195209" label="[19:52:09]">&lt;gbrlwck&gt;</a></span><span class="message">this might be easiest :)</span></div><div class="line" id="195213"><span class="nick" style="color:#6b8072"><a href="#195213" label="[19:52:13]">&lt;stikonas&gt;</a></span><span class="message">although, you need to setup qemu for other arches too</span></div><div class="line" id="195215"><span class="nick" style="color:#6b8072"><a href="#195215" label="[19:52:15]">&lt;stikonas&gt;</a></span><span class="message">to update checksums</span></div><div class="line" id="195223"><span class="nick" style="color:#6b8072"><a href="#195223" label="[19:52:23]">&lt;stikonas&gt;</a></span><span class="message">if you don't have that, I can make merge request</span></div><div class="line" id="195444"><span class="nick" style="color:#6b8072"><a href="#195444" label="[19:54:44]">&lt;stikonas&gt;</a></span><span class="message">ok, I'm preparing update then</span></div><div class="line" id="195455"><span class="nick" style="color:#6b8072"><a href="#195455" label="[19:54:55]">&lt;stikonas&gt;</a></span><span class="message">will update mescc-tools too</span></div><div class="line" id="195924"><span class="nick" style="color:#2e2a4a"><a href="#195924" label="[19:59:24]">&lt;gbrlwck&gt;</a></span><span class="message">i pushed to my stage0-posix</span></div><div class="line" id="195937"><span class="nick" style="color:#2e2a4a"><a href="#195937" label="[19:59:37]">&lt;gbrlwck&gt;</a></span><span class="message">but i haven't updated the checksum yet</span></div><div class="line" id="200019"><span class="nick" style="color:#6b8072"><a href="#200019" label="[20:00:19]">&lt;stikonas&gt;</a></span><span class="message">well, I'll update all</span></div><div class="line" id="200032"><span class="nick" style="color:#6b8072"><a href="#200032" label="[20:00:32]">&lt;stikonas&gt;</a></span><span class="message">cause we need to update checksums for other archees too</span></div><div class="line" id="200038"><span class="nick" style="color:#6b8072"><a href="#200038" label="[20:00:38]">&lt;stikonas&gt;</a></span><span class="message">testing aarch64 now</span></div><div class="line" id="200415"><span class="nick" style="color:#6b8072"><a href="#200415" label="[20:04:15]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/63">https://github.com/oriansj/stage0-posix/pull/63</a> </span></div><div class="line" id="200526"><span class="nick" style="color:#2e2a4a"><a href="#200526" label="[20:05:26]">&lt;gbrlwck&gt;</a></span><span class="message">nice, thanks</span></div><div class="line" id="200601"><span class="nick" style="color:#6b8072"><a href="#200601" label="[20:06:01]">&lt;stikonas&gt;</a></span><span class="message">this also pulls in newer kaem that will not continue after segfault in --strict mode</span></div><div class="line" id="201044"><span class="nick" style="color:#2e2a4a"><a href="#201044" label="[20:10:44]">&lt;gbrlwck&gt;</a></span><span class="message">i'm not completely sure how i've read the backlog of how you guys did that and still missed it</span></div><div class="line" id="201756"><span class="nick" style="color:#2e2a4a"><a href="#201756" label="[20:17:56]">&lt;gbrlwck&gt;</a></span><span class="message">huh, different output, but it's still not working.. i'm gonna take a break and report back later</span></div><div class="line" id="203144"><span class="nick" style="color:#6b8072"><a href="#203144" label="[20:31:44]">&lt;stikonas&gt;</a></span><span class="message">hmm, malloc seems to work too</span></div><div class="line" id="205415"><span class="nick" style="color:#6b8072"><a href="#205415" label="[20:54:15]">&lt;stikonas&gt;</a></span><span class="message">ok, I might have found the bug...</span></div><div class="line" id="205537"><span class="nick" style="color:#6b8072"><a href="#205537" label="[20:55:37]">&lt;stikonas&gt;</a></span><span class="message">I messed something up in syscall.c</span></div><div class="line" id="205550"><span class="nick" style="color:#6b8072"><a href="#205550" label="[20:55:50]">&lt;stikonas&gt;</a></span><span class="message">some copy-paste error</span></div><div class="line" id="205611"><span class="nick" style="color:#6b8072"><a href="#205611" label="[20:56:11]">&lt;stikonas&gt;</a></span><span class="message">so all syscalls were write syscalls</span></div><div class="line" id="205812"><span class="nick" style="color:#6b8072"><a href="#205812" label="[20:58:12]">&lt;stikonas&gt;</a></span><span class="message">now the crash is somewhere further</span></div><div class="line" id="205846"><span class="nick" style="color:#6b8072"><a href="#205846" label="[20:58:46]">&lt;stikonas&gt;</a></span><span class="message">in getenv...</span></div><div class="line" id="205854"><span class="nick" style="color:#6b8072"><a href="#205854" label="[20:58:54]">&lt;stikonas&gt;</a></span><span class="message">ok, I didn't implement environment yet</span></div><div class="line" id="205920"><span class="nick" style="color:#6b8072"><a href="#205920" label="[20:59:20]">&lt;stikonas&gt;</a></span><span class="message">or maybe messed up implementing it</span></div><div class="line" id="224203"><span class="nick" style="color:#8dd3c7"><a href="#224203" label="[22:42:03]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged</span></div><div class="line" id="224247"><span class="nick" style="color:#6b8072"><a href="#224247" label="[22:42:47]">&lt;stikonas&gt;</a></span><span class="message">oriansj: thanks</span></div><div class="line" id="224319"><span class="nick" style="color:#6b8072"><a href="#224319" label="[22:43:19]">&lt;stikonas&gt;</a></span><span class="message">oriansj: maybe you can spot something bad in my crt1.M1?</span></div><div class="line" id="224325"><span class="nick" style="color:#6b8072"><a href="#224325" label="[22:43:25]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/stikonas/mes-m2/commit/1928eef6236c772e2b309fa066e6b03216db8a7b">https://github.com/stikonas/mes-m2/commit/1928eef6236c772e2b309fa066e6b03216db8a7b</a> </span></div><div class="line" id="225334"><span class="nick" style="color:#8dd3c7"><a href="#225334" label="[22:53:34]">&lt;oriansj&gt;</a></span><span class="message">I don't see the setting up of argc</span></div><div class="line" id="225349"><span class="nick" style="color:#6b8072"><a href="#225349" label="[22:53:49]">&lt;stikonas&gt;</a></span><span class="message">oh yes, that's right...</span></div><div class="line" id="225411"><span class="nick" style="color:#8dd3c7"><a href="#225411" label="[22:54:11]">&lt;oriansj&gt;</a></span><span class="message">as it is push argc, argv and then envp</span></div><div class="line" id="225550"><span class="nick" style="color:#6b8072"><a href="#225550" label="[22:55:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, strange that it worked in m2libc...</span></div><div class="line" id="225553"><span class="nick" style="color:#6b8072"><a href="#225553" label="[22:55:53]">&lt;stikonas&gt;</a></span><span class="message">I think it's missing there too</span></div><div class="line" id="225557"><span class="nick" style="color:#6b8072"><a href="#225557" label="[22:55:57]">&lt;stikonas&gt;</a></span><span class="message">unless I misunderstand something</span></div><div class="line" id="225620"><span class="nick" style="color:#8dd3c7"><a href="#225620" label="[22:56:20]">&lt;oriansj&gt;</a></span><span class="message">well M2libc does it simpler: <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/x86/libc-full.M1">https://github.com/oriansj/M2libc/blob/main/x86/libc-full.M1</a> </span></div><div class="line" id="225750"><span class="nick" style="color:#8dd3c7"><a href="#225750" label="[22:57:50]">&lt;oriansj&gt;</a></span><span class="message">as it leaves argc on the stack and then puts argv and envp in the M2-Planet order, rather than the linux envp, argv, argc order</span></div><div class="line" id="225903"><span class="nick" style="color:#8dd3c7"><a href="#225903" label="[22:59:03]">&lt;oriansj&gt;</a></span><span class="message">and M2libc does file setup in C code to keep everything simpler.</span></div><div class="line" id="225948"><span class="nick" style="color:#8dd3c7"><a href="#225948" label="[22:59:48]">&lt;oriansj&gt;</a></span><span class="message">(less pieces in assembly make for easier porting)</span></div><div class="line" id="230042"><span class="nick" style="color:#8dd3c7"><a href="#230042" label="[23:00:42]">&lt;oriansj&gt;</a></span><span class="message">it is the reason why I wanted to port mes-m2 to able to directly use M2libc (so it gains all architectures for free)</span></div><div class="line" id="230120"><span class="nick" style="color:#6b8072"><a href="#230120" label="[23:01:20]">&lt;stikonas&gt;</a></span><span class="message">indeed, the more is in C, the simpler it is</span></div><div class="line" id="230145"><span class="nick" style="color:#8dd3c7"><a href="#230145" label="[23:01:45]">&lt;oriansj&gt;</a></span><span class="message">although I might need to add a few additions to M2libc to make it finally be a drop in replacement.</span></div><div class="line" id="230251"><span class="nick" style="color:#8dd3c7"><a href="#230251" label="[23:02:51]">&lt;oriansj&gt;</a></span><span class="message">although getting mes-m2 GCC buildable would be an important half step</span></div><div class="line" id="230647"><span class="nick" style="color:#8dd3c7"><a href="#230647" label="[23:06:47]">&lt;oriansj&gt;</a></span><span class="message">I probably should take the time to fix that for you</span></div><div class="line" id="232707"><span class="nick" style="color:#6b8072"><a href="#232707" label="[23:27:07]">&lt;stikonas&gt;</a></span><span class="message">oriansj: is it intentional that it's argc argv and envp. I am now looking at other crt's, e.g. x86_64-mescc and it does the opposite order, envp, argv and then argc</span></div><div class="line" id="232801"><span class="nick" style="color:#8dd3c7"><a href="#232801" label="[23:28:01]">&lt;oriansj&gt;</a></span><span class="message">well the other crts are what MesCC uses not M2-Planet if I remember correctly</span></div><div class="line" id="232836"><span class="nick" style="color:#6b8072"><a href="#232836" label="[23:28:36]">&lt;stikonas&gt;</a></span><span class="message">yes, we only have x86-mes-m2 for now...</span></div><div class="line" id="232937"><span class="nick" style="color:#8dd3c7"><a href="#232937" label="[23:29:37]">&lt;oriansj&gt;</a></span><span class="message">So doing different ordering on the stack for arguments isn't unexpected.</span></div><div class="line" id="233033"><span class="nick" style="color:#6b8072"><a href="#233033" label="[23:30:33]">&lt;stikonas&gt;</a></span><span class="message">hmm, something is still messed up</span></div><div class="line" id="233039"><span class="nick" style="color:#6b8072"><a href="#233039" label="[23:30:39]">&lt;stikonas&gt;</a></span><span class="message">even with argc added</span></div><div class="line" id="233112"><span class="nick" style="color:#6b8072"><a href="#233112" label="[23:31:12]">&lt;stikonas&gt;</a></span><span class="message">hmm, compared to x86, I don't have sub____$i32,%esp %0x1054</span></div><div class="line" id="233123"><span class="nick" style="color:#6b8072"><a href="#233123" label="[23:31:23]">&lt;stikonas&gt;</a></span><span class="message">what is 0x1054?</span></div><div class="line" id="233254"><span class="nick" style="color:#8dd3c7"><a href="#233254" label="[23:32:54]">&lt;oriansj&gt;</a></span><span class="message">that is unfortunately meslibc magic which I believe is related to setenv but am not certain.</span></div><div class="line" id="233411"><span class="nick" style="color:#6b8072"><a href="#233411" label="[23:34:11]">&lt;stikonas&gt;</a></span><span class="message">oh ok, that might be the issue</span></div><div class="line" id="233417"><span class="nick" style="color:#6b8072"><a href="#233417" label="[23:34:17]">&lt;stikonas&gt;</a></span><span class="message">not sure if it has to be adjusted to 64-bits...</span></div><div class="line" id="233421"><span class="nick" style="color:#6b8072"><a href="#233421" label="[23:34:21]">&lt;stikonas&gt;</a></span><span class="message">possibly...</span></div><div class="line" id="233448"><span class="nick" style="color:#8dd3c7"><a href="#233448" label="[23:34:48]">&lt;oriansj&gt;</a></span><span class="message">mes.c is EXTREMELY touchy even with GCC (in fact it took me a couple months just to get GCC to compile mes.c in my first attempt at porting mes.c to M2-Planet (which failed))</span></div><div class="line" id="233646"><span class="nick" style="color:#8dd3c7"><a href="#233646" label="[23:36:46]">&lt;oriansj&gt;</a></span><span class="message">it ultimately took 2-3 years and janneke doing a heroic effort to get M2-Planet building mes.c</span></div><div class="line" id="233815"><span class="nick" style="color:#6b8072"><a href="#233815" label="[23:38:15]">&lt;stikonas&gt;</a></span><span class="message">yes, I know...</span></div><div class="line" id="233817"><span class="nick" style="color:#8dd3c7"><a href="#233817" label="[23:38:17]">&lt;oriansj&gt;</a></span><span class="message">not sure if it speaks more to all the ugly flaws in M2-Planet or the complexity of doing a scheme.</span></div><div class="line" id="233819"><span class="nick" style="color:#6b8072"><a href="#233819" label="[23:38:19]">&lt;stikonas&gt;</a></span><span class="message">and it's still only in a branch</span></div><div class="line" id="233828"><span class="nick" style="color:#6b8072"><a href="#233828" label="[23:38:28]">&lt;stikonas&gt;</a></span><span class="message">well, M2-Planet now has some minimal preprocessor</span></div><div class="line" id="233834"><span class="nick" style="color:#6b8072"><a href="#233834" label="[23:38:34]">&lt;stikonas&gt;</a></span><span class="message">so things might be a bit easier</span></div><div class="line" id="233948"><span class="nick" style="color:#8dd3c7"><a href="#233948" label="[23:39:48]">&lt;oriansj&gt;</a></span><span class="message">I hope but I think janneke is done with dealing with M2-Planet and mes.c is a bit of reminder how bad I am at working with interpreters</span></div><div class="line" id="234342"><span class="nick" style="color:#8dd3c7"><a href="#234342" label="[23:43:42]">&lt;oriansj&gt;</a></span><span class="message">So I'll try to help but I can't promise I'll be very helpful.</span></div><div class="line" id="234507"><span class="nick" style="color:#6b8072"><a href="#234507" label="[23:45:07]">&lt;stikonas&gt;</a></span><span class="message">well, if mes-m2 can use M2libc at some point in the future, starting mes might be easier</span></div><div class="line" id="234813"><span class="nick" style="color:#8dd3c7"><a href="#234813" label="[23:48:13]">&lt;oriansj&gt;</a></span><span class="message">well it would be instantly ported to every architecture supported by M2libc</span></div><div class="line" id="234835"><span class="nick" style="color:#6b8072"><a href="#234835" label="[23:48:35]">&lt;stikonas&gt;</a></span><span class="message">ok, found another issue, not environment seems fine</span></div><div class="line" id="234843"><span class="nick" style="color:#6b8072"><a href="#234843" label="[23:48:43]">&lt;stikonas&gt;</a></span><span class="message">(or better)</span></div><div class="line" id="234853"><span class="nick" style="color:#6b8072"><a href="#234853" label="[23:48:53]">&lt;stikonas&gt;</a></span><span class="message">instead of crash I'm getting</span></div><div class="line" id="234856"><span class="nick" style="color:#6b8072"><a href="#234856" label="[23:48:56]">&lt;stikonas&gt;</a></span><span class="message"> +&gt; ./bin/mes-m2 -c (display 'Hello,M2-mes!) (newline)</span></div><div class="line" id="234858"><span class="nick" style="color:#6b8072"><a href="#234858" label="[23:48:58]">&lt;stikonas&gt;</a></span><span class="message">mes: boot failed: no such file: boot-0.scm</span></div><div class="line" id="234913"><span class="nick" style="color:#8dd3c7"><a href="#234913" label="[23:49:13]">&lt;oriansj&gt;</a></span><span class="message">touch boot-0.scm will solve that</span></div><div class="line" id="234958"><span class="nick" style="color:#8dd3c7"><a href="#234958" label="[23:49:58]">&lt;oriansj&gt;</a></span><span class="message">(you can even put your test in that file)</span></div><div class="line" id="235010"><span class="nick" style="color:#6b8072"><a href="#235010" label="[23:50:10]">&lt;stikonas&gt;</a></span><span class="message">no, doesn't even put it</span></div><div class="line" id="235021"><span class="nick" style="color:#6b8072"><a href="#235021" label="[23:50:21]">&lt;stikonas&gt;</a></span><span class="message">sorry, I meant touch doesn't help</span></div><div class="line" id="235112"><span class="nick" style="color:#8dd3c7"><a href="#235112" label="[23:51:12]">&lt;oriansj&gt;</a></span><span class="message">you can copy ./mes/module/mes/boot-0.scm too</span></div><div class="line" id="235141"><span class="nick" style="color:#6b8072"><a href="#235141" label="[23:51:41]">&lt;stikonas&gt;</a></span><span class="message">might end up debugging that function...</span></div><div class="line" id="235144"><span class="nick" style="color:#6b8072"><a href="#235144" label="[23:51:44]">&lt;stikonas&gt;</a></span><span class="message">to see what happens</span></div><div class="line" id="235218"><span class="nick" style="color:#6b8072"><a href="#235218" label="[23:52:18]">&lt;stikonas&gt;</a></span><span class="message">it's not finding it anywhere</span></div><div class="line" id="235223"><span class="nick" style="color:#6b8072"><a href="#235223" label="[23:52:23]">&lt;stikonas&gt;</a></span><span class="message">probably looking somewhere bad</span></div><div class="line" id="235239"><span class="nick" style="color:#8dd3c7"><a href="#235239" label="[23:52:39]">&lt;oriansj&gt;</a></span><span class="message">cat ./mes/module/mes/boot-0.scm &gt;| boot-0.scm</span></div><div class="line" id="235305"><span class="nick" style="color:#8dd3c7"><a href="#235305" label="[23:53:05]">&lt;oriansj&gt;</a></span><span class="message">it is the logic in mes.c: try_open_boot</span></div><div class="line" id="235319"><span class="nick" style="color:#6b8072"><a href="#235319" label="[23:53:19]">&lt;stikonas&gt;</a></span><span class="message">no, still the same error</span></div><div class="line" id="235326"><span class="nick" style="color:#6b8072"><a href="#235326" label="[23:53:26]">&lt;stikonas&gt;</a></span><span class="message">maybe environment is still messed up</span></div><div class="line" id="235331"><span class="nick" style="color:#6b8072"><a href="#235331" label="[23:53:31]">&lt;stikonas&gt;</a></span><span class="message">and breaks logic in try_open_boot</span></div><div class="line" id="235433"><span class="nick" style="color:#8dd3c7"><a href="#235433" label="[23:54:33]">&lt;oriansj&gt;</a></span><span class="message">do you have MES* environmental variables set?</span></div><div class="line" id="235537"><span class="nick" style="color:#8dd3c7"><a href="#235537" label="[23:55:37]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.gnu.org/software/mes/manual/html_node/Environment-Variables.html#Environment-Variables">https://www.gnu.org/software/mes/manual/html_node/Environment-Variables.html#Environment-Variables</a> </span></div><div class="line" id="235659"><span class="nick" style="color:#6b8072"><a href="#235659" label="[23:56:59]">&lt;stikonas&gt;</a></span><span class="message">oh, not yet</span></div><div class="line" id="235703"><span class="nick" style="color:#6b8072"><a href="#235703" label="[23:57:03]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll set them up</span></div><div class="line" id="235708"><span class="nick" style="color:#6b8072"><a href="#235708" label="[23:57:08]">&lt;stikonas&gt;</a></span><span class="message">environmental variables seem to work though</span></div><div class="line" id="235714"><span class="nick" style="color:#6b8072"><a href="#235714" label="[23:57:14]">&lt;stikonas&gt;</a></span><span class="message">MES_DEBUG=2 prints more info</span></div><div class="line" id="235845"><span class="nick" style="color:#6b8072"><a href="#235845" label="[23:58:45]">&lt;stikonas&gt;</a></span><span class="message">even MES_ARENA=20000000 MES_MAX_ARENA=20000000 MES_STACK=6000000 MES_DEBUG=2 MES_PREFIX=$PWD ./bin/mes-m2 doesn't work</span></div><div class="line" id="235859"><span class="nick" style="color:#6b8072"><a href="#235859" label="[23:58:59]">&lt;stikonas&gt;</a></span><span class="message">maybe file reading stuff is broken</span></div><br /></div></body></html>