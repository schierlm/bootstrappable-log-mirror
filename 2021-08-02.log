<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-08-02.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="005552"><span class="nick" style="color:#8dd3c7"><a href="#005552" label="[00:55:52]">&lt;stikonas&gt;</a></span><span class="message">ok, now I need to deal with immediates in kaem-minimal.M1...</span></div><div class="line" id="005643"><span class="nick" style="color:#8dd3c7"><a href="#005643" label="[00:56:43]">&lt;stikonas&gt;</a></span><span class="message">converted most other instructions into M1 format except for immediates and labels (la instructions)</span></div><div class="line" id="005738"><span class="nick" style="color:#8dd3c7"><a href="#005738" label="[00:57:38]">&lt;stikonas&gt;</a></span><span class="message">I guess at least with current unmodified M1 that's as good as I can get</span></div><div class="line" id="005803"><span class="nick" style="color:#8dd3c7"><a href="#005803" label="[00:58:03]">&lt;stikonas&gt;</a></span><span class="message">well, maybe I can convert unmangled immediates</span></div><div class="line" id="010315"><span class="nick" style="color:#8dd3c7"><a href="#010315" label="[01:03:15]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/blob/master/hex2_word.c#L62">https://github.com/oriansj/mescc-tools/blob/master/hex2_word.c#L62</a>  did you mean J-type there instead of UJ?</span></div><div class="line" id="011210"><span class="nick" style="color:#8dd3c7"><a href="#011210" label="[01:12:10]">&lt;stikonas&gt;</a></span><span class="message">and I guess SB means B-type</span></div><div class="line" id="011238"><span class="nick" style="color:#8dd3c7"><a href="#011238" label="[01:12:38]">&lt;stikonas&gt;</a></span><span class="message">ok, so those convoluted ones...</span></div><div class="line" id="011704"><span class="nick" style="color:#2e2a4a"><a href="#011704" label="[01:17:04]">&lt;oriansj&gt;</a></span><span class="message">stikonas: the document I have lists the 6 instruction formats: R,I,S,SB,U and UJ</span></div><div class="line" id="011739"><span class="nick" style="color:#2e2a4a"><a href="#011739" label="[01:17:39]">&lt;oriansj&gt;</a></span><span class="message">So I am guessing they just simplified the name SB to just B and UJ to just J</span></div><div class="line" id="011906"><span class="nick" style="color:#2e2a4a"><a href="#011906" label="[01:19:06]">&lt;oriansj&gt;</a></span><span class="message">with SB being used by beq and bge and UJ being used by jal</span></div><div class="line" id="012056"><span class="nick" style="color:#8dd3c7"><a href="#012056" label="[01:20:56]">&lt;stikonas&gt;</a></span><span class="message">oh probably, I guess that's older documetn</span></div><div class="line" id="012127"><span class="nick" style="color:#2e2a4a"><a href="#012127" label="[01:21:27]">&lt;oriansj&gt;</a></span><span class="message">although it looks like they changed JAL to U format in version 2.0 and dropped the J instruction format</span></div><div class="line" id="012131"><span class="nick" style="color:#8dd3c7"><a href="#012131" label="[01:21:31]">&lt;stikonas&gt;</a></span><span class="message">an what are we doing with S format?</span></div><div class="line" id="012137"><span class="nick" style="color:#8dd3c7"><a href="#012137" label="[01:21:37]">&lt;stikonas&gt;</a></span><span class="message">it's similar to B but with less mangling</span></div><div class="line" id="012200"><span class="nick" style="color:#8dd3c7"><a href="#012200" label="[01:22:00]">&lt;stikonas&gt;</a></span><span class="message">JAL is still j-type here where I'm looking</span></div><div class="line" id="012235"><span class="nick" style="color:#8dd3c7"><a href="#012235" label="[01:22:35]">&lt;stikonas&gt;</a></span><span class="message">oh, but it says â€¢ The JAL instruction has now moved to the U-Type register, and the J instruction has been dropped being</span></div><div class="line" id="012249"><span class="nick" style="color:#2e2a4a"><a href="#012249" label="[01:22:49]">&lt;oriansj&gt;</a></span><span class="message">Well S is for sw and sb, so the offset should be an immediate expanded by M1 and not something in hex2</span></div><div class="line" id="012305"><span class="nick" style="color:#8dd3c7"><a href="#012305" label="[01:23:05]">&lt;stikonas&gt;</a></span><span class="message">but some other page says The jump and link (JAL) instruction uses the J-type format, where the J-immediate encodes</span></div><div class="line" id="012315"><span class="nick" style="color:#8dd3c7"><a href="#012315" label="[01:23:15]">&lt;stikonas&gt;</a></span><span class="message">did they go back and forwards on JAL...</span></div><div class="line" id="012334"><span class="nick" style="color:#2e2a4a"><a href="#012334" label="[01:23:34]">&lt;oriansj&gt;</a></span><span class="message">probably</span></div><div class="line" id="012346"><span class="nick" style="color:#8dd3c7"><a href="#012346" label="[01:23:46]">&lt;stikonas&gt;</a></span><span class="message">also SD for 64 bits...</span></div><div class="line" id="012353"><span class="nick" style="color:#8dd3c7"><a href="#012353" label="[01:23:53]">&lt;stikonas&gt;</a></span><span class="message">I used SD quite a bit actually</span></div><div class="line" id="012415"><span class="nick" style="color:#8dd3c7"><a href="#012415" label="[01:24:15]">&lt;stikonas&gt;</a></span><span class="message">cause that's used for pushing to stack</span></div><div class="line" id="012456"><span class="nick" style="color:#8dd3c7"><a href="#012456" label="[01:24:56]">&lt;stikonas&gt;</a></span><span class="message">hmm, are we going to need some prefix character in M1 for S-type?</span></div><div class="line" id="012538"><span class="nick" style="color:#2e2a4a"><a href="#012538" label="[01:25:38]">&lt;oriansj&gt;</a></span><span class="message">we only need prefixes in M1 for instruction formats which we plan on supporting an immediate that will probably change a bit</span></div><div class="line" id="012834"><span class="nick" style="color:#8dd3c7"><a href="#012834" label="[01:28:34]">&lt;stikonas&gt;</a></span><span class="message">hmm, but then what do I do with those prefixes that don't change, i.e. I type is just the number itself bits [11:0]</span></div><div class="line" id="012843"><span class="nick" style="color:#8dd3c7"><a href="#012843" label="[01:28:43]">&lt;stikonas&gt;</a></span><span class="message">e.g. I have RD_A1 RS1_SP 8 LD</span></div><div class="line" id="012856"><span class="nick" style="color:#8dd3c7"><a href="#012856" label="[01:28:56]">&lt;stikonas&gt;</a></span><span class="message">which M1 is not happy with</span></div><div class="line" id="012932"><span class="nick" style="color:#8dd3c7"><a href="#012932" label="[01:29:32]">&lt;stikonas&gt;</a></span><span class="message">hmm, I should familiarize myself with M1 more... Haven't studdied it enough yet :(</span></div><div class="line" id="013121"><span class="nick" style="color:#6b8072"><a href="#013121" label="[01:31:21]">*</a></span><span class="message">stikonas goes to read source and manuals</span></div><div class="line" id="013229"><span class="nick" style="color:#8dd3c7"><a href="#013229" label="[01:32:29]">&lt;stikonas&gt;</a></span><span class="message">oh, I guess I just generate 32 bit integer with %</span></div><div class="line" id="013236"><span class="nick" style="color:#8dd3c7"><a href="#013236" label="[01:32:36]">&lt;stikonas&gt;</a></span><span class="message">although I also need . in front</span></div><div class="line" id="013413"><span class="nick" style="color:#8dd3c7"><a href="#013413" label="[01:34:13]">&lt;stikonas&gt;</a></span><span class="message">I guess something like RD_A1 RS1_SP DOT %8 LD then</span></div><div class="line" id="013436"><span class="nick" style="color:#8dd3c7"><a href="#013436" label="[01:34:36]">&lt;stikonas&gt;</a></span><span class="message">maybe DOT is not the best name though</span></div><div class="line" id="013513"><span class="nick" style="color:#8dd3c7"><a href="#013513" label="[01:35:13]">&lt;stikonas&gt;</a></span><span class="message">although I can't think of anything better</span></div><div class="line" id="013544"><span class="nick" style="color:#2e2a4a"><a href="#013544" label="[01:35:44]">&lt;oriansj&gt;</a></span><span class="message">well when M1 is ready, it will probably be something like: RD_A1 RS1_SP @8 LD</span></div><div class="line" id="013738"><span class="nick" style="color:#2e2a4a"><a href="#013738" label="[01:37:38]">&lt;oriansj&gt;</a></span><span class="message">I can't seem to find the RISC-V SD instruction format. did you mean SB instruction format?</span></div><div class="line" id="013817"><span class="nick" style="color:#8dd3c7"><a href="#013817" label="[01:38:17]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I mean SD command with that S-type instruction</span></div><div class="line" id="013915"><span class="nick" style="color:#8dd3c7"><a href="#013915" label="[01:39:15]">&lt;stikonas&gt;</a></span><span class="message">I was looking at <a rel="nofollow" href="https://github.com/riscv/riscv-isa-manual/releases/download/Ratified-IMAFDQC/riscv-spec-20191213.pdf">https://github.com/riscv/riscv-isa-manual/releases/download/Ratified-IMAFDQC/riscv-spec-20191213.pdf</a> </span></div><div class="line" id="013943"><span class="nick" style="color:#8dd3c7"><a href="#013943" label="[01:39:43]">&lt;stikonas&gt;</a></span><span class="message">it's those SB SH SW and SD commnads to store data</span></div><div class="line" id="013956"><span class="nick" style="color:#2e2a4a"><a href="#013956" label="[01:39:56]">&lt;oriansj&gt;</a></span><span class="message">ok, I was planning on supporting S-type and I-Type and U-Type in M1</span></div><div class="line" id="014034"><span class="nick" style="color:#8dd3c7"><a href="#014034" label="[01:40:34]">&lt;stikonas&gt;</a></span><span class="message">yeah, it makes sense...</span></div><div class="line" id="014037"><span class="nick" style="color:#2e2a4a"><a href="#014037" label="[01:40:37]">&lt;oriansj&gt;</a></span><span class="message">and I am using <a rel="nofollow" href="https://inst.eecs.berkeley.edu/~cs61c/fa17/lec/07/L07%20Instruction%20Formats%20">https://inst.eecs.berkeley.edu/~cs61c/fa17/lec/07/L07%20Instruction%20Formats%20</a>(6up).pdf </span></div><div class="line" id="014146"><span class="nick" style="color:#2e2a4a"><a href="#014146" label="[01:41:46]">&lt;oriansj&gt;</a></span><span class="message">SB, U and UJ seemed the only reasonable instruction formats to support at the hex2 level based on the instructions included in that set.</span></div><div class="line" id="014253"><span class="nick" style="color:#2e2a4a"><a href="#014253" label="[01:42:53]">&lt;oriansj&gt;</a></span><span class="message">as R-type doesn't need immediates or offsets</span></div><div class="line" id="014313"><span class="nick" style="color:#8dd3c7"><a href="#014313" label="[01:43:13]">&lt;stikonas&gt;</a></span><span class="message">yes, that's the simplest one</span></div><div class="line" id="014344"><span class="nick" style="color:#8dd3c7"><a href="#014344" label="[01:43:44]">&lt;stikonas&gt;</a></span><span class="message">all those arithmetic operations with 2 source registers...</span></div><div class="line" id="014623"><span class="nick" style="color:#8dd3c7"><a href="#014623" label="[01:46:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, there might be another ugly thing, those la instructions</span></div><div class="line" id="014634"><span class="nick" style="color:#8dd3c7"><a href="#014634" label="[01:46:34]">&lt;stikonas&gt;</a></span><span class="message">we probably need to deal with them in hex1 stage</span></div><div class="line" id="014650"><span class="nick" style="color:#8dd3c7"><a href="#014650" label="[01:46:50]">&lt;stikonas&gt;</a></span><span class="message">since hex1 calculates offsets to labels</span></div><div class="line" id="014805"><span class="nick" style="color:#8dd3c7"><a href="#014805" label="[01:48:05]">&lt;stikonas&gt;</a></span><span class="message">but it's often used in conjunction with AUIPC to have access to more than 12 bits of offsets</span></div><div class="line" id="015005"><span class="nick" style="color:#8dd3c7"><a href="#015005" label="[01:50:05]">&lt;stikonas&gt;</a></span><span class="message">maybe at least for hex1 we should restrict jumps to 12 bits (or is that 11 but same idea)</span></div><div class="line" id="015116"><span class="nick" style="color:#8dd3c7"><a href="#015116" label="[01:51:16]">&lt;stikonas&gt;</a></span><span class="message">that might mean moving data into the &quot;.text&quot; section</span></div><div class="line" id="015135"><span class="nick" style="color:#8dd3c7"><a href="#015135" label="[01:51:35]">&lt;stikonas&gt;</a></span><span class="message">that's a bit ugly...</span></div><div class="line" id="015136"><span class="nick" style="color:#8dd3c7"><a href="#015136" label="[01:51:36]">&lt;stikonas&gt;</a></span><span class="message">argh...</span></div><div class="line" id="015305"><span class="nick" style="color:#8dd3c7"><a href="#015305" label="[01:53:05]">&lt;stikonas&gt;</a></span><span class="message">well, we'll see when/if we need it</span></div><div class="line" id="020242"><span class="nick" style="color:#8dd3c7"><a href="#020242" label="[02:02:42]">&lt;stikonas&gt;</a></span><span class="message">shift amounts might need some further thought too, for now I'll replace shift by 11 with RS2_A1 (11-th register) which should have the same effect</span></div><div class="line" id="021207"><span class="nick" style="color:#2e2a4a"><a href="#021207" label="[02:12:07]">&lt;oriansj&gt;</a></span><span class="message">well I can add I-Format to Hex2 to support jalr instructions better via !label</span></div><div class="line" id="021253"><span class="nick" style="color:#2e2a4a"><a href="#021253" label="[02:12:53]">&lt;oriansj&gt;</a></span><span class="message">which is usually done in conjunction with AUIPC</span></div><div class="line" id="021702"><span class="nick" style="color:#8dd3c7"><a href="#021702" label="[02:17:02]">&lt;stikonas&gt;</a></span><span class="message">it's also used in la pseudoinstruction...</span></div><div class="line" id="021722"><span class="nick" style="color:#8dd3c7"><a href="#021722" label="[02:17:22]">&lt;stikonas&gt;</a></span><span class="message">not just jalr</span></div><div class="line" id="021903"><span class="nick" style="color:#2e2a4a"><a href="#021903" label="[02:19:03]">&lt;oriansj&gt;</a></span><span class="message">stikonas: short hand instruction formats that need to be offsets need to be supported in hex2. instruction formats that need to be integers (1, -3, etc_ need to be supported in M1</span></div><div class="line" id="023632"><span class="nick" style="color:#8dd3c7"><a href="#023632" label="[02:36:32]">&lt;stikonas&gt;</a></span><span class="message">ok, I think I'm almost done with kaem-minimal.M1, will finish tomorrow (only la instructions are left)</span></div><div class="line" id="023648"><span class="nick" style="color:#8dd3c7"><a href="#023648" label="[02:36:48]">&lt;stikonas&gt;</a></span><span class="message">and then hex0 encoding...</span></div><div class="line" id="032032"><span class="nick" style="color:#2e2a4a"><a href="#032032" label="[03:20:32]">&lt;oriansj&gt;</a></span><span class="message">and prototype I-Format support for hex2 has been added using the !label method</span></div><div class="line" id="032211"><span class="nick" style="color:#2e2a4a"><a href="#032211" label="[03:22:11]">&lt;oriansj&gt;</a></span><span class="message">M1 still needs more work but I'll have it done this week.</span></div><div class="line" id="181316"><span class="nick">***</span><span class="message notice">attila_lendvai_ is now known as attila_lendvai</span></div><div class="line" id="205443"><span class="nick">***</span><span class="message notice">edef is now known as edf0</span></div><div class="line" id="205450"><span class="nick">***</span><span class="message notice">qdef is now known as edef</span></div><div class="line" id="210703"><span class="nick" style="color:#80b1d3"><a href="#210703" label="[21:07:03]">&lt;plasma41&gt;</a></span><span class="message">How to bootstrap Kubernetes: Step 1: Abandon all hope <a rel="nofollow" href="https://github.com/kubernetes/kubernetes/issues/76395">https://github.com/kubernetes/kubernetes/issues/76395</a> </span></div><div class="line" id="211257"><span class="nick" style="color:#8dd3c7"><a href="#211257" label="[21:12:57]">&lt;stikonas&gt;</a></span><span class="message">yeah, some distributions of kubernetes are even worse...</span></div><div class="line" id="211333"><span class="nick" style="color:#8dd3c7"><a href="#211333" label="[21:13:33]">&lt;stikonas&gt;</a></span><span class="message">I think RedHat's version (OpenShift/OKD) are even more entangled</span></div><div class="line" id="211834"><span class="nick" style="color:#6d2462"><a href="#211834" label="[21:18:34]">&lt;drakonis&gt;</a></span><span class="message">abandon all hope ye who enter here</span></div><div class="line" id="212228"><span class="nick" style="color:#234e69"><a href="#212228" label="[21:22:28]">&lt;ericonr&gt;</a></span><span class="message">does it matter if all of that is Go?</span></div><div class="line" id="212239"><span class="nick" style="color:#234e69"><a href="#212239" label="[21:22:39]">&lt;ericonr&gt;</a></span><span class="message">the compiler just brings it in...</span></div><div class="line" id="212947"><span class="nick" style="color:#8dd3c7"><a href="#212947" label="[21:29:47]">&lt;stikonas&gt;</a></span><span class="message">well, for kubernetes it probably doesn't matter too much, but that openshift stuff even installing it involves bootstrapping from existing cluster</span></div><div class="line" id="221702"><span class="nick" style="color:#8dd3c7"><a href="#221702" label="[22:17:02]">&lt;stikonas&gt;</a></span><span class="message">hmm, something strange is going on with hex2 risc-v shift registers... Should fire up gdb to investigate...</span></div><div class="line" id="235838"><span class="nick" style="color:#8dd3c7"><a href="#235838" label="[23:58:38]">&lt;stikonas&gt;</a></span><span class="message">oriansj: how am I supposed to use hex2 shift registers on riscv? I'm getting an error from GetTarget which is called here <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/blob/master/hex2_word.c#L341">https://github.com/oriansj/mescc-tools/blob/master/hex2_word.c#L341</a> </span></div><div class="line" id="235922"><span class="nick" style="color:#8dd3c7"><a href="#235922" label="[23:59:22]">&lt;stikonas&gt;</a></span><span class="message">I'm probably using incorrect syntax in .hex2 file</span></div><div class="line" id="235951"><span class="nick" style="color:#8dd3c7"><a href="#235951" label="[23:59:51]">&lt;stikonas&gt;</a></span><span class="message">so I'm trying to encode RD_A1 RS1_SP !8 LD which is an I instruction (hence !)</span></div><br /></div></body></html>