<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000105"><span class="nick" style="color:#389600"><a href="#000105" label="[00:01:05]">&lt;stikonas&gt;</a></span><span class="message">pder: so maybe it's best to first get binutils and ar working?</span></div><div class="line" id="000116"><span class="nick" style="color:#389600"><a href="#000116" label="[00:01:16]">&lt;stikonas&gt;</a></span><span class="message">and then properly rebuild musl and tcc?</span></div><div class="line" id="000135"><span class="nick" style="color:#389600"><a href="#000135" label="[00:01:35]">&lt;stikonas&gt;</a></span><span class="message">because more stuff might be slightly broken, not just stdio</span></div><div class="line" id="000629"><span class="nick" style="color:#389600"><a href="#000629" label="[00:06:29]">&lt;stikonas&gt;</a></span><span class="message">I guess we should look for some library to regenerate autotools files...</span></div><div class="line" id="005442"><span class="nick" style="color:#2e2a4a"><a href="#005442" label="[00:54:42]">&lt;pder&gt;</a></span><span class="message">do tcc and musl need to be rebuilt?  For musl, the configure script appears to be hand written</span></div><div class="line" id="005653"><span class="nick" style="color:#389600"><a href="#005653" label="[00:56:53]">&lt;stikonas&gt;</a></span><span class="message">pder: yes, we already used configure</span></div><div class="line" id="005703"><span class="nick" style="color:#389600"><a href="#005703" label="[00:57:03]">&lt;stikonas&gt;</a></span><span class="message">pder: and yes, we need to rebuild it without that hacky patch</span></div><div class="line" id="005729"><span class="nick" style="color:#389600"><a href="#005729" label="[00:57:29]">&lt;stikonas&gt;</a></span><span class="message">although, if we have binutils by then, we can even build libc.so and switch to dynamic linking</span></div><div class="line" id="005756"><span class="nick" style="color:#389600"><a href="#005756" label="[00:57:56]">&lt;stikonas&gt;</a></span><span class="message">pder: so I briefly looked at autoconf problem</span></div><div class="line" id="005811"><span class="nick" style="color:#389600"><a href="#005811" label="[00:58:11]">&lt;stikonas&gt;</a></span><span class="message">not sure what exactly causes it, but must be something minor</span></div><div class="line" id="005818"><span class="nick" style="color:#389600"><a href="#005818" label="[00:58:18]">&lt;stikonas&gt;</a></span><span class="message">(it creates configure that is zero size)</span></div><div class="line" id="005857"><span class="nick" style="color:#389600"><a href="#005857" label="[00:58:57]">&lt;stikonas&gt;</a></span><span class="message">but when I ran it with bash +x and then manually ran m4 command that it was running, I've got proper configure script printed to stdout (which I could redirect to configure file)</span></div><div class="line" id="005937"><span class="nick" style="color:#2e2a4a"><a href="#005937" label="[00:59:37]">&lt;pder&gt;</a></span><span class="message">so you are still having issues with my latest patch?</span></div><div class="line" id="011016"><span class="nick" style="color:#389600"><a href="#011016" label="[01:10:16]">&lt;stikonas&gt;</a></span><span class="message">pder: I haven't tried it yet</span></div><div class="line" id="011026"><span class="nick" style="color:#389600"><a href="#011026" label="[01:10:26]">&lt;stikonas&gt;</a></span><span class="message">but autoconf problem is probably somethign else</span></div><div class="line" id="011148"><span class="nick" style="color:#389600"><a href="#011148" label="[01:11:48]">&lt;stikonas&gt;</a></span><span class="message">maybe this step fails &quot;exec 4&gt; configure&quot;</span></div><div class="line" id="011334"><span class="nick" style="color:#389600"><a href="#011334" label="[01:13:34]">&lt;stikonas&gt;</a></span><span class="message">pder: oh, maybe exec also has somethign to do with your patch...</span></div><div class="line" id="011343"><span class="nick" style="color:#389600"><a href="#011343" label="[01:13:43]">&lt;stikonas&gt;</a></span><span class="message">it deals with file descriptors too</span></div><div class="line" id="011421"><span class="nick" style="color:#389600"><a href="#011421" label="[01:14:21]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll probably try some other day</span></div><div class="line" id="011636"><span class="nick" style="color:#2e2a4a"><a href="#011636" label="[01:16:36]">&lt;pder&gt;</a></span><span class="message">The goal of the patch was for it to call the methods in Exit() in src/exit/exit.c.  Before they appeared to be noops</span></div><div class="line" id="011645"><span class="nick" style="color:#389600"><a href="#011645" label="[01:16:45]">&lt;stikonas&gt;</a></span><span class="message">oh, actually, it might be because of awk crashing</span></div><div class="line" id="011659"><span class="nick" style="color:#389600"><a href="#011659" label="[01:16:59]">&lt;stikonas&gt;</a></span><span class="message">autoconf runs awk in the last step</span></div><div class="line" id="011708"><span class="nick" style="color:#389600"><a href="#011708" label="[01:17:08]">&lt;stikonas&gt;</a></span><span class="message">to insert line numbers...</span></div><div class="line" id="011714"><span class="nick" style="color:#389600"><a href="#011714" label="[01:17:14]">&lt;stikonas&gt;</a></span><span class="message">and if our gawk is broken...</span></div><div class="line" id="011728"><span class="nick" style="color:#389600"><a href="#011728" label="[01:17:28]">&lt;stikonas&gt;</a></span><span class="message">it makes sense that file is empty</span></div><div class="line" id="011743"><span class="nick" style="color:#2e2a4a"><a href="#011743" label="[01:17:43]">&lt;pder&gt;</a></span><span class="message">didnt you say something about awk needing some files in a share directory?</span></div><div class="line" id="011749"><span class="nick" style="color:#389600"><a href="#011749" label="[01:17:49]">&lt;stikonas&gt;</a></span><span class="message">I installed those</span></div><div class="line" id="011755"><span class="nick" style="color:#389600"><a href="#011755" label="[01:17:55]">&lt;stikonas&gt;</a></span><span class="message">but awk itself segfaults</span></div><div class="line" id="011815"><span class="nick" style="color:#389600"><a href="#011815" label="[01:18:15]">&lt;stikonas&gt;</a></span><span class="message">so I think to summarise the state of things</span></div><div class="line" id="011829"><span class="nick" style="color:#389600"><a href="#011829" label="[01:18:29]">&lt;stikonas&gt;</a></span><span class="message">1) we have some problems with stdio but you have a patch that might fix them</span></div><div class="line" id="011839"><span class="nick" style="color:#389600"><a href="#011839" label="[01:18:39]">&lt;stikonas&gt;</a></span><span class="message">2) gawk crashes on non-trivial programs, this needs investigation</span></div><div class="line" id="011855"><span class="nick" style="color:#389600"><a href="#011855" label="[01:18:55]">&lt;stikonas&gt;</a></span><span class="message">3) perl needs some further work to generate opcode.h</span></div><div class="line" id="011918"><span class="nick" style="color:#389600"><a href="#011918" label="[01:19:18]">&lt;stikonas&gt;</a></span><span class="message">and then I think we shoud be able to run autotools</span></div><div class="line" id="011945"><span class="nick" style="color:#389600"><a href="#011945" label="[01:19:45]">&lt;stikonas&gt;</a></span><span class="message">(my initial testing indicates that miniperl is capable or running those even if it's not full perl)</span></div><div class="line" id="011955"><span class="nick" style="color:#389600"><a href="#011955" label="[01:19:55]">&lt;stikonas&gt;</a></span><span class="message">so we can postpone full perl bootstrap till a bit later</span></div><div class="line" id="012002"><span class="nick" style="color:#2e2a4a"><a href="#012002" label="[01:20:02]">&lt;pder&gt;</a></span><span class="message">do you have an example of what makes gawk crash?</span></div><div class="line" id="012200"><span class="nick" style="color:#389600"><a href="#012200" label="[01:22:00]">&lt;stikonas&gt;</a></span><span class="message">basically anything</span></div><div class="line" id="012202"><span class="nick" style="color:#389600"><a href="#012202" label="[01:22:02]">&lt;stikonas&gt;</a></span><span class="message">echo test | gawk '{print $1}'</span></div><div class="line" id="012205"><span class="nick" style="color:#389600"><a href="#012205" label="[01:22:05]">&lt;stikonas&gt;</a></span><span class="message">would crash it</span></div><div class="line" id="012215"><span class="nick" style="color:#389600"><a href="#012215" label="[01:22:15]">&lt;stikonas&gt;</a></span><span class="message">(this works though echo test | gawk '{print &quot;Hello World&quot;}')</span></div><div class="line" id="012234"><span class="nick" style="color:#389600"><a href="#012234" label="[01:22:34]">&lt;stikonas&gt;</a></span><span class="message">so only really trivial examples work</span></div><div class="line" id="012235"><span class="nick" style="color:#2e2a4a"><a href="#012235" label="[01:22:35]">&lt;pder&gt;</a></span><span class="message">ok, I can reproduce.  Thats with my latest musl patch</span></div><div class="line" id="012305"><span class="nick" style="color:#389600"><a href="#012305" label="[01:23:05]">&lt;stikonas&gt;</a></span><span class="message">pder: oh, it might be interesting if you can test miniperl with your patch</span></div><div class="line" id="012317"><span class="nick" style="color:#389600"><a href="#012317" label="[01:23:17]">&lt;stikonas&gt;</a></span><span class="message">or do you not have my commit?</span></div><div class="line" id="012350"><span class="nick" style="color:#2e2a4a"><a href="#012350" label="[01:23:50]">&lt;pder&gt;</a></span><span class="message">I have it.  I'll cherry-pick it on to my branch</span></div><div class="line" id="012351"><span class="nick" style="color:#389600"><a href="#012351" label="[01:23:51]">&lt;stikonas&gt;</a></span><span class="message">perl ./keywords.pl was producing truncated files...</span></div><div class="line" id="012400"><span class="nick" style="color:#389600"><a href="#012400" label="[01:24:00]">&lt;stikonas&gt;</a></span><span class="message">same with opcode.pl</span></div><div class="line" id="012416"><span class="nick" style="color:#389600"><a href="#012416" label="[01:24:16]">&lt;stikonas&gt;</a></span><span class="message">we don't really need to run those at this stage (it was just my test to see if perl works)</span></div><div class="line" id="012423"><span class="nick" style="color:#389600"><a href="#012423" label="[01:24:23]">&lt;stikonas&gt;</a></span><span class="message">somehow I didn't really test gawk :(</span></div><div class="line" id="012443"><span class="nick" style="color:#2e2a4a"><a href="#012443" label="[01:24:43]">&lt;pder&gt;</a></span><span class="message">Ill try rebuilding</span></div><div class="line" id="012453"><span class="nick" style="color:#389600"><a href="#012453" label="[01:24:53]">&lt;stikonas&gt;</a></span><span class="message">but anyway, I think we are almost done with writing manual makefiles</span></div><div class="line" id="012504"><span class="nick" style="color:#389600"><a href="#012504" label="[01:25:04]">&lt;stikonas&gt;</a></span><span class="message">and config.h files / CFLAGS</span></div><div class="line" id="012632"><span class="nick" style="color:#389600"><a href="#012632" label="[01:26:32]">&lt;stikonas&gt;</a></span><span class="message">pder: by the way, some projects don't seem to have  Makefile.am files, any idea why?</span></div><div class="line" id="012643"><span class="nick" style="color:#389600"><a href="#012643" label="[01:26:43]">&lt;stikonas&gt;</a></span><span class="message">Makefile.in is handwritten for those?</span></div><div class="line" id="012700"><span class="nick" style="color:#389600"><a href="#012700" label="[01:27:00]">&lt;stikonas&gt;</a></span><span class="message">(diffutils-2.7 is one example)</span></div><div class="line" id="012724"><span class="nick" style="color:#2e2a4a"><a href="#012724" label="[01:27:24]">&lt;pder&gt;</a></span><span class="message">hmm, I am not sure.</span></div><div class="line" id="012808"><span class="nick" style="color:#389600"><a href="#012808" label="[01:28:08]">&lt;stikonas&gt;</a></span><span class="message">although, that Makefile.in file looks quite readable, so maybe it is handwritten</span></div><div class="line" id="012820"><span class="nick" style="color:#389600"><a href="#012820" label="[01:28:20]">&lt;stikonas&gt;</a></span><span class="message">and then configure just populates it with correct variables</span></div><div class="line" id="013335"><span class="nick" style="color:#389600"><a href="#013335" label="[01:33:35]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe we should populate some devices too...</span></div><div class="line" id="013342"><span class="nick" style="color:#389600"><a href="#013342" label="[01:33:42]">&lt;stikonas&gt;</a></span><span class="message"> /dev/null, etc...</span></div><div class="line" id="013404"><span class="nick" style="color:#389600"><a href="#013404" label="[01:34:04]">&lt;stikonas&gt;</a></span><span class="message">something like in <a rel="nofollow" href="http://www.linuxfromscratch.org/lfs/view/6.1/chapter06/devices.html">http://www.linuxfromscratch.org/lfs/view/6.1/chapter06/devices.html</a> </span></div><div class="line" id="014948"><span class="nick" style="color:#2e2a4a"><a href="#014948" label="[01:49:48]">&lt;pder&gt;</a></span><span class="message">So I just ran perl keywords.pl</span></div><div class="line" id="015012"><span class="nick" style="color:#2e2a4a"><a href="#015012" label="[01:50:12]">&lt;pder&gt;</a></span><span class="message">last line is #define KEY_y      240</span></div><div class="line" id="015138"><span class="nick" style="color:#2e2a4a"><a href="#015138" label="[01:51:38]">&lt;pder&gt;</a></span><span class="message">perl opcode.pl seems to create a complete opcode.h</span></div><div class="line" id="015151"><span class="nick" style="color:#2e2a4a"><a href="#015151" label="[01:51:51]">&lt;pder&gt;</a></span><span class="message">42961 bytes</span></div><div class="line" id="015410"><span class="nick" style="color:#6b8072"><a href="#015410" label="[01:54:10]">&lt;stikonas[m]&gt;</a></span><span class="message">OK, that's good</span></div><div class="line" id="021406"><span class="nick" style="color:#80b1d3"><a href="#021406" label="[02:14:06]">&lt;OriansJ&gt;</a></span><span class="message">now I am confused as hell.</span></div><div class="line" id="021458"><span class="nick" style="color:#80b1d3"><a href="#021458" label="[02:14:58]">&lt;OriansJ&gt;</a></span><span class="message">file with the exact same checksum went from functional to failing after restart of VM</span></div><div class="line" id="021857"><span class="nick" style="color:#80b1d3"><a href="#021857" label="[02:18:57]">&lt;OriansJ&gt;</a></span><span class="message">and a relative branch became an absolute branch??????</span></div><div class="line" id="025050"><span class="nick" style="color:#2e2a4a"><a href="#025050" label="[02:50:50]">&lt;pder&gt;</a></span><span class="message">stikonas: gawk no longer crashes after adding -DHAVE_STRING_H</span></div><div class="line" id="025058"><span class="nick" style="color:#2e2a4a"><a href="#025058" label="[02:50:58]">&lt;pder&gt;</a></span><span class="message">Checking to see if anything else is missing</span></div><div class="line" id="030115"><span class="nick" style="color:#80b1d3"><a href="#030115" label="[03:01:15]">&lt;OriansJ&gt;</a></span><span class="message">looks like PPC64 suffers from the exact same byte ordering problems as ARM and AArch64</span></div><div class="line" id="030248"><span class="nick" style="color:#80b1d3"><a href="#030248" label="[03:02:48]">&lt;OriansJ&gt;</a></span><span class="message">documentation says [6bits opcode] [24bit immediate] [2bits mode] -&gt; reality [6bits immediate] [2bits mode] [16bits immediate] [6bits opcode] [2bits immediate]</span></div><div class="line" id="032821"><span class="nick" style="color:#80b1d3"><a href="#032821" label="[03:28:21]">&lt;OriansJ&gt;</a></span><span class="message">fortunately the immediates for relative branches shave the last 2 bits off the displacement and those 2 bits end up being only half useful here for us.</span></div><div class="line" id="033123"><span class="nick" style="color:#80b1d3"><a href="#033123" label="[03:31:23]">&lt;OriansJ&gt;</a></span><span class="message">one of them makes the instruction branch to absolute addresses and the other indicates to set the link register with the PC.</span></div><div class="line" id="033842"><span class="nick" style="color:#80b1d3"><a href="#033842" label="[03:38:42]">&lt;OriansJ&gt;</a></span><span class="message">so ^~foo and ~foo can map without issue to the setting/not-settting of the link bit and 24bits of displacement</span></div><div class="line" id="034226"><span class="nick" style="color:#80b1d3"><a href="#034226" label="[03:42:26]">&lt;OriansJ&gt;</a></span><span class="message">we will still need to encode 2bits of immediate as either {00, 01} positive, {10, or 11} negative displacements with the opcode but I guess we could just pretend an extra 2bits of opcode, use 00 and 11 to express forward and backward jumps</span></div><div class="line" id="034308"><span class="nick" style="color:#80b1d3"><a href="#034308" label="[03:43:08]">&lt;OriansJ&gt;</a></span><span class="message">I'll need to update my powerpc displacement calculations in hex2 but dftxbs3e hopefully that will not be a problem for you</span></div><div class="line" id="040010"><span class="nick" style="color:#80b1d3"><a href="#040010" label="[04:00:10]">&lt;OriansJ&gt;</a></span><span class="message">interesting displacement is measured from the beginning of the instruction.</span></div><div class="line" id="043740"><span class="nick" style="color:#2e2a4a"><a href="#043740" label="[04:37:40]">&lt;pder&gt;</a></span><span class="message">stikonas: I made a few changes to the gawk Makefile and have something that seems to be working at least for basic stuff.  There appears to be something wrong with floats and/or displaying them with our toolchain.</span></div><div class="line" id="043753"><span class="nick" style="color:#2e2a4a"><a href="#043753" label="[04:37:53]">&lt;pder&gt;</a></span><span class="message">I pushed it to a branch wip-gawk</span></div><div class="line" id="044155"><span class="nick" style="color:#6d2462"><a href="#044155" label="[04:41:55]">&lt;dftxbs3e&gt;</a></span><span class="message">OriansJ, hello! need me for anything?</span></div><div class="line" id="044745"><span class="nick" style="color:#80b1d3"><a href="#044745" label="[04:47:45]">&lt;OriansJ&gt;</a></span><span class="message">dftxbs3e: I was just about you email you</span></div><div class="line" id="044805"><span class="nick" style="color:#80b1d3"><a href="#044805" label="[04:48:05]">&lt;OriansJ&gt;</a></span><span class="message">a more advanced displacement test is now available</span></div><div class="line" id="045027"><span class="nick" style="color:#80b1d3"><a href="#045027" label="[04:50:27]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1185516/">https://paste.debian.net/1185516/</a> </span></div><div class="line" id="045134"><span class="nick" style="color:#80b1d3"><a href="#045134" label="[04:51:34]">&lt;OriansJ&gt;</a></span><span class="message">hex2 --architecture ppc64le --little-endian -f 1185516 --base-address 0x10000000 -o foo &amp;&amp; ./foo || echo $?</span></div><div class="line" id="045210"><span class="nick" style="color:#80b1d3"><a href="#045210" label="[04:52:10]">&lt;OriansJ&gt;</a></span><span class="message">with 0x10000080 being the entry if you want gdb to single stepi it</span></div><div class="line" id="045236"><span class="nick" style="color:#80b1d3"><a href="#045236" label="[04:52:36]">&lt;OriansJ&gt;</a></span><span class="message">using latest mescc-tools commit ca1fa0a50b63e38f0d9b00bc94418918dc794227</span></div><div class="line" id="045334"><span class="nick" style="color:#80b1d3"><a href="#045334" label="[04:53:34]">&lt;OriansJ&gt;</a></span><span class="message">now both forward and backward branches should always work correctly</span></div><div class="line" id="045517"><span class="nick" style="color:#80b1d3"><a href="#045517" label="[04:55:17]">&lt;OriansJ&gt;</a></span><span class="message">if the jump is wrong, it'll loop forever or segfault fast</span></div><div class="line" id="045919"><span class="nick" style="color:#80b1d3"><a href="#045919" label="[04:59:19]">&lt;OriansJ&gt;</a></span><span class="message">so ^~forward_link 48 and ^~backward_link 4B vs ~forward_nolink 48 ~backward_nolink 4B should be able to be added for as much complexity as you would want.</span></div><div class="line" id="050032"><span class="nick" style="color:#6d2462"><a href="#050032" label="[05:00:32]">&lt;dftxbs3e&gt;</a></span><span class="message">OriansJ, <a rel="nofollow" href="https://paste.debian.net/plain/1185518">https://paste.debian.net/plain/1185518</a> </span></div><div class="line" id="050110"><span class="nick" style="color:#80b1d3"><a href="#050110" label="[05:01:10]">&lt;OriansJ&gt;</a></span><span class="message">beautiful</span></div><div class="line" id="050212"><span class="nick" style="color:#80b1d3"><a href="#050212" label="[05:02:12]">&lt;OriansJ&gt;</a></span><span class="message">if you do gdb foo; b* 0x10000080; run layout regs; si (a few times)</span></div><div class="line" id="050251"><span class="nick" style="color:#80b1d3"><a href="#050251" label="[05:02:51]">&lt;OriansJ&gt;</a></span><span class="message">You should see assembly matching the hex2 comments and the jumps doing what the hex2 suggest.</span></div><div class="line" id="050602"><span class="nick" style="color:#80b1d3"><a href="#050602" label="[05:06:02]">&lt;OriansJ&gt;</a></span><span class="message">oh and incase anyone wants a more powerful version of xeh to inspect binaries: <a rel="nofollow" href="https://paste.debian.net/1185519/">https://paste.debian.net/1185519/</a> </span></div><div class="line" id="050839"><span class="nick" style="color:#80b1d3"><a href="#050839" label="[05:08:39]">&lt;OriansJ&gt;</a></span><span class="message">it'll be added to mescc-tools after the next release (with several more enchancements)</span></div><div class="line" id="060159"><span class="nick" style="color:#80b1d3"><a href="#060159" label="[06:01:59]">&lt;OriansJ&gt;</a></span><span class="message">dftxbs3e: here are some conditional branches in the B Form <a rel="nofollow" href="https://paste.debian.net/1185521/">https://paste.debian.net/1185521/</a> </span></div><div class="line" id="060258"><span class="nick" style="color:#80b1d3"><a href="#060258" label="[06:02:58]">&lt;OriansJ&gt;</a></span><span class="message">although I find it odd that IBM's assembly doesn't do r0 r1, etc but instead just 0 1 etc</span></div><div class="line" id="061437"><span class="nick" style="color:#6d2462"><a href="#061437" label="[06:14:37]">&lt;dftxbs3e&gt;</a></span><span class="message">OriansJ, what should that do?</span></div><div class="line" id="061451"><span class="nick" style="color:#6d2462"><a href="#061451" label="[06:14:51]">&lt;dftxbs3e&gt;</a></span><span class="message">It works the same, all good</span></div><div class="line" id="072208"><span class="nick" style="color:#234e69"><a href="#072208" label="[07:22:08]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: thank you very much for that work on sha256sum</span></div><div class="line" id="072237"><span class="nick" style="color:#234e69"><a href="#072237" label="[07:22:37]">&lt;fossy&gt;</a></span><span class="message">i modified it slightly to take multiple arguments for generation and use a sha256sum file (like sha256sum -c does)</span></div><div class="line" id="072242"><span class="nick" style="color:#234e69"><a href="#072242" label="[07:22:42]">&lt;fossy&gt;</a></span><span class="message">now it is complete, hooray</span></div><div class="line" id="072257"><span class="nick" style="color:#234e69"><a href="#072257" label="[07:22:57]">&lt;fossy&gt;</a></span><span class="message">produces close-to-identical output with coreutils</span></div><div class="line" id="075811"><span class="nick" style="color:#6c3d55"><a href="#075811" label="[07:58:11]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: very good, that was on my list for today, so i can do other things 8-)</span></div><div class="line" id="075830"><span class="nick" style="color:#234e69"><a href="#075830" label="[07:58:30]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: oops sorry hope I didnt duplicate any work</span></div><div class="line" id="075948"><span class="nick" style="color:#6c3d55"><a href="#075948" label="[07:59:48]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: no i just awaked 8-) so dups where done, 1st coffee</span></div><div class="line" id="080055"><span class="nick" style="color:#6c3d55"><a href="#080055" label="[08:00:55]">&lt;gforce_d11977&gt;</a></span><span class="message">&quot;no dups where done&quot;</span></div><div class="line" id="091117"><span class="nick" style="color:#6b8072"><a href="#091117" label="[09:11:17]">&lt;stikonas[m]&gt;</a></span><span class="message">pder: nice work! Changes look good. Are you making PR soon?</span></div><div class="line" id="170222"><span class="nick" style="color:#389600"><a href="#170222" label="[17:02:22]">&lt;stikonas&gt;</a></span><span class="message">pder: so with your two PRs autoconf is also working</span></div><div class="line" id="170229"><span class="nick" style="color:#389600"><a href="#170229" label="[17:02:29]">&lt;stikonas&gt;</a></span><span class="message">so that's good...</span></div><div class="line" id="170303"><span class="nick" style="color:#389600"><a href="#170303" label="[17:03:03]">&lt;stikonas&gt;</a></span><span class="message">that means we only need to recreate perl's opcode.h, and manually install automake/autoconf</span></div><div class="line" id="170320"><span class="nick" style="color:#389600"><a href="#170320" label="[17:03:20]">&lt;stikonas&gt;</a></span><span class="message">and then I think we'll be able to stop manual makefiles</span></div><div class="line" id="170328"><span class="nick" style="color:#389600"><a href="#170328" label="[17:03:28]">&lt;stikonas&gt;</a></span><span class="message">*stop writing</span></div><div class="line" id="171826"><span class="nick" style="color:#2e2a4a"><a href="#171826" label="[17:18:26]">&lt;pder&gt;</a></span><span class="message">whats the issue with perls opcode.h?</span></div><div class="line" id="172155"><span class="nick" style="color:#389600"><a href="#172155" label="[17:21:55]">&lt;stikonas&gt;</a></span><span class="message">pder: it's generated by opcode.pl</span></div><div class="line" id="172217"><span class="nick" style="color:#389600"><a href="#172217" label="[17:22:17]">&lt;stikonas&gt;</a></span><span class="message">so until we have miniperl, we can't regenerate it</span></div><div class="line" id="172235"><span class="nick" style="color:#389600"><a href="#172235" label="[17:22:35]">&lt;stikonas&gt;</a></span><span class="message">but we can write some script that generates the same thing...</span></div><div class="line" id="172301"><span class="nick" style="color:#389600"><a href="#172301" label="[17:23:01]">&lt;stikonas&gt;</a></span><span class="message">or at least generate something that's good enough to create miniperl (if it can then regenerate proper opcode.h)</span></div><div class="line" id="172330"><span class="nick" style="color:#2e2a4a"><a href="#172330" label="[17:23:30]">&lt;pder&gt;</a></span><span class="message">I am confused.  I just ran a build including your perl branch and miniperl is built and can generate opcode.h</span></div><div class="line" id="172331"><span class="nick" style="color:#389600"><a href="#172331" label="[17:23:31]">&lt;stikonas&gt;</a></span><span class="message">there was a similar issue with keywords.h but I've already regenerated it yesterday</span></div><div class="line" id="172345"><span class="nick" style="color:#389600"><a href="#172345" label="[17:23:45]">&lt;stikonas&gt;</a></span><span class="message">oh, because it uses upstream generated opcode.h</span></div><div class="line" id="172421"><span class="nick" style="color:#2e2a4a"><a href="#172421" label="[17:24:21]">&lt;pder&gt;</a></span><span class="message">so you want to be able to delete these versions in the tarball and recreate them?</span></div><div class="line" id="172448"><span class="nick" style="color:#389600"><a href="#172448" label="[17:24:48]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/a99dcef8db0e3cecf692af6629f6e30e8e612d60#diff-c97b2cbe3a9ffff9805296bb945e5154e22ba96aa18272f3c323c30a647c31b3R18">https://github.com/stikonas/live-bootstrap/commit/a99dcef8db0e3cecf692af6629f6e30e8e612d60#diff-c97b2cbe3a9ffff9805296bb945e5154e22ba96aa18272f3c323c30a647c31b3R18</a> </span></div><div class="line" id="172456"><span class="nick" style="color:#389600"><a href="#172456" label="[17:24:56]">&lt;stikonas&gt;</a></span><span class="message">yeah, same as with other generated files..</span></div><div class="line" id="172458"><span class="nick" style="color:#389600"><a href="#172458" label="[17:24:58]">&lt;stikonas&gt;</a></span><span class="message">like configure</span></div><div class="line" id="172512"><span class="nick" style="color:#389600"><a href="#172512" label="[17:25:12]">&lt;stikonas&gt;</a></span><span class="message">although, I have less problems with opcode.h</span></div><div class="line" id="172515"><span class="nick" style="color:#389600"><a href="#172515" label="[17:25:15]">&lt;stikonas&gt;</a></span><span class="message">since it's more readable</span></div><div class="line" id="172516"><span class="nick" style="color:#2e2a4a"><a href="#172516" label="[17:25:16]">&lt;pder&gt;</a></span><span class="message">does miniperl require these files to build?</span></div><div class="line" id="172522"><span class="nick" style="color:#389600"><a href="#172522" label="[17:25:22]">&lt;stikonas&gt;</a></span><span class="message">yes...</span></div><div class="line" id="172534"><span class="nick" style="color:#2e2a4a"><a href="#172534" label="[17:25:34]">&lt;pder&gt;</a></span><span class="message">ok, now I understand</span></div><div class="line" id="172545"><span class="nick" style="color:#389600"><a href="#172545" label="[17:25:45]">&lt;stikonas&gt;</a></span><span class="message">it might be possible to recreate it using sed/awk/bash</span></div><div class="line" id="172613"><span class="nick" style="color:#389600"><a href="#172613" label="[17:26:13]">&lt;stikonas&gt;</a></span><span class="message">especially with awk we can do qutie a bit of stuff...</span></div><div class="line" id="172644"><span class="nick" style="color:#389600"><a href="#172644" label="[17:26:44]">&lt;stikonas&gt;</a></span><span class="message">keywords.h was actually &quot;one liner&quot; <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/a99dcef8db0e3cecf692af6629f6e30e8e612d60#diff-c97b2cbe3a9ffff9805296bb945e5154e22ba96aa18272f3c323c30a647c31b3R17">https://github.com/stikonas/live-bootstrap/commit/a99dcef8db0e3cecf692af6629f6e30e8e612d60#diff-c97b2cbe3a9ffff9805296bb945e5154e22ba96aa18272f3c323c30a647c31b3R17</a> </span></div><div class="line" id="172651"><span class="nick" style="color:#389600"><a href="#172651" label="[17:26:51]">&lt;stikonas&gt;</a></span><span class="message">but opcode.h is more  complicated</span></div><div class="line" id="172748"><span class="nick" style="color:#389600"><a href="#172748" label="[17:27:48]">&lt;stikonas&gt;</a></span><span class="message">pder: that's also the reason why we chose perl 5.000</span></div><div class="line" id="172804"><span class="nick" style="color:#389600"><a href="#172804" label="[17:28:04]">&lt;stikonas&gt;</a></span><span class="message">anything newer (even 5.001)  need another script embed.pl</span></div><div class="line" id="172817"><span class="nick" style="color:#389600"><a href="#172817" label="[17:28:17]">&lt;stikonas&gt;</a></span><span class="message">but in 5.000 it uses bash script embed_H.sh</span></div><div class="line" id="222051"><span class="nick" style="color:#2e2a4a"><a href="#222051" label="[22:20:51]">&lt;pder&gt;</a></span><span class="message">stikonas: opcode.h appears to be a minor pain but doable without perl</span></div><div class="line" id="222226"><span class="nick" style="color:#389600"><a href="#222226" label="[22:22:26]">&lt;stikonas&gt;</a></span><span class="message">pder: yeah, I haven't looked at it yet</span></div><div class="line" id="222259"><span class="nick" style="color:#389600"><a href="#222259" label="[22:22:59]">&lt;stikonas&gt;</a></span><span class="message">are you looking at it or not really (to avoid any duplicate work)</span></div><div class="line" id="222321"><span class="nick" style="color:#389600"><a href="#222321" label="[22:23:21]">&lt;stikonas&gt;</a></span><span class="message">but indeed, I don't think it would be too hard,,,</span></div><div class="line" id="222347"><span class="nick" style="color:#389600"><a href="#222347" label="[22:23:47]">&lt;stikonas&gt;</a></span><span class="message">well, once fossy merges your other PRs we can use gawk...</span></div><div class="line" id="222424"><span class="nick" style="color:#2e2a4a"><a href="#222424" label="[22:24:24]">&lt;pder&gt;</a></span><span class="message">not really.  I took a stab at trying to compile binutils 2.14 with what we have so far.  Suprisingly tcc-mes makes it farther than tcc-musl</span></div><div class="line" id="222445"><span class="nick" style="color:#389600"><a href="#222445" label="[22:24:45]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think I observed  that too...</span></div><div class="line" id="222454"><span class="nick" style="color:#389600"><a href="#222454" label="[22:24:54]">&lt;stikonas&gt;</a></span><span class="message">pder: have you used options from guix?</span></div><div class="line" id="222458"><span class="nick" style="color:#2e2a4a"><a href="#222458" label="[22:24:58]">&lt;pder&gt;</a></span><span class="message">I used guix commencement.scm as a reference</span></div><div class="line" id="222502"><span class="nick" style="color:#389600"><a href="#222502" label="[22:25:02]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="222514"><span class="nick" style="color:#389600"><a href="#222514" label="[22:25:14]">&lt;stikonas&gt;</a></span><span class="message">for musl, maybe we need to tweak them a bit...</span></div><div class="line" id="222528"><span class="nick" style="color:#389600"><a href="#222528" label="[22:25:28]">&lt;stikonas&gt;</a></span><span class="message">if musl, maybe evne newer binutils would work better?</span></div><div class="line" id="222536"><span class="nick" style="color:#2e2a4a"><a href="#222536" label="[22:25:36]">&lt;pder&gt;</a></span><span class="message">I kept running into &quot;too many basic types&quot; errors from tcc</span></div><div class="line" id="222542"><span class="nick" style="color:#389600"><a href="#222542" label="[22:25:42]">&lt;stikonas&gt;</a></span><span class="message">well, that just needs some experiments</span></div><div class="line" id="222544"><span class="nick" style="color:#389600"><a href="#222544" label="[22:25:44]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="222613"><span class="nick" style="color:#389600"><a href="#222613" label="[22:26:13]">&lt;stikonas&gt;</a></span><span class="message">but strange, why would it work on guix and not here...</span></div><div class="line" id="222622"><span class="nick" style="color:#389600"><a href="#222622" label="[22:26:22]">&lt;stikonas&gt;</a></span><span class="message">tcc-mes should be basically where guix is</span></div><div class="line" id="222701"><span class="nick" style="color:#2e2a4a"><a href="#222701" label="[22:27:01]">&lt;pder&gt;</a></span><span class="message">that error was from tcc-musl.  tcc-mes did not give that error, but died somewhere else that I cant remember</span></div><div class="line" id="222813"><span class="nick" style="color:#389600"><a href="#222813" label="[22:28:13]">&lt;stikonas&gt;</a></span><span class="message">I briefly looked at perl's metaconfig's README, it's also not particularly nice :(</span></div><div class="line" id="222819"><span class="nick" style="color:#389600"><a href="#222819" label="[22:28:19]">&lt;stikonas&gt;</a></span><span class="message">although, we don't really need ir right now</span></div><div class="line" id="230115"><span class="nick" style="color:#389600"><a href="#230115" label="[23:01:15]">&lt;stikonas&gt;</a></span><span class="message">pder: ok, I'll start working on opcode.h, so don't do it at the same time...</span></div><div class="line" id="232429"><span class="nick" style="color:#2e2a4a"><a href="#232429" label="[23:24:29]">&lt;pder&gt;</a></span><span class="message">ok, good luck :)</span></div><div class="line" id="232512"><span class="nick" style="color:#389600"><a href="#232512" label="[23:25:12]">&lt;stikonas&gt;</a></span><span class="message">pder: well, 1/3 done</span></div><div class="line" id="232515"><span class="nick" style="color:#389600"><a href="#232515" label="[23:25:15]">&lt;stikonas&gt;</a></span><span class="message">2 out of 6</span></div><div class="line" id="232606"><span class="nick" style="color:#389600"><a href="#232606" label="[23:26:06]">&lt;stikonas&gt;</a></span><span class="message">maybe even slightly shorter than perl code...</span></div><div class="line" id="232611"><span class="nick" style="color:#389600"><a href="#232611" label="[23:26:11]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's prety trivial</span></div><div class="line" id="232631"><span class="nick" style="color:#389600"><a href="#232631" label="[23:26:31]">&lt;stikonas&gt;</a></span><span class="message">perl code just looks at the table and prints columns with some prefixes and suffixes</span></div><div class="line" id="232650"><span class="nick" style="color:#389600"><a href="#232650" label="[23:26:50]">&lt;stikonas&gt;</a></span><span class="message">so something like awk -F'\t' '{print &quot;\t\&quot;&quot;$2&quot;\&quot;,&quot;}' data</span></div><div class="line" id="232652"><span class="nick" style="color:#389600"><a href="#232652" label="[23:26:52]">&lt;stikonas&gt;</a></span><span class="message">does the job</span></div><div class="line" id="232734"><span class="nick" style="color:#389600"><a href="#232734" label="[23:27:34]">&lt;stikonas&gt;</a></span><span class="message">so I think in two days perl might be already merged into live-bootstrap</span></div><div class="line" id="232802"><span class="nick" style="color:#389600"><a href="#232802" label="[23:28:02]">&lt;stikonas&gt;</a></span><span class="message">well, this miniperl, not full perl...</span></div><div class="line" id="235542"><span class="nick" style="color:#389600"><a href="#235542" label="[23:55:42]">&lt;stikonas&gt;</a></span><span class="message">ok, definitely not too bad, 5 out of 6 are done. last one might be a bit more complicated but should be doable</span></div><br /></div></body></html>