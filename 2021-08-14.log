<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-08-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="013607"><span class="nick">***</span><span class="message notice">Noisytoot_ is now known as Noisytoot</span></div><div class="line" id="040401"><span class="nick" style="color:#8dd3c7"><a href="#040401" label="[04:04:01]">&lt;fossy&gt;</a></span><span class="message">wtf mpfr</span></div><div class="line" id="040403"><span class="nick" style="color:#8dd3c7"><a href="#040403" label="[04:04:03]">&lt;fossy&gt;</a></span><span class="message">configure: error: libgmp not found or uses a different ABI (including static vs shared).</span></div><div class="line" id="040407"><span class="nick" style="color:#8dd3c7"><a href="#040407" label="[04:04:07]">&lt;fossy&gt;</a></span><span class="message">it is THERE</span></div><div class="line" id="063511"><span class="nick" style="color:#2e2a4a"><a href="#063511" label="[06:35:11]">&lt;pabs3&gt;</a></span><span class="message">homemade silicon IC fab process: <a rel="nofollow" href="http://sam.zeloof.xyz/second-ic/">http://sam.zeloof.xyz/second-ic/</a>  <a rel="nofollow" href="https://news.ycombinator.com/item?id=28176255">https://news.ycombinator.com/item?id=28176255</a> </span></div><div class="line" id="130641"><span class="nick" style="color:#6b8072"><a href="#130641" label="[13:06:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: anything else in config.log?</span></div><div class="line" id="161729"><span class="nick" style="color:#80b1d3"><a href="#161729" label="[16:17:29]">&lt;oriansj&gt;</a></span><span class="message">fossy: as they say: bootstrapping is the discovery of all programming sins. Including unreliable kludges</span></div><div class="line" id="162029"><span class="nick" style="color:#80b1d3"><a href="#162029" label="[16:20:29]">&lt;oriansj&gt;</a></span><span class="message">pabs3: 1200 transistors!!! that is enough for a 12bit CPU (the PDP-8s only needed 519 gates total)</span></div><div class="line" id="163343"><span class="nick" style="color:#80b1d3"><a href="#163343" label="[16:33:43]">&lt;oriansj&gt;</a></span><span class="message">once it gets to the 16bit level, we will be able to leverage it to bootstrap all the way to up cc_* (32bit is needed for M2-Planet and above)</span></div><div class="line" id="164509"><span class="nick" style="color:#6b8072"><a href="#164509" label="[16:45:09]">&lt;stikonas&gt;</a></span><span class="message">which tools require 16-bit?</span></div><div class="line" id="164516"><span class="nick" style="color:#6b8072"><a href="#164516" label="[16:45:16]">&lt;stikonas&gt;</a></span><span class="message">just cc?</span></div><div class="line" id="164705"><span class="nick" style="color:#80b1d3"><a href="#164705" label="[16:47:05]">&lt;oriansj&gt;</a></span><span class="message">stikonas: no tools require 16bit. just only some tools fit within 64KB of RAM for both program and all working data</span></div><div class="line" id="164903"><span class="nick" style="color:#6b8072"><a href="#164903" label="[16:49:03]">&lt;stikonas&gt;</a></span><span class="message">catm actually reserved 1MiB but that can be reduced...</span></div><div class="line" id="164945"><span class="nick" style="color:#80b1d3"><a href="#164945" label="[16:49:45]">&lt;oriansj&gt;</a></span><span class="message">absolutely (it can be reduced down to 1byte and still work; if only much slower)</span></div><div class="line" id="164949"><span class="nick" style="color:#6b8072"><a href="#164949" label="[16:49:49]">&lt;stikonas&gt;</a></span><span class="message">and it's only on POSIX that it needs that...</span></div><div class="line" id="165032"><span class="nick" style="color:#6b8072"><a href="#165032" label="[16:50:32]">&lt;stikonas&gt;</a></span><span class="message">on paper tape catm is almost optional...</span></div><div class="line" id="165115"><span class="nick" style="color:#80b1d3"><a href="#165115" label="[16:51:15]">&lt;oriansj&gt;</a></span><span class="message">stikonas: actually catm on bare metal would be needed on media forms that can not be manually combined. with a hit enter after inserting next media sort of thing</span></div><div class="line" id="165134"><span class="nick" style="color:#80b1d3"><a href="#165134" label="[16:51:34]">&lt;oriansj&gt;</a></span><span class="message">(hit q to finish sort of thing)</span></div><div class="line" id="165205"><span class="nick" style="color:#6b8072"><a href="#165205" label="[16:52:05]">&lt;stikonas&gt;</a></span><span class="message">oh yes, if you use something like floppies</span></div><div class="line" id="165238"><span class="nick" style="color:#80b1d3"><a href="#165238" label="[16:52:38]">&lt;oriansj&gt;</a></span><span class="message">or magnetic tape or USBs or MicroSD cards, etc</span></div><div class="line" id="165328"><span class="nick" style="color:#6b8072"><a href="#165328" label="[16:53:28]">&lt;stikonas&gt;</a></span><span class="message">btw, I spotted that bootstrap-seeds has an outdated amd64 hex0-seed...</span></div><div class="line" id="165349"><span class="nick" style="color:#6b8072"><a href="#165349" label="[16:53:49]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/pull/7">https://github.com/oriansj/bootstrap-seeds/pull/7</a> </span></div><div class="line" id="165403"><span class="nick" style="color:#6b8072"><a href="#165403" label="[16:54:03]">&lt;stikonas&gt;</a></span><span class="message">and later (hopefully today) I should also have hex1 for risc-v</span></div><div class="line" id="165426"><span class="nick" style="color:#6b8072"><a href="#165426" label="[16:54:26]">&lt;stikonas&gt;</a></span><span class="message">only need to encode branching jumps now (other ones are now done)</span></div><div class="line" id="165720"><span class="nick" style="color:#80b1d3"><a href="#165720" label="[16:57:20]">&lt;oriansj&gt;</a></span><span class="message">stikonas: nice</span></div><div class="line" id="165946"><span class="nick" style="color:#80b1d3"><a href="#165946" label="[16:59:46]">&lt;oriansj&gt;</a></span><span class="message">and thank you. merged</span></div><div class="line" id="191144"><span class="nick" style="color:#6b8072"><a href="#191144" label="[19:11:44]">&lt;stikonas&gt;</a></span><span class="message">oriansj: and hex1 is up <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/37/">https://github.com/oriansj/stage0-posix/pull/37/</a> </span></div><div class="line" id="191336"><span class="nick" style="color:#6b8072"><a href="#191336" label="[19:13:36]">&lt;stikonas&gt;</a></span><span class="message">it's almost as large as hex2 for x86...</span></div><div class="line" id="191608"><span class="nick" style="color:#80b1d3"><a href="#191608" label="[19:16:08]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well we knew that was likely because of the encoding complexity of RISC-V but it is nice to see that you managed to find a small subset for RISC-V to make the step a bit more auditable.</span></div><div class="line" id="192513"><span class="nick" style="color:#80b1d3"><a href="#192513" label="[19:25:13]">&lt;oriansj&gt;</a></span><span class="message">and merged</span></div><div class="line" id="194722"><span class="nick" style="color:#6b8072"><a href="#194722" label="[19:47:22]">&lt;stikonas&gt;</a></span><span class="message">at least no more of this complicated label encoding</span></div><div class="line" id="194821"><span class="nick" style="color:#6b8072"><a href="#194821" label="[19:48:21]">&lt;stikonas&gt;</a></span><span class="message">well, we'll still need to do other things (including encoding actual immediates) until we reach M1...</span></div><div class="line" id="201614"><span class="nick" style="color:#80b1d3"><a href="#201614" label="[20:16:14]">&lt;oriansj&gt;</a></span><span class="message">stikonas: atleast encoding immediates by hand is much less difficult.</span></div><div class="line" id="201644"><span class="nick" style="color:#80b1d3"><a href="#201644" label="[20:16:44]">&lt;oriansj&gt;</a></span><span class="message">Also the platform specific version of M1 is M0 which will support immediate encoding</span></div><div class="line" id="201734"><span class="nick" style="color:#80b1d3"><a href="#201734" label="[20:17:34]">&lt;oriansj&gt;</a></span><span class="message">hopefully this work has helped clear out any encoding bugs in hex2 that might cause us issues for RISC-V</span></div><div class="line" id="202133"><span class="nick" style="color:#6b8072"><a href="#202133" label="[20:21:33]">&lt;stikonas&gt;</a></span><span class="message">well, yeah, I meant M0 actually...</span></div><div class="line" id="202150"><span class="nick" style="color:#6b8072"><a href="#202150" label="[20:21:50]">&lt;stikonas&gt;</a></span><span class="message">and yes, I think encoding bugs should be cleared now</span></div><div class="line" id="202218"><span class="nick" style="color:#6b8072"><a href="#202218" label="[20:22:18]">&lt;stikonas&gt;</a></span><span class="message">we'll see eventually</span></div><div class="line" id="202229"><span class="nick" style="color:#6b8072"><a href="#202229" label="[20:22:29]">&lt;stikonas&gt;</a></span><span class="message">but in any case if there is anything left, should be a minor bug</span></div><div class="line" id="202301"><span class="nick" style="color:#6b8072"><a href="#202301" label="[20:23:01]">&lt;stikonas&gt;</a></span><span class="message">but I did build those development files with C versions of hex2 and M1</span></div><div class="line" id="221322"><span class="nick" style="color:#80b1d3"><a href="#221322" label="[22:13:22]">&lt;oriansj&gt;</a></span><span class="message">stikonas: good. hopefully after you finish M0, we will have found and cleared out all M1 RISC-V bugs as well.</span></div><div class="line" id="223335"><span class="nick" style="color:#6b8072"><a href="#223335" label="[22:33:35]">&lt;stikonas&gt;</a></span><span class="message">that will take some time... I'll be less available for half a month</span></div><div class="line" id="223341"><span class="nick" style="color:#6b8072"><a href="#223341" label="[22:33:41]">&lt;stikonas&gt;</a></span><span class="message">but we'll get there</span></div><div class="line" id="230952"><span class="nick" style="color:#80b1d3"><a href="#230952" label="[23:09:52]">&lt;oriansj&gt;</a></span><span class="message">understandably. a half-month delay is no problem. Take care of your personal life first, the bootstrapping work can always wait. (If anyone has a problem with that, they are free to do all the work required themselves.)</span></div><div class="line" id="231339"><span class="nick" style="color:#6d2462"><a href="#231339" label="[23:13:39]">&lt;stikonas[m]&gt;</a></span><span class="message">Sure, it's less tedious from now on anyway</span></div><div class="line" id="231534"><span class="nick" style="color:#80b1d3"><a href="#231534" label="[23:15:34]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well in terms of manual offset calculations absolutely. In terms of effort: nope</span></div><div class="line" id="231609"><span class="nick" style="color:#80b1d3"><a href="#231609" label="[23:16:09]">&lt;oriansj&gt;</a></span><span class="message">everytime we make something easier, we use that additional power to build yet a bigger effort saver.</span></div><div class="line" id="231702"><span class="nick" style="color:#6d2462"><a href="#231702" label="[23:17:02]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, but that's more interesting coding</span></div><div class="line" id="231731"><span class="nick" style="color:#80b1d3"><a href="#231731" label="[23:17:31]">&lt;oriansj&gt;</a></span><span class="message">but also more difficult because it becomes large enough to lose track of all the pieces.</span></div><div class="line" id="231739"><span class="nick" style="color:#6d2462"><a href="#231739" label="[23:17:39]">&lt;stikonas[m]&gt;</a></span><span class="message">I understand that effortwise it's not always easier</span></div><div class="line" id="231820"><span class="nick" style="color:#80b1d3"><a href="#231820" label="[23:18:20]">&lt;oriansj&gt;</a></span><span class="message">I like to think of it as a gently escalating slope. Requiring greater and greater skill in assembly programming.</span></div><div class="line" id="231910"><span class="nick" style="color:#80b1d3"><a href="#231910" label="[23:19:10]">&lt;oriansj&gt;</a></span><span class="message">hex0 one can do without any experience in assembly programming but by M0 you absolutely have to have the basics down solid.</span></div><div class="line" id="232016"><span class="nick" style="color:#80b1d3"><a href="#232016" label="[23:20:16]">&lt;oriansj&gt;</a></span><span class="message">cc_* requires the skills associated with large assembly program development and after which point you can consider yourself a skilled assembly programmer.</span></div><div class="line" id="232341"><span class="nick" style="color:#6b8072"><a href="#232341" label="[23:23:41]">&lt;stikonas&gt;</a></span><span class="message">hmm, I guess so. Although things are made easier but lots of existing examples. It's quite a bit easier to retrace the steps once somebody did it for the first time</span></div><div class="line" id="232552"><span class="nick" style="color:#6b8072"><a href="#232552" label="[23:25:52]">&lt;stikonas&gt;</a></span><span class="message">well, the simplest program is probably kaem-micro now :D</span></div><div class="line" id="232600"><span class="nick" style="color:#6b8072"><a href="#232600" label="[23:26:00]">&lt;stikonas&gt;</a></span><span class="message">or maybe catm...</span></div><div class="line" id="232622"><span class="nick" style="color:#6b8072"><a href="#232622" label="[23:26:22]">&lt;stikonas&gt;</a></span><span class="message">speaking of which, I should do catm for riscv64. Should be fairly quick</span></div><div class="line" id="233516"><span class="nick" style="color:#80b1d3"><a href="#233516" label="[23:35:16]">&lt;oriansj&gt;</a></span><span class="message">stikonas: to be honest, probably submitting proper ELF headers for RISC-V in mescc-tools along with a basic test <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/tree/master/elf_headers">https://github.com/oriansj/mescc-tools/tree/master/elf_headers</a>  would probably be a needed first step to enable Gnu MES to leverage our mescc-tools work for RISC-V</span></div><div class="line" id="233706"><span class="nick" style="color:#80b1d3"><a href="#233706" label="[23:37:06]">&lt;oriansj&gt;</a></span><span class="message">(you can literally just copy any of the hex2 and/or M1 programs already written and plug them in as a valid test)</span></div><div class="line" id="233712"><span class="nick" style="color:#6b8072"><a href="#233712" label="[23:37:12]">&lt;stikonas&gt;</a></span><span class="message">yeah, I was thinking about them too. In any case it's simple</span></div><div class="line" id="233721"><span class="nick" style="color:#6b8072"><a href="#233721" label="[23:37:21]">&lt;stikonas&gt;</a></span><span class="message">just need to replace a couple of hardcoded constants with labels</span></div><div class="line" id="233745"><span class="nick" style="color:#6b8072"><a href="#233745" label="[23:37:45]">&lt;stikonas&gt;</a></span><span class="message">is somebody working on gnu mes?</span></div><div class="line" id="233748"><span class="nick" style="color:#6b8072"><a href="#233748" label="[23:37:48]">&lt;stikonas&gt;</a></span><span class="message">for risc-v?</span></div><div class="line" id="233843"><span class="nick" style="color:#80b1d3"><a href="#233843" label="[23:38:43]">&lt;oriansj&gt;</a></span><span class="message">I believe so. give me a minute to check my notes to see who</span></div><div class="line" id="233950"><span class="nick" style="color:#6b8072"><a href="#233950" label="[23:39:50]">&lt;stikonas&gt;</a></span><span class="message">ok, I found a commit from May by janneke</span></div><div class="line" id="233954"><span class="nick" style="color:#6b8072"><a href="#233954" label="[23:39:54]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/log/?h=wip-riscv">https://git.savannah.gnu.org/cgit/mes.git/log/?h=wip-riscv</a> </span></div><div class="line" id="233958"><span class="nick" style="color:#6b8072"><a href="#233958" label="[23:39:58]">&lt;stikonas&gt;</a></span><span class="message">that might not be the latest info</span></div><div class="line" id="234019"><span class="nick" style="color:#6b8072"><a href="#234019" label="[23:40:19]">&lt;stikonas&gt;</a></span><span class="message">anyway, elf headers would be required for M1 in any case</span></div><div class="line" id="234027"><span class="nick" style="color:#6b8072"><a href="#234027" label="[23:40:27]">&lt;stikonas&gt;</a></span><span class="message">sorry for cc_*</span></div><div class="line" id="234034"><span class="nick" style="color:#6b8072"><a href="#234034" label="[23:40:34]">&lt;stikonas&gt;</a></span><span class="message">it's written in .M1</span></div><div class="line" id="234041"><span class="nick" style="color:#6b8072"><a href="#234041" label="[23:40:41]">&lt;stikonas&gt;</a></span><span class="message">so we need to prepend the header</span></div><div class="line" id="234050"><span class="nick" style="color:#80b1d3"><a href="#234050" label="[23:40:50]">&lt;oriansj&gt;</a></span><span class="message">it does match the info I have saying a laanwj is doing RISC-V work for MES</span></div><div class="line" id="234125"><span class="nick" style="color:#80b1d3"><a href="#234125" label="[23:41:25]">&lt;oriansj&gt;</a></span><span class="message">actually elf headers are written in hex2 not M1 and are needed for M0</span></div><div class="line" id="234151"><span class="nick" style="color:#80b1d3"><a href="#234151" label="[23:41:51]">&lt;oriansj&gt;</a></span><span class="message">that is why the %label1&gt;label2 support is needed in hex2</span></div><div class="line" id="234232"><span class="nick" style="color:#6b8072"><a href="#234232" label="[23:42:32]">&lt;stikonas&gt;</a></span><span class="message">it's probably a good idea to use headers by then, but I guess that's not stricly a requirement.</span></div><div class="line" id="234244"><span class="nick" style="color:#6b8072"><a href="#234244" label="[23:42:44]">&lt;stikonas&gt;</a></span><span class="message">M0 is written in hex2, so can still prepend it</span></div><div class="line" id="234300"><span class="nick" style="color:#80b1d3"><a href="#234300" label="[23:43:00]">&lt;oriansj&gt;</a></span><span class="message">it is required for: ph_filesz, ph_memsz, e_phoff and e_shoff</span></div><div class="line" id="234301"><span class="nick" style="color:#6b8072"><a href="#234301" label="[23:43:01]">&lt;stikonas&gt;</a></span><span class="message">(that doesn't win us anything though)</span></div><div class="line" id="234340"><span class="nick" style="color:#6b8072"><a href="#234340" label="[23:43:40]">&lt;stikonas&gt;</a></span><span class="message">M0 uses those fields?</span></div><div class="line" id="234355"><span class="nick" style="color:#80b1d3"><a href="#234355" label="[23:43:55]">&lt;oriansj&gt;</a></span><span class="message">stikonas: ALL ELF files do</span></div><div class="line" id="234409"><span class="nick" style="color:#80b1d3"><a href="#234409" label="[23:44:09]">&lt;oriansj&gt;</a></span><span class="message">you just have been manually calculating them up until this point</span></div><div class="line" id="234424"><span class="nick" style="color:#6b8072"><a href="#234424" label="[23:44:24]">&lt;stikonas&gt;</a></span><span class="message">well, yes, but that is one time job since header is static</span></div><div class="line" id="234433"><span class="nick" style="color:#6b8072"><a href="#234433" label="[23:44:33]">&lt;stikonas&gt;</a></span><span class="message">it becomes more important once you have debug builds etc...</span></div><div class="line" id="234444"><span class="nick" style="color:#80b1d3"><a href="#234444" label="[23:44:44]">&lt;oriansj&gt;</a></span><span class="message">ph_filesz and ph_memsz are just the size of the file</span></div><div class="line" id="234504"><span class="nick" style="color:#6b8072"><a href="#234504" label="[23:45:04]">&lt;stikonas&gt;</a></span><span class="message">oh, I think for riscv we don't calculate those..</span></div><div class="line" id="234506"><span class="nick" style="color:#6b8072"><a href="#234506" label="[23:45:06]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="234513"><span class="nick" style="color:#6b8072"><a href="#234513" label="[23:45:13]">&lt;stikonas&gt;</a></span><span class="message">at least I didn't change anything</span></div><div class="line" id="234514"><span class="nick" style="color:#6b8072"><a href="#234514" label="[23:45:14]">&lt;stikonas&gt;</a></span><span class="message">let me check</span></div><div class="line" id="234643"><span class="nick" style="color:#6b8072"><a href="#234643" label="[23:46:43]">&lt;stikonas&gt;</a></span><span class="message">oh yes, might need to update those...</span></div><div class="line" id="234656"><span class="nick" style="color:#6b8072"><a href="#234656" label="[23:46:56]">&lt;stikonas&gt;</a></span><span class="message">I didn't update those for any of my hex0 files</span></div><div class="line" id="234734"><span class="nick" style="color:#6b8072"><a href="#234734" label="[23:47:34]">&lt;stikonas&gt;</a></span><span class="message">they still seemed to work but I guess better to fix</span></div><div class="line" id="235039"><span class="nick" style="color:#6b8072"><a href="#235039" label="[23:50:39]">&lt;stikonas&gt;</a></span><span class="message">I guess it sets .text are RO there</span></div><div class="line" id="235407"><span class="nick" style="color:#6b8072"><a href="#235407" label="[23:54:07]">&lt;stikonas&gt;</a></span><span class="message">oriansj: that's for bootstrap-seeds <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/pull/8">https://github.com/oriansj/bootstrap-seeds/pull/8</a> </span></div><div class="line" id="235421"><span class="nick" style="color:#80b1d3"><a href="#235421" label="[23:54:21]">&lt;oriansj&gt;</a></span><span class="message">stikonas: if the values are wrong a little bit it is ok. BUT if the values are too low and your program will not be entirely loaded into memory</span></div><div class="line" id="235425"><span class="nick" style="color:#6b8072"><a href="#235425" label="[23:54:25]">&lt;stikonas&gt;</a></span><span class="message">once you merge it, I'll update submodule in stage0-posix and do fixes there too</span></div><div class="line" id="235440"><span class="nick" style="color:#6b8072"><a href="#235440" label="[23:54:40]">&lt;stikonas&gt;</a></span><span class="message">well, let's fix them properly</span></div><div class="line" id="235514"><span class="nick" style="color:#6b8072"><a href="#235514" label="[23:55:14]">&lt;stikonas&gt;</a></span><span class="message">because for hex1 it was already 3 times smaller than program size</span></div><div class="line" id="235727"><span class="nick" style="color:#80b1d3"><a href="#235727" label="[23:57:27]">&lt;oriansj&gt;</a></span><span class="message">e_phoff  is either 0x34 or 0x40 for 32- and 64-bit ELF executables, respectively. and e_shoff are where to lookup the section headers (blood-elf output) in early stages will just be zero</span></div><div class="line" id="235848"><span class="nick" style="color:#6b8072"><a href="#235848" label="[23:58:48]">&lt;stikonas&gt;</a></span><span class="message">yeah, e_phoff was already set to 0x40</span></div><div class="line" id="235925"><span class="nick" style="color:#80b1d3"><a href="#235925" label="[23:59:25]">&lt;oriansj&gt;</a></span><span class="message">bootstrap-seeds merged</span></div><div class="line" id="235925"><span class="nick" style="color:#6b8072"><a href="#235925" label="[23:59:25]">&lt;stikonas&gt;</a></span><span class="message">and there is an unnecessary TODO in e_entry, I think it can be removed...</span></div><br /></div></body></html>