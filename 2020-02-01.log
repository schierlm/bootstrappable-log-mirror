<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-02-01.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000255"><span class="nick" style="color:#389600"><a href="#000255" label="[00:02:55]">&lt;oriansj&gt;</a></span><span class="message">cc_amd64.s for stage0 is done</span></div><div class="line" id="000258"><span class="nick" style="color:#389600"><a href="#000258" label="[00:02:58]">&lt;oriansj&gt;</a></span><span class="message">patches are up</span></div><div class="line" id="001124"><span class="nick" style="color:#389600"><a href="#001124" label="[00:11:24]">&lt;oriansj&gt;</a></span><span class="message">up next cc_knight-posix in C</span></div><div class="line" id="001246"><span class="nick" style="color:#389600"><a href="#001246" label="[00:12:46]">&lt;oriansj&gt;</a></span><span class="message">patches are up</span></div><div class="line" id="001650"><span class="nick" style="color:#389600"><a href="#001650" label="[00:16:50]">&lt;oriansj&gt;</a></span><span class="message">and cc_knight-posix.s for stage0 is done</span></div><div class="line" id="001707"><span class="nick" style="color:#389600"><a href="#001707" label="[00:17:07]">&lt;oriansj&gt;</a></span><span class="message">now to do cc_armv7l for stage0 in C</span></div><div class="line" id="002710"><span class="nick" style="color:#389600"><a href="#002710" label="[00:27:10]">&lt;oriansj&gt;</a></span><span class="message">(the benefits of a 45 line diff between knight-native and knight-posix)</span></div><div class="line" id="003213"><span class="nick" style="color:#2e2a4a"><a href="#003213" label="[00:32:13]">&lt;vagrantc&gt;</a></span><span class="message">identical i386 mes-mescc-static binaries in the debian packages. I'm sold.</span></div><div class="line" id="003259"><span class="nick" style="color:#389600"><a href="#003259" label="[00:32:59]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: it gets better; universal cross-platform reproducibility</span></div><div class="line" id="003309"><span class="nick" style="color:#2e2a4a"><a href="#003309" label="[00:33:09]">&lt;vagrantc&gt;</a></span><span class="message">and other diffs to be expected: <a rel="nofollow" href="https://try.diffoscope.org/pudeytddeczq.html">https://try.diffoscope.org/pudeytddeczq.html</a> </span></div><div class="line" id="003422"><span class="nick" style="color:#2e2a4a"><a href="#003422" label="[00:34:22]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: :)</span></div><div class="line" id="003436"><span class="nick" style="color:#389600"><a href="#003436" label="[00:34:36]">&lt;oriansj&gt;</a></span><span class="message">no difference between an ARMv7l system or an x86 or Knight or PowerPC or RISC-V system when given the same input; they all generate EXACTLY identical output</span></div><div class="line" id="003453"><span class="nick" style="color:#2e2a4a"><a href="#003453" label="[00:34:53]">&lt;vagrantc&gt;</a></span><span class="message">this is for what part?</span></div><div class="line" id="003509"><span class="nick" style="color:#2e2a4a"><a href="#003509" label="[00:35:09]">&lt;vagrantc&gt;</a></span><span class="message">obviously, you need differences for a binary to run on arm vs. x86</span></div><div class="line" id="003515"><span class="nick" style="color:#389600"><a href="#003515" label="[00:35:15]">&lt;oriansj&gt;</a></span><span class="message">The M2-Planet, M1-macro, hex2 and blood-elf</span></div><div class="line" id="003519"><span class="nick" style="color:#2e2a4a"><a href="#003519" label="[00:35:19]">&lt;vagrantc&gt;</a></span><span class="message">or cross-compiler?</span></div><div class="line" id="003548"><span class="nick" style="color:#389600"><a href="#003548" label="[00:35:48]">&lt;oriansj&gt;</a></span><span class="message">You have to specify --architecture and --$Endianness</span></div><div class="line" id="003609"><span class="nick" style="color:#6b8072"><a href="#003609" label="[00:36:09]">&lt;dddddd&gt;</a></span><span class="message">hello booters!</span></div><div class="line" id="003610"><span class="nick" style="color:#389600"><a href="#003610" label="[00:36:10]">&lt;oriansj&gt;</a></span><span class="message">So identical input with identical arguments =&gt; always identical outputs</span></div><div class="line" id="003631"><span class="nick" style="color:#2e2a4a"><a href="#003631" label="[00:36:31]">&lt;vagrantc&gt;</a></span><span class="message">\o/</span></div><div class="line" id="003636"><span class="nick" style="color:#389600"><a href="#003636" label="[00:36:36]">&lt;oriansj&gt;</a></span><span class="message">hey dddddd (I'm doing a cc_* speed run for stage0)</span></div><div class="line" id="003702"><span class="nick" style="color:#6b8072"><a href="#003702" label="[00:37:02]">&lt;dddddd&gt;</a></span><span class="message">I see, you're really fast</span></div><div class="line" id="003706"><span class="nick" style="color:#389600"><a href="#003706" label="[00:37:06]">&lt;oriansj&gt;</a></span><span class="message">all that remains is ARMv7l (and AArch64 if you are ready)</span></div><div class="line" id="003716"><span class="nick" style="color:#389600"><a href="#003716" label="[00:37:16]">&lt;oriansj&gt;</a></span><span class="message">thank emacs</span></div><div class="line" id="003823"><span class="nick" style="color:#6b8072"><a href="#003823" label="[00:38:23]">&lt;dddddd&gt;</a></span><span class="message">I'm going to continue finishing the branch in a minute, until done I hope.</span></div><div class="line" id="003837"><span class="nick" style="color:#389600"><a href="#003837" label="[00:38:37]">&lt;oriansj&gt;</a></span><span class="message">me too ^_^</span></div><div class="line" id="003844"><span class="nick" style="color:#6b8072"><a href="#003844" label="[00:38:44]">&lt;dddddd&gt;</a></span><span class="message">I'll keep you in the loop</span></div><div class="line" id="005549"><span class="nick" style="color:#389600"><a href="#005549" label="[00:55:49]">&lt;oriansj&gt;</a></span><span class="message">and cc_armv7l for stage0 has been prototyped</span></div><div class="line" id="005551"><span class="nick" style="color:#389600"><a href="#005551" label="[00:55:51]">&lt;oriansj&gt;</a></span><span class="message">patches are up</span></div><div class="line" id="005610"><span class="nick" style="color:#2e2a4a"><a href="#005610" label="[00:56:10]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: uploaded mescc-tools 0.7.0-1 to debian ... that was a smooth update! :)</span></div><div class="line" id="005654"><span class="nick" style="color:#389600"><a href="#005654" label="[00:56:54]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: good</span></div><div class="line" id="011544"><span class="nick" style="color:#80b1d3"><a href="#011544" label="[01:15:44]">*</a></span><span class="message">vagrantc wonders if the latest mescc-tools will build on hurd-i386 or kfreebsd-* now: <a rel="nofollow" href="https://buildd.debian.org/mescc-tools">https://buildd.debian.org/mescc-tools</a> </span></div><div class="line" id="011639"><span class="nick" style="color:#2e2a4a"><a href="#011639" label="[01:16:39]">&lt;vagrantc&gt;</a></span><span class="message">oh, the tests will surely still fail</span></div><div class="line" id="011746"><span class="nick" style="color:#389600"><a href="#011746" label="[01:17:46]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: it should build and run on BSDs just fine</span></div><div class="line" id="011822"><span class="nick" style="color:#389600"><a href="#011822" label="[01:18:22]">&lt;oriansj&gt;</a></span><span class="message">on Hurd it should build just fine but the tests might fail (I don't know how well Hurd handles Linux binaries)</span></div><div class="line" id="011842"><span class="nick" style="color:#389600"><a href="#011842" label="[01:18:42]">&lt;oriansj&gt;</a></span><span class="message">(I know BSDs usually have a compatibility layer good enough to run the tests)</span></div><div class="line" id="011843"><span class="nick" style="color:#2e2a4a"><a href="#011843" label="[01:18:43]">&lt;vagrantc&gt;</a></span><span class="message">will find out soonish</span></div><div class="line" id="011911"><span class="nick" style="color:#2e2a4a"><a href="#011911" label="[01:19:11]">&lt;vagrantc&gt;</a></span><span class="message">presuming the compatibility layer is enabled...</span></div><div class="line" id="011931"><span class="nick" style="color:#2e2a4a"><a href="#011931" label="[01:19:31]">&lt;vagrantc&gt;</a></span><span class="message">Debian GNU/kFreeBSD is also one of the oddest of ducks</span></div><div class="line" id="012522"><span class="nick" style="color:#2e2a4a"><a href="#012522" label="[01:25:22]">&lt;vagrantc&gt;</a></span><span class="message">hurd-i386 built! kfreebsd-* still had an exec format error.</span></div><div class="line" id="012559"><span class="nick" style="color:#389600"><a href="#012559" label="[01:25:59]">&lt;oriansj&gt;</a></span><span class="message">also one thing about mescc-tools; if the second half of the test fails but the checksums of the tests are correct. It built correctly but it attempted to run a binary it didn't support</span></div><div class="line" id="012718"><span class="nick" style="color:#2e2a4a"><a href="#012718" label="[01:27:18]">&lt;vagrantc&gt;</a></span><span class="message">might be able to special-case the tests, then</span></div><div class="line" id="012824"><span class="nick" style="color:#389600"><a href="#012824" label="[01:28:24]">&lt;oriansj&gt;</a></span><span class="message">yep; would need your help with that</span></div><div class="line" id="012943"><span class="nick" style="color:#389600"><a href="#012943" label="[01:29:43]">&lt;oriansj&gt;</a></span><span class="message">as I am not remotely familiar with how to detect if on kFreeBSD consistently</span></div><div class="line" id="013057"><span class="nick" style="color:#2e2a4a"><a href="#013057" label="[01:30:57]">&lt;vagrantc&gt;</a></span><span class="message">it's not a very well maintained port anymore, either ... though because it's so unusual it helps with cross-verification :)</span></div><div class="line" id="013107"><span class="nick" style="color:#2e2a4a"><a href="#013107" label="[01:31:07]">&lt;vagrantc&gt;</a></span><span class="message">i'd be happy to back-burner that</span></div><div class="line" id="013122"><span class="nick" style="color:#389600"><a href="#013122" label="[01:31:22]">&lt;oriansj&gt;</a></span><span class="message">sweet</span></div><div class="line" id="013300"><span class="nick" style="color:#389600"><a href="#013300" label="[01:33:00]">&lt;oriansj&gt;</a></span><span class="message">and cc_armv7l.s is done</span></div><div class="line" id="013325"><span class="nick" style="color:#389600"><a href="#013325" label="[01:33:25]">&lt;oriansj&gt;</a></span><span class="message">and patches are up</span></div><div class="line" id="013515"><span class="nick" style="color:#389600"><a href="#013515" label="[01:35:15]">&lt;oriansj&gt;</a></span><span class="message">only took 3 Hours and 41 minutes to bootstrap 4 C compilers in Assmebly and C</span></div><div class="line" id="013554"><span class="nick" style="color:#389600"><a href="#013554" label="[01:35:54]">&lt;oriansj&gt;</a></span><span class="message">I challenge any other programming language to achieve that feat in less time</span></div><div class="line" id="013606"><span class="nick" style="color:#2e2a4a"><a href="#013606" label="[01:36:06]">&lt;vagrantc&gt;</a></span><span class="message"> <a rel="nofollow" href="https://wiki.debian.org/Debian_GNU/kFreeBSD_FAQ#Q._How_should_I_detect_kfreebsd_in_debian.2Frules.3F">https://wiki.debian.org/Debian_GNU/kFreeBSD_FAQ#Q._How_should_I_detect_kfreebsd_in_debian.2Frules.3F</a> </span></div><div class="line" id="013630"><span class="nick" style="color:#2e2a4a"><a href="#013630" label="[01:36:30]">&lt;vagrantc&gt;</a></span><span class="message">and the following question</span></div><div class="line" id="013738"><span class="nick" style="color:#389600"><a href="#013738" label="[01:37:38]">&lt;oriansj&gt;</a></span><span class="message">what exactly is: DEB_HOST_ARCH_OS</span></div><div class="line" id="013757"><span class="nick" style="color:#2e2a4a"><a href="#013757" label="[01:37:57]">&lt;vagrantc&gt;</a></span><span class="message">it's specific to debian packaging</span></div><div class="line" id="013804"><span class="nick" style="color:#2e2a4a"><a href="#013804" label="[01:38:04]">&lt;vagrantc&gt;</a></span><span class="message">well, sort of</span></div><div class="line" id="013841"><span class="nick" style="color:#2e2a4a"><a href="#013841" label="[01:38:41]">&lt;vagrantc&gt;</a></span><span class="message">if there's a way i could call the tests differently for kfreebsd, that would be an option ...</span></div><div class="line" id="014021"><span class="nick" style="color:#2e2a4a"><a href="#014021" label="[01:40:21]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: see the dpkg-architecture man page for more detail</span></div><div class="line" id="014051"><span class="nick" style="color:#389600"><a href="#014051" label="[01:40:51]">&lt;oriansj&gt;</a></span><span class="message">except we are trying to determine if a stage in a test should run (a shell script to be precise)</span></div><div class="line" id="014231"><span class="nick" style="color:#389600"><a href="#014231" label="[01:42:31]">&lt;oriansj&gt;</a></span><span class="message">as the gcc build version of the tools, should behave correctly; it is just the tests that need to have a stage skipped</span></div><div class="line" id="014501"><span class="nick" style="color:#2e2a4a"><a href="#014501" label="[01:45:01]">&lt;vagrantc&gt;</a></span><span class="message">right</span></div><div class="line" id="014519"><span class="nick" style="color:#80b1d3"><a href="#014519" label="[01:45:19]">*</a></span><span class="message">vagrantc asks on irc.oftc.net #debian-kbsd</span></div><div class="line" id="015231"><span class="nick">***</span><span class="message notice">fosslinux is now known as fossy</span></div><div class="line" id="030303"><span class="nick" style="color:#6b8072"><a href="#030303" label="[03:03:03]">&lt;dddddd&gt;</a></span><span class="message">test/test99/hello-x86.sh: 49: test/test99/hello-x86.sh: exec_enable: not found</span></div><div class="line" id="030525"><span class="nick" style="color:#6b8072"><a href="#030525" label="[03:05:25]">&lt;dddddd&gt;</a></span><span class="message">exec_enables was removed in 5dc7acad7f4f of mescc-tools</span></div><div class="line" id="030533"><span class="nick" style="color:#6b8072"><a href="#030533" label="[03:05:33]">&lt;dddddd&gt;</a></span><span class="message">*exec_enable</span></div><div class="line" id="030836"><span class="nick" style="color:#6b8072"><a href="#030836" label="[03:08:36]">&lt;dddddd&gt;</a></span><span class="message">The amd64 script also tries to use it.</span></div><div class="line" id="031228"><span class="nick" style="color:#6b8072"><a href="#031228" label="[03:12:28]">&lt;dddddd&gt;</a></span><span class="message">Removing the call from the script:</span></div><div class="line" id="031233"><span class="nick" style="color:#6b8072"><a href="#031233" label="[03:12:33]">&lt;dddddd&gt;</a></span><span class="message">test/test99/hello-x86.sh: 49: test/test99/hello-x86.sh: ./test/test99/cc1: Permission denied</span></div><div class="line" id="031601"><span class="nick" style="color:#6b8072"><a href="#031601" label="[03:16:01]">&lt;dddddd&gt;</a></span><span class="message">For other archs the script is shorter, not trying the steps involved with final execution</span></div><div class="line" id="031704"><span class="nick" style="color:#6b8072"><a href="#031704" label="[03:17:04]">&lt;dddddd&gt;</a></span><span class="message">I'll cut that part in x86 locally for now</span></div><div class="line" id="032224"><span class="nick" style="color:#389600"><a href="#032224" label="[03:22:24]">&lt;oriansj&gt;</a></span><span class="message">dddddd: exec_enable can be replaced by chmod u+x</span></div><div class="line" id="032255"><span class="nick" style="color:#6b8072"><a href="#032255" label="[03:22:55]">&lt;dddddd&gt;</a></span><span class="message">sure, but do we want that?</span></div><div class="line" id="032318"><span class="nick" style="color:#389600"><a href="#032318" label="[03:23:18]">&lt;oriansj&gt;</a></span><span class="message">dddddd: the tests are not used when bootstrapping</span></div><div class="line" id="032356"><span class="nick" style="color:#389600"><a href="#032356" label="[03:23:56]">&lt;oriansj&gt;</a></span><span class="message">only when doing development on existing systems</span></div><div class="line" id="032445"><span class="nick" style="color:#6b8072"><a href="#032445" label="[03:24:45]">&lt;dddddd&gt;</a></span><span class="message">OK, I'll complete the script for AArch64, using chmod and the final execution (arm7 and both knight lacks those)</span></div><div class="line" id="032537"><span class="nick" style="color:#389600"><a href="#032537" label="[03:25:37]">&lt;oriansj&gt;</a></span><span class="message">well because test99 is building C500 which is an x86 only C compiler</span></div><div class="line" id="032835"><span class="nick" style="color:#389600"><a href="#032835" label="[03:28:35]">&lt;oriansj&gt;</a></span><span class="message">The first step is just running it to self-host; the second step which is the self-hosting only works on platforms that can run x86 binaries directly</span></div><div class="line" id="032936"><span class="nick" style="color:#389600"><a href="#032936" label="[03:29:36]">&lt;oriansj&gt;</a></span><span class="message">(as C500 never included support for chmod since it is STDIN and STDOUT only</span></div><div class="line" id="032939"><span class="nick" style="color:#389600"><a href="#032939" label="[03:29:39]">&lt;oriansj&gt;</a></span><span class="message">)</span></div><div class="line" id="033107"><span class="nick" style="color:#6b8072"><a href="#033107" label="[03:31:07]">&lt;dddddd&gt;</a></span><span class="message">OK, so no changes to the AArch64 script.</span></div><div class="line" id="034029"><span class="nick" style="color:#389600"><a href="#034029" label="[03:40:29]">&lt;oriansj&gt;</a></span><span class="message">So I'll be changing those tests (after I finish fixing the file-native.c for knight-native)</span></div><div class="line" id="035601"><span class="nick" style="color:#80b1d3"><a href="#035601" label="[03:56:01]">*</a></span><span class="message">dddddd BRB</span></div><div class="line" id="041020"><span class="nick" style="color:#389600"><a href="#041020" label="[04:10:20]">&lt;oriansj&gt;</a></span><span class="message">darn; looks like M2-Planet has blown right past the 64KB budget leveraged by knight-native. Guess I need to tweak to support 2GB binaries</span></div><div class="line" id="041902"><span class="nick" style="color:#389600"><a href="#041902" label="[04:19:02]">&lt;oriansj&gt;</a></span><span class="message">looks like knight-native and knight-posix are going to become quite similiar</span></div><div class="line" id="043152"><span class="nick" style="color:#389600"><a href="#043152" label="[04:31:52]">&lt;oriansj&gt;</a></span><span class="message">knight-native now has the ability to self-host M2-Planet (cc-minimal.c) in 294,769,746 clock cycles</span></div><div class="line" id="043357"><span class="nick" style="color:#389600"><a href="#043357" label="[04:33:57]">&lt;oriansj&gt;</a></span><span class="message">or about a factor of 10 slower than the handwriten cc_knight-native.s which does the same job in 32,797,038 clock cycles</span></div><div class="line" id="043902"><span class="nick" style="color:#389600"><a href="#043902" label="[04:39:02]">&lt;oriansj&gt;</a></span><span class="message">you can verify this with: M1 --architecture knight-native --BigEndian -f High_level_prototypes/defs -f stage2/cc_knight-native.s -o scratch/cc_knight-native.hex2 &amp;&amp; hex2 --architecture knight-native --BigEndian -f scratch/cc_knight-native.hex2 -o scratch/cc_knight-native &amp;&amp; ./bin/vm --rom scratch/cc_knight-native --memory 10M</span></div><div class="line" id="044028"><span class="nick" style="color:#389600"><a href="#044028" label="[04:40:28]">&lt;oriansj&gt;</a></span><span class="message">M1 --architecture knight-native --BigEndian -f High_level_prototypes/defs -f ../M2-Planet/test/common_knight/libc-native.M1 -f tape_02 -o scratch/tape_02.hex2 &amp;&amp; hex2 --architecture knight-native --BigEndian -f scratch/tape_02.hex2 -o scratch/M2 &amp;&amp; ./bin/vm --rom scratch/M2 --memory 20M</span></div><div class="line" id="044041"><span class="nick" style="color:#389600"><a href="#044041" label="[04:40:41]">&lt;oriansj&gt;</a></span><span class="message">I'll be commiting the fixes shortly</span></div><div class="line" id="045154"><span class="nick" style="color:#389600"><a href="#045154" label="[04:51:54]">&lt;oriansj&gt;</a></span><span class="message">it of course will be trivial to write cc-minimal.c's for the other targets for M2-Planet. (just replace the line: Architecture = KNIGHT_NATIVE;)</span></div><div class="line" id="045245"><span class="nick" style="color:#389600"><a href="#045245" label="[04:52:45]">&lt;oriansj&gt;</a></span><span class="message">and replace the \n:STACK\n with \n:ELF_end\n</span></div><div class="line" id="045400"><span class="nick" style="color:#389600"><a href="#045400" label="[04:54:00]">&lt;oriansj&gt;</a></span><span class="message">I think that is enough for one night; good night. see you all bright and early ^_^</span></div><div class="line" id="045500"><span class="nick" style="color:#6d2462"><a href="#045500" label="[04:55:00]">&lt;fossy&gt;</a></span><span class="message">good night oriansj</span></div><div class="line" id="045507"><span class="nick" style="color:#6d2462"><a href="#045507" label="[04:55:07]">&lt;fossy&gt;</a></span><span class="message">i will greet you with a PR in your morning</span></div><div class="line" id="052249"><span class="nick" style="color:#6b8072"><a href="#052249" label="[05:22:49]">&lt;dddddd&gt;</a></span><span class="message">Exciting weekend. I need to sleep to wrap this up correctly. See you later, happy coding!</span></div><div class="line" id="092218"><span class="nick" style="color:#6d2462"><a href="#092218" label="[09:22:18]">&lt;fossy&gt;</a></span><span class="message">hmmmm</span></div><div class="line" id="092225"><span class="nick" style="color:#6d2462"><a href="#092225" label="[09:22:25]">&lt;fossy&gt;</a></span><span class="message">i think i have hit a v weird M2-Planet bug</span></div><div class="line" id="092230"><span class="nick" style="color:#6d2462"><a href="#092230" label="[09:22:30]">&lt;fossy&gt;</a></span><span class="message">will investigate in the morning</span></div><div class="line" id="092238"><span class="nick" style="color:#6d2462"><a href="#092238" label="[09:22:38]">&lt;fossy&gt;</a></span><span class="message">desired behaviour occurs in GCC however</span></div><div class="line" id="092244"><span class="nick" style="color:#6d2462"><a href="#092244" label="[09:22:44]">&lt;fossy&gt;</a></span><span class="message">will post code sample too</span></div><div class="line" id="115607"><span class="nick" style="color:#389600"><a href="#115607" label="[11:56:07]">&lt;oriansj&gt;</a></span><span class="message">fossy: sample?</span></div><div class="line" id="120027"><span class="nick" style="color:#389600"><a href="#120027" label="[12:00:27]">&lt;oriansj&gt;</a></span><span class="message">one must remember despite virtually identical syntax and virtually identicial behavior; M2-Planet and C are different in major ways.</span></div><div class="line" id="120521"><span class="nick" style="color:#389600"><a href="#120521" label="[12:05:21]">&lt;oriansj&gt;</a></span><span class="message">although I guess I could work to slowly eliminate those differences, until M2-Planet just becomes a standard C compiler (but god are C macros an abomination)</span></div><div class="line" id="121133"><span class="nick" style="color:#389600"><a href="#121133" label="[12:11:33]">&lt;oriansj&gt;</a></span><span class="message">To see all of the features that will likely never appear in M2-Planet: <a rel="nofollow" href="https://gist.github.com/shakna-israel/4fd31ee469274aa49f8f9793c3e71163#lets-destroy-c">https://gist.github.com/shakna-israel/4fd31ee469274aa49f8f9793c3e71163#lets-destroy-c</a> </span></div><br /></div></body></html>