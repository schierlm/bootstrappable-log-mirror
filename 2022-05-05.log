<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-05-05.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="020740"><span class="nick" style="color:#8dd3c7"><a href="#020740" label="[02:07:40]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: everything that is a git submodule in stage0-posix/mescc-tools/M2-Planet/M2-Mesoplanet can be packaged separately and M2libc can be substituted by any other libc when using a compiler different than M2-Planet</span></div><div class="line" id="020835"><span class="nick" style="color:#8dd3c7"><a href="#020835" label="[02:08:35]">&lt;oriansj&gt;</a></span><span class="message">the only bits you might need to copy are: M2libc/bootstrappable.c and M2libc/bootstrappable.h</span></div><div class="line" id="021126"><span class="nick" style="color:#8dd3c7"><a href="#021126" label="[02:11:26]">&lt;oriansj&gt;</a></span><span class="message">the issue of distributing source code resolves down to you need a trusted way to get source code and the bootstrap-binaries onto a computer you trust. So how you get stage0-posix is the issue you the bootstrapper need to solve. After stage0-posix, you can just use sha256sums to validate the steps after that</span></div><div class="line" id="021334"><span class="nick" style="color:#8dd3c7"><a href="#021334" label="[02:13:34]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: now that is the least accurate xkcd in relation to bootstrapping I have seen.</span></div><div class="line" id="021434"><span class="nick" style="color:#8dd3c7"><a href="#021434" label="[02:14:34]">&lt;oriansj&gt;</a></span><span class="message">this one however seems on track: <a rel="nofollow" href="https://xkcd.com/2347/">https://xkcd.com/2347/</a> </span></div><div class="line" id="021655"><span class="nick" style="color:#8dd3c7"><a href="#021655" label="[02:16:55]">&lt;oriansj&gt;</a></span><span class="message">stikonas: technically it isn't stage0-posix that has a cyclic dependency but rather bootstrap-seeds and that is a non-issue</span></div><div class="line" id="021914"><span class="nick" style="color:#8dd3c7"><a href="#021914" label="[02:19:14]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: and your paranoid worries is extremely healthy for this community to keep the progress honest.</span></div><div class="line" id="022014"><span class="nick" style="color:#8dd3c7"><a href="#022014" label="[02:20:14]">&lt;oriansj&gt;</a></span><span class="message">it is up to us to both solve the technical problems that show up and to the bootstrap honest</span></div><div class="line" id="022034"><span class="nick" style="color:#8dd3c7"><a href="#022034" label="[02:20:34]">&lt;oriansj&gt;</a></span><span class="message">^to the^to keep the^</span></div><div class="line" id="022229"><span class="nick" style="color:#8dd3c7"><a href="#022229" label="[02:22:29]">&lt;oriansj&gt;</a></span><span class="message">and the sources of stage0-posix are now large enough to be classified as a real book</span></div><div class="line" id="022305"><span class="nick" style="color:#2e2a4a"><a href="#022305" label="[02:23:05]">&lt;Hagfish&gt;</a></span><span class="message">yeah, if bootstrapping was a country, xkcd 2347 would be its flag :)</span></div><div class="line" id="022550"><span class="nick" style="color:#8dd3c7"><a href="#022550" label="[02:25:50]">&lt;oriansj&gt;</a></span><span class="message">well janneke did make a bootstrapping flag</span></div><div class="line" id="022610"><span class="nick" style="color:#2e2a4a"><a href="#022610" label="[02:26:10]">&lt;Hagfish&gt;</a></span><span class="message">that sounds half familiar now</span></div><div class="line" id="022740"><span class="nick" style="color:#2e2a4a"><a href="#022740" label="[02:27:40]">&lt;Hagfish&gt;</a></span><span class="message">i wonder if there are physical systems that help to prove the provenance of things</span></div><div class="line" id="022752"><span class="nick" style="color:#2e2a4a"><a href="#022752" label="[02:27:52]">&lt;Hagfish&gt;</a></span><span class="message">like carving the bootstrap binary seed into a mountain, or something</span></div><div class="line" id="025038"><span class="nick" style="color:#8dd3c7"><a href="#025038" label="[02:50:38]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: well physical reality doesn't have a sha256sum yet (and will not until we have matter compilers)</span></div><div class="line" id="025049"><span class="nick" style="color:#6b8072"><a href="#025049" label="[02:50:49]">&lt;muurkha&gt;</a></span><span class="message">probably not even then</span></div><div class="line" id="025150"><span class="nick" style="color:#8dd3c7"><a href="#025150" label="[02:51:50]">&lt;oriansj&gt;</a></span><span class="message">but the pieces of stage0-posix and stage0 are something that a single person could type onto paper tape or honestly any storage media you trust and go from there</span></div><div class="line" id="025259"><span class="nick" style="color:#8dd3c7"><a href="#025259" label="[02:52:59]">&lt;oriansj&gt;</a></span><span class="message">The bootstrap seeds are designed to be hand toggled into memory or replaced easily</span></div><div class="line" id="025347"><span class="nick" style="color:#8dd3c7"><a href="#025347" label="[02:53:47]">&lt;oriansj&gt;</a></span><span class="message">So although we do trust them, the task of replacing them (and providing matching functionality) is quite trivial</span></div><div class="line" id="025439"><span class="nick" style="color:#8dd3c7"><a href="#025439" label="[02:54:39]">&lt;oriansj&gt;</a></span><span class="message">even subsets of the functionality (such as not supporting the line comments) would work if one just didn't type those in.</span></div><div class="line" id="025731"><span class="nick" style="color:#8dd3c7"><a href="#025731" label="[02:57:31]">&lt;oriansj&gt;</a></span><span class="message">set exists as a hex0 program and can be implemented in stage0-posix without much effort and then you could have a line editor enabling you to audit the source code you are going to build and to hand type it in if needed.</span></div><div class="line" id="030111"><span class="nick" style="color:#8dd3c7"><a href="#030111" label="[03:01:11]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0/blob/master/stage1/High_level_prototypes/SET.c">https://github.com/oriansj/stage0/blob/master/stage1/High_level_prototypes/SET.c</a> </span></div><div class="line" id="030321"><span class="nick" style="color:#8dd3c7"><a href="#030321" label="[03:03:21]">&lt;oriansj&gt;</a></span><span class="message">it is around 300 instructions to implement the full functionality: <a rel="nofollow" href="https://github.com/oriansj/stage0/blob/master/stage1/SET.s">https://github.com/oriansj/stage0/blob/master/stage1/SET.s</a> </span></div><div class="line" id="030530"><span class="nick" style="color:#6b8072"><a href="#030530" label="[03:05:30]">&lt;muurkha&gt;</a></span><span class="message">set?</span></div><div class="line" id="030707"><span class="nick" style="color:#8dd3c7"><a href="#030707" label="[03:07:07]">&lt;oriansj&gt;</a></span><span class="message">Shitty expensive Typewriter</span></div><div class="line" id="030819"><span class="nick" style="color:#8dd3c7"><a href="#030819" label="[03:08:19]">&lt;oriansj&gt;</a></span><span class="message">A more shitty remake of the PDP-1's Expensive Typewriter program</span></div><div class="line" id="030848"><span class="nick" style="color:#80b1d3"><a href="#030848" label="[03:08:48]">&lt;achaninja&gt;</a></span><span class="message">I know its against the spirit of everyone - but sometimes it feels like you could have done the bootstrap in private, made a kickstarter for bitcoin</span></div><div class="line" id="030852"><span class="nick" style="color:#80b1d3"><a href="#030852" label="[03:08:52]">&lt;achaninja&gt;</a></span><span class="message">then released it :P</span></div><div class="line" id="030858"><span class="nick" style="color:#80b1d3"><a href="#030858" label="[03:08:58]">&lt;achaninja&gt;</a></span><span class="message">if they are gonna be usnig it anyway without thanking yoyu</span></div><div class="line" id="030930"><span class="nick" style="color:#8dd3c7"><a href="#030930" label="[03:09:30]">&lt;oriansj&gt;</a></span><span class="message">achaninja: I'm just glad the death threats from the Bitcoin community finally died off</span></div><div class="line" id="030943"><span class="nick" style="color:#80b1d3"><a href="#030943" label="[03:09:43]">&lt;achaninja&gt;</a></span><span class="message">yeah not just not thanking you - actively harming</span></div><div class="line" id="031035"><span class="nick" style="color:#8dd3c7"><a href="#031035" label="[03:10:35]">&lt;oriansj&gt;</a></span><span class="message">no actual harm was done but some of those emails clearly indicated mental stability problems</span></div><div class="line" id="031103"><span class="nick" style="color:#8dd3c7"><a href="#031103" label="[03:11:03]">&lt;oriansj&gt;</a></span><span class="message">So I tend to avoid the crypto-community as much as possible</span></div><div class="line" id="031407"><span class="nick" style="color:#6b8072"><a href="#031407" label="[03:14:07]">&lt;muurkha&gt;</a></span><span class="message">oh, heh</span></div><div class="line" id="031418"><span class="nick" style="color:#6b8072"><a href="#031418" label="[03:14:18]">&lt;muurkha&gt;</a></span><span class="message">I see the comment now</span></div><div class="line" id="031636"><span class="nick" style="color:#80b1d3"><a href="#031636" label="[03:16:36]">&lt;achaninja&gt;</a></span><span class="message">oriansj: I made a github issue w.r.t. changes I had to make to get mes-m2 to work</span></div><div class="line" id="031701"><span class="nick" style="color:#80b1d3"><a href="#031701" label="[03:17:01]">&lt;achaninja&gt;</a></span><span class="message">I can do a PR but I didn't feel totally confident I'm right</span></div><div class="line" id="031711"><span class="nick" style="color:#80b1d3"><a href="#031711" label="[03:17:11]">&lt;achaninja&gt;</a></span><span class="message">however its what I needed to make it work on my local machine</span></div><div class="line" id="031933"><span class="nick" style="color:#80b1d3"><a href="#031933" label="[03:19:33]">&lt;achaninja&gt;</a></span><span class="message">changes to the readme*</span></div><div class="line" id="032207"><span class="nick" style="color:#8dd3c7"><a href="#032207" label="[03:22:07]">&lt;oriansj&gt;</a></span><span class="message">well janneke is the mescc expert (and primary author) and he would know best and mes-m2 might just disappear once gnu mes.c becomes buildable by M2-Planet without any changes</span></div><div class="line" id="032229"><span class="nick" style="color:#80b1d3"><a href="#032229" label="[03:22:29]">&lt;achaninja&gt;</a></span><span class="message">oh that would be awesome</span></div><div class="line" id="032303"><span class="nick" style="color:#80b1d3"><a href="#032303" label="[03:23:03]">&lt;achaninja&gt;</a></span><span class="message">I am a janet programmer (lisp like), but not a schemer lol</span></div><div class="line" id="032327"><span class="nick" style="color:#6d2462"><a href="#032327" label="[03:23:27]">&lt;vagrantc&gt;</a></span><span class="message">ah, looks like m2-planet is now a dependency to build mes with --bootstrap</span></div><div class="line" id="032400"><span class="nick" style="color:#6d2462"><a href="#032400" label="[03:24:00]">&lt;vagrantc&gt;</a></span><span class="message">well, been meaning to take a look at that for a while</span></div><div class="line" id="032424"><span class="nick" style="color:#6d2462"><a href="#032424" label="[03:24:24]">&lt;vagrantc&gt;</a></span><span class="message">er, --with-bootstrap</span></div><div class="line" id="032654"><span class="nick" style="color:#8dd3c7"><a href="#032654" label="[03:26:54]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: well --bootstrap-mode is kinda of a special sort of mode</span></div><div class="line" id="032736"><span class="nick" style="color:#8dd3c7"><a href="#032736" label="[03:27:36]">&lt;oriansj&gt;</a></span><span class="message">more about checking for cc_* compatibility than anything else</span></div><div class="line" id="032807"><span class="nick" style="color:#8dd3c7"><a href="#032807" label="[03:28:07]">&lt;oriansj&gt;</a></span><span class="message">but somehow managed to catch a few programs who jumped to using M2-Planet before more standard behavior was adopted.</span></div><div class="line" id="032826"><span class="nick" style="color:#80b1d3"><a href="#032826" label="[03:28:26]">&lt;achaninja&gt;</a></span><span class="message">oriansj: what parts of the system are you most actively working on atm?</span></div><div class="line" id="032906"><span class="nick" style="color:#80b1d3"><a href="#032906" label="[03:29:06]">&lt;achaninja&gt;</a></span><span class="message">its taken a while to understand the layout of all the projects, but I think I get it now</span></div><div class="line" id="032921"><span class="nick" style="color:#80b1d3"><a href="#032921" label="[03:29:21]">&lt;achaninja&gt;</a></span><span class="message">its not as confusing as I thought</span></div><div class="line" id="032944"><span class="nick" style="color:#6b8072"><a href="#032944" label="[03:29:44]">&lt;muurkha&gt;</a></span><span class="message">maybe this would be the ideal time for you to write an overview</span></div><div class="line" id="032946"><span class="nick" style="color:#8dd3c7"><a href="#032946" label="[03:29:46]">&lt;oriansj&gt;</a></span><span class="message">achaninja: right now I am trying to figure out how to do a kernel that M2-Planet can build; so that we can give live-bootstrap a bootstrapped kernel too</span></div><div class="line" id="032954"><span class="nick" style="color:#6b8072"><a href="#032954" label="[03:29:54]">&lt;muurkha&gt;</a></span><span class="message">for future people</span></div><div class="line" id="033023"><span class="nick" style="color:#80b1d3"><a href="#033023" label="[03:30:23]">&lt;achaninja&gt;</a></span><span class="message">muurkha: I'm sort of toying with my own version of live-bootstrap with different goals, i guess its gonna be documented</span></div><div class="line" id="033024"><span class="nick" style="color:#6b8072"><a href="#033024" label="[03:30:24]">&lt;muurkha&gt;</a></span><span class="message">because six months from now you will have forgotten which things seemed non-obvious to you last week</span></div><div class="line" id="033111"><span class="nick" style="color:#80b1d3"><a href="#033111" label="[03:31:11]">&lt;achaninja&gt;</a></span><span class="message">my version trusts the host system slightly more so I can do parallel builds</span></div><div class="line" id="033116"><span class="nick" style="color:#80b1d3"><a href="#033116" label="[03:31:16]">&lt;achaninja&gt;</a></span><span class="message">optionally</span></div><div class="line" id="033132"><span class="nick" style="color:#80b1d3"><a href="#033132" label="[03:31:32]">&lt;achaninja&gt;</a></span><span class="message">so its not a replacement at all</span></div><div class="line" id="033229"><span class="nick" style="color:#80b1d3"><a href="#033229" label="[03:32:29]">&lt;achaninja&gt;</a></span><span class="message">also I personally don't care about automake and autoconf purity</span></div><div class="line" id="033254"><span class="nick" style="color:#80b1d3"><a href="#033254" label="[03:32:54]">&lt;achaninja&gt;</a></span><span class="message">i.e. being able to regenerate from the .ac files</span></div><div class="line" id="033301"><span class="nick" style="color:#6b8072"><a href="#033301" label="[03:33:01]">&lt;muurkha&gt;</a></span><span class="message">I understand</span></div><div class="line" id="033308"><span class="nick" style="color:#6b8072"><a href="#033308" label="[03:33:08]">&lt;muurkha&gt;</a></span><span class="message">(I do care!)</span></div><div class="line" id="033319"><span class="nick" style="color:#80b1d3"><a href="#033319" label="[03:33:19]">&lt;achaninja&gt;</a></span><span class="message">i want to get away from autoconf as fast as possible</span></div><div class="line" id="033334"><span class="nick" style="color:#80b1d3"><a href="#033334" label="[03:33:34]">&lt;achaninja&gt;</a></span><span class="message">not to disrespect it, it does the job, but i don't need it</span></div><div class="line" id="033347"><span class="nick" style="color:#8dd3c7"><a href="#033347" label="[03:33:47]">&lt;oriansj&gt;</a></span><span class="message">achaninja: just not having it is a quick way to force that</span></div><div class="line" id="033431"><span class="nick" style="color:#80b1d3"><a href="#033431" label="[03:34:31]">&lt;achaninja&gt;</a></span><span class="message">the fact that the bootstrap depends so much on perl also annoys me, its hard to avoid</span></div><div class="line" id="033533"><span class="nick" style="color:#80b1d3"><a href="#033533" label="[03:35:33]">&lt;achaninja&gt;</a></span><span class="message">I guess its part of history :D</span></div><div class="line" id="033618"><span class="nick" style="color:#80b1d3"><a href="#033618" label="[03:36:18]">&lt;achaninja&gt;</a></span><span class="message">nearly all modern software depends on perl</span></div><div class="line" id="033624"><span class="nick" style="color:#80b1d3"><a href="#033624" label="[03:36:24]">&lt;achaninja&gt;</a></span><span class="message">because cmake depends on openssl which depends on perl</span></div><div class="line" id="033653"><span class="nick" style="color:#80b1d3"><a href="#033653" label="[03:36:53]">&lt;achaninja&gt;</a></span><span class="message">its kind of this inverted complexity pyramid</span></div><div class="line" id="033810"><span class="nick" style="color:#80b1d3"><a href="#033810" label="[03:38:10]">&lt;achaninja&gt;</a></span><span class="message">anyway... minor rant lol</span></div><div class="line" id="033850"><span class="nick" style="color:#80b1d3"><a href="#033850" label="[03:38:50]">&lt;achaninja&gt;</a></span><span class="message">wait pyramid isn't quite the right way to visualize it</span></div><div class="line" id="033910"><span class="nick" style="color:#80b1d3"><a href="#033910" label="[03:39:10]">&lt;achaninja&gt;</a></span><span class="message">you want more complex software sitting on top of less complex software</span></div><div class="line" id="033915"><span class="nick" style="color:#80b1d3"><a href="#033915" label="[03:39:15]">&lt;achaninja&gt;</a></span><span class="message">not the other way around ideally</span></div><div class="line" id="034000"><span class="nick" style="color:#80b1d3"><a href="#034000" label="[03:40:00]">&lt;achaninja&gt;</a></span><span class="message">maybe its like an onion</span></div><div class="line" id="034029"><span class="nick" style="color:#80b1d3"><a href="#034029" label="[03:40:29]">&lt;achaninja&gt;</a></span><span class="message">does that make sense to anyone? or am I just over thinking it</span></div><div class="line" id="034122"><span class="nick" style="color:#234e69"><a href="#034122" label="[03:41:22]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">It's like a tower of complexity</span></div><div class="line" id="034128"><span class="nick" style="color:#80b1d3"><a href="#034128" label="[03:41:28]">&lt;achaninja&gt;</a></span><span class="message">also let me know if its too off topic - I don't want to be a distraction</span></div><div class="line" id="034155"><span class="nick" style="color:#80b1d3"><a href="#034155" label="[03:41:55]">&lt;achaninja&gt;</a></span><span class="message">AwesomeAdam54321: but a tower is supposed to have a large base haha</span></div><div class="line" id="034205"><span class="nick" style="color:#80b1d3"><a href="#034205" label="[03:42:05]">&lt;achaninja&gt;</a></span><span class="message">well maybe not :P</span></div><div class="line" id="034220"><span class="nick" style="color:#80b1d3"><a href="#034220" label="[03:42:20]">&lt;achaninja&gt;</a></span><span class="message">stage0 is like a tiny base</span></div><div class="line" id="034231"><span class="nick" style="color:#80b1d3"><a href="#034231" label="[03:42:31]">&lt;achaninja&gt;</a></span><span class="message">then gcc is like a fat top</span></div><div class="line" id="034238"><span class="nick" style="color:#80b1d3"><a href="#034238" label="[03:42:38]">&lt;achaninja&gt;</a></span><span class="message">so it would be an inverted pyramid</span></div><div class="line" id="034305"><span class="nick" style="color:#80b1d3"><a href="#034305" label="[03:43:05]">&lt;achaninja&gt;</a></span><span class="message">so I meant like maybe stage0 is the center of an onion and gcc is an outer layer</span></div><div class="line" id="034308"><span class="nick" style="color:#80b1d3"><a href="#034308" label="[03:43:08]">&lt;achaninja&gt;</a></span><span class="message">:P</span></div><div class="line" id="034349"><span class="nick" style="color:#80b1d3"><a href="#034349" label="[03:43:49]">&lt;achaninja&gt;</a></span><span class="message">but imagining it this way might be meaningless anyway haha</span></div><div class="line" id="034408"><span class="nick" style="color:#6c3d55"><a href="#034408" label="[03:44:08]">*</a></span><span class="message">vagrantc will take some more pokes at updating mes on debian tomorrow</span></div><div class="line" id="034410"><span class="nick" style="color:#6c3d55"><a href="#034410" label="[03:44:10]">*</a></span><span class="message">vagrantc waves</span></div><div class="line" id="040137"><span class="nick" style="color:#d9d9d9"><a href="#040137" label="[04:01:37]">&lt;spk121&gt;</a></span><span class="message">Hey everybody. So looking at live-bootstrap...</span></div><div class="line" id="040142"><span class="nick" style="color:#d9d9d9"><a href="#040142" label="[04:01:42]">&lt;spk121&gt;</a></span><span class="message">If I wanted to ensure that some program was bootstrappable, I'm good if I can build it up from bash, perl5, gcc-4.7.x+musl, or guile-3.0.7</span></div><div class="line" id="040843"><span class="nick" style="color:#80b1d3"><a href="#040843" label="[04:08:43]">&lt;achaninja&gt;</a></span><span class="message">spk121: I guess directly bootstrappable - you could still have intermediate dependencies if you set them up</span></div><div class="line" id="041207"><span class="nick" style="color:#d9d9d9"><a href="#041207" label="[04:12:07]">&lt;spk121&gt;</a></span><span class="message">achaninja: understood. That is a foundation upon which I can build, if I don't want to go the Guix route</span></div><div class="line" id="041511"><span class="nick" style="color:#bc80bd"><a href="#041511" label="[04:15:11]">&lt;littlebobeep&gt;</a></span><span class="message">oriansj: who got death threats from whome, and why??? :/</span></div><div class="line" id="041857"><span class="nick" style="color:#bc80bd"><a href="#041857" label="[04:18:57]">&lt;littlebobeep&gt;</a></span><span class="message">oriansj: How does a kernel boot from M2-Planet help exactly, if you need a kernel image to use stage0-posix at all?</span></div><div class="line" id="042752"><span class="nick" style="color:#80b1d3"><a href="#042752" label="[04:27:52]">&lt;achaninja&gt;</a></span><span class="message">littlebobeep: bitcoin was using mes/stage0 for the builds - for whatever reason if the build didn't work they got mad</span></div><div class="line" id="042806"><span class="nick" style="color:#80b1d3"><a href="#042806" label="[04:28:06]">&lt;achaninja&gt;</a></span><span class="message">not the official people, but any random person</span></div><div class="line" id="042858"><span class="nick" style="color:#80b1d3"><a href="#042858" label="[04:28:58]">&lt;achaninja&gt;</a></span><span class="message">at least that is what I heard - theres an article somewhere saying the larger your audience the chance you encounter someone with severe mental illness approaches 1.0</span></div><div class="line" id="042910"><span class="nick" style="color:#80b1d3"><a href="#042910" label="[04:29:10]">&lt;achaninja&gt;</a></span><span class="message">which is why basically all celebrities get many death threats</span></div><div class="line" id="042948"><span class="nick" style="color:#80b1d3"><a href="#042948" label="[04:29:48]">&lt;achaninja&gt;</a></span><span class="message">like more than 20k people at least one person</span></div><div class="line" id="043044"><span class="nick" style="color:#80b1d3"><a href="#043044" label="[04:30:44]">&lt;achaninja&gt;</a></span><span class="message">so its not necessarily a problem directly caused by bitcoin</span></div><div class="line" id="043053"><span class="nick" style="color:#80b1d3"><a href="#043053" label="[04:30:53]">&lt;achaninja&gt;</a></span><span class="message">just by large audience and being misguided</span></div><div class="line" id="043232"><span class="nick" style="color:#6b8072"><a href="#043232" label="[04:32:32]">&lt;muurkha&gt;</a></span><span class="message">and audience inclined toward paranoia, maybe</span></div><div class="line" id="043244"><span class="nick" style="color:#80b1d3"><a href="#043244" label="[04:32:44]">&lt;achaninja&gt;</a></span><span class="message">it might skew the odds lol</span></div><div class="line" id="043248"><span class="nick" style="color:#80b1d3"><a href="#043248" label="[04:32:48]">&lt;achaninja&gt;</a></span><span class="message">or increase them :P</span></div><div class="line" id="043333"><span class="nick" style="color:#6b8072"><a href="#043333" label="[04:33:33]">&lt;muurkha&gt;</a></span><span class="message">right, not that every bitcoin user is paranoid, but the rate is higher</span></div><div class="line" id="043355"><span class="nick" style="color:#80b1d3"><a href="#043355" label="[04:33:55]">&lt;achaninja&gt;</a></span><span class="message">sounds reasonable</span></div><div class="line" id="045214"><span class="nick" style="color:#bc80bd"><a href="#045214" label="[04:52:14]">&lt;littlebobeep&gt;</a></span><span class="message">Ehhh paranoid people don't use coins that literally broadcast their finances to the entire internet</span></div><div class="line" id="045325"><span class="nick" style="color:#bc80bd"><a href="#045325" label="[04:53:25]">&lt;littlebobeep&gt;</a></span><span class="message">achaninja: what does it mean the build didn't work, like bitcoind process failed to execute or was somehow unreproduceable?</span></div><div class="line" id="045815"><span class="nick" style="color:#80b1d3"><a href="#045815" label="[04:58:15]">&lt;achaninja&gt;</a></span><span class="message">i don't know the details, i imagine it just took time to setup</span></div><div class="line" id="045857"><span class="nick" style="color:#80b1d3"><a href="#045857" label="[04:58:57]">&lt;achaninja&gt;</a></span><span class="message">so people were waiting for something to be setup to get what they wanted</span></div><div class="line" id="045904"><span class="nick" style="color:#80b1d3"><a href="#045904" label="[04:59:04]">&lt;achaninja&gt;</a></span><span class="message">but really i don't know</span></div><div class="line" id="045934"><span class="nick" style="color:#80b1d3"><a href="#045934" label="[04:59:34]">&lt;achaninja&gt;</a></span><span class="message">i guess the details aren't really important since thy aren't connected to logic</span></div><div class="line" id="050156"><span class="nick" style="color:#80b1d3"><a href="#050156" label="[05:01:56]">&lt;achaninja&gt;</a></span><span class="message">this channel just makes yoghurt after all</span></div><div class="line" id="050201"><span class="nick" style="color:#80b1d3"><a href="#050201" label="[05:02:01]">&lt;achaninja&gt;</a></span><span class="message">:P</span></div><div class="line" id="050259"><span class="nick" style="color:#80b1d3"><a href="#050259" label="[05:02:59]">&lt;achaninja&gt;</a></span><span class="message">its like the guy at the supermarket going crazy because the yoghurt factory had an issue with their culture hehe</span></div><div class="line" id="050626"><span class="nick" style="color:#2e2a4a"><a href="#050626" label="[05:06:26]">&lt;Hagfish&gt;</a></span><span class="message">i can imagine people being really upset at the idea of a self-propagating backdoor in compilers</span></div><div class="line" id="050739"><span class="nick" style="color:#2e2a4a"><a href="#050739" label="[05:07:39]">&lt;Hagfish&gt;</a></span><span class="message">the options for dealing with that knowledge are:  1) ignoring it (which is the most popular response), 2) getting angry towards the people who mention it (which some small percentage of deranged people will do), or 3) realise it's an interesting problem that can be mitigated with some hard work</span></div><div class="line" id="050912"><span class="nick" style="color:#2e2a4a"><a href="#050912" label="[05:09:12]">&lt;Hagfish&gt;</a></span><span class="message">oriansj: yes, reality doesn't have checksums, but i was pondering how to anchor the seeds in a human-readable form that is tamper-evident</span></div><div class="line" id="050928"><span class="nick" style="color:#bc80bd"><a href="#050928" label="[05:09:28]">&lt;littlebobeep&gt;</a></span><span class="message">It doesn't sound like the death threats ppl were mad at the mention of the problem, but rather with the results of trying to fix it?  I don't know until oriansj explains what this is about</span></div><div class="line" id="051051"><span class="nick" style="color:#80b1d3"><a href="#051051" label="[05:10:51]">&lt;achaninja&gt;</a></span><span class="message">Hagfish: the seed is already anchored</span></div><div class="line" id="051057"><span class="nick" style="color:#2e2a4a"><a href="#051057" label="[05:10:57]">&lt;Hagfish&gt;</a></span><span class="message">oh?</span></div><div class="line" id="051100"><span class="nick" style="color:#80b1d3"><a href="#051100" label="[05:11:00]">&lt;achaninja&gt;</a></span><span class="message">you can read it byte for byte</span></div><div class="line" id="051108"><span class="nick" style="color:#80b1d3"><a href="#051108" label="[05:11:08]">&lt;achaninja&gt;</a></span><span class="message">and cross reference it easily with the intel manual</span></div><div class="line" id="051116"><span class="nick" style="color:#2e2a4a"><a href="#051116" label="[05:11:16]">&lt;Hagfish&gt;</a></span><span class="message">from where, though?</span></div><div class="line" id="051121"><span class="nick" style="color:#80b1d3"><a href="#051121" label="[05:11:21]">&lt;achaninja&gt;</a></span><span class="message">right here</span></div><div class="line" id="051142"><span class="nick" style="color:#2e2a4a"><a href="#051142" label="[05:11:42]">&lt;Hagfish&gt;</a></span><span class="message">how do i know i'm in the right channel?  or that i've been given a legit intel manual?</span></div><div class="line" id="051143"><span class="nick" style="color:#80b1d3"><a href="#051143" label="[05:11:43]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/blob/b09a8b8cbcb6d3fdb025f1bf827d98a8cb3b4d41/POSIX/x86/hex0_x86.hex0">https://github.com/oriansj/bootstrap-seeds/blob/b09a8b8cbcb6d3fdb025f1bf827d98a8cb3b4d41/POSIX/x86/hex0_x86.hex0</a> </span></div><div class="line" id="051214"><span class="nick" style="color:#80b1d3"><a href="#051214" label="[05:12:14]">&lt;achaninja&gt;</a></span><span class="message">you can logically reason the liklihood some one is able to pack malware into a file of that size undetected</span></div><div class="line" id="051217"><span class="nick" style="color:#2e2a4a"><a href="#051217" label="[05:12:17]">&lt;Hagfish&gt;</a></span><span class="message">i know my concerns aren't really practical, but oriansj was saying that paranoia is helpful, so i was trying to give another example :)</span></div><div class="line" id="051232"><span class="nick" style="color:#2e2a4a"><a href="#051232" label="[05:12:32]">&lt;Hagfish&gt;</a></span><span class="message">yes, true</span></div><div class="line" id="051245"><span class="nick" style="color:#80b1d3"><a href="#051245" label="[05:12:45]">&lt;achaninja&gt;</a></span><span class="message">its possible - I agree</span></div><div class="line" id="051259"><span class="nick" style="color:#80b1d3"><a href="#051259" label="[05:12:59]">&lt;achaninja&gt;</a></span><span class="message">but would be extremely difficult imo</span></div><div class="line" id="051330"><span class="nick" style="color:#2e2a4a"><a href="#051330" label="[05:13:30]">&lt;Hagfish&gt;</a></span><span class="message">yes, and you can sort of trade trust for expertise</span></div><div class="line" id="051330"><span class="nick" style="color:#80b1d3"><a href="#051330" label="[05:13:30]">&lt;achaninja&gt;</a></span><span class="message">you are also right</span></div><div class="line" id="051344"><span class="nick" style="color:#80b1d3"><a href="#051344" label="[05:13:44]">&lt;achaninja&gt;</a></span><span class="message">you can't even trust your implementation of 'cat' which displays the file to you</span></div><div class="line" id="051352"><span class="nick" style="color:#2e2a4a"><a href="#051352" label="[05:13:52]">&lt;Hagfish&gt;</a></span><span class="message">i.e. you could verify every line of source yourself for correctness, rather than relying on other people's consensus</span></div><div class="line" id="051355"><span class="nick" style="color:#80b1d3"><a href="#051355" label="[05:13:55]">&lt;achaninja&gt;</a></span><span class="message">so you can't trust your eyes</span></div><div class="line" id="051358"><span class="nick" style="color:#2e2a4a"><a href="#051358" label="[05:13:58]">&lt;Hagfish&gt;</a></span><span class="message">right, yes</span></div><div class="line" id="051443"><span class="nick" style="color:#80b1d3"><a href="#051443" label="[05:14:43]">&lt;achaninja&gt;</a></span><span class="message">obligatory meme</span></div><div class="line" id="051445"><span class="nick" style="color:#80b1d3"><a href="#051445" label="[05:14:45]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://knowyourmeme.com/memes/trust-nobody-not-even-yourself">https://knowyourmeme.com/memes/trust-nobody-not-even-yourself</a> </span></div><div class="line" id="051611"><span class="nick" style="color:#2e2a4a"><a href="#051611" label="[05:16:11]">&lt;Hagfish&gt;</a></span><span class="message">(speaking of which, sadly kym requires javascript to display images)</span></div><div class="line" id="051627"><span class="nick" style="color:#80b1d3"><a href="#051627" label="[05:16:27]">&lt;achaninja&gt;</a></span><span class="message">lame :P</span></div><div class="line" id="051635"><span class="nick" style="color:#80b1d3"><a href="#051635" label="[05:16:35]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://i.kym-cdn.com/entries/icons/original/000/017/046/BptVE1JIEAAA3dT.jpg">https://i.kym-cdn.com/entries/icons/original/000/017/046/BptVE1JIEAAA3dT.jpg</a> </span></div><div class="line" id="051635"><span class="nick" style="color:#2e2a4a"><a href="#051635" label="[05:16:35]">&lt;Hagfish&gt;</a></span><span class="message">but yeah, that's a good meme</span></div><div class="line" id="051708"><span class="nick" style="color:#2e2a4a"><a href="#051708" label="[05:17:08]">&lt;Hagfish&gt;</a></span><span class="message">it's almost a mixture of the &quot;spiderman pointing&quot; meme and the &quot;always has been&quot; meme</span></div><div class="line" id="051731"><span class="nick" style="color:#80b1d3"><a href="#051731" label="[05:17:31]">&lt;achaninja&gt;</a></span><span class="message">you also might need to validate the kaem seed</span></div><div class="line" id="051749"><span class="nick" style="color:#80b1d3"><a href="#051749" label="[05:17:49]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/blob/b09a8b8cbcb6d3fdb025f1bf827d98a8cb3b4d41/POSIX/x86/kaem-minimal.hex0">https://github.com/oriansj/bootstrap-seeds/blob/b09a8b8cbcb6d3fdb025f1bf827d98a8cb3b4d41/POSIX/x86/kaem-minimal.hex0</a> </span></div><div class="line" id="051806"><span class="nick" style="color:#80b1d3"><a href="#051806" label="[05:18:06]">&lt;achaninja&gt;</a></span><span class="message">which is the tiny shell interpreter thing</span></div><div class="line" id="051817"><span class="nick" style="color:#80b1d3"><a href="#051817" label="[05:18:17]">&lt;achaninja&gt;</a></span><span class="message">used to build stage0-posix</span></div><div class="line" id="051823"><span class="nick" style="color:#2e2a4a"><a href="#051823" label="[05:18:23]">&lt;Hagfish&gt;</a></span><span class="message">hmm, yeah</span></div><div class="line" id="051842"><span class="nick" style="color:#80b1d3"><a href="#051842" label="[05:18:42]">&lt;achaninja&gt;</a></span><span class="message">like this file has manual comments</span></div><div class="line" id="051853"><span class="nick" style="color:#80b1d3"><a href="#051853" label="[05:18:53]">&lt;achaninja&gt;</a></span><span class="message">but you might need to check they are accurate using objdump</span></div><div class="line" id="051859"><span class="nick" style="color:#2e2a4a"><a href="#051859" label="[05:18:59]">&lt;Hagfish&gt;</a></span><span class="message">it would be nice to only have to trust a single hash, but then how would you calculate the hash of these seeds if you don't have a trusted computer?</span></div><div class="line" id="051904"><span class="nick" style="color:#2e2a4a"><a href="#051904" label="[05:19:04]">&lt;Hagfish&gt;</a></span><span class="message">yeah</span></div><div class="line" id="051917"><span class="nick" style="color:#80b1d3"><a href="#051917" label="[05:19:17]">&lt;achaninja&gt;</a></span><span class="message">just consider this file a 370 byte hash</span></div><div class="line" id="051922"><span class="nick" style="color:#2e2a4a"><a href="#051922" label="[05:19:22]">&lt;Hagfish&gt;</a></span><span class="message">heh, nice</span></div><div class="line" id="051949"><span class="nick" style="color:#80b1d3"><a href="#051949" label="[05:19:49]">&lt;achaninja&gt;</a></span><span class="message">you could even memorize it if you really wanted</span></div><div class="line" id="051953"><span class="nick" style="color:#2e2a4a"><a href="#051953" label="[05:19:53]">&lt;Hagfish&gt;</a></span><span class="message">hmm, has someone made a sha256 calculating circuit out of simple chips?</span></div><div class="line" id="052329"><span class="nick" style="color:#8dd3c7"><a href="#052329" label="[05:23:29]">&lt;oriansj&gt;</a></span><span class="message">achaninja: objdump doesn't work on that file</span></div><div class="line" id="052349"><span class="nick" style="color:#8dd3c7"><a href="#052349" label="[05:23:49]">&lt;oriansj&gt;</a></span><span class="message">in fact objdump doesn't work on any binary before blood-elf is used.</span></div><div class="line" id="052437"><span class="nick" style="color:#80b1d3"><a href="#052437" label="[05:24:37]">&lt;achaninja&gt;</a></span><span class="message">i thought objdump could do raw hex</span></div><div class="line" id="052454"><span class="nick" style="color:#8dd3c7"><a href="#052454" label="[05:24:54]">&lt;oriansj&gt;</a></span><span class="message">you'd need to use ndisasm</span></div><div class="line" id="052457"><span class="nick" style="color:#80b1d3"><a href="#052457" label="[05:24:57]">&lt;achaninja&gt;</a></span><span class="message">ah ok</span></div><div class="line" id="052513"><span class="nick" style="color:#80b1d3"><a href="#052513" label="[05:25:13]">&lt;achaninja&gt;</a></span><span class="message">(which you need to trust again :P)</span></div><div class="line" id="052531"><span class="nick" style="color:#8dd3c7"><a href="#052531" label="[05:25:31]">&lt;oriansj&gt;</a></span><span class="message">achaninja: if you do objdump -d AMD64/artifact/hex0 all you will see is: AMD64/artifact/hex0:     file format elf64-x86-64 and nothing else</span></div><div class="line" id="052543"><span class="nick" style="color:#8dd3c7"><a href="#052543" label="[05:25:43]">&lt;oriansj&gt;</a></span><span class="message">but that is why we also have xeh and sin</span></div><div class="line" id="052610"><span class="nick" style="color:#80b1d3"><a href="#052610" label="[05:26:10]">&lt;achaninja&gt;</a></span><span class="message">I thought there was objdump -b binary</span></div><div class="line" id="052658"><span class="nick" style="color:#80b1d3"><a href="#052658" label="[05:26:58]">&lt;achaninja&gt;</a></span><span class="message">actually i can just try it</span></div><div class="line" id="052721"><span class="nick" style="color:#8dd3c7"><a href="#052721" label="[05:27:21]">&lt;oriansj&gt;</a></span><span class="message">well it certainly isn't a valid flag with: GNU objdump (GNU Binutils) 2.37</span></div><div class="line" id="052804"><span class="nick" style="color:#80b1d3"><a href="#052804" label="[05:28:04]">&lt;achaninja&gt;</a></span><span class="message">check man objdump</span></div><div class="line" id="052807"><span class="nick" style="color:#80b1d3"><a href="#052807" label="[05:28:07]">&lt;achaninja&gt;</a></span><span class="message">its here for me</span></div><div class="line" id="052815"><span class="nick" style="color:#80b1d3"><a href="#052815" label="[05:28:15]">&lt;achaninja&gt;</a></span><span class="message">--target=bdfname</span></div><div class="line" id="052820"><span class="nick" style="color:#80b1d3"><a href="#052820" label="[05:28:20]">&lt;achaninja&gt;</a></span><span class="message">bfd</span></div><div class="line" id="052843"><span class="nick" style="color:#80b1d3"><a href="#052843" label="[05:28:43]">&lt;achaninja&gt;</a></span><span class="message">strange</span></div><div class="line" id="052850"><span class="nick" style="color:#80b1d3"><a href="#052850" label="[05:28:50]">&lt;achaninja&gt;</a></span><span class="message">for me its in the man page, but not in the implementation</span></div><div class="line" id="052924"><span class="nick" style="color:#8dd3c7"><a href="#052924" label="[05:29:24]">&lt;oriansj&gt;</a></span><span class="message">oh well</span></div><div class="line" id="052938"><span class="nick" style="color:#80b1d3"><a href="#052938" label="[05:29:38]">&lt;achaninja&gt;</a></span><span class="message">yeah, doesn't matter, i guess it was removed</span></div><div class="line" id="053029"><span class="nick" style="color:#2e2a4a"><a href="#053029" label="[05:30:29]">&lt;Hagfish&gt;</a></span><span class="message">ah, here's a nice little project: <a rel="nofollow" href="https://bumbershootsoft.wordpress.com/2019/04/24/implementing-sha-256-on-the-6502/">https://bumbershootsoft.wordpress.com/2019/04/24/implementing-sha-256-on-the-6502/</a> </span></div><div class="line" id="053043"><span class="nick" style="color:#8dd3c7"><a href="#053043" label="[05:30:43]">&lt;oriansj&gt;</a></span><span class="message">but yeah, every single byte is commented for *.hex0, *.hex1 and *.hex2 files and the *.M1 files have auditable DEFINEs which can be used to know what every single byte in the binary should be</span></div><div class="line" id="053126"><span class="nick" style="color:#80b1d3"><a href="#053126" label="[05:31:26]">&lt;achaninja&gt;</a></span><span class="message">In the past I used <a rel="nofollow" href="https://en.wikipedia.org/wiki/SREC_">https://en.wikipedia.org/wiki/SREC_</a>(file_format) </span></div><div class="line" id="053133"><span class="nick" style="color:#80b1d3"><a href="#053133" label="[05:31:33]">&lt;achaninja&gt;</a></span><span class="message">srecords for boot images</span></div><div class="line" id="053156"><span class="nick" style="color:#80b1d3"><a href="#053156" label="[05:31:56]">&lt;achaninja&gt;</a></span><span class="message">I think binutils understood that format awhile ago :P</span></div><div class="line" id="053242"><span class="nick" style="color:#80b1d3"><a href="#053242" label="[05:32:42]">&lt;achaninja&gt;</a></span><span class="message">but yeah - not super relevant unless you are into these things</span></div><div class="line" id="053427"><span class="nick" style="color:#8dd3c7"><a href="#053427" label="[05:34:27]">&lt;oriansj&gt;</a></span><span class="message">^_^ maybe</span></div><div class="line" id="053547"><span class="nick" style="color:#8dd3c7"><a href="#053547" label="[05:35:47]">&lt;oriansj&gt;</a></span><span class="message">but yeah, sha256sum is quite possible in 64KB</span></div><div class="line" id="053817"><span class="nick" style="color:#80b1d3"><a href="#053817" label="[05:38:17]">&lt;achaninja&gt;</a></span><span class="message">when I was writing my C compiler i had a funny thought</span></div><div class="line" id="053822"><span class="nick" style="color:#80b1d3"><a href="#053822" label="[05:38:22]">&lt;achaninja&gt;</a></span><span class="message">if when like</span></div><div class="line" id="053838"><span class="nick" style="color:#8dd3c7"><a href="#053838" label="[05:38:38]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: the Monster6502 could probably run that</span></div><div class="line" id="053841"><span class="nick" style="color:#80b1d3"><a href="#053841" label="[05:38:41]">&lt;achaninja&gt;</a></span><span class="message">if (c == '\n') emit(&quot;.text &quot;\n&quot;);</span></div><div class="line" id="053908"><span class="nick" style="color:#80b1d3"><a href="#053908" label="[05:39:08]">&lt;achaninja&gt;</a></span><span class="message">somthing like that right, then you wonder where the original definition of '\n' came from</span></div><div class="line" id="053922"><span class="nick" style="color:#80b1d3"><a href="#053922" label="[05:39:22]">&lt;achaninja&gt;</a></span><span class="message">since the assembler might get it from the c compiler that compiled it too</span></div><div class="line" id="054006"><span class="nick" style="color:#80b1d3"><a href="#054006" label="[05:40:06]">&lt;achaninja&gt;</a></span><span class="message">this is just a small example of the trust problem stage0 solves</span></div><div class="line" id="054035"><span class="nick" style="color:#8dd3c7"><a href="#054035" label="[05:40:35]">&lt;oriansj&gt;</a></span><span class="message">oh, believe me when I say it is going to solve a boatload more</span></div><div class="line" id="054037"><span class="nick" style="color:#80b1d3"><a href="#054037" label="[05:40:37]">&lt;achaninja&gt;</a></span><span class="message">erm i meant emit .ascii &quot;\n&quot;</span></div><div class="line" id="054120"><span class="nick" style="color:#80b1d3"><a href="#054120" label="[05:41:20]">&lt;achaninja&gt;</a></span><span class="message">haha oh yeah</span></div><div class="line" id="054144"><span class="nick" style="color:#80b1d3"><a href="#054144" label="[05:41:44]">&lt;achaninja&gt;</a></span><span class="message">the kernel stuff is really important when you really think abut it</span></div><div class="line" id="054148"><span class="nick" style="color:#80b1d3"><a href="#054148" label="[05:41:48]">&lt;achaninja&gt;</a></span><span class="message">about*</span></div><div class="line" id="054154"><span class="nick" style="color:#8dd3c7"><a href="#054154" label="[05:41:54]">&lt;oriansj&gt;</a></span><span class="message">Guix is doing the heavy lifting of maintaining a bootstrap tree above us, which will buy us time to make some serious progress</span></div><div class="line" id="054302"><span class="nick" style="color:#8dd3c7"><a href="#054302" label="[05:43:02]">&lt;oriansj&gt;</a></span><span class="message">and kernel work is going to take a while to do right as I'm gonna have to write it in assembly a couple times</span></div><div class="line" id="055048"><span class="nick" style="color:#8dd3c7"><a href="#055048" label="[05:50:48]">&lt;oriansj&gt;</a></span><span class="message">so minimal functionality is only going to just enough to run stage0-posix until M2-Planet then it'll bootstrap a more powerful version written in M2-Planet's C subset which should then provide enough functionality until we bootstrap Linux and the rest becomes easy</span></div><div class="line" id="055517"><span class="nick" style="color:#2e2a4a"><a href="#055517" label="[05:55:17]">&lt;Hagfish&gt;</a></span><span class="message">oriansj: yeah, i was just checking the status of the MOnSter.  once more people have copies of that board in their hands, it might be nice to get one of them to do some bootstrap-relevant hashes :)</span></div><div class="line" id="055942"><span class="nick" style="color:#8dd3c7"><a href="#055942" label="[05:59:42]">&lt;oriansj&gt;</a></span><span class="message">well my plan was originally build an H11 Computer and a H10 Paper Tape Reader/Punch and have those create the paper tape of the bootstrap roots and just hand inspect it</span></div><div class="line" id="060112"><span class="nick" style="color:#6c3d55"><a href="#060112" label="[06:01:12]">*</a></span><span class="message">littlebobeep searxes for H11 and H10</span></div><div class="line" id="060241"><span class="nick" style="color:#8dd3c7"><a href="#060241" label="[06:02:41]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: hint Heathkit computer kits</span></div><div class="line" id="060336"><span class="nick" style="color:#2e2a4a"><a href="#060336" label="[06:03:36]">&lt;Hagfish&gt;</a></span><span class="message">nice</span></div><div class="line" id="060418"><span class="nick" style="color:#2e2a4a"><a href="#060418" label="[06:04:18]">&lt;Hagfish&gt;</a></span><span class="message">i'm reminded of the story of companies dredging up old WW2 shipwrecks to use the iron in them that hadn't been tainted by modern nuclear tests</span></div><div class="line" id="060519"><span class="nick" style="color:#2e2a4a"><a href="#060519" label="[06:05:19]">&lt;Hagfish&gt;</a></span><span class="message">hard to imagine a rogue AI created in the 80s that embedded backdoors in all ICs created after that date, but would make a fun story</span></div><div class="line" id="060658"><span class="nick" style="color:#8dd3c7"><a href="#060658" label="[06:06:58]">&lt;oriansj&gt;</a></span><span class="message">well we are going to have to do some weird stuff to make even that case impossible. (like making up weird shit architectures and just bootstrapping them and using the bootstrap properties to check all existing architectures)</span></div><div class="line" id="060944"><span class="nick" style="color:#bc80bd"><a href="#060944" label="[06:09:44]">&lt;littlebobeep&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.blog/2022-05-04-software-security-starts-with-the-developer-securing-developer-accounts-with-2fa">https://github.blog/2022-05-04-software-security-starts-with-the-developer-securing-developer-accounts-with-2fa</a> </span></div><div class="line" id="061120"><span class="nick" style="color:#8dd3c7"><a href="#061120" label="[06:11:20]">&lt;oriansj&gt;</a></span><span class="message">So anyone compromising our software better be prepared to handle the very hard problem of having to have backdoors for *ALL* possible future architectures</span></div><div class="line" id="061127"><span class="nick" style="color:#bc80bd"><a href="#061127" label="[06:11:27]">&lt;littlebobeep&gt;</a></span><span class="message">What are good options for 2fa here?  TOTP?  WebAuthn?</span></div><div class="line" id="061147"><span class="nick" style="color:#bc80bd"><a href="#061147" label="[06:11:47]">&lt;littlebobeep&gt;</a></span><span class="message">or just move to codeberg or some other Gitea instance...?</span></div><div class="line" id="061150"><span class="nick" style="color:#8dd3c7"><a href="#061150" label="[06:11:50]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: depends on your threat model(s)</span></div><div class="line" id="061959"><span class="nick" style="color:#d9d9d9"><a href="#061959" label="[06:19:59]">&lt;spk121&gt;</a></span><span class="message">live-bootstrap builds and runs on my laptop, with basically no tweaking on my part. That's really impressive.</span></div><div class="line" id="062024"><span class="nick" style="color:#8dd3c7"><a href="#062024" label="[06:20:24]">&lt;oriansj&gt;</a></span><span class="message">for example for some people, <a rel="nofollow" href="https://www.themooltipass.com/">https://www.themooltipass.com/</a>  is probably a good enough solution. For other people flashing a <a rel="nofollow" href="https://solokeys.com/">https://solokeys.com/</a>  is good enough and for other people building a <a rel="nofollow" href="https://tomu.im/">https://tomu.im/</a>  is what they feel they need to do</span></div><div class="line" id="062207"><span class="nick" style="color:#2e2a4a"><a href="#062207" label="[06:22:07]">&lt;Hagfish&gt;</a></span><span class="message">oriansj: yeah, i think that the necessity for an attacker to predict all future architectures is going to be a really strong tool for defenders reasoning about the security of bootstrapping</span></div><div class="line" id="062455"><span class="nick" style="color:#8dd3c7"><a href="#062455" label="[06:24:55]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: and the fact that M2-Planet+mescc-tools does perfect reproducibity for cross-platform builds really ties things together in a nice little bow</span></div><div class="line" id="063140"><span class="nick" style="color:#8dd3c7"><a href="#063140" label="[06:31:40]">&lt;oriansj&gt;</a></span><span class="message">the fact that every step up until M2-Mesoplanet/mes.c can run on bare metal and get the exact same output as if it ran upon an operating system give us more flexiblity for catching subversion with less effort</span></div><div class="line" id="063342"><span class="nick" style="color:#bc80bd"><a href="#063342" label="[06:33:42]">&lt;littlebobeep&gt;</a></span><span class="message">oriansj: When you say &quot;up until M2-Mesoplanet/mes.c&quot; does this mean modified mes.c that needs to be build before proper GNU Mes?</span></div><div class="line" id="063439"><span class="nick" style="color:#bc80bd"><a href="#063439" label="[06:34:39]">&lt;littlebobeep&gt;</a></span><span class="message">I honestly don't understand how you can get the far without a kernel, or how you suddenly introduce a kernel once you get there</span></div><div class="line" id="063546"><span class="nick" style="color:#bc80bd"><a href="#063546" label="[06:35:46]">&lt;littlebobeep&gt;</a></span><span class="message">oriansj: Did you see my question above about kernel build with M2-Planet you were talking about?  I guess this is not related to stage0-posix, but instead a bare metal bootstrap?</span></div><div class="line" id="063608"><span class="nick" style="color:#8dd3c7"><a href="#063608" label="[06:36:08]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: imagine 1 paper tape drive for input and 1 paper tape drive for output and a program loaded into memory just reading the input tape and producing the output tape (no kernel required)</span></div><div class="line" id="063642"><span class="nick" style="color:#bc80bd"><a href="#063642" label="[06:36:42]">&lt;littlebobeep&gt;</a></span><span class="message">Okay I have hard time imagining this XD .... I never used tape drives in my life and have not studied them</span></div><div class="line" id="063715"><span class="nick" style="color:#bc80bd"><a href="#063715" label="[06:37:15]">&lt;littlebobeep&gt;</a></span><span class="message">I am not sure how applicable this is for x86_64 or aarch64 machines I am likely to have with USB ports....</span></div><div class="line" id="063729"><span class="nick" style="color:#8dd3c7"><a href="#063729" label="[06:37:29]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: we can dictate hardware</span></div><div class="line" id="063736"><span class="nick" style="color:#8dd3c7"><a href="#063736" label="[06:37:36]">&lt;oriansj&gt;</a></span><span class="message">write to a serial port</span></div><div class="line" id="063801"><span class="nick" style="color:#8dd3c7"><a href="#063801" label="[06:38:01]">&lt;oriansj&gt;</a></span><span class="message">read from a serial port</span></div><div class="line" id="063807"><span class="nick" style="color:#8dd3c7"><a href="#063807" label="[06:38:07]">&lt;oriansj&gt;</a></span><span class="message">literally 1 byte at a time</span></div><div class="line" id="063830"><span class="nick" style="color:#8dd3c7"><a href="#063830" label="[06:38:30]">&lt;oriansj&gt;</a></span><span class="message">no such thing as a file needs to exist</span></div><div class="line" id="063910"><span class="nick" style="color:#8dd3c7"><a href="#063910" label="[06:39:10]">&lt;oriansj&gt;</a></span><span class="message">just incoming byte stream until EOF character and then you just halt the CPU when you are done</span></div><div class="line" id="064045"><span class="nick" style="color:#8dd3c7"><a href="#064045" label="[06:40:45]">&lt;oriansj&gt;</a></span><span class="message">we will hack and create custom hardware if required</span></div><div class="line" id="064056"><span class="nick" style="color:#bc80bd"><a href="#064056" label="[06:40:56]">&lt;littlebobeep&gt;</a></span><span class="message">When you say serial port do you mean like the old DE-9 D-Sub ports?</span></div><div class="line" id="064057"><span class="nick" style="color:#8dd3c7"><a href="#064057" label="[06:40:57]">&lt;oriansj&gt;</a></span><span class="message">We will make our own chips if need be</span></div><div class="line" id="064123"><span class="nick" style="color:#8dd3c7"><a href="#064123" label="[06:41:23]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: honestly it can be any input you feel like makes your work easier</span></div><div class="line" id="064205"><span class="nick" style="color:#8dd3c7"><a href="#064205" label="[06:42:05]">&lt;oriansj&gt;</a></span><span class="message">a robot arm manipulating lego bricks for visual audit if that makes you happy</span></div><div class="line" id="064220"><span class="nick" style="color:#bc80bd"><a href="#064220" label="[06:42:20]">&lt;littlebobeep&gt;</a></span><span class="message">Ummmm well i don't have any hardware with D-Sub ports anymore (except maybe VGA)</span></div><div class="line" id="064345"><span class="nick" style="color:#8dd3c7"><a href="#064345" label="[06:43:45]">&lt;oriansj&gt;</a></span><span class="message">the point isn't a specific technology for the reading or writing of input/output because anyone can even create arbitrary I/O and use it and still do the same validation work</span></div><div class="line" id="064454"><span class="nick" style="color:#8dd3c7"><a href="#064454" label="[06:44:54]">&lt;oriansj&gt;</a></span><span class="message">which means an attacker trying to compromise our reading/writing would also have to compromise *ALL* future invented I/O implementations too</span></div><div class="line" id="064637"><span class="nick" style="color:#bc80bd"><a href="#064637" label="[06:46:37]">&lt;littlebobeep&gt;</a></span><span class="message">Right well I'm more concerned with how to use common I/O on machines I have access to or likely to buy, as I am not quite ready to try designing my own hardware</span></div><div class="line" id="064655"><span class="nick" style="color:#bc80bd"><a href="#064655" label="[06:46:55]">&lt;littlebobeep&gt;</a></span><span class="message">(although it seems great to learn....)</span></div><div class="line" id="064926"><span class="nick" style="color:#8dd3c7"><a href="#064926" label="[06:49:26]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: well I assume you have some level of trust to start with. Be it old hardware without a management engine (ideally with some cheap and simple to program I/O options)</span></div><div class="line" id="065014"><span class="nick" style="color:#8dd3c7"><a href="#065014" label="[06:50:14]">&lt;oriansj&gt;</a></span><span class="message">or perhaps a pieced together out of individual chips to the level you feel comfortable</span></div><div class="line" id="065107"><span class="nick" style="color:#bc80bd"><a href="#065107" label="[06:51:07]">&lt;littlebobeep&gt;</a></span><span class="message">Ummm I lost my old x86 hardware by now, so my plan is to just ditch x86 instead of looking for used stuff</span></div><div class="line" id="065206"><span class="nick" style="color:#bc80bd"><a href="#065206" label="[06:52:06]">&lt;littlebobeep&gt;</a></span><span class="message">Some ARM hardware requires proprietary DDR init blobs which is weird</span></div><div class="line" id="065238"><span class="nick" style="color:#8dd3c7"><a href="#065238" label="[06:52:38]">&lt;oriansj&gt;</a></span><span class="message">well libresilicon should have some fun stuff in the next couple years</span></div><div class="line" id="065240"><span class="nick" style="color:#bc80bd"><a href="#065240" label="[06:52:40]">&lt;littlebobeep&gt;</a></span><span class="message">I am not sure how much that would b0rk the process</span></div><div class="line" id="065300"><span class="nick" style="color:#8dd3c7"><a href="#065300" label="[06:53:00]">&lt;oriansj&gt;</a></span><span class="message">well those sorts of things just make the work harder</span></div><div class="line" id="065321"><span class="nick" style="color:#8dd3c7"><a href="#065321" label="[06:53:21]">&lt;oriansj&gt;</a></span><span class="message">and honestly less hard targets will just get bootstrapped sooner</span></div><div class="line" id="065357"><span class="nick" style="color:#bc80bd"><a href="#065357" label="[06:53:57]">&lt;littlebobeep&gt;</a></span><span class="message">Well not all ARM hardware has these DDR init blobs, but I'm guessing most have some kind of firmware burned into the SOC in form of maskrom</span></div><div class="line" id="094429"><span class="nick" style="color:#3c5b35"><a href="#094429" label="[09:44:29]">&lt;stikonas[m]&gt;</a></span><span class="message">littlebobeep: yes, they have something like maskrom but that can be considered hardware some it is on ROM</span></div><div class="line" id="130050"><span class="nick" style="color:#af8d2f"><a href="#130050" label="[13:00:50]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: hmm, i am getting assert fail: alloc: out of memory in chroot mode with your PR... but i'm not out of memory..</span></div><div class="line" id="130058"><span class="nick" style="color:#af8d2f"><a href="#130058" label="[13:00:58]">&lt;fossy&gt;</a></span><span class="message">can't tell why this is happening at all</span></div><div class="line" id="130143"><span class="nick" style="color:#af8d2f"><a href="#130143" label="[13:01:43]">&lt;fossy&gt;</a></span><span class="message">at tcc</span></div><div class="line" id="130205"><span class="nick" style="color:#3c5b35"><a href="#130205" label="[13:02:05]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, that is strange</span></div><div class="line" id="130219"><span class="nick" style="color:#3c5b35"><a href="#130219" label="[13:02:19]">&lt;stikonas[m]&gt;</a></span><span class="message">I'll test again in the evening</span></div><div class="line" id="130249"><span class="nick" style="color:#3c5b35"><a href="#130249" label="[13:02:49]">&lt;stikonas[m]&gt;</a></span><span class="message">But I don't think I saw anything like that yesterday</span></div><div class="line" id="130419"><span class="nick" style="color:#3c5b35"><a href="#130419" label="[13:04:19]">&lt;stikonas[m]&gt;</a></span><span class="message">tcc 0.9.26?</span></div><div class="line" id="130518"><span class="nick" style="color:#af8d2f"><a href="#130518" label="[13:05:18]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="130631"><span class="nick" style="color:#3c5b35"><a href="#130631" label="[13:06:31]">&lt;stikonas[m]&gt;</a></span><span class="message">That shouldn't even interact with your chsnges</span></div><div class="line" id="130715"><span class="nick" style="color:#3c5b35"><a href="#130715" label="[13:07:15]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm</span></div><div class="line" id="130727"><span class="nick" style="color:#3c5b35"><a href="#130727" label="[13:07:27]">&lt;stikonas[m]&gt;</a></span><span class="message">And qemu mode?</span></div><div class="line" id="130854"><span class="nick" style="color:#af8d2f"><a href="#130854" label="[13:08:54]">&lt;fossy&gt;</a></span><span class="message">i haven't tried qemu mode</span></div><div class="line" id="130934"><span class="nick" style="color:#3c5b35"><a href="#130934" label="[13:09:34]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe worth trying in case it's your environment</span></div><div class="line" id="130946"><span class="nick" style="color:#af8d2f"><a href="#130946" label="[13:09:46]">&lt;fossy&gt;</a></span><span class="message">yeah i'lll do that next</span></div><div class="line" id="131029"><span class="nick" style="color:#af8d2f"><a href="#131029" label="[13:10:29]">&lt;fossy&gt;</a></span><span class="message">just trying without my changes rebased jyust in case its that</span></div><div class="line" id="131428"><span class="nick" style="color:#3c5b35"><a href="#131428" label="[13:14:28]">&lt;stikonas[m]&gt;</a></span><span class="message">I did 3 or do runs yesterday and they all worked</span></div><div class="line" id="142303"><span class="nick" style="color:#af8d2f"><a href="#142303" label="[14:23:03]">&lt;fossy&gt;</a></span><span class="message">does seem to have something to do with my changes... works fine without them</span></div><div class="line" id="142320"><span class="nick" style="color:#af8d2f"><a href="#142320" label="[14:23:20]">&lt;fossy&gt;</a></span><span class="message">i pushed my rebased version to the stikonas branch if you can see if you can repro</span></div><div class="line" id="142554"><span class="nick" style="color:#3c5b35"><a href="#142554" label="[14:25:54]">&lt;stikonas[m]&gt;</a></span><span class="message">This one runs out of ram?</span></div><div class="line" id="142605"><span class="nick" style="color:#3c5b35"><a href="#142605" label="[14:26:05]">&lt;stikonas[m]&gt;</a></span><span class="message">I'll try in 6h or so...</span></div><div class="line" id="160809"><span class="nick" style="color:#6c3d55"><a href="#160809" label="[16:08:09]">*</a></span><span class="message">muurkha runs out of ram</span></div><div class="line" id="173338"><span class="nick" style="color:#389600"><a href="#173338" label="[17:33:38]">&lt;dongcarl&gt;</a></span><span class="message">Hi all, I'm late, but want to congratulate janneke and team for GNU Mes 0.24! What a monumental achievement!</span></div><div class="line" id="174105"><span class="nick" style="color:#8dd3c7"><a href="#174105" label="[17:41:05]">&lt;janneke&gt;</a></span><span class="message">dongcarl: thanks!</span></div><div class="line" id="175249"><span class="nick" style="color:#6d2462"><a href="#175249" label="[17:52:49]">&lt;vagrantc&gt;</a></span><span class="message">should older (~0.23) mes build ok with mescc-tools 1.4 ?</span></div><div class="line" id="175306"><span class="nick" style="color:#6d2462"><a href="#175306" label="[17:53:06]">&lt;vagrantc&gt;</a></span><span class="message">if so, i can just go ahead and upload that to debian at least while i sort out the rest</span></div><div class="line" id="175356"><span class="nick" style="color:#6d2462"><a href="#175356" label="[17:53:56]">&lt;vagrantc&gt;</a></span><span class="message">i've got some test builds running, but just figured i'd ask if it would be known to break</span></div><div class="line" id="175416"><span class="nick" style="color:#6d2462"><a href="#175416" label="[17:54:16]">&lt;vagrantc&gt;</a></span><span class="message">known backwards-incompatibilites, etc.</span></div><div class="line" id="180046"><span class="nick" style="color:#3c5b35"><a href="#180046" label="[18:00:46]">&lt;stikonas[m]&gt;</a></span><span class="message">vagrantc: you might have problems</span></div><div class="line" id="180111"><span class="nick" style="color:#3c5b35"><a href="#180111" label="[18:01:11]">&lt;stikonas[m]&gt;</a></span><span class="message">blood-elf now requires more command line arguments</span></div><div class="line" id="180340"><span class="nick" style="color:#8dd3c7"><a href="#180340" label="[18:03:40]">&lt;janneke&gt;</a></span><span class="message">maybe it works, as long as you're not compiling with &quot;-g&quot; (debug info)</span></div><div class="line" id="180634"><span class="nick" style="color:#8dd3c7"><a href="#180634" label="[18:06:34]">&lt;janneke&gt;</a></span><span class="message">as for the rest, i think mescc-tools 1.4.0 is backwards compatible</span></div><div class="line" id="185236"><span class="nick" style="color:#6d2462"><a href="#185236" label="[18:52:36]">&lt;vagrantc&gt;</a></span><span class="message">seems to have built successfully</span></div><div class="line" id="185320"><span class="nick" style="color:#6d2462"><a href="#185320" label="[18:53:20]">&lt;vagrantc&gt;</a></span><span class="message">and tests passed</span></div><div class="line" id="191707"><span class="nick" style="color:#8dd3c7"><a href="#191707" label="[19:17:07]">&lt;janneke&gt;</a></span><span class="message">\o/</span></div><div class="line" id="202502"><span class="nick" style="color:#2e2a4a"><a href="#202502" label="[20:25:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: yes, I can reproduce it...</span></div><div class="line" id="202530"><span class="nick" style="color:#2e2a4a"><a href="#202530" label="[20:25:30]">&lt;stikonas&gt;</a></span><span class="message">although so far I don't know what's causing it</span></div><div class="line" id="210429"><span class="nick" style="color:#bc80bd"><a href="#210429" label="[21:04:29]">&lt;littlebobeep&gt;</a></span><span class="message">.</span></div><div class="line" id="221439"><span class="nick" style="color:#2e2a4a"><a href="#221439" label="[22:14:39]">&lt;stikonas&gt;</a></span><span class="message">fossy: I found the workaround, but I think I need to recalculate checksums, your rebase broke checksums</span></div><div class="line" id="223028"><span class="nick" style="color:#bc80bd"><a href="#223028" label="[22:30:28]">&lt;littlebobeep&gt;</a></span><span class="message">stikonas[m]: That is the position the FSF takes, yes, but it does not make much sense to me.  Software that is immutable is still software.</span></div><div class="line" id="223048"><span class="nick" style="color:#bc80bd"><a href="#223048" label="[22:30:48]">&lt;littlebobeep&gt;</a></span><span class="message">And I think there is still a freedom issue with it</span></div><div class="line" id="223723"><span class="nick" style="color:#3c5b35"><a href="#223723" label="[22:37:23]">&lt;stikonas[m]&gt;</a></span><span class="message">littlebobeep: then hardware is also software</span></div><div class="line" id="223806"><span class="nick" style="color:#3c5b35"><a href="#223806" label="[22:38:06]">&lt;stikonas[m]&gt;</a></span><span class="message">Most hardware is programmed these days and automatically synthesised</span></div><div class="line" id="223839"><span class="nick" style="color:#3c5b35"><a href="#223839" label="[22:38:39]">&lt;stikonas[m]&gt;</a></span><span class="message">So you either make no distinction which is a bit unrealistic or you just arbitrarily draw line somewhere</span></div><div class="line" id="223910"><span class="nick" style="color:#3c5b35"><a href="#223910" label="[22:39:10]">&lt;stikonas[m]&gt;</a></span><span class="message">And immutable ROM is basically the only somewhat logical place to draw it</span></div><div class="line" id="224750"><span class="nick" style="color:#bc80bd"><a href="#224750" label="[22:47:50]">&lt;littlebobeep&gt;</a></span><span class="message">Well once it's a bunch of transistors it's not really software technically but yes the HDL and netlists are code sure</span></div><div class="line" id="225200"><span class="nick" style="color:#6c3d55"><a href="#225200" label="[22:52:00]">*</a></span><span class="message">vagrantc falls down a git submodule rabbit hole and has no idea where to start</span></div><div class="line" id="225301"><span class="nick" style="color:#6d2462"><a href="#225301" label="[22:53:01]">&lt;vagrantc&gt;</a></span><span class="message">looks like mes now needs m2-planet to bootstrap, m2-planet needs stage0, stage0 has git submodules ... which have submodules of their own that include ... m2-planet</span></div><div class="line" id="225453"><span class="nick" style="color:#6d2462"><a href="#225453" label="[22:54:53]">&lt;vagrantc&gt;</a></span><span class="message">i mean, i know recursive self-dependencies are kind of what bootstrapping is all about...</span></div><div class="line" id="230224"><span class="nick" style="color:#2e2a4a"><a href="#230224" label="[23:02:24]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: you are getting confused because you shouldn't look at stage0, stage0-posix is what you should be looking at</span></div><div class="line" id="230233"><span class="nick" style="color:#2e2a4a"><a href="#230233" label="[23:02:33]">&lt;stikonas&gt;</a></span><span class="message">stage0 is for baremetal bootstrap</span></div><div class="line" id="230246"><span class="nick" style="color:#6d2462"><a href="#230246" label="[23:02:46]">&lt;vagrantc&gt;</a></span><span class="message">aha!</span></div><div class="line" id="230259"><span class="nick" style="color:#2e2a4a"><a href="#230259" label="[23:02:59]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix has M2-Planet, M2libc, mescc-tools and mescc-tools-extra as submodules</span></div><div class="line" id="230325"><span class="nick" style="color:#2e2a4a"><a href="#230325" label="[23:03:25]">&lt;stikonas&gt;</a></span><span class="message">some of those have an extra copy of M2libc for standalone building but if you build it as part of stage0-posix, top level M2libc is used</span></div><div class="line" id="230401"><span class="nick" style="color:#2e2a4a"><a href="#230401" label="[23:04:01]">&lt;stikonas&gt;</a></span><span class="message">oh and there is also bootstrap seeds submodule</span></div><div class="line" id="230423"><span class="nick" style="color:#2e2a4a"><a href="#230423" label="[23:04:23]">&lt;stikonas&gt;</a></span><span class="message">then output of stage0-posix is M2-Planet and those tools</span></div><div class="line" id="230428"><span class="nick" style="color:#6d2462"><a href="#230428" label="[23:04:28]">&lt;vagrantc&gt;</a></span><span class="message">trying to figure out what makes sense to package this in Debian</span></div><div class="line" id="230428"><span class="nick" style="color:#2e2a4a"><a href="#230428" label="[23:04:28]">&lt;stikonas&gt;</a></span><span class="message">you can use M2-Planet to build mes-m2</span></div><div class="line" id="230450"><span class="nick" style="color:#2e2a4a"><a href="#230450" label="[23:04:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe stage0-posix should be source package that builds a few binary debs?</span></div><div class="line" id="230459"><span class="nick" style="color:#2e2a4a"><a href="#230459" label="[23:04:59]">&lt;stikonas&gt;</a></span><span class="message">like M2-Planet, mescc-tools, mescc-tools-extra</span></div><div class="line" id="230516"><span class="nick" style="color:#6d2462"><a href="#230516" label="[23:05:16]">&lt;vagrantc&gt;</a></span><span class="message">i already have mescc-tools and mes in debian, trying to update them so i can build mes</span></div><div class="line" id="230532"><span class="nick" style="color:#2e2a4a"><a href="#230532" label="[23:05:32]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet can be used to build mes</span></div><div class="line" id="230555"><span class="nick" style="color:#2e2a4a"><a href="#230555" label="[23:05:55]">&lt;stikonas&gt;</a></span><span class="message">mescc-tools can be built separately with gcc if you want that</span></div><div class="line" id="230601"><span class="nick" style="color:#2e2a4a"><a href="#230601" label="[23:06:01]">&lt;stikonas&gt;</a></span><span class="message">it depends on what toolchain you are going to use</span></div><div class="line" id="230637"><span class="nick" style="color:#6d2462"><a href="#230637" label="[23:06:37]">&lt;vagrantc&gt;</a></span><span class="message">or, maybe it's a combinatorial confusion because there are multiple different paths that kind of arrive at a similar place?</span></div><div class="line" id="230706"><span class="nick" style="color:#6d2462"><a href="#230706" label="[23:07:06]">&lt;vagrantc&gt;</a></span><span class="message">yeah, surely i'm building mescc-tools using gcc</span></div><div class="line" id="230759"><span class="nick" style="color:#2e2a4a"><a href="#230759" label="[23:07:59]">&lt;stikonas&gt;</a></span><span class="message">yes, there are different paths...</span></div><div class="line" id="230801"><span class="nick" style="color:#6d2462"><a href="#230801" label="[23:08:01]">&lt;vagrantc&gt;</a></span><span class="message">and i can build mes, but ./configure --with-bootstrap now requires M2-Planet ... where it basically builds mescc with gcc and then builds mescc with mes</span></div><div class="line" id="230805"><span class="nick" style="color:#2e2a4a"><a href="#230805" label="[23:08:05]">&lt;stikonas&gt;</a></span><span class="message">there is development path using guile and gcc</span></div><div class="line" id="230815"><span class="nick" style="color:#2e2a4a"><a href="#230815" label="[23:08:15]">&lt;stikonas&gt;</a></span><span class="message">and there is bootstrap path using 357 byte hex0 seed</span></div><div class="line" id="230831"><span class="nick" style="color:#2e2a4a"><a href="#230831" label="[23:08:31]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'm out for an hour or so</span></div><div class="line" id="230842"><span class="nick" style="color:#6d2462"><a href="#230842" label="[23:08:42]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: thanks for streering me a bit less lost :)</span></div><div class="line" id="230858"><span class="nick" style="color:#6d2462"><a href="#230858" label="[23:08:58]">&lt;vagrantc&gt;</a></span><span class="message">but yeah, the hex0 seed seems to be the most exciting path</span></div><div class="line" id="230942"><span class="nick" style="color:#8dd3c7"><a href="#230942" label="[23:09:42]">&lt;janneke&gt;</a></span><span class="message">vagrantc: hmm, that sounds like a bug</span></div><div class="line" id="231007"><span class="nick" style="color:#6d2462"><a href="#231007" label="[23:10:07]">&lt;vagrantc&gt;</a></span><span class="message">janneke: oh!</span></div><div class="line" id="231021"><span class="nick" style="color:#6d2462"><a href="#231021" label="[23:10:21]">&lt;vagrantc&gt;</a></span><span class="message">janneke: or maybe it has nothing to do with M2-Planet and it's just a bug</span></div><div class="line" id="231023"><span class="nick" style="color:#8dd3c7"><a href="#231023" label="[23:10:23]">&lt;janneke&gt;</a></span><span class="message">i mean, if --bootstrap requires m2-planet, and then not uses it..?</span></div><div class="line" id="231046"><span class="nick" style="color:#6c3d55"><a href="#231046" label="[23:10:46]">*</a></span><span class="message">janneke hasn't looked at --bootstrap</span></div><div class="line" id="231059"><span class="nick" style="color:#6d2462"><a href="#231059" label="[23:10:59]">&lt;vagrantc&gt;</a></span><span class="message">janneke: --with-bootstrap?</span></div><div class="line" id="231106"><span class="nick" style="color:#8dd3c7"><a href="#231106" label="[23:11:06]">&lt;janneke&gt;</a></span><span class="message">only at the regular build, and the kaem build</span></div><div class="line" id="231116"><span class="nick" style="color:#8dd3c7"><a href="#231116" label="[23:11:16]">&lt;janneke&gt;</a></span><span class="message">ah yes</span></div><div class="line" id="231116"><span class="nick" style="color:#3c5b35"><a href="#231116" label="[23:11:16]">&lt;stikonas[m]&gt;</a></span><span class="message">I haven't used bootstrap either, I used kaem scripts</span></div><div class="line" id="231138"><span class="nick" style="color:#6d2462"><a href="#231138" label="[23:11:38]">&lt;vagrantc&gt;</a></span><span class="message">janneke: git begs to differ, given that you implemented it, but it has been a while :)</span></div><div class="line" id="231140"><span class="nick" style="color:#3c5b35"><a href="#231140" label="[23:11:40]">&lt;stikonas[m]&gt;</a></span><span class="message">kaem script can build mes-m2</span></div><div class="line" id="231202"><span class="nick" style="color:#8dd3c7"><a href="#231202" label="[23:12:02]">&lt;janneke&gt;</a></span><span class="message">vagrantc: ah sure, i meant: i forgot to look at it for 0.24</span></div><div class="line" id="231244"><span class="nick" style="color:#6d2462"><a href="#231244" label="[23:12:44]">&lt;vagrantc&gt;</a></span><span class="message">janneke: let me get you a better error log</span></div><div class="line" id="231300"><span class="nick" style="color:#6d2462"><a href="#231300" label="[23:13:00]">&lt;vagrantc&gt;</a></span><span class="message">better than me rambling about red herrings on irc</span></div><div class="line" id="232007"><span class="nick" style="color:#6d2462"><a href="#232007" label="[23:20:07]">&lt;vagrantc&gt;</a></span><span class="message">janneke: <a rel="nofollow" href="https://paste.debian.net/1240056/">https://paste.debian.net/1240056/</a> </span></div><div class="line" id="232020"><span class="nick" style="color:#6d2462"><a href="#232020" label="[23:20:20]">&lt;vagrantc&gt;</a></span><span class="message">running another build to get more state, that's just a snippet from the build log</span></div><div class="line" id="232528"><span class="nick" style="color:#6d2462"><a href="#232528" label="[23:25:28]">&lt;vagrantc&gt;</a></span><span class="message">of course, it's a bug very late in the build process...</span></div><div class="line" id="233039"><span class="nick" style="color:#8dd3c7"><a href="#233039" label="[23:30:39]">&lt;janneke&gt;</a></span><span class="message">vagrantc: thanks...hmm, that's a weird bug</span></div><div class="line" id="233049"><span class="nick" style="color:#8dd3c7"><a href="#233049" label="[23:30:49]">&lt;janneke&gt;</a></span><span class="message">is this using --with-bootstrap?</span></div><div class="line" id="234326"><span class="nick" style="color:#8dd3c7"><a href="#234326" label="[23:43:26]">&lt;janneke&gt;</a></span><span class="message">hmm, i cannot reproduce the dependency on m2-planet; seems optional to me; anyway happy to get a bug report but for now</span></div><div class="line" id="234331"><span class="nick" style="color:#6c3d55"><a href="#234331" label="[23:43:31]">*</a></span><span class="message">janneke -&gt; zZzzz</span></div><div class="line" id="234338"><span class="nick" style="color:#8dd3c7"><a href="#234338" label="[23:43:38]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: well mescc-tools has the relationship with mescc that binutils has with GCC. One doesn't *need* mescc-tools to build mescc but it is needed by mescc to actually build working binaries</span></div><div class="line" id="234407"><span class="nick" style="color:#8dd3c7"><a href="#234407" label="[23:44:07]">&lt;oriansj&gt;</a></span><span class="message">also M2-Planet is only a dependency for mes.c IF and only IF one is doing a bootstrap.</span></div><div class="line" id="234440"><span class="nick" style="color:#8dd3c7"><a href="#234440" label="[23:44:40]">&lt;oriansj&gt;</a></span><span class="message">If I remember correctly a single gcc command should be all one needs to build mes.c (unless that magically broke somehow *again*)</span></div><div class="line" id="234521"><span class="nick" style="color:#8dd3c7"><a href="#234521" label="[23:45:21]">&lt;oriansj&gt;</a></span><span class="message">nyacc would also be a runtime dependency (hopefully it is packaged too)</span></div><div class="line" id="234713"><span class="nick" style="color:#6d2462"><a href="#234713" label="[23:47:13]">&lt;vagrantc&gt;</a></span><span class="message">janneke: yes, using --with-bootstrap</span></div><div class="line" id="234819"><span class="nick" style="color:#6d2462"><a href="#234819" label="[23:48:19]">&lt;vagrantc&gt;</a></span><span class="message">janneke: yeah, the m2-planet thing may have just been me misreading the documentation and making assumptions</span></div><div class="line" id="235009"><span class="nick" style="color:#6d2462"><a href="#235009" label="[23:50:09]">&lt;vagrantc&gt;</a></span><span class="message">any dependency needed to build mes 0.23 is packaged, anything newly introduced i'll have to package (already updated mescc-tools to 1.4 since it seemed to build mes 0.23+patches fine)</span></div><div class="line" id="235752"><span class="nick" style="color:#8dd3c7"><a href="#235752" label="[23:57:52]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: well mescc-tools isn't needed to build mescc</span></div><div class="line" id="235832"><span class="nick" style="color:#8dd3c7"><a href="#235832" label="[23:58:32]">&lt;oriansj&gt;</a></span><span class="message">and there was only a single breaking change for mescc with mescc-tools involving blood-elf needing an endian flag</span></div><br /></div></body></html>