<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-08-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="091553"><span class="nick" style="color:#389600"><a href="#091553" label="[09:15:53]">&lt;pabs3&gt;</a></span><span class="message"> <a rel="nofollow" href="https://peter.eisentraut.org/blog/2024/08/13/the-new-postgresql-17-make-dist">https://peter.eisentraut.org/blog/2024/08/13/the-new-postgresql-17-make-dist</a> </span></div><div class="line" id="203338"><span class="nick" style="color:#8dd3c7"><a href="#203338" label="[20:33:38]">&lt;aggi&gt;</a></span><span class="message">&gt;&gt;&gt; Installing (1 of 2) app-cdr/cdrtools-3.02_alpha09-r4::hotfix to /usr/i486-tcc-linux-musl/</span></div><div class="line" id="203358"><span class="nick" style="color:#8dd3c7"><a href="#203358" label="[20:33:58]">&lt;aggi&gt;</a></span><span class="message">that's all completely statically compiled/linked with tcc-toolchain</span></div><div class="line" id="203458"><span class="nick" style="color:#8dd3c7"><a href="#203458" label="[20:34:58]">&lt;aggi&gt;</a></span><span class="message">currently i am forced to static-linking _only_; that's a problem with perl still</span></div><div class="line" id="203520"><span class="nick" style="color:#8dd3c7"><a href="#203520" label="[20:35:20]">&lt;aggi&gt;</a></span><span class="message">because perl needs to load DSOs for various modules that autoconf/automake need</span></div><div class="line" id="203645"><span class="nick" style="color:#8dd3c7"><a href="#203645" label="[20:36:45]">&lt;aggi&gt;</a></span><span class="message">however, if i can repair this, static linking of perl with the necessary objects, then i can salvage GNU buildsystem to remain self-hosting with tcc-toolchain</span></div><div class="line" id="203751"><span class="nick" style="color:#8dd3c7"><a href="#203751" label="[20:37:51]">&lt;aggi&gt;</a></span><span class="message">full static linking support is/was a nasty hackjob, and some things don't work yet (gdb, python/gentoo-portage)</span></div><div class="line" id="203800"><span class="nick" style="color:#8dd3c7"><a href="#203800" label="[20:38:00]">&lt;aggi&gt;</a></span><span class="message">however, it is feasible</span></div><div class="line" id="203854"><span class="nick" style="color:#8dd3c7"><a href="#203854" label="[20:38:54]">&lt;aggi&gt;</a></span><span class="message">i got linux-kernel on TODO still, tcc-compiled kernel segfaulted (but i could reproduce a known-working state already, to bisect what went wrong)</span></div><div class="line" id="203948"><span class="nick" style="color:#8dd3c7"><a href="#203948" label="[20:39:48]">&lt;aggi&gt;</a></span><span class="message">bootstrapping binutils with tcc worked (gladly, because kernel bootcode needs 16 asm), gcc-4.7 didn't compile with tcc yet</span></div><div class="line" id="204034"><span class="nick" style="color:#8dd3c7"><a href="#204034" label="[20:40:34]">&lt;aggi&gt;</a></span><span class="message">*16bit</span></div><div class="line" id="204126"><span class="nick" style="color:#8dd3c7"><a href="#204126" label="[20:41:26]">&lt;aggi&gt;</a></span><span class="message">conclusio: it is feasible to utilize tcc-toolchain as system compiler _only_, currently with static-linking</span></div><div class="line" id="204243"><span class="nick" style="color:#8dd3c7"><a href="#204243" label="[20:42:43]">&lt;aggi&gt;</a></span><span class="message">next i'll try to salvage perl for static linking, since i cannot quickly repair dynamic linking support with tcc-toolchain/musl libc.so</span></div><div class="line" id="204319"><span class="nick" style="color:#8dd3c7"><a href="#204319" label="[20:43:19]">&lt;aggi&gt;</a></span><span class="message">btw.; i had to patch tcc a little, to sanitize include and library search paths when cross-compiling</span></div><div class="line" id="204600"><span class="nick" style="color:#8dd3c7"><a href="#204600" label="[20:46:00]">&lt;aggi&gt;</a></span><span class="message">mutt mailer, ffmpeg, mplayer... all of it fully supported now, with tcc and static-linking</span></div><div class="line" id="204846"><span class="nick" style="color:#8dd3c7"><a href="#204846" label="[20:48:46]">&lt;aggi&gt;</a></span><span class="message">i havent got GNU autoreconf support yet, because perl</span></div><div class="line" id="204910"><span class="nick" style="color:#8dd3c7"><a href="#204910" label="[20:49:10]">&lt;aggi&gt;</a></span><span class="message">python neither, and there is another coincidence with both of them, perl and pythong</span></div><div class="line" id="204953"><span class="nick" style="color:#8dd3c7"><a href="#204953" label="[20:49:53]">&lt;aggi&gt;</a></span><span class="message">since i patched kernel, to enforce W^X policies, and there is only two W^X policy violators remaining, perl and python</span></div><div class="line" id="205046"><span class="nick" style="color:#8dd3c7"><a href="#205046" label="[20:50:46]">&lt;aggi&gt;</a></span><span class="message">to my understanding, this opens a security loophole, if PROT_READ|WRITE|EXECUTABLE is allocated</span></div><div class="line" id="205223"><span class="nick" style="color:#8dd3c7"><a href="#205223" label="[20:52:23]">&lt;aggi&gt;</a></span><span class="message">however, to avoid this, i had to re/write 500 Makefiles of the ebuilds that i kept passing the no-c++/tcc/static criteria</span></div><div class="line" id="205256"><span class="nick" style="color:#8dd3c7"><a href="#205256" label="[20:52:56]">&lt;aggi&gt;</a></span><span class="message">to avoid the &quot;pre-generated&quot; GNU configure/makefile, and that's too much</span></div><div class="line" id="225107"><span class="nick" style="color:#2e2a4a"><a href="#225107" label="[22:51:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; The pnut C to posix shell compiler posted the other day looks interesting. It's quite slow to bootstrap (a couple of mins for me) but it does also have an i386 backend. In the readme it does claim to be able to compile tcc, but I couldn't figure out how to do that. I raised an issue with them <a rel="nofollow" href="https://github.com/udem-dlteam/pnut/issues/63">https://github.com/udem-dlteam/pnut/issues/63</a> </span></div><div class="line" id="225255"><span class="nick" style="color:#2e2a4a"><a href="#225255" label="[22:52:55]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; It also does not seem to work with very old versions of bash. I also had trouble trying to run it under the busybox shell. I think in theory ksh will build it, but again it needs to be a new enough version.</span></div><div class="line" id="225400"><span class="nick" style="color:#2e2a4a"><a href="#225400" label="[22:54:00]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Still could be useful as a diverse bootstrap path (eg it probably can compile M2)</span></div><div class="line" id="225557"><span class="nick" style="color:#2e2a4a"><a href="#225557" label="[22:55:57]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Some shells will fail part way through the bootstrap (with the bulk of the outputted code looking ok, but just truncated)</span></div><div class="line" id="230016"><span class="nick" style="color:#8dd3c7"><a href="#230016" label="[23:00:16]">&lt;aggi&gt;</a></span><span class="message">shell plus a few userspace utilities</span></div><div class="line" id="230024"><span class="nick" style="color:#2e2a4a"><a href="#230024" label="[23:00:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; and still you need a C compiler to compile pnut.c to pnut.sh . Once possible way around this would be to ship a manually tidied up version of pnut.sh</span></div><div class="line" id="230133"><span class="nick" style="color:#2e2a4a"><a href="#230133" label="[23:01:33]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; aggi: yep I don't think they are too clear about which utilities.</span></div><div class="line" id="230154"><span class="nick" style="color:#2e2a4a"><a href="#230154" label="[23:01:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; ideally all you would need is busybox</span></div><div class="line" id="230301"><span class="nick" style="color:#2e2a4a"><a href="#230301" label="[23:03:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; It does bootstrap under the slackware 15 mini installer iso (which contains bash/busybox)</span></div><div class="line" id="230401"><span class="nick" style="color:#2e2a4a"><a href="#230401" label="[23:04:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; ie <a rel="nofollow" href="http://www.slackware.com/~alien/slackboot/mini/15.0/">http://www.slackware.com/~alien/slackboot/mini/15.0/</a> </span></div><div class="line" id="231145"><span class="nick" style="color:#8dd3c7"><a href="#231145" label="[23:11:45]">&lt;aggi&gt;</a></span><span class="message">no clue, why they would transpile c-to-shell</span></div><div class="line" id="231212"><span class="nick" style="color:#8dd3c7"><a href="#231212" label="[23:12:12]">&lt;aggi&gt;</a></span><span class="message">i was worried, which userspace utilities would remain, when enforcing tcc</span></div><div class="line" id="231239"><span class="nick" style="color:#8dd3c7"><a href="#231239" label="[23:12:39]">&lt;aggi&gt;</a></span><span class="message">since recently i got statically linked with tcc: coreutils, util-linux, bash, oksh, and toybox</span></div><div class="line" id="231317"><span class="nick" style="color:#8dd3c7"><a href="#231317" label="[23:13:17]">&lt;aggi&gt;</a></span><span class="message">perl and autotools are missing, because perl</span></div><div class="line" id="231420"><span class="nick" style="color:#8dd3c7"><a href="#231420" label="[23:14:20]">&lt;aggi&gt;</a></span><span class="message">it's build-system isn't prepared for static linking, that's needed to load various modules that automake/autoreconf need</span></div><div class="line" id="231450"><span class="nick" style="color:#8dd3c7"><a href="#231450" label="[23:14:50]">&lt;aggi&gt;</a></span><span class="message">it's a deadlock/trap, into various directions</span></div><div class="line" id="231705"><span class="nick" style="color:#8dd3c7"><a href="#231705" label="[23:17:05]">&lt;aggi&gt;</a></span><span class="message">current situation, if, and only if, i manage to repair perl build-system, then there simply is no need to bootstrap gcc and/or support for dynamic linking</span></div><div class="line" id="231826"><span class="nick" style="color:#8dd3c7"><a href="#231826" label="[23:18:26]">&lt;aggi&gt;</a></span><span class="message">in any case, perl will violate W^X policies enforced by kernel</span></div><div class="line" id="232002"><span class="nick" style="color:#8dd3c7"><a href="#232002" label="[23:20:02]">&lt;aggi&gt;</a></span><span class="message">i can live with abandoning python/gentoo-portage, although i don't intend to, because it implies a re-integration of ~500 ebuilds</span></div><div class="line" id="232102"><span class="nick" style="color:#2e2a4a"><a href="#232102" label="[23:21:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; aggi: from the readme &quot;As a way to bootstrap a compiler written in C with an executable version that is still human readable&quot;</span></div><div class="line" id="232225"><span class="nick" style="color:#2e2a4a"><a href="#232225" label="[23:22:25]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; cosinusoidally: but as you said, you still need C compiler to bootstrap pnut...</span></div><div class="line" id="232303"><span class="nick" style="color:#2e2a4a"><a href="#232303" label="[23:23:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; and I guess transpiled C -&gt; shell code looks even worse than autoconf scripts...</span></div><div class="line" id="232310"><span class="nick" style="color:#6b8072"><a href="#232310" label="[23:23:10]">&lt;lanodan&gt;</a></span><span class="message">Well the idea is probably more to distribute the resulting shell code as a seed.</span></div><div class="line" id="232404"><span class="nick" style="color:#2e2a4a"><a href="#232404" label="[23:24:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; perhaps, but I still think the proper way is to start with smaller compilers and eventually assembler</span></div><div class="line" id="232415"><span class="nick" style="color:#2e2a4a"><a href="#232415" label="[23:24:15]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Andrius Štikonas: the generated output isn't actually that bad. It could be tidied up and frozen into a &quot;pnut_bootstrap.sh&quot; file that never changes</span></div><div class="line" id="232421"><span class="nick" style="color:#2e2a4a"><a href="#232421" label="[23:24:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; if you start from shell, there is still implicit C compiler somewhere that was used to build shell</span></div><div class="line" id="232540"><span class="nick" style="color:#2e2a4a"><a href="#232540" label="[23:25:40]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; yep, but it does give you an additional diverse bootstrap path that works on Linux machines without an existing toolchain.</span></div><div class="line" id="232545"><span class="nick" style="color:#2e2a4a"><a href="#232545" label="[23:25:45]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; without an installed toolchain I mean</span></div><br /></div></body></html>