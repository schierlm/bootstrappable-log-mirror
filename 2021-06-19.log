<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-06-19.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="042638"><span class="nick" style="color:#8dd3c7"><a href="#042638" label="[04:26:38]">&lt;oriansj&gt;</a></span><span class="message">clemens3: well stage0 comes in two pieces; stage0-posix which by definition depends upon a posix kernel (a rather minimal one at that) and stage0; which doesn't depend upon any kernel and runs on bare metal. The big problem is once one gets to mes-m2 (MesCC) one needs a POSIX kernel to extend further into the bootstrap process. So any kernel one would want to write in C and bootstrap from bare metal would have to be in the M2-Planet</span></div><div class="line" id="042638"><span class="nick" style="color:#8dd3c7"><a href="#042638" label="[04:26:38]">&lt;oriansj&gt;</a></span><span class="message">subset.</span></div><div class="line" id="042755"><span class="nick" style="color:#8dd3c7"><a href="#042755" label="[04:27:55]">&lt;oriansj&gt;</a></span><span class="message">that being said, this is all a big work in progress and despite 5 years of effort, not even close to being *DONE*</span></div><div class="line" id="042928"><span class="nick" style="color:#8dd3c7"><a href="#042928" label="[04:29:28]">&lt;oriansj&gt;</a></span><span class="message">ripping out the kernel for x86 and other platforms being bootstrapped. Porting stage0-posix to more architectures. Building custom fpgas to minimize possiblity of hardware compromises. Building a custom computer out of individual gates to finish off the entire chain. There is a mountain of work to do but all of it fun.</span></div><div class="line" id="043152"><span class="nick" style="color:#8dd3c7"><a href="#043152" label="[04:31:52]">&lt;oriansj&gt;</a></span><span class="message">where we are now is if you have a posix kernel you trust that supports: exec, fork, waitpid, read, write, exit and a file system. (virtual memory would be a nice extra) you can use it to bootstrap to the end of stage0-posix. After that things get more complicated.</span></div><div class="line" id="043335"><span class="nick" style="color:#8dd3c7"><a href="#043335" label="[04:33:35]">&lt;oriansj&gt;</a></span><span class="message">(chmod, mkdir, open, close possibly too depending on the filesystem used)</span></div><div class="line" id="071702"><span class="nick" style="color:#2e2a4a"><a href="#071702" label="[07:17:02]">&lt;clemens3&gt;</a></span><span class="message">well, the hardware security is another whole and can of worms of its own.. just the software stack would be a great progress</span></div><div class="line" id="133424"><span class="nick" style="color:#8dd3c7"><a href="#133424" label="[13:34:24]">&lt;oriansj&gt;</a></span><span class="message">clemens3: well the software stack has already been reduced to something that could be solved in less than a year by a single programmer. Just build a POSIX kernel in assembly that supports ext2 and just enough syscalls to bootstrap TCC, then use it to build Linux and be done.</span></div><div class="line" id="133700"><span class="nick" style="color:#8dd3c7"><a href="#133700" label="[13:37:00]">&lt;oriansj&gt;</a></span><span class="message">or take <a rel="nofollow" href="https://github.com/nanochess/bootOS">https://github.com/nanochess/bootOS</a>  and build a loader that fits in 512bytes that can support ext2, a hex0 assembler and an editor.</span></div><div class="line" id="133742"><span class="nick" style="color:#8dd3c7"><a href="#133742" label="[13:37:42]">&lt;oriansj&gt;</a></span><span class="message">It doesn't have to be portable, just barely good enough to do the job and small enough to manually audit.</span></div><div class="line" id="141124"><span class="nick" style="color:#6b8072"><a href="#141124" label="[14:11:24]">&lt;stikonas&gt;</a></span><span class="message">do we even need ext2?</span></div><div class="line" id="142351"><span class="nick" style="color:#8dd3c7"><a href="#142351" label="[14:23:51]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well fat16 might be simpler but ultimately that would be an implementation detail done by the implementer.</span></div><div class="line" id="142516"><span class="nick" style="color:#6b8072"><a href="#142516" label="[14:25:16]">&lt;stikonas&gt;</a></span><span class="message">well, what I meant do we even need filesystem?</span></div><div class="line" id="142558"><span class="nick" style="color:#6b8072"><a href="#142558" label="[14:25:58]">&lt;stikonas&gt;</a></span><span class="message">well, there is a question of how we feed sources in...</span></div><div class="line" id="142620"><span class="nick" style="color:#8dd3c7"><a href="#142620" label="[14:26:20]">&lt;oriansj&gt;</a></span><span class="message">stikonas: ultimately if the binaries don't get written to some physical storage media eventually. Then there was no point in doing the computation.</span></div><div class="line" id="142620"><span class="nick" style="color:#6b8072"><a href="#142620" label="[14:26:20]">&lt;stikonas&gt;</a></span><span class="message">but it might be even simpler than fat16...</span></div><div class="line" id="142652"><span class="nick" style="color:#6b8072"><a href="#142652" label="[14:26:52]">&lt;stikonas&gt;</a></span><span class="message">that's true, but you can probably build ext2 driver later</span></div><div class="line" id="142700"><span class="nick" style="color:#6b8072"><a href="#142700" label="[14:27:00]">&lt;stikonas&gt;</a></span><span class="message">or even linux kernel</span></div><div class="line" id="142718"><span class="nick" style="color:#6b8072"><a href="#142718" label="[14:27:18]">&lt;stikonas&gt;</a></span><span class="message">and then use that to write binaries somewhere</span></div><div class="line" id="142731"><span class="nick" style="color:#8dd3c7"><a href="#142731" label="[14:27:31]">&lt;oriansj&gt;</a></span><span class="message">stikonas: a RAM file system is still a file system</span></div><div class="line" id="142831"><span class="nick" style="color:#6b8072"><a href="#142831" label="[14:28:31]">&lt;stikonas&gt;</a></span><span class="message">yes, but isn't it much simpler?</span></div><div class="line" id="142903"><span class="nick" style="color:#8dd3c7"><a href="#142903" label="[14:29:03]">&lt;oriansj&gt;</a></span><span class="message">The only savings is in regard to writing blocks to a Logical Block Address and loading from a Logical Block Address, which could fit in a couple simple functions.</span></div><div class="line" id="142909"><span class="nick" style="color:#6b8072"><a href="#142909" label="[14:29:09]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="143005"><span class="nick" style="color:#8dd3c7"><a href="#143005" label="[14:30:05]">&lt;oriansj&gt;</a></span><span class="message">if you look at BootOS, it does disk read and write along with everything else it does in 512 bytes</span></div><div class="line" id="143033"><span class="nick" style="color:#8dd3c7"><a href="#143033" label="[14:30:33]">&lt;oriansj&gt;</a></span><span class="message">So it isn't some impossible task, just one that gets complicated the more disk drive controllers you wish to support.</span></div><div class="line" id="150047"><span class="nick" style="color:#8dd3c7"><a href="#150047" label="[15:00:47]">&lt;oriansj&gt;</a></span><span class="message">now mind you that BootOS has the advantage of being in real-mode and making bios calls to keep the complexity down to the floor.</span></div><div class="line" id="150206"><span class="nick" style="color:#8dd3c7"><a href="#150206" label="[15:02:06]">&lt;oriansj&gt;</a></span><span class="message">But remember all engineering is the balancing of needs and building within acceptable tolerances.</span></div><div class="line" id="152114"><span class="nick" style="color:#6b8072"><a href="#152114" label="[15:21:14]">&lt;stikonas&gt;</a></span><span class="message">oriansj: so I am back at getting mes-m2 from stage0-posix to work. So we discussed one problem before (included nyacc version is wrong). I think the other error I'm getting iserror:mescc: file not found: &quot;linux/x86-mes/elf32-footer-single-main.hex2&quot;:()</span></div><div class="line" id="152140"><span class="nick" style="color:#6b8072"><a href="#152140" label="[15:21:40]">&lt;stikonas&gt;</a></span><span class="message">(that's when linking tcc, so hopefully the last issue)</span></div><div class="line" id="152238"><span class="nick" style="color:#6b8072"><a href="#152238" label="[15:22:38]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I can't find that file anywhere in the stage0-posix/mes-m2</span></div><div class="line" id="152308"><span class="nick" style="color:#6b8072"><a href="#152308" label="[15:23:08]">&lt;stikonas&gt;</a></span><span class="message">there is another file though ./lib/m2/x86/ELF-i386-debug.hex2</span></div><div class="line" id="152440"><span class="nick" style="color:#6b8072"><a href="#152440" label="[15:24:40]">&lt;stikonas&gt;</a></span><span class="message">no, that seems to be header</span></div><div class="line" id="153425"><span class="nick" style="color:#8dd3c7"><a href="#153425" label="[15:34:25]">&lt;oriansj&gt;</a></span><span class="message">stikonas: the repo that would need updating is: <a rel="nofollow" href="https://github.com/oriansj/mes-m2">https://github.com/oriansj/mes-m2</a>  and that file is in the main mes repo as it is used by MesCC</span></div><div class="line" id="153509"><span class="nick" style="color:#8dd3c7"><a href="#153509" label="[15:35:09]">&lt;oriansj&gt;</a></span><span class="message">but isn't needed by M2-Planet</span></div><div class="line" id="153529"><span class="nick" style="color:#6b8072"><a href="#153529" label="[15:35:29]">&lt;stikonas&gt;</a></span><span class="message">yaeh, it's only to use mescc to link other binaries</span></div><div class="line" id="153600"><span class="nick" style="color:#6b8072"><a href="#153600" label="[15:36:00]">&lt;stikonas&gt;</a></span><span class="message">I'm trying to get it to work but somehow need more debugging (even after I put the file there, it still can't find it, probably looking in the wrong path)</span></div><div class="line" id="153605"><span class="nick" style="color:#8dd3c7"><a href="#153605" label="[15:36:05]">&lt;oriansj&gt;</a></span><span class="message">it is a hex2 ELF header if I remember correctly.</span></div><div class="line" id="154047"><span class="nick" style="color:#6b8072"><a href="#154047" label="[15:40:47]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll deal with it later, since it's more or less clear now, what to build tcc first. So third problem is</span></div><div class="line" id="154049"><span class="nick" style="color:#6b8072"><a href="#154049" label="[15:40:49]">&lt;stikonas&gt;</a></span><span class="message">/after/tcc-0.9.26/src/tcc-0.9.26 # ${MES} --no-auto-compile -e main ${bindir}/mescc.scm -- -o mes-tcc -L ${libdir} tcc.s -l c+tcc</span></div><div class="line" id="154050"><span class="nick" style="color:#6b8072"><a href="#154050" label="[15:40:50]">&lt;stikonas&gt;</a></span><span class="message">Target label qsort is not valid</span></div><div class="line" id="154052"><span class="nick" style="color:#6b8072"><a href="#154052" label="[15:40:52]">&lt;stikonas&gt;</a></span><span class="message">mescc: failed: hex2 --LittleEndian --architecture x86 --BaseAddress 0x1000000 -f /after/lib/linux/x86-mes/elf32-header.hex2 -f /after/lib/x86-mes/crt1.o -f tcc.o -f /after/lib/x86-mes/libc+tcc.a -f /after/lib/x86-mes/libmescc.a -f /after/lib/x86-mes/libc.a -f /after/lib/linux/x86-mes/elf32-footer-single-main.hex2 --exec_enable -o mes-tcc</span></div><div class="line" id="154124"><span class="nick" style="color:#6b8072"><a href="#154124" label="[15:41:24]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="154305"><span class="nick" style="color:#8dd3c7"><a href="#154305" label="[15:43:05]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well that is a hex2 linking error</span></div><div class="line" id="154413"><span class="nick" style="color:#8dd3c7"><a href="#154413" label="[15:44:13]">&lt;oriansj&gt;</a></span><span class="message">which in this case means :qsort is not in any of those files being linked together</span></div><div class="line" id="154506"><span class="nick" style="color:#6b8072"><a href="#154506" label="[15:45:06]">&lt;stikonas&gt;</a></span><span class="message">oh, that's probalby because I removed qsort during previous debugging</span></div><div class="line" id="154558"><span class="nick" style="color:#6b8072"><a href="#154558" label="[15:45:58]">&lt;stikonas&gt;</a></span><span class="message">when I was debugging the first issue</span></div><div class="line" id="154607"><span class="nick" style="color:#6b8072"><a href="#154607" label="[15:46:07]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll rerun everything from scratch</span></div><div class="line" id="154624"><span class="nick" style="color:#8dd3c7"><a href="#154624" label="[15:46:24]">&lt;oriansj&gt;</a></span><span class="message">So even a stub function will produce that label</span></div><div class="line" id="154732"><span class="nick" style="color:#6b8072"><a href="#154732" label="[15:47:32]">&lt;stikonas&gt;</a></span><span class="message">this will probably fix itself</span></div><div class="line" id="154737"><span class="nick" style="color:#6b8072"><a href="#154737" label="[15:47:37]">&lt;stikonas&gt;</a></span><span class="message">once I rerun things cleanly</span></div><div class="line" id="154809"><span class="nick" style="color:#8dd3c7"><a href="#154809" label="[15:48:09]">&lt;oriansj&gt;</a></span><span class="message">probably</span></div><div class="line" id="154841"><span class="nick" style="color:#6b8072"><a href="#154841" label="[15:48:41]">&lt;stikonas&gt;</a></span><span class="message">by the way, do you want to keep nyacc inside mes-m2?</span></div><div class="line" id="154907"><span class="nick" style="color:#6b8072"><a href="#154907" label="[15:49:07]">&lt;stikonas&gt;</a></span><span class="message">we need to either fix embedded copy or just use release tarball</span></div><div class="line" id="155047"><span class="nick" style="color:#6b8072"><a href="#155047" label="[15:50:47]">&lt;stikonas&gt;</a></span><span class="message">even mes-m2 in principle can be used from tarbal now</span></div><div class="line" id="155058"><span class="nick" style="color:#8dd3c7"><a href="#155058" label="[15:50:58]">&lt;oriansj&gt;</a></span><span class="message">well the idea was to make new developers lives easier when they choose to start hacking on MesCC as the previous method required guix to setup a build environment before you could get it to run</span></div><div class="line" id="155143"><span class="nick" style="color:#8dd3c7"><a href="#155143" label="[15:51:43]">&lt;oriansj&gt;</a></span><span class="message">but you are right, perhaps it is time to move mes-m2 out of stage0-posix and just tarball it in live-bootstrap.</span></div><div class="line" id="155220"><span class="nick" style="color:#8dd3c7"><a href="#155220" label="[15:52:20]">&lt;oriansj&gt;</a></span><span class="message">it is very touchy and can't do cross-platform builds like the rest of stage0-posix</span></div><div class="line" id="155414"><span class="nick" style="color:#6b8072"><a href="#155414" label="[15:54:14]">&lt;stikonas&gt;</a></span><span class="message">yeah, mes/mescc is very picky about environment</span></div><div class="line" id="155458"><span class="nick" style="color:#6b8072"><a href="#155458" label="[15:54:58]">&lt;stikonas&gt;</a></span><span class="message">and I had to precisely time Ctrl+C keys to see these error messages</span></div><div class="line" id="155503"><span class="nick" style="color:#8dd3c7"><a href="#155503" label="[15:55:03]">&lt;oriansj&gt;</a></span><span class="message">we could just abandon mes-m2 entirely as mes should be including the pieces needed to be built by M2-Planet and maintaining those as it developes</span></div><div class="line" id="155522"><span class="nick" style="color:#6b8072"><a href="#155522" label="[15:55:22]">&lt;stikonas&gt;</a></span><span class="message">otherwise the buffer gets filled in with useless backtrace</span></div><div class="line" id="155557"><span class="nick" style="color:#8dd3c7"><a href="#155557" label="[15:55:57]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I find piping 2&gt; log extremely helpful with MesCC</span></div><div class="line" id="155559"><span class="nick" style="color:#6b8072"><a href="#155559" label="[15:55:59]">&lt;stikonas&gt;</a></span><span class="message">yeah, hopefully in future can just build mes directly</span></div><div class="line" id="155646"><span class="nick" style="color:#8dd3c7"><a href="#155646" label="[15:56:46]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well mes.c and mes-m2 are supposed to be clones with the only difference being mes-m2 was my attempt at making mes.c into a form M2-Planet could build and janneke was to backport into mes.c</span></div><div class="line" id="155723"><span class="nick" style="color:#8dd3c7"><a href="#155723" label="[15:57:23]">&lt;oriansj&gt;</a></span><span class="message">Turns out janneke solved the mes-m2 bootstrap problem first in mes.c; so at this point there isn't much reason to keep mes-m2</span></div><div class="line" id="155802"><span class="nick" style="color:#6b8072"><a href="#155802" label="[15:58:02]">&lt;stikonas&gt;</a></span><span class="message">well, for now as far as I understand this is just a snapshot of that working version (with a few extra fixes)</span></div><div class="line" id="155823"><span class="nick" style="color:#8dd3c7"><a href="#155823" label="[15:58:23]">&lt;oriansj&gt;</a></span><span class="message">I can certainly backport the low level primitives that janneke provided for mes-m2 into M2libc</span></div><div class="line" id="155842"><span class="nick" style="color:#8dd3c7"><a href="#155842" label="[15:58:42]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well it is more complex then that unfortunately.</span></div><div class="line" id="155851"><span class="nick" style="color:#8dd3c7"><a href="#155851" label="[15:58:51]">&lt;oriansj&gt;</a></span><span class="message">mes-m2 is unbuildable by GCC</span></div><div class="line" id="155915"><span class="nick" style="color:#8dd3c7"><a href="#155915" label="[15:59:15]">&lt;oriansj&gt;</a></span><span class="message">or buildable by GCC but MesCC doesn't work anymore</span></div><div class="line" id="160100"><span class="nick" style="color:#6b8072"><a href="#160100" label="[16:01:00]">&lt;stikonas&gt;</a></span><span class="message">oh I see. Well buildable for GCC is nice to have but not essential for bootsrapping purposes. But I guess might be blocker for official mes</span></div><div class="line" id="160148"><span class="nick" style="color:#8dd3c7"><a href="#160148" label="[16:01:48]">&lt;oriansj&gt;</a></span><span class="message">and there are only two paths forward: 1) janneke gets MesCC running on the GCC branch of mes-m2 and we finish the M2libc porting work for mes-m2 or 2) I sort out the differences betwen mes.c and mes-m2 to keep both working.</span></div><div class="line" id="160240"><span class="nick" style="color:#8dd3c7"><a href="#160240" label="[16:02:40]">&lt;oriansj&gt;</a></span><span class="message">neither will be fun for me or likely janneke</span></div><div class="line" id="160357"><span class="nick" style="color:#8dd3c7"><a href="#160357" label="[16:03:57]">&lt;oriansj&gt;</a></span><span class="message">as 1) requires MesCC to support FILE as a struct and 2) requires me to do functional isolation in a tightly wrapped scheme.</span></div><div class="line" id="160751"><span class="nick" style="color:#6b8072"><a href="#160751" label="[16:07:51]">&lt;stikonas&gt;</a></span><span class="message">ok, it builds now, I'll prepare mes-m2 changes then</span></div><div class="line" id="161012"><span class="nick" style="color:#6b8072"><a href="#161012" label="[16:10:12]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/mes-m2/pull/11">https://github.com/oriansj/mes-m2/pull/11</a> </span></div><div class="line" id="161339"><span class="nick" style="color:#8dd3c7"><a href="#161339" label="[16:13:39]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged thank you</span></div><div class="line" id="161614"><span class="nick" style="color:#6b8072"><a href="#161614" label="[16:16:14]">&lt;stikonas&gt;</a></span><span class="message">thanks</span></div><div class="line" id="161619"><span class="nick" style="color:#6b8072"><a href="#161619" label="[16:16:19]">&lt;stikonas&gt;</a></span><span class="message">I'll deal with nyacc a bit later...</span></div><div class="line" id="161629"><span class="nick" style="color:#6b8072"><a href="#161629" label="[16:16:29]">&lt;stikonas&gt;</a></span><span class="message">wnat to do some house work</span></div><div class="line" id="195640"><span class="nick" style="color:#6b8072"><a href="#195640" label="[19:56:40]">&lt;stikonas&gt;</a></span><span class="message">ok, I think I've got live-bootstrap to build with tarballed mes and nyacc. Although, that will need mkdir, so we'll need a new stage0-posix release</span></div><div class="line" id="212404"><span class="nick" style="color:#6b8072"><a href="#212404" label="[21:24:04]">&lt;stikonas&gt;</a></span><span class="message">oriansj: sha256sum.c prints &quot;Wanted&quot; and &quot;Received&quot; hashes when there is a hash mismatch and they seem swapped</span></div><div class="line" id="212438"><span class="nick" style="color:#6b8072"><a href="#212438" label="[21:24:38]">&lt;stikonas&gt;</a></span><span class="message">Wanted is checksum of the file and Received is the recorded checksum in the digest file</span></div><div class="line" id="213016"><span class="nick" style="color:#6b8072"><a href="#213016" label="[21:30:16]">&lt;stikonas&gt;</a></span><span class="message">is that deliberate or should I swap those in mescc-tools-extra?</span></div><div class="line" id="220914"><span class="nick" style="color:#80b1d3"><a href="#220914" label="[22:09:14]">&lt;Hagfish&gt;</a></span><span class="message">yeah, that does seem unintuitive</span></div><div class="line" id="224537"><span class="nick" style="color:#2e2a4a"><a href="#224537" label="[22:45:37]">&lt;clemens3&gt;</a></span><span class="message">re,ok,just look at the mes and stage0 projects on the page.. question to me is how much old source/projects from say the 80s 90s can be rejused.. is like we try to reproduce the history, because the history got lost in the bloat..</span></div><div class="line" id="224631"><span class="nick" style="color:#2e2a4a"><a href="#224631" label="[22:46:31]">&lt;clemens3&gt;</a></span><span class="message">now with emulators, can we go back in time..to meet somewhere from the bottom up mes/stage0 hex byte appraoch to the, well, we have been in the computing stone age already before, why can't we use it again..</span></div><div class="line" id="224640"><span class="nick" style="color:#6b8072"><a href="#224640" label="[22:46:40]">&lt;stikonas&gt;</a></span><span class="message">clemens3: once you have tiny C compiler a lot can be reused</span></div><div class="line" id="224653"><span class="nick" style="color:#6b8072"><a href="#224653" label="[22:46:53]">&lt;stikonas&gt;</a></span><span class="message">although we tend to use stuff from early 2000-2005 maybe</span></div><div class="line" id="224701"><span class="nick" style="color:#2e2a4a"><a href="#224701" label="[22:47:01]">&lt;clemens3&gt;</a></span><span class="message">oki.. reading up a bit on the stage0 project..</span></div><div class="line" id="224702"><span class="nick" style="color:#6b8072"><a href="#224702" label="[22:47:02]">&lt;stikonas&gt;</a></span><span class="message">with only some stuff from 90ies</span></div><div class="line" id="224710"><span class="nick" style="color:#6b8072"><a href="#224710" label="[22:47:10]">&lt;stikonas&gt;</a></span><span class="message">and some modern stuff</span></div><div class="line" id="224739"><span class="nick" style="color:#6b8072"><a href="#224739" label="[22:47:39]">&lt;stikonas&gt;</a></span><span class="message">if you look at live-bootstrap project that builds on top of stage0-posix and mes, it fairly quickly switches to modern C library</span></div><div class="line" id="224747"><span class="nick" style="color:#6d2462"><a href="#224747" label="[22:47:47]">&lt;vagrantc&gt;</a></span><span class="message">what's the first version of gcc in the bootstrap chain these days?</span></div><div class="line" id="224809"><span class="nick" style="color:#6b8072"><a href="#224809" label="[22:48:09]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: in guix it's 2.95.3, in live-bootstrap its 4.0.4</span></div><div class="line" id="224836"><span class="nick" style="color:#6b8072"><a href="#224836" label="[22:48:36]">&lt;stikonas&gt;</a></span><span class="message">new version is unlocked because of musl libc</span></div><div class="line" id="224855"><span class="nick" style="color:#6b8072"><a href="#224855" label="[22:48:55]">&lt;stikonas&gt;</a></span><span class="message">which is much more complete than mes libc</span></div><div class="line" id="230414"><span class="nick" style="color:#6d2462"><a href="#230414" label="[23:04:14]">&lt;vagrantc&gt;</a></span><span class="message">gcc 4.x not bad!</span></div><div class="line" id="230838"><span class="nick" style="color:#2e2a4a"><a href="#230838" label="[23:08:38]">&lt;clemens3&gt;</a></span><span class="message">interesting, quite old, yes</span></div><div class="line" id="231759"><span class="nick" style="color:#6b8072"><a href="#231759" label="[23:17:59]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: yeah, gcc 4 is not bad indeed. although at the moment with a small caveat, it's C backend only</span></div><div class="line" id="232745"><span class="nick" style="color:#8dd3c7"><a href="#232745" label="[23:27:45]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I think I did those backwards feel free to fix.</span></div><div class="line" id="232957"><span class="nick" style="color:#6b8072"><a href="#232957" label="[23:29:57]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll do it a bit later today</span></div><div class="line" id="233010"><span class="nick" style="color:#6b8072"><a href="#233010" label="[23:30:10]">&lt;stikonas&gt;</a></span><span class="message">or maybe right now before I go, it's a quick fix</span></div><div class="line" id="233039"><span class="nick" style="color:#8dd3c7"><a href="#233039" label="[23:30:39]">&lt;oriansj&gt;</a></span><span class="message">clemens3: well the thing about history, sometimes it is best to avoid repeating it.</span></div><div class="line" id="233316"><span class="nick" style="color:#6b8072"><a href="#233316" label="[23:33:16]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/pull/4\">https://github.com/oriansj/mescc-tools-extra/pull/4\</a> </span></div><div class="line" id="233318"><span class="nick" style="color:#6b8072"><a href="#233318" label="[23:33:18]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/pull/4">https://github.com/oriansj/mescc-tools-extra/pull/4</a> </span></div><div class="line" id="233421"><span class="nick" style="color:#6b8072"><a href="#233421" label="[23:34:21]">&lt;stikonas&gt;</a></span><span class="message">also I have draft code for live-bootstrap with mes/nyacc tarballs <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/61b186506d40aed9a24f14882b02c3776af6bd18">https://github.com/stikonas/live-bootstrap/commit/61b186506d40aed9a24f14882b02c3776af6bd18</a> </span></div><div class="line" id="233443"><span class="nick" style="color:#8dd3c7"><a href="#233443" label="[23:34:43]">&lt;oriansj&gt;</a></span><span class="message">thank you stikonas; merged.</span></div><div class="line" id="233448"><span class="nick" style="color:#6b8072"><a href="#233448" label="[23:34:48]">&lt;stikonas&gt;</a></span><span class="message">(draft because it will need update in stage0-posix modules)</span></div><div class="line" id="233450"><span class="nick" style="color:#6b8072"><a href="#233450" label="[23:34:50]">&lt;stikonas&gt;</a></span><span class="message">oriansj: thanks!</span></div><div class="line" id="233554"><span class="nick" style="color:#8dd3c7"><a href="#233554" label="[23:35:54]">&lt;oriansj&gt;</a></span><span class="message">I'll try to udpate stage0-posix later today with your enhancements</span></div><div class="line" id="233619"><span class="nick" style="color:#6b8072"><a href="#233619" label="[23:36:19]">&lt;stikonas&gt;</a></span><span class="message">thanks</span></div><div class="line" id="233637"><span class="nick" style="color:#6b8072"><a href="#233637" label="[23:36:37]">&lt;stikonas&gt;</a></span><span class="message">mes-m2 also has that nyacc PR...</span></div><div class="line" id="233649"><span class="nick" style="color:#6b8072"><a href="#233649" label="[23:36:49]">&lt;stikonas&gt;</a></span><span class="message">although, that is independent of stage0_posix</span></div><div class="line" id="233710"><span class="nick" style="color:#6b8072"><a href="#233710" label="[23:37:10]">&lt;stikonas&gt;</a></span><span class="message">that draft commit build mes-m2 completely from tarball</span></div><div class="line" id="235727"><span class="nick" style="color:#8dd3c7"><a href="#235727" label="[23:57:27]">&lt;oriansj&gt;</a></span><span class="message">stikonas: just noticed that and it is merged</span></div><div class="line" id="235820"><span class="nick" style="color:#6b8072"><a href="#235820" label="[23:58:20]">&lt;stikonas&gt;</a></span><span class="message">thanks again</span></div><br /></div></body></html>