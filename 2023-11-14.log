<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="004154"><span class="nick" style="color:#389600"><a href="#004154" label="[00:41:54]">&lt;oriansj&gt;</a></span><span class="message">Googulator: perfection can not yet be achieved but progressed compared to yesterday definitely can be and thank you for helping move it forward.</span></div><div class="line" id="010331"><span class="nick" style="color:#8dd3c7"><a href="#010331" label="[01:03:31]">&lt;stikonas_&gt;</a></span><span class="message">and I'm back now :)</span></div><div class="line" id="011824"><span class="nick" style="color:#2e2a4a"><a href="#011824" label="[01:18:24]">&lt;Googulator&gt;</a></span><span class="message">alright, just verified with a toy srcfs that kexec-fiwix is indeed working on my hardware</span></div><div class="line" id="011844"><span class="nick" style="color:#2e2a4a"><a href="#011844" label="[01:18:44]">&lt;Googulator&gt;</a></span><span class="message">but I get slightly nondeterministic behavior afterwards</span></div><div class="line" id="011903"><span class="nick" style="color:#2e2a4a"><a href="#011903" label="[01:19:03]">&lt;Googulator&gt;</a></span><span class="message">which suddenly has me remember something</span></div><div class="line" id="011909"><span class="nick" style="color:#2e2a4a"><a href="#011909" label="[01:19:09]">&lt;Googulator&gt;</a></span><span class="message">this used to be my old gaming PC</span></div><div class="line" id="011913"><span class="nick" style="color:#2e2a4a"><a href="#011913" label="[01:19:13]">&lt;Googulator&gt;</a></span><span class="message">I probably had it overclocked</span></div><div class="line" id="011948"><span class="nick" style="color:#2e2a4a"><a href="#011948" label="[01:19:48]">&lt;Googulator&gt;</a></span><span class="message">&amp; all this nondeterministic behavior feels a lot like a clock/power issue</span></div><div class="line" id="011956"><span class="nick" style="color:#2e2a4a"><a href="#011956" label="[01:19:56]">&lt;Googulator&gt;</a></span><span class="message">maybe all it needs is a CMOS reset</span></div><div class="line" id="020522"><span class="nick" style="color:#6b8072"><a href="#020522" label="[02:05:22]">&lt;moik&gt;</a></span><span class="message">oriansj thanks, that helps a lot</span></div><div class="line" id="102025"><span class="nick" style="color:#2e2a4a"><a href="#102025" label="[10:20:25]">&lt;Googulator&gt;</a></span><span class="message">Is it intentional that the Linux kernel config only supports Intel E1000 and E1000E for networking?</span></div><div class="line" id="102059"><span class="nick" style="color:#2e2a4a"><a href="#102059" label="[10:20:59]">&lt;Googulator&gt;</a></span><span class="message">During bare metal testing, I managed to boot into sysc, and then died due to network being inaccessible</span></div><div class="line" id="102130"><span class="nick" style="color:#2e2a4a"><a href="#102130" label="[10:21:30]">&lt;Googulator&gt;</a></span><span class="message">All of my Ethernet cards are either realtek, marvell, 3com or broadcom unfortunately</span></div><div class="line" id="102151"><span class="nick" style="color:#2e2a4a"><a href="#102151" label="[10:21:51]">&lt;Googulator&gt;</a></span><span class="message">E1000(E) seems not to be all that common in actual hardware</span></div><div class="line" id="103522"><span class="nick" style="color:#80b1d3"><a href="#103522" label="[10:35:22]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: I think there is a correlation with QEMU since e1000 seems to be the most common driver</span></div><div class="line" id="105902"><span class="nick" style="color:#2e2a4a"><a href="#105902" label="[10:59:02]">&lt;Googulator&gt;</a></span><span class="message">Yeah, qemu is configured by rootfs.py to emulate e1000</span></div><div class="line" id="105910"><span class="nick" style="color:#2e2a4a"><a href="#105910" label="[10:59:10]">&lt;Googulator&gt;</a></span><span class="message">But it's counterproductive for bare metal</span></div><div class="line" id="110112"><span class="nick" style="color:#2e2a4a"><a href="#110112" label="[11:01:12]">&lt;Googulator&gt;</a></span><span class="message">Would it be OK to unconditionally enable all reasonable Ethernet drivers (i.e. PCI/USB/ISA/LPC/SPI, but excluding things that are just IP blocks and thus won't be encountered on a PC motherboard or card), or does it add too much to the compile time &amp; kernel size?</span></div><div class="line" id="110136"><span class="nick" style="color:#2e2a4a"><a href="#110136" label="[11:01:36]">&lt;Googulator&gt;</a></span><span class="message">If the latter, we can keep the current minimalist config for qemu, and use a more extensive one for bare metal</span></div><div class="line" id="124405"><span class="nick" style="color:#6d2462"><a href="#124405" label="[12:44:05]">&lt;stikonas&gt;</a></span><span class="message">it might blow up the size too much but you have to try, without trying you wont' know if you exceed the limits</span></div><div class="line" id="131019"><span class="nick" style="color:#2e2a4a"><a href="#131019" label="[13:10:19]">&lt;Googulator&gt;</a></span><span class="message">first try failed with &quot;No rule to make target `drivers/net/ethernet/3com/typhoon.o'&quot; - probably because deblobbing removes that entire driver</span></div><div class="line" id="131655"><span class="nick" style="color:#2e2a4a"><a href="#131655" label="[13:16:55]">&lt;Googulator&gt;</a></span><span class="message">ouch... deblobbing also kills RTL8169 Ethernet support</span></div><div class="line" id="131952"><span class="nick" style="color:#2e2a4a"><a href="#131952" label="[13:19:52]">&lt;Googulator&gt;</a></span><span class="message">luckily this board also has a Marvell Yukon, but I'm quite sure RTL8169 &amp; derivatives handled by the same driver are single most common Ethernet chipset people will have access to</span></div><div class="line" id="132851"><span class="nick" style="color:#2e2a4a"><a href="#132851" label="[13:28:51]">&lt;Googulator&gt;</a></span><span class="message">ugh, this seems really heavy-handed... only some devices handled by r8169 require firmware, but the deblob script just straight up deletes the entire driver</span></div><div class="line" id="132909"><span class="nick" style="color:#2e2a4a"><a href="#132909" label="[13:29:09]">&lt;Googulator&gt;</a></span><span class="message">RTL8169 for example appears to need no firmware</span></div><div class="line" id="132920"><span class="nick" style="color:#2e2a4a"><a href="#132920" label="[13:29:20]">&lt;Googulator&gt;</a></span><span class="message">neither does RTL8110SC, which is what this board has</span></div><div class="line" id="133057"><span class="nick" style="color:#389600"><a href="#133057" label="[13:30:57]">&lt;oriansj&gt;</a></span><span class="message">well some have argued that mankind is at war with Firmware and firmware thus far has been winning.</span></div><div class="line" id="133230"><span class="nick" style="color:#2e2a4a"><a href="#133230" label="[13:32:30]">&lt;Googulator&gt;</a></span><span class="message">I fully understand not wanting to run unaudited vendor firmware in the trusted bootstrap environment, but in this case, it would be more than enough to just, well, not include the firmware files themselves</span></div><div class="line" id="133250"><span class="nick" style="color:#2e2a4a"><a href="#133250" label="[13:32:50]">&lt;Googulator&gt;</a></span><span class="message">which is what Linux already does by default in this case</span></div><div class="line" id="133323"><span class="nick" style="color:#2e2a4a"><a href="#133323" label="[13:33:23]">&lt;Googulator&gt;</a></span><span class="message">The only side effect is that those few Realtek Ethernet chips that do require it won't work</span></div><div class="line" id="133359"><span class="nick" style="color:#2e2a4a"><a href="#133359" label="[13:33:59]">&lt;Googulator&gt;</a></span><span class="message">from a cursory look of the code, even for most RTL chipsets that do use firmware blobs, they're optional for things like power management</span></div><div class="line" id="133536"><span class="nick" style="color:#2e2a4a"><a href="#133536" label="[13:35:36]">&lt;Googulator&gt;</a></span><span class="message">It seems this deblob script was written from a standpoint of &quot;it's illegal for a GPL kernel to even have the capability to load or interface with non-GPL firmware&quot;, not from &quot;block untrusted and unauditable code&quot;</span></div><div class="line" id="133622"><span class="nick" style="color:#6d2462"><a href="#133622" label="[13:36:22]">&lt;stikonas&gt;</a></span><span class="message">Googulator: we were just running deblog script with delete functionality for speed</span></div><div class="line" id="133643"><span class="nick" style="color:#6d2462"><a href="#133643" label="[13:36:43]">&lt;stikonas&gt;</a></span><span class="message">proper deblob can use sed/awk/perl to do more fine tuned cleanups</span></div><div class="line" id="133651"><span class="nick" style="color:#2e2a4a"><a href="#133651" label="[13:36:51]">&lt;Googulator&gt;</a></span><span class="message">in this case, the firmware files are even under a license that permits reverse engineering, and quite possibly even the sources for them are public</span></div><div class="line" id="133713"><span class="nick" style="color:#6d2462"><a href="#133713" label="[13:37:13]">&lt;stikonas&gt;</a></span><span class="message">but 1. it takes much longer (extra 1h or so)</span></div><div class="line" id="133725"><span class="nick" style="color:#6d2462"><a href="#133725" label="[13:37:25]">&lt;stikonas&gt;</a></span><span class="message">2. I don't remember if our perl or awk were buggy...</span></div><div class="line" id="133828"><span class="nick" style="color:#6d2462"><a href="#133828" label="[13:38:28]">&lt;stikonas&gt;</a></span><span class="message">perhaps deblob can be a configurable option</span></div><div class="line" id="134003"><span class="nick" style="color:#2e2a4a"><a href="#134003" label="[13:40:03]">&lt;Googulator&gt;</a></span><span class="message">I do consider deblobbing in general to be necessary to ensure the security of the bootstrap environment, but it should be restricted to actually removing any remaining embedded blobs</span></div><div class="line" id="134027"><span class="nick" style="color:#2e2a4a"><a href="#134027" label="[13:40:27]">&lt;Googulator&gt;</a></span><span class="message">Even removing firmware file loading capability is unnecessary if we don't include any firmware files anyway</span></div><div class="line" id="134048"><span class="nick" style="color:#2e2a4a"><a href="#134048" label="[13:40:48]">&lt;Googulator&gt;</a></span><span class="message">&amp; dropping entire drivers just because they can optionally load firmware... sigh</span></div><div class="line" id="134102"><span class="nick" style="color:#2e2a4a"><a href="#134102" label="[13:41:02]">&lt;Googulator&gt;</a></span><span class="message">What's worse, the deblob script says this at the beginning:</span></div><div class="line" id="134104"><span class="nick" style="color:#2e2a4a"><a href="#134104" label="[13:41:04]">&lt;Googulator&gt;</a></span><span class="message"># This script, suited for the kernel version named below, in kver,</span></div><div class="line" id="134104"><span class="nick" style="color:#2e2a4a"><a href="#134104" label="[13:41:04]">&lt;Googulator&gt;</a></span><span class="message"># attempts to remove only non-Free Software bits, without removing</span></div><div class="line" id="134105"><span class="nick" style="color:#2e2a4a"><a href="#134105" label="[13:41:05]">&lt;Googulator&gt;</a></span><span class="message"># Free Software that happens to be in the same file.</span></div><div class="line" id="134105"><span class="nick" style="color:#2e2a4a"><a href="#134105" label="[13:41:05]">&lt;Googulator&gt;</a></span><span class="message"># Drivers that currently require non-Free firmware are retained, but</span></div><div class="line" id="134106"><span class="nick" style="color:#2e2a4a"><a href="#134106" label="[13:41:06]">&lt;Googulator&gt;</a></span><span class="message"># firmware included in GPLed sources is replaced with /*(DEBLOBBED)*/</span></div><div class="line" id="134106"><span class="nick" style="color:#2e2a4a"><a href="#134106" label="[13:41:06]">&lt;Googulator&gt;</a></span><span class="message"># if the deblob-check script, that knows how to do this, is present.</span></div><div class="line" id="134107"><span class="nick" style="color:#2e2a4a"><a href="#134107" label="[13:41:07]">&lt;Googulator&gt;</a></span><span class="message"># -lxoliva</span></div><div class="line" id="134117"><span class="nick" style="color:#2e2a4a"><a href="#134117" label="[13:41:17]">&lt;Googulator&gt;</a></span><span class="message">yeah, that's apparently a lie</span></div><div class="line" id="134245"><span class="nick" style="color:#2e2a4a"><a href="#134245" label="[13:42:45]">&lt;Googulator&gt;</a></span><span class="message">oh, I see it now... --force has this side effect</span></div><div class="line" id="134259"><span class="nick" style="color:#2e2a4a"><a href="#134259" label="[13:42:59]">&lt;Googulator&gt;</a></span><span class="message">it's not just for ignoring errors</span></div><div class="line" id="134827"><span class="nick" style="color:#6d2462"><a href="#134827" label="[13:48:27]">&lt;stikonas&gt;</a></span><span class="message">yeah, we use much faster mode....</span></div><div class="line" id="134833"><span class="nick" style="color:#6d2462"><a href="#134833" label="[13:48:33]">&lt;stikonas&gt;</a></span><span class="message">but it drops far more stuff</span></div><div class="line" id="134852"><span class="nick" style="color:#6d2462"><a href="#134852" label="[13:48:52]">&lt;stikonas&gt;</a></span><span class="message">perhaps its fine to switch to longer mode</span></div><div class="line" id="134856"><span class="nick" style="color:#6d2462"><a href="#134856" label="[13:48:56]">&lt;stikonas&gt;</a></span><span class="message">as long as you can get it to work</span></div><div class="line" id="135049"><span class="nick" style="color:#2e2a4a"><a href="#135049" label="[13:50:49]">&lt;Googulator&gt;</a></span><span class="message">Even a similar simple deblob script that only removes drivers that actually embed blobs would be fine</span></div><div class="line" id="135055"><span class="nick" style="color:#2e2a4a"><a href="#135055" label="[13:50:55]">&lt;Googulator&gt;</a></span><span class="message">r8169 doesn't</span></div><div class="line" id="135201"><span class="nick" style="color:#2e2a4a"><a href="#135201" label="[13:52:01]">&lt;Googulator&gt;</a></span><span class="message">Even in its non-force mode, the script we use currently also tries to remove firmware file loading support, which is completely unnecessary here</span></div><div class="line" id="135258"><span class="nick" style="color:#2e2a4a"><a href="#135258" label="[13:52:58]">&lt;Googulator&gt;</a></span><span class="message">Removing entire drivers for embedding blobs is probably fine, but not hunting down file loading capability (which is harmless if the files aren't there)</span></div><div class="line" id="135300"><span class="nick" style="color:#6d2462"><a href="#135300" label="[13:53:00]">&lt;stikonas&gt;</a></span><span class="message">well, discuss it with fossy...</span></div><div class="line" id="135310"><span class="nick" style="color:#6d2462"><a href="#135310" label="[13:53:10]">&lt;stikonas&gt;</a></span><span class="message">maybe we can make it configurable</span></div><div class="line" id="135835"><span class="nick" style="color:#6d2462"><a href="#135835" label="[13:58:35]">&lt;stikonas&gt;</a></span><span class="message">but yes, I think firmware situation won't be getting any better</span></div><div class="line" id="135902"><span class="nick" style="color:#6d2462"><a href="#135902" label="[13:59:02]">&lt;stikonas&gt;</a></span><span class="message">(unless vendors decide to move it to embedded storage on the devices)</span></div><div class="line" id="135918"><span class="nick" style="color:#6d2462"><a href="#135918" label="[13:59:18]">&lt;stikonas&gt;</a></span><span class="message">but we won't be seeing almost any free/open firmware</span></div><div class="line" id="135954"><span class="nick" style="color:#6d2462"><a href="#135954" label="[13:59:54]">&lt;stikonas&gt;</a></span><span class="message">it's often signed/encrypted these days anyway</span></div><div class="line" id="140032"><span class="nick" style="color:#2e2a4a"><a href="#140032" label="[14:00:32]">&lt;Googulator&gt;</a></span><span class="message">Worse, the script also kills drivers that use free firmware</span></div><div class="line" id="140225"><span class="nick" style="color:#2e2a4a"><a href="#140225" label="[14:02:25]">&lt;Googulator&gt;</a></span><span class="message">Filed GH issues for both the deblob issue and the larger problem of only qemu ethernet drivers being enabled</span></div><div class="line" id="140314"><span class="nick" style="color:#2e2a4a"><a href="#140314" label="[14:03:14]">&lt;Googulator&gt;</a></span><span class="message">For now, the deblob issue is not a blocker for me, but probably is a blocker for most people</span></div><div class="line" id="140425"><span class="nick" style="color:#2e2a4a"><a href="#140425" label="[14:04:25]">&lt;Googulator&gt;</a></span><span class="message">The config one is a blocker for virtually everyone trying bare-metal, but I already have a fix in the pipeline for that</span></div><div class="line" id="141417"><span class="nick" style="color:#2e2a4a"><a href="#141417" label="[14:14:17]">&lt;Googulator&gt;</a></span><span class="message">Is there any reason why we aren't using 4.9.10 also for the linux-headers package?</span></div><div class="line" id="141533"><span class="nick" style="color:#2e2a4a"><a href="#141533" label="[14:15:33]">&lt;Googulator&gt;</a></span><span class="message">Having a whole 2nd Linux kernel source tarball in srcfs (one that's newer and much larger than the one that's actually built) just for headers seems like an overkill.</span></div><div class="line" id="141710"><span class="nick" style="color:#6d2462"><a href="#141710" label="[14:17:10]">&lt;stikonas&gt;</a></span><span class="message">Googulator: no reason</span></div><div class="line" id="141729"><span class="nick" style="color:#6d2462"><a href="#141729" label="[14:17:29]">&lt;stikonas&gt;</a></span><span class="message">I suggested to fossy to downgrade it, or maybe use newer kernel for building (though we can't used 5.x)</span></div><div class="line" id="141738"><span class="nick" style="color:#6d2462"><a href="#141738" label="[14:17:38]">&lt;stikonas&gt;</a></span><span class="message">but everybody was busy...</span></div><div class="line" id="141745"><span class="nick" style="color:#6d2462"><a href="#141745" label="[14:17:45]">&lt;stikonas&gt;</a></span><span class="message">so it hasn't been done</span></div><div class="line" id="141809"><span class="nick" style="color:#6d2462"><a href="#141809" label="[14:18:09]">&lt;stikonas&gt;</a></span><span class="message">since linux package was added, we upgraded binutils</span></div><div class="line" id="141817"><span class="nick" style="color:#6d2462"><a href="#141817" label="[14:18:17]">&lt;stikonas&gt;</a></span><span class="message">so we are likely to be able to build newer kernel</span></div><div class="line" id="141823"><span class="nick" style="color:#6d2462"><a href="#141823" label="[14:18:23]">&lt;stikonas&gt;</a></span><span class="message">(and are only limitted by GCC)</span></div><div class="line" id="141922"><span class="nick" style="color:#6d2462"><a href="#141922" label="[14:19:22]">&lt;stikonas&gt;</a></span><span class="message">we also could probably upgrade GCC to 4.6</span></div><div class="line" id="141947"><span class="nick" style="color:#2e2a4a"><a href="#141947" label="[14:19:47]">&lt;Googulator&gt;</a></span><span class="message">Would that enable skipping the 4.7 build in sysc?</span></div><div class="line" id="141949"><span class="nick" style="color:#6d2462"><a href="#141949" label="[14:19:49]">&lt;stikonas&gt;</a></span><span class="message">then maybe immediately build something from 5.x (e.g. this one is happy with GCC 4.6 <a rel="nofollow" href="https://kernel.org/doc/html/v5.1/process/changes.html">https://kernel.org/doc/html/v5.1/process/changes.html</a>) </span></div><div class="line" id="142001"><span class="nick" style="color:#6d2462"><a href="#142001" label="[14:20:01]">&lt;stikonas&gt;</a></span><span class="message">no</span></div><div class="line" id="142004"><span class="nick" style="color:#6d2462"><a href="#142004" label="[14:20:04]">&lt;stikonas&gt;</a></span><span class="message">we need C++  there</span></div><div class="line" id="142015"><span class="nick" style="color:#6d2462"><a href="#142015" label="[14:20:15]">&lt;stikonas&gt;</a></span><span class="message">though maybe we can just keep it at 4.6 in sysc too</span></div><div class="line" id="142026"><span class="nick" style="color:#6d2462"><a href="#142026" label="[14:20:26]">&lt;stikonas&gt;</a></span><span class="message">in sysa we only build C backend</span></div><div class="line" id="142248"><span class="nick" style="color:#6d2462"><a href="#142248" label="[14:22:48]">&lt;stikonas&gt;</a></span><span class="message">so potentially we can cleanup quite a few things</span></div><div class="line" id="142254"><span class="nick" style="color:#6d2462"><a href="#142254" label="[14:22:54]">&lt;stikonas&gt;</a></span><span class="message">but that's non-trivial amount of work</span></div><div class="line" id="142304"><span class="nick" style="color:#6d2462"><a href="#142304" label="[14:23:04]">&lt;stikonas&gt;</a></span><span class="message">(also we think that riscv will eventually target 4.6)</span></div><div class="line" id="142324"><span class="nick" style="color:#6d2462"><a href="#142324" label="[14:23:24]">&lt;stikonas&gt;</a></span><span class="message">as that is where riscv support was being backported by ekaiz</span></div><div class="line" id="142711"><span class="nick" style="color:#2e2a4a"><a href="#142711" label="[14:27:11]">&lt;Googulator&gt;</a></span><span class="message">Also, what is guile used for in the bootstrap?</span></div><div class="line" id="142740"><span class="nick" style="color:#2e2a4a"><a href="#142740" label="[14:27:40]">&lt;Googulator&gt;</a></span><span class="message">I was wondering if we could move it behind INTERNAL_CI</span></div><div class="line" id="142831"><span class="nick" style="color:#6d2462"><a href="#142831" label="[14:28:31]">&lt;stikonas&gt;</a></span><span class="message">Googulator: autogen</span></div><div class="line" id="142850"><span class="nick" style="color:#6d2462"><a href="#142850" label="[14:28:50]">&lt;stikonas&gt;</a></span><span class="message">which is used for creating top level ./configure script in binutils and gcc</span></div><div class="line" id="142928"><span class="nick" style="color:#6d2462"><a href="#142928" label="[14:29:28]">&lt;stikonas&gt;</a></span><span class="message">(it's just to rebuild some pre-generated files)</span></div><div class="line" id="142940"><span class="nick" style="color:#6d2462"><a href="#142940" label="[14:29:40]">&lt;stikonas&gt;</a></span><span class="message">but that's large part of what live-bootstrap is</span></div><div class="line" id="142959"><span class="nick" style="color:#2e2a4a"><a href="#142959" label="[14:29:59]">&lt;Googulator&gt;</a></span><span class="message">So neither is used in the Python bootstrap</span></div><div class="line" id="143002"><span class="nick" style="color:#6d2462"><a href="#143002" label="[14:30:02]">&lt;stikonas&gt;</a></span><span class="message">e.g we don't run other ./configure scripts either until we have bootstrapped autotools</span></div><div class="line" id="143009"><span class="nick" style="color:#6d2462"><a href="#143009" label="[14:30:09]">&lt;stikonas&gt;</a></span><span class="message">no, it's not for Python</span></div><div class="line" id="143018"><span class="nick" style="color:#6d2462"><a href="#143018" label="[14:30:18]">&lt;stikonas&gt;</a></span><span class="message">Python might actually be unused right now</span></div><div class="line" id="143031"><span class="nick" style="color:#6d2462"><a href="#143031" label="[14:30:31]">&lt;stikonas&gt;</a></span><span class="message">but you'll need it if you want to build glibc</span></div><div class="line" id="143043"><span class="nick" style="color:#2e2a4a"><a href="#143043" label="[14:30:43]">&lt;Googulator&gt;</a></span><span class="message">doesn't the final GCC also need Python?</span></div><div class="line" id="143058"><span class="nick" style="color:#2e2a4a"><a href="#143058" label="[14:30:58]">&lt;Googulator&gt;</a></span><span class="message">also, Python, despite having so many steps, is relatively fast to bootstrap</span></div><div class="line" id="143107"><span class="nick" style="color:#2e2a4a"><a href="#143107" label="[14:31:07]">&lt;Googulator&gt;</a></span><span class="message">much faster than Guile</span></div><div class="line" id="143150"><span class="nick" style="color:#2e2a4a"><a href="#143150" label="[14:31:50]">&lt;Googulator&gt;</a></span><span class="message">I'd suggest moving guile and autogen after [ &quot;${INTERNAL_CI}&quot; = &quot;pass2&quot; ] &amp;&amp; exit 0</span></div><div class="line" id="143315"><span class="nick" style="color:#2e2a4a"><a href="#143315" label="[14:33:15]">&lt;Googulator&gt;</a></span><span class="message">Unless there's some grander plan for using it</span></div><div class="line" id="143649"><span class="nick" style="color:#6d2462"><a href="#143649" label="[14:36:49]">&lt;stikonas&gt;</a></span><span class="message">Googulator: I'm not aware of python usage in gcc but maybe i'm wrong</span></div><div class="line" id="143735"><span class="nick" style="color:#6d2462"><a href="#143735" label="[14:37:35]">&lt;stikonas&gt;</a></span><span class="message">that pass2 is determined by timings, it's a bit of a hack to fit in github action ci time limits</span></div><div class="line" id="143802"><span class="nick" style="color:#2e2a4a"><a href="#143802" label="[14:38:02]">&lt;Googulator&gt;</a></span><span class="message">Oh OK</span></div><div class="line" id="143805"><span class="nick" style="color:#6d2462"><a href="#143805" label="[14:38:05]">&lt;stikonas&gt;</a></span><span class="message">but I agree, there is some potential for reordering</span></div><div class="line" id="143818"><span class="nick" style="color:#2e2a4a"><a href="#143818" label="[14:38:18]">&lt;Googulator&gt;</a></span><span class="message">I thought it was for a quicker build during development when you don't care about modern GCC in the end</span></div><div class="line" id="143822"><span class="nick" style="color:#6d2462"><a href="#143822" label="[14:38:22]">&lt;stikonas&gt;</a></span><span class="message">but it has to be before final rebuild of binutils and gcc</span></div><div class="line" id="143836"><span class="nick" style="color:#6d2462"><a href="#143836" label="[14:38:36]">&lt;stikonas&gt;</a></span><span class="message">no, for quicker build during development use prebuilt packages</span></div><div class="line" id="143855"><span class="nick" style="color:#6d2462"><a href="#143855" label="[14:38:55]">&lt;stikonas&gt;</a></span><span class="message">there is --early-preseed and --repo options</span></div><div class="line" id="143919"><span class="nick" style="color:#6d2462"><a href="#143919" label="[14:39:19]">&lt;stikonas&gt;</a></span><span class="message">you can skip most of the early stages</span></div><div class="line" id="143941"><span class="nick" style="color:#2e2a4a"><a href="#143941" label="[14:39:41]">&lt;Googulator&gt;</a></span><span class="message">I noticed --early-preseed, but what if you specifically want to test the earlier stages?</span></div><div class="line" id="143957"><span class="nick" style="color:#2e2a4a"><a href="#143957" label="[14:39:57]">&lt;Googulator&gt;</a></span><span class="message">preferably with a way to inspect the results</span></div><div class="line" id="145537"><span class="nick" style="color:#6d2462"><a href="#145537" label="[14:55:37]">&lt;stikonas&gt;</a></span><span class="message">well, then you need to run those</span></div><div class="line" id="145541"><span class="nick" style="color:#6d2462"><a href="#145541" label="[14:55:41]">&lt;stikonas&gt;</a></span><span class="message">it's basically mes that is slow</span></div><div class="line" id="151408"><span class="nick" style="color:#2e2a4a"><a href="#151408" label="[15:14:08]">&lt;Googulator&gt;</a></span><span class="message">Yes, but since nothing writes to the disk until sysc, we won't get a chance to inspect the results until sysc gives us the final Bash prompt, which right now happens after guile :(</span></div><div class="line" id="152043"><span class="nick" style="color:#6d2462"><a href="#152043" label="[15:20:43]">&lt;stikonas&gt;</a></span><span class="message">on baremetal, yes...</span></div><div class="line" id="152056"><span class="nick" style="color:#6d2462"><a href="#152056" label="[15:20:56]">&lt;stikonas&gt;</a></span><span class="message">for development you can always do that in chroot/bwrap</span></div><div class="line" id="152138"><span class="nick" style="color:#6d2462"><a href="#152138" label="[15:21:38]">&lt;stikonas&gt;</a></span><span class="message">though one could create a bash prompt earlier, just need to change scripting</span></div><div class="line" id="152148"><span class="nick" style="color:#6d2462"><a href="#152148" label="[15:21:48]">&lt;stikonas&gt;</a></span><span class="message">e.g. stop in sysc after bash 5 is built</span></div><div class="line" id="161022"><span class="nick" style="color:#6d2462"><a href="#161022" label="[16:10:22]">&lt;stikonas&gt;</a></span><span class="message">that ahojlm somehow seems to have released something this year and claims we are slower with full source bootstrap...</span></div><div class="line" id="161055"><span class="nick" style="color:#6d2462"><a href="#161055" label="[16:10:55]">&lt;stikonas&gt;</a></span><span class="message">(this is from bootstrappable/rb-general mailing list)</span></div><div class="line" id="161402"><span class="nick" style="color:#389600"><a href="#161402" label="[16:14:02]">&lt;oriansj&gt;</a></span><span class="message">oh well. Meaningless claims that depend on non-standard definitions are easy to make. not worth fighting over.</span></div><div class="line" id="161452"><span class="nick" style="color:#389600"><a href="#161452" label="[16:14:52]">&lt;oriansj&gt;</a></span><span class="message">if there was a standard definition and it was generally agreed upon. then who cares who was first; we are having fun.</span></div><div class="line" id="161548"><span class="nick" style="color:#389600"><a href="#161548" label="[16:15:48]">&lt;oriansj&gt;</a></span><span class="message">our greatest success is the people here.</span></div><div class="line" id="161626"><span class="nick" style="color:#389600"><a href="#161626" label="[16:16:26]">&lt;oriansj&gt;</a></span><span class="message">and no one can ever take that away (even if we need to move IRCs again ^_^)</span></div><div class="line" id="200244"><span class="nick" style="color:#234e69"><a href="#200244" label="[20:02:44]">&lt;vagrantc&gt;</a></span><span class="message">test suite failures for mes on riscv64: <a rel="nofollow" href="https://buildd.debian.org/status/fetch.php?pkg=mes&amp;arch=riscv64&amp;ver=0.25-1&amp;stamp=1699793557&amp;raw=0">https://buildd.debian.org/status/fetch.php?pkg=mes&amp;arch=riscv64&amp;ver=0.25-1&amp;stamp=1699793557&amp;raw=0</a> </span></div><div class="line" id="200312"><span class="nick" style="color:#234e69"><a href="#200312" label="[20:03:12]">&lt;vagrantc&gt;</a></span><span class="message">and i'm not sure what failed on armhf: <a rel="nofollow" href="https://buildd.debian.org/status/fetch.php?pkg=mes&amp;arch=armhf&amp;ver=0.25-1&amp;stamp=1699749262&amp;raw=0">https://buildd.debian.org/status/fetch.php?pkg=mes&amp;arch=armhf&amp;ver=0.25-1&amp;stamp=1699749262&amp;raw=0</a> </span></div><div class="line" id="200339"><span class="nick" style="color:#234e69"><a href="#200339" label="[20:03:39]">&lt;vagrantc&gt;</a></span><span class="message">ekaitz, janneke : ^^</span></div><div class="line" id="200558"><span class="nick" style="color:#6c3d55"><a href="#200558" label="[20:05:58]">&lt;ekaitz&gt;</a></span><span class="message">vagrantc: the groundhog day</span></div><div class="line" id="201610"><span class="nick" style="color:#6c3d55"><a href="#201610" label="[20:16:10]">&lt;ekaitz&gt;</a></span><span class="message">stikonas_: ^^ it's setjmp!</span></div><div class="line" id="201613"><span class="nick" style="color:#6c3d55"><a href="#201613" label="[20:16:13]">&lt;ekaitz&gt;</a></span><span class="message">and something else</span></div><div class="line" id="201637"><span class="nick" style="color:#6c3d55"><a href="#201637" label="[20:16:37]">&lt;ekaitz&gt;</a></span><span class="message">and truncate-shift</span></div><div class="line" id="201655"><span class="nick" style="color:#6c3d55"><a href="#201655" label="[20:16:55]">&lt;ekaitz&gt;</a></span><span class="message">snuik: later tell janneke truncate-shift might be garbage</span></div><div class="line" id="201655"><span class="nick" style="color:#d9d9d9"><a href="#201655" label="[20:16:55]">&lt;snuik&gt;</a></span><span class="message">Will do.</span></div><div class="line" id="201707"><span class="nick" style="color:#6c3d55"><a href="#201707" label="[20:17:07]">&lt;ekaitz&gt;</a></span><span class="message">snuik: setjmp... you have to talk with stikonas for that</span></div><div class="line" id="201707"><span class="nick" style="color:#d9d9d9"><a href="#201707" label="[20:17:07]">&lt;snuik&gt;</a></span><span class="message">Err...</span></div><div class="line" id="201715"><span class="nick" style="color:#6c3d55"><a href="#201715" label="[20:17:15]">&lt;ekaitz&gt;</a></span><span class="message">snuik: later tell janneke setjmp... you have to talk with stikonas for that</span></div><div class="line" id="201715"><span class="nick" style="color:#d9d9d9"><a href="#201715" label="[20:17:15]">&lt;snuik&gt;</a></span><span class="message">Will do.</span></div><div class="line" id="201721"><span class="nick" style="color:#6c3d55"><a href="#201721" label="[20:17:21]">&lt;ekaitz&gt;</a></span><span class="message">snuik: botsnack</span></div><div class="line" id="201721"><span class="nick" style="color:#d9d9d9"><a href="#201721" label="[20:17:21]">&lt;snuik&gt;</a></span><span class="message">:-)</span></div><div class="line" id="201737"><span class="nick" style="color:#8dd3c7"><a href="#201737" label="[20:17:37]">&lt;stikonas_&gt;</a></span><span class="message">hmm</span></div><div class="line" id="201917"><span class="nick" style="color:#8dd3c7"><a href="#201917" label="[20:19:17]">&lt;stikonas_&gt;</a></span><span class="message">which compiler is used there?</span></div><div class="line" id="201932"><span class="nick" style="color:#6d2462"><a href="#201932" label="[20:19:32]">&lt;stikonas&gt;</a></span><span class="message">we have only tested setjmp on tinycc</span></div><div class="line" id="201943"><span class="nick" style="color:#6d2462"><a href="#201943" label="[20:19:43]">&lt;stikonas&gt;</a></span><span class="message">and build tested on mescc</span></div><div class="line" id="201958"><span class="nick" style="color:#6d2462"><a href="#201958" label="[20:19:58]">&lt;stikonas&gt;</a></span><span class="message">I guess nothing else is expected to work on riscv</span></div><div class="line" id="203952"><span class="nick" style="color:#234e69"><a href="#203952" label="[20:39:52]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: ah, it is probably gcc ... 13 maybe?</span></div><div class="line" id="204102"><span class="nick" style="color:#6d2462"><a href="#204102" label="[20:41:02]">&lt;stikonas&gt;</a></span><span class="message">well, we haven't tested riscv64 setjmp at all with gcc...</span></div><div class="line" id="204111"><span class="nick" style="color:#6d2462"><a href="#204111" label="[20:41:11]">&lt;stikonas&gt;</a></span><span class="message">perhaps we should skip that test for now...</span></div><div class="line" id="204124"><span class="nick" style="color:#6d2462"><a href="#204124" label="[20:41:24]">&lt;stikonas&gt;</a></span><span class="message">riscv64 was only really tested with mescc and bootstrappable tinycc</span></div><div class="line" id="204216"><span class="nick" style="color:#234e69"><a href="#204216" label="[20:42:16]">&lt;vagrantc&gt;</a></span><span class="message">the debian packages of mes build mes with gcc and in some cases (armhf) mescc</span></div><div class="line" id="204222"><span class="nick" style="color:#234e69"><a href="#204222" label="[20:42:22]">&lt;vagrantc&gt;</a></span><span class="message">er, armhf and i386</span></div><div class="line" id="204324"><span class="nick" style="color:#234e69"><a href="#204324" label="[20:43:24]">&lt;vagrantc&gt;</a></span><span class="message">should riscv64 in theory work with configure --with-bootstrap?</span></div><div class="line" id="204425"><span class="nick" style="color:#6d2462"><a href="#204425" label="[20:44:25]">&lt;stikonas&gt;</a></span><span class="message">hmm, I think it should</span></div><div class="line" id="204432"><span class="nick" style="color:#6d2462"><a href="#204432" label="[20:44:32]">&lt;stikonas&gt;</a></span><span class="message">but whether that script is tested</span></div><div class="line" id="204434"><span class="nick" style="color:#6d2462"><a href="#204434" label="[20:44:34]">&lt;stikonas&gt;</a></span><span class="message">that's another matter...</span></div><div class="line" id="204443"><span class="nick" style="color:#234e69"><a href="#204443" label="[20:44:43]">&lt;vagrantc&gt;</a></span><span class="message">well, there's at least one way to test it :)</span></div><div class="line" id="204518"><span class="nick" style="color:#6d2462"><a href="#204518" label="[20:45:18]">&lt;stikonas&gt;</a></span><span class="message">at least for live-bootstrap scripts that I used for testing all of this, we build mes-m2 and then use it to bootstrap mes</span></div><div class="line" id="204522"><span class="nick" style="color:#6d2462"><a href="#204522" label="[20:45:22]">&lt;stikonas&gt;</a></span><span class="message">but that's kaem scripts</span></div><div class="line" id="204532"><span class="nick" style="color:#6d2462"><a href="#204532" label="[20:45:32]">&lt;stikonas&gt;</a></span><span class="message">ekaitz did some testing with bash scripts</span></div><div class="line" id="204538"><span class="nick" style="color:#6d2462"><a href="#204538" label="[20:45:38]">&lt;stikonas&gt;</a></span><span class="message">so perhaps they do work</span></div><div class="line" id="204711"><span class="nick" style="color:#6c3d55"><a href="#204711" label="[20:47:11]">&lt;ekaitz&gt;</a></span><span class="message">i wouldn't count on that</span></div><div class="line" id="204808"><span class="nick" style="color:#6d2462"><a href="#204808" label="[20:48:08]">&lt;stikonas&gt;</a></span><span class="message">anyway, that's the first release with riscv64, we can't have everything working :)</span></div><div class="line" id="204914"><span class="nick" style="color:#234e69"><a href="#204914" label="[20:49:14]">&lt;vagrantc&gt;</a></span><span class="message">yeah, i enabled it to shake the tree, so to speak. :)</span></div><div class="line" id="205104"><span class="nick" style="color:#6c3d55"><a href="#205104" label="[20:51:04]">&lt;ekaitz&gt;</a></span><span class="message">:)</span></div><div class="line" id="210227"><span class="nick" style="color:#6d2462"><a href="#210227" label="[21:02:27]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: I think that ahojlm is confusing bootstrapping for reproducible building...</span></div><div class="line" id="210245"><span class="nick" style="color:#6d2462"><a href="#210245" label="[21:02:45]">&lt;stikonas&gt;</a></span><span class="message">anyway, I probably won't waste any more time on that thread...</span></div><div class="line" id="210406"><span class="nick" style="color:#234e69"><a href="#210406" label="[21:04:06]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: yeah, i am pretty much done with that too.</span></div><div class="line" id="210417"><span class="nick" style="color:#234e69"><a href="#210417" label="[21:04:17]">&lt;vagrantc&gt;</a></span><span class="message">hence, xkcd.</span></div><div class="line" id="213022"><span class="nick" style="color:#bc80bd"><a href="#213022" label="[21:30:22]">&lt;jcowan&gt;</a></span><span class="message">oriansj: I think it's unlikely that the Korean Empire will attack a second time</span></div><div class="line" id="213648"><span class="nick" style="color:#389600"><a href="#213648" label="[21:36:48]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well one wants to seeks credits above all else, rationality tends to be left behind.</span></div><div class="line" id="213802"><span class="nick" style="color:#389600"><a href="#213802" label="[21:38:02]">&lt;oriansj&gt;</a></span><span class="message">and they admitted as much</span></div><div class="line" id="215040"><span class="nick" style="color:#2e2a4a"><a href="#215040" label="[21:50:40]">&lt;Googulator&gt;</a></span><span class="message">Meanwhile, went searching for potential parallel NAND flash and USB Mass Storage controller pairings that could work for the &quot;Trusted Flash drive&quot;, and found... nothing usable.</span></div><div class="line" id="215227"><span class="nick" style="color:#2e2a4a"><a href="#215227" label="[21:52:27]">&lt;Googulator&gt;</a></span><span class="message">An alternative approach may be to use SPI flash, which is available in sizes as small as 128 bytes, and as large as 256MB - and you can multiplex 2 SPI chips on the same bus, only needing to switch the Chip Select line between them with a mechanical switch (for security)</span></div><div class="line" id="215311"><span class="nick" style="color:#2e2a4a"><a href="#215311" label="[21:53:11]">&lt;Googulator&gt;</a></span><span class="message">Unfortunately I'm not aware of any pure hardware implementation of an USB Mass Storage controller with an SPI backend, so a microcontroller would be needed, which means _firmware_</span></div><div class="line" id="215518"><span class="nick" style="color:#2e2a4a"><a href="#215518" label="[21:55:18]">&lt;Googulator&gt;</a></span><span class="message">But if we can find a microcontroller that can read that firmware from an external SPI flash chip (a 3rd one), and make it sufficiently small, preferably small enough to be bitbanged into a flash chip by hand (like <a rel="nofollow" href="https://www.youtube.com/watch?v=8ZYMrcHm91s">https://www.youtube.com/watch?v=8ZYMrcHm91s</a>  but for SPI), it's doable without introducing a potential backdoor path</span></div><div class="line" id="215618"><span class="nick" style="color:#2e2a4a"><a href="#215618" label="[21:56:18]">&lt;Googulator&gt;</a></span><span class="message">We don't currently fit on 256MB, but we will if we drop the 2nd Linux source tarball currently used for the headers, and recompress the 4.9.10 tarball as bz2</span></div><div class="line" id="220525"><span class="nick" style="color:#389600"><a href="#220525" label="[22:05:25]">&lt;oriansj&gt;</a></span><span class="message">well SPI flash chips tend to be little more complicated to program by hand but workable (relative to byte/word wide flash chips)</span></div><div class="line" id="220747"><span class="nick" style="color:#389600"><a href="#220747" label="[22:07:47]">&lt;oriansj&gt;</a></span><span class="message">and firmware isn't an issue if we can create it manually (aka small)</span></div><div class="line" id="220837"><span class="nick" style="color:#389600"><a href="#220837" label="[22:08:37]">&lt;oriansj&gt;</a></span><span class="message">I'd put the upper limit of manually correctly hand toggling a binary at 1KB</span></div><div class="line" id="220901"><span class="nick" style="color:#389600"><a href="#220901" label="[22:09:01]">&lt;oriansj&gt;</a></span><span class="message">(potentially more if lucky but I wouldn't bet on it)</span></div><div class="line" id="223707"><span class="nick" style="color:#2e2a4a"><a href="#223707" label="[22:37:07]">&lt;Googulator&gt;</a></span><span class="message">Finally got Linux to start and get an Internet connection, and actually start building on baremetal... and then another curveball. For whatever reason, the keyboard doesn't work immediately after boot - and because consoleblank=0 isn't set, after 10 minutes, the screen goes blank</span></div><div class="line" id="223719"><span class="nick" style="color:#2e2a4a"><a href="#223719" label="[22:37:19]">&lt;Googulator&gt;</a></span><span class="message">This time I'm sure it's not frozen, as I can see it download packages in tcpdump</span></div><div class="line" id="224317"><span class="nick" style="color:#6d2462"><a href="#224317" label="[22:43:17]">&lt;stikonas&gt;</a></span><span class="message">slow but steady progress :)</span></div><div class="line" id="224332"><span class="nick" style="color:#6d2462"><a href="#224332" label="[22:43:32]">&lt;stikonas&gt;</a></span><span class="message">you might be the first one running this so far on baremetal</span></div><div class="line" id="224349"><span class="nick" style="color:#6d2462"><a href="#224349" label="[22:43:49]">&lt;stikonas&gt;</a></span><span class="message">I wanted to run it on my next laptop but that's in the future...</span></div><div class="line" id="224445"><span class="nick" style="color:#2e2a4a"><a href="#224445" label="[22:44:45]">&lt;Googulator&gt;</a></span><span class="message">I kind of had a feeling this was never actually tested on bare metal...</span></div><div class="line" id="225107"><span class="nick" style="color:#2e2a4a"><a href="#225107" label="[22:51:07]">&lt;Googulator&gt;</a></span><span class="message">The USB issue is really weird, as during the short time I had real display, I could plug in a USB flash drive, and it did print on console that it detected a new UAS device</span></div><div class="line" id="225112"><span class="nick" style="color:#2e2a4a"><a href="#225112" label="[22:51:12]">&lt;Googulator&gt;</a></span><span class="message">But not if I plug in a keyboard</span></div><div class="line" id="225140"><span class="nick" style="color:#2e2a4a"><a href="#225140" label="[22:51:40]">&lt;Googulator&gt;</a></span><span class="message">hmm... maybe UHCI/OHCI is disabled, so it's not detecting USB 1.x devices?</span></div><div class="line" id="225145"><span class="nick" style="color:#2e2a4a"><a href="#225145" label="[22:51:45]">&lt;Googulator&gt;</a></span><span class="message">let's try a hub with a TT...</span></div><div class="line" id="230348"><span class="nick" style="color:#2e2a4a"><a href="#230348" label="[23:03:48]">&lt;Googulator&gt;</a></span><span class="message">Hub's not working at all, not even USB 2.0 devices are detected</span></div><div class="line" id="230449"><span class="nick" style="color:#2e2a4a"><a href="#230449" label="[23:04:49]">&lt;Googulator&gt;</a></span><span class="message"># CONFIG_USB_OHCI_HCD is not set</span></div><div class="line" id="230450"><span class="nick" style="color:#2e2a4a"><a href="#230450" label="[23:04:50]">&lt;Googulator&gt;</a></span><span class="message"># CONFIG_USB_UHCI_HCD is not set</span></div><div class="line" id="230450"><span class="nick" style="color:#2e2a4a"><a href="#230450" label="[23:04:50]">&lt;Googulator&gt;</a></span><span class="message"># CONFIG_USB_XHCI_HCD is not set</span></div><div class="line" id="230451"><span class="nick" style="color:#2e2a4a"><a href="#230451" label="[23:04:51]">&lt;Googulator&gt;</a></span><span class="message">CONFIG_USB_EHCI_HCD=y</span></div><br /></div></body></html>