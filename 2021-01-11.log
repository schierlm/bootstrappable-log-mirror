<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000028"><span class="nick" style="color:#389600"><a href="#000028" label="[00:00:28]">&lt;OriansJ&gt;</a></span><span class="message">yt_: you are right I missed some functions from unistd.h; pity i'll just have to duplicate some C functions to comply with the C standard</span></div><div class="line" id="000310"><span class="nick" style="color:#8dd3c7"><a href="#000310" label="[00:03:10]">&lt;yt_&gt;</a></span><span class="message">OriansJ: it is what it is :-)</span></div><div class="line" id="000335"><span class="nick" style="color:#8dd3c7"><a href="#000335" label="[00:03:35]">&lt;yt_&gt;</a></span><span class="message">OriansJ: and finally (for today) <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/pull/16">https://github.com/oriansj/M2-Planet/pull/16</a>  which adds support for global arrays (chars only though)</span></div><div class="line" id="001514"><span class="nick" style="color:#389600"><a href="#001514" label="[00:15:14]">&lt;OriansJ&gt;</a></span><span class="message">thank you yt_  for all of your help today</span></div><div class="line" id="001547"><span class="nick" style="color:#389600"><a href="#001547" label="[00:15:47]">&lt;OriansJ&gt;</a></span><span class="message">and got all of the missing test0021 primitives in M2libc (pity on the duplication but oh well)</span></div><div class="line" id="002207"><span class="nick" style="color:#389600"><a href="#002207" label="[00:22:07]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I think once test0021 is updated; that the changes for the tests will be done and give you the chance to continue your tweaks. To make your work easier I just need to know exactly one thing from yt</span></div><div class="line" id="002239"><span class="nick" style="color:#389600"><a href="#002239" label="[00:22:39]">&lt;OriansJ&gt;</a></span><span class="message">yt_: when you run get_machine does it return AArch64 or aarch64?</span></div><div class="line" id="002404"><span class="nick" style="color:#6b8072"><a href="#002404" label="[00:24:04]">&lt;deesix&gt;</a></span><span class="message">OriansJ, nice. I'm keeping it up-to-date as you all are progressing.</span></div><div class="line" id="002519"><span class="nick" style="color:#389600"><a href="#002519" label="[00:25:19]">&lt;OriansJ&gt;</a></span><span class="message">because my next change in M2libc is rename x86/ELF-i386* to x86/ELF-x86*</span></div><div class="line" id="002539"><span class="nick" style="color:#80b1d3"><a href="#002539" label="[00:25:39]">&lt;fossy&gt;</a></span><span class="message">stikonas: wtf?</span></div><div class="line" id="002558"><span class="nick" style="color:#6b8072"><a href="#002558" label="[00:25:58]">&lt;deesix&gt;</a></span><span class="message">OriansJ, has get_machine changed?</span></div><div class="line" id="002629"><span class="nick" style="color:#389600"><a href="#002629" label="[00:26:29]">&lt;OriansJ&gt;</a></span><span class="message">deesix: no just was hoping to harmonize paths too</span></div><div class="line" id="002650"><span class="nick" style="color:#6d2462"><a href="#002650" label="[00:26:50]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah...exactly the same error...</span></div><div class="line" id="002726"><span class="nick" style="color:#80b1d3"><a href="#002726" label="[00:27:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: did you delete the 0.9.27 change?</span></div><div class="line" id="002736"><span class="nick" style="color:#6d2462"><a href="#002736" label="[00:27:36]">&lt;stikonas&gt;</a></span><span class="message">I commented it out with #</span></div><div class="line" id="002749"><span class="nick" style="color:#6d2462"><a href="#002749" label="[00:27:49]">&lt;stikonas&gt;</a></span><span class="message">just in tcc.kaem file</span></div><div class="line" id="002750"><span class="nick" style="color:#389600"><a href="#002750" label="[00:27:50]">&lt;OriansJ&gt;</a></span><span class="message">so M2-Planet --architecture $arch -f $arch/Linux/unistd.h -f stdlib.c -f $arch/Linux/fcntl.h -f stdio.c -f foo.c -o foo.M1 --debug &amp;&amp; blood-elf --64 -f foo.M1 -o foo-footer.M1 &amp;&amp; M1 --architecture $arch --little-endian -f $arch/$arch_defs.M1 -f $arch/libc-full.M1 -f foo.M1 -f foo-footer.M1 -o foo.hex2 &amp;&amp; hex2 --architecture $arch --little-endian --base-address 0x10000 -f $arch/ELF-$arch-debug.hex2 -f foo.hex2 -o foo</span></div><div class="line" id="002752"><span class="nick" style="color:#6b8072"><a href="#002752" label="[00:27:52]">&lt;deesix&gt;</a></span><span class="message">OriansJ, tests are using aarch64 since the initial port, that was the value I got back then. And today the draft for parallel testing run fine on yt_'s machine.</span></div><div class="line" id="002754"><span class="nick" style="color:#80b1d3"><a href="#002754" label="[00:27:54]">&lt;fossy&gt;</a></span><span class="message">um</span></div><div class="line" id="002830"><span class="nick" style="color:#389600"><a href="#002830" label="[00:28:30]">&lt;OriansJ&gt;</a></span><span class="message">only the flagging of --64 in blood-elf and the endianness and base address could be different</span></div><div class="line" id="002927"><span class="nick" style="color:#80b1d3"><a href="#002927" label="[00:29:27]">&lt;fossy&gt;</a></span><span class="message">stikonas: have you got some kind of debugging environment open?</span></div><div class="line" id="002930"><span class="nick" style="color:#80b1d3"><a href="#002930" label="[00:29:30]">&lt;fossy&gt;</a></span><span class="message">how are you debugging this</span></div><div class="line" id="003008"><span class="nick" style="color:#80b1d3"><a href="#003008" label="[00:30:08]">&lt;fossy&gt;</a></span><span class="message">stikonas, i have found the issue</span></div><div class="line" id="003012"><span class="nick" style="color:#6d2462"><a href="#003012" label="[00:30:12]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, I'm rebuilding my debuggint environment</span></div><div class="line" id="003018"><span class="nick" style="color:#80b1d3"><a href="#003018" label="[00:30:18]">&lt;fossy&gt;</a></span><span class="message">well, 0.9.26 creates a working binary</span></div><div class="line" id="003022"><span class="nick" style="color:#80b1d3"><a href="#003022" label="[00:30:22]">&lt;fossy&gt;</a></span><span class="message">0.9.26 is not buggy</span></div><div class="line" id="003026"><span class="nick" style="color:#6d2462"><a href="#003026" label="[00:30:26]">&lt;stikonas&gt;</a></span><span class="message">strange...</span></div><div class="line" id="003034"><span class="nick" style="color:#80b1d3"><a href="#003034" label="[00:30:34]">&lt;fossy&gt;</a></span><span class="message">i've just confirmed that</span></div><div class="line" id="003046"><span class="nick" style="color:#80b1d3"><a href="#003046" label="[00:30:46]">&lt;fossy&gt;</a></span><span class="message">i missed doing this:</span></div><div class="line" id="003046"><span class="nick" style="color:#6d2462"><a href="#003046" label="[00:30:46]">&lt;stikonas&gt;</a></span><span class="message">ok, let me try again</span></div><div class="line" id="003048"><span class="nick" style="color:#80b1d3"><a href="#003048" label="[00:30:48]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/janneke/guix/-/blob/master/gnu/packages/commencement.scm#L858">https://gitlab.com/janneke/guix/-/blob/master/gnu/packages/commencement.scm#L858</a> </span></div><div class="line" id="003055"><span class="nick" style="color:#80b1d3"><a href="#003055" label="[00:30:55]">&lt;fossy&gt;</a></span><span class="message">so we need sed before tcc 0.9.27</span></div><div class="line" id="003100"><span class="nick" style="color:#80b1d3"><a href="#003100" label="[00:31:00]">&lt;fossy&gt;</a></span><span class="message">so we must build sed using 0.9.26</span></div><div class="line" id="003123"><span class="nick" style="color:#6b8072"><a href="#003123" label="[00:31:23]">&lt;deesix&gt;</a></span><span class="message">OriansJ, for Knight there're some shared files, but some of them have a suffix. Not the easiest for unification.</span></div><div class="line" id="003155"><span class="nick" style="color:#6d2462"><a href="#003155" label="[00:31:55]">&lt;stikonas&gt;</a></span><span class="message">ok, let me try again</span></div><div class="line" id="003202"><span class="nick" style="color:#6b8072"><a href="#003202" label="[00:32:02]">&lt;deesix&gt;</a></span><span class="message">OriansJ, we'll see after landing the parallelism patches.</span></div><div class="line" id="003204"><span class="nick" style="color:#80b1d3"><a href="#003204" label="[00:32:04]">&lt;fossy&gt;</a></span><span class="message">:thumbsup:</span></div><div class="line" id="003204"><span class="nick" style="color:#6d2462"><a href="#003204" label="[00:32:04]">&lt;stikonas&gt;</a></span><span class="message">last time I ran 0.26 was in live envinment</span></div><div class="line" id="003210"><span class="nick" style="color:#80b1d3"><a href="#003210" label="[00:32:10]">&lt;fossy&gt;</a></span><span class="message">yes, same</span></div><div class="line" id="003220"><span class="nick" style="color:#80b1d3"><a href="#003220" label="[00:32:20]">&lt;fossy&gt;</a></span><span class="message">i shall revert 0.9.27 for now</span></div><div class="line" id="003444"><span class="nick" style="color:#6d2462"><a href="#003444" label="[00:34:44]">&lt;stikonas&gt;</a></span><span class="message">sure...</span></div><div class="line" id="003508"><span class="nick" style="color:#6d2462"><a href="#003508" label="[00:35:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I have sed, gzip and diffutils in a branch</span></div><div class="line" id="003513"><span class="nick" style="color:#6d2462"><a href="#003513" label="[00:35:13]">&lt;stikonas&gt;</a></span><span class="message">(tar is missing for now</span></div><div class="line" id="003527"><span class="nick" style="color:#6d2462"><a href="#003527" label="[00:35:27]">&lt;stikonas&gt;</a></span><span class="message">I guess we need it either before gzip, or maybe before sed (depending on whether tar needs sed)</span></div><div class="line" id="003728"><span class="nick" style="color:#80b1d3"><a href="#003728" label="[00:37:28]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="003807"><span class="nick" style="color:#80b1d3"><a href="#003807" label="[00:38:07]">&lt;fossy&gt;</a></span><span class="message">please could you use git-lfs instaed of wget?</span></div><div class="line" id="003840"><span class="nick" style="color:#6d2462"><a href="#003840" label="[00:38:40]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh I probably didn't get your HEAD^ commit yet. Maybe that's why it failed</span></div><div class="line" id="003848"><span class="nick" style="color:#6d2462"><a href="#003848" label="[00:38:48]">&lt;stikonas&gt;</a></span><span class="message">yeah, we can setup git-lfs</span></div><div class="line" id="003908"><span class="nick" style="color:#6d2462"><a href="#003908" label="[00:39:08]">&lt;stikonas&gt;</a></span><span class="message">I just haven't tried setting it up yet</span></div><div class="line" id="003912"><span class="nick" style="color:#80b1d3"><a href="#003912" label="[00:39:12]">&lt;fossy&gt;</a></span><span class="message">wait i am so dumb</span></div><div class="line" id="003916"><span class="nick" style="color:#6d2462"><a href="#003916" label="[00:39:16]">&lt;stikonas&gt;</a></span><span class="message">first of all I need to intall it :()</span></div><div class="line" id="003917"><span class="nick" style="color:#80b1d3"><a href="#003917" label="[00:39:17]">&lt;fossy&gt;</a></span><span class="message">well no</span></div><div class="line" id="003920"><span class="nick" style="color:#80b1d3"><a href="#003920" label="[00:39:20]">&lt;fossy&gt;</a></span><span class="message">i just looked over something</span></div><div class="line" id="003929"><span class="nick" style="color:#80b1d3"><a href="#003929" label="[00:39:29]">&lt;fossy&gt;</a></span><span class="message">in commencement.scm the patch is to unconditionally enable static</span></div><div class="line" id="003938"><span class="nick" style="color:#80b1d3"><a href="#003938" label="[00:39:38]">&lt;fossy&gt;</a></span><span class="message">so we can use tcc 0.9.27 if we use static</span></div><div class="line" id="003947"><span class="nick" style="color:#80b1d3"><a href="#003947" label="[00:39:47]">&lt;fossy&gt;</a></span><span class="message">(just specify -static when linking)</span></div><div class="line" id="003954"><span class="nick" style="color:#80b1d3"><a href="#003954" label="[00:39:54]">&lt;fossy&gt;</a></span><span class="message">let me check that and if that's the case rebase and we're all good</span></div><div class="line" id="003958"><span class="nick" style="color:#6d2462"><a href="#003958" label="[00:39:58]">&lt;stikonas&gt;</a></span><span class="message">ok, so I don't have <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/commit/ce24c8cf3cca620ef47aa525a19871ddf075551b">https://github.com/fosslinux/live-bootstrap/commit/ce24c8cf3cca620ef47aa525a19871ddf075551b</a>  yet</span></div><div class="line" id="004001"><span class="nick" style="color:#6d2462"><a href="#004001" label="[00:40:01]">&lt;stikonas&gt;</a></span><span class="message">in my environemtn</span></div><div class="line" id="004004"><span class="nick" style="color:#6d2462"><a href="#004004" label="[00:40:04]">&lt;stikonas&gt;</a></span><span class="message">let me pulll...</span></div><div class="line" id="004006"><span class="nick" style="color:#80b1d3"><a href="#004006" label="[00:40:06]">&lt;fossy&gt;</a></span><span class="message">1 second</span></div><div class="line" id="004008"><span class="nick" style="color:#6d2462"><a href="#004008" label="[00:40:08]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="004010"><span class="nick" style="color:#80b1d3"><a href="#004010" label="[00:40:10]">&lt;fossy&gt;</a></span><span class="message">i'll just rever the revert</span></div><div class="line" id="004055"><span class="nick" style="color:#80b1d3"><a href="#004055" label="[00:40:55]">&lt;fossy&gt;</a></span><span class="message">ok, rebase now</span></div><div class="line" id="004112"><span class="nick" style="color:#6d2462"><a href="#004112" label="[00:41:12]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="004122"><span class="nick" style="color:#80b1d3"><a href="#004122" label="[00:41:22]">&lt;fossy&gt;</a></span><span class="message">and add -static to the linking command</span></div><div class="line" id="004242"><span class="nick" style="color:#6d2462"><a href="#004242" label="[00:42:42]">&lt;stikonas&gt;</a></span><span class="message">ok, rebased (no git-lfs yet</span></div><div class="line" id="004300"><span class="nick" style="color:#80b1d3"><a href="#004300" label="[00:43:00]">&lt;fossy&gt;</a></span><span class="message">that's fine</span></div><div class="line" id="004431"><span class="nick" style="color:#6d2462"><a href="#004431" label="[00:44:31]">&lt;stikonas&gt;</a></span><span class="message">and now need to find some tutorial for git-lfs :)</span></div><div class="line" id="004457"><span class="nick" style="color:#80b1d3"><a href="#004457" label="[00:44:57]">&lt;fossy&gt;</a></span><span class="message">iut is verye asy, <a rel="nofollow" href="https://git-lfs.github.com/">https://git-lfs.github.com/</a> </span></div><div class="line" id="004506"><span class="nick" style="color:#80b1d3"><a href="#004506" label="[00:45:06]">&lt;fossy&gt;</a></span><span class="message">it is very easy*</span></div><div class="line" id="004753"><span class="nick" style="color:#6d2462"><a href="#004753" label="[00:47:53]">&lt;stikonas&gt;</a></span><span class="message">fossy: so where are the files stored? On some GH server?</span></div><div class="line" id="004816"><span class="nick" style="color:#80b1d3"><a href="#004816" label="[00:48:16]">&lt;fossy&gt;</a></span><span class="message">stikonas: they are just included using some dark magic along with the git repo</span></div><div class="line" id="005117"><span class="nick" style="color:#6b8072"><a href="#005117" label="[00:51:17]">&lt;deesix&gt;</a></span><span class="message">Hmm, I'd keep it simple and dark-magic-less. Beware of vendor lock-in (my 2c)</span></div><div class="line" id="005142"><span class="nick" style="color:#80b1d3"><a href="#005142" label="[00:51:42]">&lt;fossy&gt;</a></span><span class="message">git lfs is not centeralized</span></div><div class="line" id="005145"><span class="nick" style="color:#80b1d3"><a href="#005145" label="[00:51:45]">&lt;fossy&gt;</a></span><span class="message">that's what i like about it</span></div><div class="line" id="005216"><span class="nick" style="color:#6d2462"><a href="#005216" label="[00:52:16]">&lt;stikonas&gt;</a></span><span class="message">I guess you can host your own server?</span></div><div class="line" id="005236"><span class="nick" style="color:#80b1d3"><a href="#005236" label="[00:52:36]">&lt;fossy&gt;</a></span><span class="message">git lfs has nothing to do with &quot;hosting your own server&quot;, afaict</span></div><div class="line" id="005239"><span class="nick" style="color:#6d2462"><a href="#005239" label="[00:52:39]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's juts some public tarballs</span></div><div class="line" id="005243"><span class="nick" style="color:#80b1d3"><a href="#005243" label="[00:52:43]">&lt;fossy&gt;</a></span><span class="message">it works the same way as git</span></div><div class="line" id="005258"><span class="nick" style="color:#80b1d3"><a href="#005258" label="[00:52:58]">&lt;fossy&gt;</a></span><span class="message">you commit to a repo, you push the repo somewhere, you pull the repo</span></div><div class="line" id="005305"><span class="nick" style="color:#80b1d3"><a href="#005305" label="[00:53:05]">&lt;fossy&gt;</a></span><span class="message">it's just an extra step to pull and commit</span></div><div class="line" id="005320"><span class="nick" style="color:#80b1d3"><a href="#005320" label="[00:53:20]">&lt;fossy&gt;</a></span><span class="message">as long as the push target supports git lfs</span></div><div class="line" id="005337"><span class="nick" style="color:#6d2462"><a href="#005337" label="[00:53:37]">&lt;stikonas&gt;</a></span><span class="message">yes, but when you pull repo, how would git know where to download from...</span></div><div class="line" id="005347"><span class="nick" style="color:#6d2462"><a href="#005347" label="[00:53:47]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'm now converting my branch to lfs</span></div><div class="line" id="005356"><span class="nick" style="color:#80b1d3"><a href="#005356" label="[00:53:56]">&lt;fossy&gt;</a></span><span class="message">git lfs is an extention that intigrates with git</span></div><div class="line" id="005417"><span class="nick" style="color:#80b1d3"><a href="#005417" label="[00:54:17]">&lt;fossy&gt;</a></span><span class="message">so on the server and client, it has a communication channel over the normal git system to pull/push git lfs files</span></div><div class="line" id="005509"><span class="nick" style="color:#80b1d3"><a href="#005509" label="[00:55:09]">&lt;fossy&gt;</a></span><span class="message">stikonas: not an amazing source but completely correct and explained muuch better than i can</span></div><div class="line" id="005511"><span class="nick" style="color:#80b1d3"><a href="#005511" label="[00:55:11]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.quora.com/How-does-Git-LFS-work?share=1">https://www.quora.com/How-does-Git-LFS-work?share=1</a> </span></div><div class="line" id="005526"><span class="nick" style="color:#6d2462"><a href="#005526" label="[00:55:26]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll take a look once I'm done...</span></div><div class="line" id="011012"><span class="nick" style="color:#389600"><a href="#011012" label="[01:10:12]">&lt;OriansJ&gt;</a></span><span class="message">deesix: you don't have to parallelize all architectures at the same time</span></div><div class="line" id="011036"><span class="nick" style="color:#389600"><a href="#011036" label="[01:10:36]">&lt;OriansJ&gt;</a></span><span class="message">getting just AMD64 and AArch64 would be a great win</span></div><div class="line" id="011324"><span class="nick" style="color:#6b8072"><a href="#011324" label="[01:13:24]">&lt;deesix&gt;</a></span><span class="message">OriansJ, you mean the unification? Yeah, I guess so. (parallel is already fine for all of them, I think).</span></div><div class="line" id="011557"><span class="nick" style="color:#389600"><a href="#011557" label="[01:15:57]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well when you feel the parallel work is good enough for merge let me know and I'll give it a nice round of testing on a big fat server (say 64 cores) check for collisions and merge to master if no problems</span></div><div class="line" id="011634"><span class="nick" style="color:#6d2462"><a href="#011634" label="[01:16:34]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, now tcc crashed</span></div><div class="line" id="011637"><span class="nick" style="color:#6d2462"><a href="#011637" label="[01:16:37]">&lt;stikonas&gt;</a></span><span class="message"> +&gt; tcc -o /after/bin/sed alloca.o getopt1.o getopt.o regex.o sed.o utils.o</span></div><div class="line" id="011638"><span class="nick" style="color:#6d2462"><a href="#011638" label="[01:16:38]">&lt;stikonas&gt;</a></span><span class="message">[ 1661.524405] tcc[694]: segfault at 4 ip 0000000008064f8e sp 00000000ffd61d7c error 4 in tcc[8048000+3b000]</span></div><div class="line" id="011645"><span class="nick" style="color:#389600"><a href="#011645" label="[01:16:45]">&lt;OriansJ&gt;</a></span><span class="message">if a collision occurs, I'll let you know; we will fix it and try again.</span></div><div class="line" id="011728"><span class="nick" style="color:#80b1d3"><a href="#011728" label="[01:17:28]">&lt;fossy&gt;</a></span><span class="message">stikonas: yes, ik, you need to use -static</span></div><div class="line" id="011739"><span class="nick" style="color:#6d2462"><a href="#011739" label="[01:17:39]">&lt;stikonas&gt;</a></span><span class="message">oh, I though I have it...</span></div><div class="line" id="011741"><span class="nick" style="color:#6d2462"><a href="#011741" label="[01:17:41]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="011803"><span class="nick" style="color:#80b1d3"><a href="#011803" label="[01:18:03]">&lt;fossy&gt;</a></span><span class="message">static linking is the only type of linking that works with this tcc, but we cannot patch tcc until we have sed, so we use -static for sed then we can recompile tcc</span></div><div class="line" id="011804"><span class="nick" style="color:#6d2462"><a href="#011804" label="[01:18:04]">&lt;stikonas&gt;</a></span><span class="message">tcc 0.9.27 was build with  +&gt; tcc -v -static -o tcc -D TCC_TARGET_I386=1 -D CONFIG_TCCDIR=&quot;/after/lib/tcc&quot; -D CONFIG_TCC_CRTPREFIX=&quot;/after/lib&quot; -D CONFIG_TCC_ELFINTERP=&quot;/mes/loader&quot; -D CONFIG_TCC_LIBPATHS=&quot;/after/lib:/after/lib/tcc&quot; -</span></div><div class="line" id="011814"><span class="nick" style="color:#6d2462"><a href="#011814" label="[01:18:14]">&lt;stikonas&gt;</a></span><span class="message">oh</span></div><div class="line" id="011819"><span class="nick" style="color:#6d2462"><a href="#011819" label="[01:18:19]">&lt;stikonas&gt;</a></span><span class="message">you mean static for sed</span></div><div class="line" id="011821"><span class="nick" style="color:#6d2462"><a href="#011821" label="[01:18:21]">&lt;stikonas&gt;</a></span><span class="message">ok, got it</span></div><div class="line" id="011822"><span class="nick" style="color:#80b1d3"><a href="#011822" label="[01:18:22]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="011823"><span class="nick" style="color:#389600"><a href="#011823" label="[01:18:23]">&lt;OriansJ&gt;</a></span><span class="message">deesix: as the unification is more about making future porting work and test updates less tedious</span></div><div class="line" id="011841"><span class="nick" style="color:#389600"><a href="#011841" label="[01:18:41]">&lt;OriansJ&gt;</a></span><span class="message">but the parallel work is about really speeding up development cycles</span></div><div class="line" id="011845"><span class="nick" style="color:#80b1d3"><a href="#011845" label="[01:18:45]">&lt;fossy&gt;</a></span><span class="message">tcc 0.9.26 is already patched by janneke's branch for static linking, but tcc 0.9.27 isn't</span></div><div class="line" id="011926"><span class="nick" style="color:#80b1d3"><a href="#011926" label="[01:19:26]">&lt;fossy&gt;</a></span><span class="message">i think that the Mes C Library is not made for dynamic linking</span></div><div class="line" id="011951"><span class="nick" style="color:#6d2462"><a href="#011951" label="[01:19:51]">&lt;stikonas&gt;</a></span><span class="message">ok, that makes everything clearer</span></div><div class="line" id="012041"><span class="nick" style="color:#80b1d3"><a href="#012041" label="[01:20:41]">&lt;fossy&gt;</a></span><span class="message">^-^</span></div><div class="line" id="012132"><span class="nick" style="color:#6d2462"><a href="#012132" label="[01:21:32]">&lt;stikonas&gt;</a></span><span class="message">ok, running a new test</span></div><div class="line" id="012139"><span class="nick" style="color:#6d2462"><a href="#012139" label="[01:21:39]">&lt;stikonas&gt;</a></span><span class="message">in the meantime I need to figure out how to push to github</span></div><div class="line" id="012143"><span class="nick" style="color:#6d2462"><a href="#012143" label="[01:21:43]">&lt;stikonas&gt;</a></span><span class="message">with that LFS stuff...</span></div><div class="line" id="012149"><span class="nick" style="color:#80b1d3"><a href="#012149" label="[01:21:49]">&lt;fossy&gt;</a></span><span class="message">just git add it</span></div><div class="line" id="012219"><span class="nick" style="color:#6d2462"><a href="#012219" label="[01:22:19]">&lt;stikonas&gt;</a></span><span class="message">I'm already trying to push it</span></div><div class="line" id="012220"><span class="nick" style="color:#80b1d3"><a href="#012220" label="[01:22:20]">&lt;fossy&gt;</a></span><span class="message">oh and git add .gitattributes</span></div><div class="line" id="012225"><span class="nick" style="color:#6d2462"><a href="#012225" label="[01:22:25]">&lt;stikonas&gt;</a></span><span class="message">batch response: @stikonas can not upload new objects to public fork stikonas/live-bootstrap</span></div><div class="line" id="012226"><span class="nick" style="color:#80b1d3"><a href="#012226" label="[01:22:26]">&lt;fossy&gt;</a></span><span class="message">so if you just go</span></div><div class="line" id="012231"><span class="nick" style="color:#6d2462"><a href="#012231" label="[01:22:31]">&lt;stikonas&gt;</a></span><span class="message">yes, I added attributes</span></div><div class="line" id="012231"><span class="nick" style="color:#80b1d3"><a href="#012231" label="[01:22:31]">&lt;fossy&gt;</a></span><span class="message">hm.</span></div><div class="line" id="012250"><span class="nick" style="color:#389600"><a href="#012250" label="[01:22:50]">&lt;OriansJ&gt;</a></span><span class="message">git-lfs is crap</span></div><div class="line" id="012259"><span class="nick" style="color:#80b1d3"><a href="#012259" label="[01:22:59]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="012301"><span class="nick" style="color:#80b1d3"><a href="#012301" label="[01:23:01]">&lt;fossy&gt;</a></span><span class="message">why</span></div><div class="line" id="012316"><span class="nick" style="color:#6d2462"><a href="#012316" label="[01:23:16]">&lt;stikonas&gt;</a></span><span class="message">can't push :D</span></div><div class="line" id="012330"><span class="nick" style="color:#80b1d3"><a href="#012330" label="[01:23:30]">&lt;fossy&gt;</a></span><span class="message">&gt; On GitHub.com, you can't push LFS assets to a public fork unless the original repo already has LFS objects, or you have push access to the original repo.</span></div><div class="line" id="012333"><span class="nick" style="color:#80b1d3"><a href="#012333" label="[01:23:33]">&lt;fossy&gt;</a></span><span class="message">grr</span></div><div class="line" id="012340"><span class="nick" style="color:#6b8072"><a href="#012340" label="[01:23:40]">&lt;deesix&gt;</a></span><span class="message">OriansJ, I'm pretty confident the current changes are fine. Just need a final look tomorrow for minor typos and such. Indeed the cycle would be better. I only hoped that the current round of test updates didn't happen this weekend (I'd did it before the parallelism if I knew all this). Today was a crazy day for you all amazing people :)</span></div><div class="line" id="012341"><span class="nick" style="color:#389600"><a href="#012341" label="[01:23:41]">&lt;OriansJ&gt;</a></span><span class="message">it allows one to lose state in git history and makes changes to your ~/.gitconfig without asking</span></div><div class="line" id="012355"><span class="nick" style="color:#80b1d3"><a href="#012355" label="[01:23:55]">&lt;fossy&gt;</a></span><span class="message">&quot;makes changes to your ~/.gitconfig without asking&quot; yeah that is quite annoying</span></div><div class="line" id="012428"><span class="nick" style="color:#80b1d3"><a href="#012428" label="[01:24:28]">&lt;fossy&gt;</a></span><span class="message">could you elaborate in the lose state thing</span></div><div class="line" id="012446"><span class="nick" style="color:#80b1d3"><a href="#012446" label="[01:24:46]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'm thinking, if github dosen't allow for lfs in forks, maybe we just commit the tarballs to the repo</span></div><div class="line" id="012503"><span class="nick" style="color:#6d2462"><a href="#012503" label="[01:25:03]">&lt;stikonas&gt;</a></span><span class="message">hmm, that will blow up git repo, I don't think that's a good idea...</span></div><div class="line" id="012506"><span class="nick" style="color:#389600"><a href="#012506" label="[01:25:06]">&lt;OriansJ&gt;</a></span><span class="message">fossy: it under certain conditions will truncate your ~/.gitconfig which by the way can result in the disabling of security checks</span></div><div class="line" id="012514"><span class="nick" style="color:#6d2462"><a href="#012514" label="[01:25:14]">&lt;stikonas&gt;</a></span><span class="message">we'll have a lot of tarballs soon</span></div><div class="line" id="012519"><span class="nick" style="color:#80b1d3"><a href="#012519" label="[01:25:19]">&lt;fossy&gt;</a></span><span class="message">OriansJ: :|</span></div><div class="line" id="012531"><span class="nick" style="color:#80b1d3"><a href="#012531" label="[01:25:31]">&lt;fossy&gt;</a></span><span class="message">i was not aware of that..</span></div><div class="line" id="012544"><span class="nick" style="color:#389600"><a href="#012544" label="[01:25:44]">&lt;OriansJ&gt;</a></span><span class="message">fossy: the large objects in lfs can be garbage collected</span></div><div class="line" id="012605"><span class="nick" style="color:#6d2462"><a href="#012605" label="[01:26:05]">&lt;stikonas&gt;</a></span><span class="message">well, in principle they are still in mirrors...</span></div><div class="line" id="012611"><span class="nick" style="color:#389600"><a href="#012611" label="[01:26:11]">&lt;OriansJ&gt;</a></span><span class="message">and all that remains in git is checksums with no objects to satisfy a checkout</span></div><div class="line" id="012622"><span class="nick" style="color:#80b1d3"><a href="#012622" label="[01:26:22]">&lt;fossy&gt;</a></span><span class="message">i want to make sure they are permanently existing, linked to the repository</span></div><div class="line" id="012646"><span class="nick" style="color:#389600"><a href="#012646" label="[01:26:46]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: yeah not if the mirrors are on github</span></div><div class="line" id="012646"><span class="nick" style="color:#6d2462"><a href="#012646" label="[01:26:46]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, you can try to temporarily add me as collaborator</span></div><div class="line" id="012701"><span class="nick" style="color:#6d2462"><a href="#012701" label="[01:27:01]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: I mean mirrors on ftp.gnu.org</span></div><div class="line" id="012704"><span class="nick" style="color:#389600"><a href="#012704" label="[01:27:04]">&lt;OriansJ&gt;</a></span><span class="message">(they all can lose the same object at the same time)</span></div><div class="line" id="012706"><span class="nick" style="color:#80b1d3"><a href="#012706" label="[01:27:06]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'm not sure lfs is a good idea if it's going to inhibit contributions</span></div><div class="line" id="012714"><span class="nick" style="color:#80b1d3"><a href="#012714" label="[01:27:14]">&lt;fossy&gt;</a></span><span class="message">and because of the issues OriansJ outliend</span></div><div class="line" id="012721"><span class="nick" style="color:#80b1d3"><a href="#012721" label="[01:27:21]">&lt;fossy&gt;</a></span><span class="message">(not just for you but for others)</span></div><div class="line" id="012757"><span class="nick" style="color:#80b1d3"><a href="#012757" label="[01:27:57]">&lt;fossy&gt;</a></span><span class="message">maybe just stick with wget for now until there is a better solution?</span></div><div class="line" id="012804"><span class="nick" style="color:#6d2462"><a href="#012804" label="[01:28:04]">&lt;stikonas&gt;</a></span><span class="message">yeah, maybe wget it...</span></div><div class="line" id="012820"><span class="nick" style="color:#6b8072"><a href="#012820" label="[01:28:20]">&lt;deesix&gt;</a></span><span class="message">:)</span></div><div class="line" id="012857"><span class="nick" style="color:#80b1d3"><a href="#012857" label="[01:28:57]">&lt;fossy&gt;</a></span><span class="message">i have an idea regarding how we can esnure distributuion of the tarballs, let's go with wget</span></div><div class="line" id="012903"><span class="nick" style="color:#80b1d3"><a href="#012903" label="[01:29:03]">&lt;fossy&gt;</a></span><span class="message">i'll need time to think about distribution tho</span></div><div class="line" id="012906"><span class="nick" style="color:#6d2462"><a href="#012906" label="[01:29:06]">&lt;stikonas&gt;</a></span><span class="message">maybe I should also checksum them</span></div><div class="line" id="012916"><span class="nick" style="color:#80b1d3"><a href="#012916" label="[01:29:16]">&lt;fossy&gt;</a></span><span class="message">no, we will do that inside the chroot/qemu</span></div><div class="line" id="012920"><span class="nick" style="color:#80b1d3"><a href="#012920" label="[01:29:20]">&lt;fossy&gt;</a></span><span class="message">useless outside</span></div><div class="line" id="012928"><span class="nick" style="color:#6d2462"><a href="#012928" label="[01:29:28]">&lt;stikonas&gt;</a></span><span class="message">well, sed, tar, gzip are too early</span></div><div class="line" id="012937"><span class="nick" style="color:#80b1d3"><a href="#012937" label="[01:29:37]">&lt;fossy&gt;</a></span><span class="message">along with cp, chmod, i will write a sha256sum thing for M2-Planet at some point</span></div><div class="line" id="012946"><span class="nick" style="color:#80b1d3"><a href="#012946" label="[01:29:46]">&lt;fossy&gt;</a></span><span class="message">because i alsso want to check binaries</span></div><div class="line" id="013011"><span class="nick" style="color:#80b1d3"><a href="#013011" label="[01:30:11]">&lt;fossy&gt;</a></span><span class="message">for now if you feel strongly checksum them outside, but it's not a long-term solution</span></div><div class="line" id="013118"><span class="nick" style="color:#6d2462"><a href="#013118" label="[01:31:18]">&lt;stikonas&gt;</a></span><span class="message">maybe let's not bother then</span></div><div class="line" id="013200"><span class="nick" style="color:#80b1d3"><a href="#013200" label="[01:32:00]">&lt;fossy&gt;</a></span><span class="message">eventually all i want rootfs.sh to do is download things, copy things into a directory, and run it</span></div><div class="line" id="013510"><span class="nick" style="color:#6d2462"><a href="#013510" label="[01:35:10]">&lt;stikonas&gt;</a></span><span class="message">well, you needs those chmod, mkdir tools...</span></div><div class="line" id="013519"><span class="nick" style="color:#80b1d3"><a href="#013519" label="[01:35:19]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="013526"><span class="nick" style="color:#80b1d3"><a href="#013526" label="[01:35:26]">&lt;fossy&gt;</a></span><span class="message">which i am slowly writing for M2-planet</span></div><div class="line" id="020307"><span class="nick" style="color:#389600"><a href="#020307" label="[02:03:07]">&lt;OriansJ&gt;</a></span><span class="message">fossy: just a thought but git submodules with each submodule being a git repo just holding a single tarball.</span></div><div class="line" id="020350"><span class="nick" style="color:#389600"><a href="#020350" label="[02:03:50]">&lt;OriansJ&gt;</a></span><span class="message">So that updating of the submodules has minimal impact on the repo size</span></div><div class="line" id="020354"><span class="nick" style="color:#234e69"><a href="#020354" label="[02:03:54]">&lt;xentrac&gt;</a></span><span class="message">happy Aaron Swartz Day</span></div><div class="line" id="020618"><span class="nick" style="color:#6d2462"><a href="#020618" label="[02:06:18]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, sed worked, gzip failed for unrelated reasons, I'll investigate tomorrow...</span></div><div class="line" id="020630"><span class="nick" style="color:#6d2462"><a href="#020630" label="[02:06:30]">&lt;stikonas&gt;</a></span><span class="message">sed -i 165,174d util_patched.c</span></div><div class="line" id="020631"><span class="nick" style="color:#6d2462"><a href="#020631" label="[02:06:31]">&lt;stikonas&gt;</a></span><span class="message">sed: illegal option -- i</span></div><div class="line" id="020722"><span class="nick" style="color:#389600"><a href="#020722" label="[02:07:22]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: not yet over here but yeah.</span></div><div class="line" id="020816"><span class="nick" style="color:#234e69"><a href="#020816" label="[02:08:16]">&lt;xentrac&gt;</a></span><span class="message">yeah</span></div><div class="line" id="020843"><span class="nick" style="color:#6d2462"><a href="#020843" label="[02:08:43]">&lt;stikonas&gt;</a></span><span class="message">ok, that old sed doesn't have in place editing</span></div><div class="line" id="021008"><span class="nick" style="color:#6d2462"><a href="#021008" label="[02:10:08]">&lt;stikonas&gt;</a></span><span class="message">I made a smaller PR for now (just sed)</span></div><div class="line" id="021014"><span class="nick" style="color:#6d2462"><a href="#021014" label="[02:10:14]">&lt;stikonas&gt;</a></span><span class="message">going to bed now</span></div><div class="line" id="021035"><span class="nick" style="color:#234e69"><a href="#021035" label="[02:10:35]">&lt;xentrac&gt;</a></span><span class="message">awesome!  goodnight!</span></div><div class="line" id="021824"><span class="nick" style="color:#80b1d3"><a href="#021824" label="[02:18:24]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: thanks!!</span></div><div class="line" id="031302"><span class="nick" style="color:#389600"><a href="#031302" label="[03:13:02]">&lt;OriansJ&gt;</a></span><span class="message">fossy: I looked at the pull request for kaem and I think I have a better solution</span></div><div class="line" id="031411"><span class="nick" style="color:#389600"><a href="#031411" label="[03:14:11]">&lt;OriansJ&gt;</a></span><span class="message">much less loops but also updates enviromental vars if possible</span></div><div class="line" id="032138"><span class="nick" style="color:#389600"><a href="#032138" label="[03:21:38]">&lt;OriansJ&gt;</a></span><span class="message">and allocate even less memory while doing it</span></div><div class="line" id="032646"><span class="nick" style="color:#389600"><a href="#032646" label="[03:26:46]">&lt;OriansJ&gt;</a></span><span class="message">and catch an error case too</span></div><div class="line" id="032838"><span class="nick" style="color:#389600"><a href="#032838" label="[03:28:38]">&lt;OriansJ&gt;</a></span><span class="message">hopefully fossy you like it</span></div><div class="line" id="033503"><span class="nick" style="color:#389600"><a href="#033503" label="[03:35:03]">&lt;OriansJ&gt;</a></span><span class="message">as getting rid of old versions of a variable seem like a waste, just like creating duplicate variables. So I made add_envar update if it exists, otherwise create and then update it like it already existed.</span></div><div class="line" id="033558"><span class="nick" style="color:#389600"><a href="#033558" label="[03:35:58]">&lt;OriansJ&gt;</a></span><span class="message">and it is 24lines shorter and more straight forward</span></div><div class="line" id="041436"><span class="nick" style="color:#6c3d55"><a href="#041436" label="[04:14:36]">&lt;malina&gt;</a></span><span class="message">holy, did the classic find &quot;$unset_var&quot;/usr/include -type f -delete</span></div><div class="line" id="041512"><span class="nick" style="color:#6c3d55"><a href="#041512" label="[04:15:12]">&lt;malina&gt;</a></span><span class="message">4 yrs I had this system. bb system :D well, off to remount ro, and start grinding the recovery back.</span></div><div class="line" id="045008"><span class="nick" style="color:#234e69"><a href="#045008" label="[04:50:08]">&lt;xentrac&gt;</a></span><span class="message">bootstrap-synthesizing a CPU design: <a rel="nofollow" href="https://pbs.twimg.com/media/D18oX8TX0AEEiU2.png">https://pbs.twimg.com/media/D18oX8TX0AEEiU2.png</a> </span></div><div class="line" id="045023"><span class="nick" style="color:#234e69"><a href="#045023" label="[04:50:23]">&lt;xentrac&gt;</a></span><span class="message">from <a rel="nofollow" href="https://mobile.twitter.com/fpga_dave/status/1107648430757871618">https://mobile.twitter.com/fpga_dave/status/1107648430757871618</a> </span></div><div class="line" id="045109"><span class="nick" style="color:#234e69"><a href="#045109" label="[04:51:09]">&lt;xentrac&gt;</a></span><span class="message">it's a RISC-V core running on an ECP5 FPGA synthesizing the FPGA configuration for itself from Verilog source!</span></div><div class="line" id="045240"><span class="nick" style="color:#234e69"><a href="#045240" label="[04:52:40]">&lt;xentrac&gt;</a></span><span class="message">wait, maybe that's not what it's synthesizing.  but it's running the same Verilog synthesis program that is used to build it, even if on a different design</span></div><div class="line" id="045259"><span class="nick" style="color:#234e69"><a href="#045259" label="[04:52:59]">&lt;xentrac&gt;</a></span><span class="message">one that's a couple orders of magnitude smaller</span></div><div class="line" id="062343"><span class="nick" style="color:#80b1d3"><a href="#062343" label="[06:23:43]">&lt;fossy&gt;</a></span><span class="message">OriansJ: oops</span></div><div class="line" id="062355"><span class="nick" style="color:#80b1d3"><a href="#062355" label="[06:23:55]">&lt;fossy&gt;</a></span><span class="message">I already merged it before I saw ur comment</span></div><div class="line" id="062403"><span class="nick" style="color:#80b1d3"><a href="#062403" label="[06:24:03]">&lt;fossy&gt;</a></span><span class="message">Feel free to change it tho</span></div><div class="line" id="075017"><span class="nick" style="color:#d9d9d9"><a href="#075017" label="[07:50:17]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: fossy: i read about the 'sed' issued tcc 0.9.26 -&gt; 0.9.27 - can you link to the relevant lines in die 0.9.27 sources? &quot;git grep sed&quot; or &quot;git grep SED&quot; gives too much</span></div><div class="line" id="075030"><span class="nick" style="color:#d9d9d9"><a href="#075030" label="[07:50:30]">&lt;gforce_de1977&gt;</a></span><span class="message">(good morning to everyone)</span></div><div class="line" id="075556"><span class="nick" style="color:#80b1d3"><a href="#075556" label="[07:55:56]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: ? the issue is that tcc 0.9.27 should be patched to not support dynamic linking but that could not occur due to a lack of sed.</span></div><div class="line" id="075607"><span class="nick" style="color:#80b1d3"><a href="#075607" label="[07:56:07]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm#n858">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm#n858</a> </span></div><div class="line" id="080217"><span class="nick" style="color:#d9d9d9"><a href="#080217" label="[08:02:17]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: understand, but can not find the 'sed' call in live-bootstrap.git, can you help?</span></div><div class="line" id="080916"><span class="nick" style="color:#80b1d3"><a href="#080916" label="[08:09:16]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: sed is not currently used</span></div><div class="line" id="080923"><span class="nick" style="color:#80b1d3"><a href="#080923" label="[08:09:23]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: it has been built but not used</span></div><div class="line" id="081348"><span class="nick" style="color:#d9d9d9"><a href="#081348" label="[08:13:48]">&lt;gforce_de1977&gt;</a></span><span class="message">is the only invocation something like: sed -i 165,174d util_patched.c</span></div><div class="line" id="081353"><span class="nick" style="color:#d9d9d9"><a href="#081353" label="[08:13:53]">&lt;gforce_de1977&gt;</a></span><span class="message">?</span></div><div class="line" id="081408"><span class="nick" style="color:#d9d9d9"><a href="#081408" label="[08:14:08]">&lt;gforce_de1977&gt;</a></span><span class="message">is the only invocation something like: 'sed -i 165,174d util_patched.c' ???</span></div><div class="line" id="103155"><span class="nick" style="color:#bc80bd"><a href="#103155" label="[10:31:55]">&lt;stikonas[m]&gt;</a></span><span class="message">gforce_de1977: -i is not supported, need to fix it to use not in place...</span></div><div class="line" id="110301"><span class="nick" style="color:#d9d9d9"><a href="#110301" label="[11:03:01]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: can you say what 'sed' call is exactly needed? maybe it's better to extend 'catm' for this job (&quot;e.g. delete line 33,34,35&quot;)</span></div><div class="line" id="110528"><span class="nick" style="color:#d9d9d9"><a href="#110528" label="[11:05:28]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: or even simpler: a small c-program which does exactly this (instead of suck in a full sed)</span></div><div class="line" id="112749"><span class="nick" style="color:#80b1d3"><a href="#112749" label="[11:27:49]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: removed need for tar and gzip, please see my submodule change</span></div><div class="line" id="112759"><span class="nick" style="color:#80b1d3"><a href="#112759" label="[11:27:59]">&lt;fossy&gt;</a></span><span class="message">making a custom submodule for bash rn</span></div><div class="line" id="112837"><span class="nick" style="color:#80b1d3"><a href="#112837" label="[11:28:37]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: also idk how we can redirect the output without adding pipe support to kaem or using bash..n</span></div><div class="line" id="112948"><span class="nick" style="color:#8dd3c7"><a href="#112948" label="[11:29:48]">&lt;yt_&gt;</a></span><span class="message">OriansJ: get_machine gives me aarch64</span></div><div class="line" id="112954"><span class="nick" style="color:#8dd3c7"><a href="#112954" label="[11:29:54]">&lt;yt_&gt;</a></span><span class="message">so seems good to standardise on that</span></div><div class="line" id="113324"><span class="nick" style="color:#6d2462"><a href="#113324" label="[11:33:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok... well no redirect is problem for old sed...</span></div><div class="line" id="113333"><span class="nick" style="color:#6d2462"><a href="#113333" label="[11:33:33]">&lt;stikonas&gt;</a></span><span class="message">it can't do in place editint</span></div><div class="line" id="113342"><span class="nick" style="color:#6d2462"><a href="#113342" label="[11:33:42]">&lt;stikonas&gt;</a></span><span class="message">although, maybe newer sed can be built too</span></div><div class="line" id="113403"><span class="nick" style="color:#6d2462"><a href="#113403" label="[11:34:03]">&lt;stikonas&gt;</a></span><span class="message">fossy: so for now I'm avoiding redirect</span></div><div class="line" id="113428"><span class="nick" style="color:#80b1d3"><a href="#113428" label="[11:34:28]">&lt;fossy&gt;</a></span><span class="message">stikonas: how are you avoiding redirect?</span></div><div class="line" id="113436"><span class="nick" style="color:#80b1d3"><a href="#113436" label="[11:34:36]">&lt;fossy&gt;</a></span><span class="message">are you using sed at all</span></div><div class="line" id="113458"><span class="nick" style="color:#6d2462"><a href="#113458" label="[11:34:58]">&lt;stikonas&gt;</a></span><span class="message">I'll look at newer versions later today</span></div><div class="line" id="113509"><span class="nick" style="color:#6d2462"><a href="#113509" label="[11:35:09]">&lt;stikonas&gt;</a></span><span class="message">maybe can build something with -i option</span></div><div class="line" id="113527"><span class="nick" style="color:#80b1d3"><a href="#113527" label="[11:35:27]">&lt;fossy&gt;</a></span><span class="message">it's only 4.0 and up that have -i option, i checked</span></div><div class="line" id="113534"><span class="nick" style="color:#6d2462"><a href="#113534" label="[11:35:34]">&lt;stikonas&gt;</a></span><span class="message">I see...</span></div><div class="line" id="113549"><span class="nick" style="color:#80b1d3"><a href="#113549" label="[11:35:49]">&lt;fossy&gt;</a></span><span class="message">no idea whether we can build them</span></div><div class="line" id="113549"><span class="nick" style="color:#6d2462"><a href="#113549" label="[11:35:49]">&lt;stikonas&gt;</a></span><span class="message">in any case I think version 2 will build with very minimal changes to kaem</span></div><div class="line" id="113555"><span class="nick" style="color:#6d2462"><a href="#113555" label="[11:35:55]">&lt;stikonas&gt;</a></span><span class="message">no idea about v4</span></div><div class="line" id="113608"><span class="nick" style="color:#80b1d3"><a href="#113608" label="[11:36:08]">&lt;fossy&gt;</a></span><span class="message">janneke do you remember if you had issues building new versions of sed with tcc</span></div><div class="line" id="113705"><span class="nick" style="color:#6d2462"><a href="#113705" label="[11:37:05]">&lt;stikonas&gt;</a></span><span class="message">I don't think he tried, guix has version 1 but my tests indicate that version 2 should work... I'll later run more tests</span></div><div class="line" id="113724"><span class="nick" style="color:#80b1d3"><a href="#113724" label="[11:37:24]">&lt;fossy&gt;</a></span><span class="message">cool</span></div><div class="line" id="115101"><span class="nick" style="color:#3c5b35"><a href="#115101" label="[11:51:01]">&lt;rain1&gt;</a></span><span class="message">good omrning</span></div><div class="line" id="115251"><span class="nick" style="color:#80b1d3"><a href="#115251" label="[11:52:51]">&lt;fossy&gt;</a></span><span class="message">stikonas: here's the bash submodule FWIW, <a rel="nofollow" href="https://github.com/software-history/bash">https://github.com/software-history/bash</a>,  i'll finish it tomorrow morning</span></div><div class="line" id="115255"><span class="nick" style="color:#80b1d3"><a href="#115255" label="[11:52:55]">&lt;fossy&gt;</a></span><span class="message">my morning</span></div><div class="line" id="115307"><span class="nick" style="color:#80b1d3"><a href="#115307" label="[11:53:07]">&lt;fossy&gt;</a></span><span class="message">which is in about 10hrs</span></div><div class="line" id="115322"><span class="nick" style="color:#80b1d3"><a href="#115322" label="[11:53:22]">&lt;fossy&gt;</a></span><span class="message">well, that's when i'll be avaliable</span></div><div class="line" id="115354"><span class="nick" style="color:#80b1d3"><a href="#115354" label="[11:53:54]">&lt;fossy&gt;</a></span><span class="message">(expect force-pushes, btw)</span></div><div class="line" id="115802"><span class="nick" style="color:#6d2462"><a href="#115802" label="[11:58:02]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="115849"><span class="nick" style="color:#6d2462"><a href="#115849" label="[11:58:49]">&lt;stikonas&gt;</a></span><span class="message">do we not need make first?</span></div><div class="line" id="115859"><span class="nick" style="color:#6d2462"><a href="#115859" label="[11:58:59]">&lt;stikonas&gt;</a></span><span class="message">or are you going to build everything using kaem...</span></div><div class="line" id="120013"><span class="nick" style="color:#80b1d3"><a href="#120013" label="[12:00:13]">&lt;fossy&gt;</a></span><span class="message">stikonas: idk where to put bash in.</span></div><div class="line" id="120027"><span class="nick" style="color:#80b1d3"><a href="#120027" label="[12:00:27]">&lt;fossy&gt;</a></span><span class="message">but remember wherever make it used autotools is almost always used</span></div><div class="line" id="120104"><span class="nick" style="color:#6d2462"><a href="#120104" label="[12:01:04]">&lt;stikonas&gt;</a></span><span class="message">yeah, I know</span></div><div class="line" id="120114"><span class="nick" style="color:#6d2462"><a href="#120114" label="[12:01:14]">&lt;stikonas&gt;</a></span><span class="message">do autotools depend on bash?</span></div><div class="line" id="120130"><span class="nick" style="color:#80b1d3"><a href="#120130" label="[12:01:30]">&lt;fossy&gt;</a></span><span class="message">certinaly, the configure scripts generated by autotools need bash</span></div><div class="line" id="120138"><span class="nick" style="color:#80b1d3"><a href="#120138" label="[12:01:38]">&lt;fossy&gt;</a></span><span class="message">no other shell works</span></div><div class="line" id="120146"><span class="nick" style="color:#80b1d3"><a href="#120146" label="[12:01:46]">&lt;fossy&gt;</a></span><span class="message">well not true</span></div><div class="line" id="120153"><span class="nick" style="color:#80b1d3"><a href="#120153" label="[12:01:53]">&lt;fossy&gt;</a></span><span class="message">any POSIX shell works</span></div><div class="line" id="120158"><span class="nick" style="color:#6d2462"><a href="#120158" label="[12:01:58]">&lt;stikonas&gt;</a></span><span class="message">well, yeah, but that's similar...</span></div><div class="line" id="120214"><span class="nick" style="color:#80b1d3"><a href="#120214" label="[12:02:14]">&lt;fossy&gt;</a></span><span class="message">but kaem does not work by a long shot</span></div><div class="line" id="120223"><span class="nick" style="color:#6d2462"><a href="#120223" label="[12:02:23]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think we need to kaem script bash build</span></div><div class="line" id="120226"><span class="nick" style="color:#80b1d3"><a href="#120226" label="[12:02:26]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="120303"><span class="nick" style="color:#80b1d3"><a href="#120303" label="[12:03:03]">&lt;fossy&gt;</a></span><span class="message">we can probably go bash, perl (that will be annoying as fk), automake, autoconf</span></div><div class="line" id="120325"><span class="nick" style="color:#80b1d3"><a href="#120325" label="[12:03:25]">&lt;fossy&gt;</a></span><span class="message">, make, then first glibc+gcc+binutils</span></div><div class="line" id="120333"><span class="nick" style="color:#80b1d3"><a href="#120333" label="[12:03:33]">&lt;fossy&gt;</a></span><span class="message">and any other deps of such</span></div><div class="line" id="120340"><span class="nick" style="color:#6d2462"><a href="#120340" label="[12:03:40]">&lt;stikonas&gt;</a></span><span class="message">yeah....</span></div><div class="line" id="120354"><span class="nick" style="color:#6d2462"><a href="#120354" label="[12:03:54]">&lt;stikonas&gt;</a></span><span class="message">well, in (my evening) I'll check newer seds too</span></div><div class="line" id="120403"><span class="nick" style="color:#6d2462"><a href="#120403" label="[12:04:03]">&lt;stikonas&gt;</a></span><span class="message">maybe I'll be able to get gzip built too</span></div><div class="line" id="120407"><span class="nick" style="color:#80b1d3"><a href="#120407" label="[12:04:07]">&lt;fossy&gt;</a></span><span class="message">if we cant fix the patching problem, then ill smash out some patch like thing too</span></div><div class="line" id="120411"><span class="nick" style="color:#80b1d3"><a href="#120411" label="[12:04:11]">&lt;fossy&gt;</a></span><span class="message">👍</span></div><div class="line" id="120430"><span class="nick" style="color:#6d2462"><a href="#120430" label="[12:04:30]">&lt;stikonas&gt;</a></span><span class="message">diffutils probably works but not sure how much we need them</span></div><div class="line" id="120438"><span class="nick" style="color:#6d2462"><a href="#120438" label="[12:04:38]">&lt;stikonas&gt;</a></span><span class="message">(diff and cmp)</span></div><div class="line" id="121223"><span class="nick" style="color:#80b1d3"><a href="#121223" label="[12:12:23]">&lt;fossy&gt;</a></span><span class="message">stikonas: I think a configure script needs them</span></div><div class="line" id="124102"><span class="nick" style="color:#6d2462"><a href="#124102" label="[12:41:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, sed 2.05 does build, so there is no reason to use older</span></div><div class="line" id="124156"><span class="nick" style="color:#6d2462"><a href="#124156" label="[12:41:56]">&lt;stikonas&gt;</a></span><span class="message">I'll try even newer versions later, those have shuffled some files</span></div><div class="line" id="134503"><span class="nick" style="color:#389600"><a href="#134503" label="[13:45:03]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: as twitter requires javascript, and so everyone else knows, you can replace twitter.com with nitter.net and get the content without the javascript: <a rel="nofollow" href="https://nitter.net/fpga_dave/status/1107648430757871618">https://nitter.net/fpga_dave/status/1107648430757871618</a> </span></div><div class="line" id="134712"><span class="nick" style="color:#389600"><a href="#134712" label="[13:47:12]">&lt;OriansJ&gt;</a></span><span class="message">fossy: if you didn't notice, I spotted your merge and &quot;fixed it&quot; but reasonable call given the perspective.</span></div><div class="line" id="134927"><span class="nick" style="color:#389600"><a href="#134927" label="[13:49:27]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I think he built a smaller FPGA image because otherwise the build time would probably exceed video limits and people's patience. Unless you think there is a RAM limitation which prevents the building of an FPGA image bigger than the one currently running. To which I say *MORE RAM* please.</span></div><div class="line" id="135453"><span class="nick" style="color:#389600"><a href="#135453" label="[13:54:53]">&lt;OriansJ&gt;</a></span><span class="message">yt_: ok let us standardize on aarch64 in M2libc and I've fully standardized x86 too.</span></div><div class="line" id="151458"><span class="nick" style="color:#234e69"><a href="#151458" label="[15:14:58]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: oh, thanks!</span></div><div class="line" id="151521"><span class="nick" style="color:#234e69"><a href="#151521" label="[15:15:21]">&lt;xentrac&gt;</a></span><span class="message">yeah, I suspect there's a RAM limitation</span></div><div class="line" id="192802"><span class="nick" style="color:#6d2462"><a href="#192802" label="[19:28:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: I've solved sed bootstrap problem</span></div><div class="line" id="192932"><span class="nick" style="color:#6d2462"><a href="#192932" label="[19:29:32]">&lt;stikonas&gt;</a></span><span class="message">instead of starting with sed 1.18 we can just start with sed 4.0.7 (maybe even something newer would work but doesn't matter, 4.0.7 is much newer)</span></div><div class="line" id="192947"><span class="nick" style="color:#234e69"><a href="#192947" label="[19:29:47]">&lt;xentrac&gt;</a></span><span class="message">HOORAY</span></div><div class="line" id="193033"><span class="nick" style="color:#6d2462"><a href="#193033" label="[19:30:33]">&lt;stikonas&gt;</a></span><span class="message">so later today I should be done with tar, gzip and diffutils</span></div><div class="line" id="193105"><span class="nick" style="color:#6d2462"><a href="#193105" label="[19:31:05]">&lt;stikonas&gt;</a></span><span class="message">and if fossy wants, he can rebuild patched tcc</span></div><div class="line" id="193119"><span class="nick" style="color:#af8d2f"><a href="#193119" label="[19:31:19]">*</a></span><span class="message">xentrac high-fives stikonas </span></div><div class="line" id="193158"><span class="nick" style="color:#6d2462"><a href="#193158" label="[19:31:58]">&lt;stikonas&gt;</a></span><span class="message">having tar and gz means guile's bootar is completely unnecessary</span></div><div class="line" id="193240"><span class="nick" style="color:#234e69"><a href="#193240" label="[19:32:40]">&lt;xentrac&gt;</a></span><span class="message">really?  how do you get the sed sources without tar and gz?</span></div><div class="line" id="193257"><span class="nick" style="color:#6d2462"><a href="#193257" label="[19:32:57]">&lt;stikonas&gt;</a></span><span class="message">unpack in advance...</span></div><div class="line" id="193303"><span class="nick" style="color:#6d2462"><a href="#193303" label="[19:33:03]">&lt;stikonas&gt;</a></span><span class="message">just like M2-Planet</span></div><div class="line" id="193322"><span class="nick" style="color:#6d2462"><a href="#193322" label="[19:33:22]">&lt;stikonas&gt;</a></span><span class="message">or tcc...</span></div><div class="line" id="193339"><span class="nick" style="color:#6d2462"><a href="#193339" label="[19:33:39]">&lt;stikonas&gt;</a></span><span class="message">but we only have to do that for a limitted number of packages</span></div><div class="line" id="193448"><span class="nick" style="color:#6d2462"><a href="#193448" label="[19:34:48]">&lt;stikonas&gt;</a></span><span class="message">basically it goes mes-&gt;tcc-&gt;tcc 0.9.27-&gt;sed-&gt;tar-&gt;gz and from then we can just keep tar.gz (or .tar for gzip-1.2.4.tar)</span></div><div class="line" id="193713"><span class="nick" style="color:#389600"><a href="#193713" label="[19:37:13]">&lt;pder&gt;</a></span><span class="message">I'd like to try out live-bootstrap.  Is there a specific kernel you are using with qemu?  in rootfs.sh it is just specified as -kernel ../../kernel</span></div><div class="line" id="194111"><span class="nick" style="color:#6d2462"><a href="#194111" label="[19:41:11]">&lt;stikonas&gt;</a></span><span class="message">pder: anything should work, I just use my standard self-compiled Gentoo kernel</span></div><div class="line" id="194126"><span class="nick" style="color:#6d2462"><a href="#194126" label="[19:41:26]">&lt;stikonas&gt;</a></span><span class="message">pder: well, for now only old sed is bootstrapped</span></div><div class="line" id="194129"><span class="nick" style="color:#6d2462"><a href="#194129" label="[19:41:29]">&lt;stikonas&gt;</a></span><span class="message">in master</span></div><div class="line" id="194335"><span class="nick" style="color:#6d2462"><a href="#194335" label="[19:43:35]">&lt;stikonas&gt;</a></span><span class="message">pder: just drop your current kernel into the same folder as rootfs.sh</span></div><div class="line" id="194349"><span class="nick" style="color:#6d2462"><a href="#194349" label="[19:43:49]">&lt;stikonas&gt;</a></span><span class="message">../.. is only because it is called while in subfolder</span></div><div class="line" id="194517"><span class="nick" style="color:#6d2462"><a href="#194517" label="[19:45:17]">&lt;stikonas&gt;</a></span><span class="message">I guess you can also run it on real harware without qemu</span></div><div class="line" id="194537"><span class="nick" style="color:#6d2462"><a href="#194537" label="[19:45:37]">&lt;stikonas&gt;</a></span><span class="message">just need to pass correct initramfs file to your bootloader</span></div><div class="line" id="200911"><span class="nick" style="color:#389600"><a href="#200911" label="[20:09:11]">&lt;pder&gt;</a></span><span class="message">ok, thanks! looking forward to trying it out</span></div><div class="line" id="201504"><span class="nick" style="color:#234e69"><a href="#201504" label="[20:15:04]">&lt;xentrac&gt;</a></span><span class="message">I guess unpacked sources are easier to audit than gzipped tar files anyway</span></div><div class="line" id="201517"><span class="nick" style="color:#234e69"><a href="#201517" label="[20:15:17]">&lt;xentrac&gt;</a></span><span class="message">but harder to check against upstream tarball checksums</span></div><div class="line" id="201531"><span class="nick" style="color:#3c5b35"><a href="#201531" label="[20:15:31]">&lt;rain1&gt;</a></span><span class="message">there should never a</span></div><div class="line" id="201537"><span class="nick" style="color:#3c5b35"><a href="#201537" label="[20:15:37]">&lt;rain1&gt;</a></span><span class="message">\0 in source code</span></div><div class="line" id="201548"><span class="nick" style="color:#3c5b35"><a href="#201548" label="[20:15:48]">&lt;rain1&gt;</a></span><span class="message">so you could pack them in a simple format that is filename\0date</span></div><div class="line" id="201606"><span class="nick" style="color:#3c5b35"><a href="#201606" label="[20:16:06]">&lt;rain1&gt;</a></span><span class="message">(filename\0data\0)* sorry early enter</span></div><div class="line" id="201631"><span class="nick" style="color:#3c5b35"><a href="#201631" label="[20:16:31]">&lt;rain1&gt;</a></span><span class="message">rather than tar or anything compressed</span></div><div class="line" id="202311"><span class="nick" style="color:#234e69"><a href="#202311" label="[20:23:11]">&lt;xentrac&gt;</a></span><span class="message">yeah, if it's C source code in UTF-8, or anything similar</span></div><div class="line" id="202815"><span class="nick" style="color:#8dd3c7"><a href="#202815" label="[20:28:15]">&lt;bauen1&gt;</a></span><span class="message">rain1: never underestimate users</span></div><div class="line" id="202852"><span class="nick" style="color:#8dd3c7"><a href="#202852" label="[20:28:52]">&lt;bauen1&gt;</a></span><span class="message">at least you would have to process the source code to enusre that (e.g. remove any image files you find)</span></div><div class="line" id="203003"><span class="nick" style="color:#234e69"><a href="#203003" label="[20:30:03]">&lt;xentrac&gt;</a></span><span class="message">on CP/M (and consequently early versions of MS-DOS) it was common for source code to end with a bunch of ^Zs</span></div><div class="line" id="203024"><span class="nick" style="color:#234e69"><a href="#203024" label="[20:30:24]">&lt;xentrac&gt;</a></span><span class="message">(and other text files)</span></div><div class="line" id="203052"><span class="nick" style="color:#8dd3c7"><a href="#203052" label="[20:30:52]">&lt;bauen1&gt;</a></span><span class="message">and i would still argue that it would be best if you get an editor as early as possible so you can more easily audit the remaining source code to be compiled</span></div><div class="line" id="203054"><span class="nick" style="color:#234e69"><a href="#203054" label="[20:30:54]">&lt;xentrac&gt;</a></span><span class="message">because CP/M file sizes were measured in multiples of 128 bytes, so if you wanted your text file to end somewhere that wasn't a 128-byte boundary, you needed some in-band signaling convention to signal the end of file</span></div><div class="line" id="203205"><span class="nick" style="color:#234e69"><a href="#203205" label="[20:32:05]">&lt;xentrac&gt;</a></span><span class="message">not sure if MS-DOS 1.x had the same limitation</span></div><div class="line" id="203227"><span class="nick" style="color:#234e69"><a href="#203227" label="[20:32:27]">&lt;xentrac&gt;</a></span><span class="message">it was a reasonable tradeoff to save 7 bits per directory entry at a time when typical disks were 90 KiB</span></div><div class="line" id="203452"><span class="nick" style="color:#8dd3c7"><a href="#203452" label="[20:34:52]">&lt;bauen1&gt;</a></span><span class="message">so you could have some sort of stages hex0 -&gt; basic file viewer -&gt; pause and audit next stage -&gt; kaem -&gt; m2 -&gt; better file viewer -&gt; pause and audit next stage -&gt; tcc and on</span></div><div class="line" id="203551"><span class="nick" style="color:#234e69"><a href="#203551" label="[20:35:51]">&lt;xentrac&gt;</a></span><span class="message">that seems like a reasonable thing to do</span></div><div class="line" id="203603"><span class="nick" style="color:#8dd3c7"><a href="#203603" label="[20:36:03]">&lt;bauen1&gt;</a></span><span class="message">i suppose you could even do some fancy stuff with linuxs integrity systems to ensure that only code you've audited can be accessed (and it's derived binaries there for)</span></div><div class="line" id="203612"><span class="nick" style="color:#8dd3c7"><a href="#203612" label="[20:36:12]">&lt;bauen1&gt;</a></span><span class="message">since you're currently trusting the kernel anyway</span></div><div class="line" id="203702"><span class="nick" style="color:#234e69"><a href="#203702" label="[20:37:02]">&lt;xentrac&gt;</a></span><span class="message">no, eliminating the kernel is definitely an essential part of the plan</span></div><div class="line" id="203752"><span class="nick" style="color:#8dd3c7"><a href="#203752" label="[20:37:52]">&lt;bauen1&gt;</a></span><span class="message">xentrac: true, but you could design with this in mind</span></div><div class="line" id="203847"><span class="nick" style="color:#234e69"><a href="#203847" label="[20:38:47]">&lt;xentrac&gt;</a></span><span class="message">yes</span></div><div class="line" id="204323"><span class="nick" style="color:#8dd3c7"><a href="#204323" label="[20:43:23]">&lt;bauen1&gt;</a></span><span class="message">i'm not sure, if you're e.g. writing a minimal posix-ish kernel for bootstrapping, you could implement some forms of Mandatory Access Control and Integrity Measurements to do the above, it could be used to reduce possible user errors and make some bugs less exploitable ; but that might not be worth the effort and i might be thinking of everything as a nail</span></div><div class="line" id="204357"><span class="nick" style="color:#8dd3c7"><a href="#204357" label="[20:43:57]">&lt;bauen1&gt;</a></span><span class="message">because no matter how good you audit the source code you're about to compile, eventually you will let bugs (or even malicious code) slip by</span></div><div class="line" id="205055"><span class="nick" style="color:#8dd3c7"><a href="#205055" label="[20:50:55]">&lt;bauen1&gt;</a></span><span class="message">i think my point is thath what ever is your root of trust (hardware, the kernel, magic) should enforce that the user has reviewed a bootstrap step before it is allowed to run, and that later stages can't modify earlier stages</span></div><div class="line" id="205135"><span class="nick" style="color:#389600"><a href="#205135" label="[20:51:35]">&lt;pder&gt;</a></span><span class="message">in live-bootstrap, it appears there is a problem with the git submodules.  In the mescc-tools-seed directory, there are several submodules such as M2-Planet and mes-m2.  These do not appear to be submodules</span></div><div class="line" id="205422"><span class="nick" style="color:#234e69"><a href="#205422" label="[20:54:22]">&lt;xentrac&gt;</a></span><span class="message">that's an interesting and somewhat reasonable idea</span></div><div class="line" id="205424"><span class="nick" style="color:#8dd3c7"><a href="#205424" label="[20:54:24]">&lt;bauen1&gt;</a></span><span class="message">preventing writes up the bootstrap chain is optional, but would make editing a later bootstrap chain safer</span></div><div class="line" id="205429"><span class="nick" style="color:#234e69"><a href="#205429" label="[20:54:29]">&lt;xentrac&gt;</a></span><span class="message">yeah</span></div><div class="line" id="205714"><span class="nick" style="color:#8dd3c7"><a href="#205714" label="[20:57:14]">&lt;bauen1&gt;</a></span><span class="message">this is funny, with the (MAC) SELinux policy i've created i already have such a system in place, a process can read everything, but only edit files with a lower integrity level than itself</span></div><div class="line" id="205736"><span class="nick" style="color:#234e69"><a href="#205736" label="[20:57:36]">&lt;xentrac&gt;</a></span><span class="message">hmm, that seems bad</span></div><div class="line" id="205751"><span class="nick" style="color:#234e69"><a href="#205751" label="[20:57:51]">&lt;xentrac&gt;</a></span><span class="message">if it can read everything then it can get contaminated with low-integrity data</span></div><div class="line" id="205843"><span class="nick" style="color:#8dd3c7"><a href="#205843" label="[20:58:43]">&lt;bauen1&gt;</a></span><span class="message">xentrac: very good point, i've had the idea to also implement that, but it turns out that isn't too practical for a general purpose system (unless you have a very well defined system e.g. for bootstrapping)</span></div><div class="line" id="205921"><span class="nick" style="color:#8dd3c7"><a href="#205921" label="[20:59:21]">&lt;bauen1&gt;</a></span><span class="message">xentrac: so for now only executing files with a lower integrity is prevented</span></div><div class="line" id="205953"><span class="nick" style="color:#8dd3c7"><a href="#205953" label="[20:59:53]">&lt;bauen1&gt;</a></span><span class="message">which isn't enough since plenty of programs (every interpreter) read files and &quot;execute&quot; them without telling the linux kernel their intentions</span></div><div class="line" id="210820"><span class="nick" style="color:#234e69"><a href="#210820" label="[21:08:20]">&lt;xentrac&gt;</a></span><span class="message">well, so the minimal way it works is by having everything at a single integrity level</span></div><div class="line" id="210830"><span class="nick" style="color:#234e69"><a href="#210830" label="[21:08:30]">&lt;xentrac&gt;</a></span><span class="message">then every process can read and write every file</span></div><div class="line" id="210908"><span class="nick" style="color:#234e69"><a href="#210908" label="[21:09:08]">&lt;xentrac&gt;</a></span><span class="message">you can downgrade the process's integrity when it reads data from a lower integrity level, which keeps it from editing data that had its previous integrity level (or anything in between)</span></div><div class="line" id="210936"><span class="nick" style="color:#234e69"><a href="#210936" label="[21:09:36]">&lt;xentrac&gt;</a></span><span class="message">David Mazieres did a microkernel like this where every entity (process or file) was tagged with an integrity level and a confidentiality level</span></div><div class="line" id="210941"><span class="nick" style="color:#8dd3c7"><a href="#210941" label="[21:09:41]">&lt;bauen1&gt;</a></span><span class="message">xentrac: you still need a way to make an exception for the users editor, so it can change the integrity level of a lower file</span></div><div class="line" id="211011"><span class="nick" style="color:#234e69"><a href="#211011" label="[21:10:11]">&lt;xentrac&gt;</a></span><span class="message">you don't need to make an exception for that; that editor process just runs at the lower integrity level</span></div><div class="line" id="211049"><span class="nick" style="color:#234e69"><a href="#211049" label="[21:10:49]">&lt;xentrac&gt;</a></span><span class="message">in Mazieres' system, he enforced the classic policy that data could only flow from lower confidentiality levels to higher ones, or from higher integrity levels to lower ones</span></div><div class="line" id="211123"><span class="nick" style="color:#8dd3c7"><a href="#211123" label="[21:11:23]">&lt;bauen1&gt;</a></span><span class="message">xentrac: do you have a link ?</span></div><div class="line" id="211208"><span class="nick" style="color:#234e69"><a href="#211208" label="[21:12:08]">&lt;xentrac&gt;</a></span><span class="message">no, he told me about it in about 2002, but I don't remember the name of the paper</span></div><div class="line" id="211215"><span class="nick" style="color:#234e69"><a href="#211215" label="[21:12:15]">&lt;xentrac&gt;</a></span><span class="message">I'm pretty sure he published at least one paper</span></div><div class="line" id="211246"><span class="nick" style="color:#8dd3c7"><a href="#211246" label="[21:12:46]">&lt;bauen1&gt;</a></span><span class="message">i'll have a look around the</span></div><div class="line" id="211247"><span class="nick" style="color:#8dd3c7"><a href="#211247" label="[21:12:47]">&lt;bauen1&gt;</a></span><span class="message">*then</span></div><div class="line" id="211652"><span class="nick" style="color:#234e69"><a href="#211652" label="[21:16:52]">&lt;xentrac&gt;</a></span><span class="message">for bootstrapping integrity purposes you wouldn't need the whole confidentiality thing</span></div><div class="line" id="211758"><span class="nick" style="color:#8dd3c7"><a href="#211758" label="[21:17:58]">&lt;bauen1&gt;</a></span><span class="message">xentrac: true, but at some point you might want to, when you start handling private keys or similiar secrets, in any way it probably wouldn't be to hard to add on later</span></div><div class="line" id="211855"><span class="nick" style="color:#234e69"><a href="#211855" label="[21:18:55]">&lt;xentrac&gt;</a></span><span class="message">the interesting thing about it from my point of view (probably not novel in Mazieres' work in particular) was separating the two issues, because people tend to conflate them</span></div><div class="line" id="212021"><span class="nick" style="color:#234e69"><a href="#212021" label="[21:20:21]">&lt;xentrac&gt;</a></span><span class="message">but, working from first principles, the security requirements are opposites</span></div><div class="line" id="212106"><span class="nick" style="color:#234e69"><a href="#212106" label="[21:21:06]">&lt;xentrac&gt;</a></span><span class="message">I'm not sure how he handled the user interface; if you find out let me know</span></div><div class="line" id="212748"><span class="nick" style="color:#8dd3c7"><a href="#212748" label="[21:27:48]">&lt;bauen1&gt;</a></span><span class="message">xentrac: i think <a rel="nofollow" href="https://people.csail.mit.edu/nickolai/papers/zeldovich-dstar.pdf">https://people.csail.mit.edu/nickolai/papers/zeldovich-dstar.pdf</a>  might be what you were talking about</span></div><div class="line" id="212800"><span class="nick" style="color:#3c5b35"><a href="#212800" label="[21:28:00]">&lt;rain1&gt;</a></span><span class="message">using djb netstrings &lt;length&gt;:&lt;data&gt; you could do ([filename][data])* for packing multiple files including binaries</span></div><div class="line" id="212835"><span class="nick" style="color:#234e69"><a href="#212835" label="[21:28:35]">&lt;xentrac&gt;</a></span><span class="message">you mean &lt;length&gt;:&lt;data&gt;,</span></div><div class="line" id="212840"><span class="nick" style="color:#234e69"><a href="#212840" label="[21:28:40]">&lt;xentrac&gt;</a></span><span class="message">but yes</span></div><div class="line" id="212905"><span class="nick" style="color:#234e69"><a href="#212905" label="[21:29:05]">&lt;xentrac&gt;</a></span><span class="message">sounds difficult to audit by hand</span></div><div class="line" id="212907"><span class="nick" style="color:#3c5b35"><a href="#212907" label="[21:29:07]">&lt;rain1&gt;</a></span><span class="message">what's the coma for</span></div><div class="line" id="212935"><span class="nick" style="color:#234e69"><a href="#212935" label="[21:29:35]">&lt;xentrac&gt;</a></span><span class="message">redundancy I guess?</span></div><div class="line" id="212943"><span class="nick" style="color:#234e69"><a href="#212943" label="[21:29:43]">&lt;xentrac&gt;</a></span><span class="message">bauen1: yes, that looks right</span></div><div class="line" id="212948"><span class="nick" style="color:#234e69"><a href="#212948" label="[21:29:48]">&lt;xentrac&gt;</a></span><span class="message">I'd forgotten it was called D*</span></div><div class="line" id="213114"><span class="nick" style="color:#8dd3c7"><a href="#213114" label="[21:31:14]">&lt;bauen1&gt;</a></span><span class="message">alright, i'll give that a read sometime</span></div><div class="line" id="213211"><span class="nick" style="color:#6b8072"><a href="#213211" label="[21:32:11]">&lt;deesix&gt;</a></span><span class="message">pder, something missing --recursive, maybe?</span></div><div class="line" id="214051"><span class="nick" style="color:#bc80bd"><a href="#214051" label="[21:40:51]">&lt;stikonas[m]&gt;</a></span><span class="message">Yes,or run git submodule update</span></div><div class="line" id="214111"><span class="nick" style="color:#bc80bd"><a href="#214111" label="[21:41:11]">&lt;stikonas[m]&gt;</a></span><span class="message">You need to run it each time submodule is updated too</span></div><div class="line" id="214426"><span class="nick" style="color:#6b8072"><a href="#214426" label="[21:44:26]">&lt;deesix&gt;</a></span><span class="message">You may even want --force for the update in some cases.</span></div><div class="line" id="214830"><span class="nick" style="color:#234e69"><a href="#214830" label="[21:48:30]">&lt;xentrac&gt;</a></span><span class="message">hmm actually CP/M file sizes were 16 bits, which would seem to permit files up to a truly excessive 8 MiB, so they could have used a smaller block size to have less slack</span></div><div class="line" id="215501"><span class="nick" style="color:#6d2462"><a href="#215501" label="[21:55:01]">&lt;stikonas&gt;</a></span><span class="message">ok, hopefully will have something to push in 40 minutes for live-bootstrap, testing now</span></div><div class="line" id="215543"><span class="nick" style="color:#80b1d3"><a href="#215543" label="[21:55:43]">&lt;fossy&gt;</a></span><span class="message">stikonas: ^.^ thanks!!</span></div><div class="line" id="215650"><span class="nick" style="color:#6d2462"><a href="#215650" label="[21:56:50]">&lt;stikonas&gt;</a></span><span class="message">fossy: or maybe I can push and you can review while I'm testing</span></div><div class="line" id="215731"><span class="nick" style="color:#80b1d3"><a href="#215731" label="[21:57:31]">&lt;fossy&gt;</a></span><span class="message">sure</span></div><div class="line" id="215748"><span class="nick" style="color:#6d2462"><a href="#215748" label="[21:57:48]">&lt;stikonas&gt;</a></span><span class="message">at least 3 commits out of 4 are tested</span></div><div class="line" id="215752"><span class="nick" style="color:#6d2462"><a href="#215752" label="[21:57:52]">&lt;stikonas&gt;</a></span><span class="message">just last one needs testing</span></div><div class="line" id="215845"><span class="nick" style="color:#6d2462"><a href="#215845" label="[21:58:45]">&lt;stikonas&gt;</a></span><span class="message">wth...</span></div><div class="line" id="215846"><span class="nick" style="color:#6d2462"><a href="#215846" label="[21:58:46]">&lt;stikonas&gt;</a></span><span class="message"> Pull request creation failed. Validation failed: You can't perform that action at this time.</span></div><div class="line" id="215907"><span class="nick" style="color:#6d2462"><a href="#215907" label="[21:59:07]">&lt;stikonas&gt;</a></span><span class="message">oh, have to log out of my work account :D</span></div><div class="line" id="220041"><span class="nick" style="color:#6d2462"><a href="#220041" label="[22:00:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: pder and whoever else wants to look at: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/6">https://github.com/fosslinux/live-bootstrap/pull/6</a> </span></div><div class="line" id="220127"><span class="nick" style="color:#6d2462"><a href="#220127" label="[22:01:27]">&lt;stikonas&gt;</a></span><span class="message">fossy: one thing that didn't work for me is PATH in after.kaem.run...</span></div><div class="line" id="220141"><span class="nick" style="color:#6d2462"><a href="#220141" label="[22:01:41]">&lt;stikonas&gt;</a></span><span class="message">probably related to that discussion yesterday</span></div><div class="line" id="220153"><span class="nick" style="color:#6d2462"><a href="#220153" label="[22:01:53]">&lt;stikonas&gt;</a></span><span class="message">for cp we also use /after/bin/cp instead of cp...</span></div><div class="line" id="220232"><span class="nick" style="color:#6d2462"><a href="#220232" label="[22:02:32]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's nice that we could get sed 4 instead of sed version 1 (which guix did)</span></div><div class="line" id="221317"><span class="nick" style="color:#234e69"><a href="#221317" label="[22:13:17]">&lt;xentrac&gt;</a></span><span class="message">yeah!</span></div><div class="line" id="221831"><span class="nick" style="color:#80b1d3"><a href="#221831" label="[22:18:31]">&lt;fossy&gt;</a></span><span class="message">stikonas: i believe it's that bug that has since been fixed</span></div><div class="line" id="222359"><span class="nick" style="color:#6d2462"><a href="#222359" label="[22:23:59]">&lt;stikonas&gt;</a></span><span class="message">yeah, once kaem is updated, we can try to remove /after/bin prefix</span></div><div class="line" id="222612"><span class="nick" style="color:#6d2462"><a href="#222612" label="[22:26:12]">&lt;stikonas&gt;</a></span><span class="message">I guess we now need either bash or make...</span></div><div class="line" id="222659"><span class="nick" style="color:#80b1d3"><a href="#222659" label="[22:26:59]">&lt;fossy&gt;</a></span><span class="message">k reviewing now</span></div><div class="line" id="222709"><span class="nick" style="color:#80b1d3"><a href="#222709" label="[22:27:09]">&lt;fossy&gt;</a></span><span class="message">we might have a much simpler rust bootstrap soon - <a rel="nofollow" href="https://github.com/Rust-GCC/gccrs">https://github.com/Rust-GCC/gccrs</a> </span></div><div class="line" id="222732"><span class="nick" style="color:#6d2462"><a href="#222732" label="[22:27:32]">&lt;stikonas&gt;</a></span><span class="message">yeah, somebody showed it here yesterday</span></div><div class="line" id="222734"><span class="nick" style="color:#80b1d3"><a href="#222734" label="[22:27:34]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="222758"><span class="nick" style="color:#6d2462"><a href="#222758" label="[22:27:58]">&lt;stikonas&gt;</a></span><span class="message">but can it build rustc/cargo or not yet...</span></div><div class="line" id="223210"><span class="nick" style="color:#6d2462"><a href="#223210" label="[22:32:10]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think we are almost done with kaem scripts and soon can switch to proper shell</span></div><div class="line" id="223752"><span class="nick" style="color:#6d2462"><a href="#223752" label="[22:37:52]">&lt;stikonas&gt;</a></span><span class="message">I just realized kaem and make are anagrams. OriansJ, I guess that is intentional?</span></div><div class="line" id="223755"><span class="nick" style="color:#80b1d3"><a href="#223755" label="[22:37:55]">&lt;fossy&gt;</a></span><span class="message">stikonas: review complete</span></div><div class="line" id="223812"><span class="nick" style="color:#80b1d3"><a href="#223812" label="[22:38:12]">&lt;fossy&gt;</a></span><span class="message">only a few things, most thing i care about is a tar submodule</span></div><div class="line" id="223819"><span class="nick" style="color:#2e2a4a"><a href="#223819" label="[22:38:19]">&lt;vagrantc&gt;</a></span><span class="message">should have called it &quot;mak&quot;</span></div><div class="line" id="223826"><span class="nick" style="color:#2e2a4a"><a href="#223826" label="[22:38:26]">&lt;vagrantc&gt;</a></span><span class="message">e.g. a partial make :)</span></div><div class="line" id="223858"><span class="nick" style="color:#80b1d3"><a href="#223858" label="[22:38:58]">&lt;fossy&gt;</a></span><span class="message">stikonas: lol i think it is intential</span></div><div class="line" id="223924"><span class="nick" style="color:#6c3d55"><a href="#223924" label="[22:39:24]">&lt;malina&gt;</a></span><span class="message">wow fossy. that would be great. I have to admit, when bootstrapping rust, I wasn't exactly quiet about it. And hadn't it been for mrustc by a Australian gentleman I think, I would have probably blown the internet.  the ear drums, I mean :D</span></div><div class="line" id="223938"><span class="nick" style="color:#234e69"><a href="#223938" label="[22:39:38]">&lt;xentrac&gt;</a></span><span class="message">vagrantc: three-letter names are too hard to google</span></div><div class="line" id="223959"><span class="nick" style="color:#80b1d3"><a href="#223959" label="[22:39:59]">&lt;fossy&gt;</a></span><span class="message">malina: so they are, i did not know they were australian</span></div><div class="line" id="224026"><span class="nick" style="color:#2e2a4a"><a href="#224026" label="[22:40:26]">&lt;vagrantc&gt;</a></span><span class="message">xentrac: true enough, kaem i'm guessing is pretty unique :)</span></div><div class="line" id="224049"><span class="nick" style="color:#234e69"><a href="#224049" label="[22:40:49]">&lt;xentrac&gt;</a></span><span class="message">actually there's a graffiti artist near here who uses it as a tag</span></div><div class="line" id="224058"><span class="nick" style="color:#234e69"><a href="#224058" label="[22:40:58]">&lt;xentrac&gt;</a></span><span class="message">I keep meaning to take a photo and post it</span></div><div class="line" id="224119"><span class="nick" style="color:#6c3d55"><a href="#224119" label="[22:41:19]">&lt;malina&gt;</a></span><span class="message">ah, that was of course not so important technically, but just seem to recall he was. if it wasn't for that, and I would have to have done the entire ocaml, I would have 'hated' rust more than I do now.  it HAS come a far way now though since 2017 or so, optimised wise.. but I still am more of a D person</span></div><div class="line" id="224240"><span class="nick" style="color:#3c5b35"><a href="#224240" label="[22:42:40]">&lt;rain1&gt;</a></span><span class="message">hi</span></div><div class="line" id="224305"><span class="nick" style="color:#6c3d55"><a href="#224305" label="[22:43:05]">&lt;malina&gt;</a></span><span class="message">ok</span></div><div class="line" id="224306"><span class="nick" style="color:#6c3d55"><a href="#224306" label="[22:43:06]">&lt;malina&gt;</a></span><span class="message">:D</span></div><div class="line" id="224505"><span class="nick" style="color:#6d2462"><a href="#224505" label="[22:45:05]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, I need to check last commit first, something failed</span></div><div class="line" id="224515"><span class="nick" style="color:#6d2462"><a href="#224515" label="[22:45:15]">&lt;stikonas&gt;</a></span><span class="message">gunzip succeeded but then tar failed</span></div><div class="line" id="224610"><span class="nick" style="color:#6d2462"><a href="#224610" label="[22:46:10]">&lt;stikonas&gt;</a></span><span class="message">or maybe it created .gz.gz instead...</span></div><div class="line" id="224614"><span class="nick" style="color:#6d2462"><a href="#224614" label="[22:46:14]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="230202"><span class="nick">***</span><span class="message notice">puckipedia is now known as puck</span></div><div class="line" id="230221"><span class="nick" style="color:#80b1d3"><a href="#230221" label="[23:02:21]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm</span></div><div class="line" id="230226"><span class="nick" style="color:#80b1d3"><a href="#230226" label="[23:02:26]">&lt;fossy&gt;</a></span><span class="message">odd</span></div><div class="line" id="230328"><span class="nick" style="color:#6d2462"><a href="#230328" label="[23:03:28]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'll check once I get tar fixed...</span></div><div class="line" id="230401"><span class="nick" style="color:#6d2462"><a href="#230401" label="[23:04:01]">&lt;stikonas&gt;</a></span><span class="message">or maybe I should do that first, since testing takes some time...</span></div><div class="line" id="230656"><span class="nick" style="color:#389600"><a href="#230656" label="[23:06:56]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: my belief is a bootstrap kernel should be as small as possible in terms of lines of source code and toolchain dependencies. Ideally buildable by M2-Planet on bare metal but powerful enough to run GCC/TCC to bootstrap Linux. The features are indeed important and honestly would be better off written in Rust with formal proofs of correctness as a competitor to Linux but that is just my minimal perspective on that.</span></div><div class="line" id="230800"><span class="nick" style="color:#6d2462"><a href="#230800" label="[23:08:00]">&lt;stikonas&gt;</a></span><span class="message">tcc shoud be enough to bootstrap linux?</span></div><div class="line" id="230801"><span class="nick" style="color:#234e69"><a href="#230801" label="[23:08:01]">&lt;xentrac&gt;</a></span><span class="message">I keep wondering if formal proofs of correctness might be able to change the equation on things like Forth and APL</span></div><div class="line" id="230812"><span class="nick" style="color:#234e69"><a href="#230812" label="[23:08:12]">&lt;xentrac&gt;</a></span><span class="message">malina: were you able to recover your lamentably lost files?</span></div><div class="line" id="230852"><span class="nick" style="color:#389600"><a href="#230852" label="[23:08:52]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: well yes kaem is an anagram of make; as what I needed is the world's worst build tool possible.</span></div><div class="line" id="230930"><span class="nick" style="color:#389600"><a href="#230930" label="[23:09:30]">&lt;OriansJ&gt;</a></span><span class="message">as people love to shit on make, it only seemed fitting to name kaem after it. ^_^</span></div><div class="line" id="230936"><span class="nick" style="color:#6c3d55"><a href="#230936" label="[23:09:36]">&lt;malina&gt;</a></span><span class="message">xentrac, had a backup from when I rsynced this box to a server. So i grabbed that from may, and even the bootstrap failed (had missing c++ headers) but a reinstall of gcc and I am back in business. Basically, when I rebuild every package (which I typicaly do anyway during a full rebuild), I guess they will 'come back'</span></div><div class="line" id="231011"><span class="nick" style="color:#6c3d55"><a href="#231011" label="[23:10:11]">&lt;malina&gt;</a></span><span class="message">and iit's a blessing in disguise; as now I finally have no other option but to keep working on my boostrapping updates I been doing for a month (running away to cyberpynk sometimes).</span></div><div class="line" id="232716"><span class="nick" style="color:#234e69"><a href="#232716" label="[23:27:16]">&lt;xentrac&gt;</a></span><span class="message">that is good!</span></div><div class="line" id="234704"><span class="nick" style="color:#6d2462"><a href="#234704" label="[23:47:04]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, I think I know why last commit failed</span></div><div class="line" id="234721"><span class="nick" style="color:#6d2462"><a href="#234721" label="[23:47:21]">&lt;stikonas&gt;</a></span><span class="message">it's actually the problem in gzip commit... cp eats executable bit</span></div><div class="line" id="234912"><span class="nick" style="color:#6d2462"><a href="#234912" label="[23:49:12]">&lt;stikonas&gt;</a></span><span class="message">I guess I'll just run chmod 755...</span></div><div class="line" id="235335"><span class="nick" style="color:#6d2462"><a href="#235335" label="[23:53:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: can you review that bash function in the last commit?</span></div><div class="line" id="235354"><span class="nick" style="color:#6d2462"><a href="#235354" label="[23:53:54]">&lt;stikonas&gt;</a></span><span class="message">I'm rerunning the test now after adding chmod</span></div><div class="line" id="235435"><span class="nick" style="color:#80b1d3"><a href="#235435" label="[23:54:35]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah, i am aware that cp eats the executable bit</span></div><div class="line" id="235443"><span class="nick" style="color:#80b1d3"><a href="#235443" label="[23:54:43]">&lt;fossy&gt;</a></span><span class="message">nothing we can do about that because of no stat()</span></div><div class="line" id="235506"><span class="nick" style="color:#6d2462"><a href="#235506" label="[23:55:06]">&lt;stikonas&gt;</a></span><span class="message">yeah, I saw it before, just got caught unaware...</span></div><div class="line" id="235513"><span class="nick" style="color:#6d2462"><a href="#235513" label="[23:55:13]">&lt;stikonas&gt;</a></span><span class="message">forgot about it...</span></div><div class="line" id="235546"><span class="nick" style="color:#6d2462"><a href="#235546" label="[23:55:46]">&lt;stikonas&gt;</a></span><span class="message">in principle we only need gunzip, but I'm creating all 3 files there</span></div><div class="line" id="235755"><span class="nick" style="color:#80b1d3"><a href="#235755" label="[23:57:55]">&lt;fossy&gt;</a></span><span class="message">stikonas: you can get the bname much more simply, just use '${url%%.*}'</span></div><div class="line" id="235808"><span class="nick" style="color:#6d2462"><a href="#235808" label="[23:58:08]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="235831"><span class="nick" style="color:#80b1d3"><a href="#235831" label="[23:58:31]">&lt;fossy&gt;</a></span><span class="message">other than that looks great</span></div><div class="line" id="235855"><span class="nick" style="color:#6d2462"><a href="#235855" label="[23:58:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: that fails for me...</span></div><div class="line" id="235906"><span class="nick" style="color:#6d2462"><a href="#235906" label="[23:59:06]">&lt;stikonas&gt;</a></span><span class="message">it prints <a rel="nofollow" href="https://ftp">https://ftp</a> </span></div><div class="line" id="235914"><span class="nick" style="color:#6d2462"><a href="#235914" label="[23:59:14]">&lt;stikonas&gt;</a></span><span class="message">oh, I need basename first</span></div><div class="line" id="235919"><span class="nick" style="color:#80b1d3"><a href="#235919" label="[23:59:19]">&lt;fossy&gt;</a></span><span class="message">yah</span></div><div class="line" id="235922"><span class="nick" style="color:#80b1d3"><a href="#235922" label="[23:59:22]">&lt;fossy&gt;</a></span><span class="message">sorry</span></div><div class="line" id="235940"><span class="nick" style="color:#6d2462"><a href="#235940" label="[23:59:40]">&lt;stikonas&gt;</a></span><span class="message">hmm, still fails</span></div><div class="line" id="235945"><span class="nick" style="color:#6d2462"><a href="#235945" label="[23:59:45]">&lt;stikonas&gt;</a></span><span class="message">too many dots everywhere...</span></div><div class="line" id="235951"><span class="nick" style="color:#6d2462"><a href="#235951" label="[23:59:51]">&lt;stikonas&gt;</a></span><span class="message">in url, in version number...</span></div><br /></div></body></html>