<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2019-09-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000829"><span class="nick" style="color:#389600"><a href="#000829" label="[00:08:29]">&lt;Hagfish&gt;</a></span><span class="message">*bootstrapping intensifies*</span></div><div class="line" id="001208"><span class="nick" style="color:#8dd3c7"><a href="#001208" label="[00:12:08]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: with the goal of letting others contribute in parallel to reduce the load on individual developers. (that way we don't burn out janneke or anyone else here)</span></div><div class="line" id="001415"><span class="nick" style="color:#389600"><a href="#001415" label="[00:14:15]">&lt;Hagfish&gt;</a></span><span class="message">yeah, actually managing the intensity is the hard part</span></div><div class="line" id="001512"><span class="nick" style="color:#389600"><a href="#001512" label="[00:15:12]">&lt;Hagfish&gt;</a></span><span class="message">in a &quot;do-ocracy&quot;, it's hard to hold someone back if they have the enthusiasm and the skills, and get really attached to solving a certain problem</span></div><div class="line" id="001559"><span class="nick" style="color:#8dd3c7"><a href="#001559" label="[00:15:59]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: plus everything is now in a state where what was once laughed at as impossible is really close to done</span></div><div class="line" id="001740"><span class="nick" style="color:#389600"><a href="#001740" label="[00:17:40]">&lt;Hagfish&gt;</a></span><span class="message">are there questions about which path is the best to take, or just questions about how hard each step is?</span></div><div class="line" id="001858"><span class="nick" style="color:#8dd3c7"><a href="#001858" label="[00:18:58]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: well, in the end; we now know that writing a simple C compiler is easier than writing a proper lisp</span></div><div class="line" id="001954"><span class="nick" style="color:#8dd3c7"><a href="#001954" label="[00:19:54]">&lt;OriansJ&gt;</a></span><span class="message">So, the question is there a best path; I think is answered by saying writing a C compiler in assembler got to the goal faster than anything else</span></div><div class="line" id="002038"><span class="nick" style="color:#8dd3c7"><a href="#002038" label="[00:20:38]">&lt;OriansJ&gt;</a></span><span class="message">(Mind you this is coming from a guy who write a classic garbage collected Lisp in Assembly first)</span></div><div class="line" id="002151"><span class="nick" style="color:#8dd3c7"><a href="#002151" label="[00:21:51]">&lt;OriansJ&gt;</a></span><span class="message">If we had more assembly programmers and a better base lisp; the answer could easily been quite different</span></div><div class="line" id="002202"><span class="nick" style="color:#389600"><a href="#002202" label="[00:22:02]">&lt;Hagfish&gt;</a></span><span class="message">hmm</span></div><div class="line" id="002303"><span class="nick" style="color:#389600"><a href="#002303" label="[00:23:03]">&lt;Hagfish&gt;</a></span><span class="message">i guess people are welcome to try different designs later, if they want to scratch that itch, and after this first path has shown what's possible</span></div><div class="line" id="002406"><span class="nick" style="color:#389600"><a href="#002406" label="[00:24:06]">&lt;Hagfish&gt;</a></span><span class="message">hopefully showing the proof of possibility will attract more people than the idea itself did</span></div><div class="line" id="002428"><span class="nick" style="color:#8dd3c7"><a href="#002428" label="[00:24:28]">&lt;OriansJ&gt;</a></span><span class="message">cc_x86.s being 4395 lines of highly isolated assembly functions and lisp.s being 3414 lines of highly integrated assembly functions.</span></div><div class="line" id="002446"><span class="nick" style="color:#8dd3c7"><a href="#002446" label="[00:24:46]">&lt;OriansJ&gt;</a></span><span class="message">indeed</span></div><div class="line" id="002513"><span class="nick" style="color:#8dd3c7"><a href="#002513" label="[00:25:13]">&lt;OriansJ&gt;</a></span><span class="message">I hope someone someday comes along and does the entire bootstrap better than I could have ever dreamed</span></div><div class="line" id="002551"><span class="nick" style="color:#8dd3c7"><a href="#002551" label="[00:25:51]">&lt;OriansJ&gt;</a></span><span class="message">I just hoped to provie that it was possible and didn't require magic or anything complicated to achieve</span></div><div class="line" id="002636"><span class="nick" style="color:#8dd3c7"><a href="#002636" label="[00:26:36]">&lt;OriansJ&gt;</a></span><span class="message">M2-Planet was designed to be understood in less than 30minutes as it is a trivial state machine</span></div><div class="line" id="002714"><span class="nick" style="color:#389600"><a href="#002714" label="[00:27:14]">&lt;Hagfish&gt;</a></span><span class="message">wow, yeah, that's something that someone could think through in their lunch break</span></div><div class="line" id="002800"><span class="nick" style="color:#389600"><a href="#002800" label="[00:28:00]">&lt;Hagfish&gt;</a></span><span class="message">i do think it would be a pity if some later iteration of the bootstrapping project ended up taking all the credit away from the work you've all done already</span></div><div class="line" id="002813"><span class="nick" style="color:#389600"><a href="#002813" label="[00:28:13]">&lt;Hagfish&gt;</a></span><span class="message">like poor old Stallman, telling people to call it &quot;GNU/Linux&quot;</span></div><div class="line" id="002828"><span class="nick" style="color:#8dd3c7"><a href="#002828" label="[00:28:28]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: I expect to be forgotten</span></div><div class="line" id="002840"><span class="nick" style="color:#389600"><a href="#002840" label="[00:28:40]">&lt;Hagfish&gt;</a></span><span class="message">i expect people to write epic poems about you</span></div><div class="line" id="002851"><span class="nick" style="color:#389600"><a href="#002851" label="[00:28:51]">&lt;Hagfish&gt;</a></span><span class="message">the heroes who saved computing</span></div><div class="line" id="002921"><span class="nick" style="color:#8dd3c7"><a href="#002921" label="[00:29:21]">&lt;OriansJ&gt;</a></span><span class="message">I never wanted to be famous, only to make the world just a little bit better for everyone who cared about trust and freedom</span></div><div class="line" id="003009"><span class="nick" style="color:#389600"><a href="#003009" label="[00:30:09]">&lt;Hagfish&gt;</a></span><span class="message">yeah, fame is a bad motivation to have, but i want a society that recognises and celebrates the work of selfless people</span></div><div class="line" id="003028"><span class="nick" style="color:#389600"><a href="#003028" label="[00:30:28]">&lt;Hagfish&gt;</a></span><span class="message">anyway, food time</span></div><div class="line" id="003040"><span class="nick" style="color:#8dd3c7"><a href="#003040" label="[00:30:40]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: enjoy</span></div><div class="line" id="061322"><span class="nick" style="color:#8dd3c7"><a href="#061322" label="[06:13:22]">&lt;OriansJ&gt;</a></span><span class="message">well this is an absolute puzzle: <a rel="nofollow" href="https://paste.debian.net/1100497/">https://paste.debian.net/1100497/</a>  gets this: <a rel="nofollow" href="https://paste.debian.net/1100498/">https://paste.debian.net/1100498/</a> </span></div><div class="line" id="062435"><span class="nick" style="color:#8dd3c7"><a href="#062435" label="[06:24:35]">&lt;OriansJ&gt;</a></span><span class="message">or me assuming guile is able handle (define foo bar) (define bar 3); in that order</span></div><div class="line" id="065045"><span class="nick" style="color:#8dd3c7"><a href="#065045" label="[06:50:45]">&lt;OriansJ&gt;</a></span><span class="message">goal for tomorrow morning after I wake up: get hex2 in scheme working-ish</span></div><div class="line" id="065059"><span class="nick" style="color:#8dd3c7"><a href="#065059" label="[06:50:59]">&lt;OriansJ&gt;</a></span><span class="message">*good night*</span></div><div class="line" id="131358"><span class="nick" style="color:#6b8072"><a href="#131358" label="[13:13:58]">&lt;janneke&gt;</a></span><span class="message">OriansJ: that sounds just great</span></div><div class="line" id="131416"><span class="nick" style="color:#6b8072"><a href="#131416" label="[13:14:16]">&lt;janneke&gt;</a></span><span class="message">the current toolset has enabled us to create a bootstrap path from mescc onwards</span></div><div class="line" id="131555"><span class="nick" style="color:#6b8072"><a href="#131555" label="[13:15:55]">&lt;janneke&gt;</a></span><span class="message">the M1 and hex2 formats are really helpful and performance of mescc-tools also helps a lot</span></div><div class="line" id="131650"><span class="nick" style="color:#6b8072"><a href="#131650" label="[13:16:50]">&lt;janneke&gt;</a></span><span class="message">i will be looking at removing all non-scheme tools frome the bootstrap path of mescc onwards except for mescc-tools</span></div><div class="line" id="131728"><span class="nick" style="color:#6b8072"><a href="#131728" label="[13:17:28]">&lt;janneke&gt;</a></span><span class="message">so your plan is a perfect match, i think</span></div><div class="line" id="135102"><span class="nick" style="color:#8dd3c7"><a href="#135102" label="[13:51:02]">&lt;OriansJ&gt;</a></span><span class="message">janneke: I think I can get 70-80% of the speed of mescc-tools in scheme</span></div><div class="line" id="160548"><span class="nick" style="color:#8dd3c7"><a href="#160548" label="[16:05:48]">&lt;OriansJ&gt;</a></span><span class="message">Finished first pass of hex2 in scheme: <a rel="nofollow" href="https://paste.debian.net/1100553/">https://paste.debian.net/1100553/</a>  or atleast the bare minimal one required. I should be able to complete the second half tonight and when it is done, you'll be able to find it here: <a rel="nofollow" href="https://github.com/oriansj/slow-utils">https://github.com/oriansj/slow-utils</a> </span></div><div class="line" id="160938"><span class="nick" style="color:#6b8072"><a href="#160938" label="[16:09:38]">&lt;janneke&gt;</a></span><span class="message">OriansJ: that's fast!</span></div><div class="line" id="161156"><span class="nick" style="color:#6b8072"><a href="#161156" label="[16:11:56]">&lt;janneke&gt;</a></span><span class="message">OriansJ: you can probably use read-char (and avoid textual-ports)</span></div><div class="line" id="224350"><span class="nick" style="color:#80b1d3"><a href="#224350" label="[22:43:50]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: your slow-utils plan sounds reasonable to me</span></div><div class="line" id="224724"><span class="nick" style="color:#80b1d3"><a href="#224724" label="[22:47:24]">&lt;xentrac&gt;</a></span><span class="message">congratulations!</span></div><div class="line" id="233631"><span class="nick" style="color:#8dd3c7"><a href="#233631" label="[23:36:31]">&lt;OriansJ&gt;</a></span><span class="message">janneke: good call on the read-char; one less dependency to deal with</span></div><br /></div></body></html>