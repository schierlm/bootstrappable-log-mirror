<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-24.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="010347"><span class="nick" style="color:#389600"><a href="#010347" label="[01:03:47]">&lt;notgull&gt;</a></span><span class="message">Seems complicated to bootstrap up to UEFI. I feel like it would involve writing a lot of drivers in hex0 before anything more advanced can be used</span></div><div class="line" id="010416"><span class="nick" style="color:#8dd3c7"><a href="#010416" label="[01:04:16]">&lt;vagrantc&gt;</a></span><span class="message">hrm. ram out of sunshine.</span></div><div class="line" id="010429"><span class="nick" style="color:#8dd3c7"><a href="#010429" label="[01:04:29]">&lt;vagrantc&gt;</a></span><span class="message">got as far as + /&lt;&lt;PKGBUILDDIR&gt;&gt;/bin/mes --no-auto-compile -e main -L /usr/share/guile/site/3.0 -C /usr/lib/guile/3.0/site-ccache /&lt;&lt;PKGBUILDDIR&gt;&gt;/scripts/mescc.scm -- -m 64 -c -D HAVE_CONFIG_H=1 -I ../lib -I ../include -I ../include -I include -v -static -nostdinc -nostdlib -fno-builtin -o lib-mes-fdgetc.o ../lib/mes/fdgetc.c</span></div><div class="line" id="010523"><span class="nick" style="color:#389600"><a href="#010523" label="[01:05:23]">&lt;notgull&gt;</a></span><span class="message">Actually, depending on the hardware, you might be able to fit everything up to M0 in before you have to do DRAM initialization. So I dunno</span></div><div class="line" id="011655"><span class="nick" style="color:#2e2a4a"><a href="#011655" label="[01:16:55]">&lt;samplet&gt;</a></span><span class="message">There’s the “cache-as-RAM” trick that coreboot uses.</span></div><div class="line" id="011752"><span class="nick" style="color:#2e2a4a"><a href="#011752" label="[01:17:52]">&lt;samplet&gt;</a></span><span class="message">At least on some platforms, the DRAM initialization code runs in a pretty comfy environment.</span></div><div class="line" id="013010"><span class="nick" style="color:#389600"><a href="#013010" label="[01:30:10]">&lt;notgull&gt;</a></span><span class="message">Huh, neat</span></div><div class="line" id="013030"><span class="nick" style="color:#389600"><a href="#013030" label="[01:30:30]">&lt;notgull&gt;</a></span><span class="message">Although I'm not planning on trying. That sounds even more painful than usual</span></div><div class="line" id="013226"><span class="nick" style="color:#6b8072"><a href="#013226" label="[01:32:26]">&lt;stikonas&gt;</a></span><span class="message">notgull: well, if you have baremetal system with no usable firmware, then you definitely don't want to use UEFI...</span></div><div class="line" id="013233"><span class="nick" style="color:#6b8072"><a href="#013233" label="[01:32:33]">&lt;stikonas&gt;</a></span><span class="message">there are far simpler options</span></div><div class="line" id="013248"><span class="nick" style="color:#389600"><a href="#013248" label="[01:32:48]">&lt;notgull&gt;</a></span><span class="message">Interesting. Like what?</span></div><div class="line" id="013250"><span class="nick" style="color:#6b8072"><a href="#013250" label="[01:32:50]">&lt;stikonas&gt;</a></span><span class="message">something closer to builder-hex0 but with different I/O</span></div><div class="line" id="013256"><span class="nick" style="color:#6b8072"><a href="#013256" label="[01:32:56]">&lt;stikonas&gt;</a></span><span class="message">instead of using BIOS calls</span></div><div class="line" id="013304"><span class="nick" style="color:#6b8072"><a href="#013304" label="[01:33:04]">&lt;stikonas&gt;</a></span><span class="message">you either read/write from RAM</span></div><div class="line" id="013306"><span class="nick" style="color:#6b8072"><a href="#013306" label="[01:33:06]">&lt;stikonas&gt;</a></span><span class="message">or some other device</span></div><div class="line" id="013336"><span class="nick" style="color:#6b8072"><a href="#013336" label="[01:33:36]">&lt;stikonas&gt;</a></span><span class="message">i.e. if you can get input sources into RAM</span></div><div class="line" id="013350"><span class="nick" style="color:#6b8072"><a href="#013350" label="[01:33:50]">&lt;stikonas&gt;</a></span><span class="message">then this modified &quot;builder-hex0&quot; is basically all you need</span></div><div class="line" id="013423"><span class="nick" style="color:#6b8072"><a href="#013423" label="[01:34:23]">&lt;stikonas&gt;</a></span><span class="message">you might have to hardcore addresses rather than using nicer file open operations</span></div><div class="line" id="013428"><span class="nick" style="color:#6b8072"><a href="#013428" label="[01:34:28]">&lt;stikonas&gt;</a></span><span class="message">but other than that it's not that different</span></div><div class="line" id="013506"><span class="nick" style="color:#389600"><a href="#013506" label="[01:35:06]">&lt;notgull&gt;</a></span><span class="message">Huh, neat</span></div><div class="line" id="013650"><span class="nick" style="color:#389600"><a href="#013650" label="[01:36:50]">&lt;notgull&gt;</a></span><span class="message">Might dig around in my garage to see if I can find bootstrap capable hardware</span></div><div class="line" id="013700"><span class="nick" style="color:#389600"><a href="#013700" label="[01:37:00]">&lt;notgull&gt;</a></span><span class="message">I know my grandpa has an old Apple 2 computer lying around somewhere</span></div><div class="line" id="013750"><span class="nick" style="color:#80b1d3"><a href="#013750" label="[01:37:50]">&lt;fossy&gt;</a></span><span class="message">(fwiw, bootstrap capable hardware = a possible target for a possible bootstrap, there are no truly baremetal bootstraps yet)</span></div><div class="line" id="013838"><span class="nick" style="color:#389600"><a href="#013838" label="[01:38:38]">&lt;notgull&gt;</a></span><span class="message">I see</span></div><div class="line" id="014127"><span class="nick" style="color:#80b1d3"><a href="#014127" label="[01:41:27]">&lt;fossy&gt;</a></span><span class="message">stikonas (pder Googulator too but they're not here), what is this bios memory map thing with fiwix, and where's googulator's fix? i suspect i might be running into it...</span></div><div class="line" id="014201"><span class="nick" style="color:#6b8072"><a href="#014201" label="[01:42:01]">&lt;stikonas&gt;</a></span><span class="message">I think BIOS reserves some memory for some stuff</span></div><div class="line" id="014217"><span class="nick" style="color:#6b8072"><a href="#014217" label="[01:42:17]">&lt;stikonas&gt;</a></span><span class="message">and it passes it to OS, so that OS does not overwrite it</span></div><div class="line" id="014231"><span class="nick" style="color:#80b1d3"><a href="#014231" label="[01:42:31]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="014258"><span class="nick" style="color:#6b8072"><a href="#014258" label="[01:42:58]">&lt;stikonas&gt;</a></span><span class="message">might be memory to access devices, I'm not really sure</span></div><div class="line" id="014327"><span class="nick" style="color:#80b1d3"><a href="#014327" label="[01:43:27]">&lt;fossy&gt;</a></span><span class="message">that would check out... i added an additional disk to qemu, and getting random segfaults in fiwix stage</span></div><div class="line" id="014348"><span class="nick" style="color:#80b1d3"><a href="#014348" label="[01:43:48]">&lt;fossy&gt;</a></span><span class="message">well not random, consistent, but completely nonsensical segfaults</span></div><div class="line" id="014435"><span class="nick" style="color:#6b8072"><a href="#014435" label="[01:44:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/rick-masters/Fiwix/pull/1">https://github.com/rick-masters/Fiwix/pull/1</a> </span></div><div class="line" id="014451"><span class="nick" style="color:#80b1d3"><a href="#014451" label="[01:44:51]">&lt;fossy&gt;</a></span><span class="message">oh, it is this same thing</span></div><div class="line" id="014519"><span class="nick" style="color:#80b1d3"><a href="#014519" label="[01:45:19]">&lt;fossy&gt;</a></span><span class="message">does this actually have something to do with PAE, or is it coincidental that fixing PAE fixes the mem map? hm</span></div><div class="line" id="014710"><span class="nick" style="color:#6b8072"><a href="#014710" label="[01:47:10]">&lt;stikonas&gt;</a></span><span class="message">not sure since I haven't looked at it, but likely yes</span></div><div class="line" id="061232"><span class="nick" style="color:#80b1d3"><a href="#061232" label="[06:12:32]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/334">https://github.com/fosslinux/live-bootstrap/pull/334</a>  -- a very larger PR to refactor out many retrofitted and janky things into live-bootstrap. of particular interest to many will be the removal of sys*, and the solving of the initrd size problem</span></div><div class="line" id="160710"><span class="nick" style="color:#6d2462"><a href="#160710" label="[16:07:10]">&lt;Googulator&gt;</a></span><span class="message">fossy: just saw your simplify PR, and it raises a few questions</span></div><div class="line" id="160830"><span class="nick" style="color:#6d2462"><a href="#160830" label="[16:08:30]">&lt;Googulator&gt;</a></span><span class="message">Most importantly, does this now use disk access in Fiwix?</span></div><div class="line" id="160925"><span class="nick" style="color:#6d2462"><a href="#160925" label="[16:09:25]">&lt;Googulator&gt;</a></span><span class="message">I'm asking because Fiwix's disk support is extremely limited - the ony way I could get Fiwix to see my SATA drives on the bare metal test system was to set SATA mode to &quot;compatible IDE&quot;</span></div><div class="line" id="160942"><span class="nick" style="color:#6d2462"><a href="#160942" label="[16:09:42]">&lt;Googulator&gt;</a></span><span class="message">While builder-hex0 only manages to boot if SATA mode is set to AHCI</span></div><div class="line" id="161029"><span class="nick" style="color:#6d2462"><a href="#161029" label="[16:10:29]">&lt;Googulator&gt;</a></span><span class="message">If this isn't a limitation specific to my board, then that leaves no SATA setting that can complete the bootstrap</span></div><div class="line" id="161113"><span class="nick" style="color:#6d2462"><a href="#161113" label="[16:11:13]">&lt;Googulator&gt;</a></span><span class="message">&amp; I can't use a real IDE drive either, as my board, like most from that era, uses a JMicron IDE controller that's not supported in Fiwix</span></div><div class="line" id="163702"><span class="nick" style="color:#234e69"><a href="#163702" label="[16:37:02]">&lt;oriansj&gt;</a></span><span class="message">that can complete the bootstrap without human interaction</span></div><div class="line" id="163738"><span class="nick" style="color:#234e69"><a href="#163738" label="[16:37:38]">&lt;oriansj&gt;</a></span><span class="message">as you could do AHCI mode and maanually set the value to compatible IDE prior to booting Fiwix</span></div><div class="line" id="163938"><span class="nick" style="color:#6d2462"><a href="#163938" label="[16:39:38]">&lt;Googulator&gt;</a></span><span class="message">Fiwix is still started via kexec</span></div><div class="line" id="163952"><span class="nick" style="color:#6d2462"><a href="#163952" label="[16:39:52]">&lt;Googulator&gt;</a></span><span class="message">so no reboot to switch SATA mode in between</span></div><div class="line" id="164006"><span class="nick" style="color:#6d2462"><a href="#164006" label="[16:40:06]">&lt;Googulator&gt;</a></span><span class="message">(or you have just erased the sole copy of the Fiwix binary from memory)</span></div><div class="line" id="164535"><span class="nick" style="color:#234e69"><a href="#164535" label="[16:45:35]">&lt;oriansj&gt;</a></span><span class="message">Googulator: thank you for that correction.</span></div><div class="line" id="164609"><span class="nick" style="color:#6c3d55"><a href="#164609" label="[16:46:09]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, I would definitely want to run bootstrap on hardware where fiwix can't use disk directly...</span></div><div class="line" id="164746"><span class="nick" style="color:#6c3d55"><a href="#164746" label="[16:47:46]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Fiwix probably can't do NVMe either</span></div><div class="line" id="165128"><span class="nick" style="color:#d9d9d9"><a href="#165128" label="[16:51:28]">&lt;GoogulatorMobile&gt;</a></span><span class="message">To add to the earlier discussion about finding the ideal &quot;true bare metal&quot; bootstrap HW: RK3588 may be as good as it gets, if you're willing to trust ARM Cortex cores and a 64kB (IIRC) embedded mask ROM</span></div><div class="line" id="165147"><span class="nick" style="color:#d9d9d9"><a href="#165147" label="[16:51:47]">&lt;GoogulatorMobile&gt;</a></span><span class="message">The only real obstacle right now is LPDDR4x training, which isn't yet supported in u-boot SPL or any other open source project, and is currently done via a blob :(</span></div><div class="line" id="165157"><span class="nick" style="color:#d9d9d9"><a href="#165157" label="[16:51:57]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Until you do DDR training, you have 1MB of onboard SRAM at your disposal</span></div><div class="line" id="171007"><span class="nick" style="color:#6c3d55"><a href="#171007" label="[17:10:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; GoogulatorMobile: how is it better over rk3399?</span></div><div class="line" id="171034"><span class="nick" style="color:#6c3d55"><a href="#171034" label="[17:10:34]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Is it because of more SRAM?</span></div><div class="line" id="171111"><span class="nick" style="color:#6c3d55"><a href="#171111" label="[17:11:11]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; rk3399 can run blobless (with some limitations)</span></div><div class="line" id="171330"><span class="nick" style="color:#6c3d55"><a href="#171330" label="[17:13:30]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; And ROM there is only 32K</span></div><div class="line" id="171650"><span class="nick" style="color:#d9d9d9"><a href="#171650" label="[17:16:50]">&lt;GoogulatorMobile&gt;</a></span><span class="message">That's even better then - assuming we have the same level of documentation</span></div><div class="line" id="171718"><span class="nick" style="color:#d9d9d9"><a href="#171718" label="[17:17:18]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&amp; the same ease of booting a custom 1st stage loader</span></div><div class="line" id="171752"><span class="nick" style="color:#d9d9d9"><a href="#171752" label="[17:17:52]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Does 3399 also have 1MB of SRAM available right out of the boot ROM?</span></div><div class="line" id="174938"><span class="nick" style="color:#6c3d55"><a href="#174938" label="[17:49:38]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; No, I think just 200 KiB</span></div><div class="line" id="175134"><span class="nick" style="color:#6c3d55"><a href="#175134" label="[17:51:34]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Normally bootrom loads u-boot TPL, then it returns back to bootrom, then it loads SPL which then loads full uboot</span></div><div class="line" id="175153"><span class="nick" style="color:#6c3d55"><a href="#175153" label="[17:51:53]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; And I think dram training is done in TPL</span></div><div class="line" id="175229"><span class="nick" style="color:#6c3d55"><a href="#175229" label="[17:52:29]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Actually there is also ATF between SPL and uboot proper</span></div><div class="line" id="181123"><span class="nick" style="color:#6d2462"><a href="#181123" label="[18:11:23]">&lt;Googulator&gt;</a></span><span class="message">Yeah, ATF handles dropping from EL3 to EL2</span></div><div class="line" id="230237"><span class="nick" style="color:#80b1d3"><a href="#230237" label="[23:02:37]">&lt;fossy&gt;</a></span><span class="message">GoogulatorMobile, stikonas: yes, it does use disk access in Fiwix. there's a few tradeoffs we have to consider here</span></div><div class="line" id="230355"><span class="nick" style="color:#6b8072"><a href="#230355" label="[23:03:55]">&lt;stikonas&gt;</a></span><span class="message">hmm, I'm worried that will break it for most available hardware...</span></div><div class="line" id="230428"><span class="nick" style="color:#6b8072"><a href="#230428" label="[23:04:28]">&lt;stikonas&gt;</a></span><span class="message">so it will be mostly limitted to qemu and some old hardware</span></div><div class="line" id="230450"><span class="nick" style="color:#80b1d3"><a href="#230450" label="[23:04:50]">&lt;fossy&gt;</a></span><span class="message">pros: allows for effectively infinite expansion of pre-Linux; allows for the use of lower-RAM systems than 4G; allows for use of repo in fiwix stage</span></div><div class="line" id="230500"><span class="nick" style="color:#80b1d3"><a href="#230500" label="[23:05:00]">&lt;fossy&gt;</a></span><span class="message">cons: breaks a lot of widely available bare metal hardware</span></div><div class="line" id="230522"><span class="nick" style="color:#80b1d3"><a href="#230522" label="[23:05:22]">&lt;fossy&gt;</a></span><span class="message">Linux kernel as seed does still work</span></div><div class="line" id="230601"><span class="nick" style="color:#80b1d3"><a href="#230601" label="[23:06:01]">&lt;fossy&gt;</a></span><span class="message">so the question is do we continue to work with the constraints of losing the pros to bring the kernel bootstrap to a wider range or bare metal systems?</span></div><div class="line" id="230605"><span class="nick" style="color:#bc80bd"><a href="#230605" label="[23:06:05]">&lt;muurkha&gt;</a></span><span class="message">car: a</span></div><div class="line" id="230610"><span class="nick" style="color:#bc80bd"><a href="#230610" label="[23:06:10]">&lt;muurkha&gt;</a></span><span class="message">cdr: few tradeoffs ...</span></div><div class="line" id="230644"><span class="nick" style="color:#80b1d3"><a href="#230644" label="[23:06:44]">&lt;fossy&gt;</a></span><span class="message">an alternative tradeoff could be giving the option for more distfiles to be brought into the initrd and thus allowing the use of no disk...</span></div><div class="line" id="231007"><span class="nick" style="color:#d9d9d9"><a href="#231007" label="[23:10:07]">&lt;GoogulatorMobile&gt;</a></span><span class="message">The question is which one is easier to implement in Fiwix; AHCI, or ext2 autoexpansion</span></div><div class="line" id="231032"><span class="nick" style="color:#80b1d3"><a href="#231032" label="[23:10:32]">&lt;fossy&gt;</a></span><span class="message">how do you mean, ext2 autoexpansion?</span></div><div class="line" id="231107"><span class="nick" style="color:#d9d9d9"><a href="#231107" label="[23:11:07]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Passing a ~300MB initrd to Fiwix, but having it reserve 1280+ MB</span></div><div class="line" id="231141"><span class="nick" style="color:#d9d9d9"><a href="#231141" label="[23:11:41]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Then, when Fiwix sees that the FS is smaller than the ramdisk it's on, it does the equivalent of a resize2fs before mounting it as root</span></div><div class="line" id="231155"><span class="nick" style="color:#80b1d3"><a href="#231155" label="[23:11:55]">&lt;fossy&gt;</a></span><span class="message">i'm a bit lost. why do we need that?</span></div><div class="line" id="231234"><span class="nick" style="color:#d9d9d9"><a href="#231234" label="[23:12:34]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Because the limiting factor for initrd size is builder-hex0's memory map</span></div><div class="line" id="231319"><span class="nick" style="color:#d9d9d9"><a href="#231319" label="[23:13:19]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Specifically, beyond 1152MB (on qemu - exact limit is BIOS-dependent), builder-hex0 will allocate part of the initrd in MMIO space</span></div><div class="line" id="231349"><span class="nick" style="color:#d9d9d9"><a href="#231349" label="[23:13:49]">&lt;GoogulatorMobile&gt;</a></span><span class="message">(1280MB is tolerable even in qemu with the double Linux tarball removed from srcfs, but that's only a temporary reprieve)</span></div><div class="line" id="231401"><span class="nick" style="color:#80b1d3"><a href="#231401" label="[23:14:01]">&lt;fossy&gt;</a></span><span class="message">ah - ok</span></div><div class="line" id="231426"><span class="nick" style="color:#80b1d3"><a href="#231426" label="[23:14:26]">&lt;fossy&gt;</a></span><span class="message">i am keeping in mind that expansion of the initrd also means an increased load on RAM requirement</span></div><div class="line" id="231437"><span class="nick" style="color:#d9d9d9"><a href="#231437" label="[23:14:37]">&lt;GoogulatorMobile&gt;</a></span><span class="message">My problem is that it's not _some_ hardware that we lose support for</span></div><div class="line" id="231447"><span class="nick" style="color:#d9d9d9"><a href="#231447" label="[23:14:47]">&lt;GoogulatorMobile&gt;</a></span><span class="message">It's _all_ viable hardware</span></div><div class="line" id="231458"><span class="nick" style="color:#d9d9d9"><a href="#231458" label="[23:14:58]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Or at least the vast majority</span></div><div class="line" id="231534"><span class="nick" style="color:#d9d9d9"><a href="#231534" label="[23:15:34]">&lt;GoogulatorMobile&gt;</a></span><span class="message">There are very few motherboards out there with a true legacy IDE controller that can also support 4GB RAM</span></div><div class="line" id="231537"><span class="nick" style="color:#d9d9d9"><a href="#231537" label="[23:15:37]">&lt;GoogulatorMobile&gt;</a></span><span class="message">If any</span></div><div class="line" id="231620"><span class="nick" style="color:#80b1d3"><a href="#231620" label="[23:16:20]">&lt;fossy&gt;</a></span><span class="message">the loss of hardware support is a bit more than i am comfortable with considering a few of these issues, true</span></div><div class="line" id="231627"><span class="nick" style="color:#80b1d3"><a href="#231627" label="[23:16:27]">&lt;fossy&gt;</a></span><span class="message">we don't need 4GB RAM with a disk though</span></div><div class="line" id="231642"><span class="nick" style="color:#80b1d3"><a href="#231642" label="[23:16:42]">&lt;fossy&gt;</a></span><span class="message">i haven't tested exactly what it is but i suspect its around 2GB</span></div><div class="line" id="231654"><span class="nick" style="color:#d9d9d9"><a href="#231654" label="[23:16:54]">&lt;GoogulatorMobile&gt;</a></span><span class="message">The only boards that supported 4GB before the industry transitioned to AHCI + JMicron were expensive server ones, which usually have SCSI, not IDE</span></div><div class="line" id="231749"><span class="nick" style="color:#d9d9d9"><a href="#231749" label="[23:17:49]">&lt;GoogulatorMobile&gt;</a></span><span class="message">In fact, I'm not sure if qemu is even emulate such hardware</span></div><div class="line" id="231758"><span class="nick" style="color:#d9d9d9"><a href="#231758" label="[23:17:58]">&lt;GoogulatorMobile&gt;</a></span><span class="message">*even able to</span></div><div class="line" id="231843"><span class="nick" style="color:#d9d9d9"><a href="#231843" label="[23:18:43]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I wonder if that's the reason kernel bootstrap is failing with the refactor</span></div><div class="line" id="231940"><span class="nick" style="color:#80b1d3"><a href="#231940" label="[23:19:40]">&lt;fossy&gt;</a></span><span class="message">hmm, could you elaborate a bit? fiwix is able to mount the disk at least in the refactor</span></div><div class="line" id="231950"><span class="nick" style="color:#6b8072"><a href="#231950" label="[23:19:50]">&lt;stikonas&gt;</a></span><span class="message">well, RAM is cheap these days</span></div><div class="line" id="232000"><span class="nick" style="color:#d9d9d9"><a href="#232000" label="[23:20:00]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&quot;these days&quot;</span></div><div class="line" id="232004"><span class="nick" style="color:#80b1d3"><a href="#232004" label="[23:20:04]">&lt;fossy&gt;</a></span><span class="message">not on older hardware...</span></div><div class="line" id="232014"><span class="nick" style="color:#d9d9d9"><a href="#232014" label="[23:20:14]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Issue isn't cheapness or even availability of RAM itself</span></div><div class="line" id="232026"><span class="nick" style="color:#6b8072"><a href="#232026" label="[23:20:26]">&lt;stikonas&gt;</a></span><span class="message">well, yes, older hardware might not support 4 GiB...</span></div><div class="line" id="232039"><span class="nick" style="color:#d9d9d9"><a href="#232039" label="[23:20:39]">&lt;GoogulatorMobile&gt;</a></span><span class="message">But finding a motherboard old enough to have true legacy PCI IDE, but new enough to support 4GB or even 2GB RAM</span></div><div class="line" id="232048"><span class="nick" style="color:#6b8072"><a href="#232048" label="[23:20:48]">&lt;stikonas&gt;</a></span><span class="message">but you should also look longer term</span></div><div class="line" id="232058"><span class="nick" style="color:#6b8072"><a href="#232058" label="[23:20:58]">&lt;stikonas&gt;</a></span><span class="message">x86 bootstrap will be quite broken in 15 years</span></div><div class="line" id="232117"><span class="nick" style="color:#6b8072"><a href="#232117" label="[23:21:17]">&lt;stikonas&gt;</a></span><span class="message">so we'll either have to rewind clocks for bootstrap</span></div><div class="line" id="232123"><span class="nick" style="color:#6b8072"><a href="#232123" label="[23:21:23]">&lt;stikonas&gt;</a></span><span class="message">or switch to x86_64</span></div><div class="line" id="232139"><span class="nick" style="color:#80b1d3"><a href="#232139" label="[23:21:39]">&lt;fossy&gt;</a></span><span class="message">ideally in 15 years we'd be using riscv bootstrap or some other more open chip :P</span></div><div class="line" id="232152"><span class="nick" style="color:#6b8072"><a href="#232152" label="[23:21:52]">&lt;stikonas&gt;</a></span><span class="message">perhaps...</span></div><div class="line" id="232234"><span class="nick" style="color:#6b8072"><a href="#232234" label="[23:22:34]">&lt;stikonas&gt;</a></span><span class="message">GoogulatorMobile: so how much space we have if we remove double linux tarball?</span></div><div class="line" id="232249"><span class="nick" style="color:#d9d9d9"><a href="#232249" label="[23:22:49]">&lt;GoogulatorMobile&gt;</a></span><span class="message">IIRC 1350MB</span></div><div class="line" id="232319"><span class="nick" style="color:#80b1d3"><a href="#232319" label="[23:23:19]">&lt;fossy&gt;</a></span><span class="message">how did the kernel bootstrap *ever* work if the limit is 1152MB for the initrd?</span></div><div class="line" id="232332"><span class="nick" style="color:#80b1d3"><a href="#232332" label="[23:23:32]">&lt;fossy&gt;</a></span><span class="message">was the ramdisk somehow larger?</span></div><div class="line" id="232408"><span class="nick" style="color:#6b8072"><a href="#232408" label="[23:24:08]">&lt;stikonas&gt;</a></span><span class="message">1350 MB is free space in 4 GiB memory, not just initrd</span></div><div class="line" id="232411"><span class="nick" style="color:#6b8072"><a href="#232411" label="[23:24:11]">&lt;stikonas&gt;</a></span><span class="message">or am I confused?</span></div><div class="line" id="232418"><span class="nick" style="color:#80b1d3"><a href="#232418" label="[23:24:18]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="232423"><span class="nick" style="color:#80b1d3"><a href="#232423" label="[23:24:23]">&lt;fossy&gt;</a></span><span class="message">that would make more sense lol</span></div><div class="line" id="232654"><span class="nick" style="color:#6b8072"><a href="#232654" label="[23:26:54]">&lt;stikonas&gt;</a></span><span class="message">I guess in the early bootstrap mes uses a lot of memory...</span></div><div class="line" id="232719"><span class="nick" style="color:#80b1d3"><a href="#232719" label="[23:27:19]">&lt;fossy&gt;</a></span><span class="message">it's still &lt;1GB isn't it? i could be fairly wrong about that though</span></div><div class="line" id="232739"><span class="nick" style="color:#6b8072"><a href="#232739" label="[23:27:39]">&lt;stikonas&gt;</a></span><span class="message">not so sure...</span></div><div class="line" id="232752"><span class="nick" style="color:#3c5b35"><a href="#232752" label="[23:27:52]">&lt;Googul8rMobile&gt;</a></span><span class="message">Peak usage stays below 1152MB on the disk with the current kernel config on master</span></div><div class="line" id="232801"><span class="nick" style="color:#3c5b35"><a href="#232801" label="[23:28:01]">&lt;Googul8rMobile&gt;</a></span><span class="message">But that config is only good for qemu</span></div><div class="line" id="232813"><span class="nick" style="color:#80b1d3"><a href="#232813" label="[23:28:13]">&lt;fossy&gt;</a></span><span class="message">yes, because of mem map, correct?</span></div><div class="line" id="232819"><span class="nick" style="color:#6b8072"><a href="#232819" label="[23:28:19]">&lt;stikonas&gt;</a></span><span class="message">no, because of missing drivers</span></div><div class="line" id="232828"><span class="nick" style="color:#3c5b35"><a href="#232828" label="[23:28:28]">&lt;Googul8rMobile&gt;</a></span><span class="message">1350 is the total space available for initrd to grow, without hitting MMIO in builder-hex0</span></div><div class="line" id="232838"><span class="nick" style="color:#6b8072"><a href="#232838" label="[23:28:38]">&lt;stikonas&gt;</a></span><span class="message">we don't have any e.g. ethernet drivers, probably not much storage either</span></div><div class="line" id="232851"><span class="nick" style="color:#bc80bd"><a href="#232851" label="[23:28:51]">&lt;muurkha&gt;</a></span><span class="message">fossy: 1 GiB is still 16 times the size of the RAM on the machine I compiled Linux on most</span></div><div class="line" id="232852"><span class="nick" style="color:#80b1d3"><a href="#232852" label="[23:28:52]">&lt;fossy&gt;</a></span><span class="message">OH</span></div><div class="line" id="232854"><span class="nick" style="color:#80b1d3"><a href="#232854" label="[23:28:54]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="232902"><span class="nick" style="color:#3c5b35"><a href="#232902" label="[23:29:02]">&lt;Googul8rMobile&gt;</a></span><span class="message">And most importantly no console except serial</span></div><div class="line" id="232927"><span class="nick" style="color:#80b1d3"><a href="#232927" label="[23:29:27]">&lt;fossy&gt;</a></span><span class="message">muurkha: you compiled modern linux on 64MB RAM??</span></div><div class="line" id="232928"><span class="nick" style="color:#6b8072"><a href="#232928" label="[23:29:28]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's not nice on baremetal...</span></div><div class="line" id="232944"><span class="nick" style="color:#6b8072"><a href="#232944" label="[23:29:44]">&lt;stikonas&gt;</a></span><span class="message">probably not on modern...</span></div><div class="line" id="232946"><span class="nick" style="color:#3c5b35"><a href="#232946" label="[23:29:46]">&lt;Googul8rMobile&gt;</a></span><span class="message">Even serial console may not work on anything but qemu</span></div><div class="line" id="233010"><span class="nick" style="color:#6b8072"><a href="#233010" label="[23:30:10]">&lt;stikonas&gt;</a></span><span class="message">still linux kernel with reasonable amount of drivers is not that big</span></div><div class="line" id="233011"><span class="nick" style="color:#bc80bd"><a href="#233011" label="[23:30:11]">&lt;muurkha&gt;</a></span><span class="message">fossy: yes, many times</span></div><div class="line" id="233014"><span class="nick" style="color:#80b1d3"><a href="#233014" label="[23:30:14]">&lt;fossy&gt;</a></span><span class="message">Googul8rMobile: thank you for looking into these bare metal issues, by the way, it has been very enlightening and helpful as to some of the challenges we face in that regard</span></div><div class="line" id="233014"><span class="nick" style="color:#3c5b35"><a href="#233014" label="[23:30:14]">&lt;Googul8rMobile&gt;</a></span><span class="message">Modeen x86 hardware is essentially useless for baremetal already</span></div><div class="line" id="233023"><span class="nick" style="color:#bc80bd"><a href="#233023" label="[23:30:23]">&lt;muurkha&gt;</a></span><span class="message">if by &quot;modern&quot; we mean &quot;Linux 2.0&quot;</span></div><div class="line" id="233029"><span class="nick" style="color:#80b1d3"><a href="#233029" label="[23:30:29]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="233043"><span class="nick" style="color:#bc80bd"><a href="#233043" label="[23:30:43]">&lt;muurkha&gt;</a></span><span class="message">as opposed to 1.2</span></div><div class="line" id="233112"><span class="nick" style="color:#6b8072"><a href="#233112" label="[23:31:12]">&lt;stikonas&gt;</a></span><span class="message">we just need ethernet, storage and some display drivers</span></div><div class="line" id="233122"><span class="nick" style="color:#3c5b35"><a href="#233122" label="[23:31:22]">&lt;Googul8rMobile&gt;</a></span><span class="message">&amp; USB</span></div><div class="line" id="233125"><span class="nick" style="color:#6b8072"><a href="#233125" label="[23:31:25]">&lt;stikonas&gt;</a></span><span class="message">well, that too</span></div><div class="line" id="233128"><span class="nick" style="color:#6b8072"><a href="#233128" label="[23:31:28]">&lt;stikonas&gt;</a></span><span class="message">for keyboard...</span></div><div class="line" id="233133"><span class="nick" style="color:#6b8072"><a href="#233133" label="[23:31:33]">&lt;stikonas&gt;</a></span><span class="message">and possibly storage</span></div><div class="line" id="233146"><span class="nick" style="color:#3c5b35"><a href="#233146" label="[23:31:46]">&lt;Googul8rMobile&gt;</a></span><span class="message">Funny thing is, USB isn't _disabled_ now</span></div><div class="line" id="233206"><span class="nick" style="color:#3c5b35"><a href="#233206" label="[23:32:06]">&lt;Googul8rMobile&gt;</a></span><span class="message">It's _locked down_ with an option to refuse recognizing external hubs enabled</span></div><div class="line" id="233227"><span class="nick" style="color:#80b1d3"><a href="#233227" label="[23:32:27]">&lt;fossy&gt;</a></span><span class="message">that is not intentional, i will say</span></div><div class="line" id="233237"><span class="nick" style="color:#80b1d3"><a href="#233237" label="[23:32:37]">&lt;fossy&gt;</a></span><span class="message">the config was created as just something that worked on qemu</span></div><div class="line" id="233330"><span class="nick" style="color:#3c5b35"><a href="#233330" label="[23:33:30]">&lt;Googul8rMobile&gt;</a></span><span class="message">Also, on bare metal, I could just patch initrd to 1280MB and do nothing else, and it would work (with the right Linux config, of course)</span></div><div class="line" id="233335"><span class="nick" style="color:#6b8072"><a href="#233335" label="[23:33:35]">&lt;stikonas&gt;</a></span><span class="message">perhaps config should be configurable</span></div><div class="line" id="233341"><span class="nick" style="color:#3c5b35"><a href="#233341" label="[23:33:41]">&lt;Googul8rMobile&gt;</a></span><span class="message">But when I ran the same code on qemu, it died</span></div><div class="line" id="233344"><span class="nick" style="color:#6b8072"><a href="#233344" label="[23:33:44]">&lt;stikonas&gt;</a></span><span class="message">at least on baremetal</span></div><div class="line" id="233408"><span class="nick" style="color:#3c5b35"><a href="#233408" label="[23:34:08]">&lt;Googul8rMobile&gt;</a></span><span class="message">Because my particular baremetal board puts MMIO @ 0xD0000000</span></div><div class="line" id="233414"><span class="nick" style="color:#80b1d3"><a href="#233414" label="[23:34:14]">&lt;fossy&gt;</a></span><span class="message">hmmm, that maybe does make sense given that kernel variation is one of the things we already do allow....</span></div><div class="line" id="233418"><span class="nick" style="color:#3c5b35"><a href="#233418" label="[23:34:18]">&lt;Googul8rMobile&gt;</a></span><span class="message">qemu instead @ 0xC0000000</span></div><div class="line" id="233446"><span class="nick" style="color:#3c5b35"><a href="#233446" label="[23:34:46]">&lt;Googul8rMobile&gt;</a></span><span class="message">Actually, we have a little more space, now that I remember</span></div><div class="line" id="233525"><span class="nick" style="color:#3c5b35"><a href="#233525" label="[23:35:25]">&lt;Googul8rMobile&gt;</a></span><span class="message">I measured 70MB of space remaining between MMIO and the 1280MB initrd in qemu (with double Linux removed)</span></div><div class="line" id="233536"><span class="nick" style="color:#3c5b35"><a href="#233536" label="[23:35:36]">&lt;Googul8rMobile&gt;</a></span><span class="message">And 78MB free space on initrd at peak usage</span></div><div class="line" id="233557"><span class="nick" style="color:#3c5b35"><a href="#233557" label="[23:35:57]">&lt;Googul8rMobile&gt;</a></span><span class="message">But the latter actually included my &quot;bring over early artifacts&quot; tarball in initrd</span></div><div class="line" id="233647"><span class="nick" style="color:#80b1d3"><a href="#233647" label="[23:36:47]">&lt;fossy&gt;</a></span><span class="message">how are you measuring this, out of interest</span></div><div class="line" id="233725"><span class="nick" style="color:#6b8072"><a href="#233725" label="[23:37:25]">&lt;stikonas&gt;</a></span><span class="message">we probably don't need to bring that many artifacts...</span></div><div class="line" id="233728"><span class="nick" style="color:#3c5b35"><a href="#233728" label="[23:37:28]">&lt;Googul8rMobile&gt;</a></span><span class="message">Inside the initrd, I just wrote a file until NSLoD, then ls -l on it</span></div><div class="line" id="233736"><span class="nick" style="color:#6b8072"><a href="#233736" label="[23:37:36]">&lt;stikonas&gt;</a></span><span class="message">e.g. rather than bringing linux kernel to sysc, you can always rebuild it again</span></div><div class="line" id="233750"><span class="nick" style="color:#3c5b35"><a href="#233750" label="[23:37:50]">&lt;Googul8rMobile&gt;</a></span><span class="message">Went up to 78MB before it ran out of space</span></div><div class="line" id="233754"><span class="nick" style="color:#6b8072"><a href="#233754" label="[23:37:54]">&lt;stikonas&gt;</a></span><span class="message">perhaps even build newer one...</span></div><div class="line" id="233827"><span class="nick" style="color:#3c5b35"><a href="#233827" label="[23:38:27]">&lt;Googul8rMobile&gt;</a></span><span class="message">Between top of initrd and MMIO, I just took the address printed by kexec-fiwix and added 1280MB</span></div><div class="line" id="233838"><span class="nick" style="color:#3c5b35"><a href="#233838" label="[23:38:38]">&lt;Googul8rMobile&gt;</a></span><span class="message">Then subtracted that from the staet of MMIO</span></div><div class="line" id="233845"><span class="nick" style="color:#3c5b35"><a href="#233845" label="[23:38:45]">&lt;Googul8rMobile&gt;</a></span><span class="message">*start</span></div><div class="line" id="233919"><span class="nick" style="color:#3c5b35"><a href="#233919" label="[23:39:19]">&lt;Googul8rMobile&gt;</a></span><span class="message">Revealing 70MB of gap</span></div><div class="line" id="233939"><span class="nick" style="color:#80b1d3"><a href="#233939" label="[23:39:39]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="233942"><span class="nick" style="color:#3c5b35"><a href="#233942" label="[23:39:42]">&lt;Googul8rMobile&gt;</a></span><span class="message">srcfs size can be reduced even more by recompressing all gzs as bz2</span></div><div class="line" id="233958"><span class="nick" style="color:#3c5b35"><a href="#233958" label="[23:39:58]">&lt;Googul8rMobile&gt;</a></span><span class="message">Just recompresisng linux 4.9 already gets us below 256MiB</span></div><div class="line" id="234010"><span class="nick" style="color:#6b8072"><a href="#234010" label="[23:40:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, we do have unbz2 these days</span></div><div class="line" id="234028"><span class="nick" style="color:#6b8072"><a href="#234028" label="[23:40:28]">&lt;stikonas&gt;</a></span><span class="message">though then we can't use upstream tarballs...</span></div><div class="line" id="234048"><span class="nick" style="color:#80b1d3"><a href="#234048" label="[23:40:48]">&lt;fossy&gt;</a></span><span class="message">yeah, i am not a fan of recreating the tarballs externally to live-bootstrap...</span></div><div class="line" id="234247"><span class="nick" style="color:#6b8072"><a href="#234247" label="[23:42:47]">&lt;stikonas&gt;</a></span><span class="message">fossy: in your PR you have some changes that are not really related to the whole rework, maybe those can be merged first</span></div><div class="line" id="234253"><span class="nick" style="color:#6b8072"><a href="#234253" label="[23:42:53]">&lt;stikonas&gt;</a></span><span class="message">e.g. stuff like export -&gt; declare -x</span></div><div class="line" id="234343"><span class="nick" style="color:#3c5b35"><a href="#234343" label="[23:43:43]">&lt;Googul8rMobile&gt;</a></span><span class="message">I was thinking of putting the recompression into the secfs generation code itself</span></div><div class="line" id="234348"><span class="nick" style="color:#3c5b35"><a href="#234348" label="[23:43:48]">&lt;Googul8rMobile&gt;</a></span><span class="message">*srcfs</span></div><div class="line" id="234359"><span class="nick" style="color:#80b1d3"><a href="#234359" label="[23:43:59]">&lt;fossy&gt;</a></span><span class="message">in the python files?</span></div><div class="line" id="234403"><span class="nick" style="color:#3c5b35"><a href="#234403" label="[23:44:03]">&lt;Googul8rMobile&gt;</a></span><span class="message">Yes</span></div><div class="line" id="234412"><span class="nick" style="color:#3c5b35"><a href="#234412" label="[23:44:12]">&lt;Googul8rMobile&gt;</a></span><span class="message">Python has its own gz &amp; bz2 support</span></div><div class="line" id="234414"><span class="nick" style="color:#6b8072"><a href="#234414" label="[23:44:14]">&lt;stikonas&gt;</a></span><span class="message">well, we could do that, but then secfs generation becomes non-human doable, not sure whether that matters</span></div><div class="line" id="234435"><span class="nick" style="color:#80b1d3"><a href="#234435" label="[23:44:35]">&lt;fossy&gt;</a></span><span class="message">I'm not a fan of that. currently you can create srcfs, theoretically, without Python. I don't want to force the use of Python</span></div><div class="line" id="234443"><span class="nick" style="color:#3c5b35"><a href="#234443" label="[23:44:43]">&lt;Googul8rMobile&gt;</a></span><span class="message">Not anymore than it is now</span></div><div class="line" id="234455"><span class="nick" style="color:#6b8072"><a href="#234455" label="[23:44:55]">&lt;stikonas&gt;</a></span><span class="message">yeah, but at least people can just take upstream tarballs and not use rootfs.py</span></div><div class="line" id="234519"><span class="nick" style="color:#3c5b35"><a href="#234519" label="[23:45:19]">&lt;Googul8rMobile&gt;</a></span><span class="message">You already need to include binaries in srcfs, not something you can type by hand</span></div><div class="line" id="234533"><span class="nick" style="color:#3c5b35"><a href="#234533" label="[23:45:33]">&lt;Googul8rMobile&gt;</a></span><span class="message">(binaries = gzip and bzip2 archives)</span></div><div class="line" id="234547"><span class="nick" style="color:#3c5b35"><a href="#234547" label="[23:45:47]">&lt;Googul8rMobile&gt;</a></span><span class="message">&quot;binaries&quot; as in not ASCII/printable</span></div><div class="line" id="234550"><span class="nick" style="color:#6b8072"><a href="#234550" label="[23:45:50]">&lt;stikonas&gt;</a></span><span class="message">well, it's not like you can type rest of the source by hand</span></div><div class="line" id="234552"><span class="nick" style="color:#6b8072"><a href="#234552" label="[23:45:52]">&lt;stikonas&gt;</a></span><span class="message">it's just too much</span></div><div class="line" id="234559"><span class="nick" style="color:#3c5b35"><a href="#234559" label="[23:45:59]">&lt;Googul8rMobile&gt;</a></span><span class="message">right</span></div><div class="line" id="234609"><span class="nick" style="color:#80b1d3"><a href="#234609" label="[23:46:09]">&lt;fossy&gt;</a></span><span class="message">the current requirements for creating srcfs are &quot;knowing the size of all files&quot; and &quot;being able to write to a disk&quot;</span></div><div class="line" id="234618"><span class="nick" style="color:#80b1d3"><a href="#234618" label="[23:46:18]">&lt;fossy&gt;</a></span><span class="message">that is something that can be done, theoretically, by a very primitive system</span></div><div class="line" id="234626"><span class="nick" style="color:#6b8072"><a href="#234626" label="[23:46:26]">&lt;stikonas&gt;</a></span><span class="message">ok, but do we really need that much extra space in the future?</span></div><div class="line" id="234628"><span class="nick" style="color:#80b1d3"><a href="#234628" label="[23:46:28]">&lt;fossy&gt;</a></span><span class="message">gz and bz2? not so much</span></div><div class="line" id="234704"><span class="nick" style="color:#80b1d3"><a href="#234704" label="[23:47:04]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'd argue that we would hopefulyl need *less*, not *more* space in the future (but more space isn't an impossibility...)</span></div><div class="line" id="234712"><span class="nick" style="color:#3c5b35"><a href="#234712" label="[23:47:12]">&lt;Googul8rMobile&gt;</a></span><span class="message">It's not about extra space, but about the 256MiB boundary</span></div><div class="line" id="234733"><span class="nick" style="color:#3c5b35"><a href="#234733" label="[23:47:33]">&lt;Googul8rMobile&gt;</a></span><span class="message">Largest SPI flash and largest true parallel flash part that exists</span></div><div class="line" id="234734"><span class="nick" style="color:#6b8072"><a href="#234734" label="[23:47:34]">&lt;stikonas&gt;</a></span><span class="message">what is this 256 MiB boundary?</span></div><div class="line" id="234736"><span class="nick" style="color:#80b1d3"><a href="#234736" label="[23:47:36]">&lt;fossy&gt;</a></span><span class="message">what is the significance of 256MB</span></div><div class="line" id="234736"><span class="nick" style="color:#6b8072"><a href="#234736" label="[23:47:36]">&lt;stikonas&gt;</a></span><span class="message">oh...</span></div><div class="line" id="234739"><span class="nick" style="color:#80b1d3"><a href="#234739" label="[23:47:39]">&lt;fossy&gt;</a></span><span class="message">ah</span></div><div class="line" id="234757"><span class="nick" style="color:#3c5b35"><a href="#234757" label="[23:47:57]">&lt;Googul8rMobile&gt;</a></span><span class="message">Everything beyond that size is managed flash that requires complex firmware to access</span></div><div class="line" id="234803"><span class="nick" style="color:#80b1d3"><a href="#234803" label="[23:48:03]">&lt;fossy&gt;</a></span><span class="message">where does removing linux 5.10 tarball get us up to?</span></div><div class="line" id="234823"><span class="nick" style="color:#3c5b35"><a href="#234823" label="[23:48:23]">&lt;Googul8rMobile&gt;</a></span><span class="message">278MB iirc</span></div><div class="line" id="234830"><span class="nick" style="color:#3c5b35"><a href="#234830" label="[23:48:30]">&lt;Googul8rMobile&gt;</a></span><span class="message">MiB rather</span></div><div class="line" id="234907"><span class="nick" style="color:#80b1d3"><a href="#234907" label="[23:49:07]">&lt;fossy&gt;</a></span><span class="message">278 &gt; 256, isn't that good enough? (if we're talking about gap?)</span></div><div class="line" id="234922"><span class="nick" style="color:#3c5b35"><a href="#234922" label="[23:49:22]">&lt;Googul8rMobile&gt;</a></span><span class="message">No, I'm not talking about the MMIO gap</span></div><div class="line" id="234941"><span class="nick" style="color:#3c5b35"><a href="#234941" label="[23:49:41]">&lt;Googul8rMobile&gt;</a></span><span class="message">But the &quot;Trusted flash drive&quot; project</span></div><div class="line" id="234948"><span class="nick" style="color:#80b1d3"><a href="#234948" label="[23:49:48]">&lt;fossy&gt;</a></span><span class="message">OH ok</span></div><div class="line" id="235007"><span class="nick" style="color:#6b8072"><a href="#235007" label="[23:50:07]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure if that's sustainable if we thing about other arches</span></div><div class="line" id="235019"><span class="nick" style="color:#6b8072"><a href="#235019" label="[23:50:19]">&lt;stikonas&gt;</a></span><span class="message">e.g. riscv bootstrrap will need GCC 4.6</span></div><div class="line" id="235022"><span class="nick" style="color:#3c5b35"><a href="#235022" label="[23:50:22]">&lt;Googul8rMobile&gt;</a></span><span class="message">Where you cut address lines A9 and beyond, to limit accessible size to 512 bytes initially (in the parallel version)</span></div><div class="line" id="235034"><span class="nick" style="color:#6b8072"><a href="#235034" label="[23:50:34]">&lt;stikonas&gt;</a></span><span class="message">that will be bigger</span></div><div class="line" id="235059"><span class="nick" style="color:#80b1d3"><a href="#235059" label="[23:50:59]">&lt;fossy&gt;</a></span><span class="message">well, kernel bootstrap has nil support for riscv right now</span></div><div class="line" id="235103"><span class="nick" style="color:#3c5b35"><a href="#235103" label="[23:51:03]">&lt;Googul8rMobile&gt;</a></span><span class="message">RISC-V (or even Arm) will bring other complications</span></div><div class="line" id="235106"><span class="nick" style="color:#6b8072"><a href="#235106" label="[23:51:06]">&lt;stikonas&gt;</a></span><span class="message">well, yes</span></div><div class="line" id="235128"><span class="nick" style="color:#6b8072"><a href="#235128" label="[23:51:28]">&lt;stikonas&gt;</a></span><span class="message">but that's one of the reasons I was reluctant to switch to disk in Fiwix</span></div><div class="line" id="235137"><span class="nick" style="color:#6b8072"><a href="#235137" label="[23:51:37]">&lt;stikonas&gt;</a></span><span class="message">it will probably make kernel bootstrap on new arches harder</span></div><div class="line" id="235148"><span class="nick" style="color:#3c5b35"><a href="#235148" label="[23:51:48]">&lt;Googul8rMobile&gt;</a></span><span class="message">Fiwix itself is strictly x86</span></div><div class="line" id="235152"><span class="nick" style="color:#6b8072"><a href="#235152" label="[23:51:52]">&lt;stikonas&gt;</a></span><span class="message">for now yes</span></div><div class="line" id="235157"><span class="nick" style="color:#3c5b35"><a href="#235157" label="[23:51:57]">&lt;Googul8rMobile&gt;</a></span><span class="message">Strictly legacy x86 at that</span></div><div class="line" id="235203"><span class="nick" style="color:#6b8072"><a href="#235203" label="[23:52:03]">&lt;stikonas&gt;</a></span><span class="message">yes, I know...</span></div><div class="line" id="235214"><span class="nick" style="color:#80b1d3"><a href="#235214" label="[23:52:14]">&lt;fossy&gt;</a></span><span class="message">&quot;legacy&quot;?</span></div><div class="line" id="235215"><span class="nick" style="color:#6b8072"><a href="#235215" label="[23:52:15]">&lt;stikonas&gt;</a></span><span class="message">but Mukaku said he doesn't see why it can't be ported to other arches</span></div><div class="line" id="235217"><span class="nick" style="color:#6b8072"><a href="#235217" label="[23:52:17]">&lt;stikonas&gt;</a></span><span class="message">fossy: 32-bit</span></div><div class="line" id="235220"><span class="nick" style="color:#80b1d3"><a href="#235220" label="[23:52:20]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="235223"><span class="nick" style="color:#80b1d3"><a href="#235223" label="[23:52:23]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="235338"><span class="nick" style="color:#6b8072"><a href="#235338" label="[23:53:38]">&lt;stikonas&gt;</a></span><span class="message">kernel bootstrap stuff is complicated :(</span></div><div class="line" id="235341"><span class="nick" style="color:#80b1d3"><a href="#235341" label="[23:53:41]">&lt;fossy&gt;</a></span><span class="message">sure is</span></div><div class="line" id="235355"><span class="nick" style="color:#6b8072"><a href="#235355" label="[23:53:55]">&lt;stikonas&gt;</a></span><span class="message">it was so much simpler just on POSIX</span></div><div class="line" id="235404"><span class="nick" style="color:#3c5b35"><a href="#235404" label="[23:54:04]">&lt;Googul8rMobile&gt;</a></span><span class="message">Not just 32-bit</span></div><div class="line" id="235408"><span class="nick" style="color:#6b8072"><a href="#235408" label="[23:54:08]">&lt;stikonas&gt;</a></span><span class="message">but of course kernel bootstrap is much more lower-level bootstrap with far less blobs</span></div><div class="line" id="235415"><span class="nick" style="color:#3c5b35"><a href="#235415" label="[23:54:15]">&lt;Googul8rMobile&gt;</a></span><span class="message">Legacy-only in many other ways too</span></div><div class="line" id="235444"><span class="nick" style="color:#3c5b35"><a href="#235444" label="[23:54:44]">&lt;Googul8rMobile&gt;</a></span><span class="message">No support for even &quot;enhanced IDE&quot; mode</span></div><div class="line" id="235551"><span class="nick" style="color:#6b8072"><a href="#235551" label="[23:55:51]">&lt;stikonas&gt;</a></span><span class="message">and no networking support?</span></div><div class="line" id="235556"><span class="nick" style="color:#6b8072"><a href="#235556" label="[23:55:56]">&lt;stikonas&gt;</a></span><span class="message">(ir I remember correctly)</span></div><div class="line" id="235557"><span class="nick" style="color:#80b1d3"><a href="#235557" label="[23:55:57]">&lt;fossy&gt;</a></span><span class="message">for now</span></div><div class="line" id="235604"><span class="nick" style="color:#3c5b35"><a href="#235604" label="[23:56:04]">&lt;Googul8rMobile&gt;</a></span><span class="message">That's at least planned</span></div><div class="line" id="235605"><span class="nick" style="color:#6b8072"><a href="#235605" label="[23:56:05]">&lt;stikonas&gt;</a></span><span class="message">but is it kernel limitation?</span></div><div class="line" id="235609"><span class="nick" style="color:#80b1d3"><a href="#235609" label="[23:56:09]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="235652"><span class="nick" style="color:#6b8072"><a href="#235652" label="[23:56:52]">&lt;stikonas&gt;</a></span><span class="message">well, networking is not that simple</span></div><div class="line" id="235711"><span class="nick" style="color:#6b8072"><a href="#235711" label="[23:57:11]">&lt;stikonas&gt;</a></span><span class="message">needs driver support to just pass ethernet frames...</span></div><div class="line" id="235724"><span class="nick" style="color:#6b8072"><a href="#235724" label="[23:57:24]">&lt;stikonas&gt;</a></span><span class="message">and that doesn't even touch TCP...</span></div><div class="line" id="235810"><span class="nick" style="color:#6b8072"><a href="#235810" label="[23:58:10]">&lt;stikonas&gt;</a></span><span class="message">which is again not a simple protocol...</span></div><div class="line" id="235835"><span class="nick" style="color:#3c5b35"><a href="#235835" label="[23:58:35]">&lt;Googul8rMobile&gt;</a></span><span class="message">No ACPI, no USB, probably not even LBA HDD access</span></div><div class="line" id="235910"><span class="nick" style="color:#6b8072"><a href="#235910" label="[23:59:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, all of this makes non-memory bootstrap complicated :(...</span></div><div class="line" id="235912"><span class="nick" style="color:#3c5b35"><a href="#235912" label="[23:59:12]">&lt;Googul8rMobile&gt;</a></span><span class="message">Adding those would've probably complicate the kernel so much that we could no longer use it at that stage of bootstrap</span></div><div class="line" id="235920"><span class="nick" style="color:#6b8072"><a href="#235920" label="[23:59:20]">&lt;stikonas&gt;</a></span><span class="message">exactly...</span></div><br /></div></body></html>