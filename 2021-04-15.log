<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-04-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001107"><span class="nick" style="color:#389600"><a href="#001107" label="[00:11:07]">&lt;fossy&gt;</a></span><span class="message">&lt;bauen1&gt; also regarding the spdx copyright headers, how many line changes constitues a change that would need me to add my own name with SPDX-FileCopyrightText: ?</span></div><div class="line" id="001116"><span class="nick" style="color:#389600"><a href="#001116" label="[00:11:16]">&lt;fossy&gt;</a></span><span class="message">1</span></div><div class="line" id="001201"><span class="nick" style="color:#389600"><a href="#001201" label="[00:12:01]">&lt;fossy&gt;</a></span><span class="message">any change is sufficient. spdx is not &quot;who has done the most work&quot;, you can see that in git, its just a total sum of all licensing info</span></div><div class="line" id="001302"><span class="nick" style="color:#8dd3c7"><a href="#001302" label="[00:13:02]">&lt;xentrac&gt;</a></span><span class="message">there do exist uncopyrightable lines of code :)</span></div><div class="line" id="001320"><span class="nick" style="color:#389600"><a href="#001320" label="[00:13:20]">&lt;fossy&gt;</a></span><span class="message">true</span></div><div class="line" id="002743"><span class="nick" style="color:#2e2a4a"><a href="#002743" label="[00:27:43]">&lt;stikonas&gt;</a></span><span class="message">I'll soon have a better way to bootstrap tar</span></div><div class="line" id="002752"><span class="nick" style="color:#2e2a4a"><a href="#002752" label="[00:27:52]">&lt;stikonas&gt;</a></span><span class="message">which also simplifies sysa.py a bit</span></div><div class="line" id="004412"><span class="nick" style="color:#2e2a4a"><a href="#004412" label="[00:44:12]">&lt;stikonas&gt;</a></span><span class="message">fossy: do you remember how  to use libtcc1.a?</span></div><div class="line" id="004428"><span class="nick" style="color:#2e2a4a"><a href="#004428" label="[00:44:28]">&lt;stikonas&gt;</a></span><span class="message">somehow I can't build stuff with it, but using libtcc1.o works</span></div><div class="line" id="004634"><span class="nick" style="color:#389600"><a href="#004634" label="[00:46:34]">&lt;fossy&gt;</a></span><span class="message">stikonas: -ltcc1?</span></div><div class="line" id="004654"><span class="nick" style="color:#389600"><a href="#004654" label="[00:46:54]">&lt;fossy&gt;</a></span><span class="message">you might need to specify the .a itself as you would a .o</span></div><div class="line" id="004709"><span class="nick" style="color:#2e2a4a"><a href="#004709" label="[00:47:09]">&lt;stikonas&gt;</a></span><span class="message">neither -ltcc1 nor specifying .a file worked...</span></div><div class="line" id="004713"><span class="nick" style="color:#2e2a4a"><a href="#004713" label="[00:47:13]">&lt;stikonas&gt;</a></span><span class="message">strangely...</span></div><div class="line" id="004714"><span class="nick" style="color:#389600"><a href="#004714" label="[00:47:14]">&lt;fossy&gt;</a></span><span class="message">odd</span></div><div class="line" id="004717"><span class="nick" style="color:#2e2a4a"><a href="#004717" label="[00:47:17]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="004729"><span class="nick" style="color:#2e2a4a"><a href="#004729" label="[00:47:29]">&lt;stikonas&gt;</a></span><span class="message">well, maybe I'll just specify libtcc1.o from old build dir</span></div><div class="line" id="011812"><span class="nick" style="color:#80b1d3"><a href="#011812" label="[01:18:12]">&lt;OriansJ`&gt;</a></span><span class="message">gef: we don't pick winners before the race. What ever architecture attracts enough developers and resources to complete first wins. Personally I am betting on knight because it is fun to program (so much so that all of the steps to M2-Planet are already done on bare-metal. I just need to provide FPGA and gate-level designs to enable others to make their own hardware.</span></div><div class="line" id="011914"><span class="nick" style="color:#80b1d3"><a href="#011914" label="[01:19:14]">&lt;OriansJ`&gt;</a></span><span class="message">right now x86 has the most active developers and the fewest pieces remaining.</span></div><div class="line" id="011954"><span class="nick" style="color:#8dd3c7"><a href="#011954" label="[01:19:54]">&lt;xentrac&gt;</a></span><span class="message">OriansJ`++</span></div><div class="line" id="012000"><span class="nick" style="color:#6d2462"><a href="#012000" label="[01:20:00]">&lt;vagrantc&gt;</a></span><span class="message">a remarkable correlation to widely available hardware, perhaps :)</span></div><div class="line" id="012033"><span class="nick" style="color:#8dd3c7"><a href="#012033" label="[01:20:33]">&lt;xentrac&gt;</a></span><span class="message">it would be awesome to see a Verilog Knight :)</span></div><div class="line" id="012056"><span class="nick" style="color:#8dd3c7"><a href="#012056" label="[01:20:56]">&lt;xentrac&gt;</a></span><span class="message">what do you enjoy most about programming it?</span></div><div class="line" id="012124"><span class="nick" style="color:#8dd3c7"><a href="#012124" label="[01:21:24]">&lt;xentrac&gt;</a></span><span class="message">aside from, obviously, not slicing your immediate operands into apparently random chunks of bits that are then placed in apparently random places in the instruction word, as in RISC-V ;)</span></div><div class="line" id="012136"><span class="nick" style="color:#80b1d3"><a href="#012136" label="[01:21:36]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: It was going to be my next project after I get mes-m2 gets ported to M2libc but it got bumped for stage0-cpm work to make the x86 bare-metal bootstrap even closer.</span></div><div class="line" id="012204"><span class="nick" style="color:#8dd3c7"><a href="#012204" label="[01:22:04]">&lt;xentrac&gt;</a></span><span class="message">oh interesting, I hadn't seen stage0-cpm</span></div><div class="line" id="012347"><span class="nick" style="color:#8dd3c7"><a href="#012347" label="[01:23:47]">&lt;xentrac&gt;</a></span><span class="message">still don't actually — where is it?</span></div><div class="line" id="012354"><span class="nick" style="color:#8dd3c7"><a href="#012354" label="[01:23:54]">&lt;xentrac&gt;</a></span><span class="message">or is it not public yet?</span></div><div class="line" id="012405"><span class="nick" style="color:#80b1d3"><a href="#012405" label="[01:24:05]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: as for what I like the most about knight's ISA is how everything does exactly what you expect without having to guess. No side-effects or implicit registers</span></div><div class="line" id="012423"><span class="nick" style="color:#80b1d3"><a href="#012423" label="[01:24:23]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: and no it is not public yet</span></div><div class="line" id="012432"><span class="nick" style="color:#8dd3c7"><a href="#012432" label="[01:24:32]">&lt;xentrac&gt;</a></span><span class="message">oh, that's why I don't see it then</span></div><div class="line" id="012436"><span class="nick" style="color:#8dd3c7"><a href="#012436" label="[01:24:36]">&lt;xentrac&gt;</a></span><span class="message">for CP/M on 8080?</span></div><div class="line" id="012519"><span class="nick" style="color:#8dd3c7"><a href="#012519" label="[01:25:19]">&lt;xentrac&gt;</a></span><span class="message">there's a lot more CP/M hardware out there than Knight, but nobody ever said 8080 was a pleasant instruction set</span></div><div class="line" id="012644"><span class="nick" style="color:#80b1d3"><a href="#012644" label="[01:26:44]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: I was thinking CP/M for 8086 as it would only require me to replace the syscalls and be done.</span></div><div class="line" id="012807"><span class="nick" style="color:#8dd3c7"><a href="#012807" label="[01:28:07]">&lt;xentrac&gt;</a></span><span class="message">for 8086 I'd think FreeDOS would be a better choice than CP/Mish</span></div><div class="line" id="012837"><span class="nick" style="color:#80b1d3"><a href="#012837" label="[01:28:37]">&lt;OriansJ`&gt;</a></span><span class="message">so stage0-DOS</span></div><div class="line" id="012839"><span class="nick" style="color:#8dd3c7"><a href="#012839" label="[01:28:39]">&lt;xentrac&gt;</a></span><span class="message">but hey, I'm not the one writing the code :)</span></div><div class="line" id="012844"><span class="nick" style="color:#8dd3c7"><a href="#012844" label="[01:28:44]">&lt;xentrac&gt;</a></span><span class="message">yeah, stage0-DOS</span></div><div class="line" id="012907"><span class="nick" style="color:#8dd3c7"><a href="#012907" label="[01:29:07]">&lt;xentrac&gt;</a></span><span class="message">just thinking you'd probably spend less time debugging FreeDOS than debugging CP/Mish</span></div><div class="line" id="012911"><span class="nick" style="color:#80b1d3"><a href="#012911" label="[01:29:11]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: I'll look into it when I get the free time for it ^_^</span></div><div class="line" id="012925"><span class="nick" style="color:#8dd3c7"><a href="#012925" label="[01:29:25]">&lt;xentrac&gt;</a></span><span class="message">(I don't think CP/Mish has even been ported to the 8086, has it?)</span></div><div class="line" id="012935"><span class="nick" style="color:#8dd3c7"><a href="#012935" label="[01:29:35]">&lt;xentrac&gt;</a></span><span class="message">how's your kid doing these days?</span></div><div class="line" id="012940"><span class="nick" style="color:#8dd3c7"><a href="#012940" label="[01:29:40]">&lt;xentrac&gt;</a></span><span class="message">the human one, I mean, not stage0</span></div><div class="line" id="013038"><span class="nick" style="color:#80b1d3"><a href="#013038" label="[01:30:38]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: he loves books and getting into trouble and moving objects 3 times his body weight when we are not looking.</span></div><div class="line" id="013057"><span class="nick" style="color:#8dd3c7"><a href="#013057" label="[01:30:57]">&lt;xentrac&gt;</a></span><span class="message">how many books has he eaten?</span></div><div class="line" id="013109"><span class="nick" style="color:#80b1d3"><a href="#013109" label="[01:31:09]">&lt;OriansJ`&gt;</a></span><span class="message">and he is in the 99th percentile for height and weight</span></div><div class="line" id="013131"><span class="nick" style="color:#8dd3c7"><a href="#013131" label="[01:31:31]">&lt;xentrac&gt;</a></span><span class="message">you married a giantess?</span></div><div class="line" id="013205"><span class="nick" style="color:#80b1d3"><a href="#013205" label="[01:32:05]">&lt;OriansJ`&gt;</a></span><span class="message">sure why not</span></div><div class="line" id="013237"><span class="nick" style="color:#8dd3c7"><a href="#013237" label="[01:32:37]">&lt;xentrac&gt;</a></span><span class="message">often desired, rarely achieved</span></div><div class="line" id="013239"><span class="nick" style="color:#80b1d3"><a href="#013239" label="[01:32:39]">&lt;OriansJ`&gt;</a></span><span class="message">he prefers to turn the pages and hear us read</span></div><div class="line" id="013249"><span class="nick" style="color:#8dd3c7"><a href="#013249" label="[01:32:49]">&lt;xentrac&gt;</a></span><span class="message">aww, that's wonderful</span></div><div class="line" id="013440"><span class="nick" style="color:#80b1d3"><a href="#013440" label="[01:34:40]">&lt;OriansJ`&gt;</a></span><span class="message">and while he sleeps I manage to make slight progress on my work.</span></div><div class="line" id="023400"><span class="nick" style="color:#80b1d3"><a href="#023400" label="[02:34:00]">&lt;OriansJ`&gt;</a></span><span class="message">speaking of which xentrac: <a rel="nofollow" href="https://github.com/oriansj/mes-m2">https://github.com/oriansj/mes-m2</a>  we have an M2-Planet buildable mes-m2 that can run mescc</span></div><div class="line" id="023445"><span class="nick" style="color:#80b1d3"><a href="#023445" label="[02:34:45]">&lt;OriansJ`&gt;</a></span><span class="message">and I am currently trying to get it into shape where GCC can build it (properly) <a rel="nofollow" href="https://github.com/oriansj/mes-m2/tree/GCC">https://github.com/oriansj/mes-m2/tree/GCC</a> </span></div><div class="line" id="023812"><span class="nick" style="color:#80b1d3"><a href="#023812" label="[02:38:12]">&lt;OriansJ`&gt;</a></span><span class="message">the good news is with very few changes GCC can now once again build mes-m2; unfortunately it segfaults quick</span></div><div class="line" id="023955"><span class="nick" style="color:#234e69"><a href="#023955" label="[02:39:55]">&lt;Hagfish&gt;</a></span><span class="message">well that's something at least :)</span></div><div class="line" id="024059"><span class="nick" style="color:#80b1d3"><a href="#024059" label="[02:40:59]">&lt;OriansJ`&gt;</a></span><span class="message">now just to figure out what exactly is causing the segfault and fixing it</span></div><div class="line" id="024125"><span class="nick" style="color:#80b1d3"><a href="#024125" label="[02:41:25]">&lt;OriansJ`&gt;</a></span><span class="message">because once that is done, the transistion to M2libc and porting to AArch64, armv7l and knight will be rather easy</span></div><div class="line" id="024317"><span class="nick" style="color:#234e69"><a href="#024317" label="[02:43:17]">&lt;Hagfish&gt;</a></span><span class="message">will the porting to each of those arches be the same amount of work as each other?</span></div><div class="line" id="024358"><span class="nick" style="color:#80b1d3"><a href="#024358" label="[02:43:58]">&lt;OriansJ`&gt;</a></span><span class="message">Hagfish: once we get the posix primitives into M2libc, then the ports become instant.</span></div><div class="line" id="024405"><span class="nick" style="color:#234e69"><a href="#024405" label="[02:44:05]">&lt;Hagfish&gt;</a></span><span class="message">love it</span></div><div class="line" id="024512"><span class="nick" style="color:#80b1d3"><a href="#024512" label="[02:45:12]">&lt;OriansJ`&gt;</a></span><span class="message">I just need to get the GCC build of mes-m2 to stop segfaulting and run mescc</span></div><div class="line" id="024548"><span class="nick" style="color:#234e69"><a href="#024548" label="[02:45:48]">&lt;Hagfish&gt;</a></span><span class="message">yeah, it's a bit weird that it's segfaulting</span></div><div class="line" id="024629"><span class="nick" style="color:#234e69"><a href="#024629" label="[02:46:29]">&lt;Hagfish&gt;</a></span><span class="message">i'm not sure what sort of techniques can prevent code from segfaulting on gcc (but working under other compilers?)</span></div><div class="line" id="024642"><span class="nick" style="color:#80b1d3"><a href="#024642" label="[02:46:42]">&lt;OriansJ`&gt;</a></span><span class="message">It is probably something stupid I did and I haven't realized it yet. I'm hoping janneke will take a look and point out the obvious</span></div><div class="line" id="024715"><span class="nick" style="color:#234e69"><a href="#024715" label="[02:47:15]">&lt;Hagfish&gt;</a></span><span class="message">i guess there aren't any relevant warnings that gcc produces during compilation</span></div><div class="line" id="024740"><span class="nick" style="color:#80b1d3"><a href="#024740" label="[02:47:40]">&lt;OriansJ`&gt;</a></span><span class="message">Hagfish: well there are warnings that I haven't fixed yet</span></div><div class="line" id="024836"><span class="nick" style="color:#80b1d3"><a href="#024836" label="[02:48:36]">&lt;OriansJ`&gt;</a></span><span class="message">(I only had so many hours of effort available thus far)</span></div><div class="line" id="024929"><span class="nick" style="color:#234e69"><a href="#024929" label="[02:49:29]">&lt;Hagfish&gt;</a></span><span class="message">ah, okay, so there might be a trail of clues left to follow</span></div><div class="line" id="025122"><span class="nick" style="color:#80b1d3"><a href="#025122" label="[02:51:22]">&lt;OriansJ`&gt;</a></span><span class="message">90% of the changes are just changing fdputs to fputs and fdputc to fputc</span></div><div class="line" id="025259"><span class="nick" style="color:#234e69"><a href="#025259" label="[02:52:59]">&lt;Hagfish&gt;</a></span><span class="message">i guess that means doing a find and replace, rather than trying to override/redefine them</span></div><div class="line" id="030254"><span class="nick" style="color:#80b1d3"><a href="#030254" label="[03:02:54]">&lt;OriansJ`&gt;</a></span><span class="message">So it should be a priority task for anyone to wants mes-m2 to run on architectures other than just x86</span></div><div class="line" id="030337"><span class="nick" style="color:#8dd3c7"><a href="#030337" label="[03:03:37]">&lt;xentrac&gt;</a></span><span class="message">OriansJ`: that's wonderful news!</span></div><div class="line" id="030444"><span class="nick" style="color:#80b1d3"><a href="#030444" label="[03:04:44]">&lt;OriansJ`&gt;</a></span><span class="message">xentrac: live-bootstrap now has no generated files from hex0 to GCC-4.9.4 (they bootstrapped bison and flex along the way)</span></div><div class="line" id="030519"><span class="nick" style="color:#8dd3c7"><a href="#030519" label="[03:05:19]">&lt;xentrac&gt;</a></span><span class="message">congratulatiosn :)</span></div><div class="line" id="030638"><span class="nick" style="color:#80b1d3"><a href="#030638" label="[03:06:38]">&lt;OriansJ`&gt;</a></span><span class="message">janneke did the finishing piece by getting mes.c into a form that M2-Planet could build (after I abandoned it) and able to run MesCC; so that path ultimately won.</span></div><div class="line" id="030818"><span class="nick" style="color:#80b1d3"><a href="#030818" label="[03:08:18]">&lt;OriansJ`&gt;</a></span><span class="message">now I am just trying to get it into a form that I can port to the other architectures and maintain long-term.</span></div><div class="line" id="033420"><span class="nick" style="color:#80b1d3"><a href="#033420" label="[03:34:20]">&lt;OriansJ`&gt;</a></span><span class="message">but I know I'm not that great at debugging mes.c (as evidenced by my months of failing to port mes.c to M2-Planet)</span></div><div class="line" id="034056"><span class="nick" style="color:#80b1d3"><a href="#034056" label="[03:40:56]">&lt;OriansJ`&gt;</a></span><span class="message">so this is going to just be an exercise in frustration until I get the GCC branch operational and hence why I put out a plea for help sorting out the last few segfaults in the GCC branch of mes-m2.</span></div><div class="line" id="035656"><span class="nick" style="color:#8dd3c7"><a href="#035656" label="[03:56:56]">&lt;xentrac&gt;</a></span><span class="message">yaay!</span></div><div class="line" id="035835"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="102750"><span class="nick" style="color:#389600"><a href="#102750" label="[10:27:50]">&lt;fossy&gt;</a></span><span class="message"> /go 47</span></div><div class="line" id="102752"><span class="nick" style="color:#389600"><a href="#102752" label="[10:27:52]">&lt;fossy&gt;</a></span><span class="message">oops</span></div><div class="line" id="135830"><span class="nick" style="color:#6c3d55"><a href="#135830" label="[13:58:30]">&lt;bauen1&gt;</a></span><span class="message">etbe: /18</span></div><div class="line" id="135831"><span class="nick" style="color:#6c3d55"><a href="#135831" label="[13:58:31]">&lt;bauen1&gt;</a></span><span class="message">sorry</span></div><div class="line" id="142042"><span class="nick" style="color:#d9d9d9"><a href="#142042" label="[14:20:42]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: stikonas: another day, another PR: bash-5.1-fix: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/104">https://github.com/fosslinux/live-bootstrap/pull/104</a> </span></div><div class="line" id="142232"><span class="nick" style="color:#2e2a4a"><a href="#142232" label="[14:22:32]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: I want to think a bit more about the fix... It might be better to just replace 512 with 64K in builtins/psize.sh</span></div><div class="line" id="142246"><span class="nick" style="color:#2e2a4a"><a href="#142246" label="[14:22:46]">&lt;stikonas&gt;</a></span><span class="message">512 will never be good for us...</span></div><div class="line" id="142257"><span class="nick" style="color:#2e2a4a"><a href="#142257" label="[14:22:57]">&lt;stikonas&gt;</a></span><span class="message">it will always cause hash mismatch</span></div><div class="line" id="142322"><span class="nick" style="color:#2e2a4a"><a href="#142322" label="[14:23:22]">&lt;stikonas&gt;</a></span><span class="message">extra sleep 3 might help to make it less frequent, but I guess it's still a race</span></div><div class="line" id="142334"><span class="nick" style="color:#389600"><a href="#142334" label="[14:23:34]">&lt;fossy&gt;</a></span><span class="message">agreed with stikonas</span></div><div class="line" id="142351"><span class="nick" style="color:#389600"><a href="#142351" label="[14:23:51]">&lt;fossy&gt;</a></span><span class="message">also really 50%? That's a lot</span></div><div class="line" id="142356"><span class="nick" style="color:#389600"><a href="#142356" label="[14:23:56]">&lt;fossy&gt;</a></span><span class="message">i haven't ever run into this</span></div><div class="line" id="142403"><span class="nick" style="color:#2e2a4a"><a href="#142403" label="[14:24:03]">&lt;stikonas&gt;</a></span><span class="message">it's not 50% here..</span></div><div class="line" id="142409"><span class="nick" style="color:#389600"><a href="#142409" label="[14:24:09]">&lt;fossy&gt;</a></span><span class="message">it could be kernel thing</span></div><div class="line" id="142412"><span class="nick" style="color:#2e2a4a"><a href="#142412" label="[14:24:12]">&lt;stikonas&gt;</a></span><span class="message">could be...</span></div><div class="line" id="142415"><span class="nick" style="color:#2e2a4a"><a href="#142415" label="[14:24:15]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, I know what caused libtcc1.a to fail</span></div><div class="line" id="142419"><span class="nick" style="color:#389600"><a href="#142419" label="[14:24:19]">&lt;fossy&gt;</a></span><span class="message">yeah?</span></div><div class="line" id="142437"><span class="nick" style="color:#2e2a4a"><a href="#142437" label="[14:24:37]">&lt;stikonas&gt;</a></span><span class="message">it was built with very first tcc</span></div><div class="line" id="142441"><span class="nick" style="color:#2e2a4a"><a href="#142441" label="[14:24:41]">&lt;stikonas&gt;</a></span><span class="message">mes-tcc</span></div><div class="line" id="142447"><span class="nick" style="color:#2e2a4a"><a href="#142447" label="[14:24:47]">&lt;stikonas&gt;</a></span><span class="message">I'll have a fix later in my PR</span></div><div class="line" id="142455"><span class="nick" style="color:#2e2a4a"><a href="#142455" label="[14:24:55]">&lt;stikonas&gt;</a></span><span class="message">but want to finish more things in the evening</span></div><div class="line" id="142518"><span class="nick" style="color:#389600"><a href="#142518" label="[14:25:18]">&lt;fossy&gt;</a></span><span class="message">huh really</span></div><div class="line" id="142524"><span class="nick" style="color:#389600"><a href="#142524" label="[14:25:24]">&lt;fossy&gt;</a></span><span class="message">i thought we rebuilt libtcc1.a</span></div><div class="line" id="142525"><span class="nick" style="color:#2e2a4a"><a href="#142525" label="[14:25:25]">&lt;stikonas&gt;</a></span><span class="message">you only rebuild .a in each stage of tcc from old .o</span></div><div class="line" id="142543"><span class="nick" style="color:#389600"><a href="#142543" label="[14:25:43]">&lt;fossy&gt;</a></span><span class="message">ah, right</span></div><div class="line" id="142545"><span class="nick" style="color:#389600"><a href="#142545" label="[14:25:45]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="142547"><span class="nick" style="color:#2e2a4a"><a href="#142547" label="[14:25:47]">&lt;stikonas&gt;</a></span><span class="message">when I added rebuild .c to .o it helped</span></div><div class="line" id="143013"><span class="nick" style="color:#d9d9d9"><a href="#143013" label="[14:30:13]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: about 160 builds from 312 are failing because of this, i can reproduce it</span></div><div class="line" id="143039"><span class="nick" style="color:#389600"><a href="#143039" label="[14:30:39]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: using another kernel?</span></div><div class="line" id="143044"><span class="nick" style="color:#2e2a4a"><a href="#143044" label="[14:30:44]">&lt;stikonas&gt;</a></span><span class="message">well, in principle it's good that there is a way to make rare intermittent issues more frequent</span></div><div class="line" id="143050"><span class="nick" style="color:#389600"><a href="#143050" label="[14:30:50]">&lt;fossy&gt;</a></span><span class="message">sure</span></div><div class="line" id="143109"><span class="nick" style="color:#389600"><a href="#143109" label="[14:31:09]">&lt;fossy&gt;</a></span><span class="message">also i don't think that gforce_de1977's 3.18 minikernel is a bad target, the opposite tbh</span></div><div class="line" id="143133"><span class="nick" style="color:#2e2a4a"><a href="#143133" label="[14:31:33]">&lt;stikonas&gt;</a></span><span class="message">that's true</span></div><div class="line" id="143136"><span class="nick" style="color:#d9d9d9"><a href="#143136" label="[14:31:36]">&lt;gforce_de1977&gt;</a></span><span class="message">i can try another kernel, will make a new mass-run this night with kernel 5.11.14 and report</span></div><div class="line" id="143202"><span class="nick" style="color:#2e2a4a"><a href="#143202" label="[14:32:02]">&lt;stikonas&gt;</a></span><span class="message">but maybe adjust your PR to edit psize.sh?</span></div><div class="line" id="143305"><span class="nick" style="color:#d9d9d9"><a href="#143305" label="[14:33:05]">&lt;gforce_de1977&gt;</a></span><span class="message">ok: i will change the PR to output a fixed #define</span></div><div class="line" id="143310"><span class="nick" style="color:#2e2a4a"><a href="#143310" label="[14:33:10]">&lt;stikonas&gt;</a></span><span class="message">basically 's/512/whatver value we want/'</span></div><div class="line" id="145613"><span class="nick" style="color:#d9d9d9"><a href="#145613" label="[14:56:13]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: stikonas: ok, i'am not happy, but maybe it's ok for you: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/104/commits/73b8319d2527ed0bd774851124e2d2daf01d8600">https://github.com/fosslinux/live-bootstrap/pull/104/commits/73b8319d2527ed0bd774851124e2d2daf01d8600</a> </span></div><div class="line" id="145655"><span class="nick" style="color:#d9d9d9"><a href="#145655" label="[14:56:55]">&lt;gforce_de1977&gt;</a></span><span class="message">sorry, mistake</span></div><div class="line" id="145701"><span class="nick" style="color:#389600"><a href="#145701" label="[14:57:01]">&lt;fossy&gt;</a></span><span class="message">perhaps better as .patch?</span></div><div class="line" id="145827"><span class="nick" style="color:#d9d9d9"><a href="#145827" label="[14:58:27]">&lt;gforce_de1977&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/104/commits/54b28e3a8db6eb3f7d8dc2d1f357039d267ec3e4">https://github.com/fosslinux/live-bootstrap/pull/104/commits/54b28e3a8db6eb3f7d8dc2d1f357039d267ec3e4</a> </span></div><div class="line" id="145902"><span class="nick" style="color:#d9d9d9"><a href="#145902" label="[14:59:02]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, a patchfile is better, you are right</span></div><div class="line" id="173139"><span class="nick" style="color:#d9d9d9"><a href="#173139" label="[17:31:39]">&lt;gforce_de1977&gt;</a></span><span class="message">here with a patchfile: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/104/commits/6163f2a51ac702cedb19d054ae89c3031623826e">https://github.com/fosslinux/live-bootstrap/pull/104/commits/6163f2a51ac702cedb19d054ae89c3031623826e</a> </span></div><div class="line" id="173219"><span class="nick" style="color:#d9d9d9"><a href="#173219" label="[17:32:19]">&lt;gforce_de1977&gt;</a></span><span class="message">so the patch is a oneliner: printf '%s\n' '#define PIPESIZE 65536'</span></div><div class="line" id="180730"><span class="nick" style="color:#2e2a4a"><a href="#180730" label="[18:07:30]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: you need to add a license to patch file</span></div><div class="line" id="180732"><span class="nick" style="color:#d9d9d9"><a href="#180732" label="[18:07:32]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: i dont understand, we the reuse-linter fails, do you? i tried:</span></div><div class="line" id="180803"><span class="nick" style="color:#d9d9d9"><a href="#180803" label="[18:08:03]">&lt;gforce_de1977&gt;</a></span><span class="message"># SPDX-FileCopyrightText: 2021 Bastian Bittorf &lt;bb@npl.de&gt;</span></div><div class="line" id="180804"><span class="nick" style="color:#d9d9d9"><a href="#180804" label="[18:08:04]">&lt;gforce_de1977&gt;</a></span><span class="message">and</span></div><div class="line" id="180809"><span class="nick" style="color:#d9d9d9"><a href="#180809" label="[18:08:09]">&lt;gforce_de1977&gt;</a></span><span class="message">SPDX-FileCopyrightText: 2021 Bastian Bittorf &lt;bb@npl.de&gt;</span></div><div class="line" id="180817"><span class="nick" style="color:#2e2a4a"><a href="#180817" label="[18:08:17]">&lt;stikonas&gt;</a></span><span class="message">Also needs SPDX-License-Identifier:</span></div><div class="line" id="180846"><span class="nick" style="color:#d9d9d9"><a href="#180846" label="[18:08:46]">&lt;gforce_de1977&gt;</a></span><span class="message">aaaah! got it</span></div><div class="line" id="180906"><span class="nick" style="color:#2e2a4a"><a href="#180906" label="[18:09:06]">&lt;stikonas&gt;</a></span><span class="message">SPDX-License-Identifier: GPL-3.0-or-later</span></div><div class="line" id="180919"><span class="nick" style="color:#2e2a4a"><a href="#180919" label="[18:09:19]">&lt;stikonas&gt;</a></span><span class="message">(that's license of bash, so let's keep patch the same)</span></div><div class="line" id="181023"><span class="nick" style="color:#d9d9d9"><a href="#181023" label="[18:10:23]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, have done it, thank you</span></div><div class="line" id="181026"><span class="nick" style="color:#2e2a4a"><a href="#181026" label="[18:10:26]">&lt;stikonas&gt;</a></span><span class="message">that's what linter was picking up, second # SPDX-FileCopyrightText: 2021 Bastian Bittorf is not visible to linter, although, if you want you can keep it</span></div><div class="line" id="212045"><span class="nick">***</span><span class="message notice">sm2n_ is now known as sm2n</span></div><br /></div></body></html>