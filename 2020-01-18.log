<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-01-18.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011713"><span class="nick" style="color:#8dd3c7"><a href="#011713" label="[01:17:13]">&lt;oriansj&gt;</a></span><span class="message">guess I have to change how mes-m2 handles strings to get (string-index &quot;\a\b\v\t\&quot;'&quot; #\&quot;) to match guile</span></div><div class="line" id="011845"><span class="nick" style="color:#8dd3c7"><a href="#011845" label="[01:18:45]">&lt;oriansj&gt;</a></span><span class="message">looks like the perfect time to include in_set into mes-m2</span></div><div class="line" id="011924"><span class="nick" style="color:#2e2a4a"><a href="#011924" label="[01:19:24]">&lt;Hagfish&gt;</a></span><span class="message">those seem like reasonable sub-goals, yes</span></div><div class="line" id="012114"><span class="nick" style="color:#8dd3c7"><a href="#012114" label="[01:21:14]">&lt;oriansj&gt;</a></span><span class="message">fuck, did that actually just solve my EOF problem?</span></div><div class="line" id="012332"><span class="nick" style="color:#8dd3c7"><a href="#012332" label="[01:23:32]">&lt;oriansj&gt;</a></span><span class="message">yes, yes it did</span></div><div class="line" id="012342"><span class="nick" style="color:#8dd3c7"><a href="#012342" label="[01:23:42]">&lt;oriansj&gt;</a></span><span class="message">sweet</span></div><div class="line" id="012356"><span class="nick" style="color:#8dd3c7"><a href="#012356" label="[01:23:56]">&lt;oriansj&gt;</a></span><span class="message">brb, have to do some ugly hacking</span></div><div class="line" id="013110"><span class="nick" style="color:#2e2a4a"><a href="#013110" label="[01:31:10]">&lt;Hagfish&gt;</a></span><span class="message">speaking of hacks: <a rel="nofollow" href="https://github.com/janroesner/sixty5o2">https://github.com/janroesner/sixty5o2</a> </span></div><div class="line" id="013201"><span class="nick" style="color:#2e2a4a"><a href="#013201" label="[01:32:01]">&lt;Hagfish&gt;</a></span><span class="message">more and more projects are being built in the grey zone between &quot;simple enough to be trustworthy&quot; and &quot;powerful enough to be useful&quot;</span></div><div class="line" id="014840"><span class="nick" style="color:#8dd3c7"><a href="#014840" label="[01:48:40]">&lt;oriansj&gt;</a></span><span class="message">powerful enough to be useful is a personal feeling about a tool and simple enough to be trustworthy has alot of personal variances (see reading APL code)</span></div><div class="line" id="014851"><span class="nick" style="color:#8dd3c7"><a href="#014851" label="[01:48:51]">&lt;oriansj&gt;</a></span><span class="message">and a patch is up for mes-m2</span></div><div class="line" id="014922"><span class="nick" style="color:#8dd3c7"><a href="#014922" label="[01:49:22]">&lt;oriansj&gt;</a></span><span class="message">The most exciting part is ../mes-m2/bin/mes-m2 -e main -s M1.scm -f foo WORKS</span></div><div class="line" id="015223"><span class="nick" style="color:#8dd3c7"><a href="#015223" label="[01:52:23]">&lt;oriansj&gt;</a></span><span class="message">and I added proper leading whitespace handling for #; (janneke: I know, I know but I did it eventually)</span></div><div class="line" id="015248"><span class="nick" style="color:#8dd3c7"><a href="#015248" label="[01:52:48]">&lt;oriansj&gt;</a></span><span class="message">so now #;      (....) does the *right* thing</span></div><div class="line" id="015408"><span class="nick" style="color:#8dd3c7"><a href="#015408" label="[01:54:08]">&lt;oriansj&gt;</a></span><span class="message">also Hagfish I just don't know how simple a node.js program is</span></div><div class="line" id="015745"><span class="nick" style="color:#8dd3c7"><a href="#015745" label="[01:57:45]">&lt;oriansj&gt;</a></span><span class="message">perhaps we are just starting to enter the start of the golden age of computer trust; where librehardware is becoming more and more available</span></div><div class="line" id="020841"><span class="nick" style="color:#6b8072"><a href="#020841" label="[02:08:41]">&lt;fossy&gt;</a></span><span class="message">fauqing segfaults</span></div><div class="line" id="020851"><span class="nick" style="color:#6b8072"><a href="#020851" label="[02:08:51]">&lt;fossy&gt;</a></span><span class="message">still cant build a working TCC with MesCC</span></div><div class="line" id="024158"><span class="nick" style="color:#8dd3c7"><a href="#024158" label="[02:41:58]">&lt;oriansj&gt;</a></span><span class="message">well fossy I get it</span></div><div class="line" id="024312"><span class="nick" style="color:#8dd3c7"><a href="#024312" label="[02:43:12]">&lt;oriansj&gt;</a></span><span class="message">a good sanity check is to compile tcc with gcc in a single command</span></div><div class="line" id="030050"><span class="nick" style="color:#8dd3c7"><a href="#030050" label="[03:00:50]">&lt;oriansj&gt;</a></span><span class="message">for some reason most software tends to be quite fiddly.</span></div><div class="line" id="030143"><span class="nick" style="color:#8dd3c7"><a href="#030143" label="[03:01:43]">&lt;oriansj&gt;</a></span><span class="message">which reminds me; I'm gonna need to schedule some time to fuzz mescc-tools and M2-Planet so that they are more fault tolerant</span></div><div class="line" id="030605"><span class="nick" style="color:#8dd3c7"><a href="#030605" label="[03:06:05]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: for example of the powerful enough gradient: Give me a hex-monitor and I can bootstrap the world. Give the average java programmer an unconfigured eclipse studio and an empty project and they wouldn't be able to make fizz-buzz</span></div><div class="line" id="030742"><span class="nick" style="color:#2e2a4a"><a href="#030742" label="[03:07:42]">&lt;Hagfish&gt;</a></span><span class="message">that's an extremely hot take, but i can't dispute that :)</span></div><div class="line" id="031055"><span class="nick" style="color:#2e2a4a"><a href="#031055" label="[03:10:55]">&lt;Hagfish&gt;</a></span><span class="message">maybe technologies exist in a space with dimensions of power and usability</span></div><div class="line" id="031125"><span class="nick" style="color:#2e2a4a"><a href="#031125" label="[03:11:25]">&lt;Hagfish&gt;</a></span><span class="message">a tool which can empower some people could be a huge limitation to another person</span></div><div class="line" id="031156"><span class="nick" style="color:#2e2a4a"><a href="#031156" label="[03:11:56]">&lt;Hagfish&gt;</a></span><span class="message">i'd rather do sums in my head than with an abacus</span></div><div class="line" id="031202"><span class="nick" style="color:#2e2a4a"><a href="#031202" label="[03:12:02]">&lt;Hagfish&gt;</a></span><span class="message">i don't know if that's a good example</span></div><div class="line" id="031245"><span class="nick" style="color:#8dd3c7"><a href="#031245" label="[03:12:45]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: or perhaps there is a level of compatibility between people and tools</span></div><div class="line" id="031307"><span class="nick" style="color:#8dd3c7"><a href="#031307" label="[03:13:07]">&lt;oriansj&gt;</a></span><span class="message">much like how one needs a certain amount of strength to use a sledge hammer</span></div><div class="line" id="031506"><span class="nick" style="color:#8dd3c7"><a href="#031506" label="[03:15:06]">&lt;oriansj&gt;</a></span><span class="message">or the realization that some minds are better suited for certain familities of languages than other people</span></div><div class="line" id="031532"><span class="nick" style="color:#8dd3c7"><a href="#031532" label="[03:15:32]">&lt;oriansj&gt;</a></span><span class="message">I know I am a far better C programmer now; than I ever was a scheme programmer</span></div><div class="line" id="031620"><span class="nick" style="color:#8dd3c7"><a href="#031620" label="[03:16:20]">&lt;oriansj&gt;</a></span><span class="message">It might have been the last 3 years of writing hex, assembly and dealing with representations</span></div><div class="line" id="032054"><span class="nick" style="color:#2e2a4a"><a href="#032054" label="[03:20:54]">&lt;Hagfish&gt;</a></span><span class="message">the whole field of human-machine interface design probably has a lot of advancements yet to be made</span></div><div class="line" id="032159"><span class="nick" style="color:#2e2a4a"><a href="#032159" label="[03:21:59]">&lt;Hagfish&gt;</a></span><span class="message">i guess it is starting to be more empirical now that software can measure how users interact with it (and that probably helps with the design of other things)</span></div><div class="line" id="032245"><span class="nick" style="color:#2e2a4a"><a href="#032245" label="[03:22:45]">&lt;Hagfish&gt;</a></span><span class="message">but i think a lot of products get redesigns that feel worse for at least a vocal minority of users</span></div><div class="line" id="032350"><span class="nick" style="color:#8dd3c7"><a href="#032350" label="[03:23:50]">&lt;oriansj&gt;</a></span><span class="message">or perhaps the reason there are so many programming languages is because the differences in how humans think about ordering problems</span></div><div class="line" id="033233"><span class="nick" style="color:#2e2a4a"><a href="#033233" label="[03:32:33]">&lt;Hagfish&gt;</a></span><span class="message">now you're framing it correctly, thank you</span></div><div class="line" id="033402"><span class="nick" style="color:#2e2a4a"><a href="#033402" label="[03:34:02]">&lt;Hagfish&gt;</a></span><span class="message">rather than trying to invent the &quot;perfect&quot; programming language for some idealised human brain, maybe what the world needs is some researchers to try to understand the variety of human brains based on preferences that are already apparent in the world</span></div><div class="line" id="033446"><span class="nick" style="color:#8dd3c7"><a href="#033446" label="[03:34:46]">&lt;oriansj&gt;</a></span><span class="message">and create clusters of programming languages suited to those brains?</span></div><div class="line" id="033458"><span class="nick" style="color:#2e2a4a"><a href="#033458" label="[03:34:58]">&lt;Hagfish&gt;</a></span><span class="message">yeah, that sort of thing</span></div><div class="line" id="033525"><span class="nick" style="color:#8dd3c7"><a href="#033525" label="[03:35:25]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: doesn't work too well with current economics</span></div><div class="line" id="033549"><span class="nick" style="color:#2e2a4a"><a href="#033549" label="[03:35:49]">&lt;Hagfish&gt;</a></span><span class="message">a lot of scientific research doesn't pay off in the short term, yeah</span></div><div class="line" id="033628"><span class="nick" style="color:#8dd3c7"><a href="#033628" label="[03:36:28]">&lt;oriansj&gt;</a></span><span class="message">essentially the ability to mix programming languages on solving a problem however does enable a business justification for supporting multiple languages</span></div><div class="line" id="033735"><span class="nick" style="color:#8dd3c7"><a href="#033735" label="[03:37:35]">&lt;oriansj&gt;</a></span><span class="message">kinda like how one could mix C + FORTRAN + COBOL + JAVA + Python into the exact same code base</span></div><div class="line" id="033808"><span class="nick" style="color:#2e2a4a"><a href="#033808" label="[03:38:08]">&lt;Hagfish&gt;</a></span><span class="message">everything will compile to webASM :)</span></div><div class="line" id="033847"><span class="nick" style="color:#8dd3c7"><a href="#033847" label="[03:38:47]">&lt;oriansj&gt;</a></span><span class="message">except assembly and who really needs that ;-p</span></div><div class="line" id="033953"><span class="nick" style="color:#8dd3c7"><a href="#033953" label="[03:39:53]">&lt;oriansj&gt;</a></span><span class="message">especially since webASM can't even consistently tell if two things are equal</span></div><div class="line" id="034031"><span class="nick" style="color:#2e2a4a"><a href="#034031" label="[03:40:31]">&lt;Hagfish&gt;</a></span><span class="message">so you're saying it supports quantum computing natively? ;)</span></div><div class="line" id="034105"><span class="nick" style="color:#8dd3c7"><a href="#034105" label="[03:41:05]">&lt;oriansj&gt;</a></span><span class="message">in scheme terms (= #t unspecified) =&gt; #f but (= unspecified #t) =&gt; #t</span></div><div class="line" id="034145"><span class="nick" style="color:#2e2a4a"><a href="#034145" label="[03:41:45]">&lt;Hagfish&gt;</a></span><span class="message">huh, that's not great</span></div><div class="line" id="034146"><span class="nick" style="color:#8dd3c7"><a href="#034146" label="[03:41:46]">&lt;oriansj&gt;</a></span><span class="message">just changing the order of the arguments in comparision changes if the mixing of 2 different types results in equality</span></div><div class="line" id="034159"><span class="nick" style="color:#2e2a4a"><a href="#034159" label="[03:41:59]">&lt;Hagfish&gt;</a></span><span class="message">right, there goes commutativity</span></div><div class="line" id="034211"><span class="nick" style="color:#8dd3c7"><a href="#034211" label="[03:42:11]">&lt;oriansj&gt;</a></span><span class="message">and associativity too</span></div><div class="line" id="034247"><span class="nick" style="color:#8dd3c7"><a href="#034247" label="[03:42:47]">&lt;oriansj&gt;</a></span><span class="message">but it is  *JavaScript*</span></div><div class="line" id="034324"><span class="nick" style="color:#8dd3c7"><a href="#034324" label="[03:43:24]">&lt;oriansj&gt;</a></span><span class="message">or more precisely a chrome only version of *Javascript (tm google)*</span></div><div class="line" id="034341"><span class="nick" style="color:#2e2a4a"><a href="#034341" label="[03:43:41]">&lt;Hagfish&gt;</a></span><span class="message">that's another hot take</span></div><div class="line" id="034353"><span class="nick" style="color:#2e2a4a"><a href="#034353" label="[03:43:53]">&lt;Hagfish&gt;</a></span><span class="message">i think Mozilla is doing quite well at driving webASM in the right direction</span></div><div class="line" id="034422"><span class="nick" style="color:#8dd3c7"><a href="#034422" label="[03:44:22]">&lt;oriansj&gt;</a></span><span class="message">webASM incompatibilities between browsers is still a major thing</span></div><div class="line" id="034433"><span class="nick" style="color:#8dd3c7"><a href="#034433" label="[03:44:33]">&lt;oriansj&gt;</a></span><span class="message">especially in regards to performance and halting</span></div><div class="line" id="034446"><span class="nick" style="color:#2e2a4a"><a href="#034446" label="[03:44:46]">&lt;Hagfish&gt;</a></span><span class="message">at least there are competing implementations</span></div><div class="line" id="034546"><span class="nick" style="color:#8dd3c7"><a href="#034546" label="[03:45:46]">&lt;oriansj&gt;</a></span><span class="message">without a formal document saying these primitives *MUST* be implemented and developers limiting themseles to only those</span></div><div class="line" id="034654"><span class="nick" style="color:#8dd3c7"><a href="#034654" label="[03:46:54]">&lt;oriansj&gt;</a></span><span class="message">So instead of generic x86 binarires that run everywhere; we get --arch=native but now it breaks moving from a 2GHz i7 to a 3GHz i7</span></div><div class="line" id="034726"><span class="nick" style="color:#8dd3c7"><a href="#034726" label="[03:47:26]">&lt;oriansj&gt;</a></span><span class="message">because you know, it isn't exactly the same....</span></div><div class="line" id="034728"><span class="nick" style="color:#2e2a4a"><a href="#034728" label="[03:47:28]">&lt;Hagfish&gt;</a></span><span class="message">seriously?</span></div><div class="line" id="034800"><span class="nick" style="color:#2e2a4a"><a href="#034800" label="[03:48:00]">&lt;Hagfish&gt;</a></span><span class="message">i haven't looked into implementation details, but i haven't heard it being that bad</span></div><div class="line" id="034807"><span class="nick" style="color:#8dd3c7"><a href="#034807" label="[03:48:07]">&lt;oriansj&gt;</a></span><span class="message">node.js is full of such bullshit stories</span></div><div class="line" id="034849"><span class="nick" style="color:#2e2a4a"><a href="#034849" label="[03:48:49]">&lt;Hagfish&gt;</a></span><span class="message">ah, node.js, i could probably believe that</span></div><div class="line" id="034901"><span class="nick" style="color:#8dd3c7"><a href="#034901" label="[03:49:01]">&lt;oriansj&gt;</a></span><span class="message">hell, they managed to fuck up appending a char to a string or returning #t or #f if a number was even</span></div><div class="line" id="034958"><span class="nick" style="color:#2e2a4a"><a href="#034958" label="[03:49:58]">&lt;Hagfish&gt;</a></span><span class="message">is_odd?</span></div><div class="line" id="035007"><span class="nick" style="color:#2e2a4a"><a href="#035007" label="[03:50:07]">&lt;Hagfish&gt;</a></span><span class="message">is_even, whatever</span></div><div class="line" id="035144"><span class="nick" style="color:#8dd3c7"><a href="#035144" label="[03:51:44]">&lt;oriansj&gt;</a></span><span class="message">they actually wrote it like this: is_odd.js:: return !is_even(a);  is_even.js:: return !is_odd(a);</span></div><div class="line" id="035236"><span class="nick" style="color:#8dd3c7"><a href="#035236" label="[03:52:36]">&lt;oriansj&gt;</a></span><span class="message">like what the mickey mouse gangbang wacked out on coke bullshit is that?</span></div><div class="line" id="035401"><span class="nick" style="color:#8dd3c7"><a href="#035401" label="[03:54:01]">&lt;oriansj&gt;</a></span><span class="message">I swear, half the code is written by markov chain generators</span></div><div class="line" id="035512"><span class="nick" style="color:#8dd3c7"><a href="#035512" label="[03:55:12]">&lt;oriansj&gt;</a></span><span class="message">with a QA process of: fuckit, they already paid me, ship the shit already so that we can bill them to &quot;fix it&quot;</span></div><div class="line" id="035543"><span class="nick" style="color:#2e2a4a"><a href="#035543" label="[03:55:43]">&lt;Hagfish&gt;</a></span><span class="message">at least a markov chain generator could be said to have some sort of logic driving it</span></div><div class="line" id="035637"><span class="nick" style="color:#8dd3c7"><a href="#035637" label="[03:56:37]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: like seriously, you need 18GB of shit to build freaking hello_world.js???</span></div><div class="line" id="035712"><span class="nick" style="color:#8dd3c7"><a href="#035712" label="[03:57:12]">&lt;oriansj&gt;</a></span><span class="message">I just can't even with those javascript people.</span></div><div class="line" id="035732"><span class="nick" style="color:#8dd3c7"><a href="#035732" label="[03:57:32]">&lt;oriansj&gt;</a></span><span class="message">No thinking about systems engineering</span></div><div class="line" id="035756"><span class="nick" style="color:#8dd3c7"><a href="#035756" label="[03:57:56]">&lt;oriansj&gt;</a></span><span class="message">No planning for system administration of the program</span></div><div class="line" id="035801"><span class="nick" style="color:#2e2a4a"><a href="#035801" label="[03:58:01]">&lt;Hagfish&gt;</a></span><span class="message">yeah, the ecosystem does seem to be a dumpster fire, and the best practice seems to be &quot;try only using the garbage that isn't on fire&quot;</span></div><div class="line" id="035824"><span class="nick" style="color:#8dd3c7"><a href="#035824" label="[03:58:24]">&lt;oriansj&gt;</a></span><span class="message">except it is all on fire</span></div><div class="line" id="035834"><span class="nick" style="color:#2e2a4a"><a href="#035834" label="[03:58:34]">&lt;Hagfish&gt;</a></span><span class="message">or transitively connected to fire, yeah</span></div><div class="line" id="035852"><span class="nick" style="color:#8dd3c7"><a href="#035852" label="[03:58:52]">&lt;oriansj&gt;</a></span><span class="message">fuck jquery needs jquery to run</span></div><div class="line" id="035912"><span class="nick" style="color:#8dd3c7"><a href="#035912" label="[03:59:12]">&lt;oriansj&gt;</a></span><span class="message">there is nothing not on fire in that shitbox</span></div><div class="line" id="035930"><span class="nick" style="color:#8dd3c7"><a href="#035930" label="[03:59:30]">&lt;oriansj&gt;</a></span><span class="message">I'm not saving it *EVER*</span></div><div class="line" id="040009"><span class="nick" style="color:#8dd3c7"><a href="#040009" label="[04:00:09]">&lt;oriansj&gt;</a></span><span class="message">There is no dollar amount large enough to make me care about bootstrapping that  shitscape</span></div><div class="line" id="040041"><span class="nick" style="color:#2e2a4a"><a href="#040041" label="[04:00:41]">&lt;Hagfish&gt;</a></span><span class="message">the half-life of an average javascript project is probably less than 2 years, so there might not be much that needs saving</span></div><div class="line" id="040213"><span class="nick" style="color:#8dd3c7"><a href="#040213" label="[04:02:13]">&lt;oriansj&gt;</a></span><span class="message">The JavaScript compilers have circular dependencies so deep, mathematics professors could use them as examples of 90+ dimensional Cline bottles</span></div><div class="line" id="040249"><span class="nick" style="color:#6b8072"><a href="#040249" label="[04:02:49]">&lt;fossy&gt;</a></span><span class="message">oriansj: I would be happy to do some fuzzing on m2 planet and mescc tools</span></div><div class="line" id="040313"><span class="nick" style="color:#8dd3c7"><a href="#040313" label="[04:03:13]">&lt;oriansj&gt;</a></span><span class="message">fossy: if you would like; go for it</span></div><div class="line" id="040927"><span class="nick" style="color:#8dd3c7"><a href="#040927" label="[04:09:27]">&lt;oriansj&gt;</a></span><span class="message">fossy: how goes the kaem enhancements?</span></div><div class="line" id="041247"><span class="nick" style="color:#6b8072"><a href="#041247" label="[04:12:47]">&lt;fossy&gt;</a></span><span class="message">well</span></div><div class="line" id="041253"><span class="nick" style="color:#6b8072"><a href="#041253" label="[04:12:53]">&lt;fossy&gt;</a></span><span class="message">I decided to do it the proper way</span></div><div class="line" id="041309"><span class="nick" style="color:#8dd3c7"><a href="#041309" label="[04:13:09]">&lt;oriansj&gt;</a></span><span class="message">fossy: good</span></div><div class="line" id="041313"><span class="nick" style="color:#6b8072"><a href="#041313" label="[04:13:13]">&lt;fossy&gt;</a></span><span class="message">and so im trying to implement chdir() in M2-Planet functions</span></div><div class="line" id="041325"><span class="nick" style="color:#6b8072"><a href="#041325" label="[04:13:25]">&lt;fossy&gt;</a></span><span class="message">but im having problems</span></div><div class="line" id="041337"><span class="nick" style="color:#6b8072"><a href="#041337" label="[04:13:37]">&lt;fossy&gt;</a></span><span class="message">basically its not working and I cant tell why</span></div><div class="line" id="041354"><span class="nick" style="color:#8dd3c7"><a href="#041354" label="[04:13:54]">&lt;oriansj&gt;</a></span><span class="message">fossy: well you would just assume the C function and let me figure out how to implement it</span></div><div class="line" id="041408"><span class="nick" style="color:#6b8072"><a href="#041408" label="[04:14:08]">&lt;fossy&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="041415"><span class="nick" style="color:#8dd3c7"><a href="#041415" label="[04:14:15]">&lt;oriansj&gt;</a></span><span class="message">as it is just a syscall if I rmemeber correctly</span></div><div class="line" id="041421"><span class="nick" style="color:#6b8072"><a href="#041421" label="[04:14:21]">&lt;fossy&gt;</a></span><span class="message">oriansj: it is</span></div><div class="line" id="041441"><span class="nick" style="color:#6b8072"><a href="#041441" label="[04:14:41]">&lt;fossy&gt;</a></span><span class="message">oriansj: my concern with my improvements is inflating the size of kaem-optional-seed</span></div><div class="line" id="041521"><span class="nick" style="color:#8dd3c7"><a href="#041521" label="[04:15:21]">&lt;oriansj&gt;</a></span><span class="message">fossy: I'm going to replace kaem-optional-seed with one hand written in assembly and then hex0; so don't worry about that</span></div><div class="line" id="041531"><span class="nick" style="color:#6b8072"><a href="#041531" label="[04:15:31]">&lt;fossy&gt;</a></span><span class="message">ah, nice</span></div><div class="line" id="041652"><span class="nick" style="color:#6b8072"><a href="#041652" label="[04:16:52]">&lt;fossy&gt;</a></span><span class="message">oriansj: how then would the bootstrap be initiated?</span></div><div class="line" id="041705"><span class="nick" style="color:#6b8072"><a href="#041705" label="[04:17:05]">&lt;fossy&gt;</a></span><span class="message">other than making hex0-seed JIT compile hex0</span></div><div class="line" id="041713"><span class="nick" style="color:#8dd3c7"><a href="#041713" label="[04:17:13]">&lt;oriansj&gt;</a></span><span class="message">but it would be helpful if you write a test for M2-Planet for the chdir primtive for when I am implementing it</span></div><div class="line" id="041744"><span class="nick" style="color:#6b8072"><a href="#041744" label="[04:17:44]">&lt;fossy&gt;</a></span><span class="message">(And jit compile kaem)</span></div><div class="line" id="041750"><span class="nick" style="color:#8dd3c7"><a href="#041750" label="[04:17:50]">&lt;oriansj&gt;</a></span><span class="message">fossy: 2 binary seeds: kaem (written in hex0) and hex0</span></div><div class="line" id="041759"><span class="nick" style="color:#8dd3c7"><a href="#041759" label="[04:17:59]">&lt;oriansj&gt;</a></span><span class="message">running on a binary Posix kernel</span></div><div class="line" id="041834"><span class="nick" style="color:#8dd3c7"><a href="#041834" label="[04:18:34]">&lt;oriansj&gt;</a></span><span class="message">we will solve those bootstraps via hardware level work</span></div><div class="line" id="041928"><span class="nick" style="color:#8dd3c7"><a href="#041928" label="[04:19:28]">&lt;oriansj&gt;</a></span><span class="message">perfect isn't possible now but we are a hell of alot closer than where we were 3 years ago</span></div><div class="line" id="042120"><span class="nick" style="color:#8dd3c7"><a href="#042120" label="[04:21:20]">&lt;oriansj&gt;</a></span><span class="message">I figure I can get kaem down to 1KB for the seed if I strip out everything possible; then after kaem is built via M2-Planet, simply switch to that kaem to do the rest</span></div><div class="line" id="042218"><span class="nick" style="color:#8dd3c7"><a href="#042218" label="[04:22:18]">&lt;oriansj&gt;</a></span><span class="message">say make it just plain ./kaem with no support for options and it only runs kaem.run in the current directory</span></div><div class="line" id="042301"><span class="nick" style="color:#8dd3c7"><a href="#042301" label="[04:23:01]">&lt;oriansj&gt;</a></span><span class="message">that way fossy you can make the full kaem into a dream</span></div><div class="line" id="042338"><span class="nick" style="color:#8dd3c7"><a href="#042338" label="[04:23:38]">&lt;oriansj&gt;</a></span><span class="message">Lots of useful features, perhaps even powerful enough to be used to build make</span></div><div class="line" id="042444"><span class="nick" style="color:#8dd3c7"><a href="#042444" label="[04:24:44]">&lt;oriansj&gt;</a></span><span class="message">and as long as you preserve the buildable via M2-Planet, it will not cause any problems down the road when we solve the posix bootstrap problem</span></div><div class="line" id="042800"><span class="nick" style="color:#8dd3c7"><a href="#042800" label="[04:28:00]">&lt;oriansj&gt;</a></span><span class="message">even a minimal kaem will solve the shell problem of the bootstrap; as one can make a linux image with that kaem as the init and on power on, it can bootstrap everything and switch out the init to a proper one and reboot when done</span></div><div class="line" id="042934"><span class="nick" style="color:#8dd3c7"><a href="#042934" label="[04:29:34]">&lt;oriansj&gt;</a></span><span class="message">I probably should write up these details in the talk notes; so that those sort of questions in the future have a ready answer.</span></div><div class="line" id="042958"><span class="nick" style="color:#6b8072"><a href="#042958" label="[04:29:58]">&lt;fossy&gt;</a></span><span class="message">oriansj: however we will have to refractor the AMD64/x86 kaem.run to be able to run from / to allow it to be run by minimal kaem</span></div><div class="line" id="043056"><span class="nick" style="color:#8dd3c7"><a href="#043056" label="[04:30:56]">&lt;oriansj&gt;</a></span><span class="message">fossy: or just ./ and ../</span></div><div class="line" id="043115"><span class="nick" style="color:#6b8072"><a href="#043115" label="[04:31:15]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="043148"><span class="nick" style="color:#8dd3c7"><a href="#043148" label="[04:31:48]">&lt;oriansj&gt;</a></span><span class="message">which I believe is what they currently leverage</span></div><div class="line" id="043156"><span class="nick" style="color:#6b8072"><a href="#043156" label="[04:31:56]">&lt;fossy&gt;</a></span><span class="message">but we need to make sure kaem.run can be in / to be able to run it from a simple POSIX kernel, do we not?</span></div><div class="line" id="043205"><span class="nick" style="color:#6b8072"><a href="#043205" label="[04:32:05]">&lt;fossy&gt;</a></span><span class="message">otherwise it has to cd first</span></div><div class="line" id="043326"><span class="nick" style="color:#8dd3c7"><a href="#043326" label="[04:33:26]">&lt;oriansj&gt;</a></span><span class="message">fossy: well that is a trivial check, as root on a system pushd / ; git clone messc-tools-seed ; build and see if we run into any issues</span></div><div class="line" id="043357"><span class="nick" style="color:#8dd3c7"><a href="#043357" label="[04:33:57]">&lt;oriansj&gt;</a></span><span class="message">but yes you are absolutely correct in that it does need to be tested fossy</span></div><div class="line" id="043418"><span class="nick" style="color:#8dd3c7"><a href="#043418" label="[04:34:18]">&lt;oriansj&gt;</a></span><span class="message">as we must always test before shipping promises to others</span></div><div class="line" id="043554"><span class="nick" style="color:#6b8072"><a href="#043554" label="[04:35:54]">&lt;fossy&gt;</a></span><span class="message">so in the end there will only be four seeds (excluding microcode) on x86/amd64? Bootloader kernel kaem hex0?</span></div><div class="line" id="043620"><span class="nick" style="color:#6b8072"><a href="#043620" label="[04:36:20]">&lt;fossy&gt;</a></span><span class="message">for the user that doesn't or cannot use special hardware?</span></div><div class="line" id="043627"><span class="nick" style="color:#8dd3c7"><a href="#043627" label="[04:36:27]">&lt;oriansj&gt;</a></span><span class="message">armv7l and aarch64 too</span></div><div class="line" id="043639"><span class="nick" style="color:#8dd3c7"><a href="#043639" label="[04:36:39]">&lt;oriansj&gt;</a></span><span class="message">correct</span></div><div class="line" id="043743"><span class="nick" style="color:#8dd3c7"><a href="#043743" label="[04:37:43]">&lt;oriansj&gt;</a></span><span class="message">and we will have to provide a way to make those 4 seeds on standard hardware as well as on special hardware</span></div><div class="line" id="043759"><span class="nick" style="color:#6b8072"><a href="#043759" label="[04:37:59]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="043940"><span class="nick" style="color:#8dd3c7"><a href="#043940" label="[04:39:40]">&lt;oriansj&gt;</a></span><span class="message">and the bootloader, definitely will be written in assembly (possibly hex0) to fit in the MBR (less than 512bytes)</span></div><div class="line" id="044032"><span class="nick" style="color:#8dd3c7"><a href="#044032" label="[04:40:32]">&lt;oriansj&gt;</a></span><span class="message">and the Kernel will probably be written in M2-Planet (possibly ported to assembly if someone wants to shrink the size down by a factor of 4-6)</span></div><div class="line" id="044035"><span class="nick" style="color:#6b8072"><a href="#044035" label="[04:40:35]">&lt;fossy&gt;</a></span><span class="message">What will the kernel be written in</span></div><div class="line" id="044042"><span class="nick" style="color:#6b8072"><a href="#044042" label="[04:40:42]">&lt;fossy&gt;</a></span><span class="message">ah</span></div><div class="line" id="044109"><span class="nick" style="color:#8dd3c7"><a href="#044109" label="[04:41:09]">&lt;oriansj&gt;</a></span><span class="message">M2-Planet can run on bare metal (such as the special hardware)</span></div><div class="line" id="044112"><span class="nick" style="color:#6b8072"><a href="#044112" label="[04:41:12]">&lt;fossy&gt;</a></span><span class="message">now can we keep this under.. hm.. 100KB?</span></div><div class="line" id="044135"><span class="nick" style="color:#6b8072"><a href="#044135" label="[04:41:35]">&lt;fossy&gt;</a></span><span class="message">should be</span></div><div class="line" id="044151"><span class="nick" style="color:#8dd3c7"><a href="#044151" label="[04:41:51]">&lt;oriansj&gt;</a></span><span class="message">fossy: depends on how much functionality we feel needs to be shoved into that posix</span></div><div class="line" id="044201"><span class="nick" style="color:#6b8072"><a href="#044201" label="[04:42:01]">&lt;fossy&gt;</a></span><span class="message">minimal</span></div><div class="line" id="044225"><span class="nick" style="color:#6b8072"><a href="#044225" label="[04:42:25]">&lt;fossy&gt;</a></span><span class="message">I honestly feel like we should only include enough functionality to make it run the kaem seed</span></div><div class="line" id="044243"><span class="nick" style="color:#8dd3c7"><a href="#044243" label="[04:42:43]">&lt;oriansj&gt;</a></span><span class="message">filesystem support, single thread only, subset of syscalls sort of deal</span></div><div class="line" id="044246"><span class="nick" style="color:#6b8072"><a href="#044246" label="[04:42:46]">&lt;fossy&gt;</a></span><span class="message">and boot on a wide range of machines</span></div><div class="line" id="044250"><span class="nick" style="color:#6b8072"><a href="#044250" label="[04:42:50]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="044303"><span class="nick" style="color:#6b8072"><a href="#044303" label="[04:43:03]">&lt;fossy&gt;</a></span><span class="message">but only certain filesystems (maybe only one?)</span></div><div class="line" id="044308"><span class="nick" style="color:#8dd3c7"><a href="#044308" label="[04:43:08]">&lt;oriansj&gt;</a></span><span class="message">which will require drivers, which really adds to size</span></div><div class="line" id="044317"><span class="nick" style="color:#6b8072"><a href="#044317" label="[04:43:17]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="044320"><span class="nick" style="color:#8dd3c7"><a href="#044320" label="[04:43:20]">&lt;oriansj&gt;</a></span><span class="message">I was thinking just ext2</span></div><div class="line" id="044325"><span class="nick" style="color:#6b8072"><a href="#044325" label="[04:43:25]">&lt;fossy&gt;</a></span><span class="message">yeah ext2</span></div><div class="line" id="044347"><span class="nick" style="color:#6b8072"><a href="#044347" label="[04:43:47]">&lt;fossy&gt;</a></span><span class="message">Knight wont have any of these problems though yay</span></div><div class="line" id="044445"><span class="nick" style="color:#8dd3c7"><a href="#044445" label="[04:44:45]">&lt;oriansj&gt;</a></span><span class="message">well, one could implement a variation of the stage0 steps in x86 but one will still depend upon bios calls</span></div><div class="line" id="044505"><span class="nick" style="color:#8dd3c7"><a href="#044505" label="[04:45:05]">&lt;oriansj&gt;</a></span><span class="message">which these days are 1.8MB+</span></div><div class="line" id="044639"><span class="nick" style="color:#6b8072"><a href="#044639" label="[04:46:39]">&lt;fossy&gt;</a></span><span class="message">hm I guess</span></div><div class="line" id="044736"><span class="nick" style="color:#8dd3c7"><a href="#044736" label="[04:47:36]">&lt;oriansj&gt;</a></span><span class="message">well one could work around the bios entirely and directly interface with the hardware via internal drivers but that is alot bigger</span></div><div class="line" id="044800"><span class="nick" style="color:#8dd3c7"><a href="#044800" label="[04:48:00]">&lt;oriansj&gt;</a></span><span class="message">but possible with enough work</span></div><div class="line" id="044817"><span class="nick" style="color:#6b8072"><a href="#044817" label="[04:48:17]">&lt;fossy&gt;</a></span><span class="message">.</span></div><div class="line" id="044836"><span class="nick" style="color:#6b8072"><a href="#044836" label="[04:48:36]">&lt;fossy&gt;</a></span><span class="message">alot of work</span></div><div class="line" id="044909"><span class="nick" style="color:#8dd3c7"><a href="#044909" label="[04:49:09]">&lt;oriansj&gt;</a></span><span class="message">perhaps a gold star project for someone who comes late to the project and wants to do the &quot;impossible&quot;</span></div><div class="line" id="045056"><span class="nick" style="color:#8dd3c7"><a href="#045056" label="[04:50:56]">&lt;oriansj&gt;</a></span><span class="message">I mean, I literally laid out 90% of the core functionality required; one needs only figure out 5 syscall replacements to go from hex0 to cc_*</span></div><div class="line" id="045208"><span class="nick" style="color:#6b8072"><a href="#045208" label="[04:52:08]">&lt;fossy&gt;</a></span><span class="message">what are those 5</span></div><div class="line" id="045212"><span class="nick" style="color:#8dd3c7"><a href="#045212" label="[04:52:12]">&lt;oriansj&gt;</a></span><span class="message">after that, if we kept our minimal posix simple enough; it could be built via cc_* and then they can just leverage the rest of the steps</span></div><div class="line" id="045322"><span class="nick" style="color:#8dd3c7"><a href="#045322" label="[04:53:22]">&lt;oriansj&gt;</a></span><span class="message">read-from keyboard, write to screen, read from disk, write to disk and halt</span></div><div class="line" id="045411"><span class="nick" style="color:#8dd3c7"><a href="#045411" label="[04:54:11]">&lt;oriansj&gt;</a></span><span class="message">and floppy disks would be easier than USB flashdrives</span></div><div class="line" id="045428"><span class="nick" style="color:#8dd3c7"><a href="#045428" label="[04:54:28]">&lt;oriansj&gt;</a></span><span class="message">so keep everything under 1.44MB and we should be good</span></div><div class="line" id="045738"><span class="nick" style="color:#8dd3c7"><a href="#045738" label="[04:57:38]">&lt;oriansj&gt;</a></span><span class="message">as mescc-tools-seed for AMD64 generates 432KB of binaries, so 1MB for the kernel and various tools required for bootstrapping</span></div><div class="line" id="050707"><span class="nick" style="color:#8dd3c7"><a href="#050707" label="[05:07:07]">&lt;oriansj&gt;</a></span><span class="message">(with mes-m2: 169,147bytes (currently and growing) M2-Planet: 142,607bytes (currently and growing) M1: 36,044bytes (until we add support for RISC-V) hex2: 33,721bytes (until we add support for RISC-V) blood-elf: 11,590bytes (probably forever) get_machine: 6,630bytes (probably forever) and kaem: 20,785bytes (currently and growing)</span></div><div class="line" id="050931"><span class="nick" style="color:#8dd3c7"><a href="#050931" label="[05:09:31]">&lt;oriansj&gt;</a></span><span class="message">or if we limit ourselves to cc_amd64: 16,079bytes (probably forever), minimal hex2: 1,487bytes and M0:1,860bytes</span></div><div class="line" id="051058"><span class="nick" style="color:#8dd3c7"><a href="#051058" label="[05:10:58]">&lt;oriansj&gt;</a></span><span class="message">for a grand total of 19,426bytes and say 1-2KB for a minimal kaem</span></div><div class="line" id="052911"><span class="nick" style="color:#6b8072"><a href="#052911" label="[05:29:11]">&lt;fossy&gt;</a></span><span class="message">oriansj: im still confused how one would run kaem-optional-seed as init from a initramfs</span></div><div class="line" id="052934"><span class="nick" style="color:#6b8072"><a href="#052934" label="[05:29:34]">&lt;fossy&gt;</a></span><span class="message">as youd still need to chdir from /?</span></div><div class="line" id="053202"><span class="nick" style="color:#8dd3c7"><a href="#053202" label="[05:32:02]">&lt;oriansj&gt;</a></span><span class="message">fossy: the kernel is the program that starts init</span></div><div class="line" id="053234"><span class="nick" style="color:#8dd3c7"><a href="#053234" label="[05:32:34]">&lt;oriansj&gt;</a></span><span class="message">so on power-on the kernel loads the init program and executes it</span></div><div class="line" id="053254"><span class="nick" style="color:#8dd3c7"><a href="#053254" label="[05:32:54]">&lt;oriansj&gt;</a></span><span class="message">we just make /sbin/init our kaem</span></div><div class="line" id="053353"><span class="nick" style="color:#8dd3c7"><a href="#053353" label="[05:33:53]">&lt;oriansj&gt;</a></span><span class="message">or pass a kernel flag on boot to use /AMD64/kaem</span></div><div class="line" id="053546"><span class="nick" style="color:#6b8072"><a href="#053546" label="[05:35:46]">&lt;fossy&gt;</a></span><span class="message">ah sure</span></div><div class="line" id="053833"><span class="nick" style="color:#8dd3c7"><a href="#053833" label="[05:38:33]">&lt;oriansj&gt;</a></span><span class="message">greetings ax-hack</span></div><div class="line" id="054956"><span class="nick" style="color:#6b8072"><a href="#054956" label="[05:49:56]">&lt;fossy&gt;</a></span><span class="message">hi ax-hack</span></div><div class="line" id="085019"><span class="nick" style="color:#6b8072"><a href="#085019" label="[08:50:19]">&lt;fossy&gt;</a></span><span class="message">giving kaem a workout with fuzzing</span></div><div class="line" id="085047"><span class="nick" style="color:#6b8072"><a href="#085047" label="[08:50:47]">&lt;fossy&gt;</a></span><span class="message">got a few improvements to make it buildable with gcc</span></div><div class="line" id="085101"><span class="nick" style="color:#6b8072"><a href="#085101" label="[08:51:01]">&lt;fossy&gt;</a></span><span class="message">also two functions can be replaced with functions/string.c</span></div><div class="line" id="102529"><span class="nick" style="color:#6b8072"><a href="#102529" label="[10:25:29]">&lt;fossy&gt;</a></span><span class="message">flipping tcc</span></div><div class="line" id="102546"><span class="nick" style="color:#6b8072"><a href="#102546" label="[10:25:46]">&lt;fossy&gt;</a></span><span class="message">dosent want to not segfault &gt;:(</span></div><div class="line" id="113944"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="120149"><span class="nick" style="color:#80b1d3"><a href="#120149" label="[12:01:49]">&lt;dddddd&gt;</a></span><span class="message">Hallo booters!</span></div><div class="line" id="120838"><span class="nick" style="color:#80b1d3"><a href="#120838" label="[12:08:38]">&lt;dddddd&gt;</a></span><span class="message">fossy, what do you have so far for chdir()?</span></div><div class="line" id="123847"><span class="nick" style="color:#8dd3c7"><a href="#123847" label="[12:38:47]">&lt;oriansj&gt;</a></span><span class="message">fossy: well kaem, mescc-tools and M2-Planet have always been buildable via gcc</span></div><div class="line" id="124010"><span class="nick" style="color:#8dd3c7"><a href="#124010" label="[12:40:10]">&lt;oriansj&gt;</a></span><span class="message">fossy: yeah janneke went through alot of pain just getting tcc himself. (it is a poorly written program; hence why we want MesCC to grow to be able to build GCC directly)</span></div><div class="line" id="124022"><span class="nick" style="color:#8dd3c7"><a href="#124022" label="[12:40:22]">&lt;oriansj&gt;</a></span><span class="message">morning dddddd</span></div><div class="line" id="124035"><span class="nick" style="color:#80b1d3"><a href="#124035" label="[12:40:35]">&lt;dddddd&gt;</a></span><span class="message">hello oriansj</span></div><div class="line" id="124048"><span class="nick">***</span><span class="message notice">janneke_ is now known as janneke</span></div><div class="line" id="124357"><span class="nick" style="color:#8dd3c7"><a href="#124357" label="[12:43:57]">&lt;oriansj&gt;</a></span><span class="message">dddddd: I'll probably knock chdir in M2-Planet out today</span></div><div class="line" id="124448"><span class="nick" style="color:#8dd3c7"><a href="#124448" label="[12:44:48]">&lt;oriansj&gt;</a></span><span class="message">and access too probably in the same test</span></div><div class="line" id="124456"><span class="nick" style="color:#80b1d3"><a href="#124456" label="[12:44:56]">&lt;dddddd&gt;</a></span><span class="message">yeah, I was looking at the syscall and it's simple enough. Just wanted to help fossy to understand their issue.</span></div><div class="line" id="124538"><span class="nick" style="color:#8dd3c7"><a href="#124538" label="[12:45:38]">&lt;oriansj&gt;</a></span><span class="message">of course, we always help each other here</span></div><div class="line" id="144813"><span class="nick" style="color:#8dd3c7"><a href="#144813" label="[14:48:13]">&lt;oriansj&gt;</a></span><span class="message">well I'm just gonna write chdir, fchdir and access off the cuff without testing (I'll let fossy make M2-Planet tests for them)</span></div><div class="line" id="145523"><span class="nick" style="color:#8dd3c7"><a href="#145523" label="[14:55:23]">&lt;oriansj&gt;</a></span><span class="message">I'll do the knight versions, after I implement those primtives in knight-vm</span></div><div class="line" id="145804"><span class="nick" style="color:#8dd3c7"><a href="#145804" label="[14:58:04]">&lt;oriansj&gt;</a></span><span class="message">ok patches are up</span></div><div class="line" id="145957"><span class="nick" style="color:#80b1d3"><a href="#145957" label="[14:59:57]">&lt;dddddd&gt;</a></span><span class="message">I guess access can help/complement test22.</span></div><div class="line" id="151016"><span class="nick" style="color:#8dd3c7"><a href="#151016" label="[15:10:16]">&lt;oriansj&gt;</a></span><span class="message">or an arbitrary new test could be created that uses both</span></div><div class="line" id="161438"><span class="nick" style="color:#8dd3c7"><a href="#161438" label="[16:14:38]">&lt;oriansj&gt;</a></span><span class="message">ok, got those primitives into stage0's vm</span></div><div class="line" id="161609"><span class="nick">***</span><span class="message notice">ng0_ is now known as n0</span></div><div class="line" id="161659"><span class="nick" style="color:#8dd3c7"><a href="#161659" label="[16:16:59]">&lt;oriansj&gt;</a></span><span class="message">and first draft for knight-posix support is done (as chdir, fchdir and access are all meaningless in knight-native [bare-metal mode])</span></div><div class="line" id="161830"><span class="nick" style="color:#8dd3c7"><a href="#161830" label="[16:18:30]">&lt;oriansj&gt;</a></span><span class="message">so fossy they are ready for you to test (and create a M2-Planet test for them); so that you'll be able to leverage them in kaem</span></div><div class="line" id="161857"><span class="nick">***</span><span class="message notice">n0 is now known as ng0_</span></div><div class="line" id="161921"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="162346"><span class="nick" style="color:#8dd3c7"><a href="#162346" label="[16:23:46]">&lt;oriansj&gt;</a></span><span class="message">I think that is enough changes for a stage0 release</span></div><div class="line" id="163005"><span class="nick" style="color:#8dd3c7"><a href="#163005" label="[16:30:05]">&lt;oriansj&gt;</a></span><span class="message">ok a brand new stage0 release is now up</span></div><div class="line" id="163319"><span class="nick" style="color:#8dd3c7"><a href="#163319" label="[16:33:19]">&lt;oriansj&gt;</a></span><span class="message">speaking of which, dddddd when you are ready and AArch64 is merged in we can do a release of M2-Planet to along with it</span></div><div class="line" id="164012"><span class="nick" style="color:#80b1d3"><a href="#164012" label="[16:40:12]">&lt;dddddd&gt;</a></span><span class="message">I'm using this weekend to improve the documentation you saw: reading logs about the endianess and ARM documentation. Then I think it's just a matter of split the patch a bit, in logical commits because even if it's not a huge patch it's not that small. Hopefuly end of the month (but no promises yet).</span></div><div class="line" id="164219"><span class="nick" style="color:#8dd3c7"><a href="#164219" label="[16:42:19]">&lt;oriansj&gt;</a></span><span class="message">sounds good dddddd</span></div><div class="line" id="164325"><span class="nick" style="color:#80b1d3"><a href="#164325" label="[16:43:25]">&lt;dddddd&gt;</a></span><span class="message">thanks for your patience (:</span></div><div class="line" id="164402"><span class="nick" style="color:#8dd3c7"><a href="#164402" label="[16:44:02]">&lt;oriansj&gt;</a></span><span class="message">dddddd: ^_^</span></div><div class="line" id="164501"><span class="nick" style="color:#8dd3c7"><a href="#164501" label="[16:45:01]">&lt;oriansj&gt;</a></span><span class="message">also fossy when you get kaem to a happy place and update docs/kaem.1 accordingly, we can do a mescc-tools release as well</span></div><div class="line" id="170028"><span class="nick" style="color:#8dd3c7"><a href="#170028" label="[17:00:28]">&lt;oriansj&gt;</a></span><span class="message">now we just need to find an entry level scheme programmer; who is willing to complete a half finished program, to complete janneke's scheme only bootstrap of Guix</span></div><div class="line" id="170313"><span class="nick" style="color:#8dd3c7"><a href="#170313" label="[17:03:13]">&lt;oriansj&gt;</a></span><span class="message">specifically this one: <a rel="nofollow" href="https://github.com/oriansj/slow-utils/blob/master/M1.scm">https://github.com/oriansj/slow-utils/blob/master/M1.scm</a> </span></div><div class="line" id="170417"><span class="nick" style="color:#8dd3c7"><a href="#170417" label="[17:04:17]">&lt;oriansj&gt;</a></span><span class="message">just need to implement eval-immediates, preserve-other and print-hex.</span></div><div class="line" id="170510"><span class="nick" style="color:#80b1d3"><a href="#170510" label="[17:05:10]">&lt;dddddd&gt;</a></span><span class="message">So many funny things I'd like to help with; so little time. I wish I could &quot;work&quot; full-time on these...</span></div><div class="line" id="170637"><span class="nick" style="color:#8dd3c7"><a href="#170637" label="[17:06:37]">&lt;oriansj&gt;</a></span><span class="message">dddddd: you and me both;</span></div><div class="line" id="171145"><span class="nick" style="color:#8dd3c7"><a href="#171145" label="[17:11:45]">&lt;oriansj&gt;</a></span><span class="message">although NLnet has been funding these sorts of projects: <a rel="nofollow" href="https://nlnet.nl/project/GNUMes/">https://nlnet.nl/project/GNUMes/</a> </span></div><div class="line" id="171218"><span class="nick" style="color:#8dd3c7"><a href="#171218" label="[17:12:18]">&lt;oriansj&gt;</a></span><span class="message">so you might qualify dddddd for some funds</span></div><div class="line" id="171325"><span class="nick" style="color:#8dd3c7"><a href="#171325" label="[17:13:25]">&lt;oriansj&gt;</a></span><span class="message">which might help you afford to have more time for the work</span></div><div class="line" id="171411"><span class="nick" style="color:#8dd3c7"><a href="#171411" label="[17:14:11]">&lt;oriansj&gt;</a></span><span class="message">and a port to AArch64 for M2-Planet certain would be the sorts of deliverables they would want</span></div><div class="line" id="171428"><span class="nick" style="color:#8dd3c7"><a href="#171428" label="[17:14:28]">&lt;oriansj&gt;</a></span><span class="message">(possibly your RISC-V work too)</span></div><div class="line" id="171508"><span class="nick" style="color:#8dd3c7"><a href="#171508" label="[17:15:08]">&lt;oriansj&gt;</a></span><span class="message">janneke: might even be able to help you with what you need to know dddddd</span></div><div class="line" id="171851"><span class="nick" style="color:#8dd3c7"><a href="#171851" label="[17:18:51]">&lt;oriansj&gt;</a></span><span class="message">My employer would be willing to sponsor me to dedicate 40hours per week (for 2 months) to mes-m2 if we found another party willing do a matching sponsorship with another developer. (I might be able to get them to stretch to 3 months if we could get a second party as well)</span></div><div class="line" id="172011"><span class="nick" style="color:#80b1d3"><a href="#172011" label="[17:20:11]">&lt;dddddd&gt;</a></span><span class="message">NLnet sounds familiar (I think is was mentioned along the &quot;horizon program&quot; for another project I follow from the sideline).</span></div><div class="line" id="172029"><span class="nick" style="color:#6d2462"><a href="#172029" label="[17:20:29]">*</a></span><span class="message">dddddd looking the website</span></div><div class="line" id="172349"><span class="nick" style="color:#80b1d3"><a href="#172349" label="[17:23:49]">&lt;dddddd&gt;</a></span><span class="message">I'm not good at burocracy, but the process there seems quite streamlined. The next deadline is in just a few days.</span></div><div class="line" id="172557"><span class="nick" style="color:#8dd3c7"><a href="#172557" label="[17:25:57]">&lt;oriansj&gt;</a></span><span class="message">dddddd: I just suck at bureaucracy but I work at the State of Michigan and discovered the power of nicely asking people for things.</span></div><div class="line" id="172743"><span class="nick" style="color:#80b1d3"><a href="#172743" label="[17:27:43]">&lt;dddddd&gt;</a></span><span class="message">hehe, so bad at it that can't even spell it correctly xD</span></div><div class="line" id="172922"><span class="nick" style="color:#8dd3c7"><a href="#172922" label="[17:29:22]">&lt;oriansj&gt;</a></span><span class="message">dddddd: believe me, it took 4 years to migrate one department from IBM's ClearCase to git for a net $700K/year savings. God that was draining</span></div><div class="line" id="173042"><span class="nick" style="color:#8dd3c7"><a href="#173042" label="[17:30:42]">&lt;oriansj&gt;</a></span><span class="message">but yesterday I got my 5year award; having net saved the State of Michigan $60 Million (plus or minus $2M)</span></div><div class="line" id="173121"><span class="nick" style="color:#80b1d3"><a href="#173121" label="[17:31:21]">&lt;dddddd&gt;</a></span><span class="message">well done! congratulations!!</span></div><div class="line" id="173205"><span class="nick" style="color:#8dd3c7"><a href="#173205" label="[17:32:05]">&lt;oriansj&gt;</a></span><span class="message">Well actually that was considered a black mark against me; and why I am still a P11 after 5 years when I should have been promoted to a P12 after 3years</span></div><div class="line" id="173508"><span class="nick" style="color:#8dd3c7"><a href="#173508" label="[17:35:08]">&lt;oriansj&gt;</a></span><span class="message">or kinda like how I nearly got fired for formally proving that Windows 10 doesn't comply with HIPPA and thus the State was breaking Federal Law</span></div><div class="line" id="173635"><span class="nick" style="color:#8dd3c7"><a href="#173635" label="[17:36:35]">&lt;oriansj&gt;</a></span><span class="message">or when Oracle nearly sued us because we found and reported sooo many security vulnerabilities to them that they have a 10+year backlog of RCE/PE CVEs to deal with</span></div><div class="line" id="173741"><span class="nick" style="color:#8dd3c7"><a href="#173741" label="[17:37:41]">&lt;oriansj&gt;</a></span><span class="message">(We ended up having to pay them because of the trouble we caused by finding security issues in their product....)</span></div><div class="line" id="173801"><span class="nick" style="color:#8dd3c7"><a href="#173801" label="[17:38:01]">&lt;oriansj&gt;</a></span><span class="message">God, working in government is fucking weird</span></div><div class="line" id="173843"><span class="nick" style="color:#80b1d3"><a href="#173843" label="[17:38:43]">&lt;dddddd&gt;</a></span><span class="message">wow</span></div><div class="line" id="173921"><span class="nick" style="color:#8dd3c7"><a href="#173921" label="[17:39:21]">&lt;oriansj&gt;</a></span><span class="message">hence why I really want to find a sponsor to support an alternate dev to work on mes-m2; so I could get 2 months paid away from that insanity</span></div><div class="line" id="174025"><span class="nick" style="color:#80b1d3"><a href="#174025" label="[17:40:25]">&lt;dddddd&gt;</a></span><span class="message">There's also (for ARM) <a rel="nofollow" href="https://nlnet.nl/project/GNUMes-arm/">https://nlnet.nl/project/GNUMes-arm/</a> </span></div><div class="line" id="174049"><span class="nick" style="color:#8dd3c7"><a href="#174049" label="[17:40:49]">&lt;oriansj&gt;</a></span><span class="message">dddddd: yep</span></div><div class="line" id="174151"><span class="nick" style="color:#8dd3c7"><a href="#174151" label="[17:41:51]">&lt;oriansj&gt;</a></span><span class="message">hence, since I don't need the money and money is available; why not get that money to someone else who could use it to do more good</span></div><div class="line" id="174551"><span class="nick" style="color:#8dd3c7"><a href="#174551" label="[17:45:51]">&lt;oriansj&gt;</a></span><span class="message">heck, I'd even pay $50 for someone to go through the effort of getting another mes-m2 developer sponsored</span></div><div class="line" id="174852"><span class="nick" style="color:#80b1d3"><a href="#174852" label="[17:48:52]">&lt;dddddd&gt;</a></span><span class="message">so tempting...</span></div><div class="line" id="175025"><span class="nick" style="color:#8dd3c7"><a href="#175025" label="[17:50:25]">&lt;oriansj&gt;</a></span><span class="message">dddddd: heck, I'll even give that money to a developer who got themselves sponsored</span></div><div class="line" id="175052"><span class="nick" style="color:#8dd3c7"><a href="#175052" label="[17:50:52]">&lt;oriansj&gt;</a></span><span class="message">(requirements must be atleast 2months of 40hr/week paid)</span></div><div class="line" id="180418"><span class="nick" style="color:#80b1d3"><a href="#180418" label="[18:04:18]">&lt;dddddd&gt;</a></span><span class="message">I can self-sponsor me for that time if that helps :P</span></div><div class="line" id="180914"><span class="nick" style="color:#80b1d3"><a href="#180914" label="[18:09:14]">&lt;dddddd&gt;</a></span><span class="message">Taking a sabbathical (or just quit and see what happens next) and happily burn some savings.</span></div><div class="line" id="180945"><span class="nick" style="color:#80b1d3"><a href="#180945" label="[18:09:45]">&lt;dddddd&gt;</a></span><span class="message">Would be that &quot;cheating&quot;?</span></div><div class="line" id="180949"><span class="nick" style="color:#8dd3c7"><a href="#180949" label="[18:09:49]">&lt;oriansj&gt;</a></span><span class="message">dddddd: I doubt the State of Michigan will consider that a matching sponsorship</span></div><div class="line" id="181017"><span class="nick" style="color:#80b1d3"><a href="#181017" label="[18:10:17]">&lt;dddddd&gt;</a></span><span class="message">no surprise</span></div><div class="line" id="181202"><span class="nick" style="color:#80b1d3"><a href="#181202" label="[18:12:02]">&lt;dddddd&gt;</a></span><span class="message">Anyway, it's not about money on my side; not for a couple of months.</span></div><div class="line" id="181402"><span class="nick" style="color:#8dd3c7"><a href="#181402" label="[18:14:02]">&lt;oriansj&gt;</a></span><span class="message">well, no rushing needed; let us focus on long term sustainability of the work</span></div><div class="line" id="181533"><span class="nick" style="color:#8dd3c7"><a href="#181533" label="[18:15:33]">&lt;oriansj&gt;</a></span><span class="message">hey dongcarl</span></div><div class="line" id="181547"><span class="nick" style="color:#234e69"><a href="#181547" label="[18:15:47]">&lt;dongcarl&gt;</a></span><span class="message">hello!</span></div><div class="line" id="181608"><span class="nick" style="color:#8dd3c7"><a href="#181608" label="[18:16:08]">&lt;oriansj&gt;</a></span><span class="message">how goes the bitcoin work?</span></div><div class="line" id="182124"><span class="nick" style="color:#234e69"><a href="#182124" label="[18:21:24]">&lt;dongcarl&gt;</a></span><span class="message">oriansj: Ah! Pretty good, I've got everything building for Linux, Windows, and OSX... Just waiting for some review from another build systems person :-)</span></div><div class="line" id="182204"><span class="nick" style="color:#234e69"><a href="#182204" label="[18:22:04]">&lt;dongcarl&gt;</a></span><span class="message">guix time-machine really simplified things, so I'm glad that happened</span></div><div class="line" id="182223"><span class="nick" style="color:#8dd3c7"><a href="#182223" label="[18:22:23]">&lt;oriansj&gt;</a></span><span class="message">oh and I have been meaning to ask you dongcarl; as I have been collecting the bootstrappable talk source materials here: <a rel="nofollow" href="https://github.com/oriansj/talk-notes">https://github.com/oriansj/talk-notes</a>  and wondered if you wanted to add yours to the set?</span></div><div class="line" id="182306"><span class="nick" style="color:#234e69"><a href="#182306" label="[18:23:06]">&lt;dongcarl&gt;</a></span><span class="message">Sure, I'm just not sure my talk lends itself to being in a repo that way...</span></div><div class="line" id="182324"><span class="nick" style="color:#234e69"><a href="#182324" label="[18:23:24]">&lt;dongcarl&gt;</a></span><span class="message">It was made using non-free software... And most of the slides are quite meaningless without my narration</span></div><div class="line" id="182326"><span class="nick" style="color:#8dd3c7"><a href="#182326" label="[18:23:26]">&lt;oriansj&gt;</a></span><span class="message">dongcarl: it is more historical reference anyway</span></div><div class="line" id="182349"><span class="nick" style="color:#8dd3c7"><a href="#182349" label="[18:23:49]">&lt;oriansj&gt;</a></span><span class="message">but no worries</span></div><div class="line" id="182408"><span class="nick" style="color:#234e69"><a href="#182408" label="[18:24:08]">&lt;dongcarl&gt;</a></span><span class="message">Haha one of these days I might transcribe the talk into a script</span></div><div class="line" id="182412"><span class="nick" style="color:#8dd3c7"><a href="#182412" label="[18:24:12]">&lt;oriansj&gt;</a></span><span class="message">if you notice: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/talks.org">https://github.com/oriansj/talk-notes/blob/master/talks.org</a> </span></div><div class="line" id="182415"><span class="nick" style="color:#234e69"><a href="#182415" label="[18:24:15]">&lt;dongcarl&gt;</a></span><span class="message">That might work better</span></div><div class="line" id="182430"><span class="nick" style="color:#234e69"><a href="#182430" label="[18:24:30]">&lt;dongcarl&gt;</a></span><span class="message">Awww thanks &lt;3</span></div><div class="line" id="182443"><span class="nick" style="color:#234e69"><a href="#182443" label="[18:24:43]">&lt;dongcarl&gt;</a></span><span class="message">Yeah lemme think about what's the best format</span></div><div class="line" id="182452"><span class="nick" style="color:#6d2462"><a href="#182452" label="[18:24:52]">*</a></span><span class="message">dongcarl adding to todo list</span></div><div class="line" id="182500"><span class="nick" style="color:#8dd3c7"><a href="#182500" label="[18:25:00]">&lt;oriansj&gt;</a></span><span class="message">sounds good</span></div><div class="line" id="205539"><span class="nick" style="color:#6b8072"><a href="#205539" label="[20:55:39]">&lt;fossy&gt;</a></span><span class="message">oriansj: danke, thanks a lot</span></div><div class="line" id="223007"><span class="nick" style="color:#80b1d3"><a href="#223007" label="[22:30:07]">&lt;dddddd&gt;</a></span><span class="message">Enough documenting the implementation for now. I uploaded an update as usual, oriansj. No hurry for the review, more is to come tomorrow.</span></div><div class="line" id="223052"><span class="nick" style="color:#6d2462"><a href="#223052" label="[22:30:52]">*</a></span><span class="message">dddddd takes a look at M1.scm</span></div><div class="line" id="232425"><span class="nick" style="color:#8dd3c7"><a href="#232425" label="[23:24:25]">&lt;oriansj&gt;</a></span><span class="message">fossy: I appreciate your help in making kaem better ^_^</span></div><div class="line" id="232440"><span class="nick" style="color:#6b8072"><a href="#232440" label="[23:24:40]">&lt;fossy&gt;</a></span><span class="message">no problem :D</span></div><div class="line" id="235859"><span class="nick" style="color:#6c3d55"><a href="#235859" label="[23:58:59]">&lt;stikonas&gt;</a></span><span class="message">at the moment mescc-tools-seed fails to build M2-Planet (./blood-elf-0 --64 -f hex2_linker.M1 -o hex2_linker-footer.M1): Subprocess error 139</span></div><br /></div></body></html>