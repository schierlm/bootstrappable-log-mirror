<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-10-31.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000036"><span class="nick" style="color:#389600"><a href="#000036" label="[00:00:36]">&lt;stikonas&gt;</a></span><span class="message">Hagfish: if you look at diffs, they are fairly small</span></div><div class="line" id="031701"><span class="nick" style="color:#2e2a4a"><a href="#031701" label="[03:17:01]">&lt;Hagfish&gt;</a></span><span class="message">that reminds me of the famous story about the plumber who taps a pipe and charges the home-owner $200</span></div><div class="line" id="034843"><span class="nick" style="color:#6b8072"><a href="#034843" label="[03:48:43]">&lt;pabs3&gt;</a></span><span class="message">a small lisp <a rel="nofollow" href="https://justine.lol/sectorlisp/">https://justine.lol/sectorlisp/</a>  <a rel="nofollow" href="https://news.ycombinator.com/item?id=29047584">https://news.ycombinator.com/item?id=29047584</a> </span></div><div class="line" id="160154"><span class="nick" style="color:#80b1d3"><a href="#160154" label="[16:01:54]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I've merged your M2-Planet work.</span></div><div class="line" id="160655"><span class="nick" style="color:#389600"><a href="#160655" label="[16:06:55]">&lt;stikonas&gt;</a></span><span class="message">thanks</span></div><div class="line" id="160807"><span class="nick" style="color:#80b1d3"><a href="#160807" label="[16:08:07]">&lt;oriansj&gt;</a></span><span class="message">and i am guessing the updated M2-Planet is needed for the x86 version to work</span></div><div class="line" id="160827"><span class="nick" style="color:#389600"><a href="#160827" label="[16:08:27]">&lt;stikonas&gt;</a></span><span class="message">mes-m2? No</span></div><div class="line" id="160843"><span class="nick" style="color:#389600"><a href="#160843" label="[16:08:43]">&lt;stikonas&gt;</a></span><span class="message">that's just unrelated M2-Planet improvement</span></div><div class="line" id="160904"><span class="nick" style="color:#80b1d3"><a href="#160904" label="[16:09:04]">&lt;oriansj&gt;</a></span><span class="message">ok</span></div><div class="line" id="160937"><span class="nick" style="color:#389600"><a href="#160937" label="[16:09:37]">&lt;stikonas&gt;</a></span><span class="message">might be useful if at some point we want to rebase mes-m2 on top of newer mes...</span></div><div class="line" id="160950"><span class="nick" style="color:#389600"><a href="#160950" label="[16:09:50]">&lt;stikonas&gt;</a></span><span class="message">but we'll see</span></div><div class="line" id="161112"><span class="nick" style="color:#80b1d3"><a href="#161112" label="[16:11:12]">&lt;oriansj&gt;</a></span><span class="message">merged</span></div><div class="line" id="161126"><span class="nick" style="color:#389600"><a href="#161126" label="[16:11:26]">&lt;stikonas&gt;</a></span><span class="message">in mes-m2 PR that you just merged I think I've used #if defined and then #else followed by #define</span></div><div class="line" id="161140"><span class="nick" style="color:#389600"><a href="#161140" label="[16:11:40]">&lt;stikonas&gt;</a></span><span class="message">in principle on can go back to #ifndef now</span></div><div class="line" id="161339"><span class="nick" style="color:#80b1d3"><a href="#161339" label="[16:13:39]">&lt;oriansj&gt;</a></span><span class="message">you might want to add support for #undef and #error to clear out the current build warnings</span></div><div class="line" id="161456"><span class="nick" style="color:#80b1d3"><a href="#161456" label="[16:14:56]">&lt;oriansj&gt;</a></span><span class="message">perhaps you are right in the adding of features until we can just use mainline mes.c</span></div><div class="line" id="161629"><span class="nick" style="color:#389600"><a href="#161629" label="[16:16:29]">&lt;stikonas&gt;</a></span><span class="message">yeah, I thought about those too, just didn't get to those yet</span></div><div class="line" id="161648"><span class="nick" style="color:#389600"><a href="#161648" label="[16:16:48]">&lt;stikonas&gt;</a></span><span class="message">oriansj: perhaps the best is some hybrid approach</span></div><div class="line" id="161659"><span class="nick" style="color:#389600"><a href="#161659" label="[16:16:59]">&lt;stikonas&gt;</a></span><span class="message">we add some features to M2-Planet</span></div><div class="line" id="161712"><span class="nick" style="color:#389600"><a href="#161712" label="[16:17:12]">&lt;stikonas&gt;</a></span><span class="message">but we might still get some simplifying patches into mainline mes</span></div><div class="line" id="163100"><span class="nick" style="color:#389600"><a href="#163100" label="[16:31:00]">&lt;stikonas&gt;</a></span><span class="message">hmm, one of the more complicated issues is that mes uses a lot of function like defines</span></div><div class="line" id="163104"><span class="nick" style="color:#389600"><a href="#163104" label="[16:31:04]">&lt;stikonas&gt;</a></span><span class="message">and also with dot operator</span></div><div class="line" id="163125"><span class="nick" style="color:#389600"><a href="#163125" label="[16:31:25]">&lt;stikonas&gt;</a></span><span class="message">something like #define TYPE(x) g_cells[x].type</span></div><div class="line" id="163146"><span class="nick" style="color:#389600"><a href="#163146" label="[16:31:46]">&lt;stikonas&gt;</a></span><span class="message">anyway, I might try to add support for #undef and #error instead</span></div><div class="line" id="163148"><span class="nick" style="color:#389600"><a href="#163148" label="[16:31:48]">&lt;stikonas&gt;</a></span><span class="message">that should be easier</span></div><div class="line" id="163426"><span class="nick" style="color:#389600"><a href="#163426" label="[16:34:26]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: so mes-m2 riscv support was just merged</span></div><div class="line" id="163433"><span class="nick" style="color:#389600"><a href="#163433" label="[16:34:33]">&lt;stikonas&gt;</a></span><span class="message">(although it's still crashy)</span></div><div class="line" id="163449"><span class="nick" style="color:#6d2462"><a href="#163449" label="[16:34:49]">&lt;gbrlwck&gt;</a></span><span class="message">i'm reading it in the backlog :) nice!</span></div><div class="line" id="163513"><span class="nick" style="color:#389600"><a href="#163513" label="[16:35:13]">&lt;stikonas&gt;</a></span><span class="message">I tried playing a bit with env variables (like MES_ARENA) but they don't seem to help</span></div><div class="line" id="163559"><span class="nick" style="color:#6d2462"><a href="#163559" label="[16:35:59]">&lt;gbrlwck&gt;</a></span><span class="message">hmmm</span></div><div class="line" id="164716"><span class="nick" style="color:#6d2462"><a href="#164716" label="[16:47:16]">&lt;gbrlwck&gt;</a></span><span class="message">i guess i'll have to set ARCH=riscv64 now.  and also ELF_HEADER ?  why are they distinct?</span></div><div class="line" id="173305"><span class="nick" style="color:#6d2462"><a href="#173305" label="[17:33:05]">&lt;gbrlwck&gt;</a></span><span class="message">new mes-m2 doesn't work on hardware</span></div><div class="line" id="173320"><span class="nick" style="color:#6d2462"><a href="#173320" label="[17:33:20]">&lt;gbrlwck&gt;</a></span><span class="message">it compiles but i get segfaults</span></div><div class="line" id="173743"><span class="nick" style="color:#6d2462"><a href="#173743" label="[17:37:43]">&lt;gbrlwck&gt;</a></span><span class="message">./bin/mes-m2 -c (display 'Hello,M2-mes!) (newline)</span></div><div class="line" id="173745"><span class="nick" style="color:#6d2462"><a href="#173745" label="[17:37:45]">&lt;gbrlwck&gt;</a></span><span class="message">fails</span></div><div class="line" id="174310"><span class="nick" style="color:#389600"><a href="#174310" label="[17:43:10]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: just run kaem.riscv64</span></div><div class="line" id="174336"><span class="nick" style="color:#389600"><a href="#174336" label="[17:43:36]">&lt;stikonas&gt;</a></span><span class="message">they are different because on x86 elf header is ELF-i386-debug.hex2</span></div><div class="line" id="174353"><span class="nick" style="color:#389600"><a href="#174353" label="[17:43:53]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: if you run it a few times, you should get some working attempts</span></div><div class="line" id="174649"><span class="nick" style="color:#6d2462"><a href="#174649" label="[17:46:49]">&lt;gbrlwck&gt;</a></span><span class="message">i built with `ARCH=riscv64 ELF_HEADER=riscv64 make clean mes-m2-boot`</span></div><div class="line" id="174658"><span class="nick" style="color:#6d2462"><a href="#174658" label="[17:46:58]">&lt;gbrlwck&gt;</a></span><span class="message">trying 10 times it always fails pretty fast</span></div><div class="line" id="180300"><span class="nick" style="color:#389600"><a href="#180300" label="[18:03:00]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe makefile can be updated...</span></div><div class="line" id="180308"><span class="nick" style="color:#389600"><a href="#180308" label="[18:03:08]">&lt;stikonas&gt;</a></span><span class="message">anyway, I was building using</span></div><div class="line" id="180317"><span class="nick" style="color:#389600"><a href="#180317" label="[18:03:17]">&lt;stikonas&gt;</a></span><span class="message">kaem --verbose --strict --file kaem.riscv64</span></div><div class="line" id="180317"><span class="nick" style="color:#6d2462"><a href="#180317" label="[18:03:17]">&lt;gbrlwck&gt;</a></span><span class="message">it's the same when i `kaem -f kaem.riscv`</span></div><div class="line" id="180339"><span class="nick" style="color:#6d2462"><a href="#180339" label="[18:03:39]">&lt;gbrlwck&gt;</a></span><span class="message">trying again with --verbose and --strict now</span></div><div class="line" id="180547"><span class="nick" style="color:#6d2462"><a href="#180547" label="[18:05:47]">&lt;gbrlwck&gt;</a></span><span class="message">ah, it's the same</span></div><div class="line" id="180839"><span class="nick" style="color:#389600"><a href="#180839" label="[18:08:39]">&lt;stikonas&gt;</a></span><span class="message">ok, I updated makefile to run correct kaem file (x86 by default but can overrider with make ARCH=riscv64) <a rel="nofollow" href="https://github.com/oriansj/mes-m2/pull/14">https://github.com/oriansj/mes-m2/pull/14</a> </span></div><div class="line" id="180850"><span class="nick" style="color:#389600"><a href="#180850" label="[18:08:50]">&lt;stikonas&gt;</a></span><span class="message">always crashing?</span></div><div class="line" id="180905"><span class="nick" style="color:#389600"><a href="#180905" label="[18:09:05]">&lt;stikonas&gt;</a></span><span class="message">strange, I only get maybe 50/50 crash/workign</span></div><div class="line" id="181350"><span class="nick" style="color:#6d2462"><a href="#181350" label="[18:13:50]">&lt;gbrlwck&gt;</a></span><span class="message">something's off</span></div><div class="line" id="181413"><span class="nick" style="color:#6d2462"><a href="#181413" label="[18:14:13]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: would you mind pasting some hash of ./bin/mes-m2 ?</span></div><div class="line" id="181516"><span class="nick" style="color:#6d2462"><a href="#181516" label="[18:15:16]">&lt;gbrlwck&gt;</a></span><span class="message">compilation does not fail (altough kaem does not crash when mkdir doesn't work)</span></div><div class="line" id="181630"><span class="nick" style="color:#6d2462"><a href="#181630" label="[18:16:30]">&lt;gbrlwck&gt;</a></span><span class="message">and i'm not too pleased with `mkdir -p bin` part, because when we use the bootstrapped utilities '-p' is not an option (so it creates a directory &quot;-p&quot;).  -p is there so make does not fail, right?</span></div><div class="line" id="181803"><span class="nick" style="color:#6d2462"><a href="#181803" label="[18:18:03]">&lt;gbrlwck&gt;</a></span><span class="message">tests (`make test`) fail and gdb gives a &quot;BFD: warning [..] section extending past end of file&quot;</span></div><div class="line" id="182053"><span class="nick" style="color:#389600"><a href="#182053" label="[18:20:53]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: ec838cf09b9334252012447a62a77733b89a4a80b3f2da47835a47c68120d888  bin/mes-m2</span></div><div class="line" id="182101"><span class="nick" style="color:#389600"><a href="#182101" label="[18:21:01]">&lt;stikonas&gt;</a></span><span class="message">(that's sha256sum)</span></div><div class="line" id="182121"><span class="nick" style="color:#389600"><a href="#182121" label="[18:21:21]">&lt;stikonas&gt;</a></span><span class="message">yes, bootstrapped mkdir does not implement -p</span></div><div class="line" id="182124"><span class="nick" style="color:#389600"><a href="#182124" label="[18:21:24]">&lt;stikonas&gt;</a></span><span class="message">or at least not yet</span></div><div class="line" id="182129"><span class="nick" style="color:#389600"><a href="#182129" label="[18:21:29]">&lt;stikonas&gt;</a></span><span class="message">but feel free to submit a patch</span></div><div class="line" id="182144"><span class="nick" style="color:#389600"><a href="#182144" label="[18:21:44]">&lt;stikonas&gt;</a></span><span class="message">but yes, you need -p for corutils for it not to fail</span></div><div class="line" id="182155"><span class="nick" style="color:#389600"><a href="#182155" label="[18:21:55]">&lt;stikonas&gt;</a></span><span class="message">otherwise it fails if directory exists</span></div><div class="line" id="182216"><span class="nick" style="color:#6d2462"><a href="#182216" label="[18:22:16]">&lt;gbrlwck&gt;</a></span><span class="message">ok, i have a completely different file</span></div><div class="line" id="182223"><span class="nick" style="color:#6d2462"><a href="#182223" label="[18:22:23]">&lt;gbrlwck&gt;</a></span><span class="message">how many bytes is yours in size?</span></div><div class="line" id="182237"><span class="nick" style="color:#389600"><a href="#182237" label="[18:22:37]">&lt;stikonas&gt;</a></span><span class="message">373718</span></div><div class="line" id="182240"><span class="nick" style="color:#389600"><a href="#182240" label="[18:22:40]">&lt;stikonas&gt;</a></span><span class="message">which git revision?</span></div><div class="line" id="182303"><span class="nick" style="color:#6d2462"><a href="#182303" label="[18:23:03]">&lt;gbrlwck&gt;</a></span><span class="message">i'm on riscv64</span></div><div class="line" id="182314"><span class="nick" style="color:#6d2462"><a href="#182314" label="[18:23:14]">&lt;gbrlwck&gt;</a></span><span class="message">from your fork</span></div><div class="line" id="182316"><span class="nick" style="color:#6d2462"><a href="#182316" label="[18:23:16]">&lt;gbrlwck&gt;</a></span><span class="message">b2143add588e443e55828f6ddf4dcb3720cd36fb</span></div><div class="line" id="182333"><span class="nick" style="color:#389600"><a href="#182333" label="[18:23:33]">&lt;stikonas&gt;</a></span><span class="message">ok, that branch is now deleted but b2143... should be fine</span></div><div class="line" id="182339"><span class="nick" style="color:#389600"><a href="#182339" label="[18:23:39]">&lt;stikonas&gt;</a></span><span class="message">it's what origin/master is now</span></div><div class="line" id="182411"><span class="nick" style="color:#389600"><a href="#182411" label="[18:24:11]">&lt;stikonas&gt;</a></span><span class="message">oh, I might have newer M2-Planet</span></div><div class="line" id="182430"><span class="nick" style="color:#6d2462"><a href="#182430" label="[18:24:30]">&lt;gbrlwck&gt;</a></span><span class="message">i've updated stage0-posix</span></div><div class="line" id="182512"><span class="nick" style="color:#389600"><a href="#182512" label="[18:25:12]">&lt;stikonas&gt;</a></span><span class="message">I'm on master of M2-Planet</span></div><div class="line" id="182524"><span class="nick" style="color:#389600"><a href="#182524" label="[18:25:24]">&lt;stikonas&gt;</a></span><span class="message">which is newer than what stage0-posix pulls in</span></div><div class="line" id="182540"><span class="nick" style="color:#6d2462"><a href="#182540" label="[18:25:40]">&lt;gbrlwck&gt;</a></span><span class="message">aha!</span></div><div class="line" id="182545"><span class="nick" style="color:#389600"><a href="#182545" label="[18:25:45]">&lt;stikonas&gt;</a></span><span class="message">well, go into stage0-posix/M2-Planet</span></div><div class="line" id="182551"><span class="nick" style="color:#389600"><a href="#182551" label="[18:25:51]">&lt;stikonas&gt;</a></span><span class="message">and do git pull</span></div><div class="line" id="182558"><span class="nick" style="color:#389600"><a href="#182558" label="[18:25:58]">&lt;stikonas&gt;</a></span><span class="message">or maybe you need git switch master before git pull</span></div><div class="line" id="182606"><span class="nick" style="color:#389600"><a href="#182606" label="[18:26:06]">&lt;stikonas&gt;</a></span><span class="message">and then rebuild</span></div><div class="line" id="182613"><span class="nick" style="color:#389600"><a href="#182613" label="[18:26:13]">&lt;stikonas&gt;</a></span><span class="message">(checksum failures are expected after that</span></div><div class="line" id="182716"><span class="nick" style="color:#389600"><a href="#182716" label="[18:27:16]">&lt;stikonas&gt;</a></span><span class="message">I don't think I've used my newest features, but I definitely needed oriansj's #else fixes</span></div><div class="line" id="182733"><span class="nick" style="color:#389600"><a href="#182733" label="[18:27:33]">&lt;stikonas&gt;</a></span><span class="message">before that preprocessor did not work correctly for #if #else #endif</span></div><div class="line" id="183058"><span class="nick" style="color:#234e69"><a href="#183058" label="[18:30:58]">&lt;Thalheim&gt;</a></span><span class="message">is there a recent recipe for using tcc (mob) to build gcc 4.7.4? I'm getting stuck in gmp with errors like &quot;mul_1.c:41: error: 'SIZEOF_MP_LIMB_T' undeclared&quot;</span></div><div class="line" id="183227"><span class="nick" style="color:#389600"><a href="#183227" label="[18:32:27]">&lt;stikonas&gt;</a></span><span class="message">Thalheim: yes</span></div><div class="line" id="183236"><span class="nick" style="color:#389600"><a href="#183236" label="[18:32:36]">&lt;stikonas&gt;</a></span><span class="message">oh, actually not tcc mob</span></div><div class="line" id="183241"><span class="nick" style="color:#389600"><a href="#183241" label="[18:32:41]">&lt;stikonas&gt;</a></span><span class="message">but tcc 0.9.27</span></div><div class="line" id="183250"><span class="nick" style="color:#389600"><a href="#183250" label="[18:32:50]">&lt;stikonas&gt;</a></span><span class="message">we haven't tried tcc mob</span></div><div class="line" id="183323"><span class="nick" style="color:#389600"><a href="#183323" label="[18:33:23]">&lt;stikonas&gt;</a></span><span class="message">Thalheim: and so far we only tried on x86</span></div><div class="line" id="183340"><span class="nick" style="color:#234e69"><a href="#183340" label="[18:33:40]">&lt;Thalheim&gt;</a></span><span class="message">I'll quickly check if 0.9.27 makes any difference; I'm on x86_64 do you mean 32-bit x86?</span></div><div class="line" id="183343"><span class="nick" style="color:#389600"><a href="#183343" label="[18:33:43]">&lt;stikonas&gt;</a></span><span class="message">full build steps are in <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/">https://github.com/fosslinux/live-bootstrap/</a> </span></div><div class="line" id="183355"><span class="nick" style="color:#389600"><a href="#183355" label="[18:33:55]">&lt;stikonas&gt;</a></span><span class="message">yeah, so far we only tried 32-bit x86</span></div><div class="line" id="183401"><span class="nick" style="color:#389600"><a href="#183401" label="[18:34:01]">&lt;stikonas&gt;</a></span><span class="message">but amd64 machines can run it natively</span></div><div class="line" id="183420"><span class="nick" style="color:#389600"><a href="#183420" label="[18:34:20]">&lt;stikonas&gt;</a></span><span class="message">oh, actually we went via gcc 4.0.4</span></div><div class="line" id="183426"><span class="nick" style="color:#389600"><a href="#183426" label="[18:34:26]">&lt;stikonas&gt;</a></span><span class="message">not gcc 4.7.4 directly...</span></div><div class="line" id="183449"><span class="nick" style="color:#234e69"><a href="#183449" label="[18:34:49]">&lt;Thalheim&gt;</a></span><span class="message">ah! I think I found a new channel that will consume all of my time, thank you.</span></div><div class="line" id="183502"><span class="nick" style="color:#389600"><a href="#183502" label="[18:35:02]">&lt;stikonas&gt;</a></span><span class="message">Thalheim: welcome :)</span></div><div class="line" id="183530"><span class="nick" style="color:#389600"><a href="#183530" label="[18:35:30]">&lt;stikonas&gt;</a></span><span class="message">live-bootstrap is basically automated build script from hex0 to gcc 4.7.4 and beyond</span></div><div class="line" id="183548"><span class="nick" style="color:#389600"><a href="#183548" label="[18:35:48]">&lt;stikonas&gt;</a></span><span class="message">but so far x86 only, and some steps are not working even on amd64</span></div><div class="line" id="183652"><span class="nick" style="color:#389600"><a href="#183652" label="[18:36:52]">&lt;stikonas&gt;</a></span><span class="message">other arches (amd64, aarch64, riscv64) are only done for stage0-posix part which bootstraps from hex0 to M2-Planet (which is a subset of C compiler)</span></div><div class="line" id="191015"><span class="nick" style="color:#6d2462"><a href="#191015" label="[19:10:15]">&lt;gbrlwck&gt;</a></span><span class="message">i updated stage0-posix, rebuilt mes-m2 but it's still another hash as the one you pasted and /only/ gives segfaults</span></div><div class="line" id="191035"><span class="nick" style="color:#6d2462"><a href="#191035" label="[19:10:35]">&lt;gbrlwck&gt;</a></span><span class="message">also gdb still gives the same &quot;section extending past end of file error&quot;</span></div><div class="line" id="191052"><span class="nick" style="color:#6d2462"><a href="#191052" label="[19:10:52]">&lt;gbrlwck&gt;</a></span><span class="message">no wait</span></div><div class="line" id="191110"><span class="nick" style="color:#6d2462"><a href="#191110" label="[19:11:10]">&lt;gbrlwck&gt;</a></span><span class="message">maybe i didn't recompile</span></div><div class="line" id="191534"><span class="nick" style="color:#6d2462"><a href="#191534" label="[19:15:34]">&lt;gbrlwck&gt;</a></span><span class="message">i did</span></div><div class="line" id="191840"><span class="nick" style="color:#389600"><a href="#191840" label="[19:18:40]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="192055"><span class="nick" style="color:#389600"><a href="#192055" label="[19:20:55]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet 7a7bfd4529dbcdb87c1717d08489aec861fc0f4f ?</span></div><div class="line" id="192214"><span class="nick" style="color:#6d2462"><a href="#192214" label="[19:22:14]">&lt;gbrlwck&gt;</a></span><span class="message">ahhh.. no, it uses the one in stage0-posix: 55929d4ddf27a51bcbad47c2f6d618ce629aa5e6</span></div><div class="line" id="192459"><span class="nick" style="color:#389600"><a href="#192459" label="[19:24:59]">&lt;stikonas&gt;</a></span><span class="message">yes, that one doesn't have #else fixes</span></div><div class="line" id="192507"><span class="nick" style="color:#389600"><a href="#192507" label="[19:25:07]">&lt;stikonas&gt;</a></span><span class="message">so some contstants are wrong</span></div><div class="line" id="192538"><span class="nick" style="color:#6c3d55"><a href="#192538" label="[19:25:38]">*</a></span><span class="message">gbrlwck is wondering why `guix pull --recurse-submodules` did neither help nor hint</span></div><div class="line" id="192735"><span class="nick" style="color:#389600"><a href="#192735" label="[19:27:35]">&lt;stikonas&gt;</a></span><span class="message">s/guix/git?</span></div><div class="line" id="192745"><span class="nick" style="color:#389600"><a href="#192745" label="[19:27:45]">&lt;stikonas&gt;</a></span><span class="message">guix pull will update guix packages</span></div><div class="line" id="192745"><span class="nick" style="color:#6d2462"><a href="#192745" label="[19:27:45]">&lt;gbrlwck&gt;</a></span><span class="message">yes</span></div><div class="line" id="192753"><span class="nick" style="color:#6d2462"><a href="#192753" label="[19:27:53]">&lt;gbrlwck&gt;</a></span><span class="message">i'm on an ubuntu machine</span></div><div class="line" id="194107"><span class="nick" style="color:#80b1d3"><a href="#194107" label="[19:41:07]">&lt;oriansj&gt;</a></span><span class="message">I'm updating stage0-posix now</span></div><div class="line" id="194559"><span class="nick" style="color:#80b1d3"><a href="#194559" label="[19:45:59]">&lt;oriansj&gt;</a></span><span class="message">hmm the checksums have been changed across the board. That is something concerning</span></div><div class="line" id="194636"><span class="nick" style="color:#389600"><a href="#194636" label="[19:46:36]">&lt;stikonas&gt;</a></span><span class="message">oriansj: oh, in where?</span></div><div class="line" id="194653"><span class="nick" style="color:#389600"><a href="#194653" label="[19:46:53]">&lt;stikonas&gt;</a></span><span class="message">in my two commits, I think something with the ordering</span></div><div class="line" id="194717"><span class="nick" style="color:#389600"><a href="#194717" label="[19:47:17]">&lt;stikonas&gt;</a></span><span class="message">if you look at two commits combined, I think only test1000 changes</span></div><div class="line" id="194733"><span class="nick" style="color:#80b1d3"><a href="#194733" label="[19:47:33]">&lt;oriansj&gt;</a></span><span class="message">well M2-Planet's checksum should update but everything else should stay the same unless there is a different behavior</span></div><div class="line" id="194737"><span class="nick" style="color:#389600"><a href="#194737" label="[19:47:37]">&lt;stikonas&gt;</a></span><span class="message">it is</span></div><div class="line" id="194747"><span class="nick" style="color:#389600"><a href="#194747" label="[19:47:47]">&lt;stikonas&gt;</a></span><span class="message">remember, I implemented support for ANSI !</span></div><div class="line" id="194800"><span class="nick" style="color:#389600"><a href="#194800" label="[19:48:00]">&lt;stikonas&gt;</a></span><span class="message">so it emits different assembly instructions</span></div><div class="line" id="194831"><span class="nick" style="color:#389600"><a href="#194831" label="[19:48:31]">&lt;stikonas&gt;</a></span><span class="message">rather than just being bitwise NOT</span></div><div class="line" id="194834"><span class="nick" style="color:#80b1d3"><a href="#194834" label="[19:48:34]">&lt;oriansj&gt;</a></span><span class="message">true</span></div><div class="line" id="194933"><span class="nick" style="color:#389600"><a href="#194933" label="[19:49:33]">&lt;stikonas&gt;</a></span><span class="message">I guess almost everything used ! but mostly for 0 and 1 values</span></div><div class="line" id="195042"><span class="nick" style="color:#80b1d3"><a href="#195042" label="[19:50:42]">&lt;oriansj&gt;</a></span><span class="message">well yes, match and !match are used frequently</span></div><div class="line" id="195053"><span class="nick" style="color:#389600"><a href="#195053" label="[19:50:53]">&lt;stikonas&gt;</a></span><span class="message">I think in fact kaem conditionals do rely on full support for !</span></div><div class="line" id="195116"><span class="nick" style="color:#389600"><a href="#195116" label="[19:51:16]">&lt;stikonas&gt;</a></span><span class="message">although, I guess so far we haven't used them</span></div><div class="line" id="195133"><span class="nick" style="color:#389600"><a href="#195133" label="[19:51:33]">&lt;stikonas&gt;</a></span><span class="message">but anyway, if we go for upstream mes, it uses ! extensively and also for non 0/1</span></div><div class="line" id="195312"><span class="nick" style="color:#389600"><a href="#195312" label="[19:53:12]">&lt;stikonas&gt;</a></span><span class="message">here only catm and mkdir do not change</span></div><div class="line" id="195317"><span class="nick" style="color:#389600"><a href="#195317" label="[19:53:17]">&lt;stikonas&gt;</a></span><span class="message">everything else has new checksums</span></div><div class="line" id="195617"><span class="nick" style="color:#80b1d3"><a href="#195617" label="[19:56:17]">&lt;oriansj&gt;</a></span><span class="message">yes</span></div><div class="line" id="200056"><span class="nick" style="color:#80b1d3"><a href="#200056" label="[20:00:56]">&lt;oriansj&gt;</a></span><span class="message">doing an artifact compare confirmed only the predicted M1 changes in output and no side effect changes in the binaries produced.</span></div><div class="line" id="200119"><span class="nick" style="color:#80b1d3"><a href="#200119" label="[20:01:19]">&lt;oriansj&gt;</a></span><span class="message">(except for M2-Planet which had additional changes but that is expected.)</span></div><div class="line" id="203130"><span class="nick" style="color:#80b1d3"><a href="#203130" label="[20:31:30]">&lt;oriansj&gt;</a></span><span class="message">and the stage0-posix updates are up</span></div><div class="line" id="203541"><span class="nick" style="color:#6d2462"><a href="#203541" label="[20:35:41]">&lt;gbrlwck&gt;</a></span><span class="message">\o/</span></div><div class="line" id="203631"><span class="nick" style="color:#6d2462"><a href="#203631" label="[20:36:31]">&lt;gbrlwck&gt;</a></span><span class="message">i added -p for our makedir: <a rel="nofollow" href="https://github.com/gbrlwck/mescc-tools-extra/commit/431605254f6a8744b19193bd75b4b0dc0e20e3df">https://github.com/gbrlwck/mescc-tools-extra/commit/431605254f6a8744b19193bd75b4b0dc0e20e3df</a> </span></div><div class="line" id="203645"><span class="nick" style="color:#6d2462"><a href="#203645" label="[20:36:45]">&lt;gbrlwck&gt;</a></span><span class="message">does this look good to you?</span></div><div class="line" id="204030"><span class="nick" style="color:#389600"><a href="#204030" label="[20:40:30]">&lt;stikonas&gt;</a></span><span class="message">does it build with stage0-posix</span></div><div class="line" id="204032"><span class="nick" style="color:#389600"><a href="#204032" label="[20:40:32]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="204050"><span class="nick" style="color:#6d2462"><a href="#204050" label="[20:40:50]">&lt;gbrlwck&gt;</a></span><span class="message">haven't tested it yet</span></div><div class="line" id="204115"><span class="nick" style="color:#6d2462"><a href="#204115" label="[20:41:15]">&lt;gbrlwck&gt;</a></span><span class="message">i guess i'd have to add the stat() function to M2libc</span></div><div class="line" id="204304"><span class="nick" style="color:#389600"><a href="#204304" label="[20:43:04]">&lt;stikonas&gt;</a></span><span class="message">can we just ignore -p?</span></div><div class="line" id="204310"><span class="nick" style="color:#389600"><a href="#204310" label="[20:43:10]">&lt;stikonas&gt;</a></span><span class="message">and then forget path_exists?</span></div><div class="line" id="204311"><span class="nick" style="color:#389600"><a href="#204311" label="[20:43:11]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="204342"><span class="nick" style="color:#6d2462"><a href="#204342" label="[20:43:42]">&lt;gbrlwck&gt;</a></span><span class="message">WDYM</span></div><div class="line" id="204438"><span class="nick" style="color:#389600"><a href="#204438" label="[20:44:38]">&lt;stikonas&gt;</a></span><span class="message">just if program finds &quot;-p&quot; argument, simply ignore it and don't do anything</span></div><div class="line" id="204510"><span class="nick" style="color:#6d2462"><a href="#204510" label="[20:45:10]">&lt;gbrlwck&gt;</a></span><span class="message">but then no dirs would be created and the next step in a kaem script would probably fail, no?</span></div><div class="line" id="204531"><span class="nick" style="color:#6d2462"><a href="#204531" label="[20:45:31]">&lt;gbrlwck&gt;</a></span><span class="message">my M2libc patch is here: <a rel="nofollow" href="https://github.com/gbrlwck/M2libc/commit/b4e8cd7b785895cbd1f4d7d90332392c1ae62d60">https://github.com/gbrlwck/M2libc/commit/b4e8cd7b785895cbd1f4d7d90332392c1ae62d60</a> </span></div><div class="line" id="205044"><span class="nick" style="color:#389600"><a href="#205044" label="[20:50:44]">&lt;stikonas&gt;</a></span><span class="message">only ignore -p, not the rest</span></div><div class="line" id="205103"><span class="nick" style="color:#6d2462"><a href="#205103" label="[20:51:03]">&lt;gbrlwck&gt;</a></span><span class="message">would this be better?</span></div><div class="line" id="205116"><span class="nick" style="color:#389600"><a href="#205116" label="[20:51:16]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure yet</span></div><div class="line" id="205124"><span class="nick" style="color:#389600"><a href="#205124" label="[20:51:24]">&lt;stikonas&gt;</a></span><span class="message">it does fail if directory already exists...</span></div><div class="line" id="205135"><span class="nick" style="color:#389600"><a href="#205135" label="[20:51:35]">&lt;stikonas&gt;</a></span><span class="message">well, mkdir was written mainly for live-bootstrap</span></div><div class="line" id="205254"><span class="nick" style="color:#389600"><a href="#205254" label="[20:52:54]">&lt;stikonas&gt;</a></span><span class="message">is it only in mes-m2?</span></div><div class="line" id="205257"><span class="nick" style="color:#389600"><a href="#205257" label="[20:52:57]">&lt;stikonas&gt;</a></span><span class="message">that you had this problem</span></div><div class="line" id="205347"><span class="nick" style="color:#6d2462"><a href="#205347" label="[20:53:47]">&lt;gbrlwck&gt;</a></span><span class="message">i think it's in many (if not most) kaem.run scripts</span></div><div class="line" id="205359"><span class="nick" style="color:#6d2462"><a href="#205359" label="[20:53:59]">&lt;gbrlwck&gt;</a></span><span class="message">mescc-tools-extra has it</span></div><div class="line" id="205438"><span class="nick" style="color:#6d2462"><a href="#205438" label="[20:54:38]">&lt;gbrlwck&gt;</a></span><span class="message">it's not exactly a problem</span></div><div class="line" id="205501"><span class="nick" style="color:#389600"><a href="#205501" label="[20:55:01]">&lt;stikonas&gt;</a></span><span class="message">well, ask oriansj if we want to add a new dependency on stat</span></div><div class="line" id="205515"><span class="nick" style="color:#389600"><a href="#205515" label="[20:55:15]">&lt;stikonas&gt;</a></span><span class="message">it might be fine</span></div><div class="line" id="205523"><span class="nick" style="color:#389600"><a href="#205523" label="[20:55:23]">&lt;stikonas&gt;</a></span><span class="message">I just don't know what others think</span></div><div class="line" id="205611"><span class="nick" style="color:#389600"><a href="#205611" label="[20:56:11]">&lt;stikonas&gt;</a></span><span class="message">but yes, I did find it slightly annoying to have different behaviour</span></div><div class="line" id="205632"><span class="nick" style="color:#389600"><a href="#205632" label="[20:56:32]">&lt;stikonas&gt;</a></span><span class="message">but mescc-tools-extra's mkdir is very simple compared to coreutils one</span></div><div class="line" id="205700"><span class="nick" style="color:#389600"><a href="#205700" label="[20:57:00]">&lt;stikonas&gt;</a></span><span class="message">same with cp (it does not preserve executable bit, does not support dot as in 'cp a .', etc</span></div><div class="line" id="205702"><span class="nick" style="color:#6d2462"><a href="#205702" label="[20:57:02]">&lt;gbrlwck&gt;</a></span><span class="message">my intention was never to add all possible features to mkdir, just the -p that i kept stumbling on</span></div><div class="line" id="205724"><span class="nick" style="color:#389600"><a href="#205724" label="[20:57:24]">&lt;stikonas&gt;</a></span><span class="message">yeah, I know</span></div><div class="line" id="205910"><span class="nick" style="color:#389600"><a href="#205910" label="[20:59:10]">&lt;stikonas&gt;</a></span><span class="message">actually, this mkdir exists with 0 even if it can't create directory</span></div><div class="line" id="205923"><span class="nick" style="color:#389600"><a href="#205923" label="[20:59:23]">&lt;stikonas&gt;</a></span><span class="message">so I think you really can just ignore -p and patch will be much simpler</span></div><div class="line" id="205929"><span class="nick" style="color:#389600"><a href="#205929" label="[20:59:29]">&lt;stikonas&gt;</a></span><span class="message">no need to test creation</span></div><div class="line" id="205935"><span class="nick" style="color:#389600"><a href="#205935" label="[20:59:35]">&lt;stikonas&gt;</a></span><span class="message">just go to next argv[i]</span></div><div class="line" id="205939"><span class="nick" style="color:#389600"><a href="#205939" label="[20:59:39]">&lt;stikonas&gt;</a></span><span class="message">and create anyway</span></div><div class="line" id="210012"><span class="nick" style="color:#389600"><a href="#210012" label="[21:00:12]">&lt;stikonas&gt;</a></span><span class="message">something like if(argc &gt; 1 &amp;&amp; strcmp(argv[i], &quot;-p&quot;) == 0) i = i +1;</span></div><div class="line" id="210034"><span class="nick" style="color:#6d2462"><a href="#210034" label="[21:00:34]">&lt;gbrlwck&gt;</a></span><span class="message">true</span></div><div class="line" id="210131"><span class="nick" style="color:#6d2462"><a href="#210131" label="[21:01:31]">&lt;gbrlwck&gt;</a></span><span class="message">or just i = 2</span></div><div class="line" id="210230"><span class="nick" style="color:#389600"><a href="#210230" label="[21:02:30]">&lt;stikonas&gt;</a></span><span class="message">possibly use match instead of strcmp</span></div><div class="line" id="210331"><span class="nick" style="color:#389600"><a href="#210331" label="[21:03:31]">&lt;stikonas&gt;</a></span><span class="message">it looks safer <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/bootstrappable.c#L36">https://github.com/oriansj/M2libc/blob/main/bootstrappable.c#L36</a> </span></div><div class="line" id="210337"><span class="nick" style="color:#389600"><a href="#210337" label="[21:03:37]">&lt;stikonas&gt;</a></span><span class="message">vs <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/string.c#L113">https://github.com/oriansj/M2libc/blob/main/string.c#L113</a> </span></div><div class="line" id="233754"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="233846"><span class="nick" style="color:#389600"><a href="#233846" label="[23:38:46]">&lt;stikonas&gt;</a></span><span class="message">and I've updated stage0-posix (and hence M2-Planet) in live-bootstrap.</span></div><br /></div></body></html>