<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-03-22.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000223"><span class="nick" style="color:#389600"><a href="#000223" label="[00:02:23]">&lt;stikonas&gt;</a></span><span class="message">fossy: unless there review comments to address, I think <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/75">https://github.com/fosslinux/live-bootstrap/pull/75</a>  is good now</span></div><div class="line" id="000236"><span class="nick" style="color:#389600"><a href="#000236" label="[00:02:36]">&lt;stikonas&gt;</a></span><span class="message">CI passes after I removed that earlier bash</span></div><div class="line" id="005033"><span class="nick" style="color:#2e2a4a"><a href="#005033" label="[00:50:33]">&lt;pder&gt;</a></span><span class="message">stikonas: I think the bash-3.2.57 directory can be removed as part of your gcc branch</span></div><div class="line" id="005336"><span class="nick" style="color:#389600"><a href="#005336" label="[00:53:36]">&lt;stikonas&gt;</a></span><span class="message">oh indeed...</span></div><div class="line" id="005341"><span class="nick" style="color:#389600"><a href="#005341" label="[00:53:41]">&lt;stikonas&gt;</a></span><span class="message">I forgot to clean it up</span></div><div class="line" id="012318"><span class="nick" style="color:#389600"><a href="#012318" label="[01:23:18]">&lt;stikonas&gt;</a></span><span class="message">pder: thanks PR updated</span></div><div class="line" id="012431"><span class="nick" style="color:#389600"><a href="#012431" label="[01:24:31]">&lt;stikonas&gt;</a></span><span class="message">in case you want to build more stuff, and for the avoidance of clashes, I'll do libtool next</span></div><div class="line" id="022414"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="022419"><span class="nick" style="color:#389600"><a href="#022419" label="[02:24:19]">&lt;stikonas&gt;</a></span><span class="message">argh, now bash failed in CI again...</span></div><div class="line" id="022431"><span class="nick" style="color:#389600"><a href="#022431" label="[02:24:31]">&lt;stikonas&gt;</a></span><span class="message">maybe something is not fully reproducible...</span></div><div class="line" id="022517"><span class="nick" style="color:#6b8072"><a href="#022517" label="[02:25:17]">&lt;fossy&gt;</a></span><span class="message">stikonas: it could be the seed kernel differing. What seed kernel are you using</span></div><div class="line" id="022538"><span class="nick" style="color:#389600"><a href="#022538" label="[02:25:38]">&lt;stikonas&gt;</a></span><span class="message">fossy: self-compiled kernel (I'm on Gentoo)</span></div><div class="line" id="022540"><span class="nick" style="color:#6b8072"><a href="#022540" label="[02:25:40]">&lt;fossy&gt;</a></span><span class="message">I can try Ubuntu kernel tonight</span></div><div class="line" id="022547"><span class="nick" style="color:#6b8072"><a href="#022547" label="[02:25:47]">&lt;fossy&gt;</a></span><span class="message">mkay</span></div><div class="line" id="022551"><span class="nick" style="color:#389600"><a href="#022551" label="[02:25:51]">&lt;stikonas&gt;</a></span><span class="message">I was thinking maybe build process is a bit underterministic</span></div><div class="line" id="022600"><span class="nick" style="color:#389600"><a href="#022600" label="[02:26:00]">&lt;stikonas&gt;</a></span><span class="message">and sometimes you get one hash, sometimes another</span></div><div class="line" id="022605"><span class="nick" style="color:#389600"><a href="#022605" label="[02:26:05]">&lt;stikonas&gt;</a></span><span class="message">(with bash 5.1</span></div><div class="line" id="022605"><span class="nick" style="color:#6b8072"><a href="#022605" label="[02:26:05]">&lt;fossy&gt;</a></span><span class="message">of bash?</span></div><div class="line" id="022608"><span class="nick" style="color:#389600"><a href="#022608" label="[02:26:08]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="022611"><span class="nick" style="color:#389600"><a href="#022611" label="[02:26:11]">&lt;stikonas&gt;</a></span><span class="message">bash 5.1 in particular</span></div><div class="line" id="022618"><span class="nick" style="color:#389600"><a href="#022618" label="[02:26:18]">&lt;stikonas&gt;</a></span><span class="message">not e.g. that 3.2.57...</span></div><div class="line" id="022642"><span class="nick" style="color:#389600"><a href="#022642" label="[02:26:42]">&lt;stikonas&gt;</a></span><span class="message">we also had some minor issues like that with autotools, that's why I added MAKEINFO=true everywhere</span></div><div class="line" id="022658"><span class="nick" style="color:#6b8072"><a href="#022658" label="[02:26:58]">&lt;fossy&gt;</a></span><span class="message">possible, what would be the difference though -- I got the same hash as you when I compiled bash from master</span></div><div class="line" id="022738"><span class="nick" style="color:#389600"><a href="#022738" label="[02:27:38]">&lt;stikonas&gt;</a></span><span class="message">well, maybe it's not too undeterministic and there are e.g. two outcomes only</span></div><div class="line" id="022754"><span class="nick" style="color:#389600"><a href="#022754" label="[02:27:54]">&lt;stikonas&gt;</a></span><span class="message">so not unlikely that you would also get the same</span></div><div class="line" id="022759"><span class="nick" style="color:#389600"><a href="#022759" label="[02:27:59]">&lt;stikonas&gt;</a></span><span class="message">so last CI build passed</span></div><div class="line" id="022811"><span class="nick" style="color:#389600"><a href="#022811" label="[02:28:11]">&lt;stikonas&gt;</a></span><span class="message">and the only difference is that I removed unused directory</span></div><div class="line" id="022823"><span class="nick" style="color:#6b8072"><a href="#022823" label="[02:28:23]">&lt;fossy&gt;</a></span><span class="message">possible</span></div><div class="line" id="022833"><span class="nick" style="color:#389600"><a href="#022833" label="[02:28:33]">&lt;stikonas&gt;</a></span><span class="message">I can try to run it a few more times, although not today...</span></div><div class="line" id="022841"><span class="nick" style="color:#6b8072"><a href="#022841" label="[02:28:41]">&lt;fossy&gt;</a></span><span class="message">ill run a few times today and see</span></div><div class="line" id="022911"><span class="nick" style="color:#389600"><a href="#022911" label="[02:29:11]">&lt;stikonas&gt;</a></span><span class="message">one possible way to workaround such problem if we can't fix it, is to retry failed steps</span></div><div class="line" id="022934"><span class="nick" style="color:#389600"><a href="#022934" label="[02:29:34]">&lt;stikonas&gt;</a></span><span class="message">might be reasonably easy to do that with that build function</span></div><div class="line" id="023020"><span class="nick" style="color:#80b1d3"><a href="#023020" label="[02:30:20]">&lt;pabs3&gt;</a></span><span class="message">bauen1: your code review thoughts sound like crev from the Rust community <a rel="nofollow" href="https://github.com/crev-dev/crev">https://github.com/crev-dev/crev</a>  <a rel="nofollow" href="https://github.com/crev-dev/cargo-crev">https://github.com/crev-dev/cargo-crev</a> </span></div><div class="line" id="023032"><span class="nick" style="color:#389600"><a href="#023032" label="[02:30:32]">&lt;stikonas&gt;</a></span><span class="message">or maybe we need to use older bash version that builds better</span></div><div class="line" id="023108"><span class="nick" style="color:#6b8072"><a href="#023108" label="[02:31:08]">&lt;fossy&gt;</a></span><span class="message">even 4.x would be great</span></div><div class="line" id="023139"><span class="nick" style="color:#389600"><a href="#023139" label="[02:31:39]">&lt;stikonas&gt;</a></span><span class="message">yeah, 4.x gets us most</span></div><div class="line" id="023148"><span class="nick" style="color:#389600"><a href="#023148" label="[02:31:48]">&lt;stikonas&gt;</a></span><span class="message">don't think there is much in 5 that we need</span></div><div class="line" id="023210"><span class="nick" style="color:#389600"><a href="#023210" label="[02:32:10]">&lt;stikonas&gt;</a></span><span class="message">it has some extra variables defined and more precise timestamps</span></div><div class="line" id="023248"><span class="nick" style="color:#389600"><a href="#023248" label="[02:32:48]">&lt;stikonas&gt;</a></span><span class="message">might be easier to just run single bash build from bootstrapped system for testing</span></div><div class="line" id="023259"><span class="nick" style="color:#389600"><a href="#023259" label="[02:32:59]">&lt;stikonas&gt;</a></span><span class="message">rather than rerun the whole 30 minute thing...</span></div><div class="line" id="023317"><span class="nick" style="color:#389600"><a href="#023317" label="[02:33:17]">&lt;stikonas&gt;</a></span><span class="message">that might help us to determine which hashes are possible and how frequently</span></div><div class="line" id="023848"><span class="nick" style="color:#6b8072"><a href="#023848" label="[02:38:48]">&lt;fossy&gt;</a></span><span class="message">yeah that was my plan</span></div><div class="line" id="030605"><span class="nick" style="color:#2e2a4a"><a href="#030605" label="[03:06:05]">&lt;pder&gt;</a></span><span class="message">Ill see if I can reproduce the bash checksum fail.  Maybe we could do a binary diff and get an idea on whats different.</span></div><div class="line" id="031039"><span class="nick" style="color:#389600"><a href="#031039" label="[03:10:39]">&lt;stikonas&gt;</a></span><span class="message">hmm, 10 short builds and same checksum..</span></div><div class="line" id="031048"><span class="nick" style="color:#389600"><a href="#031048" label="[03:10:48]">&lt;stikonas&gt;</a></span><span class="message">maybe you need full build...</span></div><div class="line" id="031101"><span class="nick" style="color:#389600"><a href="#031101" label="[03:11:01]">&lt;stikonas&gt;</a></span><span class="message">(short meaning just bash)</span></div><div class="line" id="031101"><span class="nick" style="color:#2e2a4a"><a href="#031101" label="[03:11:01]">&lt;pder&gt;</a></span><span class="message">do you have a copy of the bash binary that failed?</span></div><div class="line" id="031108"><span class="nick" style="color:#389600"><a href="#031108" label="[03:11:08]">&lt;stikonas&gt;</a></span><span class="message">no, it failed on CI</span></div><div class="line" id="031121"><span class="nick" style="color:#389600"><a href="#031121" label="[03:11:21]">&lt;stikonas&gt;</a></span><span class="message">well, probably worth running a few long builds</span></div><div class="line" id="042130"><span class="nick" style="color:#2e2a4a"><a href="#042130" label="[04:21:30]">&lt;pder&gt;</a></span><span class="message">interesting, so through qemu I got a failure with bash checksum</span></div><div class="line" id="042212"><span class="nick" style="color:#2e2a4a"><a href="#042212" label="[04:22:12]">&lt;pder&gt;</a></span><span class="message">maybe something to do with autodetection of host in bash configure?</span></div><div class="line" id="074207"><span class="nick" style="color:#6b8072"><a href="#074207" label="[07:42:07]">&lt;fossy&gt;</a></span><span class="message">lol i enjoy we can say &quot;bison being too new&quot;</span></div><div class="line" id="074208"><span class="nick" style="color:#6b8072"><a href="#074208" label="[07:42:08]">&lt;fossy&gt;</a></span><span class="message">now</span></div><div class="line" id="074501"><span class="nick" style="color:#6b8072"><a href="#074501" label="[07:45:01]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: jus to check</span></div><div class="line" id="074503"><span class="nick" style="color:#6b8072"><a href="#074503" label="[07:45:03]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/75/files#diff-8afdb3952fba828962f274c6dd9c3fc0e0054c899638bc9e2524c8ec4b6e9a69R22">https://github.com/fosslinux/live-bootstrap/pull/75/files#diff-8afdb3952fba828962f274c6dd9c3fc0e0054c899638bc9e2524c8ec4b6e9a69R22</a> </span></div><div class="line" id="074505"><span class="nick" style="color:#6b8072"><a href="#074505" label="[07:45:05]">&lt;fossy&gt;</a></span><span class="message">here</span></div><div class="line" id="074521"><span class="nick" style="color:#6b8072"><a href="#074521" label="[07:45:21]">&lt;fossy&gt;</a></span><span class="message">this is cause Makefile.in is handwritten yeah (it is according to source) so we don't need automake</span></div><div class="line" id="083111"><span class="nick" style="color:#6b8072"><a href="#083111" label="[08:31:11]">&lt;fossy&gt;</a></span><span class="message">NEAT</span></div><div class="line" id="083113"><span class="nick" style="color:#6b8072"><a href="#083113" label="[08:31:13]">&lt;fossy&gt;</a></span><span class="message">/after/kexec-tools-2.0.21/build/kexec-tools-2.0.21 # kexec/kexec -l /kernel</span></div><div class="line" id="083115"><span class="nick" style="color:#6b8072"><a href="#083115" label="[08:31:15]">&lt;fossy&gt;</a></span><span class="message">36/after/kexec-tools-2.0.21/build/kexec-tools-2.0.21 # echo $?</span></div><div class="line" id="083117"><span class="nick" style="color:#6b8072"><a href="#083117" label="[08:31:17]">&lt;fossy&gt;</a></span><span class="message">0</span></div><div class="line" id="083119"><span class="nick" style="color:#6b8072"><a href="#083119" label="[08:31:19]">&lt;fossy&gt;</a></span><span class="message">now just to get -e to work</span></div><div class="line" id="083121"><span class="nick" style="color:#6b8072"><a href="#083121" label="[08:31:21]">&lt;fossy&gt;</a></span><span class="message">which might be harder</span></div><div class="line" id="083536"><span class="nick" style="color:#6b8072"><a href="#083536" label="[08:35:36]">&lt;fossy&gt;</a></span><span class="message">well my reboot() impl for mes dosent work :|</span></div><div class="line" id="084623"><span class="nick" style="color:#6d2462"><a href="#084623" label="[08:46:23]">*</a></span><span class="message">fossy can taste the finish line of this</span></div><div class="line" id="084633"><span class="nick" style="color:#6b8072"><a href="#084633" label="[08:46:33]">&lt;fossy&gt;</a></span><span class="message">i had the wrong syscall number :P</span></div><div class="line" id="102703"><span class="nick" style="color:#234e69"><a href="#102703" label="[10:27:03]">&lt;bauen1&gt;</a></span><span class="message">pabs3: yes, that looks very similiar, but i image that for the bootstrap you might not worry about signatures and just uses hashs since you're supposed to review all code anyway (not saying you can't use signatures to distribute the code review)</span></div><div class="line" id="102735"><span class="nick" style="color:#234e69"><a href="#102735" label="[10:27:35]">&lt;bauen1&gt;</a></span><span class="message">*imagine</span></div><div class="line" id="123134"><span class="nick" style="color:#6b8072"><a href="#123134" label="[12:31:34]">&lt;fossy&gt;</a></span><span class="message">hm</span></div><div class="line" id="123139"><span class="nick" style="color:#6b8072"><a href="#123139" label="[12:31:39]">&lt;fossy&gt;</a></span><span class="message">well it now -e's</span></div><div class="line" id="123144"><span class="nick" style="color:#6b8072"><a href="#123144" label="[12:31:44]">&lt;fossy&gt;</a></span><span class="message">but then qemu just.. exists?</span></div><div class="line" id="123149"><span class="nick" style="color:#6b8072"><a href="#123149" label="[12:31:49]">&lt;fossy&gt;</a></span><span class="message">exits*?</span></div><div class="line" id="140942"><span class="nick" style="color:#2e2a4a"><a href="#140942" label="[14:09:42]">&lt;pder&gt;</a></span><span class="message">fossy, stikonas: do you know of an easy way to obtain a copy of a file from a qemu run of live-bootstrap?</span></div><div class="line" id="141102"><span class="nick" style="color:#389600"><a href="#141102" label="[14:11:02]">&lt;stikonas&gt;</a></span><span class="message">pder: probably mount some block device into it...</span></div><div class="line" id="141113"><span class="nick" style="color:#389600"><a href="#141113" label="[14:11:13]">&lt;stikonas&gt;</a></span><span class="message">but yes, I also got different hash there...</span></div><div class="line" id="141114"><span class="nick" style="color:#389600"><a href="#141114" label="[14:11:14]">&lt;stikonas&gt;</a></span><span class="message">in qemu</span></div><div class="line" id="141120"><span class="nick" style="color:#389600"><a href="#141120" label="[14:11:20]">&lt;stikonas&gt;</a></span><span class="message">what hash have you got by the wya?</span></div><div class="line" id="141148"><span class="nick" style="color:#389600"><a href="#141148" label="[14:11:48]">&lt;stikonas&gt;</a></span><span class="message">(mounting probably has to be done on qemu startup)</span></div><div class="line" id="141151"><span class="nick" style="color:#2e2a4a"><a href="#141151" label="[14:11:51]">&lt;pder&gt;</a></span><span class="message">I don't know, since the kernel just panics</span></div><div class="line" id="141239"><span class="nick" style="color:#389600"><a href="#141239" label="[14:12:39]">&lt;stikonas&gt;</a></span><span class="message">oh, I just added || true on that bash build line</span></div><div class="line" id="141244"><span class="nick" style="color:#389600"><a href="#141244" label="[14:12:44]">&lt;stikonas&gt;</a></span><span class="message">and then got cf0d590ac6187d3c5b9da63dd2f67296e1c1bed564e7cb3dbcd8075d984d98c6  /after/bin/bash</span></div><div class="line" id="141305"><span class="nick" style="color:#2e2a4a"><a href="#141305" label="[14:13:05]">&lt;pder&gt;</a></span><span class="message">how are you computing the hash from qemu?</span></div><div class="line" id="141319"><span class="nick" style="color:#389600"><a href="#141319" label="[14:13:19]">&lt;stikonas&gt;</a></span><span class="message">from interactive shell</span></div><div class="line" id="141325"><span class="nick" style="color:#389600"><a href="#141325" label="[14:13:25]">&lt;stikonas&gt;</a></span><span class="message">sha256sum /after/bin/bash</span></div><div class="line" id="141353"><span class="nick" style="color:#389600"><a href="#141353" label="[14:13:53]">&lt;stikonas&gt;</a></span><span class="message">if you add || true to bash build, then it will consider it successful anyway</span></div><div class="line" id="141404"><span class="nick" style="color:#389600"><a href="#141404" label="[14:14:04]">&lt;stikonas&gt;</a></span><span class="message">so you'll get to shell at the end</span></div><div class="line" id="141417"><span class="nick" style="color:#389600"><a href="#141417" label="[14:14:17]">&lt;stikonas&gt;</a></span><span class="message">but I only ran it once, so I don't know if it's always the same hash</span></div><div class="line" id="141426"><span class="nick" style="color:#2e2a4a"><a href="#141426" label="[14:14:26]">&lt;pder&gt;</a></span><span class="message">Ill try that and add a hard drive to qemu so I can mount it and copy it there</span></div><div class="line" id="141427"><span class="nick" style="color:#389600"><a href="#141427" label="[14:14:27]">&lt;stikonas&gt;</a></span><span class="message">maybe there is a difference between qemu and chroot only</span></div><div class="line" id="141501"><span class="nick" style="color:#2e2a4a"><a href="#141501" label="[14:15:01]">&lt;pder&gt;</a></span><span class="message">I think we ran into that with bash-2.05</span></div><div class="line" id="141518"><span class="nick" style="color:#2e2a4a"><a href="#141518" label="[14:15:18]">&lt;pder&gt;</a></span><span class="message">Had to specify host</span></div><div class="line" id="141601"><span class="nick" style="color:#389600"><a href="#141601" label="[14:16:01]">&lt;stikonas&gt;</a></span><span class="message">I'm on 64 bit kernel though even in qemu</span></div><div class="line" id="141619"><span class="nick" style="color:#2e2a4a"><a href="#141619" label="[14:16:19]">&lt;pder&gt;</a></span><span class="message">same here</span></div><div class="line" id="141946"><span class="nick" style="color:#2e2a4a"><a href="#141946" label="[14:19:46]">&lt;pder&gt;</a></span><span class="message">I'll see what hash I get with qemu</span></div><div class="line" id="142016"><span class="nick" style="color:#2e2a4a"><a href="#142016" label="[14:20:16]">&lt;pder&gt;</a></span><span class="message">I would also like to diff the two binaries</span></div><div class="line" id="143315"><span class="nick" style="color:#389600"><a href="#143315" label="[14:33:15]">&lt;stikonas&gt;</a></span><span class="message">pder: oh, mounting from inside qemu will be non-trivial</span></div><div class="line" id="143328"><span class="nick" style="color:#389600"><a href="#143328" label="[14:33:28]">&lt;stikonas&gt;</a></span><span class="message">we don't have mount utility yet</span></div><div class="line" id="143346"><span class="nick" style="color:#389600"><a href="#143346" label="[14:33:46]">&lt;stikonas&gt;</a></span><span class="message">basically one has to write a small C program to mount things</span></div><div class="line" id="143401"><span class="nick" style="color:#389600"><a href="#143401" label="[14:34:01]">&lt;stikonas&gt;</a></span><span class="message">as per &quot;man 2 mount&quot;</span></div><div class="line" id="143513"><span class="nick" style="color:#2e2a4a"><a href="#143513" label="[14:35:13]">&lt;pder&gt;</a></span><span class="message">I was thinking of just copying busybox into our starting image and having qemu include an image</span></div><div class="line" id="143554"><span class="nick" style="color:#2e2a4a"><a href="#143554" label="[14:35:54]">&lt;pder&gt;</a></span><span class="message">Then I can use busybox for mkfs, mount, etc</span></div><div class="line" id="143602"><span class="nick" style="color:#389600"><a href="#143602" label="[14:36:02]">&lt;stikonas&gt;</a></span><span class="message">well, that would work too</span></div><div class="line" id="143702"><span class="nick" style="color:#2e2a4a"><a href="#143702" label="[14:37:02]">&lt;pder&gt;</a></span><span class="message">netcat might be a useful utility to have in our bootstrap even if it isnt necessary</span></div><div class="line" id="143910"><span class="nick" style="color:#2e2a4a"><a href="#143910" label="[14:39:10]">&lt;pder&gt;</a></span><span class="message">but I guess we have no way of configuring the network yet either</span></div><div class="line" id="144708"><span class="nick" style="color:#2e2a4a"><a href="#144708" label="[14:47:08]">&lt;pder&gt;</a></span><span class="message">I noticed bootstrap.log is missing everything that is printed on stderr which includes compiler warnings</span></div><div class="line" id="144732"><span class="nick" style="color:#2e2a4a"><a href="#144732" label="[14:47:32]">&lt;pder&gt;</a></span><span class="message">Probably should change line 280 to sudo PATH=&quot;/after/bin:${PATH}&quot; chroot . /init 2&gt;&amp;1 | tee &quot;$LOGFILE&quot;</span></div><div class="line" id="144745"><span class="nick" style="color:#2e2a4a"><a href="#144745" label="[14:47:45]">&lt;pder&gt;</a></span><span class="message">of rootfs.sh</span></div><div class="line" id="145943"><span class="nick" style="color:#389600"><a href="#145943" label="[14:59:43]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="145954"><span class="nick" style="color:#389600"><a href="#145954" label="[14:59:54]">&lt;stikonas&gt;</a></span><span class="message">and 2nd qemu run here resulted in the same checksum</span></div><div class="line" id="151619"><span class="nick" style="color:#2e2a4a"><a href="#151619" label="[15:16:19]">&lt;pder&gt;</a></span><span class="message">hmm, my qemu run just now gave me the same checksum as in checksums file</span></div><div class="line" id="152847"><span class="nick" style="color:#389600"><a href="#152847" label="[15:28:47]">&lt;stikonas&gt;</a></span><span class="message">could be one of the two...</span></div><div class="line" id="152855"><span class="nick" style="color:#389600"><a href="#152855" label="[15:28:55]">&lt;stikonas&gt;</a></span><span class="message">independent of qemu or chroot</span></div><div class="line" id="152914"><span class="nick" style="color:#389600"><a href="#152914" label="[15:29:14]">&lt;stikonas&gt;</a></span><span class="message">just some randomness injected somewhere which results in two choices</span></div><div class="line" id="153423"><span class="nick" style="color:#2e2a4a"><a href="#153423" label="[15:34:23]">&lt;pder&gt;</a></span><span class="message">now its just a matter of getting a copy of that binary to inspect the differences</span></div><div class="line" id="155633"><span class="nick" style="color:#389600"><a href="#155633" label="[15:56:33]">&lt;stikonas&gt;</a></span><span class="message">probably some timestamp...</span></div><div class="line" id="155641"><span class="nick" style="color:#389600"><a href="#155641" label="[15:56:41]">&lt;stikonas&gt;</a></span><span class="message">binaries have the same size</span></div><div class="line" id="160457"><span class="nick" style="color:#2e2a4a"><a href="#160457" label="[16:04:57]">&lt;pder&gt;</a></span><span class="message">not sure, it seems like if it were a timestamp we would never get the same hash</span></div><div class="line" id="160639"><span class="nick" style="color:#389600"><a href="#160639" label="[16:06:39]">&lt;stikonas&gt;</a></span><span class="message">hmm, indeed...</span></div><div class="line" id="160723"><span class="nick" style="color:#2e2a4a"><a href="#160723" label="[16:07:23]">&lt;pder&gt;</a></span><span class="message">Im hoping for another failure with qemu.  I have copied busybox to the initrd and added -hda myimage.img to qemu</span></div><div class="line" id="170231"><span class="nick" style="color:#2e2a4a"><a href="#170231" label="[17:02:31]">&lt;pder&gt;</a></span><span class="message">I got the failure, now just how do I copy this bash binary to the host...</span></div><div class="line" id="170254"><span class="nick" style="color:#2e2a4a"><a href="#170254" label="[17:02:54]">&lt;pder&gt;</a></span><span class="message">stikonas: same checksum that you had above</span></div><div class="line" id="170336"><span class="nick" style="color:#389600"><a href="#170336" label="[17:03:36]">&lt;stikonas&gt;</a></span><span class="message">so can you mount external drive using busybox?</span></div><div class="line" id="170405"><span class="nick" style="color:#2e2a4a"><a href="#170405" label="[17:04:05]">&lt;pder&gt;</a></span><span class="message">I suppose I need to create /dev device manually?</span></div><div class="line" id="170439"><span class="nick" style="color:#389600"><a href="#170439" label="[17:04:39]">&lt;stikonas&gt;</a></span><span class="message">I suppose...</span></div><div class="line" id="170447"><span class="nick" style="color:#2e2a4a"><a href="#170447" label="[17:04:47]">&lt;pder&gt;</a></span><span class="message">I passed -hda myimage.img to qemu</span></div><div class="line" id="170448"><span class="nick" style="color:#389600"><a href="#170448" label="[17:04:48]">&lt;stikonas&gt;</a></span><span class="message">with mknod, we have that already from coreutils</span></div><div class="line" id="170512"><span class="nick" style="color:#2e2a4a"><a href="#170512" label="[17:05:12]">&lt;pder&gt;</a></span><span class="message">I dont see anything obvious when I run busybox dmesg</span></div><div class="line" id="170547"><span class="nick" style="color:#2e2a4a"><a href="#170547" label="[17:05:47]">&lt;pder&gt;</a></span><span class="message">Maybe my kernel doesnt have support, or its only as a module?</span></div><div class="line" id="170557"><span class="nick" style="color:#389600"><a href="#170557" label="[17:05:57]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="170616"><span class="nick" style="color:#389600"><a href="#170616" label="[17:06:16]">&lt;stikonas&gt;</a></span><span class="message">the other option is to try to get the other checksum from rootfs chroot</span></div><div class="line" id="170637"><span class="nick" style="color:#389600"><a href="#170637" label="[17:06:37]">&lt;stikonas&gt;</a></span><span class="message">because it doesn't look like qemu vs chroot is the only thing that determines it</span></div><div class="line" id="170716"><span class="nick" style="color:#2e2a4a"><a href="#170716" label="[17:07:16]">&lt;pder&gt;</a></span><span class="message">so far, I have only seen this checksum fail with qemu.  Have you seen it running rootfs.sh chroot?</span></div><div class="line" id="171058"><span class="nick" style="color:#389600"><a href="#171058" label="[17:10:58]">&lt;stikonas&gt;</a></span><span class="message">not sure... I remember adjusting checksum once in chroot... But I don't know if it's this issue or something else</span></div><div class="line" id="182447"><span class="nick" style="color:#2e2a4a"><a href="#182447" label="[18:24:47]">&lt;pder&gt;</a></span><span class="message">stikonas: so I think I have a technique to copy /after/bin/bash out of qemu.  I run qemu within tmux with a large scrollback buffer.  Then I can run busybox uuencode /after/bin/bash - to write to stdout.  Then ^b : capture-pane -S 60000 and ^b save-buffer bash.txt</span></div><div class="line" id="182506"><span class="nick" style="color:#389600"><a href="#182506" label="[18:25:06]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="182550"><span class="nick" style="color:#2e2a4a"><a href="#182550" label="[18:25:50]">&lt;pder&gt;</a></span><span class="message">should be capture-pane -S -60000</span></div><div class="line" id="183242"><span class="nick" style="color:#389600"><a href="#183242" label="[18:32:42]">&lt;stikonas&gt;</a></span><span class="message">well, if you can try to find diff between two binaries, that would be interesting to see</span></div><div class="line" id="183309"><span class="nick" style="color:#2e2a4a"><a href="#183309" label="[18:33:09]">&lt;pder&gt;</a></span><span class="message">thats what I'm hoping.  I already have a copy of bash with the original checksum</span></div><div class="line" id="183419"><span class="nick" style="color:#2e2a4a"><a href="#183419" label="[18:34:19]">&lt;pder&gt;</a></span><span class="message">such a strange issue</span></div><div class="line" id="194529"><span class="nick" style="color:#6c3d55"><a href="#194529" label="[19:45:29]">&lt;lfam&gt;</a></span><span class="message">Hey, I have an off-hand question. Does anyone know if the Guix bootstrap, as it exists currently, is i686. That is, 32-bit Intel-compatible architecture?</span></div><div class="line" id="195923"><span class="nick" style="color:#2e2a4a"><a href="#195923" label="[19:59:23]">&lt;pder&gt;</a></span><span class="message">stikonas: <a rel="nofollow" href="https://paste.debian.net/1190539/">https://paste.debian.net/1190539/</a> </span></div><div class="line" id="195957"><span class="nick" style="color:#2e2a4a"><a href="#195957" label="[19:59:57]">&lt;pder&gt;</a></span><span class="message">not sure what to make of it.  Maybe I need to compare each object file with checksum pass build vs checksum fail build</span></div><div class="line" id="195959"><span class="nick" style="color:#389600"><a href="#195959" label="[19:59:59]">&lt;stikonas&gt;</a></span><span class="message">lfam: yes</span></div><div class="line" id="200006"><span class="nick" style="color:#6c3d55"><a href="#200006" label="[20:00:06]">&lt;lfam&gt;</a></span><span class="message">Thanks stikonas</span></div><div class="line" id="200023"><span class="nick" style="color:#389600"><a href="#200023" label="[20:00:23]">&lt;stikonas&gt;</a></span><span class="message">pder: so just 1 bit...</span></div><div class="line" id="200029"><span class="nick" style="color:#389600"><a href="#200029" label="[20:00:29]">&lt;stikonas&gt;</a></span><span class="message">probably some flag...</span></div><div class="line" id="200059"><span class="nick" style="color:#389600"><a href="#200059" label="[20:00:59]">&lt;stikonas&gt;</a></span><span class="message">lfam: live-bootstrap is also x86 for now</span></div><div class="line" id="200115"><span class="nick" style="color:#6c3d55"><a href="#200115" label="[20:01:15]">&lt;lfam&gt;</a></span><span class="message">By x86, you mean 32-bit Intel?</span></div><div class="line" id="200153"><span class="nick" style="color:#389600"><a href="#200153" label="[20:01:53]">&lt;stikonas&gt;</a></span><span class="message">well, yes</span></div><div class="line" id="200157"><span class="nick" style="color:#389600"><a href="#200157" label="[20:01:57]">&lt;stikonas&gt;</a></span><span class="message">or 32-bit AMD...</span></div><div class="line" id="200206"><span class="nick" style="color:#389600"><a href="#200206" label="[20:02:06]">&lt;stikonas&gt;</a></span><span class="message">but 64 bit can run 32-bit code</span></div><div class="line" id="200215"><span class="nick" style="color:#389600"><a href="#200215" label="[20:02:15]">&lt;stikonas&gt;</a></span><span class="message">so 32-bit bootstrap is suitable for 64-bit machines too</span></div><div class="line" id="200215"><span class="nick" style="color:#2e2a4a"><a href="#200215" label="[20:02:15]">&lt;pder&gt;</a></span><span class="message">This might be a better clue: <a rel="nofollow" href="https://paste.debian.net/1190540/">https://paste.debian.net/1190540/</a> </span></div><div class="line" id="200506"><span class="nick" style="color:#6c3d55"><a href="#200506" label="[20:05:06]">&lt;lfam&gt;</a></span><span class="message">Intel owns that IP :)</span></div><div class="line" id="200524"><span class="nick" style="color:#389600"><a href="#200524" label="[20:05:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, I wonder which one bash we want...</span></div><div class="line" id="200526"><span class="nick" style="color:#6c3d55"><a href="#200526" label="[20:05:26]">&lt;lfam&gt;</a></span><span class="message">Yes, I know that x86_64 can transparently emulate the old 32-bit mode</span></div><div class="line" id="200530"><span class="nick" style="color:#6c3d55"><a href="#200530" label="[20:05:30]">&lt;lfam&gt;</a></span><span class="message">Thanks for your help!</span></div><div class="line" id="200541"><span class="nick" style="color:#389600"><a href="#200541" label="[20:05:41]">&lt;stikonas&gt;</a></span><span class="message">with 0x200 or 0x1000</span></div><div class="line" id="200618"><span class="nick" style="color:#389600"><a href="#200618" label="[20:06:18]">&lt;stikonas&gt;</a></span><span class="message">well, not much help... just a single question...</span></div><div class="line" id="200623"><span class="nick" style="color:#2e2a4a"><a href="#200623" label="[20:06:23]">&lt;pder&gt;</a></span><span class="message">redir.c seems to be the file and the function is do_redirection_internal</span></div><div class="line" id="201536"><span class="nick" style="color:#389600"><a href="#201536" label="[20:15:36]">&lt;stikonas&gt;</a></span><span class="message">pder: maybe worth comparing that function with old bash</span></div><div class="line" id="201550"><span class="nick" style="color:#389600"><a href="#201550" label="[20:15:50]">&lt;stikonas&gt;</a></span><span class="message">although, didn't we get mismatch even when building with tcc...</span></div><div class="line" id="201601"><span class="nick" style="color:#389600"><a href="#201601" label="[20:16:01]">&lt;stikonas&gt;</a></span><span class="message">I thought it failed on first pass, or was it 2nd...</span></div><div class="line" id="203523"><span class="nick" style="color:#2e2a4a"><a href="#203523" label="[20:35:23]">&lt;pder&gt;</a></span><span class="message">This is the first issue I've seen like this and this is with gcc</span></div><div class="line" id="203558"><span class="nick" style="color:#2e2a4a"><a href="#203558" label="[20:35:58]">&lt;pder&gt;</a></span><span class="message">I was able to capture a tar.gz of the bash build directory and saved it on my machine</span></div><div class="line" id="203631"><span class="nick" style="color:#2e2a4a"><a href="#203631" label="[20:36:31]">&lt;pder&gt;</a></span><span class="message">I am wondering if there are any other files that differ in the build directory</span></div><div class="line" id="204737"><span class="nick" style="color:#389600"><a href="#204737" label="[20:47:37]">&lt;stikonas&gt;</a></span><span class="message">probably .o files</span></div><div class="line" id="204746"><span class="nick" style="color:#389600"><a href="#204746" label="[20:47:46]">&lt;stikonas&gt;</a></span><span class="message">from redir.c-&gt;redir.o</span></div><div class="line" id="211819"><span class="nick" style="color:#2e2a4a"><a href="#211819" label="[21:18:19]">&lt;pder&gt;</a></span><span class="message">stikonas: builtins/pipesize.h differs between the builds.  In the checksum passing version PIPESIZE is defined as 65536 and in the checksum failing version it is defined as 512</span></div><div class="line" id="211856"><span class="nick" style="color:#2e2a4a"><a href="#211856" label="[21:18:56]">&lt;pder&gt;</a></span><span class="message">now we just need to figure out where that is set</span></div><div class="line" id="211933"><span class="nick" style="color:#2e2a4a"><a href="#211933" label="[21:19:33]">&lt;pder&gt;</a></span><span class="message">65536 = 0x10000 and 512= 0x200 like we saw in the assembly diffs</span></div><div class="line" id="212727"><span class="nick" style="color:#389600"><a href="#212727" label="[21:27:27]">&lt;stikonas&gt;</a></span><span class="message">ok, that looks promising</span></div><div class="line" id="212741"><span class="nick" style="color:#389600"><a href="#212741" label="[21:27:41]">&lt;stikonas&gt;</a></span><span class="message">not sure why pipesize is different...</span></div><div class="line" id="212756"><span class="nick" style="color:#389600"><a href="#212756" label="[21:27:56]">&lt;stikonas&gt;</a></span><span class="message">isn't there some mkbuiltins script</span></div><div class="line" id="212816"><span class="nick" style="color:#389600"><a href="#212816" label="[21:28:16]">&lt;stikonas&gt;</a></span><span class="message">oh, it's mkbuiltins.c</span></div><div class="line" id="212854"><span class="nick" style="color:#389600"><a href="#212854" label="[21:28:54]">&lt;stikonas&gt;</a></span><span class="message">no, that's actually written by psize.sh</span></div><div class="line" id="212942"><span class="nick" style="color:#389600"><a href="#212942" label="[21:29:42]">&lt;stikonas&gt;</a></span><span class="message">looks like race condition</span></div><div class="line" id="212956"><span class="nick" style="color:#389600"><a href="#212956" label="[21:29:56]">&lt;stikonas&gt;</a></span><span class="message">there is sleep 3 there</span></div><div class="line" id="213054"><span class="nick" style="color:#389600"><a href="#213054" label="[21:30:54]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/bash.git/tree/builtins/psize.sh#n37">https://git.savannah.gnu.org/cgit/bash.git/tree/builtins/psize.sh#n37</a> </span></div><div class="line" id="213205"><span class="nick" style="color:#2e2a4a"><a href="#213205" label="[21:32:05]">&lt;pder&gt;</a></span><span class="message">maybe having mktemp will help?</span></div><div class="line" id="213254"><span class="nick" style="color:#389600"><a href="#213254" label="[21:32:54]">&lt;stikonas&gt;</a></span><span class="message">it definitely might</span></div><div class="line" id="213306"><span class="nick" style="color:#389600"><a href="#213306" label="[21:33:06]">&lt;stikonas&gt;</a></span><span class="message">is that coreutils?</span></div><div class="line" id="213344"><span class="nick" style="color:#389600"><a href="#213344" label="[21:33:44]">&lt;stikonas&gt;</a></span><span class="message">maybe then need to rebuild coreutils before bash</span></div><div class="line" id="213431"><span class="nick" style="color:#389600"><a href="#213431" label="[21:34:31]">&lt;stikonas&gt;</a></span><span class="message">it's not yet in coreutils 6.3</span></div><div class="line" id="213435"><span class="nick" style="color:#389600"><a href="#213435" label="[21:34:35]">&lt;stikonas&gt;</a></span><span class="message">need something newer</span></div><div class="line" id="213615"><span class="nick" style="color:#389600"><a href="#213615" label="[21:36:15]">&lt;stikonas&gt;</a></span><span class="message">I think we need 7.1</span></div><div class="line" id="213620"><span class="nick" style="color:#2e2a4a"><a href="#213620" label="[21:36:20]">&lt;pder&gt;</a></span><span class="message">interesting</span></div><div class="line" id="213716"><span class="nick" style="color:#389600"><a href="#213716" label="[21:37:16]">&lt;stikonas&gt;</a></span><span class="message">it might be good to get newer coreutils anyway</span></div><div class="line" id="213729"><span class="nick" style="color:#389600"><a href="#213729" label="[21:37:29]">&lt;stikonas&gt;</a></span><span class="message">and this time it will be all of them...</span></div><div class="line" id="213735"><span class="nick" style="color:#389600"><a href="#213735" label="[21:37:35]">&lt;stikonas&gt;</a></span><span class="message">not just those we manually picked</span></div><div class="line" id="213803"><span class="nick" style="color:#2e2a4a"><a href="#213803" label="[21:38:03]">&lt;pder&gt;</a></span><span class="message">that sounds good. hopefully autotools is not an issue</span></div><div class="line" id="213812"><span class="nick" style="color:#389600"><a href="#213812" label="[21:38:12]">&lt;stikonas&gt;</a></span><span class="message">it is</span></div><div class="line" id="213821"><span class="nick" style="color:#389600"><a href="#213821" label="[21:38:21]">&lt;stikonas&gt;</a></span><span class="message">autoconf is fine, but it needs automake 2.10</span></div><div class="line" id="213827"><span class="nick" style="color:#389600"><a href="#213827" label="[21:38:27]">&lt;stikonas&gt;</a></span><span class="message">which I can build but it is borken</span></div><div class="line" id="213836"><span class="nick" style="color:#389600"><a href="#213836" label="[21:38:36]">&lt;stikonas&gt;</a></span><span class="message">broken (I think due to perl)</span></div><div class="line" id="213902"><span class="nick" style="color:#2e2a4a"><a href="#213902" label="[21:39:02]">&lt;pder&gt;</a></span><span class="message">maybe perl needs a rebuild with gcc?</span></div><div class="line" id="213903"><span class="nick" style="color:#389600"><a href="#213903" label="[21:39:03]">&lt;stikonas&gt;</a></span><span class="message">well, maybe can patch it to require older automake</span></div><div class="line" id="213911"><span class="nick" style="color:#389600"><a href="#213911" label="[21:39:11]">&lt;stikonas&gt;</a></span><span class="message">I don't think that's enough</span></div><div class="line" id="213918"><span class="nick" style="color:#389600"><a href="#213918" label="[21:39:18]">&lt;stikonas&gt;</a></span><span class="message">but it might be easy to fix automake requirement</span></div><div class="line" id="213923"><span class="nick" style="color:#389600"><a href="#213923" label="[21:39:23]">&lt;stikonas&gt;</a></span><span class="message">it might be due to dist-xz</span></div><div class="line" id="213939"><span class="nick" style="color:#389600"><a href="#213939" label="[21:39:39]">&lt;stikonas&gt;</a></span><span class="message">in configure.ac</span></div><div class="line" id="214159"><span class="nick" style="color:#2e2a4a"><a href="#214159" label="[21:41:59]">&lt;pder&gt;</a></span><span class="message">could we do roughly this order?  gcc pass1, gcc pass2, coreutils, bash?</span></div><div class="line" id="222330"><span class="nick" style="color:#389600"><a href="#222330" label="[22:23:30]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think we can</span></div><div class="line" id="222356"><span class="nick" style="color:#389600"><a href="#222356" label="[22:23:56]">&lt;stikonas&gt;</a></span><span class="message">well, I need to fix remaining comments in gcc PR...</span></div><div class="line" id="222409"><span class="nick" style="color:#389600"><a href="#222409" label="[22:24:09]">&lt;stikonas&gt;</a></span><span class="message">and then add coreutils (hopefully not too hard to patch automake)</span></div><div class="line" id="222418"><span class="nick" style="color:#389600"><a href="#222418" label="[22:24:18]">&lt;stikonas&gt;</a></span><span class="message">although, longer term, perl needs to be sorted out</span></div><div class="line" id="222447"><span class="nick" style="color:#389600"><a href="#222447" label="[22:24:47]">&lt;stikonas&gt;</a></span><span class="message">but hopefully, that will be easier with GCC</span></div><div class="line" id="222518"><span class="nick" style="color:#2e2a4a"><a href="#222518" label="[22:25:18]">&lt;pder&gt;</a></span><span class="message">I also wondered with perl if we can look at metaconfig which is supposed to generate a Configure script</span></div><div class="line" id="222654"><span class="nick" style="color:#2e2a4a"><a href="#222654" label="[22:26:54]">&lt;pder&gt;</a></span><span class="message">another idea is to use your build script that you created for sha256sum and coreutils 6 and update it to use coreutils 7 plus add mktemp</span></div><div class="line" id="222803"><span class="nick" style="color:#389600"><a href="#222803" label="[22:28:03]">&lt;stikonas&gt;</a></span><span class="message">well, I think patching out automake stuff will be easier</span></div><div class="line" id="222815"><span class="nick" style="color:#389600"><a href="#222815" label="[22:28:15]">&lt;stikonas&gt;</a></span><span class="message">but yeah, looking at metaconfig might be possible now</span></div><div class="line" id="222838"><span class="nick" style="color:#389600"><a href="#222838" label="[22:28:38]">&lt;stikonas&gt;</a></span><span class="message">and if not, we can still try to manually build perl 5.8 instead</span></div><div class="line" id="222842"><span class="nick" style="color:#389600"><a href="#222842" label="[22:28:42]">&lt;stikonas&gt;</a></span><span class="message">maybe it will work better</span></div><div class="line" id="233014"><span class="nick" style="color:#389600"><a href="#233014" label="[23:30:14]">&lt;stikonas&gt;</a></span><span class="message">fossy: what is generated in intl/?</span></div><div class="line" id="233017"><span class="nick" style="color:#389600"><a href="#233017" label="[23:30:17]">&lt;stikonas&gt;</a></span><span class="message">I can't find anything there</span></div><div class="line" id="233033"><span class="nick" style="color:#389600"><a href="#233033" label="[23:30:33]">&lt;stikonas&gt;</a></span><span class="message">gcc/po indeed ships some prebuilt mo files</span></div><br /></div></body></html>