<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-08-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000437"><span class="nick" style="color:#389600"><a href="#000437" label="[00:04:37]">&lt;oriansj&gt;</a></span><span class="message">stikonas: is it only the hex1 version getting stuck or is it the clang/nasm version as well?</span></div><div class="line" id="000908"><span class="nick" style="color:#8dd3c7"><a href="#000908" label="[00:09:08]">&lt;aggi&gt;</a></span><span class="message">i see, you had re-implemented the GNU Guix bootstrapping (formerly done for gcc-2.7 with a giant binary seed tarball)</span></div><div class="line" id="000913"><span class="nick" style="color:#2e2a4a"><a href="#000913" label="[00:09:13]">&lt;stikonas&gt;</a></span><span class="message">I only have nasm and M1 versions for now</span></div><div class="line" id="000922"><span class="nick" style="color:#2e2a4a"><a href="#000922" label="[00:09:22]">&lt;stikonas&gt;</a></span><span class="message">aggi: well, that was live-bootstrap</span></div><div class="line" id="000949"><span class="nick" style="color:#2e2a4a"><a href="#000949" label="[00:09:49]">&lt;stikonas&gt;</a></span><span class="message">it goes a bit further than guix. It does not need Guile and it does not use pre-generated files (such as configure scripts)</span></div><div class="line" id="001001"><span class="nick" style="color:#2e2a4a"><a href="#001001" label="[00:10:01]">&lt;stikonas&gt;</a></span><span class="message">oriansj: probably a bug in logic...</span></div><div class="line" id="001022"><span class="nick" style="color:#2e2a4a"><a href="#001022" label="[00:10:22]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I didn't write C version though, that would probably work</span></div><div class="line" id="001040"><span class="nick" style="color:#2e2a4a"><a href="#001040" label="[00:10:40]">&lt;stikonas&gt;</a></span><span class="message">well, I'll go over the source and try to find a bug</span></div><div class="line" id="001055"><span class="nick" style="color:#2e2a4a"><a href="#001055" label="[00:10:55]">&lt;stikonas&gt;</a></span><span class="message">maybe messed up something with stack</span></div><div class="line" id="001809"><span class="nick" style="color:#8dd3c7"><a href="#001809" label="[00:18:09]">&lt;aggi&gt;</a></span><span class="message">the integration path i am planning for with tcc slightly differs, meaning i do not want any userspace (and kernel too) depend on gnu-toolchain (gcc/binutils/glibc and llvm alike) anymore at all</span></div><div class="line" id="001852"><span class="nick" style="color:#8dd3c7"><a href="#001852" label="[00:18:52]">&lt;aggi&gt;</a></span><span class="message">i only want a tcc-toolchain being capable to bootstrap the gnu-toolchain (gcc47/binutils2.22 for aarch32 is what i got)</span></div><div class="line" id="001923"><span class="nick" style="color:#8dd3c7"><a href="#001923" label="[00:19:23]">&lt;aggi&gt;</a></span><span class="message">and the bootstrapping path at the lower levels, in that realm i was thinking about the hardware itself, and the related supply chains</span></div><div class="line" id="001955"><span class="nick" style="color:#8dd3c7"><a href="#001955" label="[00:19:55]">&lt;aggi&gt;</a></span><span class="message">including the reasoning, if any opensource SoC can be deployed onto FPGA (there is some for ia32 btw., limited to 40MHz on an Altera FPGA)</span></div><div class="line" id="002026"><span class="nick" style="color:#8dd3c7"><a href="#002026" label="[00:20:26]">&lt;aggi&gt;</a></span><span class="message">however, bootstrapping in the hardware real raises far more concerns again (j-core.org documented some of it related to xilinx for example)</span></div><div class="line" id="002031"><span class="nick" style="color:#8dd3c7"><a href="#002031" label="[00:20:31]">&lt;aggi&gt;</a></span><span class="message">*realm</span></div><div class="line" id="002103"><span class="nick" style="color:#8dd3c7"><a href="#002103" label="[00:21:03]">&lt;aggi&gt;</a></span><span class="message">and then, i began to rule-out any non-desireable hardware options according to some criteria (opensource, no proprietary software-tooling)</span></div><div class="line" id="002137"><span class="nick" style="color:#8dd3c7"><a href="#002137" label="[00:21:37]">&lt;aggi&gt;</a></span><span class="message">my conclusion some time ago, we haven't got at least some opensource VT100 terminal anymore (hardware and software), which was fully documented and bootstrappable</span></div><div class="line" id="002233"><span class="nick" style="color:#6b8072"><a href="#002233" label="[00:22:33]">&lt;muurkha&gt;</a></span><span class="message">VT100 is pretty big</span></div><div class="line" id="002251"><span class="nick" style="color:#8dd3c7"><a href="#002251" label="[00:22:51]">&lt;aggi&gt;</a></span><span class="message">that's why, i arrived at gigatron ttl, because it doesn't depend on excess dependencies on the hardware-development side</span></div><div class="line" id="002310"><span class="nick" style="color:#8dd3c7"><a href="#002310" label="[00:23:10]">&lt;aggi&gt;</a></span><span class="message">although i doubt a gigatron ttl could terminate vt100 at 640x480 at least</span></div><div class="line" id="002324"><span class="nick" style="color:#6b8072"><a href="#002324" label="[00:23:24]">&lt;muurkha&gt;</a></span><span class="message">I think the Heathkit H19 might be open source, and it can emulate a substantial part of the VT100 command set.  on an 8085</span></div><div class="line" id="002352"><span class="nick" style="color:#8dd3c7"><a href="#002352" label="[00:23:52]">&lt;aggi&gt;</a></span><span class="message">then there is some other interesting Z80 SoC... however guess what, the compiler suite for this, small device c compiler (SDCC)....</span></div><div class="line" id="002402"><span class="nick" style="color:#8dd3c7"><a href="#002402" label="[00:24:02]">&lt;aggi&gt;</a></span><span class="message">SDCC implemented in C++</span></div><div class="line" id="002450"><span class="nick" style="color:#6b8072"><a href="#002450" label="[00:24:50]">&lt;muurkha&gt;</a></span><span class="message">I wrote an ADM3A emulator a couple of years ago: <a rel="nofollow" href="https://gitlab.com/kragen/bubbleos/-/blob/master/yeso/admu.c">https://gitlab.com/kragen/bubbleos/-/blob/master/yeso/admu.c</a> </span></div><div class="line" id="002511"><span class="nick" style="color:#6b8072"><a href="#002511" label="[00:25:11]">&lt;muurkha&gt;</a></span><span class="message">it's 86 lines of C</span></div><div class="line" id="002522"><span class="nick" style="color:#6b8072"><a href="#002522" label="[00:25:22]">&lt;muurkha&gt;</a></span><span class="message">and you can run vi on it</span></div><div class="line" id="002711"><span class="nick" style="color:#6b8072"><a href="#002711" label="[00:27:11]">&lt;muurkha&gt;</a></span><span class="message">if you're building a text terminal out of gates, a character generator might be worthwhile, because it allows the rest of the hardware to run at extremely modest speeds</span></div><div class="line" id="002804"><span class="nick" style="color:#6b8072"><a href="#002804" label="[00:28:04]">&lt;muurkha&gt;</a></span><span class="message">I guess I need to include admu.h, which brings it to 96 lines of C</span></div><div class="line" id="002856"><span class="nick" style="color:#8dd3c7"><a href="#002856" label="[00:28:56]">&lt;aggi&gt;</a></span><span class="message">currently i am fighting at another frontline, which is i want to retain a somewhat practical userspace including all development tooling, linux kernel etc... everything compiled/linked with tcc</span></div><div class="line" id="002901"><span class="nick" style="color:#8dd3c7"><a href="#002901" label="[00:29:01]">&lt;aggi&gt;</a></span><span class="message">no GNU toolchain for this, no llvm</span></div><div class="line" id="002929"><span class="nick" style="color:#6b8072"><a href="#002929" label="[00:29:29]">&lt;muurkha&gt;</a></span><span class="message">I think at this point SeRV and PicoRV32 probably make 8-bit processors obsolete</span></div><div class="line" id="002942"><span class="nick" style="color:#6b8072"><a href="#002942" label="[00:29:42]">&lt;muurkha&gt;</a></span><span class="message">and GCC and Clang can target them without difficulty</span></div><div class="line" id="002944"><span class="nick" style="color:#8dd3c7"><a href="#002944" label="[00:29:44]">&lt;aggi&gt;</a></span><span class="message">muurkha: are those opensource with verilog available?</span></div><div class="line" id="002946"><span class="nick" style="color:#6b8072"><a href="#002946" label="[00:29:46]">&lt;muurkha&gt;</a></span><span class="message">yes</span></div><div class="line" id="003117"><span class="nick" style="color:#8dd3c7"><a href="#003117" label="[00:31:17]">&lt;aggi&gt;</a></span><span class="message">hooking into tcc cc/ld as the only system toolchain components, offered some remarkable insight, what to think about GNU toolchain</span></div><div class="line" id="003127"><span class="nick" style="color:#8dd3c7"><a href="#003127" label="[00:31:27]">&lt;aggi&gt;</a></span><span class="message">my scepticism towards this... i don't know, sorry</span></div><div class="line" id="003225"><span class="nick" style="color:#8dd3c7"><a href="#003225" label="[00:32:25]">&lt;aggi&gt;</a></span><span class="message">to repair userspace on latest gentoo testing branch again, &quot;only&quot;, to remove c++, and compile with gcc-47, was almost 1year of effort</span></div><div class="line" id="003248"><span class="nick" style="color:#8dd3c7"><a href="#003248" label="[00:32:48]">&lt;aggi&gt;</a></span><span class="message">and there is some nasty blockers remaining</span></div><div class="line" id="003313"><span class="nick" style="color:#8dd3c7"><a href="#003313" label="[00:33:13]">&lt;aggi&gt;</a></span><span class="message">such as, elfutils... was it really necessary to lock this against non-standard/C11 __thread extension?</span></div><div class="line" id="003317"><span class="nick" style="color:#6b8072"><a href="#003317" label="[00:33:17]">&lt;muurkha&gt;</a></span><span class="message">it's a lot of work!</span></div><div class="line" id="003340"><span class="nick" style="color:#8dd3c7"><a href="#003340" label="[00:33:40]">&lt;aggi&gt;</a></span><span class="message">because, to my knowledge, there isn't any compiler/toolchain (written in C), which could digest __thread extension... uhum, RedHat</span></div><div class="line" id="003527"><span class="nick" style="color:#389600"><a href="#003527" label="[00:35:27]">&lt;oriansj&gt;</a></span><span class="message">aggi: You may find this very interesting: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0.git">https://github.com/ironmeld/builder-hex0.git</a> </span></div><div class="line" id="003633"><span class="nick" style="color:#8dd3c7"><a href="#003633" label="[00:36:33]">&lt;aggi&gt;</a></span><span class="message">oriansj: yes, i do. however, x86...</span></div><div class="line" id="003726"><span class="nick" style="color:#2e2a4a"><a href="#003726" label="[00:37:26]">&lt;stikonas&gt;</a></span><span class="message">aggi: well, builder-hex0 uses BIOS calls</span></div><div class="line" id="003735"><span class="nick" style="color:#2e2a4a"><a href="#003735" label="[00:37:35]">&lt;stikonas&gt;</a></span><span class="message">so it is x86 specific</span></div><div class="line" id="003751"><span class="nick" style="color:#8dd3c7"><a href="#003751" label="[00:37:51]">&lt;aggi&gt;</a></span><span class="message">BIOS, that's a whole other discussion</span></div><div class="line" id="003755"><span class="nick" style="color:#2e2a4a"><a href="#003755" label="[00:37:55]">&lt;stikonas&gt;</a></span><span class="message">but in principle you can follow the same idea but you'll have to replace bios calls with some hardware drivers</span></div><div class="line" id="003827"><span class="nick" style="color:#2e2a4a"><a href="#003827" label="[00:38:27]">&lt;stikonas&gt;</a></span><span class="message">so on arm some equivalent of builder-hex0 would only work on particular hardware (and also be maybe twice as big)</span></div><div class="line" id="003836"><span class="nick" style="color:#6b8072"><a href="#003836" label="[00:38:36]">&lt;muurkha&gt;</a></span><span class="message">(CP/M implemented BIOS on the 8080 but builder-hex0 won't run on an 8080)</span></div><div class="line" id="003916"><span class="nick" style="color:#389600"><a href="#003916" label="[00:39:16]">&lt;oriansj&gt;</a></span><span class="message">aggi: but it is a possible roadmap to a POSIX kernel written in assembly capable of running the steps needed to bootstrap a C compiler</span></div><div class="line" id="004000"><span class="nick" style="color:#8dd3c7"><a href="#004000" label="[00:40:00]">&lt;aggi&gt;</a></span><span class="message">there's several highly critical gaps of non-reproducible bootstrapping, vendor-locks etc...</span></div><div class="line" id="004015"><span class="nick" style="color:#2e2a4a"><a href="#004015" label="[00:40:15]">&lt;stikonas&gt;</a></span><span class="message">aggi: ?</span></div><div class="line" id="004030"><span class="nick" style="color:#8dd3c7"><a href="#004030" label="[00:40:30]">&lt;aggi&gt;</a></span><span class="message">ok, i think we share some principle ideas</span></div><div class="line" id="004049"><span class="nick" style="color:#8dd3c7"><a href="#004049" label="[00:40:49]">&lt;aggi&gt;</a></span><span class="message">and if we started at the hardware level, with an opensource ia32 SoC...</span></div><div class="line" id="004057"><span class="nick" style="color:#2e2a4a"><a href="#004057" label="[00:40:57]">&lt;stikonas&gt;</a></span><span class="message">BIOS does not have to be vendor-lockin, you can run builder-hex0 on seabios</span></div><div class="line" id="004120"><span class="nick" style="color:#8dd3c7"><a href="#004120" label="[00:41:20]">&lt;aggi&gt;</a></span><span class="message">what were the consequences: ... Xilinx or Altera IDE necessary with a giant Wintel PC, to deploy the hardware onto FPGA</span></div><div class="line" id="004130"><span class="nick" style="color:#2e2a4a"><a href="#004130" label="[00:41:30]">&lt;stikonas&gt;</a></span><span class="message">well, yes, at some point boundary between software bootstrapping and hw becomes a bit fuzzy</span></div><div class="line" id="004133"><span class="nick" style="color:#8dd3c7"><a href="#004133" label="[00:41:33]">&lt;aggi&gt;</a></span><span class="message">if you know what i mean... that's why the gigatron ttl is appealing</span></div><div class="line" id="004218"><span class="nick" style="color:#8dd3c7"><a href="#004218" label="[00:42:18]">&lt;aggi&gt;</a></span><span class="message">however, from there, and this is late 1960s, form gigatron ttl i don't see any way forward to scale this up and bridging the gap to a 16bit unix at least</span></div><div class="line" id="004222"><span class="nick" style="color:#389600"><a href="#004222" label="[00:42:22]">&lt;oriansj&gt;</a></span><span class="message">aggi: also knight is bootstrapped and is based on a computer too old to have firmware so that might be of interest</span></div><div class="line" id="004426"><span class="nick" style="color:#2e2a4a"><a href="#004426" label="[00:44:26]">&lt;stikonas&gt;</a></span><span class="message">pineapple one is also without firmware, isn't it?</span></div><div class="line" id="004506"><span class="nick" style="color:#6b8072"><a href="#004506" label="[00:45:06]">&lt;muurkha&gt;</a></span><span class="message">I'm not really sure</span></div><div class="line" id="004507"><span class="nick" style="color:#2e2a4a"><a href="#004507" label="[00:45:07]">&lt;stikonas&gt;</a></span><span class="message">but ultimately, you have to reimplement input/output calls when you don't have standard firmware</span></div><div class="line" id="004512"><span class="nick" style="color:#389600"><a href="#004512" label="[00:45:12]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well any thing we can put on an FPGA would be a solid step forward</span></div><div class="line" id="004514"><span class="nick" style="color:#6b8072"><a href="#004514" label="[00:45:14]">&lt;muurkha&gt;</a></span><span class="message">pineapple one is the most bootstrapped</span></div><div class="line" id="004533"><span class="nick" style="color:#8dd3c7"><a href="#004533" label="[00:45:33]">&lt;aggi&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/archlabo/Frix">https://github.com/archlabo/Frix</a> </span></div><div class="line" id="004539"><span class="nick" style="color:#8dd3c7"><a href="#004539" label="[00:45:39]">&lt;aggi&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/alfikpl/ao486">https://github.com/alfikpl/ao486</a> </span></div><div class="line" id="004550"><span class="nick" style="color:#6b8072"><a href="#004550" label="[00:45:50]">&lt;muurkha&gt;</a></span><span class="message">aggi: you can build SeRV or PicoRV32 with APIO (yosys and friends)</span></div><div class="line" id="004607"><span class="nick" style="color:#6b8072"><a href="#004607" label="[00:46:07]">&lt;muurkha&gt;</a></span><span class="message">you still need the giant Intel/AMD PC</span></div><div class="line" id="004614"><span class="nick" style="color:#8dd3c7"><a href="#004614" label="[00:46:14]">&lt;aggi&gt;</a></span><span class="message">however, i skipped the idea for now... as a rough estimate, 40MHz i386, i think this is too limited even with tcc compiler or similar</span></div><div class="line" id="004639"><span class="nick" style="color:#6b8072"><a href="#004639" label="[00:46:39]">&lt;muurkha&gt;</a></span><span class="message">maybe with our current live-bootstrap path</span></div><div class="line" id="004701"><span class="nick" style="color:#6b8072"><a href="#004701" label="[00:47:01]">&lt;muurkha&gt;</a></span><span class="message">however I can assure you that we compiled our own operating systems on machines that were much smaller than a 40MHz i386</span></div><div class="line" id="004714"><span class="nick" style="color:#8dd3c7"><a href="#004714" label="[00:47:14]">&lt;aggi&gt;</a></span><span class="message">no doubt</span></div><div class="line" id="004728"><span class="nick" style="color:#389600"><a href="#004728" label="[00:47:28]">&lt;oriansj&gt;</a></span><span class="message">well it is good enough to get us to M2-Planet relatively quickly, but mescc would probably have some serious performance problems building TCC</span></div><div class="line" id="004740"><span class="nick" style="color:#2e2a4a"><a href="#004740" label="[00:47:40]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet is reasonably capable</span></div><div class="line" id="004752"><span class="nick" style="color:#6b8072"><a href="#004752" label="[00:47:52]">&lt;muurkha&gt;</a></span><span class="message">I think the point at which it goes from impractical to practical is the borderline between the 12-bit PDP-8 and the 16-bit (address space) 8080 or 6502</span></div><div class="line" id="004827"><span class="nick" style="color:#2e2a4a"><a href="#004827" label="[00:48:27]">&lt;stikonas&gt;</a></span><span class="message">after all it's a self-hosting C compiler</span></div><div class="line" id="004838"><span class="nick" style="color:#389600"><a href="#004838" label="[00:48:38]">&lt;oriansj&gt;</a></span><span class="message">but if one is willing to put up with multihour build times and get a few GBs or RAM, even a 50MHz 386 should be sufficient to build TCC</span></div><div class="line" id="004851"><span class="nick" style="color:#2e2a4a"><a href="#004851" label="[00:48:51]">&lt;stikonas&gt;</a></span><span class="message">probably as good as early C compilers</span></div><div class="line" id="004903"><span class="nick" style="color:#389600"><a href="#004903" label="[00:49:03]">&lt;oriansj&gt;</a></span><span class="message">^or RAM^of RAM^</span></div><div class="line" id="004907"><span class="nick" style="color:#6b8072"><a href="#004907" label="[00:49:07]">&lt;muurkha&gt;</a></span><span class="message">but 32-bit address spaces and megabytes of RAM make life a *lot* easier</span></div><div class="line" id="004922"><span class="nick" style="color:#8dd3c7"><a href="#004922" label="[00:49:22]">&lt;aggi&gt;</a></span><span class="message">building tcc is one milestone</span></div><div class="line" id="004936"><span class="nick" style="color:#6b8072"><a href="#004936" label="[00:49:36]">&lt;muurkha&gt;</a></span><span class="message">BDS C (also free software now, btw) on CP/M had a lot of limitations</span></div><div class="line" id="004942"><span class="nick" style="color:#6b8072"><a href="#004942" label="[00:49:42]">&lt;muurkha&gt;</a></span><span class="message">as did C on the PDP-11</span></div><div class="line" id="004943"><span class="nick" style="color:#8dd3c7"><a href="#004943" label="[00:49:43]">&lt;aggi&gt;</a></span><span class="message">another idea, a clean VT100, both hardware and software, opensource etc.</span></div><div class="line" id="004956"><span class="nick" style="color:#389600"><a href="#004956" label="[00:49:56]">&lt;oriansj&gt;</a></span><span class="message">aggi: well mescc is the slowest piece as TCC is much faster and leaner than mescc</span></div><div class="line" id="005005"><span class="nick" style="color:#6b8072"><a href="#005005" label="[00:50:05]">&lt;muurkha&gt;</a></span><span class="message">I think the VT100 was a mistake</span></div><div class="line" id="005015"><span class="nick" style="color:#6b8072"><a href="#005015" label="[00:50:15]">&lt;muurkha&gt;</a></span><span class="message">an evolutionary dead end</span></div><div class="line" id="005030"><span class="nick" style="color:#6b8072"><a href="#005030" label="[00:50:30]">&lt;muurkha&gt;</a></span><span class="message">its contemporary the Apple ][ was a far preferable future</span></div><div class="line" id="005055"><span class="nick" style="color:#389600"><a href="#005055" label="[00:50:55]">&lt;oriansj&gt;</a></span><span class="message">also we can do custom hardware to make our lives easier.</span></div><div class="line" id="005102"><span class="nick" style="color:#6b8072"><a href="#005102" label="[00:51:02]">&lt;muurkha&gt;</a></span><span class="message">at a hardware level the VT100 was similar in complexity to an Apple ][, but vastly less capable</span></div><div class="line" id="005114"><span class="nick" style="color:#389600"><a href="#005114" label="[00:51:14]">&lt;oriansj&gt;</a></span><span class="message">and if ASIC costs keep dropping, we can even make our own ASICs</span></div><div class="line" id="005152"><span class="nick" style="color:#6b8072"><a href="#005152" label="[00:51:52]">&lt;muurkha&gt;</a></span><span class="message">ASIC costs are rising, not dropping, if you're talking about entry-level ASICs</span></div><div class="line" id="005211"><span class="nick" style="color:#6b8072"><a href="#005211" label="[00:52:11]">&lt;muurkha&gt;</a></span><span class="message">25 years ago you could do a from-scratch chip through MOSIS for US$5000</span></div><div class="line" id="005227"><span class="nick" style="color:#6b8072"><a href="#005227" label="[00:52:27]">&lt;muurkha&gt;</a></span><span class="message">well, one tapeout, which probably won't work</span></div><div class="line" id="005232"><span class="nick" style="color:#6b8072"><a href="#005232" label="[00:52:32]">&lt;muurkha&gt;</a></span><span class="message">now I think it's US$25000</span></div><div class="line" id="005248"><span class="nick" style="color:#2e2a4a"><a href="#005248" label="[00:52:48]">&lt;stikonas&gt;</a></span><span class="message">25 years of inflation...</span></div><div class="line" id="005301"><span class="nick" style="color:#6b8072"><a href="#005301" label="[00:53:01]">&lt;muurkha&gt;</a></span><span class="message">25 years of inflation would change US$5000 to US$7000 or so</span></div><div class="line" id="005313"><span class="nick" style="color:#389600"><a href="#005313" label="[00:53:13]">&lt;oriansj&gt;</a></span><span class="message">last I checked for a block it was only $2K</span></div><div class="line" id="005322"><span class="nick" style="color:#6b8072"><a href="#005322" label="[00:53:22]">&lt;muurkha&gt;</a></span><span class="message">a block?</span></div><div class="line" id="005335"><span class="nick" style="color:#6b8072"><a href="#005335" label="[00:53:35]">&lt;muurkha&gt;</a></span><span class="message">(also Google is doing a thing where they do it for free)</span></div><div class="line" id="005340"><span class="nick" style="color:#8dd3c7"><a href="#005340" label="[00:53:40]">&lt;aggi&gt;</a></span><span class="message">another problem with opensource ia32: peripherals such as usb1, ethernet... the SoC proposed seems inconclusive with the specs</span></div><div class="line" id="005425"><span class="nick" style="color:#8dd3c7"><a href="#005425" label="[00:54:25]">&lt;aggi&gt;</a></span><span class="message">and depends on, what's deployed into an FPGA, yet ia32 requires lots of FPGA space, and i doubt there is headroom remaining for some USB1 controller</span></div><div class="line" id="005428"><span class="nick" style="color:#389600"><a href="#005428" label="[00:54:28]">&lt;oriansj&gt;</a></span><span class="message">aggi: we don't need USB nor ethernet for bootstrapping</span></div><div class="line" id="005443"><span class="nick" style="color:#389600"><a href="#005443" label="[00:54:43]">&lt;oriansj&gt;</a></span><span class="message">heck punched paper tape is good enough for me</span></div><div class="line" id="005451"><span class="nick" style="color:#8dd3c7"><a href="#005451" label="[00:54:51]">&lt;aggi&gt;</a></span><span class="message">i see</span></div><div class="line" id="005456"><span class="nick" style="color:#8dd3c7"><a href="#005456" label="[00:54:56]">&lt;aggi&gt;</a></span><span class="message">altair basic, ok</span></div><div class="line" id="005508"><span class="nick" style="color:#6b8072"><a href="#005508" label="[00:55:08]">&lt;muurkha&gt;</a></span><span class="message">it's going to take a long time to punch your compiled Linux kernel into tape ;)</span></div><div class="line" id="005521"><span class="nick" style="color:#8dd3c7"><a href="#005521" label="[00:55:21]">&lt;aggi&gt;</a></span><span class="message">however, i had something practically useful in mind, meaning with tcp/ip, vga terminal etc...</span></div><div class="line" id="005528"><span class="nick" style="color:#6b8072"><a href="#005528" label="[00:55:28]">&lt;muurkha&gt;</a></span><span class="message">what do you mean by &quot;a block&quot;?</span></div><div class="line" id="005609"><span class="nick" style="color:#8dd3c7"><a href="#005609" label="[00:56:09]">&lt;aggi&gt;</a></span><span class="message">a clean and re-producible bootstrapping isn't the only criteria for a system to end up with</span></div><div class="line" id="005707"><span class="nick" style="color:#6b8072"><a href="#005707" label="[00:57:07]">&lt;muurkha&gt;</a></span><span class="message">hmm, maybe I'm confused: the lowest price I found when I looked with MPW/shuttle services was €650/mm² in an 0.35 μm process, minimum 3mm², which is indeed about US$2000</span></div><div class="line" id="005717"><span class="nick" style="color:#6b8072"><a href="#005717" label="[00:57:17]">&lt;muurkha&gt;</a></span><span class="message">that was 12 years ago</span></div><div class="line" id="005803"><span class="nick" style="color:#6b8072"><a href="#005803" label="[00:58:03]">&lt;muurkha&gt;</a></span><span class="message">so maybe the prices for ASICs really *are* coming down.  be interesting to see what current prices are</span></div><div class="line" id="005917"><span class="nick" style="color:#8dd3c7"><a href="#005917" label="[00:59:17]">&lt;aggi&gt;</a></span><span class="message">the gigatron ttl shipped for $150</span></div><div class="line" id="010134"><span class="nick" style="color:#6b8072"><a href="#010134" label="[01:01:34]">&lt;muurkha&gt;</a></span><span class="message">that's US$2000 to get the chip made, I think you get 20 chips for that</span></div><div class="line" id="010203"><span class="nick" style="color:#6b8072"><a href="#010203" label="[01:02:03]">&lt;muurkha&gt;</a></span><span class="message">and it's fairly easy then to go into volume production</span></div><div class="line" id="010410"><span class="nick" style="color:#389600"><a href="#010410" label="[01:04:10]">&lt;oriansj&gt;</a></span><span class="message">muurkha: TSMC sells a 300mm wafer processed using its N5 technology for about $16,988 and by block I mean 10mmx10mm of the wafer. and skywater 130nm wafers go for $4K so you have a ballpark</span></div><div class="line" id="010445"><span class="nick" style="color:#6b8072"><a href="#010445" label="[01:04:45]">&lt;muurkha&gt;</a></span><span class="message">what's N5?</span></div><div class="line" id="010502"><span class="nick" style="color:#6b8072"><a href="#010502" label="[01:05:02]">&lt;muurkha&gt;</a></span><span class="message">that's about US$500 per 3mm²</span></div><div class="line" id="010604"><span class="nick" style="color:#6b8072"><a href="#010604" label="[01:06:04]">&lt;muurkha&gt;</a></span><span class="message">that seems a lot more expensive than US$2000 for ten 3mm² chips</span></div><div class="line" id="010620"><span class="nick" style="color:#389600"><a href="#010620" label="[01:06:20]">&lt;oriansj&gt;</a></span><span class="message">28nm if I am reading this correctly</span></div><div class="line" id="010621"><span class="nick" style="color:#6b8072"><a href="#010621" label="[01:06:21]">&lt;muurkha&gt;</a></span><span class="message">unless you mean &quot;10 mm × 10 mm of each of 20 identical wafers&quot;</span></div><div class="line" id="010637"><span class="nick" style="color:#6b8072"><a href="#010637" label="[01:06:37]">&lt;muurkha&gt;</a></span><span class="message">aha, 28 nm is enormously more capable for digital than 0.35 μm</span></div><div class="line" id="010644"><span class="nick" style="color:#6b8072"><a href="#010644" label="[01:06:44]">&lt;muurkha&gt;</a></span><span class="message">that would explain why it's more expensive</span></div><div class="line" id="010724"><span class="nick" style="color:#6b8072"><a href="#010724" label="[01:07:24]">&lt;muurkha&gt;</a></span><span class="message">100 times as many transistors, and faster clock speed too (0.35 μm was still within the Dennard scaling slope)</span></div><div class="line" id="010726"><span class="nick" style="color:#2e2a4a"><a href="#010726" label="[01:07:26]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I've narrowed my hex2 bug a bit. It's a bug in ClearScratch</span></div><div class="line" id="011124"><span class="nick" style="color:#389600"><a href="#011124" label="[01:11:24]">&lt;oriansj&gt;</a></span><span class="message">muurkha: correction N5 is the 5nm process</span></div><div class="line" id="011137"><span class="nick" style="color:#389600"><a href="#011137" label="[01:11:37]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://community.cadence.com/cadence_blogs_8/b/breakfast-bytes/posts/tsmc-may-2020">https://community.cadence.com/cadence_blogs_8/b/breakfast-bytes/posts/tsmc-may-2020</a> </span></div><div class="line" id="011335"><span class="nick" style="color:#6b8072"><a href="#011335" label="[01:13:35]">&lt;muurkha&gt;</a></span><span class="message">very impressive!</span></div><div class="line" id="011344"><span class="nick" style="color:#6b8072"><a href="#011344" label="[01:13:44]">&lt;muurkha&gt;</a></span><span class="message">still, that's US$17000 per chip</span></div><div class="line" id="011357"><span class="nick" style="color:#6b8072"><a href="#011357" label="[01:13:57]">&lt;muurkha&gt;</a></span><span class="message">and per design I guess</span></div><div class="line" id="011405"><span class="nick" style="color:#6b8072"><a href="#011405" label="[01:14:05]">&lt;muurkha&gt;</a></span><span class="message">which is a lot more than US$2000 per design and US$100 per chip</span></div><div class="line" id="011549"><span class="nick" style="color:#389600"><a href="#011549" label="[01:15:49]">&lt;oriansj&gt;</a></span><span class="message">muurkha: per wafer</span></div><div class="line" id="011624"><span class="nick" style="color:#6b8072"><a href="#011624" label="[01:16:24]">&lt;muurkha&gt;</a></span><span class="message">oriansj: so are they really making up a mask set for just one wafer?</span></div><div class="line" id="011638"><span class="nick" style="color:#8dd3c7"><a href="#011638" label="[01:16:38]">&lt;aggi&gt;</a></span><span class="message">almost forgot, the Altera FPGA board sold for ~$750, capable of an ia32@40MHz, give or take a few mhz</span></div><div class="line" id="011652"><span class="nick" style="color:#389600"><a href="#011652" label="[01:16:52]">&lt;oriansj&gt;</a></span><span class="message">I don't know about the mask costs but that is the wafer cost</span></div><div class="line" id="011653"><span class="nick" style="color:#6b8072"><a href="#011653" label="[01:16:53]">&lt;muurkha&gt;</a></span><span class="message">also I think the larger part of the price is the NDAs you have to sign</span></div><div class="line" id="011712"><span class="nick" style="color:#6b8072"><a href="#011712" label="[01:17:12]">&lt;muurkha&gt;</a></span><span class="message">oriansj: wait, you're saying there might be additional mask costs on top of the US$17000?</span></div><div class="line" id="011731"><span class="nick" style="color:#6b8072"><a href="#011731" label="[01:17:31]">&lt;muurkha&gt;</a></span><span class="message">because those would presumably be an order of magnitude larger if so</span></div><div class="line" id="011746"><span class="nick" style="color:#389600"><a href="#011746" label="[01:17:46]">&lt;oriansj&gt;</a></span><span class="message">muurkha: I was quoting only the public per wafer cost</span></div><div class="line" id="011809"><span class="nick" style="color:#389600"><a href="#011809" label="[01:18:09]">&lt;oriansj&gt;</a></span><span class="message">it didn't specify anything additional about what that includes in the post</span></div><div class="line" id="011820"><span class="nick" style="color:#8dd3c7"><a href="#011820" label="[01:18:20]">&lt;aggi&gt;</a></span><span class="message">in comparison a raspberry zero 1.3 (1GHz, 512MiB RAM) sold for $5</span></div><div class="line" id="011853"><span class="nick" style="color:#6b8072"><a href="#011853" label="[01:18:53]">&lt;muurkha&gt;</a></span><span class="message">aggi: Lattice FPGAs that can run SeRV but not PicoRV32 sell for US$3</span></div><div class="line" id="011857"><span class="nick" style="color:#6b8072"><a href="#011857" label="[01:18:57]">&lt;muurkha&gt;</a></span><span class="message">on Digi-Key</span></div><div class="line" id="011900"><span class="nick" style="color:#6b8072"><a href="#011900" label="[01:19:00]">&lt;muurkha&gt;</a></span><span class="message">quantity 1</span></div><div class="line" id="012024"><span class="nick" style="color:#8dd3c7"><a href="#012024" label="[01:20:24]">&lt;aggi&gt;</a></span><span class="message">anyway, this is the lower bar currently: the possibiity to move my entire development setup onto such a raspi zero 1.3 type hardware</span></div><div class="line" id="012047"><span class="nick" style="color:#8dd3c7"><a href="#012047" label="[01:20:47]">&lt;aggi&gt;</a></span><span class="message">and retain the 100% from source workflow, with tcc-toolchain there</span></div><div class="line" id="012117"><span class="nick" style="color:#389600"><a href="#012117" label="[01:21:17]">&lt;oriansj&gt;</a></span><span class="message">well let us assume $20K per 300mm wafer, if our chips are 1mm square; we can make 70,685 of them. and even if half are dead, that is still less than $1 per</span></div><div class="line" id="012139"><span class="nick" style="color:#8dd3c7"><a href="#012139" label="[01:21:39]">&lt;aggi&gt;</a></span><span class="message">and i had somehow given up hope for bridgin the bootstrapping gap downwards (both hardware and scaled-down software)</span></div><div class="line" id="012210"><span class="nick" style="color:#8dd3c7"><a href="#012210" label="[01:22:10]">&lt;aggi&gt;</a></span><span class="message">from gigatron ttl there is no way forward, and from such a raspi type system there is no way back downwards</span></div><div class="line" id="012212"><span class="nick" style="color:#6b8072"><a href="#012212" label="[01:22:12]">&lt;muurkha&gt;</a></span><span class="message">hmm, if they're charging you US$17000 for a 10mm × 10mm block, it seems unlikely that an entire wafer will cost you only US$20k</span></div><div class="line" id="012213"><span class="nick" style="color:#8dd3c7"><a href="#012213" label="[01:22:13]">&lt;aggi&gt;</a></span><span class="message">simplified speaking</span></div><div class="line" id="012246"><span class="nick" style="color:#389600"><a href="#012246" label="[01:22:46]">&lt;oriansj&gt;</a></span><span class="message">muurkha: the $17K was for the whole 300mm wafer</span></div><div class="line" id="012255"><span class="nick" style="color:#8dd3c7"><a href="#012255" label="[01:22:55]">&lt;aggi&gt;</a></span><span class="message">in the middle in between a gigatron ttl type system and a raspi, there is some ia32 soc options... which are expensive</span></div><div class="line" id="012300"><span class="nick" style="color:#6b8072"><a href="#012300" label="[01:23:00]">&lt;muurkha&gt;</a></span><span class="message">ohhh</span></div><div class="line" id="012308"><span class="nick" style="color:#6b8072"><a href="#012308" label="[01:23:08]">&lt;muurkha&gt;</a></span><span class="message">thanks! I totally misunderstood that</span></div><div class="line" id="012358"><span class="nick" style="color:#8dd3c7"><a href="#012358" label="[01:23:58]">&lt;aggi&gt;</a></span><span class="message">did extensive research for a while, down to z80/gigatron etc... there's no way back up</span></div><div class="line" id="012402"><span class="nick" style="color:#6b8072"><a href="#012402" label="[01:24:02]">&lt;muurkha&gt;</a></span><span class="message">I don't think you can saw the wafer into 1mm² pieces in practice, which is why the lower limit was 3mm² from the CMP vendor I was looking at 12 years ago</span></div><div class="line" id="012423"><span class="nick" style="color:#6b8072"><a href="#012423" label="[01:24:23]">&lt;muurkha&gt;</a></span><span class="message">aggi: take a look at SeRV, pineapple one, and picorv32</span></div><div class="line" id="012443"><span class="nick" style="color:#8dd3c7"><a href="#012443" label="[01:24:43]">&lt;aggi&gt;</a></span><span class="message">muurkha: i will</span></div><div class="line" id="012510"><span class="nick" style="color:#389600"><a href="#012510" label="[01:25:10]">&lt;oriansj&gt;</a></span><span class="message">aggi: well expensive is relative and if getting $100 of FPGA to someone willing to do development which helps move the bootstrap forward seems cheap to me</span></div><div class="line" id="012756"><span class="nick" style="color:#6b8072"><a href="#012756" label="[01:27:56]">&lt;muurkha&gt;</a></span><span class="message">aggi: also you might be interested in <a rel="nofollow" href="https://dmitry.gr/?r=05.Projects&amp;proj=07.%20Linux%20on%208bit">https://dmitry.gr/?r=05.Projects&amp;proj=07.%20Linux%20on%208bit</a>  as a way back up</span></div><div class="line" id="012818"><span class="nick" style="color:#6b8072"><a href="#012818" label="[01:28:18]">&lt;muurkha&gt;</a></span><span class="message">though an AVR is a bit faster than a Z80 or probably a Gigatron</span></div><div class="line" id="012854"><span class="nick" style="color:#8dd3c7"><a href="#012854" label="[01:28:54]">&lt;aggi&gt;</a></span><span class="message">atmega are closed source</span></div><div class="line" id="012857"><span class="nick" style="color:#8dd3c7"><a href="#012857" label="[01:28:57]">&lt;aggi&gt;</a></span><span class="message">aren't they?</span></div><div class="line" id="012911"><span class="nick" style="color:#6b8072"><a href="#012911" label="[01:29:11]">&lt;muurkha&gt;</a></span><span class="message">yes</span></div><div class="line" id="012930"><span class="nick" style="color:#8dd3c7"><a href="#012930" label="[01:29:30]">&lt;aggi&gt;</a></span><span class="message">and as far as a clean vt100 was concerned, geoff's vt100 (and another fork) seemed appealing</span></div><div class="line" id="012931"><span class="nick" style="color:#6b8072"><a href="#012931" label="[01:29:31]">&lt;muurkha&gt;</a></span><span class="message">I mean emulating a 32-bit CPU on an 8-bit one</span></div><div class="line" id="012942"><span class="nick" style="color:#8dd3c7"><a href="#012942" label="[01:29:42]">&lt;aggi&gt;</a></span><span class="message">although those too utilize closed-source microchip or some stm32</span></div><div class="line" id="012954"><span class="nick" style="color:#6b8072"><a href="#012954" label="[01:29:54]">&lt;muurkha&gt;</a></span><span class="message">you could reasonably claim a Z80 was emulating an 8-bit CPU on a 4-bit one, and that SeRV is emulating a 32-bit CPU on a 1-bit one</span></div><div class="line" id="013013"><span class="nick" style="color:#8dd3c7"><a href="#013013" label="[01:30:13]">&lt;aggi&gt;</a></span><span class="message">muurkha: i did read a DEC VAC 32bit system already could process 128bit general purpose</span></div><div class="line" id="013021"><span class="nick" style="color:#8dd3c7"><a href="#013021" label="[01:30:21]">&lt;aggi&gt;</a></span><span class="message">a z80 got 4bit ALUs iirc</span></div><div class="line" id="013024"><span class="nick" style="color:#6b8072"><a href="#013024" label="[01:30:24]">&lt;muurkha&gt;</a></span><span class="message">right</span></div><div class="line" id="013029"><span class="nick" style="color:#8dd3c7"><a href="#013029" label="[01:30:29]">&lt;aggi&gt;</a></span><span class="message">and got a 16bit address bus regardless</span></div><div class="line" id="013033"><span class="nick" style="color:#6b8072"><a href="#013033" label="[01:30:33]">&lt;muurkha&gt;</a></span><span class="message">yup</span></div><div class="line" id="013046"><span class="nick" style="color:#6b8072"><a href="#013046" label="[01:30:46]">&lt;muurkha&gt;</a></span><span class="message">not sure what you mean about &quot;process 128bit&quot;</span></div><div class="line" id="013051"><span class="nick" style="color:#2e2a4a"><a href="#013051" label="[01:30:51]">&lt;stikonas&gt;</a></span><span class="message">oriansj: so I think the problem was that there was no guarantee that scratch area that I &quot;malloced&quot; would have zeroes. Can be fixed by adding an overflow check</span></div><div class="line" id="013103"><span class="nick" style="color:#2e2a4a"><a href="#013103" label="[01:31:03]">&lt;stikonas&gt;</a></span><span class="message">I think on POSIX we had it initialized to zero</span></div><div class="line" id="013123"><span class="nick" style="color:#8dd3c7"><a href="#013123" label="[01:31:23]">&lt;aggi&gt;</a></span><span class="message">muurkha: such as xorshift on int128 ... iirc DEC VAC could do it, most recent x86_64 couldn't</span></div><div class="line" id="013249"><span class="nick" style="color:#6b8072"><a href="#013249" label="[01:32:49]">&lt;muurkha&gt;</a></span><span class="message">I never learned enough VAX assembly language to know what it was capable of, but remember the VAX was heavily microcoded</span></div><div class="line" id="013318"><span class="nick" style="color:#6b8072"><a href="#013318" label="[01:33:18]">&lt;muurkha&gt;</a></span><span class="message">x86_64 can copy megabytes of data with a single rep movsb instruction</span></div><div class="line" id="013330"><span class="nick" style="color:#6b8072"><a href="#013330" label="[01:33:30]">&lt;muurkha&gt;</a></span><span class="message">but that doesn't tell you anything interesting about its efficiency</span></div><div class="line" id="013420"><span class="nick" style="color:#6b8072"><a href="#013420" label="[01:34:20]">&lt;muurkha&gt;</a></span><span class="message">stikonas: POSIX malloc isn't required to zero memory it allocates, but often it happens to do so.  sbrk() does zero the newly created memory</span></div><div class="line" id="013532"><span class="nick" style="color:#2e2a4a"><a href="#013532" label="[01:35:32]">&lt;stikonas&gt;</a></span><span class="message">muurkha: well, hex2 on POSIX uses unreserved memory at the end of executable that is zeroed</span></div><div class="line" id="013553"><span class="nick" style="color:#2e2a4a"><a href="#013553" label="[01:35:53]">&lt;stikonas&gt;</a></span><span class="message">anyway, I have the fix now</span></div><div class="line" id="013612"><span class="nick" style="color:#389600"><a href="#013612" label="[01:36:12]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well sbrk() doesn't ensure the memory is zero'd but kernels that don't zero leak secrets from one process to another.</span></div><div class="line" id="013625"><span class="nick" style="color:#6b8072"><a href="#013625" label="[01:36:25]">&lt;muurkha&gt;</a></span><span class="message">oh, thanks for the correction</span></div><div class="line" id="013632"><span class="nick" style="color:#2e2a4a"><a href="#013632" label="[01:36:32]">&lt;stikonas&gt;</a></span><span class="message">spotted another small issue, but I think I'll ignore it (on UEFI when we open existing file for writing it does not get truncated)</span></div><div class="line" id="013635"><span class="nick" style="color:#6b8072"><a href="#013635" label="[01:36:35]">&lt;muurkha&gt;</a></span><span class="message">stikonas: thank you also for the correction</span></div><div class="line" id="013721"><span class="nick" style="color:#2e2a4a"><a href="#013721" label="[01:37:21]">&lt;stikonas&gt;</a></span><span class="message">I think that's why sbrk usually zeroes it when first accessing that memory but if you lower sbrk and increase it again it might not be zeroed</span></div><div class="line" id="013920"><span class="nick" style="color:#389600"><a href="#013920" label="[01:39:20]">&lt;oriansj&gt;</a></span><span class="message">also libresilicon might give us a route to cheap 500nm</span></div><div class="line" id="013942"><span class="nick" style="color:#389600"><a href="#013942" label="[01:39:42]">&lt;oriansj&gt;</a></span><span class="message">like $100 per wafer with mask costs cheap</span></div><div class="line" id="014629"><span class="nick" style="color:#389600"><a href="#014629" label="[01:46:29]">&lt;oriansj&gt;</a></span><span class="message">which is more than advanced enough to do 64bit processors 1GB sticks of ECC RAM</span></div><div class="line" id="014752"><span class="nick" style="color:#389600"><a href="#014752" label="[01:47:52]">&lt;oriansj&gt;</a></span><span class="message">not to mention simpler chips for things such as controlling hard drives or something like Gigabyte's I-RAM</span></div><div class="line" id="014947"><span class="nick" style="color:#389600"><a href="#014947" label="[01:49:47]">&lt;oriansj&gt;</a></span><span class="message">but we need to find people who are interested in doing hardware and porting stage0 to those targets</span></div><div class="line" id="015322"><span class="nick" style="color:#8dd3c7"><a href="#015322" label="[01:53:22]">&lt;aggi&gt;</a></span><span class="message">j-core.org made considerable progress,... however, mentioned it already, when i see Xilinx or Altera in action with their software tooling (and who knows what else)</span></div><div class="line" id="015431"><span class="nick" style="color:#8dd3c7"><a href="#015431" label="[01:54:31]">&lt;aggi&gt;</a></span><span class="message">haven't got a full oversight, over what's possible with free software in this realm (ghdl, yosis, etc.)</span></div><div class="line" id="015456"><span class="nick" style="color:#8dd3c7"><a href="#015456" label="[01:54:56]">&lt;aggi&gt;</a></span><span class="message">and even, some weeks ago, i decided to blacklist various software which violated acceptance criteria of my c-only toolchain profile</span></div><div class="line" id="015504"><span class="nick" style="color:#8dd3c7"><a href="#015504" label="[01:55:04]">&lt;aggi&gt;</a></span><span class="message">since then, GTK is gone... just saying</span></div><div class="line" id="015534"><span class="nick" style="color:#8dd3c7"><a href="#015534" label="[01:55:34]">&lt;aggi&gt;</a></span><span class="message">that's why, the gigatron is appealing, because, it can be soldered onto a breadboard, the digital circuitry designed with pencil and paper</span></div><div class="line" id="015538"><span class="nick" style="color:#389600"><a href="#015538" label="[01:55:38]">&lt;oriansj&gt;</a></span><span class="message">aggi: Icestorm is the biggest move forward on FPGAs</span></div><div class="line" id="015558"><span class="nick" style="color:#6b8072"><a href="#015558" label="[01:55:58]">&lt;muurkha&gt;</a></span><span class="message">is your concern with C++ related to not being able to bootstrap GCC, aggi, or is it a question of RAM usage or compile time?</span></div><div class="line" id="015631"><span class="nick" style="color:#8dd3c7"><a href="#015631" label="[01:56:31]">&lt;aggi&gt;</a></span><span class="message">well, talking about this, got me banned in various channels recently</span></div><div class="line" id="015640"><span class="nick" style="color:#6b8072"><a href="#015640" label="[01:56:40]">&lt;muurkha&gt;</a></span><span class="message">goodness!</span></div><div class="line" id="015654"><span class="nick" style="color:#8dd3c7"><a href="#015654" label="[01:56:54]">&lt;aggi&gt;</a></span><span class="message">long story short, i consider the entire GNU toolchain wrecked (llvm isn't an alternative)</span></div><div class="line" id="015706"><span class="nick" style="color:#6b8072"><a href="#015706" label="[01:57:06]">&lt;muurkha&gt;</a></span><span class="message">oh, that doesn't sound so unreasonable</span></div><div class="line" id="015721"><span class="nick" style="color:#8dd3c7"><a href="#015721" label="[01:57:21]">&lt;aggi&gt;</a></span><span class="message">too i consider most of the buildsystem (makefiles, autotools etc) wrecked, and there is nasty dependency graphs build up against c++</span></div><div class="line" id="015732"><span class="nick" style="color:#8dd3c7"><a href="#015732" label="[01:57:32]">&lt;aggi&gt;</a></span><span class="message">which ... makes it worse, much worse, that much... GTK gone</span></div><div class="line" id="015742"><span class="nick" style="color:#6b8072"><a href="#015742" label="[01:57:42]">&lt;muurkha&gt;</a></span><span class="message">you want something you can understand?  or that isn't politically co-opted by Microsoft or something?</span></div><div class="line" id="015814"><span class="nick" style="color:#8dd3c7"><a href="#015814" label="[01:58:14]">&lt;aggi&gt;</a></span><span class="message">well, with Micro-Soft, i consider the Altair BASIC intersting, that's it what i wanted to say about them</span></div><div class="line" id="015835"><span class="nick" style="color:#8dd3c7"><a href="#015835" label="[01:58:35]">&lt;aggi&gt;</a></span><span class="message">meaning, this is their product portfolio from late 1970s</span></div><div class="line" id="015837"><span class="nick" style="color:#6b8072"><a href="#015837" label="[01:58:37]">&lt;muurkha&gt;</a></span><span class="message">GTK doesn't depend on C++ AFAIK</span></div><div class="line" id="015854"><span class="nick" style="color:#8dd3c7"><a href="#015854" label="[01:58:54]">&lt;aggi&gt;</a></span><span class="message">muurkha: wrong, it does... unicode, harfbuzz/pango/... this</span></div><div class="line" id="015909"><span class="nick" style="color:#6b8072"><a href="#015909" label="[01:59:09]">&lt;muurkha&gt;</a></span><span class="message">I mean that's why they wrote their own object system in C, right?  to avoid C++</span></div><div class="line" id="015917"><span class="nick" style="color:#6b8072"><a href="#015917" label="[01:59:17]">&lt;muurkha&gt;</a></span><span class="message">harfbuzz/pango maybe</span></div><div class="line" id="015929"><span class="nick" style="color:#389600"><a href="#015929" label="[01:59:29]">&lt;oriansj&gt;</a></span><span class="message">what about a GUI toolkit like FLTK or QT; how do you feel about them?</span></div><div class="line" id="015943"><span class="nick" style="color:#6b8072"><a href="#015943" label="[01:59:43]">&lt;muurkha&gt;</a></span><span class="message">Qt is all C++ all the way</span></div><div class="line" id="015951"><span class="nick" style="color:#8dd3c7"><a href="#015951" label="[01:59:51]">&lt;aggi&gt;</a></span><span class="message">GTK/GNOME are heavily locked against harfbuzz/c++... another one written in c++ was gperf...</span></div><div class="line" id="020003"><span class="nick" style="color:#8dd3c7"><a href="#020003" label="[02:00:03]">&lt;aggi&gt;</a></span><span class="message">it's a complicated dependency graph</span></div><div class="line" id="020015"><span class="nick" style="color:#8dd3c7"><a href="#020015" label="[02:00:15]">&lt;aggi&gt;</a></span><span class="message">anyway, that's not the worst part, since motif still exists, if need be</span></div><div class="line" id="020035"><span class="nick" style="color:#8dd3c7"><a href="#020035" label="[02:00:35]">&lt;aggi&gt;</a></span><span class="message">when GNU GCC switched to c++, gcc-4.8, you know it, that's crossing a red line imo</span></div><div class="line" id="020101"><span class="nick" style="color:#389600"><a href="#020101" label="[02:01:01]">&lt;oriansj&gt;</a></span><span class="message">console only lifestyle isn't a bad choice all things considered</span></div><div class="line" id="020102"><span class="nick" style="color:#8dd3c7"><a href="#020102" label="[02:01:02]">&lt;aggi&gt;</a></span><span class="message">the C11/__thread dirt inside elfutils... cannot be digested by tcc either...</span></div><div class="line" id="020123"><span class="nick" style="color:#8dd3c7"><a href="#020123" label="[02:01:23]">&lt;aggi&gt;</a></span><span class="message">oriansj: even then, to cleanup the profile again, was almost 1year of work</span></div><div class="line" id="020132"><span class="nick" style="color:#8dd3c7"><a href="#020132" label="[02:01:32]">&lt;aggi&gt;</a></span><span class="message">and it still doesn't fully pass with tcc compiler</span></div><div class="line" id="020135"><span class="nick" style="color:#8dd3c7"><a href="#020135" label="[02:01:35]">&lt;aggi&gt;</a></span><span class="message">gcc-4.7 only</span></div><div class="line" id="020146"><span class="nick" style="color:#8dd3c7"><a href="#020146" label="[02:01:46]">&lt;aggi&gt;</a></span><span class="message">not to mention some stories surrounding linux kernel</span></div><div class="line" id="020148"><span class="nick" style="color:#8dd3c7"><a href="#020148" label="[02:01:48]">&lt;aggi&gt;</a></span><span class="message">too much</span></div><div class="line" id="020238"><span class="nick" style="color:#389600"><a href="#020238" label="[02:02:38]">&lt;oriansj&gt;</a></span><span class="message">of course; personal preferences are just that. What you personally feel fits you best. We respect those choices here</span></div><div class="line" id="020307"><span class="nick" style="color:#8dd3c7"><a href="#020307" label="[02:03:07]">&lt;aggi&gt;</a></span><span class="message">i do respect c++ and related competence, it is me who was locked-out, technically, and poltically too</span></div><div class="line" id="020308"><span class="nick" style="color:#2e2a4a"><a href="#020308" label="[02:03:08]">&lt;stikonas&gt;</a></span><span class="message">well, personally I think that C++ is good for GUI since GUI is all about objects but then again it's my personal opinion</span></div><div class="line" id="020412"><span class="nick" style="color:#389600"><a href="#020412" label="[02:04:12]">&lt;oriansj&gt;</a></span><span class="message">but I am certain we can find a great deal of common ground on the lower level bootstrap bits</span></div><div class="line" id="020514"><span class="nick" style="color:#389600"><a href="#020514" label="[02:05:14]">&lt;oriansj&gt;</a></span><span class="message">and getting more platforms supported up to TCC really would be awesome</span></div><div class="line" id="020630"><span class="nick" style="color:#2e2a4a"><a href="#020630" label="[02:06:30]">&lt;stikonas&gt;</a></span><span class="message">yes, tcc seems to be quite essential to bootstrapping. Fairly capable compiler but reasonably easy to build</span></div><div class="line" id="020654"><span class="nick" style="color:#8dd3c7"><a href="#020654" label="[02:06:54]">&lt;aggi&gt;</a></span><span class="message">i hope tcc won't be overloaded with features and extensions, which is what contributed to the GNU toolchain and buildystem wreckage</span></div><div class="line" id="020807"><span class="nick" style="color:#389600"><a href="#020807" label="[02:08:07]">&lt;oriansj&gt;</a></span><span class="message">aggi: well, if they go insane we can always pick up the pieces and make our own version which we can bootstrap. We have done it before and we can do it again.</span></div><div class="line" id="020830"><span class="nick" style="color:#8dd3c7"><a href="#020830" label="[02:08:30]">&lt;aggi&gt;</a></span><span class="message">tcc can compile/link more than 99% of the builds from the latest gentoo tree i picked, which was a total of ~700 (with python, 600 without)</span></div><div class="line" id="020913"><span class="nick" style="color:#8dd3c7"><a href="#020913" label="[02:09:13]">&lt;aggi&gt;</a></span><span class="message">i was still using utilities from binutils, and want to test elfutils (which i need to rewrite the __thread tls implementation for to compile with tcc)</span></div><div class="line" id="021027"><span class="nick" style="color:#8dd3c7"><a href="#021027" label="[02:10:27]">&lt;aggi&gt;</a></span><span class="message">this is what remains to do, worst blockers: linux kernel + tcc, some aarch32 asm inside musl-libc, the elfutils one</span></div><div class="line" id="021053"><span class="nick" style="color:#8dd3c7"><a href="#021053" label="[02:10:53]">&lt;aggi&gt;</a></span><span class="message">a review of toybox (busybox fork) to ship some parts... iproute2 package for example approached a state close to total wreckage</span></div><div class="line" id="021104"><span class="nick" style="color:#8dd3c7"><a href="#021104" label="[02:11:04]">&lt;aggi&gt;</a></span><span class="message">currently rolled back to an old and patched version of iproute2</span></div><div class="line" id="021107"><span class="nick" style="color:#8dd3c7"><a href="#021107" label="[02:11:07]">&lt;aggi&gt;</a></span><span class="message">it's a long list</span></div><div class="line" id="021146"><span class="nick" style="color:#8dd3c7"><a href="#021146" label="[02:11:46]">&lt;aggi&gt;</a></span><span class="message">the, with python gone, i'll have to re-implement the package-management for the tcc-toolchain distribution</span></div><div class="line" id="021149"><span class="nick" style="color:#389600"><a href="#021149" label="[02:11:49]">&lt;oriansj&gt;</a></span><span class="message">aggi: I'm sure some people here will find it interesting.</span></div><div class="line" id="021238"><span class="nick" style="color:#8dd3c7"><a href="#021238" label="[02:12:38]">&lt;aggi&gt;</a></span><span class="message">well, i do not intend to lock out GNU gcc/binutils... those already passed tcc too on aarch32</span></div><div class="line" id="021256"><span class="nick" style="color:#8dd3c7"><a href="#021256" label="[02:12:56]">&lt;aggi&gt;</a></span><span class="message">however, i aboslutely do not want to depend on the GNU toolchain anymore</span></div><div class="line" id="021315"><span class="nick" style="color:#8dd3c7"><a href="#021315" label="[02:13:15]">&lt;aggi&gt;</a></span><span class="message">too i want to get rid of the autotools fun</span></div><div class="line" id="021319"><span class="nick" style="color:#389600"><a href="#021319" label="[02:13:19]">&lt;oriansj&gt;</a></span><span class="message">xbps is a C program if I remember correctly</span></div><div class="line" id="021336"><span class="nick" style="color:#8dd3c7"><a href="#021336" label="[02:13:36]">&lt;aggi&gt;</a></span><span class="message">void package manager? yes... this is one candidate</span></div><div class="line" id="021351"><span class="nick" style="color:#8dd3c7"><a href="#021351" label="[02:13:51]">&lt;aggi&gt;</a></span><span class="message">another one is #suckless style package management, slpm</span></div><div class="line" id="021356"><span class="nick" style="color:#8dd3c7"><a href="#021356" label="[02:13:56]">&lt;aggi&gt;</a></span><span class="message">which is written in posix shell</span></div><div class="line" id="021417"><span class="nick" style="color:#389600"><a href="#021417" label="[02:14:17]">&lt;oriansj&gt;</a></span><span class="message">aggi: would a package manager written in scheme be valid?</span></div><div class="line" id="021456"><span class="nick" style="color:#8dd3c7"><a href="#021456" label="[02:14:56]">&lt;aggi&gt;</a></span><span class="message">oriansj: i only skimmed quickly over the Guix one iirc... and at a first glimpse wasn't convinced</span></div><div class="line" id="021517"><span class="nick" style="color:#8dd3c7"><a href="#021517" label="[02:15:17]">&lt;aggi&gt;</a></span><span class="message">simple reason being, lisp/scheme isn't a language i programmed with</span></div><div class="line" id="021526"><span class="nick" style="color:#8dd3c7"><a href="#021526" label="[02:15:26]">&lt;aggi&gt;</a></span><span class="message">and given my experience with typical GNU software....</span></div><div class="line" id="021539"><span class="nick" style="color:#389600"><a href="#021539" label="[02:15:39]">&lt;oriansj&gt;</a></span><span class="message">aggi: perfectly justified</span></div><div class="line" id="021616"><span class="nick" style="color:#2e2a4a"><a href="#021616" label="[02:16:16]">&lt;stikonas&gt;</a></span><span class="message">yes, xbps is pure C, we use it in live-bootstrap</span></div><div class="line" id="021714"><span class="nick" style="color:#2e2a4a"><a href="#021714" label="[02:17:14]">&lt;stikonas&gt;</a></span><span class="message">but we mostly use it as slightly smarter tarball</span></div><div class="line" id="021736"><span class="nick" style="color:#8dd3c7"><a href="#021736" label="[02:17:36]">&lt;aggi&gt;</a></span><span class="message">next on my list is linux kernel, currently v5.10, which i already patched to avoid C11 _Generic macro clutter (gcc47 doesn't eat this)</span></div><div class="line" id="021800"><span class="nick" style="color:#8dd3c7"><a href="#021800" label="[02:18:00]">&lt;aggi&gt;</a></span><span class="message">and linux kernel bumped compiler version requirements, AGAIN, since then</span></div><div class="line" id="021808"><span class="nick" style="color:#8dd3c7"><a href="#021808" label="[02:18:08]">&lt;aggi&gt;</a></span><span class="message">who knows what they did since then...</span></div><div class="line" id="021858"><span class="nick" style="color:#2e2a4a"><a href="#021858" label="[02:18:58]">&lt;stikonas&gt;</a></span><span class="message">well, fossy built 4.9.10 for similar reasons</span></div><div class="line" id="021916"><span class="nick" style="color:#2e2a4a"><a href="#021916" label="[02:19:16]">&lt;stikonas&gt;</a></span><span class="message">but then we are using even older GCC there</span></div><div class="line" id="021934"><span class="nick" style="color:#8dd3c7"><a href="#021934" label="[02:19:34]">&lt;aggi&gt;</a></span><span class="message">i did need linux-5.10, because of aarch64 systems i got here</span></div><div class="line" id="021953"><span class="nick" style="color:#8dd3c7"><a href="#021953" label="[02:19:53]">&lt;aggi&gt;</a></span><span class="message">another story, missing aarch64 support... and armv9 already announced, they would drop aarch32 compatibility for userspace</span></div><div class="line" id="022007"><span class="nick" style="color:#8dd3c7"><a href="#022007" label="[02:20:07]">&lt;aggi&gt;</a></span><span class="message">that's the short version, of the story, surrounding linux kernel</span></div><div class="line" id="022108"><span class="nick" style="color:#389600"><a href="#022108" label="[02:21:08]">&lt;oriansj&gt;</a></span><span class="message">honestly it is familiar to what we have seen</span></div><div class="line" id="022111"><span class="nick" style="color:#8dd3c7"><a href="#022111" label="[02:21:11]">&lt;aggi&gt;</a></span><span class="message">and another reason, i want to scale down, to aarch32, which kernel/compiler etc. exist for, and tcc should be fast enough, even on a raspi zero 1.</span></div><div class="line" id="022113"><span class="nick" style="color:#8dd3c7"><a href="#022113" label="[02:21:13]">&lt;aggi&gt;</a></span><span class="message">1.3</span></div><div class="line" id="022259"><span class="nick" style="color:#8dd3c7"><a href="#022259" label="[02:22:59]">&lt;aggi&gt;</a></span><span class="message">scaling down software requirements at that frontline too opens new opportunities, for opensource hardware / fpga deployments, which typically are a little more limited</span></div><div class="line" id="022338"><span class="nick" style="color:#6d2462"><a href="#022338" label="[02:23:38]">*</a></span><span class="message">aggi shuts up and hacks now</span></div><div class="line" id="022357"><span class="nick" style="color:#389600"><a href="#022357" label="[02:23:57]">&lt;oriansj&gt;</a></span><span class="message">aggi: sounds like good fun to me</span></div><div class="line" id="022549"><span class="nick" style="color:#389600"><a href="#022549" label="[02:25:49]">&lt;oriansj&gt;</a></span><span class="message">please continue to share your work and progress; I think we can help each other ^_^</span></div><div class="line" id="022926"><span class="nick" style="color:#8dd3c7"><a href="#022926" label="[02:29:26]">&lt;aggi&gt;</a></span><span class="message">i am not willing to nor cannot git-push to micros~1 github or anywhere else, without appropriate contracting</span></div><div class="line" id="023158"><span class="nick" style="color:#389600"><a href="#023158" label="[02:31:58]">&lt;oriansj&gt;</a></span><span class="message">aggi: that is fine</span></div><div class="line" id="023320"><span class="nick" style="color:#389600"><a href="#023320" label="[02:33:20]">&lt;oriansj&gt;</a></span><span class="message">you can do your work anywhere you like</span></div><div class="line" id="023358"><span class="nick" style="color:#8dd3c7"><a href="#023358" label="[02:33:58]">&lt;aggi&gt;</a></span><span class="message">in germany? i can't</span></div><div class="line" id="023425"><span class="nick" style="color:#389600"><a href="#023425" label="[02:34:25]">&lt;oriansj&gt;</a></span><span class="message">aggi: what do you mean?</span></div><div class="line" id="023436"><span class="nick" style="color:#8dd3c7"><a href="#023436" label="[02:34:36]">&lt;aggi&gt;</a></span><span class="message">at least, i am under the impression after more than 15 years of experience... it's not possible anymore</span></div><div class="line" id="023609"><span class="nick" style="color:#389600"><a href="#023609" label="[02:36:09]">&lt;oriansj&gt;</a></span><span class="message">to have a public git repo on a service you trust or run yourself on a server you control?</span></div><div class="line" id="023719"><span class="nick" style="color:#8dd3c7"><a href="#023719" label="[02:37:19]">&lt;aggi&gt;</a></span><span class="message">what would be one year of work of mine be worth to git push without any contracting anywhere?</span></div><div class="line" id="023741"><span class="nick" style="color:#8dd3c7"><a href="#023741" label="[02:37:41]">&lt;aggi&gt;</a></span><span class="message">it's not that i don't want to, i can't.</span></div><div class="line" id="023830"><span class="nick" style="color:#389600"><a href="#023830" label="[02:38:30]">&lt;oriansj&gt;</a></span><span class="message">aggi: what do you mean by contracting in this case as our work is under Free (as in freedom) Software Licenses</span></div><div class="line" id="024003"><span class="nick" style="color:#8dd3c7"><a href="#024003" label="[02:40:03]">&lt;aggi&gt;</a></span><span class="message">oriansj: this means in germany legislation exist, with regards to woring and compensation, and i doubt any typical HR department anywhere would recognise what i do</span></div><div class="line" id="024033"><span class="nick" style="color:#8dd3c7"><a href="#024033" label="[02:40:33]">&lt;aggi&gt;</a></span><span class="message">i mean, not at least telekom management had the intellectual abilities, to comprehend, who left them</span></div><div class="line" id="024042"><span class="nick" style="color:#2e2a4a"><a href="#024042" label="[02:40:42]">&lt;stikonas&gt;</a></span><span class="message">I don't think there is commercial interest in bootstrapping...</span></div><div class="line" id="024104"><span class="nick" style="color:#2e2a4a"><a href="#024104" label="[02:41:04]">&lt;stikonas&gt;</a></span><span class="message">most companies wouldn't care about it</span></div><div class="line" id="024114"><span class="nick" style="color:#8dd3c7"><a href="#024114" label="[02:41:14]">&lt;aggi&gt;</a></span><span class="message">at Deutsche Telekom we started with digital circuit design btw...</span></div><div class="line" id="024116"><span class="nick" style="color:#2e2a4a"><a href="#024116" label="[02:41:16]">&lt;stikonas&gt;</a></span><span class="message">they are happy enough to build in e.g docker container</span></div><div class="line" id="024138"><span class="nick" style="color:#8dd3c7"><a href="#024138" label="[02:41:38]">&lt;aggi&gt;</a></span><span class="message">and mathematics... good luck with this on &quot;labor market&quot;... enough said.</span></div><div class="line" id="024216"><span class="nick" style="color:#8dd3c7"><a href="#024216" label="[02:42:16]">&lt;aggi&gt;</a></span><span class="message">currently, i only try to rescue what can be, which isn't much anymore, after 15 years</span></div><div class="line" id="024233"><span class="nick" style="color:#389600"><a href="#024233" label="[02:42:33]">&lt;oriansj&gt;</a></span><span class="message">aggi: ah, you mean work for hire contracting terms.</span></div><div class="line" id="024241"><span class="nick" style="color:#8dd3c7"><a href="#024241" label="[02:42:41]">&lt;aggi&gt;</a></span><span class="message">and i attribute some particular technical problems with bootstrapping related to this: lack of management</span></div><div class="line" id="024304"><span class="nick" style="color:#2e2a4a"><a href="#024304" label="[02:43:04]">&lt;stikonas&gt;</a></span><span class="message">quite a few people in my team graduated in maths...</span></div><div class="line" id="024316"><span class="nick" style="color:#8dd3c7"><a href="#024316" label="[02:43:16]">&lt;aggi&gt;</a></span><span class="message">oriansj: i mean i am looking back onto missing salary for 15years work already.</span></div><div class="line" id="024428"><span class="nick" style="color:#2e2a4a"><a href="#024428" label="[02:44:28]">&lt;stikonas&gt;</a></span><span class="message">so if you did maths, I don't think you wasted 15 years...</span></div><div class="line" id="024459"><span class="nick" style="color:#8dd3c7"><a href="#024459" label="[02:44:59]">&lt;aggi&gt;</a></span><span class="message">with maths i only recaptured some tiny fun project, some fast crypto cipher for linux kernel</span></div><div class="line" id="024513"><span class="nick" style="color:#8dd3c7"><a href="#024513" label="[02:45:13]">&lt;aggi&gt;</a></span><span class="message">which i did to practice little C</span></div><div class="line" id="024555"><span class="nick" style="color:#8dd3c7"><a href="#024555" label="[02:45:55]">&lt;aggi&gt;</a></span><span class="message">otherwise, the type of maths i did, the place i am currently, how should i say, i am not in the mood to fight with differential equations systems anymore</span></div><div class="line" id="024625"><span class="nick" style="color:#8dd3c7"><a href="#024625" label="[02:46:25]">&lt;aggi&gt;</a></span><span class="message">that's gone...</span></div><div class="line" id="024639"><span class="nick" style="color:#8dd3c7"><a href="#024639" label="[02:46:39]">&lt;aggi&gt;</a></span><span class="message">they don't need this anymore, in germany</span></div><div class="line" id="024650"><span class="nick" style="color:#389600"><a href="#024650" label="[02:46:50]">&lt;oriansj&gt;</a></span><span class="message">aggi: so you view your work as a sunk cost to be monetized</span></div><div class="line" id="024713"><span class="nick" style="color:#8dd3c7"><a href="#024713" label="[02:47:13]">&lt;aggi&gt;</a></span><span class="message">oriansj: i consider the entire industry close to total wreckage, including the related scientific aspects</span></div><div class="line" id="024817"><span class="nick" style="color:#8dd3c7"><a href="#024817" label="[02:48:17]">&lt;aggi&gt;</a></span><span class="message">since there is some missing pieces of &quot;bootstrapping&quot; down below in the realm of, mathematics too for example</span></div><div class="line" id="024827"><span class="nick" style="color:#8dd3c7"><a href="#024827" label="[02:48:27]">&lt;aggi&gt;</a></span><span class="message">remembering, TI89 series calculator s</span></div><div class="line" id="024841"><span class="nick" style="color:#8dd3c7"><a href="#024841" label="[02:48:41]">&lt;aggi&gt;</a></span><span class="message">however, i can't repair this anymore, even if i wanted to</span></div><div class="line" id="024914"><span class="nick" style="color:#8dd3c7"><a href="#024914" label="[02:49:14]">&lt;aggi&gt;</a></span><span class="message">and i doubt, even if, TI wanted to publish schematics and sources, for this old calculator, they couldn't, i think</span></div><div class="line" id="024919"><span class="nick" style="color:#8dd3c7"><a href="#024919" label="[02:49:19]">&lt;aggi&gt;</a></span><span class="message">it's bitrotting somewhere, gone forever</span></div><div class="line" id="024948"><span class="nick" style="color:#2e2a4a"><a href="#024948" label="[02:49:48]">&lt;stikonas&gt;</a></span><span class="message">well, you'll always have some missing piecies in maths</span></div><div class="line" id="025013"><span class="nick" style="color:#2e2a4a"><a href="#025013" label="[02:50:13]">&lt;stikonas&gt;</a></span><span class="message">you can't just start with some axioms and prove that what you have is consistent and complete theory</span></div><div class="line" id="025042"><span class="nick" style="color:#2e2a4a"><a href="#025042" label="[02:50:42]">&lt;stikonas&gt;</a></span><span class="message">all those incompleteness theorems, etc...</span></div><div class="line" id="025131"><span class="nick" style="color:#8dd3c7"><a href="#025131" label="[02:51:31]">&lt;aggi&gt;</a></span><span class="message">another reason why, gigatron ttl is appealing</span></div><div class="line" id="025201"><span class="nick" style="color:#8dd3c7"><a href="#025201" label="[02:52:01]">&lt;aggi&gt;</a></span><span class="message">i am considering to fully disconnect internet</span></div><div class="line" id="025202"><span class="nick" style="color:#389600"><a href="#025202" label="[02:52:02]">&lt;oriansj&gt;</a></span><span class="message">aggi: if you ignore the huge Flash inside, yes</span></div><div class="line" id="025338"><span class="nick" style="color:#389600"><a href="#025338" label="[02:53:38]">&lt;oriansj&gt;</a></span><span class="message">I'm partial to the <a rel="nofollow" href="https://monster6502.com/">https://monster6502.com/</a> </span></div><div class="line" id="025523"><span class="nick" style="color:#8dd3c7"><a href="#025523" label="[02:55:23]">&lt;aggi&gt;</a></span><span class="message">gigatron got an emulator for 6502 too</span></div><div class="line" id="025538"><span class="nick" style="color:#8dd3c7"><a href="#025538" label="[02:55:38]">&lt;aggi&gt;</a></span><span class="message">however, i couldn't study yet it's native assembly language</span></div><div class="line" id="025546"><span class="nick" style="color:#8dd3c7"><a href="#025546" label="[02:55:46]">&lt;aggi&gt;</a></span><span class="message">and then, they got their gigatron control language</span></div><div class="line" id="025653"><span class="nick" style="color:#8dd3c7"><a href="#025653" label="[02:56:53]">&lt;aggi&gt;</a></span><span class="message">anyway, thanks for your time</span></div><div class="line" id="025709"><span class="nick" style="color:#8dd3c7"><a href="#025709" label="[02:57:09]">&lt;aggi&gt;</a></span><span class="message">once the tcc-toolchain distro is in shape, i am willing to publish of cause</span></div><div class="line" id="025842"><span class="nick" style="color:#389600"><a href="#025842" label="[02:58:42]">&lt;oriansj&gt;</a></span><span class="message">aggi: well helping people learn assembly language is certainly something we help people do here.</span></div><div class="line" id="082937"><span class="nick">***</span><span class="message notice">genr8eofl__ is now known as genr8eofl</span></div><div class="line" id="134340"><span class="nick" style="color:#2e2a4a"><a href="#134340" label="[13:43:40]">&lt;stikonas&gt;</a></span><span class="message">the nice thing about position independent code is that hex1 can do its job quite well, there is no need to manually encode absolute addresses like it was done in stage0-posix</span></div><div class="line" id="134422"><span class="nick" style="color:#2e2a4a"><a href="#134422" label="[13:44:22]">&lt;stikonas&gt;</a></span><span class="message">perhaps we should have used them in stage-posix too</span></div><div class="line" id="141435"><span class="nick" style="color:#389600"><a href="#141435" label="[14:14:35]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well x86 makes position independent code a pain but yeah AMD64 is better for bootstrapping than x86 in terms of instructions and registers</span></div><div class="line" id="142628"><span class="nick" style="color:#2e2a4a"><a href="#142628" label="[14:26:28]">&lt;stikonas&gt;</a></span><span class="message">well yeah, I only meant stage0-posix-amd64</span></div><div class="line" id="142630"><span class="nick" style="color:#2e2a4a"><a href="#142630" label="[14:26:30]">&lt;stikonas&gt;</a></span><span class="message">not the others...</span></div><div class="line" id="220527"><span class="nick" style="color:#2e2a4a"><a href="#220527" label="[22:05:27]">&lt;stikonas&gt;</a></span><span class="message">oriansj: another small typo in the comments <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/pull/29">https://github.com/oriansj/bootstrap-seeds/pull/29</a> </span></div><br /></div></body></html>