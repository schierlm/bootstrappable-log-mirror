<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-12-20.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003007"><span class="nick" style="color:#389600"><a href="#003007" label="[00:30:07]">&lt;oriansj&gt;</a></span><span class="message">Christoph: bootstrapping changes can be merged slow or fast depending on the people and the lift required. The but progress is always embraced once it proves itself to be a net benefit</span></div><div class="line" id="003033"><span class="nick" style="color:#389600"><a href="#003033" label="[00:30:33]">&lt;oriansj&gt;</a></span><span class="message">cosinusoidally: thank you.</span></div><div class="line" id="003217"><span class="nick" style="color:#389600"><a href="#003217" label="[00:32:17]">&lt;oriansj&gt;</a></span><span class="message">GoogulatorMobile: well download from zero is relatively rare but local mirror fallbacks might be a good idea; Software heritage links probably are something to consider. (IPFS or gnunet might be interesting future options for ensuring source availability)</span></div><div class="line" id="003247"><span class="nick" style="color:#8dd3c7"><a href="#003247" label="[00:32:47]">&lt;GoogulatorMobile&gt;</a></span><span class="message">It's definitely slower on x86 as well</span></div><div class="line" id="003324"><span class="nick" style="color:#8dd3c7"><a href="#003324" label="[00:33:24]">&lt;GoogulatorMobile&gt;</a></span><span class="message">oriansj: we could also use GitHub as a mirror</span></div><div class="line" id="003355"><span class="nick" style="color:#8dd3c7"><a href="#003355" label="[00:33:55]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&amp; then we're even free to upload recompressed tarballs</span></div><div class="line" id="003441"><span class="nick" style="color:#8dd3c7"><a href="#003441" label="[00:34:41]">&lt;GoogulatorMobile&gt;</a></span><span class="message">i.e. for each project, create a source repo mirror under the LB project on GitHub (like we do for Fiwix)</span></div><div class="line" id="003453"><span class="nick" style="color:#8dd3c7"><a href="#003453" label="[00:34:53]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&amp; then upload tarballs as releases</span></div><div class="line" id="003546"><span class="nick" style="color:#8dd3c7"><a href="#003546" label="[00:35:46]">&lt;GoogulatorMobile&gt;</a></span><span class="message">stikonas: from the messages that get printed during tcc compile, it looks like mescc 0.26 is now two-stage</span></div><div class="line" id="003559"><span class="nick" style="color:#8dd3c7"><a href="#003559" label="[00:35:59]">&lt;GoogulatorMobile&gt;</a></span><span class="message">i.e. it basically compiles everything twice</span></div><div class="line" id="003619"><span class="nick" style="color:#2e2a4a"><a href="#003619" label="[00:36:19]">&lt;stikonas&gt;</a></span><span class="message">that is strange though...</span></div><div class="line" id="003624"><span class="nick" style="color:#2e2a4a"><a href="#003624" label="[00:36:24]">&lt;stikonas&gt;</a></span><span class="message">maybe a bug?</span></div><div class="line" id="003723"><span class="nick" style="color:#2e2a4a"><a href="#003723" label="[00:37:23]">&lt;stikonas&gt;</a></span><span class="message">but in my case it seems much more than 2 times slower or so</span></div><div class="line" id="003727"><span class="nick" style="color:#2e2a4a"><a href="#003727" label="[00:37:27]">&lt;stikonas&gt;</a></span><span class="message">maybe 7...</span></div><div class="line" id="003742"><span class="nick" style="color:#389600"><a href="#003742" label="[00:37:42]">&lt;oriansj&gt;</a></span><span class="message">well using GitHub as an object store as a one of many is a valid option but I wouldn't trust that  Microsoft wouldn't alter any of the tarballs in the future.</span></div><div class="line" id="005759"><span class="nick" style="color:#6b8072"><a href="#005759" label="[00:57:59]">&lt;Googulator&gt;</a></span><span class="message">well, Microsoftness is obviously an issue, but unless they can preimage SHA256, the worst MS or an APT compromising them could do is DoS the bootstrap.</span></div><div class="line" id="005849"><span class="nick" style="color:#6b8072"><a href="#005849" label="[00:58:49]">&lt;Googulator&gt;</a></span><span class="message">(for reference, even MD4 hasn't been successfully preimaged)</span></div><div class="line" id="005854"><span class="nick" style="color:#6b8072"><a href="#005854" label="[00:58:54]">&lt;Googulator&gt;</a></span><span class="message">(at least publicly)</span></div><div class="line" id="010047"><span class="nick" style="color:#6b8072"><a href="#010047" label="[01:00:47]">&lt;Googulator&gt;</a></span><span class="message">BTW, looks like the perf regression was almost entirely from $JOBS not propagating</span></div><div class="line" id="010108"><span class="nick" style="color:#6b8072"><a href="#010108" label="[01:01:08]">&lt;Googulator&gt;</a></span><span class="message">just over 3 hours into the bootstrap (on the Q6600), and it's already in guile</span></div><div class="line" id="010143"><span class="nick" style="color:#6b8072"><a href="#010143" label="[01:01:43]">&lt;Googulator&gt;</a></span><span class="message">fairly close to what I remember pre-simplify</span></div><div class="line" id="010348"><span class="nick" style="color:#6b8072"><a href="#010348" label="[01:03:48]">&lt;Googulator&gt;</a></span><span class="message">(note to others replicating on a Q6600 or similar: this is *with* the 3.6GHz overclock this CPU had back when it was in my gaming PC, expect about 30% perf loss with the default 2.4GHz clock)</span></div><div class="line" id="012037"><span class="nick" style="color:#2e2a4a"><a href="#012037" label="[01:20:37]">&lt;stikonas&gt;</a></span><span class="message">Googulator: ok, so that's good ($JOBS thing), should be easy to fix...</span></div><div class="line" id="012101"><span class="nick" style="color:#6b8072"><a href="#012101" label="[01:21:01]">&lt;Googulator&gt;</a></span><span class="message">The fix is already in my simplify-playground branch, although it needs cleanup</span></div><div class="line" id="012149"><span class="nick" style="color:#6b8072"><a href="#012149" label="[01:21:49]">&lt;Googulator&gt;</a></span><span class="message">(most of the script-generator changes are really irrelevant, what makes it work is the update-jobs imrove step)</span></div><div class="line" id="012155"><span class="nick" style="color:#6b8072"><a href="#012155" label="[01:21:55]">&lt;Googulator&gt;</a></span><span class="message">*improve</span></div><div class="line" id="012338"><span class="nick" style="color:#6b8072"><a href="#012338" label="[01:23:38]">&lt;Googulator&gt;</a></span><span class="message">also, I was thinking of reducing the role of script-generator to just the kaem era, and parsing the manifest directly using helpers.sh once bash is available</span></div><div class="line" id="012416"><span class="nick" style="color:#2e2a4a"><a href="#012416" label="[01:24:16]">&lt;stikonas&gt;</a></span><span class="message">that could work too</span></div><div class="line" id="012428"><span class="nick" style="color:#2e2a4a"><a href="#012428" label="[01:24:28]">&lt;stikonas&gt;</a></span><span class="message">though what is the advantage of doing it this way?</span></div><div class="line" id="012428"><span class="nick" style="color:#6b8072"><a href="#012428" label="[01:24:28]">&lt;Googulator&gt;</a></span><span class="message">&amp; at that point, we can do things like proper runtime redefinition of variables, or multiple manifests</span></div><div class="line" id="012441"><span class="nick" style="color:#6b8072"><a href="#012441" label="[01:24:41]">&lt;Googulator&gt;</a></span><span class="message">and it's generally more robust</span></div><div class="line" id="012553"><span class="nick" style="color:#6b8072"><a href="#012553" label="[01:25:53]">&lt;Googulator&gt;</a></span><span class="message">another thing it makes possible is optional build steps that can be called from terminal once the initial bootstrap is done</span></div><div class="line" id="012611"><span class="nick" style="color:#2e2a4a"><a href="#012611" label="[01:26:11]">&lt;stikonas&gt;</a></span><span class="message">yeah, that is useful...</span></div><div class="line" id="012625"><span class="nick" style="color:#6b8072"><a href="#012625" label="[01:26:25]">&lt;Googulator&gt;</a></span><span class="message">e.g. we could have a guix.manifest describing how to bring up Guix</span></div><div class="line" id="012632"><span class="nick" style="color:#6b8072"><a href="#012632" label="[01:26:32]">&lt;Googulator&gt;</a></span><span class="message">&amp; git.manifest for getting a working Git</span></div><div class="line" id="012637"><span class="nick" style="color:#2e2a4a"><a href="#012637" label="[01:26:37]">&lt;stikonas&gt;</a></span><span class="message">that would be quite hard...</span></div><div class="line" id="012642"><span class="nick" style="color:#2e2a4a"><a href="#012642" label="[01:26:42]">&lt;stikonas&gt;</a></span><span class="message">to bringup guix</span></div><div class="line" id="012647"><span class="nick" style="color:#2e2a4a"><a href="#012647" label="[01:26:47]">&lt;stikonas&gt;</a></span><span class="message">but yes, idea is good</span></div><div class="line" id="012657"><span class="nick" style="color:#2e2a4a"><a href="#012657" label="[01:26:57]">&lt;stikonas&gt;</a></span><span class="message">probably source based distros are the easiest target</span></div><div class="line" id="012716"><span class="nick" style="color:#2e2a4a"><a href="#012716" label="[01:27:16]">&lt;stikonas&gt;</a></span><span class="message">guix needs a lot of hackery to not depend on its bootstrap seeds</span></div><div class="line" id="012720"><span class="nick" style="color:#6b8072"><a href="#012720" label="[01:27:20]">&lt;Googulator&gt;</a></span><span class="message">and then once you get to that first terminal prompt, you can just type &quot;manifest git&quot; to additinally bootstrap Git</span></div><div class="line" id="012755"><span class="nick" style="color:#2e2a4a"><a href="#012755" label="[01:27:55]">&lt;stikonas&gt;</a></span><span class="message">yeah, stuff like git and a few other things might be very useful on baremetal bootstrap</span></div><div class="line" id="012810"><span class="nick" style="color:#6b8072"><a href="#012810" label="[01:28:10]">&lt;Googulator&gt;</a></span><span class="message">also &quot;manifest nano&quot;</span></div><div class="line" id="012819"><span class="nick" style="color:#6b8072"><a href="#012819" label="[01:28:19]">&lt;Googulator&gt;</a></span><span class="message">&amp; then you have a text editor :)</span></div><div class="line" id="013235"><span class="nick" style="color:#6b8072"><a href="#013235" label="[01:32:35]">&lt;Googulator&gt;</a></span><span class="message">having manifest parsing be in Bash would also enable better error handling</span></div><div class="line" id="013431"><span class="nick" style="color:#6b8072"><a href="#013431" label="[01:34:31]">&lt;Googulator&gt;</a></span><span class="message">the &quot;Holy Grail&quot; would indeed be bringing up guix or emerge</span></div><div class="line" id="013435"><span class="nick" style="color:#6b8072"><a href="#013435" label="[01:34:35]">&lt;Googulator&gt;</a></span><span class="message">or something similar</span></div><div class="line" id="013553"><span class="nick" style="color:#2e2a4a"><a href="#013553" label="[01:35:53]">&lt;stikonas&gt;</a></span><span class="message">Googulator: we already have text editor :)</span></div><div class="line" id="013556"><span class="nick" style="color:#2e2a4a"><a href="#013556" label="[01:35:56]">&lt;stikonas&gt;</a></span><span class="message">ed :D</span></div><div class="line" id="013610"><span class="nick" style="color:#2e2a4a"><a href="#013610" label="[01:36:10]">&lt;stikonas&gt;</a></span><span class="message">though I don't really know how to use it</span></div><div class="line" id="013622"><span class="nick" style="color:#6b8072"><a href="#013622" label="[01:36:22]">&lt;Googulator&gt;</a></span><span class="message">I doubt it's a proper interactive build though</span></div><div class="line" id="013626"><span class="nick" style="color:#2e2a4a"><a href="#013626" label="[01:36:26]">&lt;stikonas&gt;</a></span><span class="message">probably not</span></div><div class="line" id="013637"><span class="nick" style="color:#2e2a4a"><a href="#013637" label="[01:36:37]">&lt;stikonas&gt;</a></span><span class="message">and ideally we move to a another bc implemntation</span></div><div class="line" id="013641"><span class="nick" style="color:#2e2a4a"><a href="#013641" label="[01:36:41]">&lt;stikonas&gt;</a></span><span class="message">that does not need ed at all</span></div><div class="line" id="013650"><span class="nick" style="color:#6b8072"><a href="#013650" label="[01:36:50]">&lt;Googulator&gt;</a></span><span class="message">given what our early bash behaves like, I doubt ed is any better</span></div><div class="line" id="013706"><span class="nick" style="color:#80b1d3"><a href="#013706" label="[01:37:06]">&lt;muurkha&gt;</a></span><span class="message">ed is a lot simpler than bash</span></div><div class="line" id="013706"><span class="nick" style="color:#2e2a4a"><a href="#013706" label="[01:37:06]">&lt;stikonas&gt;</a></span><span class="message">Googulator: bash is simply because we don't have required headers at that time</span></div><div class="line" id="013719"><span class="nick" style="color:#2e2a4a"><a href="#013719" label="[01:37:19]">&lt;stikonas&gt;</a></span><span class="message">meslibc can't build interactive bash</span></div><div class="line" id="013719"><span class="nick" style="color:#6b8072"><a href="#013719" label="[01:37:19]">&lt;Googulator&gt;</a></span><span class="message">Gentoo is sadly moving away more and more from bootstrappability, to the point that stages before stage3 aren't even published anymore</span></div><div class="line" id="013735"><span class="nick" style="color:#2e2a4a"><a href="#013735" label="[01:37:35]">&lt;stikonas&gt;</a></span><span class="message">Googulator: those don't matter too much anyway</span></div><div class="line" id="013746"><span class="nick" style="color:#2e2a4a"><a href="#013746" label="[01:37:46]">&lt;stikonas&gt;</a></span><span class="message">they just don't exist, I think stage generation is different these days</span></div><div class="line" id="013750"><span class="nick" style="color:#2e2a4a"><a href="#013750" label="[01:37:50]">&lt;stikonas&gt;</a></span><span class="message">it's not that it's not published</span></div><div class="line" id="013756"><span class="nick" style="color:#2e2a4a"><a href="#013756" label="[01:37:56]">&lt;stikonas&gt;</a></span><span class="message">there are some scripts to bring it up</span></div><div class="line" id="013804"><span class="nick" style="color:#2e2a4a"><a href="#013804" label="[01:38:04]">&lt;stikonas&gt;</a></span><span class="message">I think sam_ mentioned them</span></div><div class="line" id="013829"><span class="nick" style="color:#6b8072"><a href="#013829" label="[01:38:29]">&lt;Googulator&gt;</a></span><span class="message">the early bash is actually worse than your typical &quot;non-interactive&quot; bash - if you build a bash normally without readline, it will still give you some kind of shell if you just go &quot;bash&quot; without any arguments</span></div><div class="line" id="013834"><span class="nick" style="color:#2e2a4a"><a href="#013834" label="[01:38:34]">&lt;stikonas&gt;</a></span><span class="message">but also once emerge is working (even with no packages installed)</span></div><div class="line" id="013839"><span class="nick" style="color:#6b8072"><a href="#013839" label="[01:38:39]">&lt;Googulator&gt;</a></span><span class="message">no line editing, tab-completion, or even prompts</span></div><div class="line" id="013846"><span class="nick" style="color:#6b8072"><a href="#013846" label="[01:38:46]">&lt;Googulator&gt;</a></span><span class="message">but it's usable as a recovery shell</span></div><div class="line" id="013851"><span class="nick" style="color:#6b8072"><a href="#013851" label="[01:38:51]">&lt;Googulator&gt;</a></span><span class="message">ours just goes &quot;exit&quot;</span></div><div class="line" id="013853"><span class="nick" style="color:#2e2a4a"><a href="#013853" label="[01:38:53]">&lt;stikonas&gt;</a></span><span class="message">it should be possible to install other things</span></div><div class="line" id="013915"><span class="nick" style="color:#2e2a4a"><a href="#013915" label="[01:39:15]">&lt;stikonas&gt;</a></span><span class="message">Googulator:  probably depends on defines...</span></div><div class="line" id="013948"><span class="nick" style="color:#2e2a4a"><a href="#013948" label="[01:39:48]">&lt;stikonas&gt;</a></span><span class="message">the same bash 2.05b built later (when musl is available) is interactive</span></div><div class="line" id="013951"><span class="nick" style="color:#6b8072"><a href="#013951" label="[01:39:51]">&lt;Googulator&gt;</a></span><span class="message">AFAIK Gentoo still uses stage1/2 internally</span></div><div class="line" id="014008"><span class="nick" style="color:#6b8072"><a href="#014008" label="[01:40:08]">&lt;Googulator&gt;</a></span><span class="message">stikonas: we only build bash 2.05b once</span></div><div class="line" id="014015"><span class="nick" style="color:#2e2a4a"><a href="#014015" label="[01:40:15]">&lt;stikonas&gt;</a></span><span class="message">right now yes</span></div><div class="line" id="014020"><span class="nick" style="color:#2e2a4a"><a href="#014020" label="[01:40:20]">&lt;stikonas&gt;</a></span><span class="message">but I had it at some point</span></div><div class="line" id="014025"><span class="nick" style="color:#2e2a4a"><a href="#014025" label="[01:40:25]">&lt;stikonas&gt;</a></span><span class="message">(caused some problems on Fiwix though)</span></div><div class="line" id="014037"><span class="nick" style="color:#2e2a4a"><a href="#014037" label="[01:40:37]">&lt;stikonas&gt;</a></span><span class="message">which rickmasters didn't have time to investigate</span></div><div class="line" id="014319"><span class="nick" style="color:#2e2a4a"><a href="#014319" label="[01:43:19]">&lt;stikonas&gt;</a></span><span class="message">Googulator: I think we need to follow this <a rel="nofollow" href="https://wiki.gentoo.org/wiki/Project:Prefix/Manual_Bootstrap">https://wiki.gentoo.org/wiki/Project:Prefix/Manual_Bootstrap</a> </span></div><div class="line" id="014538"><span class="nick" style="color:#2e2a4a"><a href="#014538" label="[01:45:38]">&lt;stikonas&gt;</a></span><span class="message">of course once you get to distro, you can forget not using pregenerated files and stuff like that...</span></div><div class="line" id="014617"><span class="nick" style="color:#2e2a4a"><a href="#014617" label="[01:46:17]">&lt;stikonas&gt;</a></span><span class="message">but theoretically we would alraedy have all the tools to rebuild them</span></div><div class="line" id="014656"><span class="nick" style="color:#6b8072"><a href="#014656" label="[01:46:56]">&lt;Googulator&gt;</a></span><span class="message">yeah, solving auditability there is another challenge</span></div><div class="line" id="014726"><span class="nick" style="color:#2e2a4a"><a href="#014726" label="[01:47:26]">&lt;stikonas&gt;</a></span><span class="message">Googulator: also your separate manifest files thing might be useful for different arches</span></div><div class="line" id="014735"><span class="nick" style="color:#2e2a4a"><a href="#014735" label="[01:47:35]">&lt;stikonas&gt;</a></span><span class="message">e.g. that would allow us to cleanly have slightly different paths</span></div><div class="line" id="014941"><span class="nick" style="color:#2e2a4a"><a href="#014941" label="[01:49:41]">&lt;stikonas&gt;</a></span><span class="message">though I guess we can have it with full manifest like we have now too...</span></div><div class="line" id="014951"><span class="nick" style="color:#2e2a4a"><a href="#014951" label="[01:49:51]">&lt;stikonas&gt;</a></span><span class="message">e.g. there could be x86 manifest that skips mes</span></div><div class="line" id="015015"><span class="nick" style="color:#2e2a4a"><a href="#015015" label="[01:50:15]">&lt;stikonas&gt;</a></span><span class="message">(though I'm not sure what to do with checksums...)</span></div><div class="line" id="015024"><span class="nick" style="color:#2e2a4a"><a href="#015024" label="[01:50:24]">&lt;stikonas&gt;</a></span><span class="message">they might differ in some intermediate steps</span></div><div class="line" id="015108"><span class="nick" style="color:#2e2a4a"><a href="#015108" label="[01:51:08]">&lt;stikonas&gt;</a></span><span class="message">perhaps output checksuming is not scalable...</span></div><div class="line" id="015351"><span class="nick" style="color:#8dd3c7"><a href="#015351" label="[01:53:51]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I'd put the checksums in the manifest itself</span></div><div class="line" id="015942"><span class="nick" style="color:#2e2a4a"><a href="#015942" label="[01:59:42]">&lt;stikonas&gt;</a></span><span class="message">in which case it really makes sense to have pre-helpers.sh and post-helpers.sh manifests</span></div><div class="line" id="015950"><span class="nick" style="color:#2e2a4a"><a href="#015950" label="[01:59:50]">&lt;stikonas&gt;</a></span><span class="message">though hopefully we won't need any more splits</span></div><div class="line" id="020021"><span class="nick" style="color:#2e2a4a"><a href="#020021" label="[02:00:21]">&lt;stikonas&gt;</a></span><span class="message">otherwise we'll just go back to run.sh -&gt; run2.sh -&gt; run3.sh which caused fossy to do that simplification...</span></div><div class="line" id="021253"><span class="nick" style="color:#8dd3c7"><a href="#021253" label="[02:12:53]">&lt;GoogulatorMobile&gt;</a></span><span class="message">It can even be solved with a single manifest</span></div><div class="line" id="021320"><span class="nick" style="color:#8dd3c7"><a href="#021320" label="[02:13:20]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Pre-bash, script-generator copies the checksums to their correct locations for kaem</span></div><div class="line" id="021344"><span class="nick" style="color:#8dd3c7"><a href="#021344" label="[02:13:44]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Post-bash, helpers.sh can read them directly from the manifest</span></div><div class="line" id="021555"><span class="nick" style="color:#6d2462"><a href="#021555" label="[02:15:55]">&lt;sam_&gt;</a></span><span class="message">[00:37:19]  &lt;Googulator&gt; Gentoo is sadly moving away more and more from bootstrappability, to the point that stages before stage3 aren't even published anymore</span></div><div class="line" id="021606"><span class="nick" style="color:#6d2462"><a href="#021606" label="[02:16:06]">&lt;sam_&gt;</a></span><span class="message">no, it's that users kept using them when there's no real point</span></div><div class="line" id="021606"><span class="nick" style="color:#6d2462"><a href="#021606" label="[02:16:06]">&lt;sam_&gt;</a></span><span class="message">yeah, the scripts are all public and such</span></div><div class="line" id="021627"><span class="nick" style="color:#6d2462"><a href="#021627" label="[02:16:27]">&lt;sam_&gt;</a></span><span class="message">catalyst can still do stage1/stage2 and we do that when something has different ABI</span></div><div class="line" id="021632"><span class="nick" style="color:#6d2462"><a href="#021632" label="[02:16:32]">&lt;sam_&gt;</a></span><span class="message">what I really want to do is make prefix have a more auditable bootstrap path</span></div><div class="line" id="022524"><span class="nick" style="color:#6b8072"><a href="#022524" label="[02:25:24]">&lt;Googulator&gt;</a></span><span class="message">How does gentoo even deal with things like Haskell, which has no known bootstrap path?</span></div><div class="line" id="022741"><span class="nick" style="color:#6b8072"><a href="#022741" label="[02:27:41]">&lt;Googulator&gt;</a></span><span class="message">I somehow doubt the stage3 tarball includes a Haskell compiler.</span></div><div class="line" id="022756"><span class="nick" style="color:#6d2462"><a href="#022756" label="[02:27:56]">&lt;sam_&gt;</a></span><span class="message">we take the L with haskell, yes</span></div><div class="line" id="022757"><span class="nick" style="color:#6d2462"><a href="#022757" label="[02:27:57]">&lt;sam_&gt;</a></span><span class="message">which is nothing that's changed ever</span></div><div class="line" id="022804"><span class="nick" style="color:#6d2462"><a href="#022804" label="[02:28:04]">&lt;sam_&gt;</a></span><span class="message">not sure what your point is</span></div><div class="line" id="022815"><span class="nick" style="color:#6d2462"><a href="#022815" label="[02:28:15]">&lt;sam_&gt;</a></span><span class="message">it's not like stage1 ever had it or dealt with that</span></div><div class="line" id="022828"><span class="nick" style="color:#8dd3c7"><a href="#022828" label="[02:28:28]">&lt;GoogulatorMobile&gt;</a></span><span class="message">That's not related to stage1, I'm just asking</span></div><div class="line" id="022836"><span class="nick" style="color:#6d2462"><a href="#022836" label="[02:28:36]">&lt;sam_&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="022859"><span class="nick" style="color:#8dd3c7"><a href="#022859" label="[02:28:59]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Where do the initial binaries of ghc get injected?</span></div><div class="line" id="023157"><span class="nick" style="color:#8dd3c7"><a href="#023157" label="[02:31:57]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Because I was thinking that to bring up a guaranteed-trusted Gentoo, all that's needed is regenerating the boot ISO and the stage3 tarball using the live-bootstrap environment, since the rest is all source... but binaries for e.g. ghc must come from somewhere even in Gentoo, and the stage3 tarball seems too small for that</span></div><div class="line" id="052508"><span class="nick" style="color:#6b8072"><a href="#052508" label="[05:25:08]">&lt;Googulator&gt;</a></span><span class="message">Bare-metal test done, took 7 hours and 40 minutes.</span></div><div class="line" id="052622"><span class="nick" style="color:#6b8072"><a href="#052622" label="[05:26:22]">&lt;Googulator&gt;</a></span><span class="message">It was just a hair over 7 hours before simplify &amp; the 2 mes upgrades - that roughly 40 minute difference is about equal to how long the mes phase took before the 0.26 upgrade</span></div><div class="line" id="052640"><span class="nick" style="color:#6b8072"><a href="#052640" label="[05:26:40]">&lt;Googulator&gt;</a></span><span class="message">Which is consistent with my theory that mescc is doing everything twice</span></div><div class="line" id="103939"><span class="nick" style="color:#234e69"><a href="#103939" label="[10:39:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: in ghc ebuild there is flag to use ghc binary seed or use system compiler</span></div><div class="line" id="104002"><span class="nick" style="color:#234e69"><a href="#104002" label="[10:40:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Sometimes it's not the flag but another ebuild</span></div><div class="line" id="104010"><span class="nick" style="color:#234e69"><a href="#104010" label="[10:40:10]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; E.g. with rust...</span></div><div class="line" id="104016"><span class="nick" style="color:#234e69"><a href="#104016" label="[10:40:16]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Or openjdk...</span></div><div class="line" id="104111"><span class="nick" style="color:#6d2462"><a href="#104111" label="[10:41:11]">&lt;sam_&gt;</a></span><span class="message">what i want to do is introduce binary tagging</span></div><div class="line" id="104122"><span class="nick" style="color:#234e69"><a href="#104122" label="[10:41:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But those can be bootstrapped via extra packages using overlays...</span></div><div class="line" id="104122"><span class="nick" style="color:#6d2462"><a href="#104122" label="[10:41:22]">&lt;sam_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://bugs.gentoo.org/885827">https://bugs.gentoo.org/885827</a> </span></div><div class="line" id="104132"><span class="nick" style="color:#6d2462"><a href="#104132" label="[10:41:32]">&lt;sam_&gt;</a></span><span class="message">to make it easier to say &quot;really, please no binaries&quot;</span></div><div class="line" id="104230"><span class="nick" style="color:#234e69"><a href="#104230" label="[10:42:30]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, makes sense</span></div><div class="line" id="135059"><span class="nick" style="color:#389600"><a href="#135059" label="[13:50:59]">&lt;oriansj&gt;</a></span><span class="message">sam_: sad to hear that gentoo is moving away of bootstrappability</span></div><div class="line" id="135107"><span class="nick" style="color:#6d2462"><a href="#135107" label="[13:51:07]">&lt;sam_&gt;</a></span><span class="message">we're not??</span></div><div class="line" id="135224"><span class="nick" style="color:#389600"><a href="#135224" label="[13:52:24]">&lt;oriansj&gt;</a></span><span class="message">ok, I guess I read that wrong. Need more coffee -_-</span></div><div class="line" id="135244"><span class="nick" style="color:#6d2462"><a href="#135244" label="[13:52:44]">&lt;sam_&gt;</a></span><span class="message">send me some too pls</span></div><div class="line" id="135249"><span class="nick" style="color:#6d2462"><a href="#135249" label="[13:52:49]">&lt;sam_&gt;</a></span><span class="message">but nah i promise it's very important to me</span></div><div class="line" id="135301"><span class="nick" style="color:#6d2462"><a href="#135301" label="[13:53:01]">&lt;sam_&gt;</a></span><span class="message">part of why i'm in here</span></div><div class="line" id="135329"><span class="nick" style="color:#389600"><a href="#135329" label="[13:53:29]">&lt;oriansj&gt;</a></span><span class="message">well yeah, you are here ^_^</span></div><div class="line" id="135433"><span class="nick" style="color:#234e69"><a href="#135433" label="[13:54:33]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; And it's not like building stage1 from live-bootstrap would be any easier than stage 3</span></div><div class="line" id="135440"><span class="nick" style="color:#389600"><a href="#135440" label="[13:54:40]">&lt;oriansj&gt;</a></span><span class="message">and the Haskell problem is definitely going to take a bunch of dedicated work.</span></div><div class="line" id="135735"><span class="nick" style="color:#389600"><a href="#135735" label="[13:57:35]">&lt;oriansj&gt;</a></span><span class="message">to repeat the cycle we only need janneke to write a haskell compiler written in haskell; that I am then responsible for bootstraping that subset of haskell.</span></div><div class="line" id="135831"><span class="nick" style="color:#389600"><a href="#135831" label="[13:58:31]">&lt;oriansj&gt;</a></span><span class="message">^written in haskell^written in scheme that runs on an interpreter written in haskell^</span></div><div class="line" id="135901"><span class="nick" style="color:#6d2462"><a href="#135901" label="[13:59:01]">&lt;sam_&gt;</a></span><span class="message">a big challenge for us is actually even stopping more totally-avoidable haskell deps too</span></div><div class="line" id="135909"><span class="nick" style="color:#6d2462"><a href="#135909" label="[13:59:09]">&lt;sam_&gt;</a></span><span class="message">like pipewire nearly started using pandoc</span></div><div class="line" id="140035"><span class="nick" style="color:#389600"><a href="#140035" label="[14:00:35]">&lt;oriansj&gt;</a></span><span class="message">well, guess Haskell has to be my next project</span></div><div class="line" id="140215"><span class="nick" style="color:#6c3d55"><a href="#140215" label="[14:02:15]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">Is it easier to modify an old version of GHC to use equivalent features in Hugs?</span></div><div class="line" id="140249"><span class="nick" style="color:#6c3d55"><a href="#140249" label="[14:02:49]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">because Hugs seems just as capable as GHC, but the syntax is a bit different</span></div><div class="line" id="142433"><span class="nick" style="color:#d9d9d9"><a href="#142433" label="[14:24:33]">&lt;janneke&gt;</a></span><span class="message">oriansj: hehe</span></div><br /></div></body></html>