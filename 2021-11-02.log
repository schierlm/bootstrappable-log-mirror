<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-11-02.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002314"><span class="nick" style="color:#389600"><a href="#002314" label="[00:23:14]">&lt;zv&gt;</a></span><span class="message">in terms of (volunteer) developer time, where in the project would it best be spent?</span></div><div class="line" id="002425"><span class="nick" style="color:#8dd3c7"><a href="#002425" label="[00:24:25]">&lt;stikonas&gt;</a></span><span class="message">zv: hard to tell, there are a few somewhat different things, and you should pick what sounds fun</span></div><div class="line" id="002524"><span class="nick" style="color:#8dd3c7"><a href="#002524" label="[00:25:24]">&lt;stikonas&gt;</a></span><span class="message">zv: a lot depends on what programming languages you are comfortable with or want to learn</span></div><div class="line" id="002624"><span class="nick" style="color:#8dd3c7"><a href="#002624" label="[00:26:24]">&lt;stikonas&gt;</a></span><span class="message">I guess full source bootstrap of GCC is the biggest project and there are quite a few subprojects in it</span></div><div class="line" id="002632"><span class="nick" style="color:#8dd3c7"><a href="#002632" label="[00:26:32]">&lt;stikonas&gt;</a></span><span class="message">but some people are bootstrapping other languages</span></div><div class="line" id="002945"><span class="nick" style="color:#8dd3c7"><a href="#002945" label="[00:29:45]">&lt;stikonas&gt;</a></span><span class="message">zv: if you are interested in full source bootstrap, then we do have that for x86 but other arches are not working yet, so that's one option</span></div><div class="line" id="003032"><span class="nick" style="color:#2e2a4a"><a href="#003032" label="[00:30:32]">&lt;Hagfish&gt;</a></span><span class="message">and recipes for building distro images after gcc is available?  is that something someone can pick up?</span></div><div class="line" id="003047"><span class="nick" style="color:#8dd3c7"><a href="#003047" label="[00:30:47]">&lt;stikonas&gt;</a></span><span class="message">another thing one can do is improve M2-Planet so that it can build mes a bit easier (now it can only build heavily simplified mes-m2 fork)</span></div><div class="line" id="003109"><span class="nick" style="color:#8dd3c7"><a href="#003109" label="[00:31:09]">&lt;stikonas&gt;</a></span><span class="message">Hagfish (cc zv): sure, one can try bootstrapping distro images</span></div><div class="line" id="003113"><span class="nick" style="color:#8dd3c7"><a href="#003113" label="[00:31:13]">&lt;stikonas&gt;</a></span><span class="message">nobody has looked at that</span></div><div class="line" id="003124"><span class="nick" style="color:#8dd3c7"><a href="#003124" label="[00:31:24]">&lt;stikonas&gt;</a></span><span class="message">or writing some minimal kernel in M2-Planet C subset</span></div><div class="line" id="003137"><span class="nick" style="color:#2e2a4a"><a href="#003137" label="[00:31:37]">&lt;Hagfish&gt;</a></span><span class="message">ah yes, a kernel would be cool</span></div><div class="line" id="003204"><span class="nick" style="color:#8dd3c7"><a href="#003204" label="[00:32:04]">&lt;stikonas&gt;</a></span><span class="message">or bootstrapping autogen (that's an evil task)</span></div><div class="line" id="003227"><span class="nick" style="color:#389600"><a href="#003227" label="[00:32:27]">&lt;zv&gt;</a></span><span class="message">I'd prefer to focus on C, shell, and asm. I have access to less-popular hardware (sparc, riscv, etc.) too, if anyone else needs that.</span></div><div class="line" id="003232"><span class="nick" style="color:#8dd3c7"><a href="#003232" label="[00:32:32]">&lt;stikonas&gt;</a></span><span class="message">actually, we'll probably skip bootstrappin autogen</span></div><div class="line" id="003249"><span class="nick" style="color:#8dd3c7"><a href="#003249" label="[00:32:49]">&lt;stikonas&gt;</a></span><span class="message">zv right now we have no sparc support at all</span></div><div class="line" id="003303"><span class="nick" style="color:#8dd3c7"><a href="#003303" label="[00:33:03]">&lt;stikonas&gt;</a></span><span class="message">so if you want to get involed in low level stuff, you could port stage0-posix to sparc</span></div><div class="line" id="003316"><span class="nick" style="color:#8dd3c7"><a href="#003316" label="[00:33:16]">&lt;stikonas&gt;</a></span><span class="message">that's probably 2 months of work or so</span></div><div class="line" id="003325"><span class="nick" style="color:#8dd3c7"><a href="#003325" label="[00:33:25]">&lt;stikonas&gt;</a></span><span class="message">if you do it in your spare time</span></div><div class="line" id="003337"><span class="nick" style="color:#8dd3c7"><a href="#003337" label="[00:33:37]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet improvements are mostly C</span></div><div class="line" id="003344"><span class="nick" style="color:#389600"><a href="#003344" label="[00:33:44]">&lt;zv&gt;</a></span><span class="message">also ppc32/ppc64. arm. you name it. is there any strong reason to focus on sparc aside from the fact that the T2 and earlier are &quot;open&quot; and available for download to FPGA?</span></div><div class="line" id="003358"><span class="nick" style="color:#389600"><a href="#003358" label="[00:33:58]">&lt;zv&gt;</a></span><span class="message">(opensparc)</span></div><div class="line" id="003405"><span class="nick" style="color:#8dd3c7"><a href="#003405" label="[00:34:05]">&lt;stikonas&gt;</a></span><span class="message">I did riscv64 up to mes-m2 step (but not mescc compiler)</span></div><div class="line" id="003417"><span class="nick" style="color:#8dd3c7"><a href="#003417" label="[00:34:17]">&lt;stikonas&gt;</a></span><span class="message">oh, also easy task is riscv32 port of stage0-posix</span></div><div class="line" id="003441"><span class="nick" style="color:#8dd3c7"><a href="#003441" label="[00:34:41]">&lt;stikonas&gt;</a></span><span class="message">no reason to focus sparc</span></div><div class="line" id="003455"><span class="nick" style="color:#8dd3c7"><a href="#003455" label="[00:34:55]">&lt;stikonas&gt;</a></span><span class="message">just one option...</span></div><div class="line" id="003512"><span class="nick" style="color:#8dd3c7"><a href="#003512" label="[00:35:12]">&lt;stikonas&gt;</a></span><span class="message">in fact riscv32 might be easier and also useful in some home-made hardware</span></div><div class="line" id="003550"><span class="nick" style="color:#8dd3c7"><a href="#003550" label="[00:35:50]">&lt;stikonas&gt;</a></span><span class="message">as for shell, that's I guess live-bootstrap, a lot of it is written in bash</span></div><div class="line" id="003642"><span class="nick" style="color:#8dd3c7"><a href="#003642" label="[00:36:42]">&lt;stikonas&gt;</a></span><span class="message">so riscv32 might be not too hard because asm instructions are very similar to riscv64 (although you do need to adjust some stuff from 64 bits to 32 bits)</span></div><div class="line" id="003801"><span class="nick" style="color:#389600"><a href="#003801" label="[00:38:01]">&lt;zv&gt;</a></span><span class="message">I could de-bash live-bootstrap probably pretty quickly</span></div><div class="line" id="003809"><span class="nick" style="color:#8dd3c7"><a href="#003809" label="[00:38:09]">&lt;stikonas&gt;</a></span><span class="message">or if you focus on C, I guess M2-Planet...</span></div><div class="line" id="003816"><span class="nick" style="color:#8dd3c7"><a href="#003816" label="[00:38:16]">&lt;stikonas&gt;</a></span><span class="message">zv: into what?</span></div><div class="line" id="003820"><span class="nick" style="color:#389600"><a href="#003820" label="[00:38:20]">&lt;zv&gt;</a></span><span class="message">posix sh</span></div><div class="line" id="003832"><span class="nick" style="color:#8dd3c7"><a href="#003832" label="[00:38:32]">&lt;stikonas&gt;</a></span><span class="message">zv well, we only have bash bootstrapped there anyway</span></div><div class="line" id="003839"><span class="nick" style="color:#8dd3c7"><a href="#003839" label="[00:38:39]">&lt;stikonas&gt;</a></span><span class="message">couldn't build any other shell earlier</span></div><div class="line" id="003908"><span class="nick" style="color:#8dd3c7"><a href="#003908" label="[00:39:08]">&lt;stikonas&gt;</a></span><span class="message">true, one can use posix sh there</span></div><div class="line" id="003915"><span class="nick" style="color:#389600"><a href="#003915" label="[00:39:15]">&lt;zv&gt;</a></span><span class="message">ack. what are the current priorities with m2-planet?</span></div><div class="line" id="003931"><span class="nick" style="color:#8dd3c7"><a href="#003931" label="[00:39:31]">&lt;stikonas&gt;</a></span><span class="message">zv: I guess just adding more features</span></div><div class="line" id="003939"><span class="nick" style="color:#8dd3c7"><a href="#003939" label="[00:39:39]">&lt;stikonas&gt;</a></span><span class="message">I recently did some improvements to preprocessor</span></div><div class="line" id="003950"><span class="nick" style="color:#8dd3c7"><a href="#003950" label="[00:39:50]">&lt;stikonas&gt;</a></span><span class="message">but I guess the goal is to make upstream mes easier to build</span></div><div class="line" id="004010"><span class="nick" style="color:#8dd3c7"><a href="#004010" label="[00:40:10]">&lt;stikonas&gt;</a></span><span class="message">(not necesserily everything, we can submit some simplifying patches to mes too)</span></div><div class="line" id="004031"><span class="nick" style="color:#8dd3c7"><a href="#004031" label="[00:40:31]">&lt;stikonas&gt;</a></span><span class="message">but the more we add to M2-Planet, the less patches we need to upstream</span></div><div class="line" id="004044"><span class="nick" style="color:#389600"><a href="#004044" label="[00:40:44]">&lt;zv&gt;</a></span><span class="message">that implies potentially more maintenance though</span></div><div class="line" id="004146"><span class="nick" style="color:#8dd3c7"><a href="#004146" label="[00:41:46]">&lt;stikonas&gt;</a></span><span class="message">true</span></div><div class="line" id="004221"><span class="nick" style="color:#8dd3c7"><a href="#004221" label="[00:42:21]">&lt;stikonas&gt;</a></span><span class="message">but some features are fairly simple</span></div><div class="line" id="004237"><span class="nick" style="color:#8dd3c7"><a href="#004237" label="[00:42:37]">&lt;stikonas&gt;</a></span><span class="message">and do not require any new arch-specific assembly codegen stuff</span></div><div class="line" id="004336"><span class="nick" style="color:#8dd3c7"><a href="#004336" label="[00:43:36]">&lt;stikonas&gt;</a></span><span class="message">basically it took more than 2 years to patch mes to mes-m2 to get it to build with M2-Planet</span></div><div class="line" id="004358"><span class="nick" style="color:#8dd3c7"><a href="#004358" label="[00:43:58]">&lt;stikonas&gt;</a></span><span class="message">and some of those patches I think would introduce more maintenance burden</span></div><div class="line" id="004404"><span class="nick" style="color:#8dd3c7"><a href="#004404" label="[00:44:04]">&lt;stikonas&gt;</a></span><span class="message">than improving M2-Planet</span></div><div class="line" id="004550"><span class="nick" style="color:#389600"><a href="#004550" label="[00:45:50]">&lt;zv&gt;</a></span><span class="message">ok. I'll try to familiarize myself with the project better before jumping into anything.</span></div><div class="line" id="004612"><span class="nick" style="color:#8dd3c7"><a href="#004612" label="[00:46:12]">&lt;stikonas&gt;</a></span><span class="message">yeah, you can skip through some source code  first</span></div><div class="line" id="004625"><span class="nick" style="color:#389600"><a href="#004625" label="[00:46:25]">&lt;zv&gt;</a></span><span class="message">thanks for the above discussion; it is helpful to know what to focus on.</span></div><div class="line" id="004723"><span class="nick" style="color:#8dd3c7"><a href="#004723" label="[00:47:23]">&lt;stikonas&gt;</a></span><span class="message">no problem, like I said a lot depends on choice of languages</span></div><div class="line" id="004737"><span class="nick" style="color:#8dd3c7"><a href="#004737" label="[00:47:37]">&lt;stikonas&gt;</a></span><span class="message">if e.g. you mentioned Scheme, some other projects might have been more appropriate...</span></div><div class="line" id="004801"><span class="nick" style="color:#389600"><a href="#004801" label="[00:48:01]">&lt;zv&gt;</a></span><span class="message">I'm fairly versatile but it's not my preference.</span></div><div class="line" id="004909"><span class="nick" style="color:#8dd3c7"><a href="#004909" label="[00:49:09]">&lt;stikonas&gt;</a></span><span class="message">same here, I'm not very familiar with scheme</span></div><div class="line" id="004958"><span class="nick" style="color:#8dd3c7"><a href="#004958" label="[00:49:58]">&lt;stikonas&gt;</a></span><span class="message">oh, another thing that oriansj mentioned is improving M2libc</span></div><div class="line" id="005027"><span class="nick" style="color:#8dd3c7"><a href="#005027" label="[00:50:27]">&lt;stikonas&gt;</a></span><span class="message">which is I guess mostly used by M2-planet...</span></div><div class="line" id="005041"><span class="nick" style="color:#8dd3c7"><a href="#005041" label="[00:50:41]">&lt;stikonas&gt;</a></span><span class="message">i.e. move some functions from mes libc to m2libc</span></div><div class="line" id="005123"><span class="nick" style="color:#389600"><a href="#005123" label="[00:51:23]">&lt;zv&gt;</a></span><span class="message">is m2libc intended to replace mes libc 100%?</span></div><div class="line" id="005133"><span class="nick" style="color:#8dd3c7"><a href="#005133" label="[00:51:33]">&lt;stikonas&gt;</a></span><span class="message">not sure</span></div><div class="line" id="005200"><span class="nick" style="color:#8dd3c7"><a href="#005200" label="[00:52:00]">&lt;stikonas&gt;</a></span><span class="message">I don't think anybody knows...</span></div><div class="line" id="005356"><span class="nick" style="color:#8dd3c7"><a href="#005356" label="[00:53:56]">&lt;stikonas&gt;</a></span><span class="message">I guess it depends on what you want to build with M2-Planet</span></div><div class="line" id="005505"><span class="nick" style="color:#8dd3c7"><a href="#005505" label="[00:55:05]">&lt;stikonas&gt;</a></span><span class="message">anyway, that question might be better addressed to oriansj</span></div><div class="line" id="005524"><span class="nick" style="color:#389600"><a href="#005524" label="[00:55:24]">&lt;zv&gt;</a></span><span class="message">I'll comment after I've reviewed more.</span></div><div class="line" id="021431"><span class="nick" style="color:#80b1d3"><a href="#021431" label="[02:14:31]">&lt;oriansj&gt;</a></span><span class="message">minor note match(argv[1], &quot;-p&quot;) == TRUE can reduced down to just match(argv[1], &quot;-p&quot;) as it only returns true or false, and == will only return true or false, so the comparison is redundant</span></div><div class="line" id="022130"><span class="nick" style="color:#80b1d3"><a href="#022130" label="[02:21:30]">&lt;oriansj&gt;</a></span><span class="message">zx: well the only assembly work is on the lower end of the bootstrapping work (bootstrap-seeds, stage0-posix, and M2libc) after that everything is done in C or better.</span></div><div class="line" id="022252"><span class="nick" style="color:#80b1d3"><a href="#022252" label="[02:22:52]">&lt;oriansj&gt;</a></span><span class="message">and we tend to suggest what work looks fun because sometimes it produces miracles for improving the bootstrap process.</span></div><div class="line" id="022345"><span class="nick" style="color:#80b1d3"><a href="#022345" label="[02:23:45]">&lt;oriansj&gt;</a></span><span class="message">Also we encourage questions and clarifying anything that is not immediately clear (and try to update our documentation to improve that for all new people)</span></div><div class="line" id="022450"><span class="nick" style="color:#80b1d3"><a href="#022450" label="[02:24:50]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged and thank you for taking care of merging in gbrlwck's mescc-tools-extra work</span></div><div class="line" id="022536"><span class="nick" style="color:#8dd3c7"><a href="#022536" label="[02:25:36]">&lt;stikonas&gt;</a></span><span class="message">hmm, that's true, === TRUE can be omitted</span></div><div class="line" id="022617"><span class="nick" style="color:#8dd3c7"><a href="#022617" label="[02:26:17]">&lt;stikonas&gt;</a></span><span class="message">I also merged somebody's else fix to kaem script</span></div><div class="line" id="022623"><span class="nick" style="color:#80b1d3"><a href="#022623" label="[02:26:23]">&lt;oriansj&gt;</a></span><span class="message">but minor detail and something hopefully learned for the future.</span></div><div class="line" id="022625"><span class="nick" style="color:#8dd3c7"><a href="#022625" label="[02:26:25]">&lt;stikonas&gt;</a></span><span class="message">possibly we had a bad rebase...</span></div><div class="line" id="022700"><span class="nick" style="color:#80b1d3"><a href="#022700" label="[02:27:00]">&lt;oriansj&gt;</a></span><span class="message">well I'll take a look and clean it up</span></div><div class="line" id="022716"><span class="nick" style="color:#8dd3c7"><a href="#022716" label="[02:27:16]">&lt;stikonas&gt;</a></span><span class="message">thanks</span></div><div class="line" id="023218"><span class="nick" style="color:#8dd3c7"><a href="#023218" label="[02:32:18]">&lt;stikonas&gt;</a></span><span class="message">oriansj: also <a rel="nofollow" href="https://github.com/oriansj/mes-m2/pull/14">https://github.com/oriansj/mes-m2/pull/14</a> </span></div><div class="line" id="023225"><span class="nick" style="color:#8dd3c7"><a href="#023225" label="[02:32:25]">&lt;stikonas&gt;</a></span><span class="message">(to fix #errors that we now encounter</span></div><div class="line" id="023426"><span class="nick" style="color:#80b1d3"><a href="#023426" label="[02:34:26]">&lt;oriansj&gt;</a></span><span class="message">stikonas: thank you for letting me know, will review in 2 minutes</span></div><div class="line" id="024152"><span class="nick" style="color:#80b1d3"><a href="#024152" label="[02:41:52]">&lt;oriansj&gt;</a></span><span class="message">and merged</span></div><div class="line" id="024306"><span class="nick" style="color:#80b1d3"><a href="#024306" label="[02:43:06]">&lt;oriansj&gt;</a></span><span class="message">and I tweaked mkdir to allow for mkdir foo -p bar baz and restrict the parent directory creation to be more behavior compatible with gnu mkdir</span></div><div class="line" id="024613"><span class="nick" style="color:#80b1d3"><a href="#024613" label="[02:46:13]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: I also enjoyed Dr Wheeler's post and that someone posted a link to sin.c in stage0. As this isn't something new for us but rather the reason for the restrictions on our root from the beginning.</span></div><div class="line" id="024720"><span class="nick" style="color:#389600"><a href="#024720" label="[02:47:20]">&lt;zv&gt;</a></span><span class="message">oriansj: in terms of documentation, I guess one question I have is who are the consumers of each repo? do people use these subprojects outside of bootstrappable?</span></div><div class="line" id="025107"><span class="nick" style="color:#80b1d3"><a href="#025107" label="[02:51:07]">&lt;oriansj&gt;</a></span><span class="message">zv: at this point most of the repos are used internally. Only Live bootstrap and Guix produce the results outside of bootstrappable.</span></div><div class="line" id="025139"><span class="nick" style="color:#80b1d3"><a href="#025139" label="[02:51:39]">&lt;oriansj&gt;</a></span><span class="message">for example bootstrap-seeds is only used by stage0-posix and stage0 (bare metal bootstrapping)</span></div><div class="line" id="025226"><span class="nick" style="color:#80b1d3"><a href="#025226" label="[02:52:26]">&lt;oriansj&gt;</a></span><span class="message">stage0-posix uses M2libc, M2-Planet, mescc-tools and mescc-tools-extra to build the binaries needed by Gnu MES and Live-bootstrap.</span></div><div class="line" id="025318"><span class="nick" style="color:#80b1d3"><a href="#025318" label="[02:53:18]">&lt;oriansj&gt;</a></span><span class="message">Gnu Mes is in live bootstrap for the bootstrapping of TCC and in Gnu Guix bootstrapping.</span></div><div class="line" id="025350"><span class="nick" style="color:#80b1d3"><a href="#025350" label="[02:53:50]">&lt;oriansj&gt;</a></span><span class="message">and those are all of the major pieces inside of bootstrapping.</span></div><div class="line" id="025444"><span class="nick" style="color:#80b1d3"><a href="#025444" label="[02:54:44]">&lt;oriansj&gt;</a></span><span class="message">aside from some custom work we need to do to solve bootstrapping issues in more standard tools. (all in live bootstrap, as Gnu Guix currently uses pregenerated files)</span></div><div class="line" id="025515"><span class="nick" style="color:#389600"><a href="#025515" label="[02:55:15]">&lt;zv&gt;</a></span><span class="message">how about in terms of automatic testing, CI, etc.?</span></div><div class="line" id="025622"><span class="nick" style="color:#80b1d3"><a href="#025622" label="[02:56:22]">&lt;oriansj&gt;</a></span><span class="message">we did some when we worked on bootstrapping Haskell <a rel="nofollow" href="https://github.com/oriansj/blynn-compiler">https://github.com/oriansj/blynn-compiler</a> </span></div><div class="line" id="025629"><span class="nick" style="color:#80b1d3"><a href="#025629" label="[02:56:29]">&lt;oriansj&gt;</a></span><span class="message">(from M2-Planet)</span></div><div class="line" id="025739"><span class="nick" style="color:#6d2462"><a href="#025739" label="[02:57:39]">&lt;stikonas[m]&gt;</a></span><span class="message">Also in live-bootstrap</span></div><div class="line" id="025746"><span class="nick" style="color:#80b1d3"><a href="#025746" label="[02:57:46]">&lt;oriansj&gt;</a></span><span class="message">but I don't think anyone has taken that as something they wanted to do yet.</span></div><div class="line" id="025756"><span class="nick" style="color:#6d2462"><a href="#025756" label="[02:57:56]">&lt;stikonas[m]&gt;</a></span><span class="message">Until it started taking too much time</span></div><div class="line" id="025844"><span class="nick" style="color:#6d2462"><a href="#025844" label="[02:58:44]">&lt;stikonas[m]&gt;</a></span><span class="message">We still have some linters there but not full run</span></div><div class="line" id="025846"><span class="nick" style="color:#80b1d3"><a href="#025846" label="[02:58:46]">&lt;oriansj&gt;</a></span><span class="message">So we might need to find a better way to do that for live-bootstrap.</span></div><div class="line" id="025903"><span class="nick" style="color:#6d2462"><a href="#025903" label="[02:59:03]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, we just run it locally</span></div><div class="line" id="025936"><span class="nick" style="color:#6d2462"><a href="#025936" label="[02:59:36]">&lt;stikonas[m]&gt;</a></span><span class="message">Hard to get multiple hours of free computing time</span></div><div class="line" id="030031"><span class="nick" style="color:#80b1d3"><a href="#030031" label="[03:00:31]">&lt;oriansj&gt;</a></span><span class="message">in short it is something we are willing to use but no one has taken the time to sort out all of the issues or implement the required setup bits</span></div><div class="line" id="030100"><span class="nick" style="color:#80b1d3"><a href="#030100" label="[03:01:00]">&lt;oriansj&gt;</a></span><span class="message">possibly because they found other work more fun or more interesting.</span></div><div class="line" id="030729"><span class="nick" style="color:#80b1d3"><a href="#030729" label="[03:07:29]">&lt;oriansj&gt;</a></span><span class="message">yeah compute time is rare and limited due to crypto abuse. I might just end up having to pay for CI for live-bootstrap in the long run</span></div><div class="line" id="030828"><span class="nick" style="color:#80b1d3"><a href="#030828" label="[03:08:28]">&lt;oriansj&gt;</a></span><span class="message">hopefully find a FSF approved git CI provider.</span></div><div class="line" id="030904"><span class="nick" style="color:#80b1d3"><a href="#030904" label="[03:09:04]">&lt;oriansj&gt;</a></span><span class="message">but it isn't at the top of my list to deal with it yet, so it is open for anyone to solve if they have an idea to solve it.</span></div><div class="line" id="031029"><span class="nick" style="color:#389600"><a href="#031029" label="[03:10:29]">&lt;zv&gt;</a></span><span class="message">do y'all need compute time? x86, x86_64, others?</span></div><div class="line" id="031207"><span class="nick" style="color:#80b1d3"><a href="#031207" label="[03:12:07]">&lt;oriansj&gt;</a></span><span class="message">zv: well, people sanity checking is very useful. It helps keep us honest.</span></div><div class="line" id="031222"><span class="nick" style="color:#389600"><a href="#031222" label="[03:12:22]">&lt;zv&gt;</a></span><span class="message">we can take that out of band, but it would make sense to discuss or figure out if it it makes devs' lives easier</span></div><div class="line" id="031312"><span class="nick" style="color:#80b1d3"><a href="#031312" label="[03:13:12]">&lt;oriansj&gt;</a></span><span class="message">zv: well all of the devs are here so it can certainly be discussed here.</span></div><div class="line" id="031521"><span class="nick" style="color:#80b1d3"><a href="#031521" label="[03:15:21]">&lt;oriansj&gt;</a></span><span class="message">live-bootstrap is probably the big one for CI (fossy or stikonas feel free to correct me) and it indirectly also tests all of the major pieces up to GCC+Guile</span></div><div class="line" id="032025"><span class="nick" style="color:#80b1d3"><a href="#032025" label="[03:20:25]">&lt;oriansj&gt;</a></span><span class="message">another area needing a person, is the battle testing of PowerPC support in mescc-tools (possibly help define/redefine M1 syntax) to enable it to become a future target for MesCC; adding new architecture ports is also very valuable and highly in demand because the amount of work involved.</span></div><div class="line" id="032107"><span class="nick" style="color:#389600"><a href="#032107" label="[03:21:07]">&lt;zv&gt;</a></span><span class="message">ok. I am a bit busy this week with work, but I should be more available after. I have POWER hardware and can make it available.</span></div><div class="line" id="032118"><span class="nick" style="color:#80b1d3"><a href="#032118" label="[03:21:18]">&lt;oriansj&gt;</a></span><span class="message">also each new architecture M2-Planet supports and stage0-posix has, the higher the bar for any trusting trust attack to hide must be.</span></div><div class="line" id="032135"><span class="nick" style="color:#389600"><a href="#032135" label="[03:21:35]">&lt;zv&gt;</a></span><span class="message">on a scale of 1 to 10 where is sparc?</span></div><div class="line" id="032243"><span class="nick" style="color:#389600"><a href="#032243" label="[03:22:43]">&lt;zv&gt;</a></span><span class="message">in theory it can be brought up from FPGA which is cool; I don't have any available to me to test at the moment but could arrange to play with that later this year</span></div><div class="line" id="032448"><span class="nick" style="color:#80b1d3"><a href="#032448" label="[03:24:48]">&lt;oriansj&gt;</a></span><span class="message">zv: well now that we added word based support to mescc-tools for RISC-V; adding any fixed length architecture should be just a matter of figuring out ELF-header (hopefully no curve balls like PowerPC had [you'll see it rather quick]) then making a few DEFINEs and encoding the immediates formats needed and done. (so a couple hours to a day of work)</span></div><div class="line" id="032608"><span class="nick" style="color:#80b1d3"><a href="#032608" label="[03:26:08]">&lt;oriansj&gt;</a></span><span class="message">Then of course write a test using those DEFINEs and immediates (like hello world) so that if someone else breaks the arch the test will fail</span></div><div class="line" id="032818"><span class="nick" style="color:#80b1d3"><a href="#032818" label="[03:28:18]">&lt;oriansj&gt;</a></span><span class="message">the stage0-posix work for a new architecture is 1-4 months depending how terrible the architecture is at bootstrapping.</span></div><div class="line" id="033010"><span class="nick" style="color:#80b1d3"><a href="#033010" label="[03:30:10]">&lt;oriansj&gt;</a></span><span class="message">mescc-tools-&gt;M2-Planet+M2libc-&gt;stage0-posix is the suggested order for new architectures but you get a great deal of freedom if you take responsibility for an architecture.</span></div><div class="line" id="033242"><span class="nick" style="color:#80b1d3"><a href="#033242" label="[03:32:42]">&lt;oriansj&gt;</a></span><span class="message">I'll help when I can if you get stuck and there are lots of examples to work from in other architectures.</span></div><div class="line" id="121438"><span class="nick" style="color:#80b1d3"><a href="#121438" label="[12:14:38]">&lt;oriansj&gt;</a></span><span class="message">oh and not everyone lives in the same timezone (people literally from around the world), so feel comfortable posting whenever, the people up will respond if they have an answer or might flag the person who does when they next get online.</span></div><div class="line" id="131957"><span class="nick" style="color:#234e69"><a href="#131957" label="[13:19:57]">&lt;kpcyrd&gt;</a></span><span class="message">hi! the cert for <a rel="nofollow" href="https://bootstrappable.org/">https://bootstrappable.org/</a>  expired :)</span></div><div class="line" id="152756"><span class="nick">***</span><span class="message notice">robin__ is now known as robin</span></div><div class="line" id="155843"><span class="nick" style="color:#8dd3c7"><a href="#155843" label="[15:58:43]">&lt;stikonas&gt;</a></span><span class="message">kpcyrd: fixed</span></div><div class="line" id="155938"><span class="nick" style="color:#6c3d55"><a href="#155938" label="[15:59:38]">&lt;nckx&gt;</a></span><span class="message">kpcyrd: I manually renewed it for now.  Thanks for noticing.</span></div><div class="line" id="155940"><span class="nick" style="color:#6c3d55"><a href="#155940" label="[15:59:40]">&lt;nckx&gt;</a></span><span class="message">Oh :)</span></div><div class="line" id="155948"><span class="nick" style="color:#6c3d55"><a href="#155948" label="[15:59:48]">&lt;nckx&gt;</a></span><span class="message">I guess I know whose messenger you were.</span></div><div class="line" id="160010"><span class="nick" style="color:#8dd3c7"><a href="#160010" label="[16:00:10]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="160117"><span class="nick" style="color:#6c3d55"><a href="#160117" label="[16:01:17]">&lt;nckx&gt;</a></span><span class="message">It's good to mention it in #guix.  bootstrappable.org runs on a Guix machine, but don't ask me why it doesn't share the same certbot configuration…</span></div><div class="line" id="172209"><span class="nick" style="color:#d9d9d9"><a href="#172209" label="[17:22:09]">&lt;gbrlwck&gt;</a></span><span class="message">does mes-m2 build with our bootstrapping toolchain on x86(_64)?</span></div><div class="line" id="172700"><span class="nick" style="color:#d9d9d9"><a href="#172700" label="[17:27:00]">&lt;gbrlwck&gt;</a></span><span class="message">i see that #undef and #error unsupported in M2-Planet when building mes-m2; and though it completes compilation it doesn't run..</span></div><div class="line" id="172906"><span class="nick" style="color:#8dd3c7"><a href="#172906" label="[17:29:06]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: error is now implemented</span></div><div class="line" id="172913"><span class="nick" style="color:#8dd3c7"><a href="#172913" label="[17:29:13]">&lt;stikonas&gt;</a></span><span class="message">you just don't have newest M2-Planet</span></div><div class="line" id="172920"><span class="nick" style="color:#8dd3c7"><a href="#172920" label="[17:29:20]">&lt;stikonas&gt;</a></span><span class="message">#undef is not done yet, I might do it next</span></div><div class="line" id="172939"><span class="nick" style="color:#8dd3c7"><a href="#172939" label="[17:29:39]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: mes-m2 builds on x86 but not on x86_64</span></div><div class="line" id="173007"><span class="nick" style="color:#8dd3c7"><a href="#173007" label="[17:30:07]">&lt;stikonas&gt;</a></span><span class="message">it does need a bit of work to build on x86_64 (but less than for riscv64)</span></div><div class="line" id="173046"><span class="nick" style="color:#8dd3c7"><a href="#173046" label="[17:30:46]">&lt;stikonas&gt;</a></span><span class="message">some M2-Planet glue foe x86_64 is missing</span></div><div class="line" id="173103"><span class="nick" style="color:#8dd3c7"><a href="#173103" label="[17:31:03]">&lt;stikonas&gt;</a></span><span class="message">e.g. lib/m2/x86_64</span></div><div class="line" id="173622"><span class="nick" style="color:#8dd3c7"><a href="#173622" label="[17:36:22]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: by the way, things are quite slow on qemu-system-riscv64 with full emulation</span></div><div class="line" id="173633"><span class="nick" style="color:#8dd3c7"><a href="#173633" label="[17:36:33]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix takes about two hours</span></div><div class="line" id="173642"><span class="nick" style="color:#8dd3c7"><a href="#173642" label="[17:36:42]">&lt;stikonas&gt;</a></span><span class="message">so much slower than qemu-user or real HW</span></div><div class="line" id="173655"><span class="nick" style="color:#8dd3c7"><a href="#173655" label="[17:36:55]">&lt;stikonas&gt;</a></span><span class="message">mes seems to not crash on startup either</span></div><div class="line" id="173859"><span class="nick" style="color:#8dd3c7"><a href="#173859" label="[17:38:59]">&lt;stikonas&gt;</a></span><span class="message">although, crashes on more complicated stuff (e.g. mescc compilation)</span></div><div class="line" id="174032"><span class="nick" style="color:#8dd3c7"><a href="#174032" label="[17:40:32]">&lt;stikonas&gt;</a></span><span class="message">or maybe not, it was wrong mescc file (untemplated)</span></div><div class="line" id="174037"><span class="nick" style="color:#d9d9d9"><a href="#174037" label="[17:40:37]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: you know: if you have stuff you want me to try, just tell me (with as exact instructions as necessary)</span></div><div class="line" id="174053"><span class="nick" style="color:#8dd3c7"><a href="#174053" label="[17:40:53]">&lt;stikonas&gt;</a></span><span class="message">not sure if I have...</span></div><div class="line" id="174101"><span class="nick" style="color:#d9d9d9"><a href="#174101" label="[17:41:01]">&lt;gbrlwck&gt;</a></span><span class="message">*when</span></div><div class="line" id="174103"><span class="nick" style="color:#d9d9d9"><a href="#174103" label="[17:41:03]">&lt;gbrlwck&gt;</a></span><span class="message">:)</span></div><div class="line" id="174104"><span class="nick" style="color:#8dd3c7"><a href="#174104" label="[17:41:04]">&lt;stikonas&gt;</a></span><span class="message">I'll probably be mostly looking at m2-planet...</span></div><div class="line" id="190013"><span class="nick" style="color:#bc80bd"><a href="#190013" label="[19:00:13]">&lt;riv&gt;</a></span><span class="message">hello, im rain1 i changed nick</span></div><div class="line" id="203936"><span class="nick" style="color:#8dd3c7"><a href="#203936" label="[20:39:36]">&lt;stikonas&gt;</a></span><span class="message">riv: welcome back :)</span></div><div class="line" id="203943"><span class="nick" style="color:#bc80bd"><a href="#203943" label="[20:39:43]">&lt;riv&gt;</a></span><span class="message">ty!</span></div><div class="line" id="225322"><span class="nick" style="color:#8dd3c7"><a href="#225322" label="[22:53:22]">&lt;stikonas&gt;</a></span><span class="message">oriansj: #undef is now working, so mes-m2 compiles without preprocessor warnings in non-bootstrap mode</span></div><div class="line" id="225327"><span class="nick" style="color:#8dd3c7"><a href="#225327" label="[22:53:27]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/pull/28">https://github.com/oriansj/M2-Planet/pull/28</a> </span></div><div class="line" id="225632"><span class="nick" style="color:#8dd3c7"><a href="#225632" label="[22:56:32]">&lt;stikonas&gt;</a></span><span class="message">oh, I probably should update tests...</span></div><div class="line" id="230423"><span class="nick" style="color:#8dd3c7"><a href="#230423" label="[23:04:23]">&lt;stikonas&gt;</a></span><span class="message">ok, done...</span></div><div class="line" id="231102"><span class="nick" style="color:#8dd3c7"><a href="#231102" label="[23:11:02]">&lt;stikonas&gt;</a></span><span class="message">oriansj: by the way, why are M1-0 and blood-elf-0 build using --bootstrap-mode?</span></div><div class="line" id="231205"><span class="nick" style="color:#8dd3c7"><a href="#231205" label="[23:12:05]">&lt;stikonas&gt;</a></span><span class="message">is there some problem in M0 and it fails to compile M1 files without --bootstrap-mode?</span></div><div class="line" id="232955"><span class="nick" style="color:#80b1d3"><a href="#232955" label="[23:29:55]">&lt;oriansj&gt;</a></span><span class="message">stikonas: short version is it has to do with M0</span></div><div class="line" id="233057"><span class="nick" style="color:#80b1d3"><a href="#233057" label="[23:30:57]">&lt;oriansj&gt;</a></span><span class="message">although M2-Planet can build M1-0 and blood-elf-0 without bootstrap mode, M0 can't quite build the resulting output correctly.</span></div><div class="line" id="233203"><span class="nick" style="color:#80b1d3"><a href="#233203" label="[23:32:03]">&lt;oriansj&gt;</a></span><span class="message">that is why we have: <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/x86/Linux/bootstrap.c">https://github.com/oriansj/M2libc/blob/main/x86/Linux/bootstrap.c</a> </span></div><div class="line" id="233313"><span class="nick" style="color:#80b1d3"><a href="#233313" label="[23:33:13]">&lt;oriansj&gt;</a></span><span class="message">we could do some work to eliminate the --bootstrap-mode if there was a real benefit in mescc-tools for doing so</span></div><div class="line" id="233337"><span class="nick" style="color:#80b1d3"><a href="#233337" label="[23:33:37]">&lt;oriansj&gt;</a></span><span class="message">(like 40ish minutes of work total for all architectures)</span></div><div class="line" id="233756"><span class="nick" style="color:#80b1d3"><a href="#233756" label="[23:37:56]">&lt;oriansj&gt;</a></span><span class="message">and M2-Planet improvement merged.</span></div><div class="line" id="233812"><span class="nick" style="color:#80b1d3"><a href="#233812" label="[23:38:12]">&lt;oriansj&gt;</a></span><span class="message">I really need to add more tests for macro support</span></div><div class="line" id="233826"><span class="nick" style="color:#80b1d3"><a href="#233826" label="[23:38:26]">&lt;oriansj&gt;</a></span><span class="message">and fuzz the new functionality</span></div><div class="line" id="235759"><span class="nick" style="color:#8dd3c7"><a href="#235759" label="[23:57:59]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's true, we don't have macro tests yet...</span></div><div class="line" id="235816"><span class="nick" style="color:#8dd3c7"><a href="#235816" label="[23:58:16]">&lt;stikonas&gt;</a></span><span class="message">well, I guess it's fine to keep bootstrap mode...</span></div><div class="line" id="235832"><span class="nick" style="color:#8dd3c7"><a href="#235832" label="[23:58:32]">&lt;stikonas&gt;</a></span><span class="message">I was just not sure what's the reason...</span></div><br /></div></body></html>