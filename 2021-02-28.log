<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-28.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001058"><span class="nick" style="color:#389600"><a href="#001058" label="[00:10:58]">&lt;OriansJ`&gt;</a></span><span class="message">The closer you get to GCC, the more LFS documentation becomes a better and better reference.</span></div><div class="line" id="001133"><span class="nick" style="color:#389600"><a href="#001133" label="[00:11:33]">&lt;OriansJ`&gt;</a></span><span class="message">Although I wonder if the LFS community might be interested in a FULL bootstrap book</span></div><div class="line" id="001213"><span class="nick" style="color:#8dd3c7"><a href="#001213" label="[00:12:13]">&lt;stikonas&gt;</a></span><span class="message">well, we basically have everything to build gcc now (once we merge what we have in local git repos)</span></div><div class="line" id="001230"><span class="nick" style="color:#8dd3c7"><a href="#001230" label="[00:12:30]">&lt;stikonas&gt;</a></span><span class="message">well, maybe some minor things will be needed...</span></div><div class="line" id="001251"><span class="nick" style="color:#8dd3c7"><a href="#001251" label="[00:12:51]">&lt;stikonas&gt;</a></span><span class="message">but tcc with binutils and musl should be quite good</span></div><div class="line" id="001300"><span class="nick" style="color:#8dd3c7"><a href="#001300" label="[00:13:00]">&lt;stikonas&gt;</a></span><span class="message">and once we have gcc, like you say, it's just LFS</span></div><div class="line" id="001411"><span class="nick" style="color:#389600"><a href="#001411" label="[00:14:11]">&lt;OriansJ`&gt;</a></span><span class="message">with a very aggressive root of trust.</span></div><div class="line" id="001542"><span class="nick" style="color:#8dd3c7"><a href="#001542" label="[00:15:42]">&lt;stikonas&gt;</a></span><span class="message">yeah, stage0 + kernel...</span></div><div class="line" id="002920"><span class="nick" style="color:#8dd3c7"><a href="#002920" label="[00:29:20]">&lt;stikonas&gt;</a></span><span class="message">although, it might be that binutils will introduce some non-reproducibility...</span></div><div class="line" id="002929"><span class="nick" style="color:#8dd3c7"><a href="#002929" label="[00:29:29]">&lt;stikonas&gt;</a></span><span class="message">well that can hopefully be patched</span></div><div class="line" id="003519"><span class="nick" style="color:#6b8072"><a href="#003519" label="[00:35:19]">&lt;Hagfish&gt;</a></span><span class="message">i like the idea of &quot;linux from scratch from scratch&quot; :)</span></div><div class="line" id="003641"><span class="nick" style="color:#6b8072"><a href="#003641" label="[00:36:41]">&lt;Hagfish&gt;</a></span><span class="message">i also think that each distro should create an appendix to LFS which documents how to build an ISO image of their minimal install image</span></div><div class="line" id="003754"><span class="nick" style="color:#6b8072"><a href="#003754" label="[00:37:54]">&lt;Hagfish&gt;</a></span><span class="message">apparently a debian install image is &quot;generally 150-300 MB&quot;</span></div><div class="line" id="003830"><span class="nick" style="color:#6b8072"><a href="#003830" label="[00:38:30]">&lt;Hagfish&gt;</a></span><span class="message">it should be possible to build that image from source, bit for bit, from an LFS system</span></div><div class="line" id="004152"><span class="nick" style="color:#6b8072"><a href="#004152" label="[00:41:52]">&lt;Hagfish&gt;</a></span><span class="message">stikonas: i love the dedicated &quot;parts&quot; page here: <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/blob/master/parts.rst#36perl-5005_03">https://github.com/stikonas/live-bootstrap/blob/master/parts.rst#36perl-5005_03</a> </span></div><div class="line" id="004222"><span class="nick" style="color:#6b8072"><a href="#004222" label="[00:42:22]">&lt;Hagfish&gt;</a></span><span class="message">i think there is a contradiction, though:  &quot;This is the last version buildable with 5.004.&quot; vs &quot;5.6.2 is the last version buildable with 5.004.&quot;</span></div><div class="line" id="004352"><span class="nick" style="color:#8dd3c7"><a href="#004352" label="[00:43:52]">&lt;stikonas&gt;</a></span><span class="message">Hagfish: oh, should be 5.005 there</span></div><div class="line" id="004404"><span class="nick" style="color:#8dd3c7"><a href="#004404" label="[00:44:04]">&lt;stikonas&gt;</a></span><span class="message">I think you have just volunteered to do a PR</span></div><div class="line" id="005404"><span class="nick" style="color:#6b8072"><a href="#005404" label="[00:54:04]">&lt;Hagfish&gt;</a></span><span class="message">i want to say i don't have an account, but it's more true to say that i shouldn't use my work account</span></div><div class="line" id="005417"><span class="nick" style="color:#6b8072"><a href="#005417" label="[00:54:17]">&lt;Hagfish&gt;</a></span><span class="message">i could download the file and create a diff for you, if that would be acceptable :)</span></div><div class="line" id="005435"><span class="nick" style="color:#8dd3c7"><a href="#005435" label="[00:54:35]">&lt;stikonas&gt;</a></span><span class="message">well, in that case maybe I'll fix it...</span></div><div class="line" id="005454"><span class="nick" style="color:#6b8072"><a href="#005454" label="[00:54:54]">&lt;Hagfish&gt;</a></span><span class="message">i'm happy for you to receive the credit for that epic patch :)</span></div><div class="line" id="005613"><span class="nick" style="color:#8dd3c7"><a href="#005613" label="[00:56:13]">&lt;stikonas&gt;</a></span><span class="message">ok, sneaked it into autoconf PR...</span></div><div class="line" id="010935"><span class="nick" style="color:#80b1d3"><a href="#010935" label="[01:09:35]">&lt;pabs3&gt;</a></span><span class="message">Hagfish: I would have thought distro ISO images would require tools from the distro, so the path to build the ISO should be hex0 -&gt; distro build-essential -&gt; ISO build-deps -&gt; ISO</span></div><div class="line" id="011003"><span class="nick" style="color:#80b1d3"><a href="#011003" label="[01:10:03]">&lt;pabs3&gt;</a></span><span class="message">for Debian, the debian-cd package is how the ISOs are built</span></div><div class="line" id="011437"><span class="nick" style="color:#8dd3c7"><a href="#011437" label="[01:14:37]">&lt;stikonas&gt;</a></span><span class="message">and for binary distros the point is moot anyway</span></div><div class="line" id="011446"><span class="nick" style="color:#8dd3c7"><a href="#011446" label="[01:14:46]">&lt;stikonas&gt;</a></span><span class="message">if they don't switch to bootstrapping</span></div><div class="line" id="011632"><span class="nick" style="color:#6b8072"><a href="#011632" label="[01:16:32]">&lt;Hagfish&gt;</a></span><span class="message">pabs3: yeah, i guess there are 2 complementary philosophies: distros should be self-hosting, and also the distro's build essentials should be buildable from the simplest possible binaries</span></div><div class="line" id="011633"><span class="nick" style="color:#80b1d3"><a href="#011633" label="[01:16:33]">&lt;pabs3&gt;</a></span><span class="message">Debian already has a cross-bootstrapping project, so I think would be amenable to full bootstrap</span></div><div class="line" id="011648"><span class="nick" style="color:#80b1d3"><a href="#011648" label="[01:16:48]">&lt;pabs3&gt;</a></span><span class="message">agreed Hagfish</span></div><div class="line" id="011731"><span class="nick" style="color:#8dd3c7"><a href="#011731" label="[01:17:31]">&lt;stikonas&gt;</a></span><span class="message">and self-hosting in reproducible way</span></div><div class="line" id="011741"><span class="nick" style="color:#8dd3c7"><a href="#011741" label="[01:17:41]">&lt;stikonas&gt;</a></span><span class="message">then there is at least hope of reproducing exactly the same binaries</span></div><div class="line" id="011743"><span class="nick" style="color:#6b8072"><a href="#011743" label="[01:17:43]">&lt;Hagfish&gt;</a></span><span class="message">in the back of my mind i have this worry that trying to build, say, the Debian package of gcc, or the kernel, from an LFS system will fail in some subtle way because the system isn't &quot;Debian&quot; enough</span></div><div class="line" id="011807"><span class="nick" style="color:#8dd3c7"><a href="#011807" label="[01:18:07]">&lt;stikonas&gt;</a></span><span class="message">well, official packages are built in Debian chroot...</span></div><div class="line" id="011814"><span class="nick" style="color:#6d2462"><a href="#011814" label="[01:18:14]">*</a></span><span class="message">pabs3 would like to see hex0 etc in every Debian apt mirror so you could bootstrap Debian solely from a source-only apt mirror</span></div><div class="line" id="011826"><span class="nick" style="color:#6b8072"><a href="#011826" label="[01:18:26]">&lt;Hagfish&gt;</a></span><span class="message">that would be amazing</span></div><div class="line" id="011851"><span class="nick" style="color:#6b8072"><a href="#011851" label="[01:18:51]">&lt;Hagfish&gt;</a></span><span class="message">stikonas: i don't think it's documented how to build a Debian chroot from source on a non-debian system, right?</span></div><div class="line" id="011908"><span class="nick" style="color:#6b8072"><a href="#011908" label="[01:19:08]">&lt;Hagfish&gt;</a></span><span class="message">i guess you are supposed to run debootstrap or something, in a Debian machine?</span></div><div class="line" id="011929"><span class="nick" style="color:#80b1d3"><a href="#011929" label="[01:19:29]">&lt;pabs3&gt;</a></span><span class="message">debootstrap doesn't require Debian machines and is available in Fedora/etc</span></div><div class="line" id="011937"><span class="nick" style="color:#6b8072"><a href="#011937" label="[01:19:37]">&lt;Hagfish&gt;</a></span><span class="message">wow, nice</span></div><div class="line" id="011954"><span class="nick" style="color:#8dd3c7"><a href="#011954" label="[01:19:54]">&lt;stikonas&gt;</a></span><span class="message">debootstrap runs anywhere, but it downloads binary debian packages</span></div><div class="line" id="012019"><span class="nick" style="color:#6b8072"><a href="#012019" label="[01:20:19]">&lt;Hagfish&gt;</a></span><span class="message">hmm, tricky</span></div><div class="line" id="012026"><span class="nick" style="color:#80b1d3"><a href="#012026" label="[01:20:26]">&lt;pabs3&gt;</a></span><span class="message">its very hacky though, it hardcodes ordering information, the apt/dpkg folks are working on a spec to eliminate that</span></div><div class="line" id="012119"><span class="nick" style="color:#80b1d3"><a href="#012119" label="[01:21:19]">&lt;pabs3&gt;</a></span><span class="message"> (<a rel="nofollow" href="https://wiki.debian.org/Teams/Dpkg/Spec/InstallBootstrap">https://wiki.debian.org/Teams/Dpkg/Spec/InstallBootstrap</a>) </span></div><div class="line" id="012145"><span class="nick" style="color:#6b8072"><a href="#012145" label="[01:21:45]">&lt;Hagfish&gt;</a></span><span class="message">maybe there needs to be a debootstrapbootstrap which downloads the debian source package and turns them into binaries using the non-debian host system</span></div><div class="line" id="012209"><span class="nick" style="color:#80b1d3"><a href="#012209" label="[01:22:09]">&lt;pabs3&gt;</a></span><span class="message">but yes, getting from LFS to the first .deb would be the hard bit, I think Daniel Schepler has been doing work on that</span></div><div class="line" id="012308"><span class="nick" style="color:#6b8072"><a href="#012308" label="[01:23:08]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://packages.debian.org/buster/mmdebstrap">https://packages.debian.org/buster/mmdebstrap</a>  &quot;is bit-by-bit reproducible if $SOURCE_DATE_EPOCH is set&quot;</span></div><div class="line" id="012326"><span class="nick" style="color:#80b1d3"><a href="#012326" label="[01:23:26]">&lt;pabs3&gt;</a></span><span class="message">that uses .debs too</span></div><div class="line" id="012335"><span class="nick" style="color:#6b8072"><a href="#012335" label="[01:23:35]">&lt;Hagfish&gt;</a></span><span class="message">thinks keep moving in the right direction, though, i'm pleased to see</span></div><div class="line" id="012417"><span class="nick" style="color:#8dd3c7"><a href="#012417" label="[01:24:17]">&lt;stikonas&gt;</a></span><span class="message">that's why I was thinking we should first pick easier targets...</span></div><div class="line" id="012419"><span class="nick" style="color:#80b1d3"><a href="#012419" label="[01:24:19]">&lt;pabs3&gt;</a></span><span class="message">some links to the cross-bootstrap stuff: <a rel="nofollow" href="https://wiki.debian.org/HelmutGrohne/rebootstrap">https://wiki.debian.org/HelmutGrohne/rebootstrap</a>  <a rel="nofollow" href="https://wiki.debian.org/DebianBootstrap">https://wiki.debian.org/DebianBootstrap</a> </span></div><div class="line" id="012439"><span class="nick" style="color:#6b8072"><a href="#012439" label="[01:24:39]">&lt;Hagfish&gt;</a></span><span class="message">stikonas: something intermediate between LFS and Debian?</span></div><div class="line" id="012441"><span class="nick" style="color:#8dd3c7"><a href="#012441" label="[01:24:41]">&lt;stikonas&gt;</a></span><span class="message">source based distros rae probably as easy as it can get...</span></div><div class="line" id="012448"><span class="nick" style="color:#8dd3c7"><a href="#012448" label="[01:24:48]">&lt;stikonas&gt;</a></span><span class="message">Hagfish: yeah, like Gentoo</span></div><div class="line" id="012454"><span class="nick" style="color:#6b8072"><a href="#012454" label="[01:24:54]">&lt;Hagfish&gt;</a></span><span class="message">that makes sense</span></div><div class="line" id="012456"><span class="nick" style="color:#80b1d3"><a href="#012456" label="[01:24:56]">&lt;pabs3&gt;</a></span><span class="message">what is the status of hex0 -&gt; GuixSD?</span></div><div class="line" id="012523"><span class="nick" style="color:#8dd3c7"><a href="#012523" label="[01:25:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure if we can produce guix bootstrap binaries...</span></div><div class="line" id="012536"><span class="nick" style="color:#8dd3c7"><a href="#012536" label="[01:25:36]">&lt;stikonas&gt;</a></span><span class="message">and guile also has some bootstrap problems if I recall correctly</span></div><div class="line" id="012543"><span class="nick" style="color:#8dd3c7"><a href="#012543" label="[01:25:43]">&lt;stikonas&gt;</a></span><span class="message">(pp_syntax or something like that)</span></div><div class="line" id="012557"><span class="nick" style="color:#8dd3c7"><a href="#012557" label="[01:25:57]">&lt;stikonas&gt;</a></span><span class="message">somebody here was working on it</span></div><div class="line" id="012805"><span class="nick" style="color:#234e69"><a href="#012805" label="[01:28:05]">&lt;fossy&gt;</a></span><span class="message">stikonas: what do we need 2.13 for</span></div><div class="line" id="012905"><span class="nick" style="color:#234e69"><a href="#012905" label="[01:29:05]">&lt;fossy&gt;</a></span><span class="message">stikonas: and there are no binary or binary like files for any of these yeah?</span></div><div class="line" id="012910"><span class="nick" style="color:#8dd3c7"><a href="#012910" label="[01:29:10]">&lt;stikonas&gt;</a></span><span class="message">fossy: 2.13 and 2.12 is needed for binutils</span></div><div class="line" id="012919"><span class="nick" style="color:#234e69"><a href="#012919" label="[01:29:19]">&lt;fossy&gt;</a></span><span class="message">odd, two different versions lol</span></div><div class="line" id="012923"><span class="nick" style="color:#8dd3c7"><a href="#012923" label="[01:29:23]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, those are just scripts</span></div><div class="line" id="012927"><span class="nick" style="color:#234e69"><a href="#012927" label="[01:29:27]">&lt;fossy&gt;</a></span><span class="message">cool</span></div><div class="line" id="012937"><span class="nick" style="color:#8dd3c7"><a href="#012937" label="[01:29:37]">&lt;stikonas&gt;</a></span><span class="message">original binutils configure scripts are done with mix of 2.13 and 2.12.1</span></div><div class="line" id="012949"><span class="nick" style="color:#234e69"><a href="#012949" label="[01:29:49]">&lt;fossy&gt;</a></span><span class="message">and none are generated by the build system? (I mean fully, not trivial sed)</span></div><div class="line" id="013002"><span class="nick" style="color:#234e69"><a href="#013002" label="[01:30:02]">&lt;fossy&gt;</a></span><span class="message">scary :p</span></div><div class="line" id="013025"><span class="nick" style="color:#8dd3c7"><a href="#013025" label="[01:30:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, autoconf automake and friends are produced</span></div><div class="line" id="013043"><span class="nick" style="color:#8dd3c7"><a href="#013043" label="[01:30:43]">&lt;stikonas&gt;</a></span><span class="message">but it's just plaholder replacements</span></div><div class="line" id="013048"><span class="nick" style="color:#8dd3c7"><a href="#013048" label="[01:30:48]">&lt;stikonas&gt;</a></span><span class="message">that can be done with sed</span></div><div class="line" id="013051"><span class="nick" style="color:#234e69"><a href="#013051" label="[01:30:51]">&lt;fossy&gt;</a></span><span class="message">yeah, like seds, thats fine</span></div><div class="line" id="013054"><span class="nick" style="color:#234e69"><a href="#013054" label="[01:30:54]">&lt;fossy&gt;</a></span><span class="message">Ok ill merge</span></div><div class="line" id="013119"><span class="nick" style="color:#234e69"><a href="#013119" label="[01:31:19]">&lt;fossy&gt;</a></span><span class="message">Acrually ill wait a couple for the ci</span></div><div class="line" id="013128"><span class="nick" style="color:#8dd3c7"><a href="#013128" label="[01:31:28]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's fine...</span></div><div class="line" id="013131"><span class="nick" style="color:#234e69"><a href="#013131" label="[01:31:31]">&lt;fossy&gt;</a></span><span class="message">Cause its nearly done</span></div><div class="line" id="013215"><span class="nick" style="color:#8dd3c7"><a href="#013215" label="[01:32:15]">&lt;stikonas&gt;</a></span><span class="message">testing binutils now...</span></div><div class="line" id="013253"><span class="nick" style="color:#8dd3c7"><a href="#013253" label="[01:32:53]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/blob/binutils-wip/sysa/binutils-2.14/binutils-2.14.sh">https://github.com/stikonas/live-bootstrap/blob/binutils-wip/sysa/binutils-2.14/binutils-2.14.sh</a> </span></div><div class="line" id="013301"><span class="nick" style="color:#8dd3c7"><a href="#013301" label="[01:33:01]">&lt;stikonas&gt;</a></span><span class="message">(can start reviewing)</span></div><div class="line" id="013340"><span class="nick" style="color:#8dd3c7"><a href="#013340" label="[01:33:40]">&lt;stikonas&gt;</a></span><span class="message">fossy: it might need more work to make binutils create reproducible executables, in case they insert time or date...</span></div><div class="line" id="013356"><span class="nick" style="color:#8dd3c7"><a href="#013356" label="[01:33:56]">&lt;stikonas&gt;</a></span><span class="message">but I think we can at least build them first and then iterate from there</span></div><div class="line" id="013513"><span class="nick" style="color:#8dd3c7"><a href="#013513" label="[01:35:13]">&lt;stikonas&gt;</a></span><span class="message">and binutils 2.14 seems the be the limit for tcc...</span></div><div class="line" id="013526"><span class="nick" style="color:#8dd3c7"><a href="#013526" label="[01:35:26]">&lt;stikonas&gt;</a></span><span class="message">2.15 was complaining...</span></div><div class="line" id="014254"><span class="nick" style="color:#6b8072"><a href="#014254" label="[01:42:54]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://sources.debian.org/src/debootstrap/1.0.123/scripts/debian-common/">https://sources.debian.org/src/debootstrap/1.0.123/scripts/debian-common/</a>  recreating that without using apt/dpkg doesn't look any harder than what live-bootstrap does</span></div><div class="line" id="014315"><span class="nick" style="color:#6b8072"><a href="#014315" label="[01:43:15]">&lt;Hagfish&gt;</a></span><span class="message">(although i say that based on my ignorance of the details of both processes)</span></div><div class="line" id="014956"><span class="nick" style="color:#8dd3c7"><a href="#014956" label="[01:49:56]">&lt;stikonas&gt;</a></span><span class="message">well, maybe at some point later in live-bootstrap we can have distro &quot;plugins&quot;</span></div><div class="line" id="015005"><span class="nick" style="color:#8dd3c7"><a href="#015005" label="[01:50:05]">&lt;stikonas&gt;</a></span><span class="message">where live-bootstrap branches to bootstrap chosen distro</span></div><div class="line" id="015104"><span class="nick" style="color:#234e69"><a href="#015104" label="[01:51:04]">&lt;fossy&gt;</a></span><span class="message">that is basically my plan from the start</span></div><div class="line" id="015111"><span class="nick" style="color:#234e69"><a href="#015111" label="[01:51:11]">&lt;fossy&gt;</a></span><span class="message">;)</span></div><div class="line" id="015140"><span class="nick" style="color:#234e69"><a href="#015140" label="[01:51:40]">&lt;fossy&gt;</a></span><span class="message">kexec-tools goddamnit</span></div><div class="line" id="015207"><span class="nick" style="color:#234e69"><a href="#015207" label="[01:52:07]">&lt;fossy&gt;</a></span><span class="message">why does ur tar file have to use all these gnu extensions which we dont yet support</span></div><div class="line" id="015232"><span class="nick" style="color:#8dd3c7"><a href="#015232" label="[01:52:32]">&lt;stikonas&gt;</a></span><span class="message">well, some other tar files also used them but those were optional</span></div><div class="line" id="015244"><span class="nick" style="color:#8dd3c7"><a href="#015244" label="[01:52:44]">&lt;stikonas&gt;</a></span><span class="message">so just unnecessary file in extracted dir</span></div><div class="line" id="015310"><span class="nick" style="color:#8dd3c7"><a href="#015310" label="[01:53:10]">&lt;stikonas&gt;</a></span><span class="message">in the worse case we can repack tar...</span></div><div class="line" id="015512"><span class="nick" style="color:#234e69"><a href="#015512" label="[01:55:12]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah, these are key source files :|</span></div><div class="line" id="015516"><span class="nick" style="color:#234e69"><a href="#015516" label="[01:55:16]">&lt;fossy&gt;</a></span><span class="message">however, the git snapshot is fine</span></div><div class="line" id="015518"><span class="nick" style="color:#234e69"><a href="#015518" label="[01:55:18]">&lt;fossy&gt;</a></span><span class="message">so i'll use that</span></div><div class="line" id="015725"><span class="nick" style="color:#8dd3c7"><a href="#015725" label="[01:57:25]">&lt;stikonas&gt;</a></span><span class="message">ok, binutils were successfully built</span></div><div class="line" id="015731"><span class="nick" style="color:#8dd3c7"><a href="#015731" label="[01:57:31]">&lt;stikonas&gt;</a></span><span class="message">now I need to get checksums done...</span></div><div class="line" id="020215"><span class="nick" style="color:#234e69"><a href="#020215" label="[02:02:15]">&lt;fossy&gt;</a></span><span class="message">wow, that was fast!</span></div><div class="line" id="020244"><span class="nick" style="color:#8dd3c7"><a href="#020244" label="[02:02:44]">&lt;stikonas&gt;</a></span><span class="message">well, we now have autotools</span></div><div class="line" id="020249"><span class="nick" style="color:#8dd3c7"><a href="#020249" label="[02:02:49]">&lt;stikonas&gt;</a></span><span class="message">so no need to write build system...</span></div><div class="line" id="020324"><span class="nick" style="color:#8dd3c7"><a href="#020324" label="[02:03:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: although, I suspect some of them might have problems with reproducibility</span></div><div class="line" id="020332"><span class="nick" style="color:#8dd3c7"><a href="#020332" label="[02:03:32]">&lt;stikonas&gt;</a></span><span class="message">but we'll see</span></div><div class="line" id="020419"><span class="nick" style="color:#8dd3c7"><a href="#020419" label="[02:04:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe merge autotools?</span></div><div class="line" id="020431"><span class="nick" style="color:#8dd3c7"><a href="#020431" label="[02:04:31]">&lt;stikonas&gt;</a></span><span class="message">then I'll rebase on top of it and make PR for reviewing</span></div><div class="line" id="020657"><span class="nick" style="color:#234e69"><a href="#020657" label="[02:06:57]">&lt;fossy&gt;</a></span><span class="message">stikonas: yep, merged, ygot that tick</span></div><div class="line" id="020713"><span class="nick" style="color:#234e69"><a href="#020713" label="[02:07:13]">&lt;fossy&gt;</a></span><span class="message">stikonas: also, gentoo bootstrap is trivial (although slightly messy);</span></div><div class="line" id="020725"><span class="nick" style="color:#234e69"><a href="#020725" label="[02:07:25]">&lt;fossy&gt;</a></span><span class="message">you just have to use gentoo prefix</span></div><div class="line" id="020750"><span class="nick" style="color:#234e69"><a href="#020750" label="[02:07:50]">&lt;fossy&gt;</a></span><span class="message">create a prefix, ./bootstrap-prefix.sh, then use the prefix to create a stage3 and extract that in a real root</span></div><div class="line" id="020817"><span class="nick" style="color:#234e69"><a href="#020817" label="[02:08:17]">&lt;fossy&gt;</a></span><span class="message">alterntaively we can attempt to use catalyst</span></div><div class="line" id="020903"><span class="nick" style="color:#8dd3c7"><a href="#020903" label="[02:09:03]">&lt;stikonas&gt;</a></span><span class="message">yeah, either of those should work...</span></div><div class="line" id="020941"><span class="nick" style="color:#234e69"><a href="#020941" label="[02:09:41]">&lt;fossy&gt;</a></span><span class="message">well catalyst does need a seed tarball</span></div><div class="line" id="020954"><span class="nick" style="color:#234e69"><a href="#020954" label="[02:09:54]">&lt;fossy&gt;</a></span><span class="message">but one can probably use a prefix tarballed as the seed</span></div><div class="line" id="021004"><span class="nick" style="color:#8dd3c7"><a href="#021004" label="[02:10:04]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/54">https://github.com/fosslinux/live-bootstrap/pull/54</a> </span></div><div class="line" id="021018"><span class="nick" style="color:#8dd3c7"><a href="#021018" label="[02:10:18]">&lt;stikonas&gt;</a></span><span class="message">(probably not for merging today)</span></div><div class="line" id="021022"><span class="nick" style="color:#8dd3c7"><a href="#021022" label="[02:10:22]">&lt;stikonas&gt;</a></span><span class="message">hopefully tomorrow</span></div><div class="line" id="021043"><span class="nick" style="color:#234e69"><a href="#021043" label="[02:10:43]">&lt;fossy&gt;</a></span><span class="message">identation is off in the for loops</span></div><div class="line" id="021049"><span class="nick" style="color:#8dd3c7"><a href="#021049" label="[02:10:49]">&lt;stikonas&gt;</a></span><span class="message">oh, emacs again..</span></div><div class="line" id="021053"><span class="nick" style="color:#234e69"><a href="#021053" label="[02:10:53]">&lt;fossy&gt;</a></span><span class="message">where does pder deserve attribution?</span></div><div class="line" id="021100"><span class="nick" style="color:#234e69"><a href="#021100" label="[02:11:00]">&lt;fossy&gt;</a></span><span class="message">(anywhere?)</span></div><div class="line" id="021103"><span class="nick" style="color:#8dd3c7"><a href="#021103" label="[02:11:03]">&lt;stikonas&gt;</a></span><span class="message">can't see tabs vs spaces there...</span></div><div class="line" id="021112"><span class="nick" style="color:#234e69"><a href="#021112" label="[02:11:12]">&lt;fossy&gt;</a></span><span class="message">its only one space..</span></div><div class="line" id="021120"><span class="nick" style="color:#8dd3c7"><a href="#021120" label="[02:11:20]">&lt;stikonas&gt;</a></span><span class="message">fossy: pder wrote configure command and those alloca hacks</span></div><div class="line" id="021121"><span class="nick" style="color:#234e69"><a href="#021121" label="[02:11:21]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="021123"><span class="nick" style="color:#234e69"><a href="#021123" label="[02:11:23]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="021130"><span class="nick" style="color:#8dd3c7"><a href="#021130" label="[02:11:30]">&lt;stikonas&gt;</a></span><span class="message">well, first commit is his</span></div><div class="line" id="021140"><span class="nick" style="color:#8dd3c7"><a href="#021140" label="[02:11:40]">&lt;stikonas&gt;</a></span><span class="message">(I am committer because I did rebase)</span></div><div class="line" id="021141"><span class="nick" style="color:#234e69"><a href="#021141" label="[02:11:41]">&lt;fossy&gt;</a></span><span class="message">yeah could you add pder to SPDX-FileCopyrightText</span></div><div class="line" id="021147"><span class="nick" style="color:#8dd3c7"><a href="#021147" label="[02:11:47]">&lt;stikonas&gt;</a></span><span class="message">oh didn't he add?</span></div><div class="line" id="021149"><span class="nick" style="color:#8dd3c7"><a href="#021149" label="[02:11:49]">&lt;stikonas&gt;</a></span><span class="message">I will then</span></div><div class="line" id="021156"><span class="nick" style="color:#234e69"><a href="#021156" label="[02:11:56]">&lt;fossy&gt;</a></span><span class="message">nope, not in binutils-2.14.sh</span></div><div class="line" id="021214"><span class="nick" style="color:#8dd3c7"><a href="#021214" label="[02:12:14]">&lt;stikonas&gt;</a></span><span class="message">hmm, indeed</span></div><div class="line" id="021215"><span class="nick" style="color:#8dd3c7"><a href="#021215" label="[02:12:15]">&lt;stikonas&gt;</a></span><span class="message">I'll fix that</span></div><div class="line" id="021218"><span class="nick" style="color:#234e69"><a href="#021218" label="[02:12:18]">&lt;fossy&gt;</a></span><span class="message">hm, i am seeing a .y file</span></div><div class="line" id="021222"><span class="nick" style="color:#234e69"><a href="#021222" label="[02:12:22]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="021224"><span class="nick" style="color:#234e69"><a href="#021224" label="[02:12:24]">&lt;fossy&gt;</a></span><span class="message">we rebuild those</span></div><div class="line" id="021226"><span class="nick" style="color:#234e69"><a href="#021226" label="[02:12:26]">&lt;fossy&gt;</a></span><span class="message">nvm</span></div><div class="line" id="021235"><span class="nick" style="color:#8dd3c7"><a href="#021235" label="[02:12:35]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think not all are used</span></div><div class="line" id="021242"><span class="nick" style="color:#8dd3c7"><a href="#021242" label="[02:12:42]">&lt;stikonas&gt;</a></span><span class="message">there was also some problem there</span></div><div class="line" id="021244"><span class="nick" style="color:#8dd3c7"><a href="#021244" label="[02:12:44]">&lt;stikonas&gt;</a></span><span class="message">which i workarounded</span></div><div class="line" id="021245"><span class="nick" style="color:#234e69"><a href="#021245" label="[02:12:45]">&lt;fossy&gt;</a></span><span class="message">i assume the touch command makes them be regenerated?</span></div><div class="line" id="021256"><span class="nick" style="color:#8dd3c7"><a href="#021256" label="[02:12:56]">&lt;stikonas&gt;</a></span><span class="message">touch should be enough</span></div><div class="line" id="021303"><span class="nick" style="color:#234e69"><a href="#021303" label="[02:13:03]">&lt;fossy&gt;</a></span><span class="message">and the absence of the files</span></div><div class="line" id="021313"><span class="nick" style="color:#8dd3c7"><a href="#021313" label="[02:13:13]">&lt;stikonas&gt;</a></span><span class="message">well, there are .c and .h files</span></div><div class="line" id="021322"><span class="nick" style="color:#8dd3c7"><a href="#021322" label="[02:13:22]">&lt;stikonas&gt;</a></span><span class="message">in principle touch should be enough even without removing</span></div><div class="line" id="021328"><span class="nick" style="color:#8dd3c7"><a href="#021328" label="[02:13:28]">&lt;stikonas&gt;</a></span><span class="message">because date will be newer</span></div><div class="line" id="021651"><span class="nick" style="color:#8dd3c7"><a href="#021651" label="[02:16:51]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe you can also clean up some old branches?</span></div><div class="line" id="021719"><span class="nick" style="color:#8dd3c7"><a href="#021719" label="[02:17:19]">&lt;stikonas&gt;</a></span><span class="message">number of branches in the main repo is getting quite large</span></div><div class="line" id="021824"><span class="nick" style="color:#234e69"><a href="#021824" label="[02:18:24]">&lt;fossy&gt;</a></span><span class="message">stikonas: oops, yeah</span></div><div class="line" id="021858"><span class="nick" style="color:#8dd3c7"><a href="#021858" label="[02:18:58]">&lt;stikonas&gt;</a></span><span class="message">and what about those 4 sed lines. I guess they are acceptable?</span></div><div class="line" id="021904"><span class="nick" style="color:#8dd3c7"><a href="#021904" label="[02:19:04]">&lt;stikonas&gt;</a></span><span class="message">in binutils-2.14.sh</span></div><div class="line" id="021914"><span class="nick" style="color:#234e69"><a href="#021914" label="[02:19:14]">&lt;fossy&gt;</a></span><span class="message">they are fine</span></div><div class="line" id="021922"><span class="nick" style="color:#234e69"><a href="#021922" label="[02:19:22]">&lt;fossy&gt;</a></span><span class="message">the TODO makes it even finer</span></div><div class="line" id="021928"><span class="nick" style="color:#8dd3c7"><a href="#021928" label="[02:19:28]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="021938"><span class="nick" style="color:#8dd3c7"><a href="#021938" label="[02:19:38]">&lt;stikonas&gt;</a></span><span class="message">we have used similar hacks in other places</span></div><div class="line" id="022430"><span class="nick" style="color:#234e69"><a href="#022430" label="[02:24:30]">&lt;fossy&gt;</a></span><span class="message">stikonas: also, your checksums need full paths, preferably</span></div><div class="line" id="022439"><span class="nick" style="color:#8dd3c7"><a href="#022439" label="[02:24:39]">&lt;stikonas&gt;</a></span><span class="message">oh, yeah...</span></div><div class="line" id="022443"><span class="nick" style="color:#8dd3c7"><a href="#022443" label="[02:24:43]">&lt;stikonas&gt;</a></span><span class="message">probably this will fail...</span></div><div class="line" id="022447"><span class="nick" style="color:#8dd3c7"><a href="#022447" label="[02:24:47]">&lt;stikonas&gt;</a></span><span class="message">I'm still running local test</span></div><div class="line" id="022458"><span class="nick" style="color:#8dd3c7"><a href="#022458" label="[02:24:58]">&lt;stikonas&gt;</a></span><span class="message">which will finish in a minute</span></div><div class="line" id="022732"><span class="nick" style="color:#8dd3c7"><a href="#022732" label="[02:27:32]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, looks like the build is not fully reproducible</span></div><div class="line" id="022738"><span class="nick" style="color:#234e69"><a href="#022738" label="[02:27:38]">&lt;fossy&gt;</a></span><span class="message">which binaries?</span></div><div class="line" id="022752"><span class="nick" style="color:#8dd3c7"><a href="#022752" label="[02:27:52]">&lt;stikonas&gt;</a></span><span class="message"> /after/bin/as: FAILED and /after/bin/objdump: FAILED</span></div><div class="line" id="022757"><span class="nick" style="color:#8dd3c7"><a href="#022757" label="[02:27:57]">&lt;stikonas&gt;</a></span><span class="message">rest are OK</span></div><div class="line" id="022802"><span class="nick" style="color:#234e69"><a href="#022802" label="[02:28:02]">&lt;fossy&gt;</a></span><span class="message">diffoscope time :D</span></div><div class="line" id="022809"><span class="nick" style="color:#8dd3c7"><a href="#022809" label="[02:28:09]">&lt;stikonas&gt;</a></span><span class="message">well, I'll push full path change for now to checksums</span></div><div class="line" id="022816"><span class="nick" style="color:#234e69"><a href="#022816" label="[02:28:16]">&lt;fossy&gt;</a></span><span class="message">ok, i'll pull and test also</span></div><div class="line" id="022833"><span class="nick" style="color:#8dd3c7"><a href="#022833" label="[02:28:33]">&lt;stikonas&gt;</a></span><span class="message">yeah, if you can find what's wrong...</span></div><div class="line" id="022840"><span class="nick" style="color:#234e69"><a href="#022840" label="[02:28:40]">&lt;fossy&gt;</a></span><span class="message">yeah i'll try</span></div><div class="line" id="022851"><span class="nick" style="color:#8dd3c7"><a href="#022851" label="[02:28:51]">&lt;stikonas&gt;</a></span><span class="message">ok, pushed</span></div><div class="line" id="022856"><span class="nick" style="color:#234e69"><a href="#022856" label="[02:28:56]">&lt;fossy&gt;</a></span><span class="message">thanks</span></div><div class="line" id="023048"><span class="nick" style="color:#8dd3c7"><a href="#023048" label="[02:30:48]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, I'm missing a few other files</span></div><div class="line" id="023052"><span class="nick" style="color:#8dd3c7"><a href="#023052" label="[02:30:52]">&lt;stikonas&gt;</a></span><span class="message"> /after/lib/libintl.a</span></div><div class="line" id="023112"><span class="nick" style="color:#8dd3c7"><a href="#023112" label="[02:31:12]">&lt;stikonas&gt;</a></span><span class="message">and /after/lib/libiberty.a</span></div><div class="line" id="023135"><span class="nick" style="color:#8dd3c7"><a href="#023135" label="[02:31:35]">&lt;stikonas&gt;</a></span><span class="message">there is also /after/lib/libopcodes.{a,la}</span></div><div class="line" id="023149"><span class="nick" style="color:#8dd3c7"><a href="#023149" label="[02:31:49]">&lt;stikonas&gt;</a></span><span class="message">and /after/lib/libbfd.a</span></div><div class="line" id="023201"><span class="nick" style="color:#8dd3c7"><a href="#023201" label="[02:32:01]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think that's it</span></div><div class="line" id="023215"><span class="nick" style="color:#8dd3c7"><a href="#023215" label="[02:32:15]">&lt;stikonas&gt;</a></span><span class="message">I'll checksum those tomorrow...</span></div><div class="line" id="023234"><span class="nick" style="color:#8dd3c7"><a href="#023234" label="[02:32:34]">&lt;stikonas&gt;</a></span><span class="message">since those might be failing too</span></div><div class="line" id="023435"><span class="nick" style="color:#8dd3c7"><a href="#023435" label="[02:34:35]">&lt;stikonas&gt;</a></span><span class="message">enough for today anyway</span></div><div class="line" id="023445"><span class="nick" style="color:#8dd3c7"><a href="#023445" label="[02:34:45]">&lt;stikonas&gt;</a></span><span class="message">autotools done and binutils mostly done</span></div><div class="line" id="023851"><span class="nick" style="color:#6b8072"><a href="#023851" label="[02:38:51]">&lt;Hagfish&gt;</a></span><span class="message">incredible work again</span></div><div class="line" id="024000"><span class="nick" style="color:#6b8072"><a href="#024000" label="[02:40:00]">&lt;Hagfish&gt;</a></span><span class="message">if there were a way of trading shares in developers, i'd be fully invested in stonksinas</span></div><div class="line" id="024015"><span class="nick" style="color:#6b8072"><a href="#024015" label="[02:40:15]">&lt;Hagfish&gt;</a></span><span class="message">well, i'd have a portfolio consisting of all the developers here :)</span></div><div class="line" id="024156"><span class="nick" style="color:#389600"><a href="#024156" label="[02:41:56]">&lt;OriansJ`&gt;</a></span><span class="message">Hagfish: there is a way of trading shares in developers. It is called a vested co-op.</span></div><div class="line" id="024359"><span class="nick" style="color:#389600"><a href="#024359" label="[02:43:59]">&lt;OriansJ`&gt;</a></span><span class="message">or MacArthur style grants</span></div><div class="line" id="024638"><span class="nick" style="color:#389600"><a href="#024638" label="[02:46:38]">&lt;OriansJ`&gt;</a></span><span class="message">or for those more sports minded: fantasy software development</span></div><div class="line" id="025108"><span class="nick" style="color:#389600"><a href="#025108" label="[02:51:08]">&lt;OriansJ`&gt;</a></span><span class="message">in mescc-tools news; debug for ppc64le is now working</span></div><div class="line" id="030109"><span class="nick" style="color:#6c3d55"><a href="#030109" label="[03:01:09]">&lt;plasma41&gt;</a></span><span class="message">Recursively vendored libraries are driving me nuts. All I wanted to do was play the new release of 0AD after making sure I could properly compile it using only system libraries.</span></div><div class="line" id="030309"><span class="nick" style="color:#234e69"><a href="#030309" label="[03:03:09]">&lt;fossy&gt;</a></span><span class="message">hooray ppc64le</span></div><div class="line" id="030317"><span class="nick" style="color:#234e69"><a href="#030317" label="[03:03:17]">&lt;fossy&gt;</a></span><span class="message">plasma41: i know right, i hate them</span></div><div class="line" id="030322"><span class="nick" style="color:#6d2462"><a href="#030322" label="[03:03:22]">*</a></span><span class="message">fossy shakes fist at go and rust</span></div><div class="line" id="030505"><span class="nick" style="color:#6c3d55"><a href="#030505" label="[03:05:05]">&lt;plasma41&gt;</a></span><span class="message">fossy: I haven't even gotten to the flying circus that is Spidermonkey yet. I'm still only wrestling with premake.</span></div><div class="line" id="030646"><span class="nick" style="color:#6c3d55"><a href="#030646" label="[03:06:46]">&lt;plasma41&gt;</a></span><span class="message">premake5 comes bundled with curl, libzip, lua, mbedtls, zlib.</span></div><div class="line" id="031234"><span class="nick" style="color:#6c3d55"><a href="#031234" label="[03:12:34]">&lt;plasma41&gt;</a></span><span class="message">I'm using Devuan, which doesn't have premake5 packaged yet, so as a starting point I took a look at the Guix premake5 package definition. What I found was that Guix just uses the bundled libraries instead of properly bootstrapping them. (╯°□°）╯︵ ┻━┻</span></div><div class="line" id="031338"><span class="nick" style="color:#6c3d55"><a href="#031338" label="[03:13:38]">&lt;plasma41&gt;</a></span><span class="message">Reproducible != Bootstrappable</span></div><div class="line" id="031519"><span class="nick" style="color:#389600"><a href="#031519" label="[03:15:19]">&lt;OriansJ`&gt;</a></span><span class="message">well yes, Guix cheats alot because it is less work for them.</span></div><div class="line" id="031602"><span class="nick" style="color:#389600"><a href="#031602" label="[03:16:02]">&lt;OriansJ`&gt;</a></span><span class="message">But when we unpack all that shit for them and wrap it up nicely for them, they will use it.</span></div><div class="line" id="031847"><span class="nick" style="color:#6c3d55"><a href="#031847" label="[03:18:47]">&lt;plasma41&gt;</a></span><span class="message">OriansJ`: Which is really sad to see when at the same time by contrast Guix provides a full bootstrap chain for the ouroboros that is rust.</span></div><div class="line" id="032022"><span class="nick" style="color:#389600"><a href="#032022" label="[03:20:22]">&lt;OriansJ`&gt;</a></span><span class="message">plasma41: where do you think that bootstrap chain came from? Developers here did al the leg work. Because if it wasn't for us, it would be just like the GHC situation in Guix. Just one big fat binary blob</span></div><div class="line" id="032047"><span class="nick" style="color:#389600"><a href="#032047" label="[03:20:47]">&lt;OriansJ`&gt;</a></span><span class="message">Same for Java</span></div><div class="line" id="032053"><span class="nick" style="color:#6c3d55"><a href="#032053" label="[03:20:53]">&lt;plasma41&gt;</a></span><span class="message">Indeed, and I'm trying to unwind the madness, but it's so frustrating when I just keep finding layer upon layer.</span></div><div class="line" id="032116"><span class="nick" style="color:#389600"><a href="#032116" label="[03:21:16]">&lt;OriansJ`&gt;</a></span><span class="message">all of the Guix developers who care about bootstrapping are here.</span></div><div class="line" id="032207"><span class="nick" style="color:#389600"><a href="#032207" label="[03:22:07]">&lt;OriansJ`&gt;</a></span><span class="message">and sadly, we are outnumbered by those who just want their toy or app or feature.</span></div><div class="line" id="032232"><span class="nick" style="color:#389600"><a href="#032232" label="[03:22:32]">&lt;OriansJ`&gt;</a></span><span class="message">So there is eternally churn to keep things bootstrappable</span></div><div class="line" id="032421"><span class="nick" style="color:#6c3d55"><a href="#032421" label="[03:24:21]">&lt;plasma41&gt;</a></span><span class="message">OriansJ`: Don't get me wrong, I fully credit you and janneke and fossy and the others in this channel for Guix being at the level of bootrappability that it is. Y'all have done and continue to do amazing work</span></div><div class="line" id="032605"><span class="nick" style="color:#389600"><a href="#032605" label="[03:26:05]">&lt;OriansJ`&gt;</a></span><span class="message">plasma41: and I am sorry that despite everything we are slowly getting further behind.</span></div><div class="line" id="032705"><span class="nick" style="color:#389600"><a href="#032705" label="[03:27:05]">&lt;OriansJ`&gt;</a></span><span class="message">substitues are too easy of a default and hide all of these bootstrapping details from guix users.</span></div><div class="line" id="033147"><span class="nick" style="color:#389600"><a href="#033147" label="[03:31:47]">&lt;OriansJ`&gt;</a></span><span class="message">So most guix developers skip bootstrap chain work that would have been easy but instead punt it to those of us who care and I am sorry that you are stuck working on it plasma41. I just hope you upstream the work into Guix so that others don't deal with that same pain too.</span></div><div class="line" id="033212"><span class="nick" style="color:#6c3d55"><a href="#033212" label="[03:32:12]">&lt;plasma41&gt;</a></span><span class="message">It's just a bit disheartening to look in Guix and see amazing achievements in bootstrapping like Rust, Java, and Haskell right next to packages like fpc (Free Pascal) and premake5.</span></div><div class="line" id="033221"><span class="nick" style="color:#234e69"><a href="#033221" label="[03:32:21]">&lt;fossy&gt;</a></span><span class="message">plasma41: bundled binaries, or bundled source?</span></div><div class="line" id="033237"><span class="nick" style="color:#389600"><a href="#033237" label="[03:32:37]">&lt;OriansJ`&gt;</a></span><span class="message">fossy: bundled binaries</span></div><div class="line" id="033250"><span class="nick" style="color:#234e69"><a href="#033250" label="[03:32:50]">&lt;fossy&gt;</a></span><span class="message">that is disgusting</span></div><div class="line" id="033254"><span class="nick" style="color:#234e69"><a href="#033254" label="[03:32:54]">&lt;fossy&gt;</a></span><span class="message">:P</span></div><div class="line" id="033316"><span class="nick" style="color:#389600"><a href="#033316" label="[03:33:16]">&lt;OriansJ`&gt;</a></span><span class="message">and more frequently &quot;generated source&quot;</span></div><div class="line" id="033321"><span class="nick" style="color:#234e69"><a href="#033321" label="[03:33:21]">&lt;fossy&gt;</a></span><span class="message">bundled source gets me annoyed slightly but bundled binaries make me very annoyed</span></div><div class="line" id="033334"><span class="nick" style="color:#234e69"><a href="#033334" label="[03:33:34]">&lt;fossy&gt;</a></span><span class="message">plasma41: free pascal is very hard</span></div><div class="line" id="033337"><span class="nick" style="color:#389600"><a href="#033337" label="[03:33:37]">&lt;OriansJ`&gt;</a></span><span class="message">which honestly shouldn't even be called source</span></div><div class="line" id="033338"><span class="nick" style="color:#6c3d55"><a href="#033338" label="[03:33:38]">&lt;plasma41&gt;</a></span><span class="message">fossy: bundled sources in premake; bundled binaries in fpc</span></div><div class="line" id="033352"><span class="nick" style="color:#234e69"><a href="#033352" label="[03:33:52]">&lt;fossy&gt;</a></span><span class="message">plasma41: someone here was looking into pascal</span></div><div class="line" id="033403"><span class="nick" style="color:#234e69"><a href="#033403" label="[03:34:03]">&lt;fossy&gt;</a></span><span class="message">the best route seems to be to go back to the good old days of GCC Pascal</span></div><div class="line" id="033408"><span class="nick" style="color:#234e69"><a href="#033408" label="[03:34:08]">&lt;fossy&gt;</a></span><span class="message">and attemtp that to bootstrap fpc</span></div><div class="line" id="033422"><span class="nick" style="color:#234e69"><a href="#033422" label="[03:34:22]">&lt;fossy&gt;</a></span><span class="message">OriansJ`: i agree 100% on generated source</span></div><div class="line" id="033443"><span class="nick" style="color:#389600"><a href="#033443" label="[03:34:43]">&lt;OriansJ`&gt;</a></span><span class="message">I vote we call &quot;generated source&quot; cheat-blobs</span></div><div class="line" id="033452"><span class="nick" style="color:#234e69"><a href="#033452" label="[03:34:52]">&lt;fossy&gt;</a></span><span class="message">aye</span></div><div class="line" id="033553"><span class="nick" style="color:#6c3d55"><a href="#033553" label="[03:35:53]">&lt;plasma41&gt;</a></span><span class="message">Regenerating generated source is far too often much less straightforward than it should be.</span></div><div class="line" id="033633"><span class="nick" style="color:#389600"><a href="#033633" label="[03:36:33]">&lt;OriansJ`&gt;</a></span><span class="message">plasma41: especially because sometimes it doesn't actually correspond with the cheat-blob at all</span></div><div class="line" id="033718"><span class="nick" style="color:#6c3d55"><a href="#033718" label="[03:37:18]">&lt;plasma41&gt;</a></span><span class="message">Generated then hand-edited. :-/</span></div><div class="line" id="033746"><span class="nick" style="color:#389600"><a href="#033746" label="[03:37:46]">&lt;OriansJ`&gt;</a></span><span class="message">or generated years ago and never updated to match the &quot;source code&quot;</span></div><div class="line" id="033807"><span class="nick" style="color:#389600"><a href="#033807" label="[03:38:07]">&lt;OriansJ`&gt;</a></span><span class="message">or generated based on source that isn't included at all</span></div><div class="line" id="033910"><span class="nick" style="color:#389600"><a href="#033910" label="[03:39:10]">&lt;OriansJ`&gt;</a></span><span class="message">or generated from malicious sources that are never shown but we are told it matches these sources over here</span></div><div class="line" id="033928"><span class="nick" style="color:#389600"><a href="#033928" label="[03:39:28]">&lt;OriansJ`&gt;</a></span><span class="message">only for us to later discover: that too was a lie</span></div><div class="line" id="034016"><span class="nick" style="color:#6c3d55"><a href="#034016" label="[03:40:16]">&lt;plasma41&gt;</a></span><span class="message">&quot;It's reproducible though. I can use the cp command to prove it.&quot; /s</span></div><div class="line" id="034037"><span class="nick" style="color:#6b8072"><a href="#034037" label="[03:40:37]">&lt;Hagfish&gt;</a></span><span class="message">OriansJ`: perhaps there is a term like &quot;compiler larping&quot;, based on your funny comment from before</span></div><div class="line" id="034233"><span class="nick" style="color:#389600"><a href="#034233" label="[03:42:33]">&lt;OriansJ`&gt;</a></span><span class="message">plasma41: or It's reproducible (on my system) because we just copy the system copy of GCC</span></div><div class="line" id="034403"><span class="nick" style="color:#389600"><a href="#034403" label="[03:44:03]">&lt;OriansJ`&gt;</a></span><span class="message">Hagfish: well traditionally the phrase around here would be: Blowing smoke out of one ass. In regards to pretending to do something you are actually not.</span></div><div class="line" id="034420"><span class="nick" style="color:#389600"><a href="#034420" label="[03:44:20]">&lt;OriansJ`&gt;</a></span><span class="message">^one^one's^</span></div><div class="line" id="034447"><span class="nick" style="color:#389600"><a href="#034447" label="[03:44:47]">&lt;OriansJ`&gt;</a></span><span class="message">But somehow I don't see that as being catchy enough</span></div><div class="line" id="034527"><span class="nick" style="color:#6b8072"><a href="#034527" label="[03:45:27]">&lt;Hagfish&gt;</a></span><span class="message">it would be nicer to have a one-word term to describe the fakeness of other approaches, which is why i liked your choice of &quot;larping&quot; so much</span></div><div class="line" id="034557"><span class="nick" style="color:#6b8072"><a href="#034557" label="[03:45:57]">&lt;Hagfish&gt;</a></span><span class="message">i don't want to get political, but there are terms like &quot;alternative facts&quot; and &quot;fake news&quot; and &quot;sharpiegate&quot;</span></div><div class="line" id="034631"><span class="nick" style="color:#6b8072"><a href="#034631" label="[03:46:31]">&lt;Hagfish&gt;</a></span><span class="message">perhaps &quot;kayfabe&quot; is applicable</span></div><div class="line" id="034954"><span class="nick" style="color:#389600"><a href="#034954" label="[03:49:54]">&lt;OriansJ`&gt;</a></span><span class="message">Hagfish: how about phantom-code</span></div><div class="line" id="035220"><span class="nick" style="color:#389600"><a href="#035220" label="[03:52:20]">&lt;OriansJ`&gt;</a></span><span class="message">bootstrap-bunk</span></div><div class="line" id="035235"><span class="nick" style="color:#389600"><a href="#035235" label="[03:52:35]">&lt;OriansJ`&gt;</a></span><span class="message">binary-bull</span></div><div class="line" id="035502"><span class="nick" style="color:#389600"><a href="#035502" label="[03:55:02]">&lt;OriansJ`&gt;</a></span><span class="message">Jabberwocky</span></div><div class="line" id="035638"><span class="nick" style="color:#389600"><a href="#035638" label="[03:56:38]">&lt;OriansJ`&gt;</a></span><span class="message">Logorrhoea</span></div><div class="line" id="035721"><span class="nick" style="color:#389600"><a href="#035721" label="[03:57:21]">&lt;OriansJ`&gt;</a></span><span class="message">software-herpes</span></div><div class="line" id="040400"><span class="nick" style="color:#389600"><a href="#040400" label="[04:04:00]">&lt;OriansJ`&gt;</a></span><span class="message">developer kipple</span></div><div class="line" id="040600"><span class="nick" style="color:#389600"><a href="#040600" label="[04:06:00]">&lt;OriansJ`&gt;</a></span><span class="message">it does kinda match the definition of kipple: <a rel="nofollow" href="http://technovelgy.com/ct/content.asp?Bnum=128">http://technovelgy.com/ct/content.asp?Bnum=128</a> </span></div><div class="line" id="041358"><span class="nick" style="color:#6b8072"><a href="#041358" label="[04:13:58]">&lt;Hagfish&gt;</a></span><span class="message">i hadn't heard of &quot;kipple&quot; before</span></div><div class="line" id="041420"><span class="nick" style="color:#6b8072"><a href="#041420" label="[04:14:20]">&lt;Hagfish&gt;</a></span><span class="message">&quot;phantom code&quot; kinda works, because you're not sure whether the source code really exists or not</span></div><div class="line" id="041504"><span class="nick" style="color:#6b8072"><a href="#041504" label="[04:15:04]">&lt;Hagfish&gt;</a></span><span class="message">schrodingsource?</span></div><div class="line" id="041633"><span class="nick" style="color:#6b8072"><a href="#041633" label="[04:16:33]">&lt;Hagfish&gt;</a></span><span class="message">i'm trying to think of a type of monster that convinces you to trust it, and then reveals it was never really there, or something</span></div><div class="line" id="041644"><span class="nick" style="color:#6b8072"><a href="#041644" label="[04:16:44]">&lt;Hagfish&gt;</a></span><span class="message">like a shapeshifter, or a mimic</span></div><div class="line" id="043319"><span class="nick" style="color:#6b8072"><a href="#043319" label="[04:33:19]">&lt;Hagfish&gt;</a></span><span class="message">maybe &quot;chort-code&quot;: <a rel="nofollow" href="https://en.wikipedia.org/wiki/Chort">https://en.wikipedia.org/wiki/Chort</a> </span></div><div class="line" id="043329"><span class="nick" style="color:#6b8072"><a href="#043329" label="[04:33:29]">&lt;Hagfish&gt;</a></span><span class="message">&quot; Čert is trying to bring evil characters to hell, he often helps or befriends heroes in this process and gives them various magical items and treasures. &quot;</span></div><div class="line" id="084414"><span class="nick">***</span><span class="message notice">efraim_ is now known as efraim</span></div><div class="line" id="090328"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="131729"><span class="nick">***</span><span class="message notice">terpri_ is now known as terpri</span></div><div class="line" id="143033"><span class="nick" style="color:#8dd3c7"><a href="#143033" label="[14:30:33]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, that objdump and as non-reproducibility issue is actually just sha256sum choking on 2MB files</span></div><div class="line" id="144721"><span class="nick" style="color:#6b8072"><a href="#144721" label="[14:47:21]">&lt;Hagfish&gt;</a></span><span class="message">what's special about 2MB files?</span></div><div class="line" id="144846"><span class="nick" style="color:#8dd3c7"><a href="#144846" label="[14:48:46]">&lt;stikonas&gt;</a></span><span class="message">Hagfish: it breaks gforce_de1977's sha256sum program</span></div><div class="line" id="144859"><span class="nick" style="color:#8dd3c7"><a href="#144859" label="[14:48:59]">&lt;stikonas&gt;</a></span><span class="message">since we are not using sha256sum from binutils yet</span></div><div class="line" id="145540"><span class="nick" style="color:#8dd3c7"><a href="#145540" label="[14:55:40]">&lt;stikonas&gt;</a></span><span class="message">Hagfish: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/sha-2-61555d/patches/frontend.patch#L20">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/sha-2-61555d/patches/frontend.patch#L20</a> </span></div><div class="line" id="145548"><span class="nick" style="color:#8dd3c7"><a href="#145548" label="[14:55:48]">&lt;stikonas&gt;</a></span><span class="message">maybe I can just bump the limit...</span></div><div class="line" id="145627"><span class="nick" style="color:#d9d9d9"><a href="#145627" label="[14:56:27]">&lt;bauen1&gt;</a></span><span class="message">sha256 could also be used for source tar files, so a non-existant limit would probably be best ?</span></div><div class="line" id="145835"><span class="nick" style="color:#8dd3c7"><a href="#145835" label="[14:58:35]">&lt;stikonas&gt;</a></span><span class="message">bauen1: that's not what we use sha256sum for...</span></div><div class="line" id="145850"><span class="nick" style="color:#8dd3c7"><a href="#145850" label="[14:58:50]">&lt;stikonas&gt;</a></span><span class="message">but yeah, we should fix the limit...</span></div><div class="line" id="145919"><span class="nick" style="color:#8dd3c7"><a href="#145919" label="[14:59:19]">&lt;stikonas&gt;</a></span><span class="message">at the moment we only checksum tars outside live-bootstrap</span></div><div class="line" id="145933"><span class="nick" style="color:#8dd3c7"><a href="#145933" label="[14:59:33]">&lt;stikonas&gt;</a></span><span class="message">and inside it we checksum binaries/libraries</span></div><div class="line" id="145949"><span class="nick" style="color:#8dd3c7"><a href="#145949" label="[14:59:49]">&lt;stikonas&gt;</a></span><span class="message">but yeah, maybe eventually we can checksum source tar files too</span></div><div class="line" id="150009"><span class="nick" style="color:#8dd3c7"><a href="#150009" label="[15:00:09]">&lt;stikonas&gt;</a></span><span class="message">thers is no reason why not even though we don't do it right now</span></div><div class="line" id="150730"><span class="nick" style="color:#d9d9d9"><a href="#150730" label="[15:07:30]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i mean, having sha256 available (for any amount of data you need) gives you one cryptographic primitive that can be used to &quot;skip&quot; reviewing code if you've already reviewed it once, and it is a lot less code to audit than coreutils</span></div><div class="line" id="152528"><span class="nick" style="color:#6b8072"><a href="#152528" label="[15:25:28]">&lt;Hagfish&gt;</a></span><span class="message">thanks for the link.  it seems that it doesn't actually check that the file fits within 2MB, and nor does it output an error code/message to the user if that assumption breaks</span></div><div class="line" id="152633"><span class="nick" style="color:#6b8072"><a href="#152633" label="[15:26:33]">&lt;Hagfish&gt;</a></span><span class="message">i can't work out what would need to change for it to read an arbitrary amount of data in</span></div><div class="line" id="152831"><span class="nick" style="color:#d9d9d9"><a href="#152831" label="[15:28:31]">&lt;bauen1&gt;</a></span><span class="message">also using fgetc when you have a fixed buffer is quite not as efficient as it could be</span></div><div class="line" id="153104"><span class="nick" style="color:#d9d9d9"><a href="#153104" label="[15:31:04]">&lt;bauen1&gt;</a></span><span class="message">might need to adjust / fork sha-2 upstream, <a rel="nofollow" href="https://github.com/amosnier/sha-2/blob/master/sha-256.c#L116">https://github.com/amosnier/sha-2/blob/master/sha-256.c#L116</a>  what you want to do is init the sha2 state, and then operate on &quot;chunks&quot; for as long as you have input, at the end add padding if necessary and get the hash</span></div><div class="line" id="153344"><span class="nick" style="color:#6b8072"><a href="#153344" label="[15:33:44]">&lt;Hagfish&gt;</a></span><span class="message">yeah, that sounds right</span></div><div class="line" id="165238"><span class="nick" style="color:#8dd3c7"><a href="#165238" label="[16:52:38]">&lt;stikonas&gt;</a></span><span class="message">it might be simple to split executables that we want to hash into chunks using &quot;split&quot;</span></div><div class="line" id="165417"><span class="nick" style="color:#6b8072"><a href="#165417" label="[16:54:17]">&lt;Hagfish&gt;</a></span><span class="message">would the hashing code call that directly, or would the split happen first and then the parts specified in order when calling the hash function?</span></div><div class="line" id="165518"><span class="nick" style="color:#6b8072"><a href="#165518" label="[16:55:18]">&lt;Hagfish&gt;</a></span><span class="message">the latter would sort of be backwards compatible, if you wanted to preserve the behaviour of it giving the wrong answer on big files (but that would be weird)</span></div><div class="line" id="165610"><span class="nick" style="color:#8dd3c7"><a href="#165610" label="[16:56:10]">&lt;stikonas&gt;</a></span><span class="message">another option is to backport sha256sum from coreutils 6</span></div><div class="line" id="165621"><span class="nick" style="color:#8dd3c7"><a href="#165621" label="[16:56:21]">&lt;stikonas&gt;</a></span><span class="message">that might be the best option...</span></div><div class="line" id="165629"><span class="nick" style="color:#8dd3c7"><a href="#165629" label="[16:56:29]">&lt;stikonas&gt;</a></span><span class="message">we have coreutils 5...</span></div><div class="line" id="165645"><span class="nick" style="color:#8dd3c7"><a href="#165645" label="[16:56:45]">&lt;stikonas&gt;</a></span><span class="message">so hopefully patch applies without too much trouble</span></div><div class="line" id="165751"><span class="nick" style="color:#8dd3c7"><a href="#165751" label="[16:57:51]">&lt;stikonas&gt;</a></span><span class="message">hmm, gnu.org is donw...</span></div><div class="line" id="165825"><span class="nick" style="color:#d9d9d9"><a href="#165825" label="[16:58:25]">&lt;bauen1&gt;</a></span><span class="message">stikonas: but you can have sha-2 a lot sooner than coreutils ?</span></div><div class="line" id="170011"><span class="nick" style="color:#8dd3c7"><a href="#170011" label="[17:00:11]">&lt;stikonas&gt;</a></span><span class="message">well, we can use current broke implementation from amosnier</span></div><div class="line" id="170126"><span class="nick" style="color:#d9d9d9"><a href="#170126" label="[17:01:26]">&lt;bauen1&gt;</a></span><span class="message">i'm wondering why the sha2 single file implementation doesn't expose &quot;sha2_init&quot;, &quot;sha2_dowork&quot;, &quot;sha2_gethash&quot; or something like that, might be a bit more complicated but then you've covered basically every usecase</span></div><div class="line" id="200657"><span class="nick" style="color:#bc80bd"><a href="#200657" label="[20:06:57]">&lt;nckx&gt;</a></span><span class="message">‘all of the Guix developers who care about bootstrapping are here’ is unprovoked nonsense, OriansJ`.</span></div><div class="line" id="200719"><span class="nick" style="color:#bc80bd"><a href="#200719" label="[20:07:19]">&lt;nckx&gt;</a></span><span class="message">Conversely, you've made 0 documented effort to report the problem with premake5 anywhere I can find it, yet find the time to rant about it here.</span></div><div class="line" id="200727"><span class="nick" style="color:#bc80bd"><a href="#200727" label="[20:07:27]">&lt;nckx&gt;</a></span><span class="message">Colour me unimpressed with your ‘leg work’ here.</span></div><div class="line" id="200928"><span class="nick" style="color:#bc80bd"><a href="#200928" label="[20:09:28]">&lt;nckx&gt;</a></span><span class="message">I hope you find the time to do something more productive.  As you say: it's easy work!</span></div><div class="line" id="203524"><span class="nick" style="color:#3c5b35"><a href="#203524" label="[20:35:24]">&lt;pder&gt;</a></span><span class="message">stikonas: great work on autotools and binutils.  I'll have bash cleaned up shortly and I'll rebase it on top of binutils for now</span></div><div class="line" id="205132"><span class="nick" style="color:#af8d2f"><a href="#205132" label="[20:51:32]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, I still need sha256...</span></div><div class="line" id="205148"><span class="nick" style="color:#af8d2f"><a href="#205148" label="[20:51:48]">&lt;stikonas[m]&gt;</a></span><span class="message">Trying to build just that from coreutils 6</span></div><div class="line" id="210837"><span class="nick" style="color:#389600"><a href="#210837" label="[21:08:37]">&lt;OriansJ`&gt;</a></span><span class="message">nckx: you are absolutely right. I don't document problems for guix anymore. I just document solutions when I find time to make them. Which I figure is more productive use of my time.</span></div><div class="line" id="210958"><span class="nick" style="color:#389600"><a href="#210958" label="[21:09:58]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: if you look at my last paste, it is a tweak to gforce_de1977's sha256sum program to read the files before allocating a buffer to hold their contents (and added support for sha256sum's -c file behavior)</span></div><div class="line" id="211302"><span class="nick" style="color:#389600"><a href="#211302" label="[21:13:02]">&lt;OriansJ`&gt;</a></span><span class="message">nckx: as for the existence of Guix developers who care about bootstrapping that are not here; you are right it might be entirely unprovoked nonsense. But it is just an observation from my limited experiennce; which very much may be wrong.</span></div><div class="line" id="212159"><span class="nick" style="color:#389600"><a href="#212159" label="[21:21:59]">&lt;civodul&gt;</a></span><span class="message">definitely :-)</span></div><div class="line" id="212212"><span class="nick" style="color:#389600"><a href="#212212" label="[21:22:12]">&lt;civodul&gt;</a></span><span class="message">again, i don't see the need for an us/them kind of discourse</span></div><div class="line" id="212315"><span class="nick">***</span><span class="message notice">Noisytoot is now known as [[</span></div><div class="line" id="212321"><span class="nick">***</span><span class="message notice">[[ is now known as Noisytoot</span></div><div class="line" id="213150"><span class="nick" style="color:#8dd3c7"><a href="#213150" label="[21:31:50]">&lt;stikonas&gt;</a></span><span class="message">OriansJ`: thanks, although I also got sha256sum from coreutils now</span></div><div class="line" id="213152"><span class="nick" style="color:#389600"><a href="#213152" label="[21:31:52]">&lt;OriansJ`&gt;</a></span><span class="message">civodul: exactly we have shared goals and benefit from our mutual cooperation.</span></div><div class="line" id="213254"><span class="nick" style="color:#389600"><a href="#213254" label="[21:32:54]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: well that is even better. Good job ^_^</span></div><div class="line" id="213329"><span class="nick" style="color:#8dd3c7"><a href="#213329" label="[21:33:29]">&lt;stikonas&gt;</a></span><span class="message">well, wasn't too hard, since I am only building one single binary from coreutils 6.3... and was able to reuse most of the stuff from 5.0</span></div><div class="line" id="213840"><span class="nick" style="color:#234e69"><a href="#213840" label="[21:38:40]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; maybe I can just bump the limit...</span></div><div class="line" id="213856"><span class="nick" style="color:#234e69"><a href="#213856" label="[21:38:56]">&lt;fossy&gt;</a></span><span class="message">yep, do that</span></div><div class="line" id="213904"><span class="nick" style="color:#234e69"><a href="#213904" label="[21:39:04]">&lt;fossy&gt;</a></span><span class="message">perhaps 10m</span></div><div class="line" id="214039"><span class="nick" style="color:#8dd3c7"><a href="#214039" label="[21:40:39]">&lt;stikonas&gt;</a></span><span class="message">fossy: it didn't work</span></div><div class="line" id="214045"><span class="nick" style="color:#234e69"><a href="#214045" label="[21:40:45]">&lt;fossy&gt;</a></span><span class="message">regarding guix, idk how many ppl here are guix devs</span></div><div class="line" id="214050"><span class="nick" style="color:#234e69"><a href="#214050" label="[21:40:50]">&lt;fossy&gt;</a></span><span class="message">stikonas: huh</span></div><div class="line" id="214100"><span class="nick" style="color:#8dd3c7"><a href="#214100" label="[21:41:00]">&lt;stikonas&gt;</a></span><span class="message">just bumping the limit somehow didn't work for me...</span></div><div class="line" id="214101"><span class="nick" style="color:#234e69"><a href="#214101" label="[21:41:01]">&lt;fossy&gt;</a></span><span class="message">my local diffoscope said they were identical</span></div><div class="line" id="214114"><span class="nick" style="color:#8dd3c7"><a href="#214114" label="[21:41:14]">&lt;stikonas&gt;</a></span><span class="message">doesn't matter... I've got coreutils sha256sum now</span></div><div class="line" id="214120"><span class="nick" style="color:#8dd3c7"><a href="#214120" label="[21:41:20]">&lt;stikonas&gt;</a></span><span class="message">so that will work</span></div><div class="line" id="214131"><span class="nick" style="color:#234e69"><a href="#214131" label="[21:41:31]">&lt;fossy&gt;</a></span><span class="message">stikonas: i wonder if theres an overflow of an int or smth</span></div><div class="line" id="214139"><span class="nick" style="color:#8dd3c7"><a href="#214139" label="[21:41:39]">&lt;stikonas&gt;</a></span><span class="message">could be...</span></div><div class="line" id="214152"><span class="nick" style="color:#8dd3c7"><a href="#214152" label="[21:41:52]">&lt;stikonas&gt;</a></span><span class="message">that's why I'm more keen on using old gnu tools</span></div><div class="line" id="214203"><span class="nick" style="color:#8dd3c7"><a href="#214203" label="[21:42:03]">&lt;stikonas&gt;</a></span><span class="message">than custom software</span></div><div class="line" id="214214"><span class="nick" style="color:#8dd3c7"><a href="#214214" label="[21:42:14]">&lt;stikonas&gt;</a></span><span class="message">especially with cryptograpy</span></div><div class="line" id="214218"><span class="nick" style="color:#8dd3c7"><a href="#214218" label="[21:42:18]">&lt;stikonas&gt;</a></span><span class="message">*cryptography</span></div><div class="line" id="214232"><span class="nick" style="color:#234e69"><a href="#214232" label="[21:42:32]">&lt;fossy&gt;</a></span><span class="message">anyway idk how many ppl are guix Devs but I extremely doubt any bootstrapping project would have got any traction without lots of support from all devs</span></div><div class="line" id="214345"><span class="nick" style="color:#8dd3c7"><a href="#214345" label="[21:43:45]">&lt;stikonas&gt;</a></span><span class="message">yeah, although strictly speaking those guix devs that are in this channel can't take that comment personally, since by definition they are in this channel and thus excluded</span></div><div class="line" id="214415"><span class="nick" style="color:#8dd3c7"><a href="#214415" label="[21:44:15]">&lt;stikonas&gt;</a></span><span class="message">(from the critisism of that comment)</span></div><div class="line" id="214508"><span class="nick" style="color:#8dd3c7"><a href="#214508" label="[21:45:08]">&lt;stikonas&gt;</a></span><span class="message">but yeah, I think bootstrapping wouldn't have been that far without support from all devs...</span></div><div class="line" id="214514"><span class="nick" style="color:#389600"><a href="#214514" label="[21:45:14]">&lt;OriansJ`&gt;</a></span><span class="message">well Guix devs are the majority, followed by nix and Debian.</span></div><div class="line" id="214531"><span class="nick" style="color:#389600"><a href="#214531" label="[21:45:31]">&lt;OriansJ`&gt;</a></span><span class="message">But the majority people here are not Distro Devs</span></div><div class="line" id="231509"><span class="nick" style="color:#8dd3c7"><a href="#231509" label="[23:15:09]">&lt;stikonas&gt;</a></span><span class="message">fossy: pder: this should now pass <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/54">https://github.com/fosslinux/live-bootstrap/pull/54</a>  (binutils)</span></div><div class="line" id="231530"><span class="nick" style="color:#8dd3c7"><a href="#231530" label="[23:15:30]">&lt;stikonas&gt;</a></span><span class="message">and hopefully I've got all generated files...</span></div><div class="line" id="231620"><span class="nick" style="color:#8dd3c7"><a href="#231620" label="[23:16:20]">&lt;stikonas&gt;</a></span><span class="message">argh, actually no</span></div><div class="line" id="231706"><span class="nick" style="color:#8dd3c7"><a href="#231706" label="[23:17:06]">&lt;stikonas&gt;</a></span><span class="message">hopefully will just work, but we have a lot of .l files</span></div><div class="line" id="232459"><span class="nick" style="color:#bc80bd"><a href="#232459" label="[23:24:59]">&lt;nckx&gt;</a></span><span class="message">OriansJ`: Hi!  &lt;I don't document problems for guix anymore. I just document solutions [...] more productive use of my time&gt;  That's reasonable.  Your time is yours alone.</span></div><div class="line" id="232514"><span class="nick" style="color:#bc80bd"><a href="#232514" label="[23:25:14]">&lt;nckx&gt;</a></span><span class="message">I'm just pointing out you spent it doing the former, not the latter.</span></div><div class="line" id="232554"><span class="nick" style="color:#bc80bd"><a href="#232554" label="[23:25:54]">&lt;nckx&gt;</a></span><span class="message">Complaining about the problem here to make a point, without making anyone who could actually fix it aware of it.</span></div><div class="line" id="232640"><span class="nick" style="color:#bc80bd"><a href="#232640" label="[23:26:40]">&lt;nckx&gt;</a></span><span class="message">Like we're not on the same team.</span></div><div class="line" id="233134"><span class="nick" style="color:#6d2462"><a href="#233134" label="[23:31:34]">*</a></span><span class="message">vagrantc hedges bets and plays on several teams :)</span></div><div class="line" id="233327"><span class="nick" style="color:#8dd3c7"><a href="#233327" label="[23:33:27]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, fixed binutils build now, luckily everything just worked, pushed PR now</span></div><div class="line" id="233542"><span class="nick" style="color:#bc80bd"><a href="#233542" label="[23:35:42]">&lt;nckx&gt;</a></span><span class="message">vagrantc: And, weirdly, they all seem to be winning.  How can this be?  🌈 magic.</span></div><div class="line" id="233822"><span class="nick" style="color:#8dd3c7"><a href="#233822" label="[23:38:22]">&lt;stikonas&gt;</a></span><span class="message">nckx: anyway, if you want to be informed, live-bootstrap now has some useful tricks that might be nice to adopt in guix (at least in longer term)</span></div><div class="line" id="233840"><span class="nick" style="color:#bc80bd"><a href="#233840" label="[23:38:40]">&lt;nckx&gt;</a></span><span class="message">Yeah, I heard, thanks!</span></div><div class="line" id="233917"><span class="nick" style="color:#8dd3c7"><a href="#233917" label="[23:39:17]">&lt;stikonas&gt;</a></span><span class="message">but yes, without guix it would have been much harder to do that. live-bootstrap borrowed a lot from guix bootstrap</span></div><div class="line" id="234014"><span class="nick" style="color:#bc80bd"><a href="#234014" label="[23:40:14]">&lt;nckx&gt;</a></span><span class="message">From my (super limited) understanding it seems more orthogonal, but that's good too.</span></div><div class="line" id="234026"><span class="nick" style="color:#bc80bd"><a href="#234026" label="[23:40:26]">&lt;nckx&gt;</a></span><span class="message">We're talking about &lt;<a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap">https://github.com/fosslinux/live-bootstrap</a>&gt;,  right?</span></div><div class="line" id="234037"><span class="nick" style="color:#8dd3c7"><a href="#234037" label="[23:40:37]">&lt;stikonas&gt;</a></span><span class="message">nckx: yes</span></div><div class="line" id="234042"><span class="nick" style="color:#8dd3c7"><a href="#234042" label="[23:40:42]">&lt;stikonas&gt;</a></span><span class="message">well, it is a bit orthogonal</span></div><div class="line" id="234052"><span class="nick" style="color:#8dd3c7"><a href="#234052" label="[23:40:52]">&lt;stikonas&gt;</a></span><span class="message">but we are also bootstrapping gcc and friends</span></div><div class="line" id="234104"><span class="nick" style="color:#8dd3c7"><a href="#234104" label="[23:41:04]">&lt;stikonas&gt;</a></span><span class="message">and tried to do it in a bit more strict way</span></div><div class="line" id="234127"><span class="nick" style="color:#8dd3c7"><a href="#234127" label="[23:41:27]">&lt;stikonas&gt;</a></span><span class="message">e.g. no pregenerated files (e.g. bison or  lex generated files)</span></div><div class="line" id="234152"><span class="nick" style="color:#8dd3c7"><a href="#234152" label="[23:41:52]">&lt;stikonas&gt;</a></span><span class="message">(actually not even using configure scripts until we manage to regenerate them)</span></div><div class="line" id="234545"><span class="nick" style="color:#bc80bd"><a href="#234545" label="[23:45:45]">&lt;nckx&gt;</a></span><span class="message">Right.</span></div><div class="line" id="234654"><span class="nick" style="color:#bc80bd"><a href="#234654" label="[23:46:54]">&lt;nckx&gt;</a></span><span class="message">We all agree that should be nice to do in Guix as well, it's merely a lot of work.</span></div><div class="line" id="234710"><span class="nick" style="color:#8dd3c7"><a href="#234710" label="[23:47:10]">&lt;stikonas&gt;</a></span><span class="message">yes, I guess so...</span></div><div class="line" id="234728"><span class="nick" style="color:#8dd3c7"><a href="#234728" label="[23:47:28]">&lt;stikonas&gt;</a></span><span class="message">although, there is an example to follow now. Just as we followed Guix too :)</span></div><div class="line" id="234738"><span class="nick" style="color:#bc80bd"><a href="#234738" label="[23:47:38]">&lt;nckx&gt;</a></span><span class="message">So I'm very happy that someone (you?) is demonstrating that it's feasible.</span></div><div class="line" id="234757"><span class="nick" style="color:#8dd3c7"><a href="#234757" label="[23:47:57]">&lt;stikonas&gt;</a></span><span class="message">well, not just me, and we built on others work...</span></div><div class="line" id="234812"><span class="nick" style="color:#8dd3c7"><a href="#234812" label="[23:48:12]">&lt;stikonas&gt;</a></span><span class="message">(e.g. bison boostrap was done by gio)</span></div><div class="line" id="235219"><span class="nick" style="color:#bc80bd"><a href="#235219" label="[23:52:19]">&lt;nckx&gt;</a></span><span class="message">It's certainly interesting.</span></div><div class="line" id="235817"><span class="nick" style="color:#8dd3c7"><a href="#235817" label="[23:58:17]">&lt;stikonas&gt;</a></span><span class="message">pder: before you rebuild bash, we probably need to figure out where binutils inserts non-reproducibility</span></div><div class="line" id="235831"><span class="nick" style="color:#8dd3c7"><a href="#235831" label="[23:58:31]">&lt;stikonas&gt;</a></span><span class="message">I guess ar inserts timestamps</span></div><br /></div></body></html>