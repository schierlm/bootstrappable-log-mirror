<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-03-08.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002400"><span class="nick" style="color:#389600"><a href="#002400" label="[00:24:00]">&lt;stikonas&gt;</a></span><span class="message">so my dmesg shows 1 segfault in libtool, one in conftest and loads in gnulib-tool</span></div><div class="line" id="003051"><span class="nick" style="color:#389600"><a href="#003051" label="[00:30:51]">&lt;stikonas&gt;</a></span><span class="message">pder: so this bit is crashing bash in gnulib-import:</span></div><div class="line" id="003100"><span class="nick" style="color:#389600"><a href="#003100" label="[00:31:00]">&lt;stikonas&gt;</a></span><span class="message">declare -A x &amp;&amp; x[f/2]='foo'</span></div><div class="line" id="003119"><span class="nick" style="color:#389600"><a href="#003119" label="[00:31:19]">&lt;stikonas&gt;</a></span><span class="message">it's not critical though</span></div><div class="line" id="003127"><span class="nick" style="color:#389600"><a href="#003127" label="[00:31:27]">&lt;stikonas&gt;</a></span><span class="message">this runs in subshell</span></div><div class="line" id="003157"><span class="nick" style="color:#8dd3c7"><a href="#003157" label="[00:31:57]">&lt;pder&gt;</a></span><span class="message">I saw that as well</span></div><div class="line" id="003242"><span class="nick" style="color:#389600"><a href="#003242" label="[00:32:42]">&lt;stikonas&gt;</a></span><span class="message">so we just have  associative arrays disabled</span></div><div class="line" id="003505"><span class="nick" style="color:#8dd3c7"><a href="#003505" label="[00:35:05]">&lt;pder&gt;</a></span><span class="message">env -i ./bash also segfaults</span></div><div class="line" id="003656"><span class="nick" style="color:#389600"><a href="#003656" label="[00:36:56]">&lt;stikonas&gt;</a></span><span class="message">ok, I've got a backtrace for that declare -A line</span></div><div class="line" id="003724"><span class="nick" style="color:#389600"><a href="#003724" label="[00:37:24]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1273313/">https://paste.debian.net/1273313/</a> </span></div><div class="line" id="003735"><span class="nick" style="color:#389600"><a href="#003735" label="[00:37:35]">&lt;stikonas&gt;</a></span><span class="message">so also make_variable_value</span></div><div class="line" id="004239"><span class="nick" style="color:#389600"><a href="#004239" label="[00:42:39]">&lt;stikonas&gt;</a></span><span class="message">pder: do you have something in your .bashrc?</span></div><div class="line" id="004301"><span class="nick" style="color:#389600"><a href="#004301" label="[00:43:01]">&lt;stikonas&gt;</a></span><span class="message">that is sourced automatically and maybe uses associative arrays</span></div><div class="line" id="004315"><span class="nick" style="color:#389600"><a href="#004315" label="[00:43:15]">&lt;stikonas&gt;</a></span><span class="message">(or .bash_profile)</span></div><div class="line" id="005809"><span class="nick" style="color:#8dd3c7"><a href="#005809" label="[00:58:09]">&lt;pder&gt;</a></span><span class="message">interesting, so its something in my .bashrc because bash --norc works</span></div><div class="line" id="010348"><span class="nick" style="color:#389600"><a href="#010348" label="[01:03:48]">&lt;stikonas&gt;</a></span><span class="message">anyway, my guess is that this is the same cause</span></div><div class="line" id="010406"><span class="nick" style="color:#389600"><a href="#010406" label="[01:04:06]">&lt;stikonas&gt;</a></span><span class="message">and you can probably just debug that reproducer: declare -A x &amp;&amp; x[f/2]='foo'</span></div><div class="line" id="011426"><span class="nick" style="color:#2e2a4a"><a href="#011426" label="[01:14:26]">&lt;oriansj&gt;</a></span><span class="message">alethkit: I finally had a chance to give a proper look at the guile steel proposal; and if one wanted a Systems Lisp that is already done, SBCL is an excellent choice. If your intent is something different, I'd need more to determine if I know of anything that is readily available to suit that need.</span></div><div class="line" id="012355"><span class="nick" style="color:#6b8072"><a href="#012355" label="[01:23:55]">&lt;stikonas[m]&gt;</a></span><span class="message">And SBCL is also Steel :D</span></div><div class="line" id="034706"><span class="nick" style="color:#8dd3c7"><a href="#034706" label="[03:47:06]">&lt;pder&gt;</a></span><span class="message">After disabling bash_completion by commenting out . /etc/bash_completion in my .bashrc there is no segfault</span></div><div class="line" id="040716"><span class="nick" style="color:#80b1d3"><a href="#040716" label="[04:07:16]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: on Fiwix the automake 1.15.1 configure script hangs. It was segfaulting in a different place before I added some diagnostics.</span></div><div class="line" id="040813"><span class="nick" style="color:#80b1d3"><a href="#040813" label="[04:08:13]">&lt;rickmasters&gt;</a></span><span class="message">I'll be honest. I've been working on this bash 5 upgrade for a few days and I'm running out of motivation.</span></div><div class="line" id="041247"><span class="nick" style="color:#6d2462"><a href="#041247" label="[04:12:47]">&lt;fossy&gt;</a></span><span class="message">rickmasters: i'm not really super in the loop of this issue, is it fiwix + automake 1.15 configure script + bash 5 = crashes?</span></div><div class="line" id="041307"><span class="nick" style="color:#80b1d3"><a href="#041307" label="[04:13:07]">&lt;rickmasters&gt;</a></span><span class="message">fossy: yes</span></div><div class="line" id="041327"><span class="nick" style="color:#6d2462"><a href="#041327" label="[04:13:27]">&lt;fossy&gt;</a></span><span class="message">that is. odd to say the least</span></div><div class="line" id="041402"><span class="nick" style="color:#80b1d3"><a href="#041402" label="[04:14:02]">&lt;rickmasters&gt;</a></span><span class="message">Its kind of optimistic that bash 5 would just drop onto Fiwix and work without significant effort being invested.</span></div><div class="line" id="041430"><span class="nick" style="color:#6d2462"><a href="#041430" label="[04:14:30]">&lt;fossy&gt;</a></span><span class="message">yeah, but why automake 1.15 configure script specifically..</span></div><div class="line" id="041451"><span class="nick" style="color:#80b1d3"><a href="#041451" label="[04:14:51]">&lt;rickmasters&gt;</a></span><span class="message">Its the first significant bash script that runs after bash is built.</span></div><div class="line" id="041452"><span class="nick" style="color:#6d2462"><a href="#041452" label="[04:14:52]">&lt;fossy&gt;</a></span><span class="message">oh, it is the first configure script in run2.sh</span></div><div class="line" id="041454"><span class="nick" style="color:#6d2462"><a href="#041454" label="[04:14:54]">&lt;fossy&gt;</a></span><span class="message">haha</span></div><div class="line" id="041615"><span class="nick" style="color:#80b1d3"><a href="#041615" label="[04:16:15]">&lt;rickmasters&gt;</a></span><span class="message">bash is complicated and uses a lot of kernel facilities. I'm not sure I'm up for making it work right now. Have to be honest.</span></div><div class="line" id="041615"><span class="nick" style="color:#6d2462"><a href="#041615" label="[04:16:15]">&lt;fossy&gt;</a></span><span class="message">rickmasters, stikonas: new bash is a nice to have in my opinion, rather than a nessecity. i think probably push new bash back to sysc for the time being, and come back to look at what versions will work on fiwix later...</span></div><div class="line" id="041658"><span class="nick" style="color:#6d2462"><a href="#041658" label="[04:16:58]">&lt;fossy&gt;</a></span><span class="message">yeah, and it's relatively minor; i don't want this to be a blocker for your pr</span></div><div class="line" id="041836"><span class="nick" style="color:#80b1d3"><a href="#041836" label="[04:18:36]">&lt;rickmasters&gt;</a></span><span class="message">well, I it was part of a dependency chain that gets us binutils 2.30 I think. I hate to hold up progress</span></div><div class="line" id="041931"><span class="nick" style="color:#80b1d3"><a href="#041931" label="[04:19:31]">&lt;rickmasters&gt;</a></span><span class="message">I just don't know how much time or effort I'd be on the hook for here.</span></div><div class="line" id="042105"><span class="nick" style="color:#8dd3c7"><a href="#042105" label="[04:21:05]">&lt;pder&gt;</a></span><span class="message">I think the software you build in Fiwix should stay as minimal as possible with the goal of building the linux kernel</span></div><div class="line" id="042128"><span class="nick" style="color:#6d2462"><a href="#042128" label="[04:21:28]">&lt;fossy&gt;</a></span><span class="message">minimal and old are two different things</span></div><div class="line" id="042138"><span class="nick" style="color:#6d2462"><a href="#042138" label="[04:21:38]">&lt;fossy&gt;</a></span><span class="message">binutils 2.30 replaced binutils 2.14 as the first version of binutils</span></div><div class="line" id="042201"><span class="nick" style="color:#6d2462"><a href="#042201" label="[04:22:01]">&lt;fossy&gt;</a></span><span class="message">sorry</span></div><div class="line" id="042208"><span class="nick" style="color:#6d2462"><a href="#042208" label="[04:22:08]">&lt;fossy&gt;</a></span><span class="message">replaced binutils 2.24*</span></div><div class="line" id="042248"><span class="nick" style="color:#80b1d3"><a href="#042248" label="[04:22:48]">&lt;rickmasters&gt;</a></span><span class="message">Yeah, putting bash 5 before kernel bootstrap is a tough pill. I'd be willing to keep working on it as a side project but I think reverting it for now would get me back on track with the kernel bootstrap work</span></div><div class="line" id="042410"><span class="nick" style="color:#8dd3c7"><a href="#042410" label="[04:24:10]">&lt;pder&gt;</a></span><span class="message">even if it means building an older linux kernel, building newer binutils, bash, etc, and then a newer linux kernel seems easier to me</span></div><div class="line" id="042436"><span class="nick" style="color:#6d2462"><a href="#042436" label="[04:24:36]">&lt;fossy&gt;</a></span><span class="message">rickmasters: i'll get back to you shortly and see if we can revert just parts of the binutils 2.30 upgrade -- feel free to revert it as a whole locally if it'll help you get back on track</span></div><div class="line" id="042542"><span class="nick" style="color:#6d2462"><a href="#042542" label="[04:25:42]">&lt;fossy&gt;</a></span><span class="message">pder: well, we need *a* version of binutils, to build any linux kernel, but it doesn't need to be 2.30</span></div><div class="line" id="042557"><span class="nick" style="color:#6d2462"><a href="#042557" label="[04:25:57]">&lt;fossy&gt;</a></span><span class="message">in saying that, 2.30 is highly desirable to have eventually, since it has riscv support</span></div><div class="line" id="042828"><span class="nick" style="color:#8dd3c7"><a href="#042828" label="[04:28:28]">&lt;pder&gt;</a></span><span class="message">what is the reason binutils 2.30 needs bash 5?  Was there something in bash 2 that was needed to run configure scripts?</span></div><div class="line" id="042845"><span class="nick" style="color:#8dd3c7"><a href="#042845" label="[04:28:45]">&lt;pder&gt;</a></span><span class="message">something not in bash 2</span></div><div class="line" id="042852"><span class="nick" style="color:#6d2462"><a href="#042852" label="[04:28:52]">&lt;fossy&gt;</a></span><span class="message">investigating that now</span></div><div class="line" id="042943"><span class="nick" style="color:#6d2462"><a href="#042943" label="[04:29:43]">&lt;fossy&gt;</a></span><span class="message">the dependency problem if it exists would be</span></div><div class="line" id="042950"><span class="nick" style="color:#6d2462"><a href="#042950" label="[04:29:50]">&lt;fossy&gt;</a></span><span class="message">bash 5 -&gt; automake 1.15 -&gt; binutils 2.30</span></div><div class="line" id="043745"><span class="nick" style="color:#8dd3c7"><a href="#043745" label="[04:37:45]">&lt;pder&gt;</a></span><span class="message">For now it makes the most sense to me to keep sysa stable and not add complexity until the kernel stuff is merged, and then revisit this</span></div><div class="line" id="043804"><span class="nick" style="color:#80b1d3"><a href="#043804" label="[04:38:04]">&lt;rickmasters&gt;</a></span><span class="message">I think bash 2.04 to 5.2.15 is a 22 year jump.</span></div><div class="line" id="044119"><span class="nick" style="color:#6d2462"><a href="#044119" label="[04:41:19]">&lt;fossy&gt;</a></span><span class="message">rickmasters: can you try this with fiwix <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/tree/bash-automake-junk">https://github.com/fosslinux/live-bootstrap/tree/bash-automake-junk</a> </span></div><div class="line" id="044132"><span class="nick" style="color:#6d2462"><a href="#044132" label="[04:41:32]">&lt;fossy&gt;</a></span><span class="message">this moves bash 5 back to sysc and fixes bash 5 -&gt; automake 1.15 dep</span></div><div class="line" id="044145"><span class="nick" style="color:#6d2462"><a href="#044145" label="[04:41:45]">&lt;fossy&gt;</a></span><span class="message">the configure script is lying when it says bash 5 is required</span></div><div class="line" id="044208"><span class="nick" style="color:#8dd3c7"><a href="#044208" label="[04:42:08]">&lt;pder&gt;</a></span><span class="message">thats a good find</span></div><div class="line" id="044445"><span class="nick" style="color:#80b1d3"><a href="#044445" label="[04:44:45]">&lt;rickmasters&gt;</a></span><span class="message">fossy: I can try that but I'll have to redo some merges and I probably won't know until tomorrow</span></div><div class="line" id="044511"><span class="nick" style="color:#6d2462"><a href="#044511" label="[04:45:11]">&lt;fossy&gt;</a></span><span class="message">rickmasters: no worries, hopefully this unblocks kernel stuff</span></div><div class="line" id="050121"><span class="nick" style="color:#80b1d3"><a href="#050121" label="[05:01:21]">&lt;rickmasters&gt;</a></span><span class="message">By the way, FiwixOS has bash 4.4.18</span></div><div class="line" id="050301"><span class="nick" style="color:#80b1d3"><a href="#050301" label="[05:03:01]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: is that stock bash 4.4.18 you have running or is modified for Fiwix in some way?</span></div><div class="line" id="051018"><span class="nick" style="color:#80b1d3"><a href="#051018" label="[05:10:18]">&lt;rickmasters&gt;</a></span><span class="message">So my latest test did something funny. configure was hanging on a very large Heredoc starting with cat &gt;&gt;$CONFIG_STATUS &lt;&lt;\_ASEOF</span></div><div class="line" id="051038"><span class="nick" style="color:#80b1d3"><a href="#051038" label="[05:10:38]">&lt;rickmasters&gt;</a></span><span class="message">So i broke it up into different sections to see what part was causing the problem</span></div><div class="line" id="051114"><span class="nick" style="color:#80b1d3"><a href="#051114" label="[05:11:14]">&lt;rickmasters&gt;</a></span><span class="message">But that caused it not hang. There was still a page fault but automake-1.15.1 did finish.</span></div><div class="line" id="051239"><span class="nick" style="color:#80b1d3"><a href="#051239" label="[05:12:39]">&lt;rickmasters&gt;</a></span><span class="message">But then the configure script for binutils-2.30 did the same thing - its frozen at the same place.</span></div><div class="line" id="051332"><span class="nick" style="color:#80b1d3"><a href="#051332" label="[05:13:32]">&lt;rickmasters&gt;</a></span><span class="message">Anyway, its still not working but I thought that was interesting.</span></div><div class="line" id="051501"><span class="nick" style="color:#80b1d3"><a href="#051501" label="[05:15:01]">&lt;rickmasters&gt;</a></span><span class="message">Oh, just to be clear this is the bash 5 issues not the branch you made fossy</span></div><div class="line" id="052943"><span class="nick" style="color:#6d2462"><a href="#052943" label="[05:29:43]">&lt;fossy&gt;</a></span><span class="message">yep :)</span></div><div class="line" id="075034"><span class="nick" style="color:#234e69"><a href="#075034" label="[07:50:34]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: this is the stock Bash 4.4.18 from GNU &lt;<a rel="nofollow" href="https://ftp.gnu.org/gnu/bash/bash-4.4.18.tar.gz">https://ftp.gnu.org/gnu/bash/bash-4.4.18.tar.gz</a>&gt;,  with only the usual changes in the pair of files: config.sub and config.guess (&lt;<a rel="nofollow" href="https://pastesite.org/view/459e0da6">https://pastesite.org/view/459e0da6</a>&gt;) </span></div><div class="line" id="075525"><span class="nick" style="color:#234e69"><a href="#075525" label="[07:55:25]">&lt;Mikaku&gt;</a></span><span class="message">rickmaster: you can check the packages ported to FiwixOS here &lt;<a rel="nofollow" href="https://www.fiwix.org/packages.html">https://www.fiwix.org/packages.html</a>&gt;,  and you'll find the source code and the patches (if needed) in the Installation CDROM</span></div><div class="line" id="084621"><span class="nick" style="color:#6b8072"><a href="#084621" label="[08:46:21]">&lt;stikonas[m]&gt;</a></span><span class="message">Yes, we can later update to bash 4 but let's merge kernel work first</span></div><div class="line" id="085313"><span class="nick" style="color:#234e69"><a href="#085313" label="[08:53:13]">&lt;Mikaku&gt;</a></span><span class="message">rickmaster: I've also experienced some hangs or segfaults when running (big sized) ./configure in some packages</span></div><div class="line" id="085332"><span class="nick" style="color:#234e69"><a href="#085332" label="[08:53:32]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: it looks to me that it must be something related to the stack but sincerely I've been unable to find it out</span></div><div class="line" id="085540"><span class="nick" style="color:#234e69"><a href="#085540" label="[08:55:40]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: I gave it up with the hope that if it's really related to the stack, it would appear in other places and hopefully easier to catch</span></div><div class="line" id="105754"><span class="nick" style="color:#6c3d55"><a href="#105754" label="[10:57:54]">&lt;alethkit&gt;</a></span><span class="message">oriansj: I think the point is that SBCL requires a C compiler, whereas this does not.</span></div><div class="line" id="105835"><span class="nick" style="color:#6c3d55"><a href="#105835" label="[10:58:35]">&lt;alethkit&gt;</a></span><span class="message">(at some point in the bootstrap chain)</span></div><div class="line" id="111102"><span class="nick" style="color:#d9d9d9"><a href="#111102" label="[11:11:02]">&lt;msavoritias&gt;</a></span><span class="message">That sounds like a good point. Then it can make bootstrapping easier. In theory at least.</span></div><div class="line" id="111157"><span class="nick" style="color:#389600"><a href="#111157" label="[11:11:57]">&lt;stikonas&gt;</a></span><span class="message">but is there actual guile steel or just the proposal?</span></div><div class="line" id="111440"><span class="nick" style="color:#389600"><a href="#111440" label="[11:14:40]">&lt;stikonas&gt;</a></span><span class="message">msavoritias: in practice a lot of lisps tend to have pregenerated files that need preexisting lisp and they often don't bother solving it</span></div><div class="line" id="111440"><span class="nick" style="color:#389600"><a href="#111440" label="[11:14:40]">&lt;stikonas&gt;</a></span><span class="message">e.g. GNU guile does that too</span></div><div class="line" id="111830"><span class="nick" style="color:#d9d9d9"><a href="#111830" label="[11:18:30]">&lt;msavoritias&gt;</a></span><span class="message">That should be fixed yeah.</span></div><div class="line" id="112004"><span class="nick" style="color:#d9d9d9"><a href="#112004" label="[11:20:04]">&lt;msavoritias&gt;</a></span><span class="message">There is: an irc channel and <a rel="nofollow" href="https://gitlab.com/flatwhatson/guile-prescheme">https://gitlab.com/flatwhatson/guile-prescheme</a> </span></div><div class="line" id="112455"><span class="nick" style="color:#389600"><a href="#112455" label="[11:24:55]">&lt;stikonas&gt;</a></span><span class="message">yes, but bootstrapping this thing without C might not be easy either</span></div><div class="line" id="112553"><span class="nick" style="color:#389600"><a href="#112553" label="[11:25:53]">&lt;stikonas&gt;</a></span><span class="message">can one write an assembly code in less than 5k LOC (including comments and labels) that can run this...</span></div><div class="line" id="112832"><span class="nick" style="color:#d9d9d9"><a href="#112832" label="[11:28:32]">&lt;msavoritias&gt;</a></span><span class="message">Good question. Also apparently this just translates it to c so not sure how much that helps</span></div><div class="line" id="113236"><span class="nick" style="color:#389600"><a href="#113236" label="[11:32:36]">&lt;stikonas&gt;</a></span><span class="message">that probably doesn't help</span></div><div class="line" id="113250"><span class="nick" style="color:#389600"><a href="#113250" label="[11:32:50]">&lt;stikonas&gt;</a></span><span class="message">it might help for other  things (performance maybe)</span></div><div class="line" id="113256"><span class="nick" style="color:#389600"><a href="#113256" label="[11:32:56]">&lt;stikonas&gt;</a></span><span class="message">but not for bootsrapping</span></div><div class="line" id="113306"><span class="nick" style="color:#d9d9d9"><a href="#113306" label="[11:33:06]">&lt;msavoritias&gt;</a></span><span class="message">Yep :(</span></div><div class="line" id="113334"><span class="nick" style="color:#389600"><a href="#113334" label="[11:33:34]">&lt;stikonas&gt;</a></span><span class="message">for bootsrapping purposes you should thing that you have some simple assembly language and you want to write some higher level language in it</span></div><div class="line" id="113343"><span class="nick" style="color:#389600"><a href="#113343" label="[11:33:43]">&lt;stikonas&gt;</a></span><span class="message">and we have nothing else at all</span></div><div class="line" id="113426"><span class="nick" style="color:#389600"><a href="#113426" label="[11:34:26]">&lt;stikonas&gt;</a></span><span class="message">(well, trivial shell or kernel if you do posix/some other os bootstrap)</span></div><div class="line" id="113550"><span class="nick" style="color:#d9d9d9"><a href="#113550" label="[11:35:50]">&lt;msavoritias&gt;</a></span><span class="message">Cant we put a simple low level in between? Like carp or scopes?</span></div><div class="line" id="113558"><span class="nick" style="color:#d9d9d9"><a href="#113558" label="[11:35:58]">&lt;msavoritias&gt;</a></span><span class="message">A subset of them that is</span></div><div class="line" id="113606"><span class="nick" style="color:#d9d9d9"><a href="#113606" label="[11:36:06]">&lt;msavoritias&gt;</a></span><span class="message">Hmm</span></div><div class="line" id="113645"><span class="nick" style="color:#d9d9d9"><a href="#113645" label="[11:36:45]">&lt;msavoritias&gt;</a></span><span class="message">Because i am thinking making a gc into assembly complicates things</span></div><div class="line" id="114029"><span class="nick" style="color:#389600"><a href="#114029" label="[11:40:29]">&lt;stikonas&gt;</a></span><span class="message">well, you could have something between assembly and higher lisp</span></div><div class="line" id="114204"><span class="nick" style="color:#d9d9d9"><a href="#114204" label="[11:42:04]">&lt;msavoritias&gt;</a></span><span class="message">Which sounds like pre-scheme but mapping to assembly instead of c</span></div><div class="line" id="114217"><span class="nick" style="color:#d9d9d9"><a href="#114217" label="[11:42:17]">&lt;msavoritias&gt;</a></span><span class="message">Thats a que for me to fork XD</span></div><div class="line" id="114232"><span class="nick" style="color:#389600"><a href="#114232" label="[11:42:32]">&lt;stikonas&gt;</a></span><span class="message">well, could be interpreter</span></div><div class="line" id="114243"><span class="nick" style="color:#389600"><a href="#114243" label="[11:42:43]">&lt;stikonas&gt;</a></span><span class="message">still that first step must be able at least a few things</span></div><div class="line" id="114345"><span class="nick" style="color:#389600"><a href="#114345" label="[11:43:45]">&lt;stikonas&gt;</a></span><span class="message">at the very least we need to be able to open files, read and write to them</span></div><div class="line" id="114435"><span class="nick" style="color:#389600"><a href="#114435" label="[11:44:35]">&lt;stikonas&gt;</a></span><span class="message">and if it's compiled language, then it has to support inline assembly to do those i/o syscalls</span></div><div class="line" id="115005"><span class="nick" style="color:#d9d9d9"><a href="#115005" label="[11:50:05]">&lt;msavoritias&gt;</a></span><span class="message">Still if prescheme is able to bootstrap guile that could simplify things</span></div><div class="line" id="115049"><span class="nick" style="color:#d9d9d9"><a href="#115049" label="[11:50:49]">&lt;msavoritias&gt;</a></span><span class="message">Especially if guile can be &quot;ported&quot; to use prescheme to bootstrap itself</span></div><div class="line" id="115101"><span class="nick" style="color:#389600"><a href="#115101" label="[11:51:01]">&lt;stikonas&gt;</a></span><span class="message">that is true</span></div><div class="line" id="115122"><span class="nick" style="color:#389600"><a href="#115122" label="[11:51:22]">&lt;stikonas&gt;</a></span><span class="message">but doesn't guile need C?</span></div><div class="line" id="115200"><span class="nick" style="color:#389600"><a href="#115200" label="[11:52:00]">&lt;stikonas&gt;</a></span><span class="message">I thought it has quite a few C dependencies too</span></div><div class="line" id="115227"><span class="nick" style="color:#389600"><a href="#115227" label="[11:52:27]">&lt;stikonas&gt;</a></span><span class="message">boehm-gc, gmp, libunitstring...</span></div><div class="line" id="120845"><span class="nick" style="color:#389600"><a href="#120845" label="[12:08:45]">&lt;stikonas&gt;</a></span><span class="message">anyway, quite a lot can be done in bootstrapping if somebody is willing to do those things. But there are often some details that people initially overlook. For example tcc compiler can build gcc. But in live-bootstrap we have another 50 steps between tcc and gcc which people might initially overlook</span></div><div class="line" id="120914"><span class="nick" style="color:#389600"><a href="#120914" label="[12:09:14]">&lt;stikonas&gt;</a></span><span class="message">it's stuff like perl and autotools, bootstrapping bison/flex, C libraries, binutils</span></div><div class="line" id="124612"><span class="nick" style="color:#d9d9d9"><a href="#124612" label="[12:46:12]">&lt;msavoritias&gt;</a></span><span class="message">Agreed. I am talking on high level from here. And as you said guile itself has quite a bit of c code and of c deps</span></div><div class="line" id="124612"><span class="nick" style="color:#d9d9d9"><a href="#124612" label="[12:46:12]">&lt;msavoritias&gt;</a></span><span class="message">Plus if guix and everything else on userspace requires c anyway you are starting to question the benefits</span></div><div class="line" id="125542"><span class="nick" style="color:#389600"><a href="#125542" label="[12:55:42]">&lt;stikonas&gt;</a></span><span class="message">yes, majority of userspace does need C...</span></div><div class="line" id="125601"><span class="nick" style="color:#389600"><a href="#125601" label="[12:56:01]">&lt;stikonas&gt;</a></span><span class="message">which means you'll need to write a C compiler capable of building GCC</span></div><div class="line" id="132547"><span class="nick" style="color:#d9d9d9"><a href="#132547" label="[13:25:47]">&lt;msavoritias&gt;</a></span><span class="message">For the rest of the stuff for sure.</span></div><div class="line" id="132547"><span class="nick" style="color:#d9d9d9"><a href="#132547" label="[13:25:47]">&lt;msavoritias&gt;</a></span><span class="message">My goal personally would be to run up until guix and shepherd without messinp with c compilers</span></div><div class="line" id="132633"><span class="nick" style="color:#d9d9d9"><a href="#132633" label="[13:26:33]">&lt;msavoritias&gt;</a></span><span class="message">Or if i want to build guix in a container not to have to built c from scratch</span></div><div class="line" id="132803"><span class="nick" style="color:#d9d9d9"><a href="#132803" label="[13:28:03]">&lt;msavoritias&gt;</a></span><span class="message">At least that way c can be isolated to the &quot;addons&quot;</span></div><div class="line" id="140310"><span class="nick" style="color:#2e2a4a"><a href="#140310" label="[14:03:10]">&lt;oriansj&gt;</a></span><span class="message">alethkit: well the only lisps written in assembly either are for architectures that are &quot;dead&quot; or too simple to be used in the traditional lisp way. (I know I've written in assembly one too [it is in stage0 in a file named lisp.S])</span></div><div class="line" id="140444"><span class="nick" style="color:#2e2a4a"><a href="#140444" label="[14:04:44]">&lt;oriansj&gt;</a></span><span class="message">so msavoritias you will need to write a protolisp in assembly and I have an s-expression lisp spec you could implement in assembly in 24 hours if you are experienced in assembly and sufficiently motivated to do the work.</span></div><div class="line" id="140908"><span class="nick" style="color:#bc80bd"><a href="#140908" label="[14:09:08]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">oriansj: What's missing from your lisp.S before it could be used as part of a bootstrap? Is it I/O?</span></div><div class="line" id="141808"><span class="nick" style="color:#d9d9d9"><a href="#141808" label="[14:18:08]">&lt;msavoritias&gt;</a></span><span class="message">oriansj: Sadly not yet experienced.:(</span></div><div class="line" id="141808"><span class="nick" style="color:#d9d9d9"><a href="#141808" label="[14:18:08]">&lt;msavoritias&gt;</a></span><span class="message">But i am reading and learning to do it at some point.</span></div><div class="line" id="141910"><span class="nick" style="color:#d9d9d9"><a href="#141910" label="[14:19:10]">&lt;msavoritias&gt;</a></span><span class="message">But why not have pre scheme just compile to assembly instead</span></div><div class="line" id="141913"><span class="nick" style="color:#d9d9d9"><a href="#141913" label="[14:19:13]">&lt;msavoritias&gt;</a></span><span class="message">?</span></div><div class="line" id="142132"><span class="nick" style="color:#bc80bd"><a href="#142132" label="[14:21:32]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">msavoritias: There isn't a problem with that, it's just that pre scheme would also have to be implemented in assembly(or simpler language) too in that case</span></div><div class="line" id="142225"><span class="nick" style="color:#d9d9d9"><a href="#142225" label="[14:22:25]">&lt;msavoritias&gt;</a></span><span class="message">More like implement instead of pre scheme compile to c to compile to assembly but yeah</span></div><div class="line" id="143454"><span class="nick" style="color:#2e2a4a"><a href="#143454" label="[14:34:54]">&lt;oriansj&gt;</a></span><span class="message">AwesomeAdam54321: it can be used as part of a bootstrap as is. But it is a lisp interpreter not a compiler and thus one would need to write a lisp compiler in its subset.</span></div><div class="line" id="143846"><span class="nick" style="color:#2e2a4a"><a href="#143846" label="[14:38:46]">&lt;oriansj&gt;</a></span><span class="message">msavoritias: compiling to C is trivial; as C handles all of the messy details. Compiling to Assembly takes a good deal more as you can clearly see in every compiler written in Lisp.</span></div><div class="line" id="143939"><span class="nick" style="color:#d9d9d9"><a href="#143939" label="[14:39:39]">&lt;msavoritias&gt;</a></span><span class="message">Yeah. True. I know its not easy to bypass C</span></div><div class="line" id="150140"><span class="nick" style="color:#389600"><a href="#150140" label="[15:01:40]">&lt;stikonas&gt;</a></span><span class="message">well, that's because it's basically a portable assembly</span></div><div class="line" id="150158"><span class="nick" style="color:#389600"><a href="#150158" label="[15:01:58]">&lt;stikonas&gt;</a></span><span class="message">so I would say compiling to assembly is worse than compiling to C</span></div><div class="line" id="150229"><span class="nick" style="color:#389600"><a href="#150229" label="[15:02:29]">&lt;stikonas&gt;</a></span><span class="message">still, you could do lisp interpreter for some time</span></div><div class="line" id="150242"><span class="nick" style="color:#389600"><a href="#150242" label="[15:02:42]">&lt;stikonas&gt;</a></span><span class="message">but then your interpreter itself would be written in assembly</span></div><div class="line" id="150322"><span class="nick" style="color:#389600"><a href="#150322" label="[15:03:22]">&lt;stikonas&gt;</a></span><span class="message">and any sycalls will eventually have to go through original interpreter</span></div><div class="line" id="150916"><span class="nick" style="color:#d9d9d9"><a href="#150916" label="[15:09:16]">&lt;msavoritias&gt;</a></span><span class="message">I disagree. C was built for computers 60 years ago that no longer exist. Webassembly sounds closer to what a portable assembly would actually look like.</span></div><div class="line" id="151235"><span class="nick" style="color:#389600"><a href="#151235" label="[15:12:35]">&lt;stikonas&gt;</a></span><span class="message">webassembly is binary</span></div><div class="line" id="151253"><span class="nick" style="color:#389600"><a href="#151253" label="[15:12:53]">&lt;stikonas&gt;</a></span><span class="message">so we can't write source in it</span></div><div class="line" id="151315"><span class="nick" style="color:#389600"><a href="#151315" label="[15:13:15]">&lt;stikonas&gt;</a></span><span class="message">though perhaps it is suitable for that output format for prescheme</span></div><div class="line" id="151332"><span class="nick" style="color:#389600"><a href="#151332" label="[15:13:32]">&lt;stikonas&gt;</a></span><span class="message">but then you need to convert webassembly to machine code too</span></div><div class="line" id="151400"><span class="nick" style="color:#389600"><a href="#151400" label="[15:14:00]">&lt;stikonas&gt;</a></span><span class="message">ok, there is also web assembly text version...</span></div><div class="line" id="151513"><span class="nick" style="color:#389600"><a href="#151513" label="[15:15:13]">&lt;stikonas&gt;</a></span><span class="message">I haven't looked at webassembly before, but maybe M0 can be useful in converting text webassembly to hex version</span></div><div class="line" id="151919"><span class="nick" style="color:#389600"><a href="#151919" label="[15:19:19]">&lt;stikonas&gt;</a></span><span class="message">perhaps implementing webassembly in assembly is easier than writing cc_* compiler</span></div><div class="line" id="151929"><span class="nick" style="color:#389600"><a href="#151929" label="[15:19:29]">&lt;stikonas&gt;</a></span><span class="message">but then again, somebody has to redo the work</span></div><div class="line" id="152010"><span class="nick" style="color:#389600"><a href="#152010" label="[15:20:10]">&lt;stikonas&gt;</a></span><span class="message">and if somebody does it, I'm sure people here would consider it and won't reject</span></div><div class="line" id="152230"><span class="nick" style="color:#d9d9d9"><a href="#152230" label="[15:22:30]">&lt;msavoritias&gt;</a></span><span class="message">Thats what i am thinking too.</span></div><div class="line" id="152230"><span class="nick" style="color:#d9d9d9"><a href="#152230" label="[15:22:30]">&lt;msavoritias&gt;</a></span><span class="message">Writing a webassembly compiler in assembly if it doesnt exist. And then prescheme can output to that</span></div><div class="line" id="152241"><span class="nick" style="color:#d9d9d9"><a href="#152241" label="[15:22:41]">&lt;msavoritias&gt;</a></span><span class="message">And to be honest this is not my idea</span></div><div class="line" id="152241"><span class="nick" style="color:#d9d9d9"><a href="#152241" label="[15:22:41]">&lt;msavoritias&gt;</a></span><span class="message">Spritely is doing it already</span></div><div class="line" id="152241"><span class="nick" style="color:#d9d9d9"><a href="#152241" label="[15:22:41]">&lt;msavoritias&gt;</a></span><span class="message">Output prescheme to webassembly that is</span></div><div class="line" id="152350"><span class="nick" style="color:#d9d9d9"><a href="#152350" label="[15:23:50]">&lt;msavoritias&gt;</a></span><span class="message">And then if we have that webassembly compiler we can put whatever input we want. Lots of reading to do for this though :D</span></div><div class="line" id="152644"><span class="nick" style="color:#389600"><a href="#152644" label="[15:26:44]">&lt;stikonas&gt;</a></span><span class="message">still that's assuming that we can write webassembly compiler that is smaller than cc_x86</span></div><div class="line" id="152706"><span class="nick" style="color:#389600"><a href="#152706" label="[15:27:06]">&lt;stikonas&gt;</a></span><span class="message">(or cc_amd64 or any other implementation of cc_*)</span></div><div class="line" id="152834"><span class="nick" style="color:#2e2a4a"><a href="#152834" label="[15:28:34]">&lt;oriansj&gt;</a></span><span class="message">well decoding webassembly binaries would be more complex than cc_* but converting webassembly text to native binaries might be simple enough</span></div><div class="line" id="153055"><span class="nick" style="color:#2e2a4a"><a href="#153055" label="[15:30:55]">&lt;oriansj&gt;</a></span><span class="message">but you might need to limit yourself to a subset</span></div><div class="line" id="153142"><span class="nick" style="color:#2e2a4a"><a href="#153142" label="[15:31:42]">&lt;oriansj&gt;</a></span><span class="message">the i64.load* instructions would definitely complicate implementations on 32bit architectures</span></div><div class="line" id="153242"><span class="nick" style="color:#389600"><a href="#153242" label="[15:32:42]">&lt;stikonas&gt;</a></span><span class="message">it doesn't have to be exactly webassembly, just something similar of your choice</span></div><div class="line" id="153311"><span class="nick" style="color:#389600"><a href="#153311" label="[15:33:11]">&lt;stikonas&gt;</a></span><span class="message">though if it's too custom, it might be harder for others to understand</span></div><div class="line" id="153337"><span class="nick" style="color:#2e2a4a"><a href="#153337" label="[15:33:37]">&lt;oriansj&gt;</a></span><span class="message">well webassembly is effectively just an array FORTH</span></div><div class="line" id="153440"><span class="nick" style="color:#389600"><a href="#153440" label="[15:34:40]">&lt;stikonas&gt;</a></span><span class="message">and one would have to write a webassembly text &quot;C&quot; library</span></div><div class="line" id="153525"><span class="nick" style="color:#389600"><a href="#153525" label="[15:35:25]">&lt;stikonas&gt;</a></span><span class="message">which includes inline assembly</span></div><div class="line" id="153537"><span class="nick" style="color:#389600"><a href="#153537" label="[15:35:37]">&lt;stikonas&gt;</a></span><span class="message">(that's probably not part of webassembly but we could add an extension)</span></div><div class="line" id="153543"><span class="nick" style="color:#2e2a4a"><a href="#153543" label="[15:35:43]">&lt;oriansj&gt;</a></span><span class="message">or write a webassembly output for M2-planet to figure out the mapping</span></div><div class="line" id="165430"><span class="nick" style="color:#2e2a4a"><a href="#165430" label="[16:54:30]">&lt;oriansj&gt;</a></span><span class="message">but the step converting theory to reality, usually eliminates false assumptions.</span></div><div class="line" id="171203"><span class="nick" style="color:#80b1d3"><a href="#171203" label="[17:12:03]">&lt;rickmasters&gt;</a></span><span class="message">fossy: the bash-automake-junk branch works better on Fiwix. But there is something wrong with that branch not related to Fiwix.</span></div><div class="line" id="171325"><span class="nick" style="color:#80b1d3"><a href="#171325" label="[17:13:25]">&lt;rickmasters&gt;</a></span><span class="message">fossy: it fails on bc-1.07.1 apparently running ./fix-libmath.h with: make[2]: ./x86/bin/kaem: Shell program not found</span></div><div class="line" id="171449"><span class="nick" style="color:#80b1d3"><a href="#171449" label="[17:14:49]">&lt;rickmasters&gt;</a></span><span class="message">fossy: this happens on Linux chroot and qemu (standard, non Fiwix)</span></div><div class="line" id="171750"><span class="nick" style="color:#389600"><a href="#171750" label="[17:17:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, we saw this error in this channel a month or so ago...</span></div><div class="line" id="171752"><span class="nick" style="color:#389600"><a href="#171752" label="[17:17:52]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="171759"><span class="nick" style="color:#389600"><a href="#171759" label="[17:17:59]">&lt;stikonas&gt;</a></span><span class="message">though that was with help2man</span></div><div class="line" id="171830"><span class="nick" style="color:#389600"><a href="#171830" label="[17:18:30]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: perhaps fossy hasn't finished that branch, there is no PR</span></div><div class="line" id="171907"><span class="nick" style="color:#80b1d3"><a href="#171907" label="[17:19:07]">&lt;rickmasters&gt;</a></span><span class="message">fossy: With Fiwix, I do get a page fault from make in the automake-1.15.1 build but I also see an error on Linux: make: find: Command not found</span></div><div class="line" id="171950"><span class="nick" style="color:#389600"><a href="#171950" label="[17:19:50]">&lt;stikonas&gt;</a></span><span class="message">I saw that find not found too</span></div><div class="line" id="172010"><span class="nick" style="color:#80b1d3"><a href="#172010" label="[17:20:10]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: the fix-libmath.h script has no shebang</span></div><div class="line" id="172021"><span class="nick" style="color:#389600"><a href="#172021" label="[17:20:21]">&lt;stikonas&gt;</a></span><span class="message">oh</span></div><div class="line" id="172040"><span class="nick" style="color:#80b1d3"><a href="#172040" label="[17:20:40]">&lt;rickmasters&gt;</a></span><span class="message">But presumably its working on the main branch somehow?</span></div><div class="line" id="172120"><span class="nick" style="color:#389600"><a href="#172120" label="[17:21:20]">&lt;stikonas&gt;</a></span><span class="message">I think find is only used to set permissions in automake 1.15</span></div><div class="line" id="172451"><span class="nick" style="color:#80b1d3"><a href="#172451" label="[17:24:51]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: maybe the main branch has a fixed path due to your bash and .env changes?</span></div><div class="line" id="172504"><span class="nick" style="color:#389600"><a href="#172504" label="[17:25:04]">&lt;stikonas&gt;</a></span><span class="message">I don't think find is present</span></div><div class="line" id="172506"><span class="nick" style="color:#389600"><a href="#172506" label="[17:25:06]">&lt;stikonas&gt;</a></span><span class="message">we build it later</span></div><div class="line" id="172520"><span class="nick" style="color:#389600"><a href="#172520" label="[17:25:20]">&lt;stikonas&gt;</a></span><span class="message">building diffutils really needs binutils</span></div><div class="line" id="172537"><span class="nick" style="color:#389600"><a href="#172537" label="[17:25:37]">&lt;stikonas&gt;</a></span><span class="message">so we have autotools before binutils before findutils</span></div><div class="line" id="173355"><span class="nick" style="color:#80b1d3"><a href="#173355" label="[17:33:55]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: or maybe bash 5 exports a SHELL variable or something that makes no-shebang work?</span></div><div class="line" id="173406"><span class="nick" style="color:#389600"><a href="#173406" label="[17:34:06]">&lt;stikonas&gt;</a></span><span class="message">could be</span></div><div class="line" id="173422"><span class="nick" style="color:#389600"><a href="#173422" label="[17:34:22]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: also sam_ suggested switching to another bc implementation</span></div><div class="line" id="183510"><span class="nick" style="color:#80b1d3"><a href="#183510" label="[18:35:10]">&lt;rickmasters&gt;</a></span><span class="message">fossy, stikonas: I verified that SHELL is ./x86/bin/kaem on bash-automake-junk and is /bin/sh on main branch</span></div><div class="line" id="183542"><span class="nick" style="color:#389600"><a href="#183542" label="[18:35:42]">&lt;stikonas&gt;</a></span><span class="message">hmm, so bash 2 did not overwrite it</span></div><div class="line" id="183554"><span class="nick" style="color:#389600"><a href="#183554" label="[18:35:54]">&lt;stikonas&gt;</a></span><span class="message">we could overwrite it manually</span></div><div class="line" id="183617"><span class="nick" style="color:#389600"><a href="#183617" label="[18:36:17]">&lt;stikonas&gt;</a></span><span class="message">(though maybe we should also consider using bash 4 that is known to work on fiwix)</span></div><div class="line" id="183632"><span class="nick" style="color:#389600"><a href="#183632" label="[18:36:32]">&lt;stikonas&gt;</a></span><span class="message">(or at the very least rebuild bash 2)</span></div><div class="line" id="183644"><span class="nick" style="color:#389600"><a href="#183644" label="[18:36:44]">&lt;stikonas&gt;</a></span><span class="message">current bash 2 has a lot of issues</span></div><div class="line" id="183655"><span class="nick" style="color:#389600"><a href="#183655" label="[18:36:55]">&lt;stikonas&gt;</a></span><span class="message">(i.e. subshells are fairly broken)</span></div><div class="line" id="183952"><span class="nick" style="color:#80b1d3"><a href="#183952" label="[18:39:52]">&lt;rickmasters&gt;</a></span><span class="message">I'll put in a workaround for my Fiwix testing. I just want to make sure Fiwix can still build Linux with fossy's approach.</span></div><div class="line" id="184047"><span class="nick" style="color:#389600"><a href="#184047" label="[18:40:47]">&lt;stikonas&gt;</a></span><span class="message">well export SHELL=/bin/sh should do it...</span></div><div class="line" id="184550"><span class="nick" style="color:#80b1d3"><a href="#184550" label="[18:45:50]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: By the way, I noticed that compiling bash without job control reveals a bug that orphans processes in pipelines</span></div><div class="line" id="184722"><span class="nick" style="color:#80b1d3"><a href="#184722" label="[18:47:22]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I was running into process limits on Fiwix and it was because bash was only waiting on the last command in a pipeline to finish, the others were orphaned.</span></div><div class="line" id="184807"><span class="nick" style="color:#80b1d3"><a href="#184807" label="[18:48:07]">&lt;rickmasters&gt;</a></span><span class="message">Normal init cleans up orphans but ours is kaem which does not, so they would build up.</span></div><div class="line" id="184917"><span class="nick" style="color:#80b1d3"><a href="#184917" label="[18:49:17]">&lt;rickmasters&gt;</a></span><span class="message">bash compiled with job control waits on all processes in a pipeline</span></div><div class="line" id="185127"><span class="nick" style="color:#80b1d3"><a href="#185127" label="[18:51:27]">&lt;rickmasters&gt;</a></span><span class="message">Not that I'm asking for job control - it may use library or system calls we don't have but I am wondering if you know why we compiled bash that way.</span></div><div class="line" id="185230"><span class="nick" style="color:#389600"><a href="#185230" label="[18:52:30]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: bash 2?</span></div><div class="line" id="185238"><span class="nick" style="color:#80b1d3"><a href="#185238" label="[18:52:38]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: yes</span></div><div class="line" id="185246"><span class="nick" style="color:#389600"><a href="#185246" label="[18:52:46]">&lt;stikonas&gt;</a></span><span class="message">that's mostly because it's handwirten makefile</span></div><div class="line" id="185249"><span class="nick" style="color:#389600"><a href="#185249" label="[18:52:49]">&lt;stikonas&gt;</a></span><span class="message">before we have autotools</span></div><div class="line" id="185315"><span class="nick" style="color:#389600"><a href="#185315" label="[18:53:15]">&lt;stikonas&gt;</a></span><span class="message">so we need to figure out which preprocessor defines need enabling</span></div><div class="line" id="185411"><span class="nick" style="color:#80b1d3"><a href="#185411" label="[18:54:11]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I think I tried briefly to compile it with job control but ran into troubles I don't remember so I just increased Fiwix process limits.</span></div><div class="line" id="185540"><span class="nick" style="color:#389600"><a href="#185540" label="[18:55:40]">&lt;stikonas&gt;</a></span><span class="message">but yes, this sounds something to look at...</span></div><div class="line" id="185549"><span class="nick" style="color:#389600"><a href="#185549" label="[18:55:49]">&lt;stikonas&gt;</a></span><span class="message">probably woth opening a bug report</span></div><div class="line" id="185930"><span class="nick" style="color:#80b1d3"><a href="#185930" label="[18:59:30]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I'll add it to my list</span></div><div class="line" id="213102"><span class="nick" style="color:#80b1d3"><a href="#213102" label="[21:31:02]">&lt;rickmasters&gt;</a></span><span class="message">fossy: the bash-automake-junk branch works on Fiwix through Linux but it needs &quot;export SHELL=/bin/sh&quot; near the top of sysa/run.sh</span></div><div class="line" id="213120"><span class="nick" style="color:#80b1d3"><a href="#213120" label="[21:31:20]">&lt;rickmasters&gt;</a></span><span class="message">fossy: also that branch needs a binutils-2.30 checksum</span></div><div class="line" id="220148"><span class="nick" style="color:#389600"><a href="#220148" label="[22:01:48]">&lt;stikonas&gt;</a></span><span class="message">at least binutils 2.30 is not causing any problems</span></div><div class="line" id="220202"><span class="nick" style="color:#389600"><a href="#220202" label="[22:02:02]">&lt;stikonas&gt;</a></span><span class="message">bash we'll be able to sort one way or another...</span></div><div class="line" id="224058"><span class="nick" style="color:#80b1d3"><a href="#224058" label="[22:40:58]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: yes, it's good news</span></div><div class="line" id="224521"><span class="nick" style="color:#6b8072"><a href="#224521" label="[22:45:21]">&lt;stikonas[m]&gt;</a></span><span class="message">Again sorry for a bit of extra work for you</span></div><div class="line" id="224557"><span class="nick" style="color:#6b8072"><a href="#224557" label="[22:45:57]">&lt;stikonas[m]&gt;</a></span><span class="message">But at least we do have a better understanding of fiwix limits</span></div><div class="line" id="225113"><span class="nick" style="color:#80b1d3"><a href="#225113" label="[22:51:13]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: no worries. I'll still keep poking at it when I have time. Hopefully it can be made to work some day.</span></div><div class="line" id="225445"><span class="nick" style="color:#6b8072"><a href="#225445" label="[22:54:45]">&lt;stikonas[m]&gt;</a></span><span class="message">Bash 4 might be better for new features / time spent ratio</span></div><div class="line" id="225502"><span class="nick" style="color:#6b8072"><a href="#225502" label="[22:55:02]">&lt;stikonas[m]&gt;</a></span><span class="message">Don't waste time on bash 5...</span></div><div class="line" id="225616"><span class="nick" style="color:#80b1d3"><a href="#225616" label="[22:56:16]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: ok</span></div><div class="line" id="225626"><span class="nick" style="color:#6b8072"><a href="#225626" label="[22:56:26]">&lt;stikonas[m]&gt;</a></span><span class="message">If I remember bash 5 doesn't have too many new things anyway</span></div><br /></div></body></html>