<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-04-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="015259"><span class="nick" style="color:#8dd3c7"><a href="#015259" label="[01:52:59]">&lt;stikonas&gt;</a></span><span class="message">fossy: I've removed all pre-generated info files here <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/97">https://github.com/fosslinux/live-bootstrap/pull/97</a> </span></div><div class="line" id="015359"><span class="nick" style="color:#8dd3c7"><a href="#015359" label="[01:53:59]">&lt;stikonas&gt;</a></span><span class="message">the other PR with autoconf pregen files still has some issues, so in draft mode for ow</span></div><div class="line" id="015402"><span class="nick" style="color:#8dd3c7"><a href="#015402" label="[01:54:02]">&lt;stikonas&gt;</a></span><span class="message">for now</span></div><div class="line" id="015404"><span class="nick" style="color:#8dd3c7"><a href="#015404" label="[01:54:04]">&lt;stikonas&gt;</a></span><span class="message">maybe tomorrow...</span></div><div class="line" id="021235"><span class="nick" style="color:#8dd3c7"><a href="#021235" label="[02:12:35]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: btw, I guess there is little point of running parallel tests until I finish my PR, so maybe we can postpone it a bit</span></div><div class="line" id="024922"><span class="nick" style="color:#2e2a4a"><a href="#024922" label="[02:49:22]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: i see</span></div><div class="line" id="024929"><span class="nick" style="color:#2e2a4a"><a href="#024929" label="[02:49:29]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: i have now finished perl 5.10</span></div><div class="line" id="024940"><span class="nick" style="color:#2e2a4a"><a href="#024940" label="[02:49:40]">&lt;fossy&gt;</a></span><span class="message">but it is only suitable for bootstrapping newer perl (i culled all extensions)</span></div><div class="line" id="024949"><span class="nick" style="color:#2e2a4a"><a href="#024949" label="[02:49:49]">&lt;fossy&gt;</a></span><span class="message">(because that wouldn't build and i only want it for newer perl)</span></div><div class="line" id="024958"><span class="nick" style="color:#2e2a4a"><a href="#024958" label="[02:49:58]">&lt;fossy&gt;</a></span><span class="message">i think metaconfig is doable for newer perl because debian does it</span></div><div class="line" id="025003"><span class="nick" style="color:#2e2a4a"><a href="#025003" label="[02:50:03]">&lt;fossy&gt;</a></span><span class="message">so if debian can we probably can</span></div><div class="line" id="071726"><span class="nick" style="color:#6b8072"><a href="#071726" label="[07:17:26]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, in this case we might want to wait for either metaconfig before enabling build (can still merge without run2.sh) or stow...</span></div><div class="line" id="083554"><span class="nick" style="color:#80b1d3"><a href="#083554" label="[08:35:54]">&lt;gforce_de1977&gt;</a></span><span class="message">i have done this night a massrun with an &quot;old&quot; checkout, just for getting better numbers (there where 88 qemu-instances non-booting in the run before, seems fixed now): <a rel="nofollow" href="https://paste.debian.net/1193291/">https://paste.debian.net/1193291/</a>  (the numbers are still valid)</span></div><div class="line" id="083627"><span class="nick" style="color:#80b1d3"><a href="#083627" label="[08:36:27]">&lt;gforce_de1977&gt;</a></span><span class="message">now i will concentrate on a very fresh checkout with rootfs.py</span></div><div class="line" id="083731"><span class="nick" style="color:#80b1d3"><a href="#083731" label="[08:37:31]">&lt;gforce_de1977&gt;</a></span><span class="message">(&quot;kein boot&quot; =&gt; non-booting ...sorry)</span></div><div class="line" id="083913"><span class="nick" style="color:#80b1d3"><a href="#083913" label="[08:39:13]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: take your time and poke if i should start another run</span></div><div class="line" id="100348"><span class="nick" style="color:#6d2462"><a href="#100348" label="[10:03:48]">&lt;bauen1&gt;</a></span><span class="message">stikonas[m]: the problem with make is that some autoconf versions are lacking dependencies, so that would need to be fixed and then a rm should all be that is necessary</span></div><div class="line" id="101055"><span class="nick" style="color:#6d2462"><a href="#101055" label="[10:10:55]">&lt;bauen1&gt;</a></span><span class="message">i can also pr my commits to make stow work in</span></div><div class="line" id="101112"><span class="nick" style="color:#6d2462"><a href="#101112" label="[10:11:12]">&lt;bauen1&gt;</a></span><span class="message">just the rest of making builds use stow and versioned autohell is very messy</span></div><div class="line" id="114558"><span class="nick" style="color:#8dd3c7"><a href="#114558" label="[11:45:58]">&lt;stikonas&gt;</a></span><span class="message">fossy: if you are not building full perl for 5.10, maybe microperl is enough?</span></div><div class="line" id="114619"><span class="nick" style="color:#8dd3c7"><a href="#114619" label="[11:46:19]">&lt;stikonas&gt;</a></span><span class="message">I guess it should have the same functionality</span></div><div class="line" id="114624"><span class="nick" style="color:#8dd3c7"><a href="#114624" label="[11:46:24]">&lt;stikonas&gt;</a></span><span class="message">just easier to build</span></div><div class="line" id="114634"><span class="nick" style="color:#8dd3c7"><a href="#114634" label="[11:46:34]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="115104"><span class="nick" style="color:#6d2462"><a href="#115104" label="[11:51:04]">&lt;bauen1&gt;</a></span><span class="message">&gt;_&gt; automake-1.10.3 hard codes `autoreconf` in the Makefile</span></div><div class="line" id="115113"><span class="nick" style="color:#6d2462"><a href="#115113" label="[11:51:13]">&lt;bauen1&gt;</a></span><span class="message">thank you autohell tools for nothing, again</span></div><div class="line" id="120721"><span class="nick" style="color:#80b1d3"><a href="#120721" label="[12:07:21]">&lt;gforce_de1977&gt;</a></span><span class="message">bauen1 8-)))</span></div><div class="line" id="120745"><span class="nick" style="color:#8dd3c7"><a href="#120745" label="[12:07:45]">&lt;stikonas&gt;</a></span><span class="message">bauen1: oh, and AUTORECONF= varaible doesn't help?</span></div><div class="line" id="120937"><span class="nick" style="color:#8dd3c7"><a href="#120937" label="[12:09:37]">&lt;stikonas&gt;</a></span><span class="message">oh yes, it's in doc folder</span></div><div class="line" id="121008"><span class="nick" style="color:#8dd3c7"><a href="#121008" label="[12:10:08]">&lt;stikonas&gt;</a></span><span class="message">bauen1: by the way, what's the reason we can't have non-versioned autotools symlinks with stow?</span></div><div class="line" id="121109"><span class="nick" style="color:#6d2462"><a href="#121109" label="[12:11:09]">&lt;bauen1&gt;</a></span><span class="message">stikonas: well, we can but then we can only have one autotools linked, and imho being specific with the versions is good, especially once i try to move some of these into chroots where i need to know the version used</span></div><div class="line" id="121124"><span class="nick" style="color:#8dd3c7"><a href="#121124" label="[12:11:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, that's true</span></div><div class="line" id="121127"><span class="nick" style="color:#6d2462"><a href="#121127" label="[12:11:27]">&lt;bauen1&gt;</a></span><span class="message">stikonas: you could recreate the autotools unversioned symlinks everytime to point to the newest version</span></div><div class="line" id="121137"><span class="nick" style="color:#8dd3c7"><a href="#121137" label="[12:11:37]">&lt;stikonas&gt;</a></span><span class="message">althouh, we rarely need more than one</span></div><div class="line" id="121145"><span class="nick" style="color:#8dd3c7"><a href="#121145" label="[12:11:45]">&lt;stikonas&gt;</a></span><span class="message">but yes, good reason...</span></div><div class="line" id="121157"><span class="nick" style="color:#8dd3c7"><a href="#121157" label="[12:11:57]">&lt;stikonas&gt;</a></span><span class="message">I know we need more than one for binutils and gcc</span></div><div class="line" id="121216"><span class="nick" style="color:#8dd3c7"><a href="#121216" label="[12:12:16]">&lt;stikonas&gt;</a></span><span class="message">but usually only one newish version</span></div><div class="line" id="121221"><span class="nick" style="color:#6d2462"><a href="#121221" label="[12:12:21]">&lt;bauen1&gt;</a></span><span class="message">i've pushed my latest wip again, but i don't really like how messy all of this is</span></div><div class="line" id="121223"><span class="nick" style="color:#8dd3c7"><a href="#121223" label="[12:12:23]">&lt;stikonas&gt;</a></span><span class="message">and some old versions</span></div><div class="line" id="121250"><span class="nick" style="color:#8dd3c7"><a href="#121250" label="[12:12:50]">&lt;stikonas&gt;</a></span><span class="message">well, you can try to clean it up a bit until you are happier</span></div><div class="line" id="121254"><span class="nick" style="color:#6d2462"><a href="#121254" label="[12:12:54]">&lt;bauen1&gt;</a></span><span class="message">yeah</span></div><div class="line" id="121303"><span class="nick" style="color:#2e2a4a"><a href="#121303" label="[12:13:03]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; fossy: if you are not building full perl for 5.10, maybe microperl is enough?</span></div><div class="line" id="121305"><span class="nick" style="color:#6d2462"><a href="#121305" label="[12:13:05]">&lt;bauen1&gt;</a></span><span class="message">idk, currently run.sh is imo too messy</span></div><div class="line" id="121316"><span class="nick" style="color:#2e2a4a"><a href="#121316" label="[12:13:16]">&lt;fossy&gt;</a></span><span class="message">no im building full Perl -extensions</span></div><div class="line" id="121330"><span class="nick" style="color:#2e2a4a"><a href="#121330" label="[12:13:30]">&lt;fossy&gt;</a></span><span class="message">It needs full stdlib support</span></div><div class="line" id="121337"><span class="nick" style="color:#8dd3c7"><a href="#121337" label="[12:13:37]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="121346"><span class="nick" style="color:#8dd3c7"><a href="#121346" label="[12:13:46]">&lt;stikonas&gt;</a></span><span class="message">not sure what stdlib is though...</span></div><div class="line" id="121350"><span class="nick" style="color:#8dd3c7"><a href="#121350" label="[12:13:50]">&lt;stikonas&gt;</a></span><span class="message">some perl library?</span></div><div class="line" id="121457"><span class="nick" style="color:#2e2a4a"><a href="#121457" label="[12:14:57]">&lt;fossy&gt;</a></span><span class="message">everything in lib/</span></div><div class="line" id="121508"><span class="nick" style="color:#2e2a4a"><a href="#121508" label="[12:15:08]">&lt;fossy&gt;</a></span><span class="message">lib/*.pm basically</span></div><div class="line" id="121514"><span class="nick" style="color:#2e2a4a"><a href="#121514" label="[12:15:14]">&lt;fossy&gt;</a></span><span class="message">might not be the right term</span></div><div class="line" id="121541"><span class="nick" style="color:#8dd3c7"><a href="#121541" label="[12:15:41]">&lt;stikonas&gt;</a></span><span class="message">ok, I see. Anyway, I don't know  the right term either</span></div><div class="line" id="121548"><span class="nick" style="color:#6d2462"><a href="#121548" label="[12:15:48]">&lt;bauen1&gt;</a></span><span class="message">i could also try to build a upkg-build tool to do chroot builds right after we get stow, but i still need to figure out a good way of getting the pseudo packages into the chroot</span></div><div class="line" id="121626"><span class="nick" style="color:#8dd3c7"><a href="#121626" label="[12:16:26]">&lt;stikonas&gt;</a></span><span class="message">well, let's first get stow working...</span></div><div class="line" id="121634"><span class="nick" style="color:#8dd3c7"><a href="#121634" label="[12:16:34]">&lt;stikonas&gt;</a></span><span class="message">but yeah, I think run.sh has to be cleaned up a bit more</span></div><div class="line" id="121644"><span class="nick" style="color:#8dd3c7"><a href="#121644" label="[12:16:44]">&lt;stikonas&gt;</a></span><span class="message">or at least complexity hidden in some function</span></div><div class="line" id="121716"><span class="nick" style="color:#6d2462"><a href="#121716" label="[12:17:16]">&lt;bauen1&gt;</a></span><span class="message">stikonas: stow is already working quite well</span></div><div class="line" id="121726"><span class="nick" style="color:#8dd3c7"><a href="#121726" label="[12:17:26]">&lt;stikonas&gt;</a></span><span class="message">well, run.sh is also better than before</span></div><div class="line" id="121732"><span class="nick" style="color:#6d2462"><a href="#121732" label="[12:17:32]">&lt;bauen1&gt;</a></span><span class="message">stikonas: really ?</span></div><div class="line" id="121754"><span class="nick" style="color:#8dd3c7"><a href="#121754" label="[12:17:54]">&lt;stikonas&gt;</a></span><span class="message">well, I mean you have those link and unlik fucntions</span></div><div class="line" id="121808"><span class="nick" style="color:#6d2462"><a href="#121808" label="[12:18:08]">&lt;bauen1&gt;</a></span><span class="message">true, but imho it's still quite messy :/</span></div><div class="line" id="121811"><span class="nick" style="color:#8dd3c7"><a href="#121811" label="[12:18:11]">&lt;stikonas&gt;</a></span><span class="message">it makes it a bit less messy</span></div><div class="line" id="121816"><span class="nick" style="color:#8dd3c7"><a href="#121816" label="[12:18:16]">&lt;stikonas&gt;</a></span><span class="message">yes, that's also true</span></div><div class="line" id="121826"><span class="nick" style="color:#6d2462"><a href="#121826" label="[12:18:26]">&lt;bauen1&gt;</a></span><span class="message">stikonas: once i catch up to run2 i'll probably rebase, clean up the commits and make a pr</span></div><div class="line" id="121828"><span class="nick" style="color:#8dd3c7"><a href="#121828" label="[12:18:28]">&lt;stikonas&gt;</a></span><span class="message">still better than before, but can try to make it even less messy</span></div><div class="line" id="121906"><span class="nick" style="color:#6d2462"><a href="#121906" label="[12:19:06]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i can start writing a upkg_build1 wrapper that takes care of the first few things (and will eventually be turned into upkg-build to do chroot builds)</span></div><div class="line" id="121955"><span class="nick" style="color:#8dd3c7"><a href="#121955" label="[12:19:55]">&lt;stikonas&gt;</a></span><span class="message">bauen1: one idea for cleanup</span></div><div class="line" id="122001"><span class="nick" style="color:#8dd3c7"><a href="#122001" label="[12:20:01]">&lt;stikonas&gt;</a></span><span class="message">is to have build function do a bit more work</span></div><div class="line" id="122025"><span class="nick" style="color:#8dd3c7"><a href="#122025" label="[12:20:25]">&lt;stikonas&gt;</a></span><span class="message">now all build steps are prefixed with DESTDIR</span></div><div class="line" id="122028"><span class="nick" style="color:#6d2462"><a href="#122028" label="[12:20:28]">&lt;bauen1&gt;</a></span><span class="message">for now i'm playing catch up with all the autotools to specify the concrete version used</span></div><div class="line" id="122033"><span class="nick" style="color:#8dd3c7"><a href="#122033" label="[12:20:33]">&lt;stikonas&gt;</a></span><span class="message">I think we can define it inside build</span></div><div class="line" id="122044"><span class="nick" style="color:#8dd3c7"><a href="#122044" label="[12:20:44]">&lt;stikonas&gt;</a></span><span class="message">yeah, that must be quite some work...</span></div><div class="line" id="122049"><span class="nick" style="color:#8dd3c7"><a href="#122049" label="[12:20:49]">&lt;stikonas&gt;</a></span><span class="message">there are some many autotools</span></div><div class="line" id="122134"><span class="nick" style="color:#6d2462"><a href="#122134" label="[12:21:34]">&lt;bauen1&gt;</a></span><span class="message">defining DESTDIR is usally easy, except for cases with multiple stages / passes, so i would have to rewrite it, but i'll do this next</span></div><div class="line" id="122207"><span class="nick" style="color:#8dd3c7"><a href="#122207" label="[12:22:07]">&lt;stikonas&gt;</a></span><span class="message">oh indeed...</span></div><div class="line" id="122227"><span class="nick" style="color:#8dd3c7"><a href="#122227" label="[12:22:27]">&lt;stikonas&gt;</a></span><span class="message">although, we only care about the last pass</span></div><div class="line" id="122231"><span class="nick" style="color:#8dd3c7"><a href="#122231" label="[12:22:31]">&lt;stikonas&gt;</a></span><span class="message">when installing</span></div><div class="line" id="122307"><span class="nick" style="color:#8dd3c7"><a href="#122307" label="[12:23:07]">&lt;stikonas&gt;</a></span><span class="message">so maybe can do something like: use the same destdir, but if it exists, remove previous destdir once we are ready to install into a new one</span></div><div class="line" id="122310"><span class="nick" style="color:#6d2462"><a href="#122310" label="[12:23:10]">&lt;bauen1&gt;</a></span><span class="message">yes, i also thought about making all the &quot;staged&quot; builds e.g. autoconf bootstrapping into one</span></div><div class="line" id="122323"><span class="nick" style="color:#6d2462"><a href="#122323" label="[12:23:23]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i'd prefer not to do any &quot;remove exisiting&quot; if at all possible</span></div><div class="line" id="122326"><span class="nick" style="color:#8dd3c7"><a href="#122326" label="[12:23:26]">&lt;stikonas&gt;</a></span><span class="message">sometimes there is a gap between stages</span></div><div class="line" id="122334"><span class="nick" style="color:#8dd3c7"><a href="#122334" label="[12:23:34]">&lt;stikonas&gt;</a></span><span class="message">oh I see...</span></div><div class="line" id="122345"><span class="nick" style="color:#6d2462"><a href="#122345" label="[12:23:45]">&lt;bauen1&gt;</a></span><span class="message">stikonas: eventually i can then &quot;preseed&quot; the packages and have upkg skip things if checksums match expected values</span></div><div class="line" id="122358"><span class="nick" style="color:#8dd3c7"><a href="#122358" label="[12:23:58]">&lt;stikonas&gt;</a></span><span class="message">well, can always name DESTDIR=pkg_name_build_script_name</span></div><div class="line" id="122431"><span class="nick" style="color:#6d2462"><a href="#122431" label="[12:24:31]">&lt;bauen1&gt;</a></span><span class="message">right that's a good idea</span></div><div class="line" id="122443"><span class="nick" style="color:#6d2462"><a href="#122443" label="[12:24:43]">&lt;bauen1&gt;</a></span><span class="message">probably $(basename $script_name) but yes that should work</span></div><div class="line" id="132607"><span class="nick" style="color:#80b1d3"><a href="#132607" label="[13:26:07]">&lt;gforce_de1977&gt;</a></span><span class="message">and now for something completely different: <a rel="nofollow" href="https://en.wikipedia.org/wiki/Illegal_prime">https://en.wikipedia.org/wiki/Illegal_prime</a>  -&gt; we should search for a usecase, where the initial seed can be interpreted as PRIME or a subset of PI - Hagfish: this seems to be something for you maybe?</span></div><div class="line" id="132856"><span class="nick" style="color:#6d2462"><a href="#132856" label="[13:28:56]">&lt;bauen1&gt;</a></span><span class="message">isn't there some compression program that does exactly that ?</span></div><div class="line" id="133240"><span class="nick" style="color:#234e69"><a href="#133240" label="[13:32:40]">&lt;OriansJ`&gt;</a></span><span class="message">gforce_de1977: well it certainly is for initial seed to be a subset of PI; finding it is a bit more of a problem. Making it a prime number would be far easier.</span></div><div class="line" id="134434"><span class="nick" style="color:#8dd3c7"><a href="#134434" label="[13:44:34]">&lt;stikonas&gt;</a></span><span class="message">well, any program is almost surely is a subset of pi digits</span></div><div class="line" id="134531"><span class="nick" style="color:#8dd3c7"><a href="#134531" label="[13:45:31]">&lt;stikonas&gt;</a></span><span class="message">anyway, being prime of subset of pi does not guarantee that there are no backdoors</span></div><div class="line" id="134602"><span class="nick" style="color:#8dd3c7"><a href="#134602" label="[13:46:02]">&lt;stikonas&gt;</a></span><span class="message">since pi also should have all malicious programs somewhere in its digits</span></div><div class="line" id="141551"><span class="nick" style="color:#2e2a4a"><a href="#141551" label="[14:15:51]">&lt;fossy&gt;</a></span><span class="message">^^^</span></div><div class="line" id="144448"><span class="nick" style="color:#6d2462"><a href="#144448" label="[14:44:48]">&lt;bauen1&gt;</a></span><span class="message">btw is there a proper name for the autoconf / automake tools ? i just keep calling them autohell, but that might not be quite appropiate</span></div><div class="line" id="145345"><span class="nick" style="color:#6c3d55"><a href="#145345" label="[14:53:45]">&lt;wumpus&gt;</a></span><span class="message">besides &quot;autotools&quot;?</span></div><div class="line" id="145825"><span class="nick" style="color:#6d2462"><a href="#145825" label="[14:58:25]">&lt;bauen1&gt;</a></span><span class="message">oh right</span></div><div class="line" id="155323"><span class="nick" style="color:#6d2462"><a href="#155323" label="[15:53:23]">&lt;bauen1&gt;</a></span><span class="message">gforce_de1977: by the way, how did you get sha256sum to do a recursive checksum of a directory ?</span></div><div class="line" id="160017"><span class="nick" style="color:#d9d9d9"><a href="#160017" label="[16:00:17]">&lt;Hagfish&gt;</a></span><span class="message">gforce_de1977: you know me too well :)  i've already trolled the HN discussion about it</span></div><div class="line" id="160152"><span class="nick" style="color:#d9d9d9"><a href="#160152" label="[16:01:52]">&lt;Hagfish&gt;</a></span><span class="message">well, i didn't mention bootstrapping, but i see what you mean about it overlapping with this project</span></div><div class="line" id="160437"><span class="nick" style="color:#d9d9d9"><a href="#160437" label="[16:04:37]">&lt;Hagfish&gt;</a></span><span class="message">i think the advantage of turning a program into a prime is that it allows it to be published while not the program itself is illegal</span></div><div class="line" id="160501"><span class="nick" style="color:#d9d9d9"><a href="#160501" label="[16:05:01]">&lt;Hagfish&gt;</a></span><span class="message">hopefully that won't ever be the case for bootstraps</span></div><div class="line" id="160649"><span class="nick" style="color:#d9d9d9"><a href="#160649" label="[16:06:49]">&lt;Hagfish&gt;</a></span><span class="message">but yeah, putting the seed into a tweet (in some encoding), and on various blockchains would be a nice way of ensuring it is universally (and permanently) available</span></div><div class="line" id="160747"><span class="nick" style="color:#d9d9d9"><a href="#160747" label="[16:07:47]">&lt;Hagfish&gt;</a></span><span class="message">unfortunately the various source code packages won't be so easy to make available</span></div><div class="line" id="160831"><span class="nick" style="color:#d9d9d9"><a href="#160831" label="[16:08:31]">&lt;Hagfish&gt;</a></span><span class="message">if we're relying on hash matching to secure those, then maybe we only care about the hash of the initial seed</span></div><div class="line" id="160924"><span class="nick" style="color:#d9d9d9"><a href="#160924" label="[16:09:24]">&lt;Hagfish&gt;</a></span><span class="message">as long as you can trust the system which checks the hash of the seed you want to use, hmm</span></div><div class="line" id="161303"><span class="nick" style="color:#6d2462"><a href="#161303" label="[16:13:03]">&lt;bauen1&gt;</a></span><span class="message">you should also include the sha1 of live-bootstraps most recent commit ?</span></div><div class="line" id="161330"><span class="nick" style="color:#6d2462"><a href="#161330" label="[16:13:30]">&lt;bauen1&gt;</a></span><span class="message">(sha256 would be better), then you have a hash tree from using which you can get to gcc 4</span></div><div class="line" id="181811"><span class="nick" style="color:#8dd3c7"><a href="#181811" label="[18:18:11]">&lt;stikonas&gt;</a></span><span class="message">bauen1: where is sha256sum used recursively?</span></div><div class="line" id="185445"><span class="nick" style="color:#6d2462"><a href="#185445" label="[18:54:45]">&lt;bauen1&gt;</a></span><span class="message">stikonas: in a log of gforce_de1977 runs</span></div><div class="line" id="190932"><span class="nick" style="color:#80b1d3"><a href="#190932" label="[19:09:32]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: bauen1: e.g. this file: <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/bootstrap.log-multilog-1-1618127407.txt">http://intercity-vpn.de/bootstrap/bootstrap.log-multilog-1-1618127407.txt</a>  | see at timestamp &quot;00h42m36s&quot; there is a sha256 of all files</span></div><div class="line" id="191042"><span class="nick" style="color:#80b1d3"><a href="#191042" label="[19:10:42]">&lt;gforce_de1977&gt;</a></span><span class="message">its just this command: sha256sum /after/bin/* /after/lib/* /after/include/* /after/share/* || true</span></div><div class="line" id="191114"><span class="nick" style="color:#8dd3c7"><a href="#191114" label="[19:11:14]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: I've just fixed my PR that should fix intermittent error in autoconf <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/96">https://github.com/fosslinux/live-bootstrap/pull/96</a> </span></div><div class="line" id="191201"><span class="nick" style="color:#80b1d3"><a href="#191201" label="[19:12:01]">&lt;gforce_de1977&gt;</a></span><span class="message">very good. just for the record, here is my adapted helpers.sh: <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/sysa-helpers-sh.txt">http://intercity-vpn.de/bootstrap/sysa-helpers-sh.txt</a> </span></div><div class="line" id="191224"><span class="nick" style="color:#80b1d3"><a href="#191224" label="[19:12:24]">&lt;gforce_de1977&gt;</a></span><span class="message">(including the base64 dumper)</span></div><div class="line" id="191406"><span class="nick" style="color:#80b1d3"><a href="#191406" label="[19:14:06]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: please review pull-96 and merge, and i can make another shot of mass-testruns</span></div><div class="line" id="193516"><span class="nick" style="color:#8dd3c7"><a href="#193516" label="[19:35:16]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: can you run mass-test run on branch of PR?</span></div><div class="line" id="193524"><span class="nick" style="color:#8dd3c7"><a href="#193524" label="[19:35:24]">&lt;stikonas&gt;</a></span><span class="message">that might give us more info whether PR works</span></div><div class="line" id="194520"><span class="nick" style="color:#80b1d3"><a href="#194520" label="[19:45:20]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: good idea, running on branch is no problem, will do</span></div><div class="line" id="210119"><span class="nick">***</span><span class="message notice">jorts is now known as nckx</span></div><div class="line" id="211939"><span class="nick">***</span><span class="message notice">cbaines_ is now known as cbaines</span></div><br /></div></body></html>