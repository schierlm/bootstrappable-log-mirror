<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-08-07.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="025021"><span class="nick" style="color:#8dd3c7"><a href="#025021" label="[02:50:21]">&lt;oriansj&gt;</a></span><span class="message">I am guessing the lack of issues is a sign of good progress.</span></div><div class="line" id="025040"><span class="nick" style="color:#8dd3c7"><a href="#025040" label="[02:50:40]">&lt;oriansj&gt;</a></span><span class="message">That or everyone is having a great friday night</span></div><div class="line" id="031325"><span class="nick" style="color:#2e2a4a"><a href="#031325" label="[03:13:25]">&lt;siraben&gt;</a></span><span class="message">oriansj: thanks for the explanation</span></div><div class="line" id="094708"><span class="nick" style="color:#6b8072"><a href="#094708" label="[09:47:08]">&lt;fossy&gt;</a></span><span class="message">i found the issue, wtf</span></div><div class="line" id="094715"><span class="nick" style="color:#6b8072"><a href="#094715" label="[09:47:15]">&lt;fossy&gt;</a></span><span class="message">it is appending '~'s to everything</span></div><div class="line" id="094717"><span class="nick" style="color:#6b8072"><a href="#094717" label="[09:47:17]">&lt;fossy&gt;</a></span><span class="message">why</span></div><div class="line" id="094909"><span class="nick" style="color:#6b8072"><a href="#094909" label="[09:49:09]">&lt;fossy&gt;</a></span><span class="message">oh wait no</span></div><div class="line" id="094927"><span class="nick" style="color:#6b8072"><a href="#094927" label="[09:49:27]">&lt;fossy&gt;</a></span><span class="message">huh</span></div><div class="line" id="105335"><span class="nick" style="color:#6b8072"><a href="#105335" label="[10:53:35]">&lt;fossy&gt;</a></span><span class="message">oh my hack made that happen</span></div><div class="line" id="105346"><span class="nick" style="color:#6b8072"><a href="#105346" label="[10:53:46]">&lt;fossy&gt;</a></span><span class="message">i hope that gnulib-tool works for other packages :X</span></div><div class="line" id="152125"><span class="nick" style="color:#80b1d3"><a href="#152125" label="[15:21:25]">&lt;stikonas&gt;</a></span><span class="message">oriansj: well, I did manage to get some work done...</span></div><div class="line" id="153402"><span class="nick" style="color:#80b1d3"><a href="#153402" label="[15:34:02]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/30">https://github.com/oriansj/stage0-posix/pull/30</a>  should now be ready for merging</span></div><div class="line" id="154927"><span class="nick" style="color:#8dd3c7"><a href="#154927" label="[15:49:27]">&lt;oriansj&gt;</a></span><span class="message">stikonas: reviewing now</span></div><div class="line" id="155250"><span class="nick" style="color:#80b1d3"><a href="#155250" label="[15:52:50]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I'll also update bootstrap-seeds later</span></div><div class="line" id="155324"><span class="nick" style="color:#80b1d3"><a href="#155324" label="[15:53:24]">&lt;stikonas&gt;</a></span><span class="message">but maybe I'll try to do some experiments first if I can get something like kaem-micro with hardcoded execve commands...</span></div><div class="line" id="155516"><span class="nick" style="color:#8dd3c7"><a href="#155516" label="[15:55:16]">&lt;oriansj&gt;</a></span><span class="message">stikonas: looks good. Merged</span></div><div class="line" id="160058"><span class="nick" style="color:#8dd3c7"><a href="#160058" label="[16:00:58]">&lt;oriansj&gt;</a></span><span class="message">and I reached out to yt to see if he is interested in leveraging the new mescc-tools word functionality for AArch64. As we skipped this headache with AArch64 but it would make the binaries more efficient.</span></div><div class="line" id="160630"><span class="nick" style="color:#80b1d3"><a href="#160630" label="[16:06:30]">&lt;stikonas&gt;</a></span><span class="message">well, yes, it's a bit more pain but more universal</span></div><div class="line" id="160744"><span class="nick" style="color:#8dd3c7"><a href="#160744" label="[16:07:44]">&lt;oriansj&gt;</a></span><span class="message">well it certainly better maps to R\</span></div><div class="line" id="160801"><span class="nick" style="color:#8dd3c7"><a href="#160801" label="[16:08:01]">&lt;oriansj&gt;</a></span><span class="message">sorry child attack</span></div><div class="line" id="160829"><span class="nick" style="color:#8dd3c7"><a href="#160829" label="[16:08:29]">&lt;oriansj&gt;</a></span><span class="message">well it certainly better maps to 1980s RI</span></div><div class="line" id="160846"><span class="nick" style="color:#8dd3c7"><a href="#160846" label="[16:08:46]">&lt;oriansj&gt;</a></span><span class="message">well it certainly better maps to 1980s RISC style instruction sets</span></div><div class="line" id="170004"><span class="nick" style="color:#80b1d3"><a href="#170004" label="[17:00:04]">&lt;stikonas&gt;</a></span><span class="message">oriansj: so like I said I'm trying to see how big kaem-micro would be. Do you think we should use hex0-seed to build hex0 first before building kaem-minimel with hex0?</span></div><div class="line" id="170019"><span class="nick" style="color:#80b1d3"><a href="#170019" label="[17:00:19]">&lt;stikonas&gt;</a></span><span class="message">the other alternative would be to use hex0-seed to build kaem-minimal</span></div><div class="line" id="170040"><span class="nick" style="color:#80b1d3"><a href="#170040" label="[17:00:40]">&lt;stikonas&gt;</a></span><span class="message">it's 1 less command, but maybe somewhat ideal since we use hex0-seed twice</span></div><div class="line" id="170406"><span class="nick" style="color:#8dd3c7"><a href="#170406" label="[17:04:06]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well the reason for building hex0 first is to make the binary check space smaller. As kaem-minimal is a much bigger binary than hex0. So one wouldn't have to inspect the kaem-minimal binary if the hex0 binary checks out.</span></div><div class="line" id="170540"><span class="nick" style="color:#8dd3c7"><a href="#170540" label="[17:05:40]">&lt;oriansj&gt;</a></span><span class="message">doing the hex0-seed -&gt; hex0 -&gt;kaem-minimal  means one need only check the hex0-seed, hex0 and kaem-optional binaries</span></div><div class="line" id="180836"><span class="nick" style="color:#80b1d3"><a href="#180836" label="[18:08:36]">&lt;stikonas&gt;</a></span><span class="message">oriansj: small PR to remove two unnecessary lines <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/31/files">https://github.com/oriansj/stage0-posix/pull/31/files</a> </span></div><div class="line" id="181216"><span class="nick" style="color:#80b1d3"><a href="#181216" label="[18:12:16]">&lt;stikonas&gt;</a></span><span class="message">I also have a proposal for kaem-micro.S now</span></div><div class="line" id="181243"><span class="nick" style="color:#80b1d3"><a href="#181243" label="[18:12:43]">&lt;stikonas&gt;</a></span><span class="message">will make another PR</span></div><div class="line" id="181803"><span class="nick" style="color:#80b1d3"><a href="#181803" label="[18:18:03]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/32">https://github.com/oriansj/stage0-posix/pull/32</a> </span></div><div class="line" id="181828"><span class="nick" style="color:#80b1d3"><a href="#181828" label="[18:18:28]">&lt;stikonas&gt;</a></span><span class="message">in particular it would be nice to get a review on hex0_seed: part</span></div><div class="line" id="182404"><span class="nick" style="color:#80b1d3"><a href="#182404" label="[18:24:04]">&lt;stikonas&gt;</a></span><span class="message">so I think kaem-micro might be 301 byte long out: 64 byte elf header, 89 bytes of ASCII encoded strings and 148 bytes of instructions</span></div><div class="line" id="182637"><span class="nick" style="color:#80b1d3"><a href="#182637" label="[18:26:37]">&lt;stikonas&gt;</a></span><span class="message">well, it doesn't do much, most of the things happen in the kernel</span></div><div class="line" id="193835"><span class="nick" style="color:#80b1d3"><a href="#193835" label="[19:38:35]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe I should pass path to hex0-seed as command line argument</span></div><div class="line" id="193907"><span class="nick" style="color:#80b1d3"><a href="#193907" label="[19:39:07]">&lt;stikonas&gt;</a></span><span class="message">I think arguments can be passsed to even initramfs when kaem is used as init</span></div><div class="line" id="223331"><span class="nick" style="color:#8dd3c7"><a href="#223331" label="[22:33:31]">&lt;oriansj&gt;</a></span><span class="message">stikonas: your kaem-micro looks promising.</span></div><div class="line" id="223528"><span class="nick" style="color:#8dd3c7"><a href="#223528" label="[22:35:28]">&lt;oriansj&gt;</a></span><span class="message">moving kaem_minimal: after clone would reduce the number of jumps by 1</span></div><div class="line" id="223552"><span class="nick" style="color:#8dd3c7"><a href="#223552" label="[22:35:52]">&lt;oriansj&gt;</a></span><span class="message">as parent wouldn't need to jump</span></div><div class="line" id="223609"><span class="nick" style="color:#80b1d3"><a href="#223609" label="[22:36:09]">&lt;stikonas&gt;</a></span><span class="message">let me see if I have the latest code in PR</span></div><div class="line" id="223614"><span class="nick" style="color:#80b1d3"><a href="#223614" label="[22:36:14]">&lt;stikonas&gt;</a></span><span class="message">I made some changes already</span></div><div class="line" id="223635"><span class="nick" style="color:#80b1d3"><a href="#223635" label="[22:36:35]">&lt;stikonas&gt;</a></span><span class="message">ok, it's not the latest</span></div><div class="line" id="223648"><span class="nick" style="color:#80b1d3"><a href="#223648" label="[22:36:48]">&lt;stikonas&gt;</a></span><span class="message">I reduced start_kaem part</span></div><div class="line" id="223933"><span class="nick" style="color:#80b1d3"><a href="#223933" label="[22:39:33]">&lt;stikonas&gt;</a></span><span class="message">ok, I pushed my latest version</span></div><div class="line" id="223939"><span class="nick" style="color:#80b1d3"><a href="#223939" label="[22:39:39]">&lt;stikonas&gt;</a></span><span class="message">let's see if your suggestion still applies</span></div><div class="line" id="224139"><span class="nick" style="color:#80b1d3"><a href="#224139" label="[22:41:39]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I'm a bit confused now, but maybe because of the changes I made now</span></div><div class="line" id="224230"><span class="nick" style="color:#80b1d3"><a href="#224230" label="[22:42:30]">&lt;stikonas&gt;</a></span><span class="message">oriansj: did you mean this beqz s4, kaem_minimal  jump can be eliminated?</span></div><div class="line" id="224249"><span class="nick" style="color:#8dd3c7"><a href="#224249" label="[22:42:49]">&lt;oriansj&gt;</a></span><span class="message">unless I misunderstood its purpose</span></div><div class="line" id="224249"><span class="nick" style="color:#80b1d3"><a href="#224249" label="[22:42:49]">&lt;stikonas&gt;</a></span><span class="message">but don't we need to jump back to clone then</span></div><div class="line" id="224306"><span class="nick" style="color:#80b1d3"><a href="#224306" label="[22:43:06]">&lt;stikonas&gt;</a></span><span class="message">the whole thing runs twice or some parts 3 times</span></div><div class="line" id="224306"><span class="nick" style="color:#8dd3c7"><a href="#224306" label="[22:43:06]">&lt;oriansj&gt;</a></span><span class="message">and we would be dropping the j clone for hex0 as well</span></div><div class="line" id="224325"><span class="nick" style="color:#80b1d3"><a href="#224325" label="[22:43:25]">&lt;stikonas&gt;</a></span><span class="message">basically I used hex0-seed to build hex0</span></div><div class="line" id="224330"><span class="nick" style="color:#80b1d3"><a href="#224330" label="[22:43:30]">&lt;stikonas&gt;</a></span><span class="message">then hex0 to build kaem-minimal</span></div><div class="line" id="224341"><span class="nick" style="color:#80b1d3"><a href="#224341" label="[22:43:41]">&lt;stikonas&gt;</a></span><span class="message">and last jump is to a bit later to execve (without clone)</span></div><div class="line" id="224431"><span class="nick" style="color:#8dd3c7"><a href="#224431" label="[22:44:31]">&lt;oriansj&gt;</a></span><span class="message">what happens if you put an array of pointers after the program end that point to the strings? Could you simplify the logic?</span></div><div class="line" id="224505"><span class="nick" style="color:#80b1d3"><a href="#224505" label="[22:45:05]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe, not sure</span></div><div class="line" id="224519"><span class="nick" style="color:#80b1d3"><a href="#224519" label="[22:45:19]">&lt;stikonas&gt;</a></span><span class="message">well, argv is an array of pointers which I construct in the middle</span></div><div class="line" id="224553"><span class="nick" style="color:#80b1d3"><a href="#224553" label="[22:45:53]">&lt;stikonas&gt;</a></span><span class="message">but how would I calculate those pointers?</span></div><div class="line" id="224604"><span class="nick" style="color:#80b1d3"><a href="#224604" label="[22:46:04]">&lt;stikonas&gt;</a></span><span class="message">I would need to manually calculate them from base address</span></div><div class="line" id="224628"><span class="nick" style="color:#8dd3c7"><a href="#224628" label="[22:46:28]">&lt;oriansj&gt;</a></span><span class="message">not when dealing with NASM but yes when converting to hex0</span></div><div class="line" id="224709"><span class="nick" style="color:#80b1d3"><a href="#224709" label="[22:47:09]">&lt;stikonas&gt;</a></span><span class="message">well, this has a slight advantaget that it's mostly a subset of kaem-minimal</span></div><div class="line" id="224712"><span class="nick" style="color:#80b1d3"><a href="#224712" label="[22:47:12]">&lt;stikonas&gt;</a></span><span class="message">so not much new logic</span></div><div class="line" id="224720"><span class="nick" style="color:#8dd3c7"><a href="#224720" label="[22:47:20]">&lt;oriansj&gt;</a></span><span class="message">then you could skip the argv array generation.</span></div><div class="line" id="224733"><span class="nick" style="color:#80b1d3"><a href="#224733" label="[22:47:33]">&lt;stikonas&gt;</a></span><span class="message">but yeah, maybe it will still be the case...</span></div><div class="line" id="224735"><span class="nick" style="color:#80b1d3"><a href="#224735" label="[22:47:35]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="224821"><span class="nick" style="color:#80b1d3"><a href="#224821" label="[22:48:21]">&lt;stikonas&gt;</a></span><span class="message">although, hex0-seed is kind of dynamic</span></div><div class="line" id="224827"><span class="nick" style="color:#80b1d3"><a href="#224827" label="[22:48:27]">&lt;stikonas&gt;</a></span><span class="message">can be supplied from command line</span></div><div class="line" id="224836"><span class="nick" style="color:#8dd3c7"><a href="#224836" label="[22:48:36]">&lt;oriansj&gt;</a></span><span class="message">I noticed that</span></div><div class="line" id="224839"><span class="nick" style="color:#80b1d3"><a href="#224839" label="[22:48:39]">&lt;stikonas&gt;</a></span><span class="message">so I still need to do some work</span></div><div class="line" id="224902"><span class="nick" style="color:#8dd3c7"><a href="#224902" label="[22:49:02]">&lt;oriansj&gt;</a></span><span class="message">but one can always replace the binary in the file location dictated in our bootstrap</span></div><div class="line" id="224920"><span class="nick" style="color:#8dd3c7"><a href="#224920" label="[22:49:20]">&lt;oriansj&gt;</a></span><span class="message">and we don't need to support additional locations either.</span></div><div class="line" id="225137"><span class="nick" style="color:#80b1d3"><a href="#225137" label="[22:51:37]">&lt;stikonas&gt;</a></span><span class="message">do you know if GAS supports these pointers ?</span></div><div class="line" id="225144"><span class="nick" style="color:#80b1d3"><a href="#225144" label="[22:51:44]">&lt;stikonas&gt;</a></span><span class="message">or do I need to go to lower level first</span></div><div class="line" id="225302"><span class="nick" style="color:#8dd3c7"><a href="#225302" label="[22:53:02]">&lt;oriansj&gt;</a></span><span class="message">GAS should support addresses if I remember correctly.</span></div><div class="line" id="225324"><span class="nick" style="color:#80b1d3"><a href="#225324" label="[22:53:24]">&lt;stikonas&gt;</a></span><span class="message">well, probably it's time to read some manuals</span></div><div class="line" id="225348"><span class="nick" style="color:#8dd3c7"><a href="#225348" label="[22:53:48]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/AArch64/GAS/cc_aarch64.S#L4675">https://github.com/oriansj/stage0-posix/blob/master/AArch64/GAS/cc_aarch64.S#L4675</a> </span></div><div class="line" id="225411"><span class="nick" style="color:#8dd3c7"><a href="#225411" label="[22:54:11]">&lt;oriansj&gt;</a></span><span class="message">or remember that AArch64 uses GAS and cc_* always needs to use such pointers to support basic types</span></div><div class="line" id="225520"><span class="nick" style="color:#8dd3c7"><a href="#225520" label="[22:55:20]">&lt;oriansj&gt;</a></span><span class="message">and so did ARMv7l <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/armv7l/GAS/cc_x86.S#L5883">https://github.com/oriansj/stage0-posix/blob/master/armv7l/GAS/cc_x86.S#L5883</a> </span></div><div class="line" id="225549"><span class="nick" style="color:#80b1d3"><a href="#225549" label="[22:55:49]">&lt;stikonas&gt;</a></span><span class="message">well, I havne't looked ata cc_* yet...</span></div><div class="line" id="225553"><span class="nick" style="color:#80b1d3"><a href="#225553" label="[22:55:53]">&lt;stikonas&gt;</a></span><span class="message">so didn't know that</span></div><div class="line" id="225603"><span class="nick" style="color:#80b1d3"><a href="#225603" label="[22:56:03]">&lt;stikonas&gt;</a></span><span class="message">it's still some time before we can reach that on riscv...</span></div><div class="line" id="225610"><span class="nick" style="color:#8dd3c7"><a href="#225610" label="[22:56:10]">&lt;oriansj&gt;</a></span><span class="message">fortunately I am always happy to help</span></div><div class="line" id="225615"><span class="nick" style="color:#80b1d3"><a href="#225615" label="[22:56:15]">&lt;stikonas&gt;</a></span><span class="message">true</span></div><div class="line" id="225705"><span class="nick" style="color:#8dd3c7"><a href="#225705" label="[22:57:05]">&lt;oriansj&gt;</a></span><span class="message">now you have a new tool to play with</span></div><div class="line" id="225706"><span class="nick" style="color:#80b1d3"><a href="#225706" label="[22:57:06]">&lt;stikonas&gt;</a></span><span class="message">ok, so I guess it's just .quad label</span></div><div class="line" id="225723"><span class="nick" style="color:#8dd3c7"><a href="#225723" label="[22:57:23]">&lt;oriansj&gt;</a></span><span class="message">on 64bit architecture .word for 32bit architectures</span></div><div class="line" id="225734"><span class="nick" style="color:#80b1d3"><a href="#225734" label="[22:57:34]">&lt;stikonas&gt;</a></span><span class="message">well, yes...</span></div><div class="line" id="225824"><span class="nick" style="color:#80b1d3"><a href="#225824" label="[22:58:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, so you think  we should only support ../bootstrap-seeds/POSIX/riscv64/hex0-seed ?</span></div><div class="line" id="225902"><span class="nick" style="color:#80b1d3"><a href="#225902" label="[22:59:02]">&lt;stikonas&gt;</a></span><span class="message">override is I guess 3 instructions or so</span></div><div class="line" id="230057"><span class="nick" style="color:#8dd3c7"><a href="#230057" label="[23:00:57]">&lt;oriansj&gt;</a></span><span class="message">stikonas: who besides live-bootstrap and stage0-posix leverages bootstrap-seeds?</span></div><div class="line" id="230145"><span class="nick" style="color:#8dd3c7"><a href="#230145" label="[23:01:45]">&lt;oriansj&gt;</a></span><span class="message">if someone needs it later, we can always go back and add it.</span></div><div class="line" id="230248"><span class="nick" style="color:#80b1d3"><a href="#230248" label="[23:02:48]">&lt;stikonas&gt;</a></span><span class="message">well, nobody else uses</span></div><div class="line" id="230430"><span class="nick" style="color:#8dd3c7"><a href="#230430" label="[23:04:30]">&lt;oriansj&gt;</a></span><span class="message">so do what makes your live easier or you find more fun. Either or both is perfectly acceptable to me.</span></div><div class="line" id="231047"><span class="nick" style="color:#80b1d3"><a href="#231047" label="[23:10:47]">&lt;stikonas&gt;</a></span><span class="message">well, in live-bootstrap we are using ../bootstrap-seeds/POSIX/riscv64/hex0-seed</span></div><div class="line" id="231101"><span class="nick" style="color:#80b1d3"><a href="#231101" label="[23:11:01]">&lt;stikonas&gt;</a></span><span class="message">altough, I think it's actually /bootstrap-seeds/POSIX/riscv64/hex0-seed there</span></div><div class="line" id="231121"><span class="nick" style="color:#80b1d3"><a href="#231121" label="[23:11:21]">&lt;stikonas&gt;</a></span><span class="message">but fortunately kernel treats /.. as /</span></div><div class="line" id="231753"><span class="nick" style="color:#8dd3c7"><a href="#231753" label="[23:17:53]">&lt;oriansj&gt;</a></span><span class="message">well at the end of the day stage0-posix assumes that the binaries in bootstrap-seeds can be replaced at any time for any reason with anything that supports the minimal functionality.</span></div><div class="line" id="233923"><span class="nick" style="color:#80b1d3"><a href="#233923" label="[23:39:23]">&lt;stikonas&gt;</a></span><span class="message">oriansj: like this <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/32/files">https://github.com/oriansj/stage0-posix/pull/32/files</a>  ?</span></div><div class="line" id="233935"><span class="nick" style="color:#80b1d3"><a href="#233935" label="[23:39:35]">&lt;stikonas&gt;</a></span><span class="message">it is simpler I guess</span></div><div class="line" id="233947"><span class="nick" style="color:#80b1d3"><a href="#233947" label="[23:39:47]">&lt;stikonas&gt;</a></span><span class="message">at the very least more data and fewer instructions</span></div><div class="line" id="234141"><span class="nick" style="color:#80b1d3"><a href="#234141" label="[23:41:41]">&lt;stikonas&gt;</a></span><span class="message">only 24 instructions now, althogh a bit more data to calculate</span></div><div class="line" id="234834"><span class="nick" style="color:#80b1d3"><a href="#234834" label="[23:48:34]">&lt;stikonas&gt;</a></span><span class="message">actually, we don't need to share stack, so can shorten it a bit more</span></div><br /></div></body></html>