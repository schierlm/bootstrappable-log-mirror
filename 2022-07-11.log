<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-07-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="030352"><span class="nick" style="color:#8dd3c7"><a href="#030352" label="[03:03:52]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://futo.org/about/what-is-futo">https://futo.org/about/what-is-futo</a> </span></div><div class="line" id="030355"><span class="nick" style="color:#8dd3c7"><a href="#030355" label="[03:03:55]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Through a combination of in-house engineering projects, targeted investments, generous grants, and multi-media public education efforts, we will free technology from the control of the few and recreate the spirit of freedom, innovation, and self-reliance that underpinned the American tech industry only a few decades ago.&quot;</span></div><div class="line" id="030544"><span class="nick" style="color:#2e2a4a"><a href="#030544" label="[03:05:44]">&lt;muurkha&gt;</a></span><span class="message">sweet</span></div><div class="line" id="030554"><span class="nick" style="color:#2e2a4a"><a href="#030554" label="[03:05:54]">&lt;muurkha&gt;</a></span><span class="message">they're doomed!</span></div><div class="line" id="041612"><span class="nick" style="color:#6b8072"><a href="#041612" label="[04:16:12]">&lt;oriansj&gt;</a></span><span class="message">well I think I managed to make negative progress</span></div><div class="line" id="041821"><span class="nick" style="color:#6b8072"><a href="#041821" label="[04:18:21]">&lt;oriansj&gt;</a></span><span class="message">so that is nice</span></div><div class="line" id="042239"><span class="nick" style="color:#6b8072"><a href="#042239" label="[04:22:39]">&lt;oriansj&gt;</a></span><span class="message">stikonas: you might want to expand efi support to include: <a rel="nofollow" href="https://wiki.osdev.org/UEFI#My_UEFI_application_hangs.2Fresets_after_about_5_minutes">https://wiki.osdev.org/UEFI#My_UEFI_application_hangs.2Fresets_after_about_5_minutes</a> </span></div><div class="line" id="042711"><span class="nick" style="color:#2e2a4a"><a href="#042711" label="[04:27:11]">&lt;muurkha&gt;</a></span><span class="message">I have a lot of days like that</span></div><div class="line" id="042825"><span class="nick" style="color:#6b8072"><a href="#042825" label="[04:28:25]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1246811/">https://paste.debian.net/1246811/</a> </span></div><div class="line" id="042848"><span class="nick" style="color:#6b8072"><a href="#042848" label="[04:28:48]">&lt;oriansj&gt;</a></span><span class="message">it is hanging on the fout-&gt;write(fout, &amp;size, &amp;output_buffer);</span></div><div class="line" id="042941"><span class="nick" style="color:#2e2a4a"><a href="#042941" label="[04:29:41]">&lt;muurkha&gt;</a></span><span class="message">&quot;fout&quot;, by the way, is French for</span></div><div class="line" id="043125"><span class="nick" style="color:#6b8072"><a href="#043125" label="[04:31:25]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://dictionary.reverso.net/french-english/fout">https://dictionary.reverso.net/french-english/fout</a> </span></div><div class="line" id="043152"><span class="nick" style="color:#6b8072"><a href="#043152" label="[04:31:52]">&lt;oriansj&gt;</a></span><span class="message">he doesn't care at all; sounds like uefi to me</span></div><div class="line" id="043209"><span class="nick" style="color:#2e2a4a"><a href="#043209" label="[04:32:09]">&lt;muurkha&gt;</a></span><span class="message">me too</span></div><div class="line" id="043336"><span class="nick" style="color:#6b8072"><a href="#043336" label="[04:33:36]">&lt;oriansj&gt;</a></span><span class="message">although I also get: ./efi/file_protocol.h:15:46: warning: implicit conversion from 'unsigned long long' to 'uint64_t' (aka 'unsigned long') changes value from 9223372036854775808 to 0 [-Wconstant-conversion] so it might be related if the create bit isn't being set but it also doesn't overwrite files that exist either so... puzzle</span></div><div class="line" id="043545"><span class="nick" style="color:#6b8072"><a href="#043545" label="[04:35:45]">&lt;oriansj&gt;</a></span><span class="message">and a minor diff was needed for a debian build: <a rel="nofollow" href="https://paste.debian.net/1246812/">https://paste.debian.net/1246812/</a> </span></div><div class="line" id="043602"><span class="nick" style="color:#2e2a4a"><a href="#043602" label="[04:36:02]">&lt;muurkha&gt;</a></span><span class="message">Ã§a son foutu, n'est-ce pas?</span></div><div class="line" id="044000"><span class="nick" style="color:#6b8072"><a href="#044000" label="[04:40:00]">&lt;oriansj&gt;</a></span><span class="message">I've seen worse</span></div><div class="line" id="143648"><span class="nick" style="color:#80b1d3"><a href="#143648" label="[14:36:48]">&lt;stikonas[m]&gt;</a></span><span class="message">oriansj: oh yeah, I've read about that timer</span></div><div class="line" id="143704"><span class="nick" style="color:#80b1d3"><a href="#143704" label="[14:37:04]">&lt;stikonas[m]&gt;</a></span><span class="message">Probably only relevant for kaem?</span></div><div class="line" id="143723"><span class="nick" style="color:#80b1d3"><a href="#143723" label="[14:37:23]">&lt;stikonas[m]&gt;</a></span><span class="message">Hex should never run for 5 minutes</span></div><div class="line" id="143742"><span class="nick" style="color:#80b1d3"><a href="#143742" label="[14:37:42]">&lt;stikonas[m]&gt;</a></span><span class="message">And if we go for mes later, we might need it there too</span></div><div class="line" id="144117"><span class="nick" style="color:#80b1d3"><a href="#144117" label="[14:41:17]">&lt;stikonas[m]&gt;</a></span><span class="message">I'll take a look at your diff's in the evening</span></div><div class="line" id="144146"><span class="nick" style="color:#80b1d3"><a href="#144146" label="[14:41:46]">&lt;stikonas[m]&gt;</a></span><span class="message">Though for makefile maybe it's better to search over all candidate paths for ovmf</span></div><div class="line" id="202846"><span class="nick">***</span><span class="message notice">Andrew is now known as HaxCPU</span></div><div class="line" id="210753"><span class="nick" style="color:#6d2462"><a href="#210753" label="[21:07:53]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I'm looking at you makefile changes</span></div><div class="line" id="210800"><span class="nick" style="color:#6d2462"><a href="#210800" label="[21:08:00]">&lt;stikonas&gt;</a></span><span class="message">do you not have KVM on Debian?</span></div><div class="line" id="210940"><span class="nick" style="color:#6d2462"><a href="#210940" label="[21:09:40]">&lt;stikonas&gt;</a></span><span class="message">which would be a bit strange as kvm is used widely, including in live-bootstrpa</span></div><div class="line" id="211416"><span class="nick" style="color:#234e69"><a href="#211416" label="[21:14:16]">&lt;vagrantc&gt;</a></span><span class="message">kvm in various forms is definitely present in debian ...</span></div><div class="line" id="211427"><span class="nick" style="color:#234e69"><a href="#211427" label="[21:14:27]">&lt;vagrantc&gt;</a></span><span class="message">although the kvm package was merged into qemu quite some years ago</span></div><div class="line" id="211456"><span class="nick" style="color:#6d2462"><a href="#211456" label="[21:14:56]">&lt;stikonas&gt;</a></span><span class="message">that's why I'm a bit surprised...</span></div><div class="line" id="211515"><span class="nick" style="color:#6d2462"><a href="#211515" label="[21:15:15]">&lt;stikonas&gt;</a></span><span class="message">for the context, it's this patch I'm talking about <a rel="nofollow" href="https://paste.debian.net/1246812/">https://paste.debian.net/1246812/</a> </span></div><div class="line" id="211534"><span class="nick" style="color:#6d2462"><a href="#211534" label="[21:15:34]">&lt;stikonas&gt;</a></span><span class="message">well, location of OVMF_CODE.fd is different, so I guess Makefile should look in both places</span></div><div class="line" id="211856"><span class="nick" style="color:#6c3d55"><a href="#211856" label="[21:18:56]">&lt;bauen1&gt;</a></span><span class="message">i don't think you want to run live-bootstrap without kvm, that just makes it take even longer</span></div><div class="line" id="212441"><span class="nick" style="color:#6d2462"><a href="#212441" label="[21:24:41]">&lt;stikonas&gt;</a></span><span class="message">yes, it would be taking a day instead of 2h</span></div><div class="line" id="212458"><span class="nick" style="color:#6d2462"><a href="#212458" label="[21:24:58]">&lt;stikonas&gt;</a></span><span class="message">hence I was adding -enable-kvm option in stage0-uefi too</span></div><div class="line" id="214338"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="222858"><span class="nick" style="color:#6b8072"><a href="#222858" label="[22:28:58]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well currently kvm is off for me; I'll probably turn it back on in the future but it isn't on at this moment.</span></div><div class="line" id="222922"><span class="nick" style="color:#6d2462"><a href="#222922" label="[22:29:22]">&lt;stikonas&gt;</a></span><span class="message">hmm, I see...</span></div><div class="line" id="222942"><span class="nick" style="color:#6d2462"><a href="#222942" label="[22:29:42]">&lt;stikonas&gt;</a></span><span class="message">well, so far I pushed in OVMF path change</span></div><div class="line" id="223020"><span class="nick" style="color:#6d2462"><a href="#223020" label="[22:30:20]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/commit/cd512505997e8c93535edaa593bbf7eeac02bb44">https://git.stikonas.eu/andrius/stage0-uefi/commit/cd512505997e8c93535edaa593bbf7eeac02bb44</a> </span></div><div class="line" id="223204"><span class="nick" style="color:#234e69"><a href="#223204" label="[22:32:04]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: you turned it off in the hardware?</span></div><div class="line" id="223223"><span class="nick" style="color:#234e69"><a href="#223223" label="[22:32:23]">&lt;vagrantc&gt;</a></span><span class="message">oh wow, stage0-uefi ... this is getting exciting!</span></div><div class="line" id="223248"><span class="nick" style="color:#6d2462"><a href="#223248" label="[22:32:48]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: well, it's very early stages</span></div><div class="line" id="223257"><span class="nick" style="color:#6d2462"><a href="#223257" label="[22:32:57]">&lt;stikonas&gt;</a></span><span class="message">I just started reading about it last weekend</span></div><div class="line" id="223259"><span class="nick" style="color:#6b8072"><a href="#223259" label="[22:32:59]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: well in my libreboot firmware</span></div><div class="line" id="223310"><span class="nick" style="color:#6d2462"><a href="#223310" label="[22:33:10]">&lt;stikonas&gt;</a></span><span class="message">oh I see...</span></div><div class="line" id="223329"><span class="nick" style="color:#6d2462"><a href="#223329" label="[22:33:29]">&lt;stikonas&gt;</a></span><span class="message">oriansj: ideally we would enable it by default but let turn it off in makefile</span></div><div class="line" id="223333"><span class="nick" style="color:#234e69"><a href="#223333" label="[22:33:33]">&lt;vagrantc&gt;</a></span><span class="message">hard/soft/firmware</span></div><div class="line" id="223359"><span class="nick" style="color:#234e69"><a href="#223359" label="[22:33:59]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: stability issues? security issues?</span></div><div class="line" id="223422"><span class="nick" style="color:#6d2462"><a href="#223422" label="[22:34:22]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: right now we only have hex0.c and kaem.c high level prototypes <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/Development">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/Development</a>  and I just started hex0.S (but so far only one function call is done)</span></div><div class="line" id="223502"><span class="nick" style="color:#6b8072"><a href="#223502" label="[22:35:02]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well a variable would make it simple</span></div><div class="line" id="223521"><span class="nick" style="color:#6d2462"><a href="#223521" label="[22:35:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, with some default value</span></div><div class="line" id="223551"><span class="nick" style="color:#6d2462"><a href="#223551" label="[22:35:51]">&lt;stikonas&gt;</a></span><span class="message">QEMU_KVM = -enable-kvm and then you can run with make QEMU_KVM=</span></div><div class="line" id="223607"><span class="nick" style="color:#6b8072"><a href="#223607" label="[22:36:07]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: there is a security reason for it at this momement but generally it is a very useful tool.</span></div><div class="line" id="223638"><span class="nick" style="color:#6d2462"><a href="#223638" label="[22:36:38]">&lt;stikonas&gt;</a></span><span class="message">oriansj: do you want to make a merge request or should I push it myself?</span></div><div class="line" id="223701"><span class="nick" style="color:#6d2462"><a href="#223701" label="[22:37:01]">&lt;stikonas&gt;</a></span><span class="message">and then you can test...</span></div><div class="line" id="223724"><span class="nick" style="color:#6b8072"><a href="#223724" label="[22:37:24]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I'm still playing here to get a feel for uefi, so please don't let me stop you</span></div><div class="line" id="223732"><span class="nick" style="color:#6d2462"><a href="#223732" label="[22:37:32]">&lt;stikonas&gt;</a></span><span class="message">sure, no problem</span></div><div class="line" id="223739"><span class="nick" style="color:#6d2462"><a href="#223739" label="[22:37:39]">&lt;stikonas&gt;</a></span><span class="message">I also still need to look at your other changes</span></div><div class="line" id="223749"><span class="nick" style="color:#6d2462"><a href="#223749" label="[22:37:49]">&lt;stikonas&gt;</a></span><span class="message">you wanted to switch to buffered reads?</span></div><div class="line" id="223814"><span class="nick" style="color:#6d2462"><a href="#223814" label="[22:38:14]">&lt;stikonas&gt;</a></span><span class="message">I was thinking about it, but I'm not sure if it's worth doing it for hex0 or hex1, maybe for hex2...</span></div><div class="line" id="223822"><span class="nick" style="color:#6b8072"><a href="#223822" label="[22:38:22]">&lt;oriansj&gt;</a></span><span class="message">stikonas: no, I was trying to figure out the read/write behavior for UEFI</span></div><div class="line" id="223823"><span class="nick" style="color:#6d2462"><a href="#223823" label="[22:38:23]">&lt;stikonas&gt;</a></span><span class="message">since I think it would end up in more instructions</span></div><div class="line" id="223828"><span class="nick" style="color:#6d2462"><a href="#223828" label="[22:38:28]">&lt;stikonas&gt;</a></span><span class="message">oh I se...</span></div><div class="line" id="223849"><span class="nick" style="color:#6d2462"><a href="#223849" label="[22:38:49]">&lt;stikonas&gt;</a></span><span class="message">I have done a lot of tests before I got it to work...</span></div><div class="line" id="223900"><span class="nick" style="color:#6b8072"><a href="#223900" label="[22:39:00]">&lt;oriansj&gt;</a></span><span class="message">as I noted a weird thing when I tried to writes, it would just hang</span></div><div class="line" id="223920"><span class="nick" style="color:#6d2462"><a href="#223920" label="[22:39:20]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's the problem. It's hard to debug...</span></div><div class="line" id="223932"><span class="nick" style="color:#6d2462"><a href="#223932" label="[22:39:32]">&lt;stikonas&gt;</a></span><span class="message">I think it might be possible to wire in gdb, but it's not trivial</span></div><div class="line" id="223934"><span class="nick" style="color:#6d2462"><a href="#223934" label="[22:39:34]">&lt;stikonas&gt;</a></span><span class="message">due to relocations</span></div><div class="line" id="223941"><span class="nick" style="color:#6b8072"><a href="#223941" label="[22:39:41]">&lt;oriansj&gt;</a></span><span class="message">so there is something I am missing with writes that is important, I just don't know exactly what it is yet.</span></div><div class="line" id="223955"><span class="nick" style="color:#6d2462"><a href="#223955" label="[22:39:55]">&lt;stikonas&gt;</a></span><span class="message">so I was mostly debugging with return codes...</span></div><div class="line" id="224017"><span class="nick" style="color:#6b8072"><a href="#224017" label="[22:40:17]">&lt;oriansj&gt;</a></span><span class="message">I added a function to print debug statements</span></div><div class="line" id="224018"><span class="nick" style="color:#6d2462"><a href="#224018" label="[22:40:18]">&lt;stikonas&gt;</a></span><span class="message">but yes, I had some issues too with buffers</span></div><div class="line" id="224025"><span class="nick" style="color:#6d2462"><a href="#224025" label="[22:40:25]">&lt;stikonas&gt;</a></span><span class="message">dont' remember what happened...</span></div><div class="line" id="224035"><span class="nick" style="color:#6d2462"><a href="#224035" label="[22:40:35]">&lt;stikonas&gt;</a></span><span class="message">but eventually I decided to switch to single byte reads/writes</span></div><div class="line" id="224043"><span class="nick" style="color:#6d2462"><a href="#224043" label="[22:40:43]">&lt;stikonas&gt;</a></span><span class="message">possibly because then I don't need to allocate memory</span></div><div class="line" id="224103"><span class="nick" style="color:#6d2462"><a href="#224103" label="[22:41:03]">&lt;stikonas&gt;</a></span><span class="message">all those function calls have quite a bit of overhead</span></div><div class="line" id="224113"><span class="nick" style="color:#6b8072"><a href="#224113" label="[22:41:13]">&lt;oriansj&gt;</a></span><span class="message">well allocating in uefi doesn't look much worse than brk/malloc</span></div><div class="line" id="224144"><span class="nick" style="color:#6d2462"><a href="#224144" label="[22:41:44]">&lt;stikonas&gt;</a></span><span class="message">no, it's not in general</span></div><div class="line" id="224153"><span class="nick" style="color:#6d2462"><a href="#224153" label="[22:41:53]">&lt;stikonas&gt;</a></span><span class="message">hence I'm all for it in later stages</span></div><div class="line" id="224159"><span class="nick" style="color:#6d2462"><a href="#224159" label="[22:41:59]">&lt;stikonas&gt;</a></span><span class="message">but in hex0 in posix we also don't allocate</span></div><div class="line" id="224214"><span class="nick" style="color:#6d2462"><a href="#224214" label="[22:42:14]">&lt;stikonas&gt;</a></span><span class="message">well, e.g. I did open_protocol function call yesterday</span></div><div class="line" id="224239"><span class="nick" style="color:#234e69"><a href="#224239" label="[22:42:39]">&lt;vagrantc&gt;</a></span><span class="message">UEFI would be an interesting target as there are multiple implementations all over the place ... so even if you're using an &quot;untrusted/unbootstrapped&quot; UEFI, if you can build reproducibly starting with other UEFI implementations ... you can gain some reasonable confidence there</span></div><div class="line" id="224240"><span class="nick" style="color:#6d2462"><a href="#224240" label="[22:42:40]">&lt;stikonas&gt;</a></span><span class="message">it's about 10 low level instructions to set everything up <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.S">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.S</a> </span></div><div class="line" id="224309"><span class="nick" style="color:#6d2462"><a href="#224309" label="[22:43:09]">&lt;stikonas&gt;</a></span><span class="message">well, it's interesting in the sense as a lot of x86_64 hardware runs it anyway</span></div><div class="line" id="224330"><span class="nick" style="color:#6d2462"><a href="#224330" label="[22:43:30]">&lt;stikonas&gt;</a></span><span class="message">so even if it's unbootstrapped or untrusted, you kind of have to trust it anyway if you want to run anything on that machine</span></div><div class="line" id="224405"><span class="nick" style="color:#6b8072"><a href="#224405" label="[22:44:05]">&lt;oriansj&gt;</a></span><span class="message">unless you are on a coreboot/libreboot system</span></div><div class="line" id="224417"><span class="nick" style="color:#6d2462"><a href="#224417" label="[22:44:17]">&lt;stikonas&gt;</a></span><span class="message">well yes, that's non UEFI...</span></div><div class="line" id="224433"><span class="nick" style="color:#d9d9d9"><a href="#224433" label="[22:44:33]">&lt;qyliss&gt;</a></span><span class="message">Coreboot is usually used to boot UEFI</span></div><div class="line" id="224436"><span class="nick" style="color:#6d2462"><a href="#224436" label="[22:44:36]">&lt;stikonas&gt;</a></span><span class="message">although, I guess you can use some UEFI as payload</span></div><div class="line" id="224447"><span class="nick" style="color:#d9d9d9"><a href="#224447" label="[22:44:47]">&lt;qyliss&gt;</a></span><span class="message">(with EDK2)</span></div><div class="line" id="224511"><span class="nick" style="color:#6b8072"><a href="#224511" label="[22:45:11]">&lt;oriansj&gt;</a></span><span class="message">qyliss: well yes, UEFI becomes just another payload like grub</span></div><div class="line" id="224512"><span class="nick" style="color:#6d2462"><a href="#224512" label="[22:45:12]">&lt;stikonas&gt;</a></span><span class="message">on rockpro64 I have U-boot which implements UEFI...</span></div><div class="line" id="224517"><span class="nick" style="color:#6b8072"><a href="#224517" label="[22:45:17]">&lt;oriansj&gt;</a></span><span class="message">or seabios</span></div><div class="line" id="224523"><span class="nick" style="color:#6d2462"><a href="#224523" label="[22:45:23]">&lt;stikonas&gt;</a></span><span class="message">but that's aarch64...</span></div><div class="line" id="224553"><span class="nick" style="color:#6d2462"><a href="#224553" label="[22:45:53]">&lt;stikonas&gt;</a></span><span class="message">anyway, it was somebody in this channel that mentioned UEFI last week</span></div><div class="line" id="224609"><span class="nick" style="color:#6d2462"><a href="#224609" label="[22:46:09]">&lt;stikonas&gt;</a></span><span class="message">and then it just started going. Well, I guess for now it's mostly me and oriansj looking at this</span></div><div class="line" id="224755"><span class="nick" style="color:#6b8072"><a href="#224755" label="[22:47:55]">&lt;oriansj&gt;</a></span><span class="message">stikonas: that would be rickmasters and you know me, I'm always down for the new playgrounds</span></div><div class="line" id="224813"><span class="nick" style="color:#6d2462"><a href="#224813" label="[22:48:13]">&lt;stikonas&gt;</a></span><span class="message">oh yes, rickmasters was also curious about this</span></div><div class="line" id="224826"><span class="nick" style="color:#6d2462"><a href="#224826" label="[22:48:26]">&lt;stikonas&gt;</a></span><span class="message">though he was not sure whether he'll find enough time</span></div><div class="line" id="224851"><span class="nick" style="color:#6b8072"><a href="#224851" label="[22:48:51]">&lt;oriansj&gt;</a></span><span class="message">yeah, time is a rare supply these days</span></div><div class="line" id="224913"><span class="nick" style="color:#6d2462"><a href="#224913" label="[22:49:13]">&lt;stikonas&gt;</a></span><span class="message">anyway, kvm change pushed</span></div><div class="line" id="224924"><span class="nick" style="color:#6d2462"><a href="#224924" label="[22:49:24]">&lt;stikonas&gt;</a></span><span class="message">now i need to fix kaem not to timeout...</span></div><div class="line" id="224931"><span class="nick" style="color:#6d2462"><a href="#224931" label="[22:49:31]">&lt;stikonas&gt;</a></span><span class="message">oriansj: do you think kaem is sufficient?</span></div><div class="line" id="225004"><span class="nick" style="color:#6d2462"><a href="#225004" label="[22:50:04]">&lt;stikonas&gt;</a></span><span class="message">i.e. hex0 or hex1 definitely shouldn't run for 5 minutes...</span></div><div class="line" id="232733"><span class="nick" style="color:#6b8072"><a href="#232733" label="[23:27:33]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well only kaem and the pieces that are after m2libc would need to worry about that</span></div><div class="line" id="232801"><span class="nick" style="color:#6d2462"><a href="#232801" label="[23:28:01]">&lt;stikonas&gt;</a></span><span class="message">well, I guess m2libc initialization can call it...</span></div><div class="line" id="232852"><span class="nick" style="color:#6b8072"><a href="#232852" label="[23:28:52]">&lt;oriansj&gt;</a></span><span class="message">well i was thinking about M2libc a bit yesterday and we can hide all of the UEFI stuff behind the libc.M1 and a single platform file</span></div><div class="line" id="232958"><span class="nick" style="color:#6d2462"><a href="#232958" label="[23:29:58]">&lt;stikonas&gt;</a></span><span class="message">oh ok, I haven't thought too much about it yet, I was assuming we would need to use ifdefs and also special directory (similar to linux directory that we have)</span></div><div class="line" id="233015"><span class="nick" style="color:#6b8072"><a href="#233015" label="[23:30:15]">&lt;oriansj&gt;</a></span><span class="message">so instead of just: CALL_IMMEDIATE %FUNCTION___init_io we can do a CALL_IMMEDIATE %FUNCTION__UEFI_init or something like that</span></div><div class="line" id="233045"><span class="nick" style="color:#6d2462"><a href="#233045" label="[23:30:45]">&lt;stikonas&gt;</a></span><span class="message">oh and we have one more thing to think about</span></div><div class="line" id="233108"><span class="nick" style="color:#6b8072"><a href="#233108" label="[23:31:08]">&lt;oriansj&gt;</a></span><span class="message">you mean the passed arguments? or the utf-16 bit?</span></div><div class="line" id="233113"><span class="nick" style="color:#6d2462"><a href="#233113" label="[23:31:13]">&lt;stikonas&gt;</a></span><span class="message">if you look at <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.S">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.S</a>,  you'll see it has a different calling convention</span></div><div class="line" id="233130"><span class="nick" style="color:#6d2462"><a href="#233130" label="[23:31:30]">&lt;stikonas&gt;</a></span><span class="message">so first 4 arguments go in  rcx, rdx, r9 and r10</span></div><div class="line" id="233134"><span class="nick" style="color:#6d2462"><a href="#233134" label="[23:31:34]">&lt;stikonas&gt;</a></span><span class="message">later ones go onto stack</span></div><div class="line" id="233134"><span class="nick" style="color:#6b8072"><a href="#233134" label="[23:31:34]">&lt;oriansj&gt;</a></span><span class="message">not an issue at all</span></div><div class="line" id="233145"><span class="nick" style="color:#6d2462"><a href="#233145" label="[23:31:45]">&lt;stikonas&gt;</a></span><span class="message">but you also need to leave a space on the stack for the first 4 arguments</span></div><div class="line" id="233157"><span class="nick" style="color:#6b8072"><a href="#233157" label="[23:31:57]">&lt;oriansj&gt;</a></span><span class="message">not an issue</span></div><div class="line" id="233204"><span class="nick" style="color:#6d2462"><a href="#233204" label="[23:32:04]">&lt;stikonas&gt;</a></span><span class="message">and if one of the first 4 arguments is too bug (more than 64-bit) then it also goes onto stack</span></div><div class="line" id="233206"><span class="nick" style="color:#6d2462"><a href="#233206" label="[23:32:06]">&lt;stikonas&gt;</a></span><span class="message">yeah, ok</span></div><div class="line" id="233223"><span class="nick" style="color:#6b8072"><a href="#233223" label="[23:32:23]">&lt;oriansj&gt;</a></span><span class="message">the M2libc ASM blocks might get a little ugly but that isn't much of a problem</span></div><div class="line" id="233336"><span class="nick" style="color:#6b8072"><a href="#233336" label="[23:33:36]">&lt;oriansj&gt;</a></span><span class="message">even if every syscall/uefi call had a completely different calling convention, the fact that our bedrock functions are fully self-contained gives us a boatload of flexibility</span></div><div class="line" id="233447"><span class="nick" style="color:#6d2462"><a href="#233447" label="[23:34:47]">&lt;stikonas&gt;</a></span><span class="message">well yes, this whole uefi-port would be that difficult in the end</span></div><div class="line" id="233456"><span class="nick" style="color:#6d2462"><a href="#233456" label="[23:34:56]">&lt;stikonas&gt;</a></span><span class="message">we need to replace syscalls, figure out binary format</span></div><div class="line" id="233506"><span class="nick" style="color:#6d2462"><a href="#233506" label="[23:35:06]">&lt;stikonas&gt;</a></span><span class="message">but lots of other stuff could be reused from stage0-posix</span></div><div class="line" id="233508"><span class="nick" style="color:#6b8072"><a href="#233508" label="[23:35:08]">&lt;oriansj&gt;</a></span><span class="message">wall clock for stage0-posix-amd64 from hex0 to done is: 1:37.54 so yeah kaem-optional and only the C programs using M2libc need to turn off the timer</span></div><div class="line" id="233524"><span class="nick" style="color:#6d2462"><a href="#233524" label="[23:35:24]">&lt;stikonas&gt;</a></span><span class="message">well, kaem-optional needs it in any case</span></div><div class="line" id="233534"><span class="nick" style="color:#6d2462"><a href="#233534" label="[23:35:34]">&lt;stikonas&gt;</a></span><span class="message">because if somebody builds on top of it, say mes</span></div><div class="line" id="233546"><span class="nick" style="color:#6d2462"><a href="#233546" label="[23:35:46]">&lt;stikonas&gt;</a></span><span class="message">then eventually we would exceed 5 minutes in kaem-optional-seed</span></div><div class="line" id="233553"><span class="nick" style="color:#6b8072"><a href="#233553" label="[23:35:53]">&lt;oriansj&gt;</a></span><span class="message">definitely will be running for a potentially very long time</span></div><div class="line" id="233559"><span class="nick" style="color:#6d2462"><a href="#233559" label="[23:35:59]">&lt;stikonas&gt;</a></span><span class="message">it's the root binary after all</span></div><div class="line" id="233607"><span class="nick" style="color:#6d2462"><a href="#233607" label="[23:36:07]">&lt;stikonas&gt;</a></span><span class="message">everything else is called by it</span></div><div class="line" id="233623"><span class="nick" style="color:#6b8072"><a href="#233623" label="[23:36:23]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="233640"><span class="nick" style="color:#6d2462"><a href="#233640" label="[23:36:40]">&lt;stikonas&gt;</a></span><span class="message">in live-bootstrap it keeps running until we reboot into a new kernel</span></div><div class="line" id="233702"><span class="nick" style="color:#6d2462"><a href="#233702" label="[23:37:02]">&lt;stikonas&gt;</a></span><span class="message">that might also need some thought later</span></div><div class="line" id="233708"><span class="nick" style="color:#6d2462"><a href="#233708" label="[23:37:08]">&lt;stikonas&gt;</a></span><span class="message">I think you need to stop uefi boot services</span></div><div class="line" id="233731"><span class="nick" style="color:#6d2462"><a href="#233731" label="[23:37:31]">&lt;stikonas&gt;</a></span><span class="message">not a problem, but some function calls will have to be done</span></div><div class="line" id="233808"><span class="nick" style="color:#6b8072"><a href="#233808" label="[23:38:08]">&lt;oriansj&gt;</a></span><span class="message">but something we can deal with later</span></div><div class="line" id="234445"><span class="nick" style="color:#6d2462"><a href="#234445" label="[23:44:45]">&lt;stikonas&gt;</a></span><span class="message">ok, watchdog timer disabled: <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/commit/392d88a183ebc887aee98e820c0f2e0a3d182ff0">https://git.stikonas.eu/andrius/stage0-uefi/commit/392d88a183ebc887aee98e820c0f2e0a3d182ff0</a> </span></div><br /></div></body></html>