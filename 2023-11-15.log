<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002612"><span class="nick" style="color:#389600"><a href="#002612" label="[00:26:12]">&lt;stikonas&gt;</a></span><span class="message">fossy: mes-0.25 <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/331">https://github.com/fosslinux/live-bootstrap/pull/331</a>,  not sure if you want to review it...</span></div><div class="line" id="004134"><span class="nick" style="color:#8dd3c7"><a href="#004134" label="[00:41:34]">&lt;Googulator&gt;</a></span><span class="message">  │ CONFIG_USB_OTG_BLACKLIST_HUB:</span></div><div class="line" id="004134"><span class="nick" style="color:#8dd3c7"><a href="#004134" label="[00:41:34]">&lt;Googulator&gt;</a></span><span class="message">  │</span></div><div class="line" id="004135"><span class="nick" style="color:#8dd3c7"><a href="#004135" label="[00:41:35]">&lt;Googulator&gt;</a></span><span class="message">  │ If you say Y here, then Linux will refuse to enumerate</span></div><div class="line" id="004135"><span class="nick" style="color:#8dd3c7"><a href="#004135" label="[00:41:35]">&lt;Googulator&gt;</a></span><span class="message">  │ external hubs.  OTG hosts are allowed to reduce hardware</span></div><div class="line" id="004136"><span class="nick" style="color:#8dd3c7"><a href="#004136" label="[00:41:36]">&lt;Googulator&gt;</a></span><span class="message">  │ and software costs by not supporting external hubs.  So</span></div><div class="line" id="004136"><span class="nick" style="color:#8dd3c7"><a href="#004136" label="[00:41:36]">&lt;Googulator&gt;</a></span><span class="message">  │ are &quot;Embedded Hosts&quot; that don't offer OTG support.</span></div><div class="line" id="004137"><span class="nick" style="color:#8dd3c7"><a href="#004137" label="[00:41:37]">&lt;Googulator&gt;</a></span><span class="message">  │</span></div><div class="line" id="004137"><span class="nick" style="color:#8dd3c7"><a href="#004137" label="[00:41:37]">&lt;Googulator&gt;</a></span><span class="message">  │ Symbol: USB_OTG_BLACKLIST_HUB [=y]</span></div><div class="line" id="004138"><span class="nick" style="color:#8dd3c7"><a href="#004138" label="[00:41:38]">&lt;Googulator&gt;</a></span><span class="message">No wonder why the hub didn't help...</span></div><div class="line" id="202414"><span class="nick" style="color:#2e2a4a"><a href="#202414" label="[20:24:14]">&lt;oriansj&gt;</a></span><span class="message">what if we encourages gamification of bootstrappability via a score called the &quot;Ken Thompson score&quot;  0 means you are properly bootstrapped and 100 means no one knows how to bootstrap the software. Thoughts?</span></div><div class="line" id="202524"><span class="nick" style="color:#2e2a4a"><a href="#202524" label="[20:25:24]">&lt;oriansj&gt;</a></span><span class="message">(aka the number of tools you need bootstrapped which have not already been bootstrapped)</span></div><div class="line" id="204030"><span class="nick" style="color:#6b8072"><a href="#204030" label="[20:40:30]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: not sure about points ... but i could see a list of properties ... maybe even some sort of larger-grained categories (e.g. silver, gold, platnum)</span></div><div class="line" id="204137"><span class="nick" style="color:#6b8072"><a href="#204137" label="[20:41:37]">&lt;vagrantc&gt;</a></span><span class="message">although anything that nudges in the right direction rather than yes/no can be a good thing :)</span></div><div class="line" id="204809"><span class="nick" style="color:#2e2a4a"><a href="#204809" label="[20:48:09]">&lt;oriansj&gt;</a></span><span class="message">exactly and just being 1 point closer than someone else could be a source of pride</span></div><div class="line" id="205503"><span class="nick" style="color:#6b8072"><a href="#205503" label="[20:55:03]">&lt;vagrantc&gt;</a></span><span class="message">how do you define a point in a simple way, i guess is my question</span></div><div class="line" id="210854"><span class="nick" style="color:#80b1d3"><a href="#210854" label="[21:08:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, its all very subjective since there are many possible bootstrap paths</span></div><div class="line" id="211043"><span class="nick" style="color:#80b1d3"><a href="#211043" label="[21:10:43]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It would be hard to do more than a list...</span></div><div class="line" id="211219"><span class="nick" style="color:#2e2a4a"><a href="#211219" label="[21:12:19]">&lt;oriansj&gt;</a></span><span class="message">well imagine 1 build dependency that isn't bootstrapped is 1 point</span></div><div class="line" id="211328"><span class="nick" style="color:#2e2a4a"><a href="#211328" label="[21:13:28]">&lt;oriansj&gt;</a></span><span class="message">so needing 3 libraries and 1 compiler that wasn't bootstrapped (yet) would be 4 points (unless compilers and interpreters were worth more than 1 point)</span></div><div class="line" id="211411"><span class="nick" style="color:#2e2a4a"><a href="#211411" label="[21:14:11]">&lt;oriansj&gt;</a></span><span class="message">and we only count direct dependencies</span></div><div class="line" id="212240"><span class="nick" style="color:#6b8072"><a href="#212240" label="[21:22:40]">&lt;vagrantc&gt;</a></span><span class="message">what about 1000 build dependencies, and 100 are bootstrapped?</span></div><div class="line" id="212304"><span class="nick" style="color:#2e2a4a"><a href="#212304" label="[21:23:04]">&lt;oriansj&gt;</a></span><span class="message">score 900</span></div><div class="line" id="212654"><span class="nick" style="color:#80b1d3"><a href="#212654" label="[21:26:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It might be a bit misleading if you look at direct deps</span></div><div class="line" id="212718"><span class="nick" style="color:#80b1d3"><a href="#212718" label="[21:27:18]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; There might be 100 deps but just 1 dependency loop</span></div><div class="line" id="212732"><span class="nick" style="color:#80b1d3"><a href="#212732" label="[21:27:32]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; So once one thing is bootstrapped, rest are too</span></div><div class="line" id="212753"><span class="nick" style="color:#2e2a4a"><a href="#212753" label="[21:27:53]">&lt;oriansj&gt;</a></span><span class="message">well yes but that would only pump the score up not down</span></div><div class="line" id="213007"><span class="nick" style="color:#6b8072"><a href="#213007" label="[21:30:07]">&lt;vagrantc&gt;</a></span><span class="message">suppose that is a helpful property of 0 :)</span></div><div class="line" id="215114"><span class="nick" style="color:#8dd3c7"><a href="#215114" label="[21:51:14]">&lt;Googulator&gt;</a></span><span class="message">looking back at the logs, since I've just managed to get my internet connection restored (catastrophic failure of the router) - how do you count &quot;properly bootstrapped&quot;?</span></div><div class="line" id="215229"><span class="nick" style="color:#8dd3c7"><a href="#215229" label="[21:52:29]">&lt;Googulator&gt;</a></span><span class="message">For example, if you bare-metal bootstrap from a USB flash drive bought at the infamous Shenzhen market, with an image prepared on an infected Windows XP PC - is that &quot;properly bootstrapped&quot;?</span></div><div class="line" id="215546"><span class="nick" style="color:#2e2a4a"><a href="#215546" label="[21:55:46]">&lt;oriansj&gt;</a></span><span class="message">Googulator: well we will start simple and easy; and limit ourselves to assuming trusted hardware and grant a single 512byte (or smaller) root seed. Any operating system bootstrapped from builder-hex0 out would all have a score of 0 and Windows (until they bootstrap from one of the trusted linux builds) would have a default score of 1</span></div><div class="line" id="215644"><span class="nick" style="color:#8dd3c7"><a href="#215644" label="[21:56:44]">&lt;Googulator&gt;</a></span><span class="message">Trusted hardware isn't the question - if the system used for preparing the image isn't trustworthy, it compromises the whole bootstrap potentially</span></div><div class="line" id="215802"><span class="nick" style="color:#2e2a4a"><a href="#215802" label="[21:58:02]">&lt;oriansj&gt;</a></span><span class="message">true but the goal is to just looking at a single program and its direct build dependencides</span></div><div class="line" id="215817"><span class="nick" style="color:#2e2a4a"><a href="#215817" label="[21:58:17]">&lt;oriansj&gt;</a></span><span class="message">^dependencides^dependencies</span></div><div class="line" id="215848"><span class="nick" style="color:#8dd3c7"><a href="#215848" label="[21:58:48]">&lt;Googulator&gt;</a></span><span class="message">&quot;dependencide&quot; sounds like one of bootstrapping's goals :)</span></div><div class="line" id="215935"><span class="nick" style="color:#2e2a4a"><a href="#215935" label="[21:59:35]">&lt;oriansj&gt;</a></span><span class="message">your root being infected doesn't count against you (as it is only 512 bytes or smaller) but any root bigger and not properly bootstrapped would</span></div><div class="line" id="220036"><span class="nick" style="color:#8dd3c7"><a href="#220036" label="[22:00:36]">&lt;Googulator&gt;</a></span><span class="message">If we actually limit the root to 512 bytes, e.g. using a log-before-execute policy, then that's right.</span></div><div class="line" id="220253"><span class="nick" style="color:#8dd3c7"><a href="#220253" label="[22:02:53]">&lt;Googulator&gt;</a></span><span class="message">But in the &quot;infected host&quot; scenario, nothing stops the host system from e.g. stashing a copy of pre-backdoored binaries at the end of the disk, and modifying after.sh so it replaces the properly bootstrapped binaries with the stashed, backdoored ones, before reporting &quot;Bootstrapping complete&quot;</span></div><div class="line" id="220406"><span class="nick" style="color:#2e2a4a"><a href="#220406" label="[22:04:06]">&lt;oriansj&gt;</a></span><span class="message">true, the score would not be a good measure for trust; only a first approximation of how hard it would be for us to bootstrap that software.</span></div><div class="line" id="220734"><span class="nick" style="color:#8dd3c7"><a href="#220734" label="[22:07:34]">&lt;Googulator&gt;</a></span><span class="message">unrelated: anyone knows where the 1152MB size for Fiwix's initrd comes from?</span></div><div class="line" id="220801"><span class="nick" style="color:#2e2a4a"><a href="#220801" label="[22:08:01]">&lt;oriansj&gt;</a></span><span class="message">legacy bios hard drive limits</span></div><div class="line" id="220817"><span class="nick" style="color:#8dd3c7"><a href="#220817" label="[22:08:17]">&lt;Googulator&gt;</a></span><span class="message">???</span></div><div class="line" id="220834"><span class="nick" style="color:#8dd3c7"><a href="#220834" label="[22:08:34]">&lt;Googulator&gt;</a></span><span class="message">isn't it a ramdisk created within builder-hex0 and passed on to Fiwix using kexec-fiwix?</span></div><div class="line" id="220915"><span class="nick" style="color:#80b1d3"><a href="#220915" label="[22:09:15]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Maybe it is hardcoded limit in fiwix source?</span></div><div class="line" id="220936"><span class="nick" style="color:#80b1d3"><a href="#220936" label="[22:09:36]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: oh but you can't load more source with builder-hex0 anyway</span></div><div class="line" id="220937"><span class="nick" style="color:#8dd3c7"><a href="#220937" label="[22:09:37]">&lt;Googulator&gt;</a></span><span class="message">With the kernel config changes needed to make bare metal work properly, I run out of space on the ramdisk. Increasing to 1280MB works on my board, but 1440MB dies when jumping into Fiwix</span></div><div class="line" id="220956"><span class="nick" style="color:#80b1d3"><a href="#220956" label="[22:09:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; OK, so it is fiwix limit...</span></div><div class="line" id="221007"><span class="nick" style="color:#8dd3c7"><a href="#221007" label="[22:10:07]">&lt;Googulator&gt;</a></span><span class="message">Or something.</span></div><div class="line" id="221016"><span class="nick" style="color:#80b1d3"><a href="#221016" label="[22:10:16]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Maybe Mikaku knows</span></div><div class="line" id="221029"><span class="nick" style="color:#8dd3c7"><a href="#221029" label="[22:10:29]">&lt;Googulator&gt;</a></span><span class="message">That's what I'm trying to figure out - where the limit comes from, and what the actual max safe size is</span></div><div class="line" id="221031"><span class="nick" style="color:#2e2a4a"><a href="#221031" label="[22:10:31]">&lt;oriansj&gt;</a></span><span class="message">well: that number doesn't quite match the numbers we previously had about the hardware: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/issues/3">https://github.com/ironmeld/builder-hex0/issues/3</a> </span></div><div class="line" id="221110"><span class="nick" style="color:#8dd3c7"><a href="#221110" label="[22:11:10]">&lt;Googulator&gt;</a></span><span class="message">We don't actually use that file write feature right now</span></div><div class="line" id="221121"><span class="nick" style="color:#8dd3c7"><a href="#221121" label="[22:11:21]">&lt;Googulator&gt;</a></span><span class="message">The initrd is created in memory, and stays in memory</span></div><div class="line" id="221136"><span class="nick" style="color:#2e2a4a"><a href="#221136" label="[22:11:36]">&lt;oriansj&gt;</a></span><span class="message">and if we use too much builds will fail</span></div><div class="line" id="221304"><span class="nick" style="color:#8dd3c7"><a href="#221304" label="[22:13:04]">&lt;Googulator&gt;</a></span><span class="message">My guess right now is that if we go too big, eventually we start writing it onto MMIO space</span></div><div class="line" id="221353"><span class="nick" style="color:#8dd3c7"><a href="#221353" label="[22:13:53]">&lt;Googulator&gt;</a></span><span class="message">which is why I'm a bit worried about going for 1280MB - it might work on my system, but not on others that have MMIO lower in their address space</span></div><div class="line" id="221612"><span class="nick" style="color:#8dd3c7"><a href="#221612" label="[22:16:12]">&lt;Googulator&gt;</a></span><span class="message">Fiwix itself could potentially handle more, since kexec-fiwix's trampoline actually copies the initrd to a much lower address than where builder-hex0 places it</span></div><div class="line" id="221734"><span class="nick" style="color:#8dd3c7"><a href="#221734" label="[22:17:34]">&lt;Googulator&gt;</a></span><span class="message">now, if Fiwix had support for taking an ext4 image smaller than the allocated ramdisk space, and extending it to the full size before mounting it and calling init - that would largely avoid this</span></div><div class="line" id="221829"><span class="nick" style="color:#8dd3c7"><a href="#221829" label="[22:18:29]">&lt;Googulator&gt;</a></span><span class="message">since then we only need to make the actual ext4 created within builder-hex0's environment large enough to hold the sources we pass on to Fiwix, which can then extend the FS to fit the build artifacts too</span></div><div class="line" id="221912"><span class="nick" style="color:#8dd3c7"><a href="#221912" label="[22:19:12]">&lt;Googulator&gt;</a></span><span class="message">Mikaku: does that sound doable?</span></div><br /></div></body></html>