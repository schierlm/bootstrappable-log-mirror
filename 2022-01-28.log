<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-01-28.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="105043"><span class="nick" style="color:#8dd3c7"><a href="#105043" label="[10:50:43]">&lt;system&gt;</a></span><span class="message">hi! i think this channel is more appropriate for talking about my effort to bootstrap the nim compiler for guix, but please correct me if i'm wrong</span></div><div class="line" id="105053"><span class="nick" style="color:#8dd3c7"><a href="#105053" label="[10:50:53]">&lt;system&gt;</a></span><span class="message">why am i called system???</span></div><div class="line" id="105102"><span class="nick">***</span><span class="message notice">system is now known as unmatched-paren</span></div><div class="line" id="105109"><span class="nick" style="color:#2e2a4a"><a href="#105109" label="[10:51:09]">&lt;unmatched-paren&gt;</a></span><span class="message">that's better ;)</span></div><div class="line" id="105234"><span class="nick" style="color:#2e2a4a"><a href="#105234" label="[10:52:34]">&lt;unmatched-paren&gt;</a></span><span class="message">so i found that the earliest nims were written in pascal, which isn't bootstrapped either :(</span></div><div class="line" id="105403"><span class="nick" style="color:#2e2a4a"><a href="#105403" label="[10:54:03]">&lt;unmatched-paren&gt;</a></span><span class="message">but it doesn't seem impossible; i'm wondering if it would be possible to compile fpc with either gnu pascal (unmaintained) or one of the three pascal-&gt;c converters i've found...?</span></div><div class="line" id="105657"><span class="nick" style="color:#2e2a4a"><a href="#105657" label="[10:56:57]">&lt;unmatched-paren&gt;</a></span><span class="message">sadly p2c segfaults when i try to compile anything with it...</span></div><div class="line" id="110649"><span class="nick" style="color:#6b8072"><a href="#110649" label="[11:06:49]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">unmatched-paren: Even though GNU Pascal isn't currently maintained, it doesn't mean it can't be used to bootstrap right?</span></div><div class="line" id="110723"><span class="nick" style="color:#6b8072"><a href="#110723" label="[11:07:23]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">s/bootstrap/bootstrap nim</span></div><div class="line" id="115318"><span class="nick" style="color:#80b1d3"><a href="#115318" label="[11:53:18]">&lt;pabs3&gt;</a></span><span class="message">AwesomeAdam54321: unmatched-paren quit before your message</span></div><div class="line" id="115830"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="115835"><span class="nick" style="color:#6d2462"><a href="#115835" label="[11:58:35]">&lt;rekado_&gt;</a></span><span class="message">I just built GHC 4.08.2</span></div><div class="line" id="120020"><span class="nick" style="color:#2e2a4a"><a href="#120020" label="[12:00:20]">&lt;unmatched-paren&gt;</a></span><span class="message">AwesomeAdam54321: yeah, it should still be possible to use gpc</span></div><div class="line" id="120325"><span class="nick" style="color:#6d2462"><a href="#120325" label="[12:03:25]">&lt;rekado_&gt;</a></span><span class="message">I never got GPC to build</span></div><div class="line" id="120337"><span class="nick" style="color:#2e2a4a"><a href="#120337" label="[12:03:37]">&lt;unmatched-paren&gt;</a></span><span class="message">rekado_: you managed to build it entirely from source?</span></div><div class="line" id="120339"><span class="nick" style="color:#6d2462"><a href="#120339" label="[12:03:39]">&lt;rekado_&gt;</a></span><span class="message">might be easier with an older GCC</span></div><div class="line" id="120352"><span class="nick" style="color:#2e2a4a"><a href="#120352" label="[12:03:52]">&lt;unmatched-paren&gt;</a></span><span class="message">hm, p2c</span></div><div class="line" id="120402"><span class="nick" style="color:#2e2a4a"><a href="#120402" label="[12:04:02]">&lt;unmatched-paren&gt;</a></span><span class="message">s/build it/build ghc/</span></div><div class="line" id="120433"><span class="nick" style="color:#2e2a4a"><a href="#120433" label="[12:04:33]">&lt;unmatched-paren&gt;</a></span><span class="message">a pascal to c converter would probably be our best bet then</span></div><div class="line" id="120450"><span class="nick" style="color:#6d2462"><a href="#120450" label="[12:04:50]">&lt;rekado_&gt;</a></span><span class="message">yes, I built GHC from source.  I configured with “--enable-hc-boot” — the configure script says “Boot the Glasgow Haskell Compiler from intermediate .hc files.”</span></div><div class="line" id="120503"><span class="nick" style="color:#6d2462"><a href="#120503" label="[12:05:03]">&lt;rekado_&gt;</a></span><span class="message">I looked at the .hc files and they like like proper source code to me.</span></div><div class="line" id="120516"><span class="nick" style="color:#6d2462"><a href="#120516" label="[12:05:16]">&lt;rekado_&gt;</a></span><span class="message">doesn’t smell like autogenerated stuff</span></div><div class="line" id="120520"><span class="nick" style="color:#2e2a4a"><a href="#120520" label="[12:05:20]">&lt;unmatched-paren&gt;</a></span><span class="message">congratulations! \o/</span></div><div class="line" id="120522"><span class="nick" style="color:#6d2462"><a href="#120522" label="[12:05:22]">&lt;rekado_&gt;</a></span><span class="message">lots of comments there too</span></div><div class="line" id="120541"><span class="nick" style="color:#6d2462"><a href="#120541" label="[12:05:41]">&lt;rekado_&gt;</a></span><span class="message">I don’t know … I don’t feel like celebrating yet.  This was too easy.</span></div><div class="line" id="120548"><span class="nick" style="color:#6d2462"><a href="#120548" label="[12:05:48]">&lt;rekado_&gt;</a></span><span class="message">Something’s gotta be wrong.</span></div><div class="line" id="120626"><span class="nick" style="color:#6b8072"><a href="#120626" label="[12:06:26]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">unmatched-paren: The generated C code from the converter needs to be human-readable though, or else it can't really be considered source code</span></div><div class="line" id="120705"><span class="nick" style="color:#6d2462"><a href="#120705" label="[12:07:05]">&lt;rekado_&gt;</a></span><span class="message">if you run the converter as part of the build it’s fine</span></div><div class="line" id="120718"><span class="nick" style="color:#6d2462"><a href="#120718" label="[12:07:18]">&lt;rekado_&gt;</a></span><span class="message">use it as a pre-processor</span></div><div class="line" id="120756"><span class="nick" style="color:#2e2a4a"><a href="#120756" label="[12:07:56]">&lt;unmatched-paren&gt;</a></span><span class="message">p2c segfaults on this alpine proot running in termux on android, but i'll test it on my laptop when i'm able</span></div><div class="line" id="120818"><span class="nick" style="color:#6b8072"><a href="#120818" label="[12:08:18]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">rekado_: that makes sense, plus the converter can be audited anyways</span></div><div class="line" id="121151"><span class="nick" style="color:#2e2a4a"><a href="#121151" label="[12:11:51]">&lt;unmatched-paren&gt;</a></span><span class="message">the one thing i'm worried about is that freepascal might be written with fp-exclusive extensions that aren't supported by p2c</span></div><div class="line" id="121330"><span class="nick" style="color:#2e2a4a"><a href="#121330" label="[12:13:30]">&lt;unmatched-paren&gt;</a></span><span class="message">if that happens, i'll resort to just compiling nim with p2c</span></div><div class="line" id="121354"><span class="nick" style="color:#2e2a4a"><a href="#121354" label="[12:13:54]">&lt;unmatched-paren&gt;</a></span><span class="message">but obviously taking this opportunity to bootstrap fp is preferable</span></div><div class="line" id="121747"><span class="nick" style="color:#6d2462"><a href="#121747" label="[12:17:47]">&lt;rekado_&gt;</a></span><span class="message">usually it helps to build an older version first; newer versions might rely on extensions previous versions introduced.</span></div><div class="line" id="121858"><span class="nick" style="color:#6d2462"><a href="#121858" label="[12:18:58]">&lt;rekado_&gt;</a></span><span class="message">I’ll try building GHC 6.0 with GHC 4 next.</span></div><div class="line" id="123040"><span class="nick" style="color:#234e69"><a href="#123040" label="[12:30:40]">&lt;stikonas&gt;</a></span><span class="message">well, building newer GHC with older should be no big deal, it's just a matter of number of intermediate steps</span></div><div class="line" id="123045"><span class="nick" style="color:#6c3d55"><a href="#123045" label="[12:30:45]">&lt;civodul&gt;</a></span><span class="message">rekado_: woohoo! this all sounds like exciting prospects!</span></div><div class="line" id="123820"><span class="nick" style="color:#6d2462"><a href="#123820" label="[12:38:20]">&lt;rekado_&gt;</a></span><span class="message">stikonas: yes, my old notes say that I should do: 4.08.2 -&gt; 6.0 -&gt; 6.6 -&gt; 6.12(?) -&gt; 7.4 -&gt; 7.6</span></div><div class="line" id="123915"><span class="nick" style="color:#6d2462"><a href="#123915" label="[12:39:15]">&lt;rekado_&gt;</a></span><span class="message">but I’m a little … offended that I didn’t have to do anything special with hugs and interpreting parts of GHC with the compiled RTS from GHC 4 …</span></div><div class="line" id="123920"><span class="nick" style="color:#6d2462"><a href="#123920" label="[12:39:20]">&lt;rekado_&gt;</a></span><span class="message">this was too easy</span></div><div class="line" id="123932"><span class="nick" style="color:#234e69"><a href="#123932" label="[12:39:32]">&lt;stikonas&gt;</a></span><span class="message">yes, sounds somehow very easy. But maybe it is</span></div><div class="line" id="123948"><span class="nick" style="color:#6d2462"><a href="#123948" label="[12:39:48]">&lt;rekado_&gt;</a></span><span class="message">if it really was so easy then I wonder why nobody has done it before</span></div><div class="line" id="124000"><span class="nick" style="color:#234e69"><a href="#124000" label="[12:40:00]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'm having the same thoughts</span></div><div class="line" id="124019"><span class="nick" style="color:#6d2462"><a href="#124019" label="[12:40:19]">&lt;rekado_&gt;</a></span><span class="message">the only difference is that back then I didn’t have GCC 2.95</span></div><div class="line" id="124019"><span class="nick" style="color:#234e69"><a href="#124019" label="[12:40:19]">&lt;stikonas&gt;</a></span><span class="message">would be good to figure out where those .hc files are comming from</span></div><div class="line" id="124024"><span class="nick" style="color:#6d2462"><a href="#124024" label="[12:40:24]">&lt;rekado_&gt;</a></span><span class="message">they are code</span></div><div class="line" id="124036"><span class="nick" style="color:#234e69"><a href="#124036" label="[12:40:36]">&lt;stikonas&gt;</a></span><span class="message">so you need old GCC?</span></div><div class="line" id="124037"><span class="nick" style="color:#6d2462"><a href="#124037" label="[12:40:37]">&lt;rekado_&gt;</a></span><span class="message">a total of 4k lines with plenty of comments</span></div><div class="line" id="124038"><span class="nick" style="color:#234e69"><a href="#124038" label="[12:40:38]">&lt;stikonas&gt;</a></span><span class="message">to build this?</span></div><div class="line" id="124040"><span class="nick" style="color:#6d2462"><a href="#124040" label="[12:40:40]">&lt;rekado_&gt;</a></span><span class="message">yes</span></div><div class="line" id="124104"><span class="nick" style="color:#6d2462"><a href="#124104" label="[12:41:04]">&lt;rekado_&gt;</a></span><span class="message">the C code is just too pre-standard to be built with any more recent GCC</span></div><div class="line" id="124116"><span class="nick" style="color:#234e69"><a href="#124116" label="[12:41:16]">&lt;stikonas&gt;</a></span><span class="message">oh, even GCC 4 fails?</span></div><div class="line" id="124128"><span class="nick" style="color:#6d2462"><a href="#124128" label="[12:41:28]">&lt;rekado_&gt;</a></span><span class="message">we had a discussion about some of the quirks here a few years back</span></div><div class="line" id="124150"><span class="nick" style="color:#234e69"><a href="#124150" label="[12:41:50]">&lt;stikonas&gt;</a></span><span class="message">still, even if GCC 2.95 has to be used, that's better than non-bootstrappable haskell</span></div><div class="line" id="124232"><span class="nick" style="color:#6d2462"><a href="#124232" label="[12:42:32]">&lt;rekado_&gt;</a></span><span class="message">I haven’t tried GCC 4 — recently anyway</span></div><div class="line" id="124329"><span class="nick" style="color:#6d2462"><a href="#124329" label="[12:43:29]">&lt;rekado_&gt;</a></span><span class="message">my notes don’t say if I tried it back then</span></div><div class="line" id="124444"><span class="nick" style="color:#6d2462"><a href="#124444" label="[12:44:44]">&lt;rekado_&gt;</a></span><span class="message">(I also used Perl 5.14, because of $*)</span></div><div class="line" id="132224"><span class="nick">***</span><span class="message notice">attila_lendvai_ is now known as attila_lendvai</span></div><div class="line" id="132459"><span class="nick" style="color:#d9d9d9"><a href="#132459" label="[13:24:59]">&lt;oriansj&gt;</a></span><span class="message">rekado: now that is *HUGE* news if true.</span></div><div class="line" id="132601"><span class="nick" style="color:#d9d9d9"><a href="#132601" label="[13:26:01]">&lt;oriansj&gt;</a></span><span class="message">when you get a chance do a write up so some more people can confirm and start looking for potential blobby bits we need to address</span></div><div class="line" id="132946"><span class="nick" style="color:#d9d9d9"><a href="#132946" label="[13:29:46]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: all bootstrapping discussion is welcome here. and there may be notes on bootstrapping pascal in the channel logs that might interest you</span></div><div class="line" id="133711"><span class="nick" style="color:#234e69"><a href="#133711" label="[13:37:11]">&lt;stikonas&gt;</a></span><span class="message">oriansj, rekado_: GCC 4.0.4 works just fine</span></div><div class="line" id="133731"><span class="nick" style="color:#234e69"><a href="#133731" label="[13:37:31]">&lt;stikonas&gt;</a></span><span class="message">it does build in live-bootstrap</span></div><div class="line" id="133744"><span class="nick" style="color:#234e69"><a href="#133744" label="[13:37:44]">&lt;stikonas&gt;</a></span><span class="message">which also has perl 5.32</span></div><div class="line" id="134124"><span class="nick" style="color:#234e69"><a href="#134124" label="[13:41:24]">&lt;stikonas&gt;</a></span><span class="message">oh, actually maybe not everything has built</span></div><div class="line" id="134133"><span class="nick" style="color:#234e69"><a href="#134133" label="[13:41:33]">&lt;stikonas&gt;</a></span><span class="message">but I do get</span></div><div class="line" id="134135"><span class="nick" style="color:#234e69"><a href="#134135" label="[13:41:35]">&lt;stikonas&gt;</a></span><span class="message">bash-5.1# ./ghc/driver/ghc --version</span></div><div class="line" id="134136"><span class="nick" style="color:#234e69"><a href="#134136" label="[13:41:36]">&lt;stikonas&gt;</a></span><span class="message">The Glorious Glasgow Haskell Compilation System, version 4.08.2</span></div><div class="line" id="135750"><span class="nick" style="color:#6d2462"><a href="#135750" label="[13:57:50]">&lt;rekado_&gt;</a></span><span class="message">perl &gt; 5.30 should misbehave silently</span></div><div class="line" id="135821"><span class="nick" style="color:#6d2462"><a href="#135821" label="[13:58:21]">&lt;rekado_&gt;</a></span><span class="message">$* was stripped of its magic and only later was turned into an error.</span></div><div class="line" id="135901"><span class="nick" style="color:#6d2462"><a href="#135901" label="[13:59:01]">&lt;rekado_&gt;</a></span><span class="message">versions since its effect has been removed and prior to turning it into an error will misbehave when multi-line regexp matches are wanted</span></div><div class="line" id="140049"><span class="nick" style="color:#2e2a4a"><a href="#140049" label="[14:00:49]">&lt;unmatched-paren&gt;</a></span><span class="message">oriansj: actually, bootstrapping fpc is not my main goal</span></div><div class="line" id="140611"><span class="nick" style="color:#2e2a4a"><a href="#140611" label="[14:06:11]">&lt;unmatched-paren&gt;</a></span><span class="message">oriansj: i wanted to add first-class <a rel="nofollow" href="https://nim-lang.org">https://nim-lang.org</a>  support to guix, but in the process i learned that their csources repo that's used for bootstrapping was actually produced by the nim compiler and thus is not source</span></div><div class="line" id="140641"><span class="nick" style="color:#2e2a4a"><a href="#140641" label="[14:06:41]">&lt;unmatched-paren&gt;</a></span><span class="message">`git log --reverse` revealed that the first nim was written in pascal</span></div><div class="line" id="140649"><span class="nick" style="color:#2e2a4a"><a href="#140649" label="[14:06:49]">&lt;unmatched-paren&gt;</a></span><span class="message">so here i am :)</span></div><div class="line" id="140904"><span class="nick" style="color:#bc80bd"><a href="#140904" label="[14:09:04]">&lt;Hagfish&gt;</a></span><span class="message">it's great to have you here!</span></div><div class="line" id="140950"><span class="nick" style="color:#bc80bd"><a href="#140950" label="[14:09:50]">&lt;Hagfish&gt;</a></span><span class="message">i wouldn't have guessed pascal (i don't know what i would have guessed), but having that known and documented and bootstrap would be amazing</span></div><div class="line" id="141113"><span class="nick" style="color:#2e2a4a"><a href="#141113" label="[14:11:13]">&lt;unmatched-paren&gt;</a></span><span class="message">Hagfish: thanks! there are several pascal to c transpilers around. i'm betting on them rn...</span></div><div class="line" id="145722"><span class="nick" style="color:#6d2462"><a href="#145722" label="[14:57:22]">&lt;rekado_&gt;</a></span><span class="message">stikonas: I built it again with GCC 4.9 (4.8 is broken right now, and we have no earlier minor version in Guix), and while the build seemingly succeeds there are a lot of errors.</span></div><div class="line" id="145740"><span class="nick" style="color:#6d2462"><a href="#145740" label="[14:57:40]">&lt;rekado_&gt;</a></span><span class="message">oddly enough the build system does not consider these fatal</span></div><div class="line" id="145752"><span class="nick" style="color:#6d2462"><a href="#145752" label="[14:57:52]">&lt;rekado_&gt;</a></span><span class="message">I’ll stick with 2.95</span></div><div class="line" id="145940"><span class="nick" style="color:#6d2462"><a href="#145940" label="[14:59:40]">&lt;rekado_&gt;</a></span><span class="message">with 2.95 I get two messages about missing targets: make[3]: *** No rule to make target 'Array.o', needed by 'libHSstd.a'.  Stop.</span></div><div class="line" id="145953"><span class="nick" style="color:#6d2462"><a href="#145953" label="[14:59:53]">&lt;rekado_&gt;</a></span><span class="message">and: make[2]: *** No rule to make target 'utils/Argv.o', needed by 'hsc'.  Stop.</span></div><div class="line" id="150000"><span class="nick" style="color:#6d2462"><a href="#150000" label="[15:00:00]">&lt;rekado_&gt;</a></span><span class="message">but no hard build errors like with GCC 4.9</span></div><div class="line" id="151955"><span class="nick" style="color:#234e69"><a href="#151955" label="[15:19:55]">&lt;stikonas&gt;</a></span><span class="message">well, maybe later I can try to see if it's easily patchable, shouldn't be too hard</span></div><div class="line" id="152010"><span class="nick" style="color:#234e69"><a href="#152010" label="[15:20:10]">&lt;stikonas&gt;</a></span><span class="message">gcc 2.95 is fine in principle, but even in Guix janneke wants to move away from it</span></div><div class="line" id="155405"><span class="nick" style="color:#3c5b35"><a href="#155405" label="[15:54:05]">&lt;ekaitz&gt;</a></span><span class="message">btw did you guys ever found &quot;configure: error: cannot run C compiled programs.&quot; when compiling gcc?</span></div><div class="line" id="155449"><span class="nick" style="color:#3c5b35"><a href="#155449" label="[15:54:49]">&lt;ekaitz&gt;</a></span><span class="message">I'm using janneke 's guix package for 4.6.4 but I'm not using TCC and I get that weird error</span></div><div class="line" id="155510"><span class="nick" style="color:#3c5b35"><a href="#155510" label="[15:55:10]">&lt;ekaitz&gt;</a></span><span class="message">at least it finds the libraries like it should and looks like everything compiles correctly...</span></div><div class="line" id="155839"><span class="nick" style="color:#af8d2f"><a href="#155839" label="[15:58:39]">&lt;janneke&gt;</a></span><span class="message">ekaitz: it could be that i never got this far, dunno</span></div><div class="line" id="155855"><span class="nick" style="color:#af8d2f"><a href="#155855" label="[15:58:55]">&lt;janneke&gt;</a></span><span class="message">this is a pretty old branch</span></div><div class="line" id="161216"><span class="nick" style="color:#2e2a4a"><a href="#161216" label="[16:12:16]">&lt;unmatched-paren&gt;</a></span><span class="message">note to self: 46c41e436 is the latest nim commit that contains the pascal version</span></div><div class="line" id="161817"><span class="nick" style="color:#3c5b35"><a href="#161817" label="[16:18:17]">&lt;ekaitz&gt;</a></span><span class="message">janneke: might be but it looks your thing is pretty mature</span></div><div class="line" id="161845"><span class="nick" style="color:#3c5b35"><a href="#161845" label="[16:18:45]">&lt;ekaitz&gt;</a></span><span class="message">anyway the error code is somewhat disturbing</span></div><div class="line" id="161934"><span class="nick" style="color:#3c5b35"><a href="#161934" label="[16:19:34]">&lt;ekaitz&gt;</a></span><span class="message">i've been searching about it but the results were pretty wild: from missing glibc (which is not missing) to trying to compile for the wrong architecture (which I'm not doing YET)</span></div><div class="line" id="165304"><span class="nick" style="color:#389600"><a href="#165304" label="[16:53:04]">&lt;unmatche`&gt;</a></span><span class="message">so, i can't actually get p2c to work...</span></div><div class="line" id="165316"><span class="nick">***</span><span class="message notice">unmatche` is now known as unmatched-paren`</span></div><div class="line" id="165505"><span class="nick" style="color:#8dd3c7"><a href="#165505" label="[16:55:05]">&lt;unmatched-paren`&gt;</a></span><span class="message">`export P2CC_CC=gcc; p2cc fpmake.pp` exits with</span></div><div class="line" id="165508"><span class="nick" style="color:#8dd3c7"><a href="#165508" label="[16:55:08]">&lt;unmatched-paren`&gt;</a></span><span class="message">/gnu/store/2xpvvdh9ks4m4l50jb8p8rjkpq63fnpd-profile/bin/ld:fpmake.pp: file format not recognized; treating as linker script</span></div><div class="line" id="165644"><span class="nick" style="color:#8dd3c7"><a href="#165644" label="[16:56:44]">&lt;unmatched-paren`&gt;</a></span><span class="message">it's apparently trying to pass the file to the linker??</span></div><div class="line" id="165828"><span class="nick" style="color:#8dd3c7"><a href="#165828" label="[16:58:28]">&lt;unmatched-paren`&gt;</a></span><span class="message">raw `p2c` complains about `p2crc`, which i think is fixable by creating it, but it seems to try to use /tmp/&lt;guix build directory for p2c&gt;/p2c-2.01/src/p2crc, which of course doesn't exist</span></div><div class="line" id="165908"><span class="nick" style="color:#8dd3c7"><a href="#165908" label="[16:59:08]">&lt;unmatched-paren`&gt;</a></span><span class="message">wait, doesn't that make `p2c` non-deterministic if it records the directory it was built in?</span></div><div class="line" id="170104"><span class="nick" style="color:#8dd3c7"><a href="#170104" label="[17:01:04]">&lt;unmatched-paren`&gt;</a></span><span class="message">this program from the 90s is clearly not particularly up-to-date :)</span></div><div class="line" id="170136"><span class="nick" style="color:#8dd3c7"><a href="#170136" label="[17:01:36]">&lt;unmatched-paren`&gt;</a></span><span class="message">i've also found `ptoc` which converts pascal to c++, but its license is unclear</span></div><div class="line" id="170414"><span class="nick" style="color:#8dd3c7"><a href="#170414" label="[17:04:14]">&lt;unmatched-paren`&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.huge-man-linux.net/man1/p2c.html">https://www.huge-man-linux.net/man1/p2c.html</a>  describes the options, but no combination seems to work yet</span></div><div class="line" id="175444"><span class="nick" style="color:#234e69"><a href="#175444" label="[17:54:44]">&lt;stikonas&gt;</a></span><span class="message">rekado_: have you managed to solve make[3]: *** No rule to make target 'Array.o', needed by 'libHSstd.a' ?</span></div><div class="line" id="175540"><span class="nick" style="color:#234e69"><a href="#175540" label="[17:55:40]">&lt;stikonas&gt;</a></span><span class="message">those files in lib/std seem to be built from haskell sources...</span></div><div class="line" id="175924"><span class="nick" style="color:#8dd3c7"><a href="#175924" label="[17:59:24]">&lt;unmatched-paren`&gt;</a></span><span class="message">okay, p2c will definitely not be adequate to build either nim or fpc. and by the time fpc was imported into version control it was already self-hosting...</span></div><div class="line" id="175934"><span class="nick" style="color:#8dd3c7"><a href="#175934" label="[17:59:34]">&lt;unmatched-paren`&gt;</a></span><span class="message">this is looking kind of bad :(</span></div><div class="line" id="175956"><span class="nick" style="color:#234e69"><a href="#175956" label="[17:59:56]">&lt;stikonas&gt;</a></span><span class="message">unmatched-paren`: it's not the first time this happens...</span></div><div class="line" id="180335"><span class="nick" style="color:#8dd3c7"><a href="#180335" label="[18:03:35]">&lt;unmatched-paren`&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/knizhnik/ptoc">https://github.com/knizhnik/ptoc</a>  but i can't find a license anywhere</span></div><div class="line" id="180401"><span class="nick" style="color:#8dd3c7"><a href="#180401" label="[18:04:01]">&lt;unmatched-paren`&gt;</a></span><span class="message">(worth noting that this is not the official repo, just someone uploaded it to github)</span></div><div class="line" id="180528"><span class="nick" style="color:#8dd3c7"><a href="#180528" label="[18:05:28]">&lt;unmatched-paren`&gt;</a></span><span class="message">does: PtoC is shareware and is distributed in the hope to be useful.</span></div><div class="line" id="180528"><span class="nick" style="color:#8dd3c7"><a href="#180528" label="[18:05:28]">&lt;unmatched-paren`&gt;</a></span><span class="message">Your are free to use this converter, modify the sources</span></div><div class="line" id="180528"><span class="nick" style="color:#8dd3c7"><a href="#180528" label="[18:05:28]">&lt;unmatched-paren`&gt;</a></span><span class="message">and do with this converter everything else you want.</span></div><div class="line" id="180540"><span class="nick" style="color:#8dd3c7"><a href="#180540" label="[18:05:40]">&lt;unmatched-paren`&gt;</a></span><span class="message">count as `free` in the gnu sense?</span></div><div class="line" id="181429"><span class="nick" style="color:#8dd3c7"><a href="#181429" label="[18:14:29]">&lt;unmatched-paren`&gt;</a></span><span class="message">hm, actually, p2c might work with nim at least.. probably not with fpc though</span></div><div class="line" id="181522"><span class="nick" style="color:#8dd3c7"><a href="#181522" label="[18:15:22]">&lt;unmatched-paren`&gt;</a></span><span class="message">although the pascal nim doesn't seem to support some architectures that guix supports, it looks easy enough to patch</span></div><div class="line" id="181846"><span class="nick" style="color:#8dd3c7"><a href="#181846" label="[18:18:46]">&lt;unmatched-paren`&gt;</a></span><span class="message">does anyone here know pascal? p2c is failing on *one* file, and i can't tell why because it has absolutely no error handling</span></div><div class="line" id="183025"><span class="nick" style="color:#8dd3c7"><a href="#183025" label="[18:30:25]">&lt;unmatched-paren`&gt;</a></span><span class="message">aaaa nim mostly turns into c correctly but it doesn't compile &gt;:(</span></div><div class="line" id="184721"><span class="nick" style="color:#bc80bd"><a href="#184721" label="[18:47:21]">&lt;Hagfish&gt;</a></span><span class="message">unmatched-paren`: i think the free software community has been caught out by that sort of licence before</span></div><div class="line" id="184733"><span class="nick" style="color:#bc80bd"><a href="#184733" label="[18:47:33]">&lt;Hagfish&gt;</a></span><span class="message">i think elm vs pine is the example i'm thinking of</span></div><div class="line" id="184805"><span class="nick" style="color:#bc80bd"><a href="#184805" label="[18:48:05]">&lt;Hagfish&gt;</a></span><span class="message">the author of elm(?) said that although the licence allowed &quot;changing and redistributing&quot; the source code, it didn't allow you to do both</span></div><div class="line" id="184824"><span class="nick" style="color:#8dd3c7"><a href="#184824" label="[18:48:24]">&lt;unmatched-paren`&gt;</a></span><span class="message">and i thought this would be reasonably easy :(</span></div><div class="line" id="184824"><span class="nick" style="color:#8dd3c7"><a href="#184824" label="[18:48:24]">&lt;unmatched-paren`&gt;</a></span><span class="message">ah</span></div><div class="line" id="184841"><span class="nick" style="color:#bc80bd"><a href="#184841" label="[18:48:41]">&lt;Hagfish&gt;</a></span><span class="message">which was not what people had assumed (and maybe not what a court would decide), but the free software community ended up writing their own replacement from scratch, with a saner licenec</span></div><div class="line" id="184845"><span class="nick" style="color:#8dd3c7"><a href="#184845" label="[18:48:45]">&lt;unmatched-paren`&gt;</a></span><span class="message">but 'and' means 'both'??</span></div><div class="line" id="184851"><span class="nick" style="color:#bc80bd"><a href="#184851" label="[18:48:51]">&lt;Hagfish&gt;</a></span><span class="message">exactly :)</span></div><div class="line" id="184859"><span class="nick" style="color:#8dd3c7"><a href="#184859" label="[18:48:59]">&lt;unmatched-paren`&gt;</a></span><span class="message">they should have said `xor` :)</span></div><div class="line" id="184914"><span class="nick" style="color:#bc80bd"><a href="#184914" label="[18:49:14]">&lt;Hagfish&gt;</a></span><span class="message">the author claimed that the *intent* was that you could only distribute unmodified changes</span></div><div class="line" id="184944"><span class="nick" style="color:#bc80bd"><a href="#184944" label="[18:49:44]">&lt;Hagfish&gt;</a></span><span class="message">and that if the licence didn't explicitly allow distribution of derivative works, then that right was specifically withheld</span></div><div class="line" id="184956"><span class="nick" style="color:#bc80bd"><a href="#184956" label="[18:49:56]">&lt;Hagfish&gt;</a></span><span class="message">or, withheld by default, under copyright law</span></div><div class="line" id="185356"><span class="nick" style="color:#6d2462"><a href="#185356" label="[18:53:56]">&lt;rekado_&gt;</a></span><span class="message">stikonas_: my notes from the past: <a rel="nofollow" href="https://elephly.net/paste/1643316428.html">https://elephly.net/paste/1643316428.html</a> </span></div><div class="line" id="185417"><span class="nick" style="color:#6d2462"><a href="#185417" label="[18:54:17]">&lt;rekado_&gt;</a></span><span class="message">note also the IRC discussion about the weird C code in the RTS of GHC 4</span></div><div class="line" id="185519"><span class="nick" style="color:#2e2a4a"><a href="#185519" label="[18:55:19]">&lt;stikonas_&gt;</a></span><span class="message">oh so Hugs is used?</span></div><div class="line" id="185521"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="185631"><span class="nick" style="color:#234e69"><a href="#185631" label="[18:56:31]">&lt;stikonas&gt;</a></span><span class="message">anyway, even if I try, I should probably get gcc 2.95.3...</span></div><div class="line" id="193631"><span class="nick" style="color:#6d2462"><a href="#193631" label="[19:36:31]">&lt;rekado_&gt;</a></span><span class="message">no, hugs is not used</span></div><div class="line" id="193634"><span class="nick" style="color:#6d2462"><a href="#193634" label="[19:36:34]">&lt;rekado_&gt;</a></span><span class="message">that was the original plan</span></div><div class="line" id="193644"><span class="nick" style="color:#6d2462"><a href="#193644" label="[19:36:44]">&lt;rekado_&gt;</a></span><span class="message">looks like it might not be needed after all</span></div><div class="line" id="193705"><span class="nick" style="color:#6d2462"><a href="#193705" label="[19:37:05]">&lt;rekado_&gt;</a></span><span class="message">the failure to build two .o files may require revisiting this</span></div><div class="line" id="194335"><span class="nick" style="color:#234e69"><a href="#194335" label="[19:43:35]">&lt;stikonas&gt;</a></span><span class="message">yeah, that was my impression too</span></div><div class="line" id="194402"><span class="nick" style="color:#234e69"><a href="#194402" label="[19:44:02]">&lt;stikonas&gt;</a></span><span class="message">but it's very annoying to build anything in ghc 4 because make just ignores any errors...</span></div><div class="line" id="194430"><span class="nick" style="color:#234e69"><a href="#194430" label="[19:44:30]">&lt;stikonas&gt;</a></span><span class="message">so one have to scroll back to see what failed</span></div><br /></div></body></html>