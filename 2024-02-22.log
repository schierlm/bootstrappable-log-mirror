<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-02-22.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="030540"><span class="nick" style="color:#389600"><a href="#030540" label="[03:05:40]">&lt;oriansj&gt;</a></span><span class="message">Googulator: very nice</span></div><div class="line" id="082502"><span class="nick" style="color:#8dd3c7"><a href="#082502" label="[08:25:02]">&lt;Guest991&gt;</a></span><span class="message">hi I run it on Thinkpad 430 with legacy mode and it gives me this error <a rel="nofollow" href="https://greenhosting.am/db/get?id=320dfce8-f0b3-4f04-be70-be873b2c168d-f12a6f83-270d-4fd2-8c18-d679623b5f18#cf01ce20-0831-4a65-8ec3-1982bca79c21-adf6cc0d-db90-40df-aef9-0347df493a92">https://greenhosting.am/db/get?id=320dfce8-f0b3-4f04-be70-be873b2c168d-f12a6f83-270d-4fd2-8c18-d679623b5f18#cf01ce20-0831-4a65-8ec3-1982bca79c21-adf6cc0d-db90-40df-aef9-0347df493a92</a> </span></div><div class="line" id="101412"><span class="nick" style="color:#2e2a4a"><a href="#101412" label="[10:14:12]">&lt;mid-kid&gt;</a></span><span class="message">&lt;stikonas&gt; mid-kid: isn't gentoo merge-usr too? &lt;- it's a configuration option but not default</span></div><div class="line" id="101419"><span class="nick" style="color:#2e2a4a"><a href="#101419" label="[10:14:19]">&lt;mid-kid&gt;</a></span><span class="message">Sorry, just catching up on this channel now</span></div><div class="line" id="101522"><span class="nick" style="color:#2e2a4a"><a href="#101522" label="[10:15:22]">&lt;mid-kid&gt;</a></span><span class="message">&lt;Googulator&gt; mid-kid: ICYMI: achieved Gentoo bootstrap based on your instructions on bare metal</span></div><div class="line" id="101524"><span class="nick" style="color:#2e2a4a"><a href="#101524" label="[10:15:24]">&lt;mid-kid&gt;</a></span><span class="message">Niiiiiiiiiiice!</span></div><div class="line" id="101739"><span class="nick" style="color:#2e2a4a"><a href="#101739" label="[10:17:39]">&lt;mid-kid&gt;</a></span><span class="message">&lt;Googulator&gt; LiveGUI image building as we speak, as the ultimate verification of successful bootstrap &lt;- I'm afraid LiveGUI might be using binaries for things like rust</span></div><div class="line" id="101822"><span class="nick" style="color:#2e2a4a"><a href="#101822" label="[10:18:22]">&lt;mid-kid&gt;</a></span><span class="message">It's kind of hard to disable prebuilts globally in gentoo</span></div><div class="line" id="101837"><span class="nick" style="color:#2e2a4a"><a href="#101837" label="[10:18:37]">&lt;mid-kid&gt;</a></span><span class="message">I manage with a small set of package.mask</span></div><div class="line" id="101917"><span class="nick" style="color:#2e2a4a"><a href="#101917" label="[10:19:17]">&lt;mid-kid&gt;</a></span><span class="message">The rust thing applies to any desktop profile in general</span></div><div class="line" id="101942"><span class="nick" style="color:#2e2a4a"><a href="#101942" label="[10:19:42]">&lt;mid-kid&gt;</a></span><span class="message">And I'm not sure to what extent it'd be possible to make catalyst use the ::gentoo-bootstrap repository</span></div><div class="line" id="102056"><span class="nick" style="color:#6b8072"><a href="#102056" label="[10:20:56]">&lt;webczat&gt;</a></span><span class="message">hello</span></div><div class="line" id="102212"><span class="nick" style="color:#6b8072"><a href="#102212" label="[10:22:12]">&lt;webczat&gt;</a></span><span class="message">I have a question: I have a kernel + busybox running without anything else. what's the minimum things I need as a first step to go from this to a working compiler? I can transport data to this environment, but the main problem I seem to have is the lack of make.</span></div><div class="line" id="102347"><span class="nick" style="color:#2e2a4a"><a href="#102347" label="[10:23:47]">&lt;mid-kid&gt;</a></span><span class="message">Googulator: I'll go over your document and try to combine the documentation. Thanks a lot!</span></div><div class="line" id="102402"><span class="nick" style="color:#6b8072"><a href="#102402" label="[10:24:02]">&lt;webczat&gt;</a></span><span class="message">and compiler ofc... and libc</span></div><div class="line" id="102426"><span class="nick" style="color:#2e2a4a"><a href="#102426" label="[10:24:26]">&lt;mid-kid&gt;</a></span><span class="message">The changes are looking good so far. I kind of assumed downloading the distfiles on a separate machine though</span></div><div class="line" id="102432"><span class="nick" style="color:#2e2a4a"><a href="#102432" label="[10:24:32]">&lt;mid-kid&gt;</a></span><span class="message">But using curl makes sense too</span></div><div class="line" id="102457"><span class="nick" style="color:#80b1d3"><a href="#102457" label="[10:24:57]">&lt;stikonas&gt;</a></span><span class="message">webzcat: you need just sources</span></div><div class="line" id="102535"><span class="nick" style="color:#80b1d3"><a href="#102535" label="[10:25:35]">&lt;stikonas&gt;</a></span><span class="message">live-bootstrap can build everything from just binary seeds</span></div><div class="line" id="102556"><span class="nick" style="color:#80b1d3"><a href="#102556" label="[10:25:56]">&lt;stikonas&gt;</a></span><span class="message">and binary seeds are: 1. sub 1 KiB</span></div><div class="line" id="102611"><span class="nick" style="color:#80b1d3"><a href="#102611" label="[10:26:11]">&lt;stikonas&gt;</a></span><span class="message">2. can be recreated easily if your busybox includes sed</span></div><div class="line" id="102613"><span class="nick" style="color:#2e2a4a"><a href="#102613" label="[10:26:13]">&lt;mid-kid&gt;</a></span><span class="message">you can probably use busybox tools to assemble hex0</span></div><div class="line" id="102616"><span class="nick" style="color:#2e2a4a"><a href="#102616" label="[10:26:16]">&lt;mid-kid&gt;</a></span><span class="message">yeah that</span></div><div class="line" id="102622"><span class="nick" style="color:#389600"><a href="#102622" label="[10:26:22]">&lt;oriansj&gt;</a></span><span class="message">well busybox can be used to create the binary seeds too</span></div><div class="line" id="102622"><span class="nick" style="color:#80b1d3"><a href="#102622" label="[10:26:22]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="102745"><span class="nick" style="color:#2e2a4a"><a href="#102745" label="[10:27:45]">&lt;mid-kid&gt;</a></span><span class="message">Googulator: Oh... You copied the LFS instructions into the document. I was trying to avoid that, lol</span></div><div class="line" id="102756"><span class="nick" style="color:#2e2a4a"><a href="#102756" label="[10:27:56]">&lt;mid-kid&gt;</a></span><span class="message">But I guess explicit is better than implicit</span></div><div class="line" id="102824"><span class="nick" style="color:#80b1d3"><a href="#102824" label="[10:28:24]">&lt;stikonas&gt;</a></span><span class="message">webczat: take a look at <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/">https://github.com/fosslinux/live-bootstrap/</a> </span></div><div class="line" id="102848"><span class="nick" style="color:#80b1d3"><a href="#102848" label="[10:28:48]">&lt;stikonas&gt;</a></span><span class="message">you can eiter prepare live-bootstrap source dir outside your environment and just copy in sources in the required directory tree structure</span></div><div class="line" id="102856"><span class="nick" style="color:#80b1d3"><a href="#102856" label="[10:28:56]">&lt;stikonas&gt;</a></span><span class="message">or read about pythonless builds</span></div><div class="line" id="103022"><span class="nick" style="color:#80b1d3"><a href="#103022" label="[10:30:22]">&lt;stikonas&gt;</a></span><span class="message">to large extend LFS instructions duplicate tools and compilers what we have in live-bootstrap</span></div><div class="line" id="103034"><span class="nick" style="color:#80b1d3"><a href="#103034" label="[10:30:34]">&lt;stikonas&gt;</a></span><span class="message">though they do bring us to x86_64...</span></div><div class="line" id="103124"><span class="nick" style="color:#2e2a4a"><a href="#103124" label="[10:31:24]">&lt;mid-kid&gt;</a></span><span class="message">yeah LFS is superfluous in the gentoo bootstrap, given we cross-compile a compiler *yet again* later.</span></div><div class="line" id="103127"><span class="nick" style="color:#80b1d3"><a href="#103127" label="[10:31:27]">&lt;stikonas&gt;</a></span><span class="message">perhaps bootstraping 32-bit Gentoo and using portage with crossdev is quicker though</span></div><div class="line" id="103140"><span class="nick" style="color:#2e2a4a"><a href="#103140" label="[10:31:40]">&lt;mid-kid&gt;</a></span><span class="message">It was just easier in terms of instructions</span></div><div class="line" id="103150"><span class="nick" style="color:#2e2a4a"><a href="#103150" label="[10:31:50]">&lt;mid-kid&gt;</a></span><span class="message">And I didn't feel like messing about too much.</span></div><div class="line" id="103159"><span class="nick" style="color:#2e2a4a"><a href="#103159" label="[10:31:59]">&lt;mid-kid&gt;</a></span><span class="message">There's a lot that can be improved here.</span></div><div class="line" id="103309"><span class="nick" style="color:#6b8072"><a href="#103309" label="[10:33:09]">&lt;webczat&gt;</a></span><span class="message">i actually think this bootstrap goes further than I intend.</span></div><div class="line" id="103311"><span class="nick" style="color:#6d2462"><a href="#103311" label="[10:33:11]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It is a good start anyway</span></div><div class="line" id="103322"><span class="nick" style="color:#6b8072"><a href="#103322" label="[10:33:22]">&lt;webczat&gt;</a></span><span class="message">like I start from a higher level, which is actual kernel+busybox+nothing</span></div><div class="line" id="103351"><span class="nick" style="color:#6d2462"><a href="#103351" label="[10:33:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; webczat: well, live-bootstrap can easily do less, kernel bootstrapping is optional</span></div><div class="line" id="103403"><span class="nick" style="color:#6d2462"><a href="#103403" label="[10:34:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; You could do kernel+nothing</span></div><div class="line" id="103412"><span class="nick" style="color:#2e2a4a"><a href="#103412" label="[10:34:12]">&lt;mid-kid&gt;</a></span><span class="message">webczat: yeah, it's just that this bootstrap can start from any working kernel, really</span></div><div class="line" id="103434"><span class="nick" style="color:#2e2a4a"><a href="#103434" label="[10:34:34]">&lt;mid-kid&gt;</a></span><span class="message">there's maybe two steps you can skip when you have modern tools in the form of busybox... but it's too much trouble</span></div><div class="line" id="103445"><span class="nick" style="color:#6d2462"><a href="#103445" label="[10:34:45]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Or use busybox to assemble hex0 seeds</span></div><div class="line" id="103446"><span class="nick" style="color:#6b8072"><a href="#103446" label="[10:34:46]">&lt;webczat&gt;</a></span><span class="message">also, i'm a lfs kind of user and lfs is generally done manually without helper scripts.</span></div><div class="line" id="103511"><span class="nick" style="color:#6d2462"><a href="#103511" label="[10:35:11]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Well, you can follow those scripts manually</span></div><div class="line" id="103521"><span class="nick" style="color:#2e2a4a"><a href="#103521" label="[10:35:21]">&lt;mid-kid&gt;</a></span><span class="message">the broad strokes of M2-planet-&gt;mescc-tools-&gt;tcc-&gt;gcc4-&gt;etc are still necessary to follow if you don't have a compiler</span></div><div class="line" id="103524"><span class="nick" style="color:#6d2462"><a href="#103524" label="[10:35:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; In live-bootstrap too...</span></div><div class="line" id="103533"><span class="nick" style="color:#2e2a4a"><a href="#103533" label="[10:35:33]">&lt;mid-kid&gt;</a></span><span class="message">yeah that too</span></div><div class="line" id="103543"><span class="nick" style="color:#6b8072"><a href="#103543" label="[10:35:43]">&lt;webczat&gt;</a></span><span class="message">i am not even fully certain I have to start from hex0 stage. my goal is nothing like the goals of this project, it's more about fun.</span></div><div class="line" id="103549"><span class="nick" style="color:#6d2462"><a href="#103549" label="[10:35:49]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; They are not that complex scripts...</span></div><div class="line" id="103607"><span class="nick" style="color:#6d2462"><a href="#103607" label="[10:36:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Well, you need compiler anyway</span></div><div class="line" id="103618"><span class="nick" style="color:#2e2a4a"><a href="#103618" label="[10:36:18]">&lt;mid-kid&gt;</a></span><span class="message">webczat: you kinda do have to start from hex0 if you want to compile M2-planet</span></div><div class="line" id="103621"><span class="nick" style="color:#6d2462"><a href="#103621" label="[10:36:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; How else would you get it</span></div><div class="line" id="103629"><span class="nick" style="color:#6b8072"><a href="#103629" label="[10:36:29]">&lt;webczat&gt;</a></span><span class="message">also I am on x64. the kernel doesn't support 32 bits because I had a crazy idea to try to fit it in a floppy which I failed at. but it doesn't do 32 bit emulation</span></div><div class="line" id="103632"><span class="nick" style="color:#2e2a4a"><a href="#103632" label="[10:36:32]">&lt;mid-kid&gt;</a></span><span class="message">the only step you can skip is kaem, as you have a posix shell</span></div><div class="line" id="103641"><span class="nick" style="color:#80b1d3"><a href="#103641" label="[10:36:41]">&lt;stikonas&gt;</a></span><span class="message">yeah, kaem can be skipped</span></div><div class="line" id="103652"><span class="nick" style="color:#80b1d3"><a href="#103652" label="[10:36:52]">&lt;stikonas&gt;</a></span><span class="message">also hex0 can be skipped too...</span></div><div class="line" id="103700"><span class="nick" style="color:#80b1d3"><a href="#103700" label="[10:37:00]">&lt;stikonas&gt;</a></span><span class="message">you can assemble hex1 directly</span></div><div class="line" id="103704"><span class="nick" style="color:#2e2a4a"><a href="#103704" label="[10:37:04]">&lt;mid-kid&gt;</a></span><span class="message">oh sure</span></div><div class="line" id="103709"><span class="nick" style="color:#80b1d3"><a href="#103709" label="[10:37:09]">&lt;stikonas&gt;</a></span><span class="message">from hex1.hex0 source</span></div><div class="line" id="103733"><span class="nick" style="color:#6b8072"><a href="#103733" label="[10:37:33]">&lt;webczat&gt;</a></span><span class="message">but I don't have make.</span></div><div class="line" id="103733"><span class="nick" style="color:#80b1d3"><a href="#103733" label="[10:37:33]">&lt;stikonas&gt;</a></span><span class="message">but you'll still need some kind of compiler and linker</span></div><div class="line" id="103740"><span class="nick" style="color:#80b1d3"><a href="#103740" label="[10:37:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, so you need tcc to build make</span></div><div class="line" id="103748"><span class="nick" style="color:#80b1d3"><a href="#103748" label="[10:37:48]">&lt;stikonas&gt;</a></span><span class="message">that needs either mescc</span></div><div class="line" id="103749"><span class="nick" style="color:#2e2a4a"><a href="#103749" label="[10:37:49]">&lt;mid-kid&gt;</a></span><span class="message">I'm not sure to what extent the early bootstrap does 64bit</span></div><div class="line" id="103756"><span class="nick" style="color:#2e2a4a"><a href="#103756" label="[10:37:56]">&lt;mid-kid&gt;</a></span><span class="message">I know M2-planet and mes both do</span></div><div class="line" id="103758"><span class="nick" style="color:#80b1d3"><a href="#103758" label="[10:37:58]">&lt;stikonas&gt;</a></span><span class="message">no, we don't support that</span></div><div class="line" id="103803"><span class="nick" style="color:#80b1d3"><a href="#103803" label="[10:38:03]">&lt;stikonas&gt;</a></span><span class="message">mescc is buggy on 64-bits</span></div><div class="line" id="103807"><span class="nick" style="color:#2e2a4a"><a href="#103807" label="[10:38:07]">&lt;mid-kid&gt;</a></span><span class="message">ah</span></div><div class="line" id="103818"><span class="nick" style="color:#80b1d3"><a href="#103818" label="[10:38:18]">&lt;stikonas&gt;</a></span><span class="message">you need to build 32-bit tcc</span></div><div class="line" id="103824"><span class="nick" style="color:#80b1d3"><a href="#103824" label="[10:38:24]">&lt;stikonas&gt;</a></span><span class="message">then I think you can cross-compile</span></div><div class="line" id="103829"><span class="nick" style="color:#80b1d3"><a href="#103829" label="[10:38:29]">&lt;stikonas&gt;</a></span><span class="message">(we don't have scripts for that)</span></div><div class="line" id="103830"><span class="nick" style="color:#2e2a4a"><a href="#103830" label="[10:38:30]">&lt;mid-kid&gt;</a></span><span class="message">tcc doesn't support 64bit?</span></div><div class="line" id="103832"><span class="nick" style="color:#80b1d3"><a href="#103832" label="[10:38:32]">&lt;stikonas&gt;</a></span><span class="message">but manyally it should work</span></div><div class="line" id="103834"><span class="nick" style="color:#80b1d3"><a href="#103834" label="[10:38:34]">&lt;stikonas&gt;</a></span><span class="message">tcc does support</span></div><div class="line" id="103838"><span class="nick" style="color:#2e2a4a"><a href="#103838" label="[10:38:38]">&lt;mid-kid&gt;</a></span><span class="message">ah</span></div><div class="line" id="103841"><span class="nick" style="color:#80b1d3"><a href="#103841" label="[10:38:41]">&lt;stikonas&gt;</a></span><span class="message">but mescc miscompiles 64-bit tc</span></div><div class="line" id="103916"><span class="nick" style="color:#2e2a4a"><a href="#103916" label="[10:39:16]">&lt;mid-kid&gt;</a></span><span class="message">then yeah, start by building M2-Planet/mes-m2 and mescc from there</span></div><div class="line" id="103923"><span class="nick" style="color:#2e2a4a"><a href="#103923" label="[10:39:23]">&lt;mid-kid&gt;</a></span><span class="message">even if it's buggy maybe you can fix the bugs idk</span></div><div class="line" id="103940"><span class="nick" style="color:#2e2a4a"><a href="#103940" label="[10:39:40]">&lt;mid-kid&gt;</a></span><span class="message">then move up to tcc by following the live-bootstrap scripts</span></div><div class="line" id="103954"><span class="nick" style="color:#2e2a4a"><a href="#103954" label="[10:39:54]">&lt;mid-kid&gt;</a></span><span class="message">read steps/manifest and the individual scripts in steps/</span></div><div class="line" id="104001"><span class="nick" style="color:#2e2a4a"><a href="#104001" label="[10:40:01]">&lt;mid-kid&gt;</a></span><span class="message">to see the order things go in</span></div><div class="line" id="104007"><span class="nick" style="color:#6b8072"><a href="#104007" label="[10:40:07]">&lt;webczat&gt;</a></span><span class="message">what about libc?</span></div><div class="line" id="104019"><span class="nick" style="color:#6b8072"><a href="#104019" label="[10:40:19]">&lt;webczat&gt;</a></span><span class="message">i have kernel and busybox, no libc</span></div><div class="line" id="104021"><span class="nick" style="color:#2e2a4a"><a href="#104021" label="[10:40:21]">&lt;mid-kid&gt;</a></span><span class="message">mes has its own libc that is used up to the point where musl can be compiled</span></div><div class="line" id="104031"><span class="nick" style="color:#2e2a4a"><a href="#104031" label="[10:40:31]">&lt;mid-kid&gt;</a></span><span class="message">which is the source of many bugs!</span></div><div class="line" id="104032"><span class="nick" style="color:#6b8072"><a href="#104032" label="[10:40:32]">&lt;webczat&gt;</a></span><span class="message">ok</span></div><div class="line" id="104117"><span class="nick" style="color:#6b8072"><a href="#104117" label="[10:41:17]">&lt;webczat&gt;</a></span><span class="message">initially I thought I could even start from tcc directly, but wanted to somehow compile some libc.</span></div><div class="line" id="104133"><span class="nick" style="color:#6b8072"><a href="#104133" label="[10:41:33]">&lt;webczat&gt;</a></span><span class="message">without make it's a no no for most normal libcs</span></div><div class="line" id="104134"><span class="nick" style="color:#2e2a4a"><a href="#104134" label="[10:41:34]">&lt;mid-kid&gt;</a></span><span class="message">how would you intend to compile tcc?</span></div><div class="line" id="104150"><span class="nick" style="color:#2e2a4a"><a href="#104150" label="[10:41:50]">&lt;mid-kid&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="104154"><span class="nick" style="color:#2e2a4a"><a href="#104154" label="[10:41:54]">&lt;mid-kid&gt;</a></span><span class="message">this document also helps a lot</span></div><div class="line" id="104205"><span class="nick" style="color:#6b8072"><a href="#104205" label="[10:42:05]">&lt;webczat&gt;</a></span><span class="message">mid-kid: i assume some level of initial seeding. as said, I don't have comparable goals to this project, just fun, which makes some things less important.</span></div><div class="line" id="104212"><span class="nick" style="color:#80b1d3"><a href="#104212" label="[10:42:12]">&lt;stikonas&gt;</a></span><span class="message">tcc an then build musl libc</span></div><div class="line" id="104231"><span class="nick" style="color:#6b8072"><a href="#104231" label="[10:42:31]">&lt;webczat&gt;</a></span><span class="message">stikonas: but I still don't have make.</span></div><div class="line" id="104250"><span class="nick" style="color:#2e2a4a"><a href="#104250" label="[10:42:50]">&lt;mid-kid&gt;</a></span><span class="message">make has its own bootstrap script, which works if you have a C compielr</span></div><div class="line" id="104251"><span class="nick" style="color:#80b1d3"><a href="#104251" label="[10:42:51]">&lt;stikonas&gt;</a></span><span class="message">well, we build make using some manual script</span></div><div class="line" id="104256"><span class="nick" style="color:#6b8072"><a href="#104256" label="[10:42:56]">&lt;webczat&gt;</a></span><span class="message">if I start from tcc, i can't compile make without libc which I can't compile without make</span></div><div class="line" id="104259"><span class="nick" style="color:#80b1d3"><a href="#104259" label="[10:42:59]">&lt;stikonas&gt;</a></span><span class="message">or use shell script</span></div><div class="line" id="104315"><span class="nick" style="color:#80b1d3"><a href="#104315" label="[10:43:15]">&lt;stikonas&gt;</a></span><span class="message">webczat: which is why you need to follow live-bootstrap</span></div><div class="line" id="104325"><span class="nick" style="color:#80b1d3"><a href="#104325" label="[10:43:25]">&lt;stikonas&gt;</a></span><span class="message">it builds up those steps</span></div><div class="line" id="104336"><span class="nick" style="color:#6b8072"><a href="#104336" label="[10:43:36]">&lt;webczat&gt;</a></span><span class="message">will see. might be fun</span></div><div class="line" id="104338"><span class="nick" style="color:#80b1d3"><a href="#104338" label="[10:43:38]">&lt;stikonas&gt;</a></span><span class="message">it starts with assembly</span></div><div class="line" id="104342"><span class="nick" style="color:#80b1d3"><a href="#104342" label="[10:43:42]">&lt;stikonas&gt;</a></span><span class="message">so no libc is needed</span></div><div class="line" id="104350"><span class="nick" style="color:#80b1d3"><a href="#104350" label="[10:43:50]">&lt;stikonas&gt;</a></span><span class="message">or rather starts with machine code</span></div><div class="line" id="104355"><span class="nick" style="color:#2e2a4a"><a href="#104355" label="[10:43:55]">&lt;mid-kid&gt;</a></span><span class="message">webczat: you might be able to break that loop with some &quot;cc -o libc.o $(find . -name &quot;*.c&quot;)&quot; or similar</span></div><div class="line" id="104403"><span class="nick" style="color:#2e2a4a"><a href="#104403" label="[10:44:03]">&lt;mid-kid&gt;</a></span><span class="message">i.e. compiling the libc manually without make</span></div><div class="line" id="104415"><span class="nick" style="color:#2e2a4a"><a href="#104415" label="[10:44:15]">&lt;mid-kid&gt;</a></span><span class="message">both musl and mes-libc are simple enough to make that possible</span></div><div class="line" id="104419"><span class="nick" style="color:#6b8072"><a href="#104419" label="[10:44:19]">&lt;webczat&gt;</a></span><span class="message">stikonas: ik. I just mean, I cannot really directly start from tcc because of no libc. I would need a prior libc. the problem now is my kernel really does not support 32 bits so probably needs recompilation?</span></div><div class="line" id="104422"><span class="nick" style="color:#80b1d3"><a href="#104422" label="[10:44:22]">&lt;stikonas&gt;</a></span><span class="message">anyway, I have to go now</span></div><div class="line" id="104435"><span class="nick" style="color:#80b1d3"><a href="#104435" label="[10:44:35]">&lt;stikonas&gt;</a></span><span class="message">yeah, we only have early bootstrap on x86</span></div><div class="line" id="104442"><span class="nick" style="color:#80b1d3"><a href="#104442" label="[10:44:42]">&lt;stikonas&gt;</a></span><span class="message">well, riscv64 can reach tcc too...</span></div><div class="line" id="104445"><span class="nick" style="color:#80b1d3"><a href="#104445" label="[10:44:45]">&lt;stikonas&gt;</a></span><span class="message">but is far more wip</span></div><div class="line" id="104454"><span class="nick" style="color:#80b1d3"><a href="#104454" label="[10:44:54]">&lt;stikonas&gt;</a></span><span class="message">I'll be back in the evening</span></div><div class="line" id="104458"><span class="nick" style="color:#2e2a4a"><a href="#104458" label="[10:44:58]">&lt;mid-kid&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/mes-0.25/pass1.kaem#L102">https://github.com/fosslinux/live-bootstrap/blob/master/steps/mes-0.25/pass1.kaem#L102</a> </span></div><div class="line" id="104459"><span class="nick" style="color:#80b1d3"><a href="#104459" label="[10:44:59]">&lt;stikonas&gt;</a></span><span class="message">will catch up with logs here</span></div><div class="line" id="104504"><span class="nick" style="color:#2e2a4a"><a href="#104504" label="[10:45:04]">&lt;mid-kid&gt;</a></span><span class="message">This script builds the mes-libc manually</span></div><div class="line" id="104513"><span class="nick" style="color:#2e2a4a"><a href="#104513" label="[10:45:13]">&lt;mid-kid&gt;</a></span><span class="message">you can probably s/mescc/cc/ here and get a working libc.a</span></div><div class="line" id="104530"><span class="nick" style="color:#2e2a4a"><a href="#104530" label="[10:45:30]">&lt;mid-kid&gt;</a></span><span class="message">and this libc is good enough for make</span></div><div class="line" id="104538"><span class="nick" style="color:#6b8072"><a href="#104538" label="[10:45:38]">&lt;webczat&gt;</a></span><span class="message">okay</span></div><div class="line" id="104544"><span class="nick" style="color:#6b8072"><a href="#104544" label="[10:45:44]">&lt;webczat&gt;</a></span><span class="message">that could work.</span></div><div class="line" id="104607"><span class="nick" style="color:#6b8072"><a href="#104607" label="[10:46:07]">&lt;webczat&gt;</a></span><span class="message">will still look into whether I want to start from hex or from this one. except really having to recompile...</span></div><div class="line" id="104645"><span class="nick" style="color:#2e2a4a"><a href="#104645" label="[10:46:45]">&lt;mid-kid&gt;</a></span><span class="message">If you bring in any extra binary seeds, I just recommend starting from mes, built on another machine</span></div><div class="line" id="104719"><span class="nick" style="color:#2e2a4a"><a href="#104719" label="[10:47:19]">&lt;mid-kid&gt;</a></span><span class="message">everything surrounding the bootstrap uses that as a significant checkpoint</span></div><div class="line" id="104802"><span class="nick" style="color:#2e2a4a"><a href="#104802" label="[10:48:02]">&lt;mid-kid&gt;</a></span><span class="message">everything before it is assembly and reduced variants of c-like langs</span></div><div class="line" id="104828"><span class="nick" style="color:#2e2a4a"><a href="#104828" label="[10:48:28]">&lt;mid-kid&gt;</a></span><span class="message">and everything after it is tools that were developed outside of the context of bootstrappable.org</span></div><div class="line" id="104840"><span class="nick" style="color:#2e2a4a"><a href="#104840" label="[10:48:40]">&lt;mid-kid&gt;</a></span><span class="message">with some light patching</span></div><div class="line" id="105101"><span class="nick" style="color:#6d2462"><a href="#105101" label="[10:51:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Stage0-posix is easy to run even without live-bootstrap</span></div><div class="line" id="105120"><span class="nick" style="color:#6d2462"><a href="#105120" label="[10:51:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Might be worth starting there</span></div><div class="line" id="105204"><span class="nick" style="color:#6d2462"><a href="#105204" label="[10:52:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; mes is the hard bit to run manually anyway</span></div><div class="line" id="105341"><span class="nick" style="color:#389600"><a href="#105341" label="[10:53:41]">&lt;oriansj&gt;</a></span><span class="message">webczat: well you have to decide what starting point you wish to use. (assembly, C compiler, etc) and from there many of the details become obvious</span></div><div class="line" id="105422"><span class="nick" style="color:#6d2462"><a href="#105422" label="[10:54:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Early step are hard to develop but easy to run</span></div><div class="line" id="110607"><span class="nick" style="color:#2e2a4a"><a href="#110607" label="[11:06:07]">&lt;mid-kid&gt;</a></span><span class="message">mes is fine if you use the configure script</span></div><div class="line" id="110633"><span class="nick" style="color:#2e2a4a"><a href="#110633" label="[11:06:33]">&lt;mid-kid&gt;</a></span><span class="message">live-bootstrap does it manually due to lack of tools</span></div><div class="line" id="111236"><span class="nick" style="color:#2e2a4a"><a href="#111236" label="[11:12:36]">&lt;mid-kid&gt;</a></span><span class="message">other topic</span></div><div class="line" id="111256"><span class="nick" style="color:#2e2a4a"><a href="#111256" label="[11:12:56]">&lt;mid-kid&gt;</a></span><span class="message">I wonder if it's possible to get rust to not do a full 3-stage bootstrap for each version</span></div><div class="line" id="111313"><span class="nick" style="color:#2e2a4a"><a href="#111313" label="[11:13:13]">&lt;mid-kid&gt;</a></span><span class="message">I feel that would cut down a lot of the time in bootstrapping it</span></div><div class="line" id="152103"><span class="nick" style="color:#6d2462"><a href="#152103" label="[15:21:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, worth investigating that....</span></div><div class="line" id="163049"><span class="nick" style="color:#234e69"><a href="#163049" label="[16:30:49]">&lt;Googulator&gt;</a></span><span class="message">mid-kid: I copied in the LFS instructions because it's not meant to remain just a document</span></div><div class="line" id="163056"><span class="nick" style="color:#234e69"><a href="#163056" label="[16:30:56]">&lt;Googulator&gt;</a></span><span class="message">I intend to convert it into an actual shell script</span></div><div class="line" id="164305"><span class="nick" style="color:#234e69"><a href="#164305" label="[16:43:05]">&lt;Googulator&gt;</a></span><span class="message">also, doesn't downloading binary packages need to be explicitly enabled?</span></div><div class="line" id="171839"><span class="nick" style="color:#6d2462"><a href="#171839" label="[17:18:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: no, you need to add at least *-bin packages to package.mask</span></div><div class="line" id="171851"><span class="nick" style="color:#6d2462"><a href="#171851" label="[17:18:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Though that is not sufficient</span></div><div class="line" id="171950"><span class="nick" style="color:#234e69"><a href="#171950" label="[17:19:50]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://wiki.gentoo.org/wiki/Gentoo_Binary_Host_Quickstart">https://wiki.gentoo.org/wiki/Gentoo_Binary_Host_Quickstart</a>  sounds like you have to configure a binary package source before Gentoo can start using binary packages</span></div><div class="line" id="171958"><span class="nick" style="color:#234e69"><a href="#171958" label="[17:19:58]">&lt;Googulator&gt;</a></span><span class="message">or is there now an embedded default server?</span></div><div class="line" id="172332"><span class="nick" style="color:#6d2462"><a href="#172332" label="[17:23:32]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; There are two things</span></div><div class="line" id="172359"><span class="nick" style="color:#6d2462"><a href="#172359" label="[17:23:59]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; One are binary packages and the other are ebuilds that still download binary packages</span></div><div class="line" id="172412"><span class="nick" style="color:#6d2462"><a href="#172412" label="[17:24:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It's a bit confusing</span></div><div class="line" id="172423"><span class="nick" style="color:#234e69"><a href="#172423" label="[17:24:23]">&lt;Googulator&gt;</a></span><span class="message">the latter is for things like Haskell, right?</span></div><div class="line" id="172431"><span class="nick" style="color:#6d2462"><a href="#172431" label="[17:24:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; E.g. there is openjdk and openjdk-bin</span></div><div class="line" id="172437"><span class="nick" style="color:#6d2462"><a href="#172437" label="[17:24:37]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Generally yes</span></div><div class="line" id="172443"><span class="nick" style="color:#6c3d55"><a href="#172443" label="[17:24:43]">&lt;ccx&gt;</a></span><span class="message">firefox-bin etc.</span></div><div class="line" id="172454"><span class="nick" style="color:#6d2462"><a href="#172454" label="[17:24:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Or some big packages like chromium</span></div><div class="line" id="172515"><span class="nick" style="color:#6d2462"><a href="#172515" label="[17:25:15]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Usually they are suffixed with bin</span></div><div class="line" id="172529"><span class="nick" style="color:#6c3d55"><a href="#172529" label="[17:25:29]">&lt;ccx&gt;</a></span><span class="message">They are usually installed into /opt btw; that's &quot;vendor provided&quot; binary.</span></div><div class="line" id="172538"><span class="nick" style="color:#6c3d55"><a href="#172538" label="[17:25:38]">&lt;ccx&gt;</a></span><span class="message">As opposed to binary you compiled yourself.</span></div><div class="line" id="172541"><span class="nick" style="color:#6d2462"><a href="#172541" label="[17:25:41]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But sometimes, e.g. ghc is controlled by USE flag</span></div><div class="line" id="172545"><span class="nick" style="color:#6c3d55"><a href="#172545" label="[17:25:45]">&lt;ccx&gt;</a></span><span class="message">that's BINPKG</span></div><div class="line" id="172657"><span class="nick" style="color:#6c3d55"><a href="#172657" label="[17:26:57]">&lt;ccx&gt;</a></span><span class="message">How did we get here? :]</span></div><div class="line" id="173744"><span class="nick" style="color:#234e69"><a href="#173744" label="[17:37:44]">&lt;Googulator&gt;</a></span><span class="message">ccx: building a fully bootstrapped version of Gentoo live DVD</span></div><div class="line" id="173850"><span class="nick" style="color:#234e69"><a href="#173850" label="[17:38:50]">&lt;Googulator&gt;</a></span><span class="message">stikonas: <a rel="nofollow" href="https://gitweb.gentoo.org/proj/releng.git/tree/releases/specs/amd64/livegui/livegui-stage1.spec#n258">https://gitweb.gentoo.org/proj/releng.git/tree/releases/specs/amd64/livegui/livegui-stage1.spec#n258</a>  calls for www-client/chromium and www-client/firefox, as opposed to their -bin counterparts - does Portage has some magic to make this fall back to the -bin version?</span></div><div class="line" id="173914"><span class="nick" style="color:#6d2462"><a href="#173914" label="[17:39:14]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; No, no fallback</span></div><div class="line" id="173929"><span class="nick" style="color:#6d2462"><a href="#173929" label="[17:39:29]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Normally you see -bin</span></div><div class="line" id="173938"><span class="nick" style="color:#6d2462"><a href="#173938" label="[17:39:38]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; So just mask those</span></div><div class="line" id="174016"><span class="nick" style="color:#6d2462"><a href="#174016" label="[17:40:16]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But there is then still stuff like ghc or some other languages</span></div><div class="line" id="174049"><span class="nick" style="color:#234e69"><a href="#174049" label="[17:40:49]">&lt;Googulator&gt;</a></span><span class="message">does that get compiled into the live DVD?</span></div><div class="line" id="174112"><span class="nick" style="color:#6d2462"><a href="#174112" label="[17:41:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; No idea</span></div><div class="line" id="174121"><span class="nick" style="color:#6c3d55"><a href="#174121" label="[17:41:21]">&lt;ccx&gt;</a></span><span class="message">By definition you can't bootstrap -bin packages because those are binaries provided by third party.</span></div><div class="line" id="174201"><span class="nick" style="color:#234e69"><a href="#174201" label="[17:42:01]">&lt;Googulator&gt;</a></span><span class="message">that's why I'm worried that it could be downloading -bin packages instead of actually bootstrapping</span></div><div class="line" id="174220"><span class="nick" style="color:#6d2462"><a href="#174220" label="[17:42:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; You should see in emerge log</span></div><div class="line" id="174236"><span class="nick" style="color:#6d2462"><a href="#174236" label="[17:42:36]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; What dependencies got pulled in</span></div><div class="line" id="174303"><span class="nick" style="color:#6c3d55"><a href="#174303" label="[17:43:03]">&lt;ccx&gt;</a></span><span class="message">Are there even any virtuals that default to -bin?</span></div><div class="line" id="174327"><span class="nick" style="color:#6d2462"><a href="#174327" label="[17:43:27]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I don't think so</span></div><div class="line" id="174346"><span class="nick" style="color:#6d2462"><a href="#174346" label="[17:43:46]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Maybe Java will pull in bin</span></div><div class="line" id="174531"><span class="nick" style="color:#6d2462"><a href="#174531" label="[17:45:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But only if it sees bootstrap loop</span></div><div class="line" id="174739"><span class="nick" style="color:#234e69"><a href="#174739" label="[17:47:39]">&lt;Googulator&gt;</a></span><span class="message">looks like it did pull in openjdk-bin and rust/bin</span></div><div class="line" id="174838"><span class="nick" style="color:#6c3d55"><a href="#174838" label="[17:48:38]">&lt;ccx&gt;</a></span><span class="message">How do you plan to bootstrap those?</span></div><div class="line" id="174943"><span class="nick" style="color:#6d2462"><a href="#174943" label="[17:49:43]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Use my overlay</span></div><div class="line" id="175022"><span class="nick" style="color:#234e69"><a href="#175022" label="[17:50:22]">&lt;Googulator&gt;</a></span><span class="message">I'll probably exclude those initially, hopefully it's not the whole system that depends on them</span></div><div class="line" id="175038"><span class="nick" style="color:#d9d9d9"><a href="#175038" label="[17:50:38]">&lt;nimaje&gt;</a></span><span class="message">not sure about the first version of openjdk, but all the others can be build by the previous version</span></div><div class="line" id="175123"><span class="nick" style="color:#d9d9d9"><a href="#175123" label="[17:51:23]">&lt;nimaje&gt;</a></span><span class="message">(maybe you can skip some openjdk versions)</span></div><div class="line" id="182858"><span class="nick" style="color:#389600"><a href="#182858" label="[18:28:58]">&lt;oriansj&gt;</a></span><span class="message">well we don't have Haskell bootstrapped yet; so a whole category of software can't yet be bootstrapped.</span></div><div class="line" id="192502"><span class="nick" style="color:#6d2462"><a href="#192502" label="[19:25:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; No, openjdk versiobs can't be skipped</span></div><div class="line" id="192523"><span class="nick" style="color:#6d2462"><a href="#192523" label="[19:25:23]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; And build system insists on 2 stagė bootstrap</span></div><div class="line" id="192622"><span class="nick" style="color:#6d2462"><a href="#192622" label="[19:26:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Also stuff like ocaml or some other languages wouldn't be using proper bootstrap, e.g. camlboot on gentoo</span></div><div class="line" id="193124"><span class="nick" style="color:#6d2462"><a href="#193124" label="[19:31:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: maybe you can share that emerge list?</span></div><div class="line" id="193151"><span class="nick" style="color:#6d2462"><a href="#193151" label="[19:31:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I might be able to spot if there is anything suspicious</span></div><div class="line" id="193218"><span class="nick" style="color:#6d2462"><a href="#193218" label="[19:32:18]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Oh you already did earlier</span></div><div class="line" id="193301"><span class="nick" style="color:#6d2462"><a href="#193301" label="[19:33:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Oh but that's just final target list</span></div><div class="line" id="193313"><span class="nick" style="color:#6d2462"><a href="#193313" label="[19:33:13]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Almost surely it will need rust</span></div><div class="line" id="200346"><span class="nick" style="color:#2e2a4a"><a href="#200346" label="[20:03:46]">&lt;mid-kid&gt;</a></span><span class="message">&lt;Googulator&gt; that's why I'm worried that it could be downloading -bin packages instead of actually bootstrapping &lt;- If you built the LiveDVD without any hacks then you definitely pulled in at least rust-bin</span></div><div class="line" id="200415"><span class="nick" style="color:#2e2a4a"><a href="#200415" label="[20:04:15]">&lt;mid-kid&gt;</a></span><span class="message">Or rather</span></div><div class="line" id="200434"><span class="nick" style="color:#2e2a4a"><a href="#200434" label="[20:04:34]">&lt;mid-kid&gt;</a></span><span class="message">The non-bin rust ebuild will download a binary rust stage0 unless USE=system-bootstrap is set</span></div><div class="line" id="200457"><span class="nick" style="color:#2e2a4a"><a href="#200457" label="[20:04:57]">&lt;mid-kid&gt;</a></span><span class="message">and USE=system-bootstrap requires that you already have rust, or rust-bin installed</span></div><div class="line" id="200545"><span class="nick" style="color:#2e2a4a"><a href="#200545" label="[20:05:45]">&lt;mid-kid&gt;</a></span><span class="message">Different languages work differently, trying to install dev-lang/go will install dev-lang/go-bootstrap as a dependency, which is a prebuilt version of go</span></div><div class="line" id="200614"><span class="nick" style="color:#2e2a4a"><a href="#200614" label="[20:06:14]">&lt;mid-kid&gt;</a></span><span class="message">Once dev-lang/go is finished building a depclean will cause the bootstrap to be removed</span></div><div class="line" id="200724"><span class="nick" style="color:#2e2a4a"><a href="#200724" label="[20:07:24]">&lt;mid-kid&gt;</a></span><span class="message">But unlike go, rust *is* a dependency for any desktop-related things, as it's required to build librsvg</span></div><div class="line" id="200844"><span class="nick" style="color:#2e2a4a"><a href="#200844" label="[20:08:44]">&lt;mid-kid&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-lang/rust/rust-1.75.0-r1.ebuild#n33">https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-lang/rust/rust-1.75.0-r1.ebuild#n33</a> </span></div><div class="line" id="200924"><span class="nick" style="color:#2e2a4a"><a href="#200924" label="[20:09:24]">&lt;mid-kid&gt;</a></span><span class="message">There's also some sneaky ebuilds like dev-java/openjfx which downloads &quot;gradle-&lt;version&gt;-bin.zip&quot; to build the thing</span></div><div class="line" id="201004"><span class="nick" style="color:#2e2a4a"><a href="#201004" label="[20:10:04]">&lt;mid-kid&gt;</a></span><span class="message">You can't rely on gentoo ebuilds to not pull random prebuilts, basically</span></div><div class="line" id="201115"><span class="nick" style="color:#2e2a4a"><a href="#201115" label="[20:11:15]">&lt;mid-kid&gt;</a></span><span class="message">Now, I'm fairly certain that everything I described in my guide builds 100% without executable binaries (disregarding generated files like autoconf scripts).</span></div><div class="line" id="201140"><span class="nick" style="color:#2e2a4a"><a href="#201140" label="[20:11:40]">&lt;mid-kid&gt;</a></span><span class="message">And a stage3 on a default profile is clean too</span></div><div class="line" id="201205"><span class="nick" style="color:#2e2a4a"><a href="#201205" label="[20:12:05]">&lt;mid-kid&gt;</a></span><span class="message">I just can't guarantee anything else</span></div><div class="line" id="201245"><span class="nick" style="color:#2e2a4a"><a href="#201245" label="[20:12:45]">&lt;mid-kid&gt;</a></span><span class="message">Gentoo doesn't have very strict packaging policies like debian does</span></div><div class="line" id="201327"><span class="nick" style="color:#2e2a4a"><a href="#201327" label="[20:13:27]">&lt;mid-kid&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/mid-kid/gentoo-config/blob/master/profile/package.mask#L1">https://github.com/mid-kid/gentoo-config/blob/master/profile/package.mask#L1</a> </span></div><div class="line" id="201337"><span class="nick" style="color:#2e2a4a"><a href="#201337" label="[20:13:37]">&lt;mid-kid&gt;</a></span><span class="message">This is my non-exhaustive list of &quot;bad&quot; gentoo packages</span></div><div class="line" id="201906"><span class="nick" style="color:#6d2462"><a href="#201906" label="[20:19:06]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; You can use wildcards for -bin stuff...</span></div><div class="line" id="202212"><span class="nick" style="color:#2e2a4a"><a href="#202212" label="[20:22:12]">&lt;mid-kid&gt;</a></span><span class="message">true but I heard wildcards are slow and my portage config is already slow as is :)</span></div><div class="line" id="202335"><span class="nick" style="color:#2e2a4a"><a href="#202335" label="[20:23:35]">&lt;mid-kid&gt;</a></span><span class="message">I wish there was an official policy to name all binary packages -bin, even if there's no way it'll get a non-bin version</span></div><div class="line" id="202346"><span class="nick" style="color:#2e2a4a"><a href="#202346" label="[20:23:46]">&lt;mid-kid&gt;</a></span><span class="message">At some point vscodium got renamed from vscodium-bin to vscodium</span></div><div class="line" id="202356"><span class="nick" style="color:#2e2a4a"><a href="#202356" label="[20:23:56]">&lt;mid-kid&gt;</a></span><span class="message">and it still downloads bins</span></div><div class="line" id="202406"><span class="nick" style="color:#6d2462"><a href="#202406" label="[20:24:06]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah,that's not good...</span></div><div class="line" id="202417"><span class="nick" style="color:#6d2462"><a href="#202417" label="[20:24:17]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; There is a source build in overlay though</span></div><div class="line" id="202428"><span class="nick" style="color:#6d2462"><a href="#202428" label="[20:24:28]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; And for electron too</span></div><div class="line" id="202431"><span class="nick" style="color:#2e2a4a"><a href="#202431" label="[20:24:31]">&lt;mid-kid&gt;</a></span><span class="message">yeah, pf4public has great builds for electron apps</span></div><div class="line" id="202451"><span class="nick" style="color:#2e2a4a"><a href="#202451" label="[20:24:51]">&lt;mid-kid&gt;</a></span><span class="message">they're just a shining example of why electron packaging is impossible</span></div><div class="line" id="202500"><span class="nick" style="color:#2e2a4a"><a href="#202500" label="[20:25:00]">&lt;mid-kid&gt;</a></span><span class="message">or anything nodejs in general</span></div><div class="line" id="202519"><span class="nick" style="color:#6d2462"><a href="#202519" label="[20:25:19]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Also gentoo ships non free chromium</span></div><div class="line" id="202530"><span class="nick" style="color:#2e2a4a"><a href="#202530" label="[20:25:30]">&lt;mid-kid&gt;</a></span><span class="message">nonfree in what way?</span></div><div class="line" id="202540"><span class="nick" style="color:#6d2462"><a href="#202540" label="[20:25:40]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; As in non free license</span></div><div class="line" id="202608"><span class="nick" style="color:#2e2a4a"><a href="#202608" label="[20:26:08]">&lt;mid-kid&gt;</a></span><span class="message">the LICENSE field on www-client/chromium doesn't seem to reflect that</span></div><div class="line" id="202625"><span class="nick" style="color:#2e2a4a"><a href="#202625" label="[20:26:25]">&lt;mid-kid&gt;</a></span><span class="message">I do know that you need USE=eme-free on mozilla-based programs to avoid downloading openh264 binaries</span></div><div class="line" id="202637"><span class="nick" style="color:#2e2a4a"><a href="#202637" label="[20:26:37]">&lt;mid-kid&gt;</a></span><span class="message">(downloading them at runtime for DRM content, I mean)</span></div><div class="line" id="202653"><span class="nick" style="color:#6d2462"><a href="#202653" label="[20:26:53]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, it doesn't there is a bug but everybody is scared to touch it...</span></div><div class="line" id="202714"><span class="nick" style="color:#6d2462"><a href="#202714" label="[20:27:14]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Cause it will exclude chromium from default accept license choice</span></div><div class="line" id="202734"><span class="nick" style="color:#6d2462"><a href="#202734" label="[20:27:34]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; <a rel="nofollow" href="https://github.com/chromium/chromium/blob/main/third_party/unrar/LICENSE">https://github.com/chromium/chromium/blob/main/third_party/unrar/LICENSE</a> </span></div><div class="line" id="202737"><span class="nick" style="color:#2e2a4a"><a href="#202737" label="[20:27:37]">&lt;mid-kid&gt;</a></span><span class="message">eh, let it</span></div><div class="line" id="202742"><span class="nick" style="color:#2e2a4a"><a href="#202742" label="[20:27:42]">&lt;mid-kid&gt;</a></span><span class="message">oh, unrar</span></div><div class="line" id="202747"><span class="nick" style="color:#2e2a4a"><a href="#202747" label="[20:27:47]">&lt;mid-kid&gt;</a></span><span class="message">who/care</span></div><div class="line" id="202802"><span class="nick" style="color:#6d2462"><a href="#202802" label="[20:28:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; The one from pf4public is not affected...</span></div><div class="line" id="202913"><span class="nick" style="color:#2e2a4a"><a href="#202913" label="[20:29:13]">&lt;mid-kid&gt;</a></span><span class="message">the unrar license is just silly</span></div><div class="line" id="202930"><span class="nick" style="color:#2e2a4a"><a href="#202930" label="[20:29:30]">&lt;mid-kid&gt;</a></span><span class="message">It's not malicious or harmful so it doesn't worry me too much</span></div><div class="line" id="203003"><span class="nick" style="color:#2e2a4a"><a href="#203003" label="[20:30:03]">&lt;mid-kid&gt;</a></span><span class="message">though I understand it's not good for real software freedom</span></div><div class="line" id="203039"><span class="nick" style="color:#2e2a4a"><a href="#203039" label="[20:30:39]">&lt;mid-kid&gt;</a></span><span class="message">anyway, I wish most ::pf4public things would just go upstream</span></div><div class="line" id="203103"><span class="nick" style="color:#6d2462"><a href="#203103" label="[20:31:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; There are free unrar implementations though...</span></div><div class="line" id="203127"><span class="nick" style="color:#2e2a4a"><a href="#203127" label="[20:31:27]">&lt;mid-kid&gt;</a></span><span class="message">there are?</span></div><div class="line" id="203145"><span class="nick" style="color:#2e2a4a"><a href="#203145" label="[20:31:45]">&lt;mid-kid&gt;</a></span><span class="message">the only two I know are unrar itself and 7z, which just bundles unrar</span></div><div class="line" id="203158"><span class="nick" style="color:#2e2a4a"><a href="#203158" label="[20:31:58]">&lt;mid-kid&gt;</a></span><span class="message">does libarchive do rar?</span></div><div class="line" id="203201"><span class="nick" style="color:#6d2462"><a href="#203201" label="[20:32:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; unar can unpack it</span></div><div class="line" id="203228"><span class="nick" style="color:#6d2462"><a href="#203228" label="[20:32:28]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; <a rel="nofollow" href="https://theunarchiver.com/command-line">https://theunarchiver.com/command-line</a> </span></div><div class="line" id="203511"><span class="nick" style="color:#6d2462"><a href="#203511" label="[20:35:11]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Oh libarchive too</span></div><div class="line" id="203658"><span class="nick" style="color:#2e2a4a"><a href="#203658" label="[20:36:58]">&lt;mid-kid&gt;</a></span><span class="message">&gt;RAR and RAR 5.0 archives (with some limitations due to RAR's proprietary status)</span></div><div class="line" id="203715"><span class="nick" style="color:#2e2a4a"><a href="#203715" label="[20:37:15]">&lt;mid-kid&gt;</a></span><span class="message">idk</span></div><div class="line" id="203721"><span class="nick" style="color:#2e2a4a"><a href="#203721" label="[20:37:21]">&lt;mid-kid&gt;</a></span><span class="message">rar is weird I prefer just not using it</span></div><div class="line" id="203727"><span class="nick" style="color:#2e2a4a"><a href="#203727" label="[20:37:27]">&lt;mid-kid&gt;</a></span><span class="message">haven't seen a rar file I cared about in ages</span></div><div class="line" id="204004"><span class="nick" style="color:#6d2462"><a href="#204004" label="[20:40:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, it is weird...</span></div><div class="line" id="215516"><span class="nick" style="color:#bc80bd"><a href="#215516" label="[21:55:16]">&lt;GoogulatorMobile&gt;</a></span><span class="message">stikonas: what are the RAM &amp; disk requirements for your Rust bootstrap overlay?</span></div><div class="line" id="215555"><span class="nick" style="color:#80b1d3"><a href="#215555" label="[21:55:55]">&lt;stikonas&gt;</a></span><span class="message">hmm, quite a lot</span></div><div class="line" id="215601"><span class="nick" style="color:#bc80bd"><a href="#215601" label="[21:56:01]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Unfortunately it's gonna be necessary if I want to build anything desktop</span></div><div class="line" id="215603"><span class="nick" style="color:#80b1d3"><a href="#215603" label="[21:56:03]">&lt;stikonas&gt;</a></span><span class="message">for RAM you need maybe 10 GiB</span></div><div class="line" id="215620"><span class="nick" style="color:#bc80bd"><a href="#215620" label="[21:56:20]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Ouch</span></div><div class="line" id="215633"><span class="nick" style="color:#80b1d3"><a href="#215633" label="[21:56:33]">&lt;stikonas&gt;</a></span><span class="message">but I think you can use swap on nvme</span></div><div class="line" id="215640"><span class="nick" style="color:#bc80bd"><a href="#215640" label="[21:56:40]">&lt;GoogulatorMobile&gt;</a></span><span class="message">8GiB is the max I can hope for</span></div><div class="line" id="215640"><span class="nick" style="color:#80b1d3"><a href="#215640" label="[21:56:40]">&lt;stikonas&gt;</a></span><span class="message">for disk it's also a lot</span></div><div class="line" id="215645"><span class="nick" style="color:#80b1d3"><a href="#215645" label="[21:56:45]">&lt;stikonas&gt;</a></span><span class="message">don't remember exactly</span></div><div class="line" id="215650"><span class="nick" style="color:#80b1d3"><a href="#215650" label="[21:56:50]">&lt;stikonas&gt;</a></span><span class="message">but easily 10 GiB</span></div><div class="line" id="215653"><span class="nick" style="color:#80b1d3"><a href="#215653" label="[21:56:53]">&lt;stikonas&gt;</a></span><span class="message">probably more</span></div><div class="line" id="215720"><span class="nick" style="color:#80b1d3"><a href="#215720" label="[21:57:20]">&lt;stikonas&gt;</a></span><span class="message">GoogulatorMobile: it's mainly the first step tat needs a lot of RAM</span></div><div class="line" id="215729"><span class="nick" style="color:#80b1d3"><a href="#215729" label="[21:57:29]">&lt;stikonas&gt;</a></span><span class="message">mrustc generates very large C files</span></div><div class="line" id="215736"><span class="nick" style="color:#80b1d3"><a href="#215736" label="[21:57:36]">&lt;stikonas&gt;</a></span><span class="message">and then those are fed to GCC</span></div><div class="line" id="215746"><span class="nick" style="color:#80b1d3"><a href="#215746" label="[21:57:46]">&lt;stikonas&gt;</a></span><span class="message">so then GCC uses a LOT of RAM</span></div><div class="line" id="215758"><span class="nick" style="color:#bc80bd"><a href="#215758" label="[21:57:58]">&lt;GoogulatorMobile&gt;</a></span><span class="message">My bootstrap system is a Socket 775 with DDR2, which is very close to the end of the 15-25 year window for trustable hardware</span></div><div class="line" id="215801"><span class="nick" style="color:#80b1d3"><a href="#215801" label="[21:58:01]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe you could do with a bit less than 10</span></div><div class="line" id="215814"><span class="nick" style="color:#80b1d3"><a href="#215814" label="[21:58:14]">&lt;stikonas&gt;</a></span><span class="message">but definitely need to use single thread</span></div><div class="line" id="215823"><span class="nick" style="color:#80b1d3"><a href="#215823" label="[21:58:23]">&lt;stikonas&gt;</a></span><span class="message">and it's basically impossible on 32-bit arch</span></div><div class="line" id="215824"><span class="nick" style="color:#bc80bd"><a href="#215824" label="[21:58:24]">&lt;GoogulatorMobile&gt;</a></span><span class="message">AFAIK no 4G DDR2 UDIMMs exist</span></div><div class="line" id="215830"><span class="nick" style="color:#80b1d3"><a href="#215830" label="[21:58:30]">&lt;stikonas&gt;</a></span><span class="message">swap then</span></div><div class="line" id="215838"><span class="nick" style="color:#bc80bd"><a href="#215838" label="[21:58:38]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I already do pivot to a 64-bit kernel</span></div><div class="line" id="215857"><span class="nick" style="color:#80b1d3"><a href="#215857" label="[21:58:57]">&lt;stikonas&gt;</a></span><span class="message">it's doable on nvme...</span></div><div class="line" id="215902"><span class="nick" style="color:#80b1d3"><a href="#215902" label="[21:59:02]">&lt;stikonas&gt;</a></span><span class="message">though of course still slow</span></div><div class="line" id="215909"><span class="nick" style="color:#bc80bd"><a href="#215909" label="[21:59:09]">&lt;GoogulatorMobile&gt;</a></span><span class="message">&amp; of course, no hope for NVMe... except maybe as a separate data-only drive</span></div><div class="line" id="215929"><span class="nick" style="color:#80b1d3"><a href="#215929" label="[21:59:29]">&lt;stikonas&gt;</a></span><span class="message">yeah, rustc is painful to bootstrap</span></div><div class="line" id="215933"><span class="nick" style="color:#80b1d3"><a href="#215933" label="[21:59:33]">&lt;stikonas&gt;</a></span><span class="message">java is easier</span></div><div class="line" id="215945"><span class="nick" style="color:#80b1d3"><a href="#215945" label="[21:59:45]">&lt;stikonas&gt;</a></span><span class="message">though I think java might be still a bit broken</span></div><div class="line" id="220000"><span class="nick" style="color:#80b1d3"><a href="#220000" label="[22:00:00]">&lt;stikonas&gt;</a></span><span class="message">due to hg.openjdk.org being down (I need to switch to github tags)</span></div><div class="line" id="220015"><span class="nick" style="color:#80b1d3"><a href="#220015" label="[22:00:15]">&lt;stikonas&gt;</a></span><span class="message">GoogulatorMobile: also almost surely you need GCC 12 or older</span></div><div class="line" id="220025"><span class="nick" style="color:#80b1d3"><a href="#220025" label="[22:00:25]">&lt;stikonas&gt;</a></span><span class="message">12 was the last time I tested</span></div><div class="line" id="220043"><span class="nick" style="color:#80b1d3"><a href="#220043" label="[22:00:43]">&lt;stikonas&gt;</a></span><span class="message">llvm version used in rust 1.54 probably needs patching for GCC13</span></div><div class="line" id="220119"><span class="nick" style="color:#bc80bd"><a href="#220119" label="[22:01:19]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I wonder, how far are we from mrustc 1.74?</span></div><div class="line" id="220244"><span class="nick" style="color:#80b1d3"><a href="#220244" label="[22:02:44]">&lt;stikonas&gt;</a></span><span class="message">probably months</span></div><div class="line" id="220258"><span class="nick" style="color:#80b1d3"><a href="#220258" label="[22:02:58]">&lt;stikonas&gt;</a></span><span class="message">Mutabah just started working on it</span></div><div class="line" id="220320"><span class="nick" style="color:#80b1d3"><a href="#220320" label="[22:03:20]">&lt;stikonas&gt;</a></span><span class="message">that will cut down the chain length a lot</span></div><div class="line" id="220329"><span class="nick" style="color:#80b1d3"><a href="#220329" label="[22:03:29]">&lt;stikonas&gt;</a></span><span class="message">but won't do anything to RAM or disk requirements</span></div><div class="line" id="220335"><span class="nick" style="color:#80b1d3"><a href="#220335" label="[22:03:35]">&lt;stikonas&gt;</a></span><span class="message">if anything, it could be even worse</span></div><div class="line" id="220341"><span class="nick" style="color:#80b1d3"><a href="#220341" label="[22:03:41]">&lt;stikonas&gt;</a></span><span class="message">(though hopefully not)</span></div><br /></div></body></html>