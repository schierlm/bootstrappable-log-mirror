<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-04-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003559"><span class="nick" style="color:#389600"><a href="#003559" label="[00:35:59]">&lt;fossy&gt;</a></span><span class="message">Googulator: I'm fairly happy with the openela diff. The changes are not tooo big</span></div><div class="line" id="003631"><span class="nick" style="color:#389600"><a href="#003631" label="[00:36:31]">&lt;fossy&gt;</a></span><span class="message">Googulator: also, OpenSSL 3 i have no qualms against in theory, i'll review the PR shortly</span></div><div class="line" id="003825"><span class="nick" style="color:#8dd3c7"><a href="#003825" label="[00:38:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think I can also remove this patch <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/musl-1.1.24/patches/stdio_flush_on_exit.patch">https://github.com/fosslinux/live-bootstrap/blob/master/steps/musl-1.1.24/patches/stdio_flush_on_exit.patch</a> </span></div><div class="line" id="003826"><span class="nick" style="color:#389600"><a href="#003826" label="[00:38:26]">&lt;fossy&gt;</a></span><span class="message">hm, swear i ran into something trying to do OpenSSL 3 earlier, although very high chance that has been resolve acidentially in the meantime</span></div><div class="line" id="003836"><span class="nick" style="color:#8dd3c7"><a href="#003836" label="[00:38:36]">&lt;stikonas&gt;</a></span><span class="message">this is probably leftover from that weak symbols hack</span></div><div class="line" id="003843"><span class="nick" style="color:#8dd3c7"><a href="#003843" label="[00:38:43]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, you removed that package</span></div><div class="line" id="003848"><span class="nick" style="color:#8dd3c7"><a href="#003848" label="[00:38:48]">&lt;stikonas&gt;</a></span><span class="message">it was xbps</span></div><div class="line" id="003851"><span class="nick" style="color:#389600"><a href="#003851" label="[00:38:51]">&lt;fossy&gt;</a></span><span class="message">ah</span></div><div class="line" id="003854"><span class="nick" style="color:#389600"><a href="#003854" label="[00:38:54]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="003906"><span class="nick" style="color:#2e2a4a"><a href="#003906" label="[00:39:06]">&lt;Googulator&gt;</a></span><span class="message">xbps was incompatible with newer openssl?</span></div><div class="line" id="003925"><span class="nick" style="color:#8dd3c7"><a href="#003925" label="[00:39:25]">&lt;stikonas&gt;</a></span><span class="message">at least at that time it was</span></div><div class="line" id="003946"><span class="nick" style="color:#389600"><a href="#003946" label="[00:39:46]">&lt;fossy&gt;</a></span><span class="message">stikonas: that looks removable to me, if you could check or chuck it in a PR so it can be tested that would be good</span></div><div class="line" id="004002"><span class="nick" style="color:#8dd3c7"><a href="#004002" label="[00:40:02]">&lt;stikonas&gt;</a></span><span class="message">yeah, I just kicked off a run, it's happily continuing</span></div><div class="line" id="004006"><span class="nick" style="color:#8dd3c7"><a href="#004006" label="[00:40:06]">&lt;stikonas&gt;</a></span><span class="message">just need to wait for checksums</span></div><div class="line" id="004010"><span class="nick" style="color:#389600"><a href="#004010" label="[00:40:10]">&lt;fossy&gt;</a></span><span class="message">:D</span></div><div class="line" id="004133"><span class="nick" style="color:#389600"><a href="#004133" label="[00:41:33]">&lt;fossy&gt;</a></span><span class="message">stikonas, Googulator: #454 good to merge?</span></div><div class="line" id="004508"><span class="nick" style="color:#2e2a4a"><a href="#004508" label="[00:45:08]">&lt;Googulator&gt;</a></span><span class="message">I'm still doing final tests on it; the download-distfiles.sh and generator.py paths are good, still waiting for it to reach the helpers.sh path</span></div><div class="line" id="004538"><span class="nick" style="color:#389600"><a href="#004538" label="[00:45:38]">&lt;fossy&gt;</a></span><span class="message">wth, I'm reading that autoconf ML thread, there are some bad takes in there</span></div><div class="line" id="004647"><span class="nick" style="color:#2e2a4a"><a href="#004647" label="[00:46:47]">&lt;Googulator&gt;</a></span><span class="message">one of the worst is where someone suggested maintainers should just edit config.guess instead of doing autoreconf...</span></div><div class="line" id="004656"><span class="nick" style="color:#2e2a4a"><a href="#004656" label="[00:46:56]">&lt;Googulator&gt;</a></span><span class="message">config.guess is AFAIK a generated file</span></div><div class="line" id="004746"><span class="nick" style="color:#389600"><a href="#004746" label="[00:47:46]">&lt;fossy&gt;</a></span><span class="message">&quot;GNU/Linux distributions have a long history of buggy backports to the autotools&quot;</span></div><div class="line" id="004753"><span class="nick" style="color:#389600"><a href="#004753" label="[00:47:53]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="004802"><span class="nick" style="color:#389600"><a href="#004802" label="[00:48:02]">&lt;fossy&gt;</a></span><span class="message">perhaps because autotools has so much black magic</span></div><div class="line" id="004816"><span class="nick" style="color:#389600"><a href="#004816" label="[00:48:16]">&lt;fossy&gt;</a></span><span class="message">and is very difficult to patch witout introducing bugs -.-</span></div><div class="line" id="004953"><span class="nick" style="color:#2e2a4a"><a href="#004953" label="[00:49:53]">&lt;Googulator&gt;</a></span><span class="message">and the fact that they suggested editing config.guess makes me wonder if any official GNU release tarballs have autotools outputs that were hand-edited by the maintainer, maliciously or not</span></div><div class="line" id="005050"><span class="nick" style="color:#8dd3c7"><a href="#005050" label="[00:50:50]">&lt;stikonas&gt;</a></span><span class="message">yeah, #454 should be good</span></div><div class="line" id="005053"><span class="nick" style="color:#389600"><a href="#005053" label="[00:50:53]">&lt;fossy&gt;</a></span><span class="message">the answer to that i'd say is probably &quot;yes&quot;, certainly for some pregenerated files, if not autotools</span></div><div class="line" id="005157"><span class="nick" style="color:#8dd3c7"><a href="#005157" label="[00:51:57]">&lt;stikonas&gt;</a></span><span class="message">one good thing out of xz thingy might be some projects moving away from autotools</span></div><div class="line" id="005213"><span class="nick" style="color:#389600"><a href="#005213" label="[00:52:13]">&lt;fossy&gt;</a></span><span class="message">yes please</span></div><div class="line" id="005238"><span class="nick" style="color:#8dd3c7"><a href="#005238" label="[00:52:38]">&lt;stikonas&gt;</a></span><span class="message">well, but it souldn't happens for GNU projects...</span></div><div class="line" id="005245"><span class="nick" style="color:#8dd3c7"><a href="#005245" label="[00:52:45]">&lt;stikonas&gt;</a></span><span class="message">which is what we mostly work with in live-bootstrap</span></div><div class="line" id="005251"><span class="nick" style="color:#389600"><a href="#005251" label="[00:52:51]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-autoconf/2024-04/msg00036.html">https://lists.gnu.org/archive/html/bug-autoconf/2024-04/msg00036.html</a> </span></div><div class="line" id="005254"><span class="nick" style="color:#389600"><a href="#005254" label="[00:52:54]">&lt;fossy&gt;</a></span><span class="message">lol, what</span></div><div class="line" id="005307"><span class="nick" style="color:#389600"><a href="#005307" label="[00:53:07]">&lt;fossy&gt;</a></span><span class="message">this is legally correct, but completely tone-deaf</span></div><div class="line" id="005348"><span class="nick" style="color:#8dd3c7"><a href="#005348" label="[00:53:48]">&lt;stikonas&gt;</a></span><span class="message">yeah, strictly speaking you only need to provide source on written request</span></div><div class="line" id="005350"><span class="nick" style="color:#8dd3c7"><a href="#005350" label="[00:53:50]">&lt;stikonas&gt;</a></span><span class="message">or something like that</span></div><div class="line" id="005436"><span class="nick" style="color:#8dd3c7"><a href="#005436" label="[00:54:36]">&lt;stikonas&gt;</a></span><span class="message">but yes, that reply just sounds a bit obstructionist...</span></div><div class="line" id="005557"><span class="nick" style="color:#389600"><a href="#005557" label="[00:55:57]">&lt;fossy&gt;</a></span><span class="message">then earlier, this same person said this; <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-autoconf/2024-04/msg00026.html">https://lists.gnu.org/archive/html/bug-autoconf/2024-04/msg00026.html</a> </span></div><div class="line" id="005605"><span class="nick" style="color:#389600"><a href="#005605" label="[00:56:05]">&lt;fossy&gt;</a></span><span class="message">that &quot;I have chosen to give tarballs to my users&quot;</span></div><div class="line" id="005816"><span class="nick" style="color:#2e2a4a"><a href="#005816" label="[00:58:16]">&lt;Googulator&gt;</a></span><span class="message">&quot;(or, well, GNU has chosen for me, even before I was present)&quot;</span></div><div class="line" id="005837"><span class="nick" style="color:#8dd3c7"><a href="#005837" label="[00:58:37]">&lt;stikonas&gt;</a></span><span class="message">well, back then it might have made more sense</span></div><div class="line" id="005852"><span class="nick" style="color:#2e2a4a"><a href="#005852" label="[00:58:52]">&lt;Googulator&gt;</a></span><span class="message">or, you know, even before Git was invented, and _long before_ any GNU project adopted serious source control</span></div><div class="line" id="005854"><span class="nick" style="color:#8dd3c7"><a href="#005854" label="[00:58:54]">&lt;stikonas&gt;</a></span><span class="message">but it doesn't mean that all is set in stone</span></div><div class="line" id="005940"><span class="nick" style="color:#2e2a4a"><a href="#005940" label="[00:59:40]">&lt;Googulator&gt;</a></span><span class="message">tarballs are the only thing you can release if the sole authoritative copy of the upstream source resides in a directory on the maintainer's hard drive (hopefully they have backups at least...)</span></div><div class="line" id="005951"><span class="nick" style="color:#8dd3c7"><a href="#005951" label="[00:59:51]">&lt;stikonas&gt;</a></span><span class="message">fossy, Googulator: should we also try to fix those non-redistributable files (heirloom-tools) before 1.0?</span></div><div class="line" id="010020"><span class="nick" style="color:#2e2a4a"><a href="#010020" label="[01:00:20]">&lt;Googulator&gt;</a></span><span class="message">IMO if we can do it with plan9 sources, then yes</span></div><div class="line" id="010021"><span class="nick" style="color:#389600"><a href="#010021" label="[01:00:21]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, probably, did we have an idea for how to fix that?</span></div><div class="line" id="010026"><span class="nick" style="color:#389600"><a href="#010026" label="[01:00:26]">&lt;fossy&gt;</a></span><span class="message">ah plan9</span></div><div class="line" id="010032"><span class="nick" style="color:#8dd3c7"><a href="#010032" label="[01:00:32]">&lt;stikonas&gt;</a></span><span class="message">well, we somehow need to get gash to work then...</span></div><div class="line" id="010037"><span class="nick" style="color:#2e2a4a"><a href="#010037" label="[01:00:37]">&lt;Googulator&gt;</a></span><span class="message">but I wouldn't add more Lisp/Scheme dependency for it</span></div><div class="line" id="010049"><span class="nick" style="color:#389600"><a href="#010049" label="[01:00:49]">&lt;fossy&gt;</a></span><span class="message">probably not worth it in that case if we need gash</span></div><div class="line" id="010051"><span class="nick" style="color:#8dd3c7"><a href="#010051" label="[01:00:51]">&lt;stikonas&gt;</a></span><span class="message">but it's probably not very well documented how to run it (without ./configure and all that generated stuff)</span></div><div class="line" id="010100"><span class="nick" style="color:#8dd3c7"><a href="#010100" label="[01:01:00]">&lt;stikonas&gt;</a></span><span class="message">yeah, ok, we could postpone it then</span></div><div class="line" id="010159"><span class="nick" style="color:#8dd3c7"><a href="#010159" label="[01:01:59]">&lt;stikonas&gt;</a></span><span class="message">plan9 also has some lexer?</span></div><div class="line" id="010229"><span class="nick" style="color:#2e2a4a"><a href="#010229" label="[01:02:29]">&lt;Googulator&gt;</a></span><span class="message">plan9 has MIT-licensed versions of lex and yacc</span></div><div class="line" id="010323"><span class="nick" style="color:#8dd3c7"><a href="#010323" label="[01:03:23]">&lt;stikonas&gt;</a></span><span class="message">well, in fact we only need to rebuild 1 file</span></div><div class="line" id="010328"><span class="nick" style="color:#8dd3c7"><a href="#010328" label="[01:03:28]">&lt;stikonas&gt;</a></span><span class="message">the one for bash</span></div><div class="line" id="010340"><span class="nick" style="color:#8dd3c7"><a href="#010340" label="[01:03:40]">&lt;stikonas&gt;</a></span><span class="message">that would allow us to reach musl</span></div><div class="line" id="010401"><span class="nick" style="color:#8dd3c7"><a href="#010401" label="[01:04:01]">&lt;stikonas&gt;</a></span><span class="message">and then we could use whatever works for flex/bison bootstrap (could even keep heirloom-tools)</span></div><div class="line" id="010410"><span class="nick" style="color:#8dd3c7"><a href="#010410" label="[01:04:10]">&lt;stikonas&gt;</a></span><span class="message">(or test plan9 tools)</span></div><div class="line" id="010511"><span class="nick" style="color:#2e2a4a"><a href="#010511" label="[01:05:11]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/plan9foundation/plan9/blob/main/sys/src/cmd/yacc.c">https://github.com/plan9foundation/plan9/blob/main/sys/src/cmd/yacc.c</a>  and <a rel="nofollow" href="https://github.com/plan9foundation/plan9/tree/main/sys/src/cmd/lex">https://github.com/plan9foundation/plan9/tree/main/sys/src/cmd/lex</a> </span></div><div class="line" id="010525"><span class="nick" style="color:#2e2a4a"><a href="#010525" label="[01:05:25]">&lt;Googulator&gt;</a></span><span class="message">we would probably need to fork these and port to meslibc</span></div><div class="line" id="010616"><span class="nick" style="color:#2e2a4a"><a href="#010616" label="[01:06:16]">&lt;Googulator&gt;</a></span><span class="message">oddly enough, lex includes a .y file</span></div><div class="line" id="010633"><span class="nick" style="color:#2e2a4a"><a href="#010633" label="[01:06:33]">&lt;Googulator&gt;</a></span><span class="message">luckily no .l</span></div><div class="line" id="010647"><span class="nick" style="color:#2e2a4a"><a href="#010647" label="[01:06:47]">&lt;Googulator&gt;</a></span><span class="message">and no .l or .y in yacc's source</span></div><div class="line" id="010647"><span class="nick" style="color:#8dd3c7"><a href="#010647" label="[01:06:47]">&lt;stikonas&gt;</a></span><span class="message">well, lex is not necessary for bash</span></div><div class="line" id="010703"><span class="nick" style="color:#8dd3c7"><a href="#010703" label="[01:07:03]">&lt;stikonas&gt;</a></span><span class="message">but yeah, it has header dependencies...</span></div><div class="line" id="010751"><span class="nick" style="color:#2e2a4a"><a href="#010751" label="[01:07:51]">&lt;Googulator&gt;</a></span><span class="message">helper.sh part of #454 is fine too</span></div><div class="line" id="011222"><span class="nick" style="color:#8dd3c7"><a href="#011222" label="[01:12:22]">&lt;stikonas&gt;</a></span><span class="message">there is also this <a rel="nofollow" href="https://invisible-island.net/byacc/">https://invisible-island.net/byacc/</a> </span></div><div class="line" id="011327"><span class="nick" style="color:#2e2a4a"><a href="#011327" label="[01:13:27]">&lt;Googulator&gt;</a></span><span class="message">but no blex</span></div><div class="line" id="011352"><span class="nick" style="color:#8dd3c7"><a href="#011352" label="[01:13:52]">&lt;stikonas&gt;</a></span><span class="message">yeah, but it would solve license issue</span></div><div class="line" id="011427"><span class="nick" style="color:#8dd3c7"><a href="#011427" label="[01:14:27]">&lt;stikonas&gt;</a></span><span class="message">byacc -&gt; bash -&gt; musl -&gt; heirloom-tools -&gt; flex -&gt; ... -&gt; bison</span></div><div class="line" id="011439"><span class="nick" style="color:#8dd3c7"><a href="#011439" label="[01:14:39]">&lt;stikonas&gt;</a></span><span class="message">though that's an extra tarball</span></div><div class="line" id="011448"><span class="nick" style="color:#8dd3c7"><a href="#011448" label="[01:14:48]">&lt;stikonas&gt;</a></span><span class="message">another 885 KiB</span></div><div class="line" id="011511"><span class="nick" style="color:#8dd3c7"><a href="#011511" label="[01:15:11]">&lt;stikonas&gt;</a></span><span class="message">it does seem buildable by tcc/mes at first glance</span></div><div class="line" id="011517"><span class="nick" style="color:#8dd3c7"><a href="#011517" label="[01:15:17]">&lt;stikonas&gt;</a></span><span class="message">though one would have to write custom makefile</span></div><div class="line" id="011520"><span class="nick" style="color:#8dd3c7"><a href="#011520" label="[01:15:20]">&lt;stikonas&gt;</a></span><span class="message">as this is autotooled</span></div><div class="line" id="011617"><span class="nick" style="color:#8dd3c7"><a href="#011617" label="[01:16:17]">&lt;stikonas&gt;</a></span><span class="message">perhaps I'll investigate this at some point later</span></div><div class="line" id="011620"><span class="nick" style="color:#2e2a4a"><a href="#011620" label="[01:16:20]">&lt;Googulator&gt;</a></span><span class="message">there's a Makefile.old</span></div><div class="line" id="011631"><span class="nick" style="color:#2e2a4a"><a href="#011631" label="[01:16:31]">&lt;Googulator&gt;</a></span><span class="message">which seems to be a proper ready-made makefile</span></div><div class="line" id="011655"><span class="nick" style="color:#8dd3c7"><a href="#011655" label="[01:16:55]">&lt;stikonas&gt;</a></span><span class="message">oh indeed</span></div><div class="line" id="011709"><span class="nick" style="color:#8dd3c7"><a href="#011709" label="[01:17:09]">&lt;stikonas&gt;</a></span><span class="message">make: *** No rule to make target 'skeleton.c', needed by 'skeleton.o'.</span></div><div class="line" id="011715"><span class="nick" style="color:#8dd3c7"><a href="#011715" label="[01:17:15]">&lt;stikonas&gt;</a></span><span class="message">maybe needs some light patching</span></div><div class="line" id="011747"><span class="nick" style="color:#8dd3c7"><a href="#011747" label="[01:17:47]">&lt;stikonas&gt;</a></span><span class="message">but anyway, it would be easier than writing completely from scratch</span></div><div class="line" id="011821"><span class="nick" style="color:#2e2a4a"><a href="#011821" label="[01:18:21]">&lt;Googulator&gt;</a></span><span class="message">I wonder why we build flex at the point where we do</span></div><div class="line" id="011823"><span class="nick" style="color:#2e2a4a"><a href="#011823" label="[01:18:23]">&lt;Googulator&gt;</a></span><span class="message">before musl</span></div><div class="line" id="011828"><span class="nick" style="color:#2e2a4a"><a href="#011828" label="[01:18:28]">&lt;Googulator&gt;</a></span><span class="message">does musl need flex?</span></div><div class="line" id="011913"><span class="nick" style="color:#8dd3c7"><a href="#011913" label="[01:19:13]">&lt;stikonas&gt;</a></span><span class="message">no, but it's a bit for convenience</span></div><div class="line" id="011929"><span class="nick" style="color:#8dd3c7"><a href="#011929" label="[01:19:29]">&lt;stikonas&gt;</a></span><span class="message">flex needs the &quot;same libc&quot; build of heirloom tools</span></div><div class="line" id="011937"><span class="nick" style="color:#8dd3c7"><a href="#011937" label="[01:19:37]">&lt;stikonas&gt;</a></span><span class="message">we could move flex after musl</span></div><div class="line" id="011953"><span class="nick" style="color:#8dd3c7"><a href="#011953" label="[01:19:53]">&lt;stikonas&gt;</a></span><span class="message">but then we need to do musl -&gt; rebuild heirloom-tools -&gt; flex</span></div><div class="line" id="012039"><span class="nick" style="color:#8dd3c7"><a href="#012039" label="[01:20:39]">&lt;stikonas&gt;</a></span><span class="message">with this in mind flex could be moved</span></div><div class="line" id="012052"><span class="nick" style="color:#8dd3c7"><a href="#012052" label="[01:20:52]">&lt;stikonas&gt;</a></span><span class="message">the only blocker is bash</span></div><div class="line" id="012719"><span class="nick" style="color:#2e2a4a"><a href="#012719" label="[01:27:19]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/Googulator/9eee5c0ccd10fd819bf937b4f650b52f">https://gist.github.com/Googulator/9eee5c0ccd10fd819bf937b4f650b52f</a> </span></div><div class="line" id="012748"><span class="nick" style="color:#2e2a4a"><a href="#012748" label="[01:27:48]">&lt;Googulator&gt;</a></span><span class="message">builds byacc successfully without autotools *on a modern Linux distribution*</span></div><div class="line" id="012756"><span class="nick" style="color:#2e2a4a"><a href="#012756" label="[01:27:56]">&lt;Googulator&gt;</a></span><span class="message">(not tested in the early bootstrap env)</span></div><div class="line" id="012938"><span class="nick" style="color:#8dd3c7"><a href="#012938" label="[01:29:38]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think this would work</span></div><div class="line" id="013003"><span class="nick" style="color:#8dd3c7"><a href="#013003" label="[01:30:03]">&lt;stikonas&gt;</a></span><span class="message">defs.h has standard headers</span></div><div class="line" id="013012"><span class="nick" style="color:#8dd3c7"><a href="#013012" label="[01:30:12]">&lt;stikonas&gt;</a></span><span class="message">which I think mes provides</span></div><div class="line" id="013042"><span class="nick" style="color:#8dd3c7"><a href="#013042" label="[01:30:42]">&lt;stikonas&gt;</a></span><span class="message">and this yacc seems to cope well with parser.y from bash</span></div><div class="line" id="014512"><span class="nick" style="color:#2e2a4a"><a href="#014512" label="[01:45:12]">&lt;Googulator&gt;</a></span><span class="message">#456 created for byacc and added to roadmap</span></div><div class="line" id="014934"><span class="nick" style="color:#8dd3c7"><a href="#014934" label="[01:49:34]">&lt;stikonas&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="014959"><span class="nick" style="color:#8dd3c7"><a href="#014959" label="[01:49:59]">&lt;stikonas&gt;</a></span><span class="message">issue #456 nicely summarizes all the information that we discussed here</span></div><div class="line" id="020750"><span class="nick" style="color:#389600"><a href="#020750" label="[02:07:50]">&lt;fossy&gt;</a></span><span class="message">thanks for the summary Googulator :)</span></div><div class="line" id="020759"><span class="nick" style="color:#389600"><a href="#020759" label="[02:07:59]">&lt;fossy&gt;</a></span><span class="message">the path forward seems reasonable to me</span></div><div class="line" id="020941"><span class="nick" style="color:#8dd3c7"><a href="#020941" label="[02:09:41]">&lt;stikonas&gt;</a></span><span class="message">indeed...</span></div><div class="line" id="020946"><span class="nick" style="color:#8dd3c7"><a href="#020946" label="[02:09:46]">&lt;stikonas&gt;</a></span><span class="message">strange that we didn't consider it before</span></div><div class="line" id="021434"><span class="nick" style="color:#389600"><a href="#021434" label="[02:14:34]">&lt;fossy&gt;</a></span><span class="message">did we know byacc exists</span></div><div class="line" id="021448"><span class="nick" style="color:#389600"><a href="#021448" label="[02:14:48]">&lt;fossy&gt;</a></span><span class="message">(i have never seen it before today)</span></div><div class="line" id="021459"><span class="nick" style="color:#8dd3c7"><a href="#021459" label="[02:14:59]">&lt;stikonas&gt;</a></span><span class="message">no, I didn't know about it either</span></div><div class="line" id="021506"><span class="nick" style="color:#8dd3c7"><a href="#021506" label="[02:15:06]">&lt;stikonas&gt;</a></span><span class="message">just found it today on Wikipedia</span></div><div class="line" id="021526"><span class="nick" style="color:#8dd3c7"><a href="#021526" label="[02:15:26]">&lt;stikonas&gt;</a></span><span class="message"> (<a rel="nofollow" href="https://en.wikipedia.org/wiki/Yacc">https://en.wikipedia.org/wiki/Yacc</a>) </span></div><div class="line" id="021544"><span class="nick" style="color:#8dd3c7"><a href="#021544" label="[02:15:44]">&lt;stikonas&gt;</a></span><span class="message">this page had a link to <a rel="nofollow" href="https://en.wikipedia.org/wiki/Berkeley_Yacc">https://en.wikipedia.org/wiki/Berkeley_Yacc</a> </span></div><div class="line" id="021704"><span class="nick" style="color:#8dd3c7"><a href="#021704" label="[02:17:04]">&lt;stikonas&gt;</a></span><span class="message">and if this is much better than heirloom yacc, it migth simplify bison's bootstrap</span></div><div class="line" id="021719"><span class="nick" style="color:#8dd3c7"><a href="#021719" label="[02:17:19]">&lt;stikonas&gt;</a></span><span class="message">and if not, we'll just keep the current path</span></div><div class="line" id="033523"><span class="nick" style="color:#6b8072"><a href="#033523" label="[03:35:23]">&lt;oriansj&gt;</a></span><span class="message">well finding improvements is likely to continue for years (potentially decades); there are a great many enhancements and ordering tweaks possible.</span></div><div class="line" id="034102"><span class="nick" style="color:#2e2a4a"><a href="#034102" label="[03:41:02]">&lt;Googulator&gt;</a></span><span class="message">I wonder who has the ability to update bootstrappable.org</span></div><div class="line" id="042956"><span class="nick" style="color:#2e2a4a"><a href="#042956" label="[04:29:56]">&lt;Googulator&gt;</a></span><span class="message">Bad news; fpos_t isn't supported by tcc/meslibc</span></div><div class="line" id="043003"><span class="nick" style="color:#2e2a4a"><a href="#043003" label="[04:30:03]">&lt;Googulator&gt;</a></span><span class="message">needed by byacc</span></div><div class="line" id="050538"><span class="nick" style="color:#2e2a4a"><a href="#050538" label="[05:05:38]">&lt;Googulator&gt;</a></span><span class="message">currently trying replacing fgetpos/fsetpos with fseek/ftell using sed</span></div><div class="line" id="050953"><span class="nick" style="color:#389600"><a href="#050953" label="[05:09:53]">&lt;fossy&gt;</a></span><span class="message">not sure a simple find/replace will work, but fgetpos/fsetpos should be fairly easily replaceable with fseek/ftell i believe</span></div><div class="line" id="051143"><span class="nick" style="color:#2e2a4a"><a href="#051143" label="[05:11:43]">&lt;Googulator&gt;</a></span><span class="message">there's only a single use of each, so a simple replacement is enough</span></div><div class="line" id="051310"><span class="nick" style="color:#2e2a4a"><a href="#051310" label="[05:13:10]">&lt;Googulator&gt;</a></span><span class="message"># meslibc has no fgetpos/fsetpos - emulate using fseek/ftell</span></div><div class="line" id="051310"><span class="nick" style="color:#2e2a4a"><a href="#051310" label="[05:13:10]">&lt;Googulator&gt;</a></span><span class="message">sed -i -e &quot;s/fpos_t/long/&quot; -e &quot;s/fgetpos(f, &amp;save_area.line_fpos) != 0/(save_area.line_fpos = ftell(f)) == -1/&quot; \</span></div><div class="line" id="051311"><span class="nick" style="color:#2e2a4a"><a href="#051311" label="[05:13:11]">&lt;Googulator&gt;</a></span><span class="message">    -e &quot;s/fsetpos(input_file, &amp;save_area.line_fpos)/fseek(input_file, save_area.line_fpos, SEEK_SET)/&quot; reader.c</span></div><div class="line" id="051956"><span class="nick" style="color:#2e2a4a"><a href="#051956" label="[05:19:56]">&lt;Googulator&gt;</a></span><span class="message">meanwhile, openela kernel PR is now in CI</span></div><div class="line" id="052006"><span class="nick" style="color:#2e2a4a"><a href="#052006" label="[05:20:06]">&lt;Googulator&gt;</a></span><span class="message">will soon test it on bare metal too</span></div><div class="line" id="053151"><span class="nick" style="color:#2e2a4a"><a href="#053151" label="[05:31:51]">&lt;Googulator&gt;</a></span><span class="message">another missing meslibc function: tmpfile()</span></div><div class="line" id="053217"><span class="nick" style="color:#2e2a4a"><a href="#053217" label="[05:32:17]">&lt;Googulator&gt;</a></span><span class="message">this time, I'm emulating it by just opening a file in the current directory, so the resulting byacc will be a bit &quot;messy&quot;, but it should work</span></div><div class="line" id="121128"><span class="nick" style="color:#389600"><a href="#121128" label="[12:11:28]">&lt;fossy&gt;</a></span><span class="message">Googulator: could you take a look at <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/actions/runs/8678388667/job/23795249731">https://github.com/fosslinux/live-bootstrap/actions/runs/8678388667/job/23795249731</a> </span></div><div class="line" id="121134"><span class="nick" style="color:#389600"><a href="#121134" label="[12:11:34]">&lt;fossy&gt;</a></span><span class="message">not immediately sure what's wrong</span></div><div class="line" id="125847"><span class="nick" style="color:#8dd3c7"><a href="#125847" label="[12:58:47]">&lt;stikonas&gt;</a></span><span class="message">well, byyacc is not immediately helpful in bison bootstrap, it can't build bison parser. It can do flex parsers but we need heirloom-tools for lex files there anyway</span></div><div class="line" id="125905"><span class="nick" style="color:#8dd3c7"><a href="#125905" label="[12:59:05]">&lt;stikonas&gt;</a></span><span class="message">(possibly we could skip building heirloom yacc...)</span></div><div class="line" id="125926"><span class="nick" style="color:#8dd3c7"><a href="#125926" label="[12:59:26]">&lt;stikonas&gt;</a></span><span class="message">but that's not changing much</span></div><div class="line" id="132541"><span class="nick" style="color:#6b8072"><a href="#132541" label="[13:25:41]">&lt;oriansj&gt;</a></span><span class="message">Googulator: rekado is the one who generally updates the site</span></div><div class="line" id="132647"><span class="nick" style="color:#6b8072"><a href="#132647" label="[13:26:47]">&lt;oriansj&gt;</a></span><span class="message">also adding C functions in libraries should be relatively easy to do; so instead of replacing, improve meslibc just a little.</span></div><div class="line" id="145225"><span class="nick" style="color:#2e2a4a"><a href="#145225" label="[14:52:25]">&lt;Googulator&gt;</a></span><span class="message">fossy: curl: (22) The requested URL returned error: 502</span></div><div class="line" id="145225"><span class="nick" style="color:#2e2a4a"><a href="#145225" label="[14:52:25]">&lt;Googulator&gt;</a></span><span class="message">so just the usual savannah instability</span></div><div class="line" id="145337"><span class="nick" style="color:#2e2a4a"><a href="#145337" label="[14:53:37]">&lt;Googulator&gt;</a></span><span class="message">oriansj: I'd rather not wait for mes 0.27; LB 1.0 has been dragging out for way too long already</span></div><div class="line" id="145459"><span class="nick" style="color:#2e2a4a"><a href="#145459" label="[14:54:59]">&lt;Googulator&gt;</a></span><span class="message">&amp; of course we can't really patch mes ourselves</span></div><div class="line" id="145514"><span class="nick" style="color:#2e2a4a"><a href="#145514" label="[14:55:14]">&lt;Googulator&gt;</a></span><span class="message">we don't even have sed when we build mes</span></div><div class="line" id="145534"><span class="nick" style="color:#2e2a4a"><a href="#145534" label="[14:55:34]">&lt;Googulator&gt;</a></span><span class="message">only options are simple-patch and rolling our own prepatched mes tarball</span></div><div class="line" id="152138"><span class="nick" style="color:#6b8072"><a href="#152138" label="[15:21:38]">&lt;oriansj&gt;</a></span><span class="message">Googulator: we have replace.c which can be used for simple patching</span></div><div class="line" id="152156"><span class="nick" style="color:#6b8072"><a href="#152156" label="[15:21:56]">&lt;oriansj&gt;</a></span><span class="message">(part of mescc-tools-extra)</span></div><div class="line" id="152248"><span class="nick" style="color:#6b8072"><a href="#152248" label="[15:22:48]">&lt;oriansj&gt;</a></span><span class="message">and we could definitely do a simple sed in mescc-tools-extra if we need something more advanced.</span></div><div class="line" id="155544"><span class="nick" style="color:#2e2a4a"><a href="#155544" label="[15:55:44]">&lt;Googulator&gt;</a></span><span class="message">turns out we do already have patch-2.5.9 when we build byacc (though not when we build meslibc)</span></div><div class="line" id="155834"><span class="nick" style="color:#2e2a4a"><a href="#155834" label="[15:58:34]">&lt;Googulator&gt;</a></span><span class="message">but replace/sed is probably not sufficient for adding entire new functions to meslibc</span></div><div class="line" id="161348"><span class="nick" style="color:#2e2a4a"><a href="#161348" label="[16:13:48]">&lt;Googulator&gt;</a></span><span class="message">oriansj: looks like we need to start relying on your mirrors of savannah tarballs</span></div><div class="line" id="161356"><span class="nick" style="color:#2e2a4a"><a href="#161356" label="[16:13:56]">&lt;Googulator&gt;</a></span><span class="message">what was the address for the mirror again?</span></div><div class="line" id="162946"><span class="nick" style="color:#8dd3c7"><a href="#162946" label="[16:29:46]">&lt;stikonas&gt;</a></span><span class="message">Googulator: you could just patch meslibc before byacc</span></div><div class="line" id="162954"><span class="nick" style="color:#8dd3c7"><a href="#162954" label="[16:29:54]">&lt;stikonas&gt;</a></span><span class="message">by then patch and sed are both available</span></div><div class="line" id="163004"><span class="nick" style="color:#8dd3c7"><a href="#163004" label="[16:30:04]">&lt;stikonas&gt;</a></span><span class="message">and also submit that function to mes as patch</span></div><div class="line" id="163010"><span class="nick" style="color:#8dd3c7"><a href="#163010" label="[16:30:10]">&lt;stikonas&gt;</a></span><span class="message">so that is is there for next release</span></div><div class="line" id="163107"><span class="nick" style="color:#2e2a4a"><a href="#163107" label="[16:31:07]">&lt;Googulator&gt;</a></span><span class="message">meslibc is compiled by then</span></div><div class="line" id="163114"><span class="nick" style="color:#2e2a4a"><a href="#163114" label="[16:31:14]">&lt;Googulator&gt;</a></span><span class="message">or just rebuild tcc+meslibc?</span></div><div class="line" id="163134"><span class="nick" style="color:#8dd3c7"><a href="#163134" label="[16:31:34]">&lt;stikonas&gt;</a></span><span class="message">just rebuild meslibc (libc.a)</span></div><div class="line" id="163143"><span class="nick" style="color:#8dd3c7"><a href="#163143" label="[16:31:43]">&lt;stikonas&gt;</a></span><span class="message">no need to rebuild tcc or anything else</span></div><div class="line" id="163157"><span class="nick" style="color:#2e2a4a"><a href="#163157" label="[16:31:57]">&lt;Googulator&gt;</a></span><span class="message">oh right, we don't have the package system in place yet at that point</span></div><div class="line" id="163158"><span class="nick" style="color:#8dd3c7"><a href="#163158" label="[16:31:58]">&lt;stikonas&gt;</a></span><span class="message">tcc is quite fast</span></div><div class="line" id="163215"><span class="nick" style="color:#8dd3c7"><a href="#163215" label="[16:32:15]">&lt;stikonas&gt;</a></span><span class="message">so it wouldn't add much time to the build</span></div><div class="line" id="163223"><span class="nick" style="color:#8dd3c7"><a href="#163223" label="[16:32:23]">&lt;stikonas&gt;</a></span><span class="message">only the build of meslibc with mescc is slow</span></div><div class="line" id="211216"><span class="nick" style="color:#2e2a4a"><a href="#211216" label="[21:12:16]">&lt;Googulator&gt;</a></span><span class="message">Pushed an updated byacc to the byacc branch; this one actually works when built against meslibc</span></div><div class="line" id="215018"><span class="nick" style="color:#2e2a4a"><a href="#215018" label="[21:50:18]">&lt;Googulator&gt;</a></span><span class="message">looking promising - bash builds fine and everything up to and including m4, if I remove heirloom and flex-2.5.11 from the manifest, and just install byacc as yacc</span></div><div class="line" id="215050"><span class="nick" style="color:#2e2a4a"><a href="#215050" label="[21:50:50]">&lt;Googulator&gt;</a></span><span class="message">all that's needed basically is to convert heirloom's build script from kaem to sh</span></div><div class="line" id="215715"><span class="nick" style="color:#8dd3c7"><a href="#215715" label="[21:57:15]">&lt;stikonas&gt;</a></span><span class="message">well, that's just normal work</span></div><div class="line" id="215720"><span class="nick" style="color:#8dd3c7"><a href="#215720" label="[21:57:20]">&lt;stikonas&gt;</a></span><span class="message">shouldn't cause any surprises</span></div><div class="line" id="215816"><span class="nick" style="color:#8dd3c7"><a href="#215816" label="[21:58:16]">&lt;stikonas&gt;</a></span><span class="message">Googulator: so you are inserting heirloom tools and flex 2.5.11 just before flex 2.6.4?</span></div><div class="line" id="215846"><span class="nick" style="color:#2e2a4a"><a href="#215846" label="[21:58:46]">&lt;Googulator&gt;</a></span><span class="message">yes, that's the plan</span></div><div class="line" id="215851"><span class="nick" style="color:#8dd3c7"><a href="#215851" label="[21:58:51]">&lt;stikonas&gt;</a></span><span class="message">well, all bison bootstrap steps will be in one place...</span></div><div class="line" id="215911"><span class="nick" style="color:#8dd3c7"><a href="#215911" label="[21:59:11]">&lt;stikonas&gt;</a></span><span class="message">not sure if you saw my testing earlier, but byacc can't help with bison bootstrap itself</span></div><div class="line" id="215921"><span class="nick" style="color:#8dd3c7"><a href="#215921" label="[21:59:21]">&lt;stikonas&gt;</a></span><span class="message">bison's .y files are too complex</span></div><div class="line" id="215950"><span class="nick" style="color:#2e2a4a"><a href="#215950" label="[21:59:50]">&lt;Googulator&gt;</a></span><span class="message">also, we do need to keep heirloom lex</span></div><div class="line" id="215959"><span class="nick" style="color:#2e2a4a"><a href="#215959" label="[21:59:59]">&lt;Googulator&gt;</a></span><span class="message">because there's no blex</span></div><div class="line" id="220003"><span class="nick" style="color:#8dd3c7"><a href="#220003" label="[22:00:03]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="220011"><span class="nick" style="color:#8dd3c7"><a href="#220011" label="[22:00:11]">&lt;stikonas&gt;</a></span><span class="message">I did try to search online, but didn't find any other lex</span></div><div class="line" id="220015"><span class="nick" style="color:#8dd3c7"><a href="#220015" label="[22:00:15]">&lt;stikonas&gt;</a></span><span class="message">but anyway, that's fine</span></div><div class="line" id="220026"><span class="nick" style="color:#2e2a4a"><a href="#220026" label="[22:00:26]">&lt;Googulator&gt;</a></span><span class="message">there's reflex by the same author who maintains byacc, but of course it depends on itself :(</span></div><div class="line" id="220041"><span class="nick" style="color:#8dd3c7"><a href="#220041" label="[22:00:41]">&lt;stikonas&gt;</a></span><span class="message">the main thing was getting rid of non-redistributable binaries</span></div><div class="line" id="220107"><span class="nick" style="color:#2e2a4a"><a href="#220107" label="[22:01:07]">&lt;Googulator&gt;</a></span><span class="message">&amp; if we're keeping heirloom lex, it's easier to keep it working together with heirloom yacc than trying to get some byacc + heirloom lex hybrid working</span></div><div class="line" id="220117"><span class="nick" style="color:#8dd3c7"><a href="#220117" label="[22:01:17]">&lt;stikonas&gt;</a></span><span class="message">yeah, I agree</span></div><div class="line" id="220145"><span class="nick" style="color:#8dd3c7"><a href="#220145" label="[22:01:45]">&lt;stikonas&gt;</a></span><span class="message">and building byacc is also easier than getting gash to work</span></div><div class="line" id="220151"><span class="nick" style="color:#2e2a4a"><a href="#220151" label="[22:01:51]">&lt;Googulator&gt;</a></span><span class="message">heirloom is basically sysv lex/yacc, so I wouldn't expect compatibility with byacc which is BSD yacc</span></div><div class="line" id="220234"><span class="nick" style="color:#2e2a4a"><a href="#220234" label="[22:02:34]">&lt;Googulator&gt;</a></span><span class="message">not to mention not needlessly increasing our dependency on Lisp-like languages</span></div><div class="line" id="220245"><span class="nick" style="color:#2e2a4a"><a href="#220245" label="[22:02:45]">&lt;Googulator&gt;</a></span><span class="message">in general</span></div><div class="line" id="220255"><span class="nick" style="color:#2e2a4a"><a href="#220255" label="[22:02:55]">&lt;Googulator&gt;</a></span><span class="message">and Mes in particular</span></div><div class="line" id="220334"><span class="nick" style="color:#8dd3c7"><a href="#220334" label="[22:03:34]">&lt;stikonas&gt;</a></span><span class="message">well, guix people would disagree with your but yes, I find it harder to work than e.g. C</span></div><div class="line" id="220339"><span class="nick" style="color:#8dd3c7"><a href="#220339" label="[22:03:39]">&lt;stikonas&gt;</a></span><span class="message">s/your/you/</span></div><div class="line" id="220431"><span class="nick" style="color:#2e2a4a"><a href="#220431" label="[22:04:31]">&lt;Googulator&gt;</a></span><span class="message">&quot;Lisp is so easy, Emacs does everything for you&quot;...</span></div><div class="line" id="220801"><span class="nick" style="color:#2e2a4a"><a href="#220801" label="[22:08:01]">&lt;Googulator&gt;</a></span><span class="message">another side effect of moving heirloom after bash: no more &quot;uninstall: /usr/...&quot; directives in the manifest</span></div><div class="line" id="220813"><span class="nick" style="color:#2e2a4a"><a href="#220813" label="[22:08:13]">&lt;Googulator&gt;</a></span><span class="message">we can just &quot;uninstall: heirloom-devtools-070527&quot;</span></div><div class="line" id="220915"><span class="nick" style="color:#8dd3c7"><a href="#220915" label="[22:09:15]">&lt;stikonas&gt;</a></span><span class="message">oh nice</span></div><div class="line" id="220928"><span class="nick" style="color:#8dd3c7"><a href="#220928" label="[22:09:28]">&lt;stikonas&gt;</a></span><span class="message">well, uninstalling is also less important</span></div><div class="line" id="220945"><span class="nick" style="color:#8dd3c7"><a href="#220945" label="[22:09:45]">&lt;stikonas&gt;</a></span><span class="message">before this I really wanted to rm -rf heifloom as soon as possible due to non-redist</span></div><div class="line" id="232241"><span class="nick" style="color:#2e2a4a"><a href="#232241" label="[23:22:41]">&lt;Googulator&gt;</a></span><span class="message">parse.y:1769: error: 'yy_n' undeclared</span></div><div class="line" id="232246"><span class="nick" style="color:#2e2a4a"><a href="#232246" label="[23:22:46]">&lt;Googulator&gt;</a></span><span class="message">is this error familiar to anyone?</span></div><div class="line" id="232300"><span class="nick" style="color:#2e2a4a"><a href="#232300" label="[23:23:00]">&lt;Googulator&gt;</a></span><span class="message">(I get this when building parse.y in flex)</span></div><div class="line" id="232319"><span class="nick" style="color:#2e2a4a"><a href="#232319" label="[23:23:19]">&lt;Googulator&gt;</a></span><span class="message">or rather parse.c that heirloom lex generates from parse.y</span></div><div class="line" id="232724"><span class="nick" style="color:#8dd3c7"><a href="#232724" label="[23:27:24]">&lt;stikonas&gt;</a></span><span class="message">hmm,  not that I can remember...</span></div><div class="line" id="232732"><span class="nick" style="color:#2e2a4a"><a href="#232732" label="[23:27:32]">&lt;Googulator&gt;</a></span><span class="message">&quot;parse.y:1769&quot; makes no sense</span></div><div class="line" id="232739"><span class="nick" style="color:#2e2a4a"><a href="#232739" label="[23:27:39]">&lt;Googulator&gt;</a></span><span class="message">parse.y has no line 1769</span></div><div class="line" id="232744"><span class="nick" style="color:#8dd3c7"><a href="#232744" label="[23:27:44]">&lt;stikonas&gt;</a></span><span class="message">which flex is that?</span></div><div class="line" id="232757"><span class="nick" style="color:#2e2a4a"><a href="#232757" label="[23:27:57]">&lt;Googulator&gt;</a></span><span class="message">parse.c does, but it has no &quot;yy_n&quot; anywhere near it</span></div><div class="line" id="232801"><span class="nick" style="color:#2e2a4a"><a href="#232801" label="[23:28:01]">&lt;Googulator&gt;</a></span><span class="message">the first one, 2.5.11</span></div><div class="line" id="232840"><span class="nick" style="color:#2e2a4a"><a href="#232840" label="[23:28:40]">&lt;Googulator&gt;</a></span><span class="message">now trying a build where I strip all #line directives from parse.c before building it - hopefully tcc will output something more meaningful then</span></div><div class="line" id="232843"><span class="nick" style="color:#8dd3c7"><a href="#232843" label="[23:28:43]">&lt;stikonas&gt;</a></span><span class="message">and yacc is from heirloom as we discussed?</span></div><div class="line" id="232854"><span class="nick" style="color:#2e2a4a"><a href="#232854" label="[23:28:54]">&lt;Googulator&gt;</a></span><span class="message">yeah, heirloom yacc &amp; lex</span></div><div class="line" id="232900"><span class="nick" style="color:#2e2a4a"><a href="#232900" label="[23:29:00]">&lt;Googulator&gt;</a></span><span class="message">or at least should be</span></div><div class="line" id="232906"><span class="nick" style="color:#8dd3c7"><a href="#232906" label="[23:29:06]">&lt;stikonas&gt;</a></span><span class="message">yeah, those  bison files do mess up error reporting a bit</span></div><div class="line" id="233113"><span class="nick" style="color:#8dd3c7"><a href="#233113" label="[23:31:13]">&lt;stikonas&gt;</a></span><span class="message">Googulator: hmm, given that we build this after musl</span></div><div class="line" id="233120"><span class="nick" style="color:#8dd3c7"><a href="#233120" label="[23:31:20]">&lt;stikonas&gt;</a></span><span class="message">do we need to adjust some CPPFLAGS in makefile?</span></div><div class="line" id="233127"><span class="nick" style="color:#2e2a4a"><a href="#233127" label="[23:31:27]">&lt;Googulator&gt;</a></span><span class="message">CFLAGS = -DVERSION=\&quot;2.5.11\&quot;</span></div><div class="line" id="233130"><span class="nick" style="color:#2e2a4a"><a href="#233130" label="[23:31:30]">&lt;Googulator&gt;</a></span><span class="message">LDFLAGS = -static</span></div><div class="line" id="233130"><span class="nick" style="color:#2e2a4a"><a href="#233130" label="[23:31:30]">&lt;Googulator&gt;</a></span><span class="message">that's all we have</span></div><div class="line" id="233135"><span class="nick" style="color:#2e2a4a"><a href="#233135" label="[23:31:35]">&lt;Googulator&gt;</a></span><span class="message">no CPPFLAGS</span></div><div class="line" id="233140"><span class="nick" style="color:#8dd3c7"><a href="#233140" label="[23:31:40]">&lt;stikonas&gt;</a></span><span class="message">hmm, yeah</span></div><div class="line" id="233150"><span class="nick" style="color:#8dd3c7"><a href="#233150" label="[23:31:50]">&lt;stikonas&gt;</a></span><span class="message">well, that DVERSION I guess should be CPPFLAG but oh well...</span></div><div class="line" id="233343"><span class="nick" style="color:#2e2a4a"><a href="#233343" label="[23:33:43]">&lt;Googulator&gt;</a></span><span class="message">tcc invocation in makefile also only references CFLAGS</span></div><div class="line" id="233346"><span class="nick" style="color:#2e2a4a"><a href="#233346" label="[23:33:46]">&lt;Googulator&gt;</a></span><span class="message">not CPPFLAGS</span></div><div class="line" id="233421"><span class="nick" style="color:#8dd3c7"><a href="#233421" label="[23:34:21]">&lt;stikonas&gt;</a></span><span class="message">well, doesn't matter, I was too sloppy when I was writing those makefiles</span></div><div class="line" id="233426"><span class="nick" style="color:#8dd3c7"><a href="#233426" label="[23:34:26]">&lt;stikonas&gt;</a></span><span class="message">so just used CFLAGS everywhere</span></div><div class="line" id="233436"><span class="nick" style="color:#8dd3c7"><a href="#233436" label="[23:34:36]">&lt;stikonas&gt;</a></span><span class="message">rather than making distinction between CFLAGS and CPPFLAGS</span></div><div class="line" id="233443"><span class="nick" style="color:#8dd3c7"><a href="#233443" label="[23:34:43]">&lt;stikonas&gt;</a></span><span class="message">anyway, that's mostly just the convention</span></div><div class="line" id="233454"><span class="nick" style="color:#2e2a4a"><a href="#233454" label="[23:34:54]">&lt;Googulator&gt;</a></span><span class="message">especially since tcc is all-in-one</span></div><div class="line" id="233459"><span class="nick" style="color:#8dd3c7"><a href="#233459" label="[23:34:59]">&lt;stikonas&gt;</a></span><span class="message">indeed...</span></div><div class="line" id="233501"><span class="nick" style="color:#2e2a4a"><a href="#233501" label="[23:35:01]">&lt;Googulator&gt;</a></span><span class="message">preprocessor, compiler, assembler and linker</span></div><div class="line" id="233532"><span class="nick" style="color:#8dd3c7"><a href="#233532" label="[23:35:32]">&lt;stikonas&gt;</a></span><span class="message">anyway, see if you can get a better error message...</span></div><div class="line" id="233547"><span class="nick" style="color:#8dd3c7"><a href="#233547" label="[23:35:47]">&lt;stikonas&gt;</a></span><span class="message">because I don't see why moving flex after musl would break it</span></div><div class="line" id="235310"><span class="nick" style="color:#2e2a4a"><a href="#235310" label="[23:53:10]">&lt;Googulator&gt;</a></span><span class="message">parse.c:1083: error: 'yy_n' undeclared</span></div><div class="line" id="235314"><span class="nick" style="color:#2e2a4a"><a href="#235314" label="[23:53:14]">&lt;Googulator&gt;</a></span><span class="message">a little bit more realistic</span></div><div class="line" id="235612"><span class="nick" style="color:#8dd3c7"><a href="#235612" label="[23:56:12]">&lt;stikonas&gt;</a></span><span class="message">well, I guess it is related to 1769 line of parse.y</span></div><div class="line" id="235620"><span class="nick" style="color:#8dd3c7"><a href="#235620" label="[23:56:20]">&lt;stikonas&gt;</a></span><span class="message">i.e. C file was created by something there</span></div><div class="line" id="235719"><span class="nick" style="color:#2e2a4a"><a href="#235719" label="[23:57:19]">&lt;Googulator&gt;</a></span><span class="message">there's no line 1769 in parse.y</span></div><div class="line" id="235734"><span class="nick" style="color:#2e2a4a"><a href="#235734" label="[23:57:34]">&lt;Googulator&gt;</a></span><span class="message">parse.y is only 1013 lines long</span></div><div class="line" id="235743"><span class="nick" style="color:#2e2a4a"><a href="#235743" label="[23:57:43]">&lt;Googulator&gt;</a></span><span class="message">but at least parse.c:1083 does indeed reference yy_n</span></div><br /></div></body></html>