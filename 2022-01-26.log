<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-01-26.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000023"><span class="nick" style="color:#389600"><a href="#000023" label="[00:00:23]">&lt;stikonas[m]&gt;</a></span><span class="message">well, risc-v manual is maybe 130 pages long but you mostly need a couple of pages</span></div><div class="line" id="000124"><span class="nick" style="color:#8dd3c7"><a href="#000124" label="[00:01:24]">&lt;bauen1&gt;</a></span><span class="message">stikonas[m]: for doing a (probably correct) implementation of rv32i you only need &lt;35 pages, probably less than &lt;30</span></div><div class="line" id="000146"><span class="nick" style="color:#8dd3c7"><a href="#000146" label="[00:01:46]">&lt;bauen1&gt;</a></span><span class="message">stikonas[m]: you probably need that much to even have a list of all opcodes for i386 and all the possible encodings used ...</span></div><div class="line" id="000211"><span class="nick" style="color:#2e2a4a"><a href="#000211" label="[00:02:11]">&lt;stikonas&gt;</a></span><span class="message">bauen1: well, I mostly used table of opcodes</span></div><div class="line" id="000306"><span class="nick" style="color:#2e2a4a"><a href="#000306" label="[00:03:06]">&lt;stikonas&gt;</a></span><span class="message">but yes, x86 has significantly more opcodes</span></div><div class="line" id="005639"><span class="nick" style="color:#80b1d3"><a href="#005639" label="[00:56:39]">&lt;oriansj&gt;</a></span><span class="message">bauen1: well we only use 84 x86 encodings (not counting immediates) for M2-Planet, M2libc, mescc-tools, mescc-tools-extra and Mes.c</span></div><div class="line" id="005848"><span class="nick" style="color:#80b1d3"><a href="#005848" label="[00:58:48]">&lt;oriansj&gt;</a></span><span class="message">so even though x86 migh have considerably more opcodes than RISC-V; I highly doubt one needs most of them to actually bootstrap everything.</span></div><div class="line" id="010007"><span class="nick" style="color:#80b1d3"><a href="#010007" label="[01:00:07]">&lt;oriansj&gt;</a></span><span class="message">plasma41: I greatly look forward to seeing your results.</span></div><div class="line" id="010019"><span class="nick" style="color:#6d2462"><a href="#010019" label="[01:00:19]">&lt;plasma41&gt;</a></span><span class="message">oriansj: :-D</span></div><div class="line" id="010204"><span class="nick" style="color:#6d2462"><a href="#010204" label="[01:02:04]">&lt;plasma41&gt;</a></span><span class="message">oriansj: What is the oldest x86 family processor that the hex0_monitor is supposed to support?</span></div><div class="line" id="010357"><span class="nick" style="color:#80b1d3"><a href="#010357" label="[01:03:57]">&lt;oriansj&gt;</a></span><span class="message">stikonas: looking at line 61 gives a pretty solid reason for why it failed: <a rel="nofollow" href="https://paste.debian.net/1228401/">https://paste.debian.net/1228401/</a> </span></div><div class="line" id="010444"><span class="nick" style="color:#80b1d3"><a href="#010444" label="[01:04:44]">&lt;oriansj&gt;</a></span><span class="message">plasma41: ideally? or what would be good enough?</span></div><div class="line" id="010505"><span class="nick" style="color:#2e2a4a"><a href="#010505" label="[01:05:05]">&lt;stikonas&gt;</a></span><span class="message">oriansj: oh I might be on older kaem</span></div><div class="line" id="010513"><span class="nick" style="color:#2e2a4a"><a href="#010513" label="[01:05:13]">&lt;stikonas&gt;</a></span><span class="message">didn't see this</span></div><div class="line" id="010603"><span class="nick" style="color:#2e2a4a"><a href="#010603" label="[01:06:03]">&lt;stikonas&gt;</a></span><span class="message">LOAD_EFFECTIVE_ADDRESS_rdi looks like amd64</span></div><div class="line" id="010650"><span class="nick" style="color:#80b1d3"><a href="#010650" label="[01:06:50]">&lt;oriansj&gt;</a></span><span class="message">stikonas: indeed</span></div><div class="line" id="010700"><span class="nick" style="color:#80b1d3"><a href="#010700" label="[01:07:00]">&lt;oriansj&gt;</a></span><span class="message">so the question becomes how did it get there</span></div><div class="line" id="010727"><span class="nick" style="color:#2e2a4a"><a href="#010727" label="[01:07:27]">&lt;stikonas&gt;</a></span><span class="message">./M2libc/riscv32/libc-full.M1 and defs file seem clean</span></div><div class="line" id="010732"><span class="nick" style="color:#2e2a4a"><a href="#010732" label="[01:07:32]">&lt;stikonas&gt;</a></span><span class="message">so maybe M2-Planet</span></div><div class="line" id="010738"><span class="nick" style="color:#2e2a4a"><a href="#010738" label="[01:07:38]">&lt;stikonas&gt;</a></span><span class="message">or libc definitions</span></div><div class="line" id="010745"><span class="nick" style="color:#2e2a4a"><a href="#010745" label="[01:07:45]">&lt;stikonas&gt;</a></span><span class="message">maybe some copy-paste error somewhere</span></div><div class="line" id="010848"><span class="nick" style="color:#2e2a4a"><a href="#010848" label="[01:08:48]">&lt;stikonas&gt;</a></span><span class="message">oriansj: it's including M2libc/amd64/linux/unistd.c</span></div><div class="line" id="010853"><span class="nick" style="color:#2e2a4a"><a href="#010853" label="[01:08:53]">&lt;stikonas&gt;</a></span><span class="message">I think it comes from there</span></div><div class="line" id="010901"><span class="nick" style="color:#2e2a4a"><a href="#010901" label="[01:09:01]">&lt;stikonas&gt;</a></span><span class="message">the question is why ifdefs didn't work</span></div><div class="line" id="010914"><span class="nick" style="color:#6d2462"><a href="#010914" label="[01:09:14]">&lt;plasma41&gt;</a></span><span class="message">oriansj: As in what is the oldest processor that has supports all the machine opcodes we want to limit ourselves to? Currently there are a few opcodes in the commented hex that weren't introduced until the 80186. I've modified the assembly in a few places so that the generated machine code will be limited to what is available on the 8086.</span></div><div class="line" id="010937"><span class="nick" style="color:#6d2462"><a href="#010937" label="[01:09:37]">&lt;plasma41&gt;</a></span><span class="message">s/has supports/supports/</span></div><div class="line" id="011002"><span class="nick" style="color:#2e2a4a"><a href="#011002" label="[01:10:02]">&lt;stikonas&gt;</a></span><span class="message">plasma41: I think it's mostly because more opcodes aren't really necessary for bootstrap</span></div><div class="line" id="011017"><span class="nick" style="color:#2e2a4a"><a href="#011017" label="[01:10:17]">&lt;stikonas&gt;</a></span><span class="message">even in riscv ISA I have not used all opcodes</span></div><div class="line" id="011215"><span class="nick" style="color:#80b1d3"><a href="#011215" label="[01:12:15]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well EAX and that group only were added with i386 but the hex0_monitor should be able to run on an 8088</span></div><div class="line" id="011229"><span class="nick" style="color:#2e2a4a"><a href="#011229" label="[01:12:29]">&lt;stikonas&gt;</a></span><span class="message">oriansj: strange in -E mode I don't see any amd64 stuff</span></div><div class="line" id="011232"><span class="nick" style="color:#6d2462"><a href="#011232" label="[01:12:32]">&lt;plasma41&gt;</a></span><span class="message">oriansj: Basically was it a design goal for the hex0_monitor that it be able to run on an 8086? If so, a few 80186 opcodes snuck in.</span></div><div class="line" id="011245"><span class="nick" style="color:#6d2462"><a href="#011245" label="[01:12:45]">&lt;plasma41&gt;</a></span><span class="message">oriansj: ah, ok</span></div><div class="line" id="011343"><span class="nick" style="color:#2e2a4a"><a href="#011343" label="[01:13:43]">&lt;stikonas&gt;</a></span><span class="message">oriansj: and in fact manual invocation of M2-Mesoplanet builds it successfully</span></div><div class="line" id="014744"><span class="nick" style="color:#80b1d3"><a href="#014744" label="[01:47:44]">&lt;oriansj&gt;</a></span><span class="message">plasma41: actually the original design goal for the hex0_monitor was just: could I do something that could self-host in 510bytes and run on operating systems and bare metal. So one could say my goals have grown more ambitious with our collectiv sucess.</span></div><div class="line" id="023015"><span class="nick" style="color:#2e2a4a"><a href="#023015" label="[02:30:15]">&lt;stikonas&gt;</a></span><span class="message">oh, actually my chmod error on riscv32 happens later than in orisnsj's paste</span></div><div class="line" id="023024"><span class="nick" style="color:#2e2a4a"><a href="#023024" label="[02:30:24]">&lt;stikonas&gt;</a></span><span class="message">M1 runs fine for me, it's hex2 that crashes</span></div><div class="line" id="023119"><span class="nick" style="color:#2e2a4a"><a href="#023119" label="[02:31:19]">&lt;stikonas&gt;</a></span><span class="message">I have the following <a rel="nofollow" href="https://paste.debian.net/1228403/">https://paste.debian.net/1228403/</a> </span></div><div class="line" id="023211"><span class="nick" style="color:#2e2a4a"><a href="#023211" label="[02:32:11]">&lt;stikonas&gt;</a></span><span class="message">yet running &quot;../riscv32/bin/hex2 --file ../M2libc/riscv32/ELF-riscv32-debug.hex2 --file /tmp/M1-macro-000019 --output ../riscv32/bin/chmod --architecture riscv32 --base-address 0x600000 --little-endian&quot; works just fine</span></div><div class="line" id="023252"><span class="nick" style="color:#80b1d3"><a href="#023252" label="[02:32:52]">&lt;oriansj&gt;</a></span><span class="message">stikonas: can you share the /tmp/M1-macro-000019 please</span></div><div class="line" id="023307"><span class="nick" style="color:#2e2a4a"><a href="#023307" label="[02:33:07]">&lt;stikonas&gt;</a></span><span class="message">oriansj: one moment, rerunning</span></div><div class="line" id="023413"><span class="nick" style="color:#80b1d3"><a href="#023413" label="[02:34:13]">&lt;oriansj&gt;</a></span><span class="message">and tonight I'm gonna fuzz hex2 with --architecture riscv32 to see if I can find anything else that might cause a segfault</span></div><div class="line" id="023811"><span class="nick" style="color:#2e2a4a"><a href="#023811" label="[02:38:11]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://stikonas.eu/files/M1-macro-000020">https://stikonas.eu/files/M1-macro-000020</a> </span></div><div class="line" id="023941"><span class="nick" style="color:#2e2a4a"><a href="#023941" label="[02:39:41]">&lt;stikonas&gt;</a></span><span class="message">oriansj: actually, it doesn't crash</span></div><div class="line" id="023951"><span class="nick" style="color:#2e2a4a"><a href="#023951" label="[02:39:51]">&lt;stikonas&gt;</a></span><span class="message">it's kaem misreporting it as crashed</span></div><div class="line" id="024000"><span class="nick" style="color:#2e2a4a"><a href="#024000" label="[02:40:00]">&lt;stikonas&gt;</a></span><span class="message">so maybe the problem is in M2libc</span></div><div class="line" id="024019"><span class="nick" style="color:#2e2a4a"><a href="#024019" label="[02:40:19]">&lt;stikonas&gt;</a></span><span class="message">I've just checked, the file in riscv32/bin/chmod seems functional</span></div><div class="line" id="024202"><span class="nick" style="color:#2e2a4a"><a href="#024202" label="[02:42:02]">&lt;stikonas&gt;</a></span><span class="message">migth be bug in this function <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/riscv32/linux/unistd.c#L80">https://github.com/oriansj/M2libc/blob/main/riscv32/linux/unistd.c#L80</a> </span></div><div class="line" id="024303"><span class="nick" style="color:#80b1d3"><a href="#024303" label="[02:43:03]">&lt;oriansj&gt;</a></span><span class="message">very possible</span></div><div class="line" id="024315"><span class="nick" style="color:#80b1d3"><a href="#024315" label="[02:43:15]">&lt;oriansj&gt;</a></span><span class="message">as it is unique to riscv32</span></div><div class="line" id="024333"><span class="nick" style="color:#80b1d3"><a href="#024333" label="[02:43:33]">&lt;oriansj&gt;</a></span><span class="message">(all other architectures have either wait or wait4)</span></div><div class="line" id="024434"><span class="nick" style="color:#2e2a4a"><a href="#024434" label="[02:44:34]">&lt;stikonas&gt;</a></span><span class="message">ok, something to look at tomorrow... Unless you find the bug while I sleep</span></div><div class="line" id="024505"><span class="nick" style="color:#80b1d3"><a href="#024505" label="[02:45:05]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well I found a bug in the behavior of --architecture, so I'll be fixing that tonight</span></div><div class="line" id="024545"><span class="nick" style="color:#2e2a4a"><a href="#024545" label="[02:45:45]">&lt;stikonas&gt;</a></span><span class="message">well, it's nicer to have --architecture in M2-Planet rather than env variable</span></div><div class="line" id="024545"><span class="nick" style="color:#80b1d3"><a href="#024545" label="[02:45:45]">&lt;oriansj&gt;</a></span><span class="message">and I'll be fuzzing hex2 just in case</span></div><div class="line" id="024554"><span class="nick" style="color:#2e2a4a"><a href="#024554" label="[02:45:54]">&lt;stikonas&gt;</a></span><span class="message">no, it's definitely not hex2</span></div><div class="line" id="024613"><span class="nick" style="color:#2e2a4a"><a href="#024613" label="[02:46:13]">&lt;stikonas&gt;</a></span><span class="message">I can't reproduce it in any of the manual runs</span></div><div class="line" id="024622"><span class="nick" style="color:#2e2a4a"><a href="#024622" label="[02:46:22]">&lt;stikonas&gt;</a></span><span class="message">so must be something to do with kaem</span></div><div class="line" id="024632"><span class="nick" style="color:#2e2a4a"><a href="#024632" label="[02:46:32]">&lt;stikonas&gt;</a></span><span class="message">actually, I can try to run just 1 command in kaem and see</span></div><div class="line" id="024943"><span class="nick" style="color:#2e2a4a"><a href="#024943" label="[02:49:43]">&lt;stikonas&gt;</a></span><span class="message">hmm, just running hex2 in kaem worked..</span></div><div class="line" id="025133"><span class="nick" style="color:#2e2a4a"><a href="#025133" label="[02:51:33]">&lt;stikonas&gt;</a></span><span class="message">and also running M2-Planet in kaem worked...</span></div><div class="line" id="025142"><span class="nick" style="color:#2e2a4a"><a href="#025142" label="[02:51:42]">&lt;stikonas&gt;</a></span><span class="message">anyway, that's it for today</span></div><div class="line" id="034223"><span class="nick" style="color:#80b1d3"><a href="#034223" label="[03:42:23]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I'm probably totally wrong but wouldn't the correct form be: <a rel="nofollow" href="https://paste.debian.net/1228405/">https://paste.debian.net/1228405/</a> </span></div><div class="line" id="035326"><span class="nick" style="color:#80b1d3"><a href="#035326" label="[03:53:26]">&lt;oriansj&gt;</a></span><span class="message">now the order of --architecture  --debug-mode --max-string and -I no longer matter; they will be processed first before the setup of environments and thus will always be respected</span></div><div class="line" id="035330"><span class="nick" style="color:#80b1d3"><a href="#035330" label="[03:53:30]">&lt;oriansj&gt;</a></span><span class="message">patches are up</span></div><div class="line" id="035340"><span class="nick" style="color:#80b1d3"><a href="#035340" label="[03:53:40]">&lt;oriansj&gt;</a></span><span class="message">(for M2-Mesoplanet)</span></div><div class="line" id="043531"><span class="nick" style="color:#6d2462"><a href="#043531" label="[04:35:31]">&lt;plasma41&gt;</a></span><span class="message">EBFE, the shortest self-hosting x86 machine code program! :-P</span></div><div class="line" id="090047"><span class="nick" style="color:#80b1d3"><a href="#090047" label="[09:00:47]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well that isn't self-hosting, so much as self-calling. as one needs to read input and write output to be considered a hosting language. and self-hosting just simply requires just enough functionality to enable it to make the act of a human developer using that language to be able to implement the functionality of that language in terms of that language.</span></div><div class="line" id="090457"><span class="nick" style="color:#80b1d3"><a href="#090457" label="[09:04:57]">&lt;oriansj&gt;</a></span><span class="message">hence why support for comments of some kind (be it line and/or block) seem to be some sort of universal requirement for actual self-hosting languages.</span></div><div class="line" id="150037"><span class="nick" style="color:#234e69"><a href="#150037" label="[15:00:37]">&lt;ekaitz&gt;</a></span><span class="message">janneke: gcc-4.6.4 is kicking my ass at the moment, do you have any recipe for old versions of GCC that I can use as a reference? Looks like the one that comes with guix (4.7) uses newer environment variables that were not available in 4.6.</span></div><div class="line" id="150154"><span class="nick" style="color:#2e2a4a"><a href="#150154" label="[15:01:54]">&lt;stikonas&gt;</a></span><span class="message">ekaitz: are you having trouble building it?</span></div><div class="line" id="150154"><span class="nick" style="color:#234e69"><a href="#150154" label="[15:01:54]">&lt;ekaitz&gt;</a></span><span class="message">yeah some</span></div><div class="line" id="150206"><span class="nick" style="color:#2e2a4a"><a href="#150206" label="[15:02:06]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="150213"><span class="nick" style="color:#234e69"><a href="#150213" label="[15:02:13]">&lt;ekaitz&gt;</a></span><span class="message">i'm on guix</span></div><div class="line" id="150226"><span class="nick" style="color:#234e69"><a href="#150226" label="[15:02:26]">&lt;ekaitz&gt;</a></span><span class="message">that explains part of the problem</span></div><div class="line" id="150243"><span class="nick" style="color:#234e69"><a href="#150243" label="[15:02:43]">&lt;ekaitz&gt;</a></span><span class="message">most of the thing is related with search paths</span></div><div class="line" id="150317"><span class="nick" style="color:#234e69"><a href="#150317" label="[15:03:17]">&lt;ekaitz&gt;</a></span><span class="message">I had to patch a couple of configuration files but this is supposed to just compile by its own</span></div><div class="line" id="150414"><span class="nick" style="color:#2e2a4a"><a href="#150414" label="[15:04:14]">&lt;stikonas&gt;</a></span><span class="message">hmm, I haven't tried 4.6 but both 4.0.4 and 4.7.4 were at least not sensitive to installation prefix</span></div><div class="line" id="150507"><span class="nick" style="color:#2e2a4a"><a href="#150507" label="[15:05:07]">&lt;stikonas&gt;</a></span><span class="message">ekaitz: have you set LIBGCC2_INCLUDES?</span></div><div class="line" id="150523"><span class="nick" style="color:#234e69"><a href="#150523" label="[15:05:23]">&lt;ekaitz&gt;</a></span><span class="message">nope</span></div><div class="line" id="150535"><span class="nick" style="color:#2e2a4a"><a href="#150535" label="[15:05:35]">&lt;stikonas&gt;</a></span><span class="message">that might help</span></div><div class="line" id="150542"><span class="nick" style="color:#234e69"><a href="#150542" label="[15:05:42]">&lt;ekaitz&gt;</a></span><span class="message">now the problem I have is it doesn't find /lib/cpp</span></div><div class="line" id="150558"><span class="nick" style="color:#234e69"><a href="#150558" label="[15:05:58]">&lt;ekaitz&gt;</a></span><span class="message">what I don't understand is why is it searching for it there</span></div><div class="line" id="150657"><span class="nick" style="color:#234e69"><a href="#150657" label="[15:06:57]">&lt;ekaitz&gt;</a></span><span class="message">this step was supposed to be the easy one... lol</span></div><div class="line" id="150744"><span class="nick" style="color:#2e2a4a"><a href="#150744" label="[15:07:44]">&lt;stikonas&gt;</a></span><span class="message">well, it tooks me some time to build it in live-bootstrap too</span></div><div class="line" id="150800"><span class="nick" style="color:#234e69"><a href="#150800" label="[15:08:00]">&lt;ekaitz&gt;</a></span><span class="message">is there any script for building 4.0.4?</span></div><div class="line" id="150806"><span class="nick" style="color:#234e69"><a href="#150806" label="[15:08:06]">&lt;ekaitz&gt;</a></span><span class="message">I'd like to take a look into it</span></div><div class="line" id="150815"><span class="nick" style="color:#2e2a4a"><a href="#150815" label="[15:08:15]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/gcc-4.0.4/pass2.sh#L85">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/gcc-4.0.4/pass2.sh#L85</a> </span></div><div class="line" id="150933"><span class="nick" style="color:#234e69"><a href="#150933" label="[15:09:33]">&lt;ekaitz&gt;</a></span><span class="message">it's not very different to what I'm doing</span></div><div class="line" id="151002"><span class="nick" style="color:#2e2a4a"><a href="#151002" label="[15:10:02]">&lt;stikonas&gt;</a></span><span class="message">4.7.4 is actually pretty similar too <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysc/gcc-4.7.4/gcc-4.7.4.sh#L108">https://github.com/fosslinux/live-bootstrap/blob/master/sysc/gcc-4.7.4/gcc-4.7.4.sh#L108</a> </span></div><div class="line" id="151023"><span class="nick" style="color:#2e2a4a"><a href="#151023" label="[15:10:23]">&lt;stikonas&gt;</a></span><span class="message">just need to point build to those new dependencies (gmp, mpc, etc...)</span></div><div class="line" id="151058"><span class="nick" style="color:#234e69"><a href="#151058" label="[15:10:58]">&lt;ekaitz&gt;</a></span><span class="message">hm</span></div><div class="line" id="151108"><span class="nick" style="color:#234e69"><a href="#151108" label="[15:11:08]">&lt;ekaitz&gt;</a></span><span class="message">but you are compiling folder by folder</span></div><div class="line" id="151136"><span class="nick" style="color:#234e69"><a href="#151136" label="[15:11:36]">&lt;ekaitz&gt;</a></span><span class="message">I tried to compile the whole thing</span></div><div class="line" id="151139"><span class="nick" style="color:#234e69"><a href="#151139" label="[15:11:39]">&lt;ekaitz&gt;</a></span><span class="message">maybe that's my issue</span></div><div class="line" id="151157"><span class="nick" style="color:#2e2a4a"><a href="#151157" label="[15:11:57]">&lt;stikonas&gt;</a></span><span class="message">we were forced into compiling folder by folder by pre-generated files</span></div><div class="line" id="151208"><span class="nick" style="color:#2e2a4a"><a href="#151208" label="[15:12:08]">&lt;stikonas&gt;</a></span><span class="message">there is no way to build top-level Makefile.am</span></div><div class="line" id="151236"><span class="nick" style="color:#234e69"><a href="#151236" label="[15:12:36]">&lt;ekaitz&gt;</a></span><span class="message">and what's the problem you get?</span></div><div class="line" id="151237"><span class="nick" style="color:#2e2a4a"><a href="#151237" label="[15:12:37]">&lt;stikonas&gt;</a></span><span class="message">sorry Makefile.in</span></div><div class="line" id="151248"><span class="nick" style="color:#2e2a4a"><a href="#151248" label="[15:12:48]">&lt;stikonas&gt;</a></span><span class="message">it's machine generated, it's not a source file</span></div><div class="line" id="151257"><span class="nick" style="color:#2e2a4a"><a href="#151257" label="[15:12:57]">&lt;stikonas&gt;</a></span><span class="message">See <a rel="nofollow" href="https://raw.githubusercontent.com/gcc-mirror/gcc/master/Makefile.in">https://raw.githubusercontent.com/gcc-mirror/gcc/master/Makefile.in</a> </span></div><div class="line" id="151317"><span class="nick" style="color:#234e69"><a href="#151317" label="[15:13:17]">&lt;ekaitz&gt;</a></span><span class="message">yeah that's what I'm having issues with</span></div><div class="line" id="151329"><span class="nick" style="color:#2e2a4a"><a href="#151329" label="[15:13:29]">&lt;stikonas&gt;</a></span><span class="message">and it's generated with autogen</span></div><div class="line" id="151338"><span class="nick" style="color:#234e69"><a href="#151338" label="[15:13:38]">&lt;ekaitz&gt;</a></span><span class="message">it has some hardcoded paths that are kicking my ass</span></div><div class="line" id="151349"><span class="nick" style="color:#2e2a4a"><a href="#151349" label="[15:13:49]">&lt;stikonas&gt;</a></span><span class="message">which has huge self-dependencies</span></div><div class="line" id="151400"><span class="nick" style="color:#234e69"><a href="#151400" label="[15:14:00]">&lt;ekaitz&gt;</a></span><span class="message">oh I see</span></div><div class="line" id="151405"><span class="nick" style="color:#2e2a4a"><a href="#151405" label="[15:14:05]">&lt;stikonas&gt;</a></span><span class="message">everybody who had a look at it quickly gave up</span></div><div class="line" id="151429"><span class="nick" style="color:#234e69"><a href="#151429" label="[15:14:29]">&lt;ekaitz&gt;</a></span><span class="message">I'll try your way then, I was more stubborn and tried to patch it a little :D</span></div><div class="line" id="151436"><span class="nick" style="color:#234e69"><a href="#151436" label="[15:14:36]">&lt;ekaitz&gt;</a></span><span class="message">it more or less worked</span></div><div class="line" id="151455"><span class="nick" style="color:#2e2a4a"><a href="#151455" label="[15:14:55]">&lt;stikonas&gt;</a></span><span class="message">that top-level thing is kind of optional...</span></div><div class="line" id="151507"><span class="nick" style="color:#2e2a4a"><a href="#151507" label="[15:15:07]">&lt;stikonas&gt;</a></span><span class="message">subdir configure files seem to work well enough</span></div><div class="line" id="151547"><span class="nick" style="color:#234e69"><a href="#151547" label="[15:15:47]">&lt;ekaitz&gt;</a></span><span class="message">i tried to execute it but it was complaining about some things... i'll give it another try</span></div><div class="line" id="152026"><span class="nick" style="color:#2e2a4a"><a href="#152026" label="[15:20:26]">&lt;stikonas&gt;</a></span><span class="message">you could always build live-bootstrap chroot :D for compiling gcc</span></div><div class="line" id="152123"><span class="nick" style="color:#2e2a4a"><a href="#152123" label="[15:21:23]">&lt;stikonas&gt;</a></span><span class="message">although, that wouldn't help you once you build natively on risc-v</span></div><div class="line" id="153107"><span class="nick" style="color:#234e69"><a href="#153107" label="[15:31:07]">&lt;ekaitz&gt;</a></span><span class="message">i just need this building normally to be able to backport it</span></div><div class="line" id="153121"><span class="nick" style="color:#234e69"><a href="#153121" label="[15:31:21]">&lt;ekaitz&gt;</a></span><span class="message">but even compiling it is shooting myself in the foot</span></div><div class="line" id="153209"><span class="nick" style="color:#234e69"><a href="#153209" label="[15:32:09]">&lt;ekaitz&gt;</a></span><span class="message">i'll try your method later but it looks reasonable... will see...</span></div><div class="line" id="171753"><span class="nick" style="color:#6c3d55"><a href="#171753" label="[17:17:53]">&lt;janneke&gt;</a></span><span class="message">ekaitz: aren't you building gcc-4.6 using guix?</span></div><div class="line" id="172053"><span class="nick" style="color:#234e69"><a href="#172053" label="[17:20:53]">&lt;ekaitz&gt;</a></span><span class="message">janneke: yes but i'm having problems with it</span></div><div class="line" id="172353"><span class="nick" style="color:#234e69"><a href="#172353" label="[17:23:53]">&lt;ekaitz&gt;</a></span><span class="message">janneke: do you build 4.0 with guix too? do you have any guix package definition for it?</span></div><div class="line" id="172510"><span class="nick" style="color:#6c3d55"><a href="#172510" label="[17:25:10]">&lt;janneke&gt;</a></span><span class="message">ekaitz: <a rel="nofollow" href="https://gitlab.com/janneke/guix/-/raw/wip-bootstrap-gcc4/gnu/packages/commencement.scm">https://gitlab.com/janneke/guix/-/raw/wip-bootstrap-gcc4/gnu/packages/commencement.scm</a> </span></div><div class="line" id="172519"><span class="nick" style="color:#6c3d55"><a href="#172519" label="[17:25:19]">&lt;janneke&gt;</a></span><span class="message">this is an old branch, very much wip</span></div><div class="line" id="172556"><span class="nick" style="color:#6c3d55"><a href="#172556" label="[17:25:56]">&lt;janneke&gt;</a></span><span class="message">maybe you can use some trick from the package description</span></div><div class="line" id="172615"><span class="nick" style="color:#234e69"><a href="#172615" label="[17:26:15]">&lt;ekaitz&gt;</a></span><span class="message">thanks i'll take a look to it!</span></div><div class="line" id="172623"><span class="nick" style="color:#6c3d55"><a href="#172623" label="[17:26:23]">&lt;janneke&gt;</a></span><span class="message">i notice it has a patch too</span></div><div class="line" id="172749"><span class="nick" style="color:#234e69"><a href="#172749" label="[17:27:49]">&lt;ekaitz&gt;</a></span><span class="message">yes!</span></div><div class="line" id="174454"><span class="nick">***</span><span class="message notice">ChanServ sets mode: -o janneke</span></div><div class="line" id="231917"><span class="nick" style="color:#6d2462"><a href="#231917" label="[23:19:17]">&lt;plasma41&gt;</a></span><span class="message">oriansj: Yes, I did use the wrong term; you are right. I was just being silly. Though it is rather amusing that all it takes to write a program that creates an infinite loop and eats up all your CPU cycles is just sixteen bits.</span></div><div class="line" id="233236"><span class="nick" style="color:#6d2462"><a href="#233236" label="[23:32:36]">&lt;plasma41&gt;</a></span><span class="message">Or the fact that it only takes nine keystrokes as a root user to tell a Unix system to self-destruct. (Unless the system behavior was changed like it was in Solaris, see &lt;<a rel="nofollow" href="https://invidious.snopyta.org/watch?v=l6XQUciI-Sc">https://invidious.snopyta.org/watch?v=l6XQUciI-Sc</a>&gt;  starting at 1:20:58)</span></div><div class="line" id="233515"><span class="nick" style="color:#80b1d3"><a href="#233515" label="[23:35:15]">&lt;oriansj&gt;</a></span><span class="message">plasma41: if you are referring to :(){ :|:&amp; };: setting /etc/security/limits.conf to have soft nproc 100 and hard nproc 300 and fork bombs don't work anymore</span></div><div class="line" id="233651"><span class="nick" style="color:#80b1d3"><a href="#233651" label="[23:36:51]">&lt;oriansj&gt;</a></span><span class="message">but if you mean rm -rf / well fortunately that is fixed and you need --no-preserve-root these days</span></div><div class="line" id="233737"><span class="nick" style="color:#80b1d3"><a href="#233737" label="[23:37:37]">&lt;oriansj&gt;</a></span><span class="message">but dd if=/dev/zero of=/dev/sda will continue to work</span></div><div class="line" id="233949"><span class="nick" style="color:#6d2462"><a href="#233949" label="[23:39:49]">&lt;plasma41&gt;</a></span><span class="message">oriansj: Yes, &quot;rm -rf /&quot; plus the final carriage return. While requiring '--no-preserve-root' is better than not doing so, I think the way the Solaris folks solved the problem is more elegant.</span></div><div class="line" id="234018"><span class="nick" style="color:#2e2a4a"><a href="#234018" label="[23:40:18]">&lt;stikonas&gt;</a></span><span class="message">plasma41: why is it surprising to have infinite loop in so few bits?</span></div><div class="line" id="234055"><span class="nick" style="color:#6d2462"><a href="#234055" label="[23:40:55]">&lt;plasma41&gt;</a></span><span class="message">stikonas: Not surprising, just amusing.</span></div><div class="line" id="234108"><span class="nick" style="color:#2e2a4a"><a href="#234108" label="[23:41:08]">&lt;stikonas&gt;</a></span><span class="message">isn't it just putting jump instruction to current address</span></div><div class="line" id="234112"><span class="nick" style="color:#80b1d3"><a href="#234112" label="[23:41:12]">&lt;oriansj&gt;</a></span><span class="message">you can have a segfault in just 24bits</span></div><div class="line" id="234157"><span class="nick" style="color:#80b1d3"><a href="#234157" label="[23:41:57]">&lt;oriansj&gt;</a></span><span class="message">:label push eax; jump !label</span></div><div class="line" id="234310"><span class="nick" style="color:#2e2a4a"><a href="#234310" label="[23:43:10]">&lt;stikonas&gt;</a></span><span class="message">or jal zero, 0 on risc-v</span></div><div class="line" id="234328"><span class="nick" style="color:#d9d9d9"><a href="#234328" label="[23:43:28]">&lt;Hagfish&gt;</a></span><span class="message">that makes me think of a question like &quot;what is the smallest dangerous number?&quot; (obviously open for debate)</span></div><div class="line" id="234353"><span class="nick" style="color:#d9d9d9"><a href="#234353" label="[23:43:53]">&lt;Hagfish&gt;</a></span><span class="message">i guess arguably zero is dangerous as a divisor</span></div><div class="line" id="234653"><span class="nick" style="color:#80b1d3"><a href="#234653" label="[23:46:53]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: 0xFE shutdowns the entire computer</span></div><div class="line" id="234825"><span class="nick" style="color:#80b1d3"><a href="#234825" label="[23:48:25]">&lt;oriansj&gt;</a></span><span class="message">or 0x9D and 0xDD on the Motorola 6800; which causes the system to halt and catch fire</span></div><div class="line" id="234859"><span class="nick" style="color:#6d2462"><a href="#234859" label="[23:48:59]">&lt;plasma41&gt;</a></span><span class="message">F0 0F C7 C8</span></div><div class="line" id="235048"><span class="nick" style="color:#80b1d3"><a href="#235048" label="[23:50:48]">&lt;oriansj&gt;</a></span><span class="message">or the sandsifter x86 HCF bug</span></div><div class="line" id="235157"><span class="nick" style="color:#6d2462"><a href="#235157" label="[23:51:57]">&lt;plasma41&gt;</a></span><span class="message">oriansj: I rewatched the original sandsifter conference talk just this week actually. It's a classic.</span></div><div class="line" id="235318"><span class="nick" style="color:#80b1d3"><a href="#235318" label="[23:53:18]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well it certainly proves the point from NASA that no IC with more than 16 pins ever actually matches the spec exactly.</span></div><div class="line" id="235537"><span class="nick" style="color:#6d2462"><a href="#235537" label="[23:55:37]">&lt;plasma41&gt;</a></span><span class="message">oriansj: I hadn't heard that quote, but I like it!</span></div><br /></div></body></html>