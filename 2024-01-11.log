<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-01-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="004200"><span class="nick" style="color:#389600"><a href="#004200" label="[00:42:00]">&lt;rickmasters&gt;</a></span><span class="message">OK reproduced checksum fail for python 3.1.5 using latest live-bootstrap. The python versions before that were OK.</span></div><div class="line" id="020124"><span class="nick" style="color:#8dd3c7"><a href="#020124" label="[02:01:24]">&lt;Googulator&gt;</a></span><span class="message">One way you can speed up testing Python issues is by commenting out guile and everything else until Python</span></div><div class="line" id="020149"><span class="nick" style="color:#8dd3c7"><a href="#020149" label="[02:01:49]">&lt;Googulator&gt;</a></span><span class="message">Guile &amp; Autogen are AFAIK only needed for GCC 10+</span></div><div class="line" id="021427"><span class="nick" style="color:#389600"><a href="#021427" label="[02:14:27]">&lt;rickmasters&gt;</a></span><span class="message">Thanks. Just passed python 3.1.5 with Fiwix update with success.</span></div><div class="line" id="021542"><span class="nick" style="color:#389600"><a href="#021542" label="[02:15:42]">&lt;rickmasters&gt;</a></span><span class="message">I'll continue testing to find the revision that python 3.1.5 first fails on.</span></div><div class="line" id="031553"><span class="nick" style="color:#8dd3c7"><a href="#031553" label="[03:15:53]">&lt;Googulator&gt;</a></span><span class="message">I've done a test myself to revert the Fiwix upgrade - Python checksums are still wrong, matching the ones with the new Fiwix.</span></div><div class="line" id="080651"><span class="nick" style="color:#2e2a4a"><a href="#080651" label="[08:06:51]">&lt;jenntech23&gt;</a></span><span class="message">hoping someone can help me figure out why my product image on the image after clicking a product is so small? Im trying to stretch it to the container... <a rel="nofollow" href="https://demandrights.pythonanywhere.com/product/security-agreement/">https://demandrights.pythonanywhere.com/product/security-agreement/</a> </span></div><div class="line" id="081546"><span class="nick" style="color:#6b8072"><a href="#081546" label="[08:15:46]">&lt;muurkha&gt;</a></span><span class="message">can you provide context?</span></div><div class="line" id="082416"><span class="nick" style="color:#80b1d3"><a href="#082416" label="[08:24:16]">&lt;fossy&gt;</a></span><span class="message">jenntech23: i think you are very much in the wrong channel.</span></div><div class="line" id="082836"><span class="nick" style="color:#6b8072"><a href="#082836" label="[08:28:36]">&lt;muurkha&gt;</a></span><span class="message">well, perhaps they are in the right channel but sent that message to the wrong one, or perhaps there's some meaning I haven't deciphered</span></div><div class="line" id="083937"><span class="nick" style="color:#80b1d3"><a href="#083937" label="[08:39:37]">&lt;fossy&gt;</a></span><span class="message">perhaps</span></div><div class="line" id="092611"><span class="nick" style="color:#8dd3c7"><a href="#092611" label="[09:26:11]">&lt;Googulator&gt;</a></span><span class="message">rekado: yale-haskell is failing in exactly the same way in clisp 2.49, the last proper release from 2010</span></div><div class="line" id="092749"><span class="nick" style="color:#8dd3c7"><a href="#092749" label="[09:27:49]">&lt;Googulator&gt;</a></span><span class="message">by any chance, do you remember what version you used in 2016?</span></div><div class="line" id="212854"><span class="nick" style="color:#6d2462"><a href="#212854" label="[21:28:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Raised a PR to optionally allow the use of my alternative tcc bootstrap path <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/407">https://github.com/fosslinux/live-bootstrap/pull/407</a>  . It's not in a fully mergable state yet, but it should be useful for review. It takes around 10 mins of pass1.</span></div><div class="line" id="212920"><span class="nick" style="color:#6d2462"><a href="#212920" label="[21:29:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; * mergeable</span></div><div class="line" id="214254"><span class="nick" style="color:#80b1d3"><a href="#214254" label="[21:42:54]">&lt;fossy&gt;</a></span><span class="message">ooh, thank you!</span></div><div class="line" id="214354"><span class="nick" style="color:#234e69"><a href="#214354" label="[21:43:54]">&lt;stikonas&gt;</a></span><span class="message">hopefully no pregenerated files there :)</span></div><div class="line" id="214541"><span class="nick" style="color:#80b1d3"><a href="#214541" label="[21:45:41]">&lt;fossy&gt;</a></span><span class="message">cosiunsoidally: wow, this is surprisingly a fairly simple PR. I was expecting a lot more hacks to be required with mes libc!</span></div><div class="line" id="214620"><span class="nick" style="color:#234e69"><a href="#214620" label="[21:46:20]">&lt;stikonas&gt;</a></span><span class="message">well, I guess a lot is hidden inside tcc-bootstrap-alt repo</span></div><div class="line" id="214631"><span class="nick" style="color:#80b1d3"><a href="#214631" label="[21:46:31]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="214638"><span class="nick" style="color:#80b1d3"><a href="#214638" label="[21:46:38]">&lt;fossy&gt;</a></span><span class="message">what libc is tcc itself compiled against?</span></div><div class="line" id="214640"><span class="nick" style="color:#234e69"><a href="#214640" label="[21:46:40]">&lt;stikonas&gt;</a></span><span class="message">and checksums are still disabled...</span></div><div class="line" id="214654"><span class="nick" style="color:#234e69"><a href="#214654" label="[21:46:54]">&lt;stikonas&gt;</a></span><span class="message">probably libc from tcc-bootstrap-alt?</span></div><div class="line" id="214731"><span class="nick" style="color:#234e69"><a href="#214731" label="[21:47:31]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/tree/master/woody/usr/include">https://github.com/cosinusoidally/tcc_bootstrap_alt/tree/master/woody/usr/include</a> </span></div><div class="line" id="214744"><span class="nick" style="color:#234e69"><a href="#214744" label="[21:47:44]">&lt;stikonas&gt;</a></span><span class="message">libc from debian woody I guess</span></div><div class="line" id="214835"><span class="nick" style="color:#80b1d3"><a href="#214835" label="[21:48:35]">&lt;fossy&gt;</a></span><span class="message">that's only headers though... not any actual code</span></div><div class="line" id="214857"><span class="nick" style="color:#234e69"><a href="#214857" label="[21:48:57]">&lt;stikonas&gt;</a></span><span class="message">hmm, yes</span></div><div class="line" id="215234"><span class="nick" style="color:#6d2462"><a href="#215234" label="[21:52:34]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; yep woody headers (which are fairly big). It can use the in tree polyfill libc or glibc, it's just a case of linking the object code to the desired one.</span></div><div class="line" id="215302"><span class="nick" style="color:#6d2462"><a href="#215302" label="[21:53:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; There are lots of headers I should probably strip out.</span></div><div class="line" id="215439"><span class="nick" style="color:#6d2462"><a href="#215439" label="[21:54:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Checksums are disabled for mes (since it's not built) and tcc-0.9.26 (since for some reason they don't match). By the time it gets to the live-bootstrap tcc-0.9.27 the checksums are the same again.</span></div><div class="line" id="215527"><span class="nick" style="color:#6d2462"><a href="#215527" label="[21:55:27]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; During the bootstrap I use the polyfill libc obviously.</span></div><div class="line" id="215554"><span class="nick" style="color:#80b1d3"><a href="#215554" label="[21:55:54]">&lt;fossy&gt;</a></span><span class="message">ahhhh</span></div><div class="line" id="215559"><span class="nick" style="color:#80b1d3"><a href="#215559" label="[21:55:59]">&lt;fossy&gt;</a></span><span class="message">is the polyfill libc in M2libc directory?</span></div><div class="line" id="215609"><span class="nick" style="color:#80b1d3"><a href="#215609" label="[21:56:09]">&lt;fossy&gt;</a></span><span class="message">(in tcc_bootstrap_alt repo)</span></div><div class="line" id="220218"><span class="nick" style="color:#6d2462"><a href="#220218" label="[22:02:18]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; There are several polyfill libcs and they are a bit spread out/overlapping. I think my next step is probably a bit of writing documentation for the process.</span></div><div class="line" id="220249"><span class="nick" style="color:#6d2462"><a href="#220249" label="[22:02:49]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; eg <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_27/libc_boot4.c">https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_27/libc_boot4.c</a>  is one of the libc polyfills</span></div><div class="line" id="220314"><span class="nick" style="color:#6d2462"><a href="#220314" label="[22:03:14]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; and <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_js/elf_loader_support_cc_x86.c">https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_js/elf_loader_support_cc_x86.c</a> </span></div><div class="line" id="220335"><span class="nick" style="color:#6d2462"><a href="#220335" label="[22:03:35]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; and <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_10/libc_boot.c">https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_10/libc_boot.c</a> </span></div><div class="line" id="220339"><span class="nick" style="color:#6d2462"><a href="#220339" label="[22:03:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; etc etc etc</span></div><div class="line" id="220404"><span class="nick" style="color:#80b1d3"><a href="#220404" label="[22:04:04]">&lt;fossy&gt;</a></span><span class="message">okayyyy</span></div><div class="line" id="220411"><span class="nick" style="color:#6d2462"><a href="#220411" label="[22:04:11]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; I also need to cut them down and deduplicate.</span></div><div class="line" id="220512"><span class="nick" style="color:#6d2462"><a href="#220512" label="[22:05:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; libc_boot.c is the first elf version of libc used by the first elf version of tcc.</span></div><div class="line" id="220657"><span class="nick" style="color:#6d2462"><a href="#220657" label="[22:06:57]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; The elf version of tcc will also call across to elf_loader_support_cc_x86.c (and then to some of the stuff in M2libc for certain low level stuff/syscalls)</span></div><div class="line" id="220955"><span class="nick" style="color:#80b1d3"><a href="#220955" label="[22:09:55]">&lt;fossy&gt;</a></span><span class="message">regarding the PR itself, looks fairly sensible to me. there will need to be checksums done though</span></div><div class="line" id="221048"><span class="nick" style="color:#80b1d3"><a href="#221048" label="[22:10:48]">&lt;fossy&gt;</a></span><span class="message">it would also be nice if the tcc_bootstrap &amp; mes paths produced the same tcc binary at the end. i feel like that should be possible - and could already be the case - but then again, maybe not</span></div><div class="line" id="221330"><span class="nick" style="color:#6d2462"><a href="#221330" label="[22:13:30]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; I'm guessing it's probably some missing define somewhere. the 0.9.27 binary is identical, just not the 0.9.26 one. live-bootstrap ci checks all the checksums by default? If so, all the hashes after 0.9.26 are correct.</span></div><div class="line" id="222133"><span class="nick" style="color:#389600"><a href="#222133" label="[22:21:33]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: regarding: cp artifacts/tcc_27_boot_static.exe /usr/bin/tcc-boot0</span></div><div class="line" id="222148"><span class="nick" style="color:#389600"><a href="#222148" label="[22:21:48]">&lt;rickmasters&gt;</a></span><span class="message">where does artifacts/tcc_27_boot_static.exe come from?</span></div><div class="line" id="222242"><span class="nick" style="color:#80b1d3"><a href="#222242" label="[22:22:42]">&lt;fossy&gt;</a></span><span class="message">tcc_bootstrap_alt-0.1 should have checksums. also, past here, <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/407/files#diff-cc6e390ef115302dcd339b5d634107e16ad985d974300ad2b51732aa948a7484R385">https://github.com/fosslinux/live-bootstrap/pull/407/files#diff-cc6e390ef115302dcd339b5d634107e16ad985d974300ad2b51732aa948a7484R385</a>,  there is no checksum generation/validation for TCC_BOOTSTRAP_ALT=True, as both branches match it to False</span></div><div class="line" id="222257"><span class="nick" style="color:#80b1d3"><a href="#222257" label="[22:22:57]">&lt;fossy&gt;</a></span><span class="message">so currently tcc_bootstrap_alt mode is not protected by checksums</span></div><div class="line" id="222524"><span class="nick" style="color:#389600"><a href="#222524" label="[22:25:24]">&lt;rickmasters&gt;</a></span><span class="message">oh nevermind, I haven't looked at the new alt sources</span></div><div class="line" id="222638"><span class="nick" style="color:#389600"><a href="#222638" label="[22:26:38]">&lt;rickmasters&gt;</a></span><span class="message">the builds steps for tcc_27_boot_static.exe must be in there (?)</span></div><div class="line" id="223023"><span class="nick" style="color:#80b1d3"><a href="#223023" label="[22:30:23]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="223231"><span class="nick" style="color:#234e69"><a href="#223231" label="[22:32:31]">&lt;stikonas&gt;</a></span><span class="message">it might be that we need to do more rebuilds for them to produce same binary...</span></div><div class="line" id="223252"><span class="nick" style="color:#234e69"><a href="#223252" label="[22:32:52]">&lt;stikonas&gt;</a></span><span class="message">right now mes path has the minimum number of rebuilds until checksum stabilizes</span></div><div class="line" id="223311"><span class="nick" style="color:#234e69"><a href="#223311" label="[22:33:11]">&lt;stikonas&gt;</a></span><span class="message">which is just tcc-mes, tcc-boot0 tcc-boot1 and final tcc</span></div><div class="line" id="223331"><span class="nick" style="color:#6d2462"><a href="#223331" label="[22:33:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; rickmasters: <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_27/run_27_static.kaem#L22">https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/master/tcc_27/run_27_static.kaem#L22</a> </span></div><div class="line" id="223341"><span class="nick" style="color:#234e69"><a href="#223341" label="[22:33:41]">&lt;stikonas&gt;</a></span><span class="message">and also version of tcc 0.9.26 is a bit confusing, it's much closer to 0.9.27...</span></div><div class="line" id="223657"><span class="nick" style="color:#389600"><a href="#223657" label="[22:36:57]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: thanks. there is ... a lot more phases there than I was expecting. wow</span></div><div class="line" id="223740"><span class="nick" style="color:#6d2462"><a href="#223740" label="[22:37:40]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; fossy: ah I see, I didn't check the sha sums for tcc_bootstrap_alt in its pass1.kaem. I can add that in. Would that just be the sha256sum for tcc_27_boot_static.exe / /usr/bin/tcc-boot0 .</span></div><div class="line" id="223743"><span class="nick" style="color:#6d2462"><a href="#223743" label="[22:37:43]">&lt;matrix_bridge&gt;</a></span><span class="message">Just going to check if the sha256sums for the live-bootstrap version of &quot;tcc-0.9.26&quot; differ.</span></div><div class="line" id="223801"><span class="nick" style="color:#389600"><a href="#223801" label="[22:38:01]">&lt;rickmasters&gt;</a></span><span class="message">fossy: next problem with --kernel is that mkdir and mount of /proc before kexec were left out of the simplify overhaul.</span></div><div class="line" id="223813"><span class="nick" style="color:#389600"><a href="#223813" label="[22:38:13]">&lt;rickmasters&gt;</a></span><span class="message">fossy: kexec needs to read /proc/iomem</span></div><div class="line" id="223827"><span class="nick" style="color:#389600"><a href="#223827" label="[22:38:27]">&lt;rickmasters&gt;</a></span><span class="message">fossy: can you remember if there was any reason to remove the /proc stuff?</span></div><div class="line" id="223958"><span class="nick" style="color:#389600"><a href="#223958" label="[22:39:58]">&lt;rickmasters&gt;</a></span><span class="message">fossy: I can provide a PR for that. Unfortunately, there are checksum issues with tar-1.34 later on. So --kernel still won't be working yet.</span></div><div class="line" id="224748"><span class="nick" style="color:#80b1d3"><a href="#224748" label="[22:47:48]">&lt;fossy&gt;</a></span><span class="message">yes cosinusoidally, that is correct</span></div><div class="line" id="224940"><span class="nick" style="color:#80b1d3"><a href="#224940" label="[22:49:40]">&lt;fossy&gt;</a></span><span class="message">rickmasters: oh, mount of /proc is done in populate_device_nodes. (probably hsould change the name of that script). anyways a improve: populate_device_nodes should be added between build: util-linux-2.19.1 and jump: linux</span></div><div class="line" id="224943"><span class="nick" style="color:#80b1d3"><a href="#224943" label="[22:49:43]">&lt;fossy&gt;</a></span><span class="message">to fix that</span></div><div class="line" id="230149"><span class="nick" style="color:#389600"><a href="#230149" label="[23:01:49]">&lt;rickmasters&gt;</a></span><span class="message">fossy: ok, is right before linux ok? I'll test it first...</span></div><div class="line" id="230218"><span class="nick" style="color:#389600"><a href="#230218" label="[23:02:18]">&lt;rickmasters&gt;</a></span><span class="message">*right before jump: linux ?</span></div><div class="line" id="230629"><span class="nick" style="color:#80b1d3"><a href="#230629" label="[23:06:29]">&lt;fossy&gt;</a></span><span class="message">anywhere between</span></div><div class="line" id="230637"><span class="nick" style="color:#80b1d3"><a href="#230637" label="[23:06:37]">&lt;fossy&gt;</a></span><span class="message">right before linux should be ok</span></div><div class="line" id="231158"><span class="nick" style="color:#6d2462"><a href="#231158" label="[23:11:58]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; <a rel="nofollow" href="https://github.com/cosinusoidally/live-bootstrap/actions/runs/7494979437/job/20404096073#step:7:66572">https://github.com/cosinusoidally/live-bootstrap/actions/runs/7494979437/job/20404096073#step:7:66572</a>  interesting, /usr/bin/tcc* have the wrong hash in my branch for LB tcc &quot;0.9.26&quot; but the mes libc and libtcc1.a are right. I suspect a rebuilt of 0.9.26 with itself may make it converge.</span></div><div class="line" id="231411"><span class="nick" style="color:#80b1d3"><a href="#231411" label="[23:14:11]">&lt;fossy&gt;</a></span><span class="message">yes, i suspect similarly</span></div><br /></div></body></html>