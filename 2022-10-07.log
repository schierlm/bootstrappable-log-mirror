<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-10-07.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000001"><span class="nick" style="color:#389600"><a href="#000001" label="[00:00:01]">&lt;aggi&gt;</a></span><span class="message">and, who cares about this?</span></div><div class="line" id="000050"><span class="nick" style="color:#389600"><a href="#000050" label="[00:00:50]">&lt;aggi&gt;</a></span><span class="message">i mean, the benefits are obvious, and it's not some shallow promises of theirs: &quot;Minimal bootstrap dependencies&quot;</span></div><div class="line" id="000104"><span class="nick" style="color:#389600"><a href="#000104" label="[00:01:04]">&lt;aggi&gt;</a></span><span class="message">&quot;Fast builds that are 100% reproducible&quot;</span></div><div class="line" id="000122"><span class="nick" style="color:#389600"><a href="#000122" label="[00:01:22]">&lt;aggi&gt;</a></span><span class="message">&quot;ISO C conformant&quot;, cproc/qbe</span></div><div class="line" id="000213"><span class="nick" style="color:#8dd3c7"><a href="#000213" label="[00:02:13]">&lt;stikonas&gt;</a></span><span class="message">I'm not familiar with oasis linux, so can't comment...</span></div><div class="line" id="000236"><span class="nick" style="color:#389600"><a href="#000236" label="[00:02:36]">&lt;aggi&gt;</a></span><span class="message">GNU-buildsystem independent build/package-management!</span></div><div class="line" id="000248"><span class="nick" style="color:#389600"><a href="#000248" label="[00:02:48]">&lt;aggi&gt;</a></span><span class="message">but: &quot;This involves considerable up-front packaging cost&quot; yes, and that's not only problem</span></div><div class="line" id="000408"><span class="nick" style="color:#2e2a4a"><a href="#000408" label="[00:04:08]">&lt;muurkha&gt;</a></span><span class="message">abolish the guildsystem!  right to work!</span></div><div class="line" id="000445"><span class="nick" style="color:#389600"><a href="#000445" label="[00:04:45]">&lt;aggi&gt;</a></span><span class="message">well, currently i am tracking/patching 300(!!!) ebuilds already, to keep the gentoo profile for gcc47/c-only</span></div><div class="line" id="000502"><span class="nick" style="color:#389600"><a href="#000502" label="[00:05:02]">&lt;aggi&gt;</a></span><span class="message">i can't, and i don't want to move all this to oasis anyway</span></div><div class="line" id="000627"><span class="nick" style="color:#389600"><a href="#000627" label="[00:06:27]">&lt;aggi&gt;</a></span><span class="message">and, some unavoidable blockers won't be avoided anyway, unrelated to Oasis</span></div><div class="line" id="000630"><span class="nick" style="color:#8dd3c7"><a href="#000630" label="[00:06:30]">&lt;stikonas&gt;</a></span><span class="message">well, then don't move...</span></div><div class="line" id="000646"><span class="nick" style="color:#8dd3c7"><a href="#000646" label="[00:06:46]">&lt;stikonas&gt;</a></span><span class="message">it basically depends on what the goals of your project is</span></div><div class="line" id="000707"><span class="nick" style="color:#8dd3c7"><a href="#000707" label="[00:07:07]">&lt;stikonas&gt;</a></span><span class="message">what is the target audience, would they care what is the base, etc...</span></div><div class="line" id="000715"><span class="nick" style="color:#389600"><a href="#000715" label="[00:07:15]">&lt;aggi&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oasislinux/oasis">https://github.com/oasislinux/oasis</a> </span></div><div class="line" id="000740"><span class="nick" style="color:#389600"><a href="#000740" label="[00:07:40]">&lt;aggi&gt;</a></span><span class="message">it's not some specific project goals, it is minimum acceptance criteria, including a clean bootstrapping path</span></div><div class="line" id="000800"><span class="nick" style="color:#389600"><a href="#000800" label="[00:08:00]">&lt;aggi&gt;</a></span><span class="message">what are you working with? GUIX?</span></div><div class="line" id="000829"><span class="nick" style="color:#2e2a4a"><a href="#000829" label="[00:08:29]">&lt;muurkha&gt;</a></span><span class="message">a project's minimum acceptance criteria are among its goals</span></div><div class="line" id="001645"><span class="nick" style="color:#8dd3c7"><a href="#001645" label="[00:16:45]">&lt;stikonas&gt;</a></span><span class="message">I'm on Gentoo</span></div><div class="line" id="012320"><span class="nick" style="color:#8dd3c7"><a href="#012320" label="[01:23:20]">&lt;stikonas&gt;</a></span><span class="message">oriansj: if I'm reading it correctly (I'm not sure yet), SizeOfRawData might have to be multiple of 512, though I'm confused why it worked for earlier binaries...</span></div><div class="line" id="012336"><span class="nick" style="color:#8dd3c7"><a href="#012336" label="[01:23:36]">&lt;stikonas&gt;</a></span><span class="message">maybe there is some limit, i.e. 4 KiB under which it doesn't matter</span></div><div class="line" id="012403"><span class="nick" style="color:#8dd3c7"><a href="#012403" label="[01:24:03]">&lt;stikonas&gt;</a></span><span class="message">e.g. if it fits in one page</span></div><div class="line" id="013707"><span class="nick" style="color:#8dd3c7"><a href="#013707" label="[01:37:07]">&lt;stikonas&gt;</a></span><span class="message">oh, we probably need to deal with other fields, e.g. SizeOfImage</span></div><div class="line" id="013720"><span class="nick" style="color:#8dd3c7"><a href="#013720" label="[01:37:20]">&lt;stikonas&gt;</a></span><span class="message">M0.efi would fit in current value</span></div><div class="line" id="015136"><span class="nick" style="color:#8dd3c7"><a href="#015136" label="[01:51:36]">&lt;stikonas&gt;</a></span><span class="message">ok, I can increase SizeOfImage field in PE header to 1MiB and it seems to work</span></div><div class="line" id="022350"><span class="nick" style="color:#80b1d3"><a href="#022350" label="[02:23:50]">&lt;oriansj&gt;</a></span><span class="message">stikonas: probably good enough until after M1+blood-elf is properly bootstrapped; then we might need to figure out the correct solution.</span></div><div class="line" id="022419"><span class="nick" style="color:#8dd3c7"><a href="#022419" label="[02:24:19]">&lt;stikonas&gt;</a></span><span class="message">is blood elf even relevant?</span></div><div class="line" id="022432"><span class="nick" style="color:#8dd3c7"><a href="#022432" label="[02:24:32]">&lt;stikonas&gt;</a></span><span class="message">we don't have debugger there?</span></div><div class="line" id="022512"><span class="nick" style="color:#80b1d3"><a href="#022512" label="[02:25:12]">&lt;oriansj&gt;</a></span><span class="message">stikonas: but it can be used to generate info that we can't hard-code in the header</span></div><div class="line" id="022541"><span class="nick" style="color:#80b1d3"><a href="#022541" label="[02:25:41]">&lt;oriansj&gt;</a></span><span class="message">which in the case of UEFI might end up being most of the header</span></div><div class="line" id="022549"><span class="nick" style="color:#8dd3c7"><a href="#022549" label="[02:25:49]">&lt;stikonas&gt;</a></span><span class="message">yeah, possibly, I don't have that good recollection of how blood-elf works</span></div><div class="line" id="022607"><span class="nick" style="color:#8dd3c7"><a href="#022607" label="[02:26:07]">&lt;stikonas&gt;</a></span><span class="message">but I guess it's just smarter header/footer generator</span></div><div class="line" id="022622"><span class="nick" style="color:#80b1d3"><a href="#022622" label="[02:26:22]">&lt;oriansj&gt;</a></span><span class="message">basically, yeah</span></div><div class="line" id="023105"><span class="nick" style="color:#8dd3c7"><a href="#023105" label="[02:31:05]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think I have some bugs in cc_amd64.M1</span></div><div class="line" id="023124"><span class="nick" style="color:#8dd3c7"><a href="#023124" label="[02:31:24]">&lt;stikonas&gt;</a></span><span class="message">builds simple stuff but gets stuck on M2-0.c</span></div><div class="line" id="023136"><span class="nick" style="color:#8dd3c7"><a href="#023136" label="[02:31:36]">&lt;stikonas&gt;</a></span><span class="message">so I need to go over the file once more...</span></div><div class="line" id="025006"><span class="nick" style="color:#80b1d3"><a href="#025006" label="[02:50:06]">&lt;oriansj&gt;</a></span><span class="message">well cc_* doesn't have any bit that loops without moving forward a token forward; so it should never get stuck but bail quickly on bad input</span></div><div class="line" id="025036"><span class="nick" style="color:#80b1d3"><a href="#025036" label="[02:50:36]">&lt;oriansj&gt;</a></span><span class="message">so only syscalls can stall its progress</span></div><div class="line" id="025036"><span class="nick" style="color:#8dd3c7"><a href="#025036" label="[02:50:36]">&lt;stikonas&gt;</a></span><span class="message">well, if all assembly is correct...</span></div><div class="line" id="025044"><span class="nick" style="color:#80b1d3"><a href="#025044" label="[02:50:44]">&lt;oriansj&gt;</a></span><span class="message">fair</span></div><div class="line" id="025057"><span class="nick" style="color:#8dd3c7"><a href="#025057" label="[02:50:57]">&lt;stikonas&gt;</a></span><span class="message">we can still jump to unexpected position</span></div><div class="line" id="025104"><span class="nick" style="color:#8dd3c7"><a href="#025104" label="[02:51:04]">&lt;stikonas&gt;</a></span><span class="message">and then it's basically undefined behaviour</span></div><div class="line" id="025115"><span class="nick" style="color:#8dd3c7"><a href="#025115" label="[02:51:15]">&lt;stikonas&gt;</a></span><span class="message">I actually found a couple of issues, but there are probably more</span></div><div class="line" id="025126"><span class="nick" style="color:#8dd3c7"><a href="#025126" label="[02:51:26]">&lt;stikonas&gt;</a></span><span class="message">there was still one commented out &quot;ret&quot;</span></div><div class="line" id="025135"><span class="nick" style="color:#8dd3c7"><a href="#025135" label="[02:51:35]">&lt;stikonas&gt;</a></span><span class="message">so we were falling through to another function</span></div><div class="line" id="025213"><span class="nick" style="color:#8dd3c7"><a href="#025213" label="[02:52:13]">&lt;stikonas&gt;</a></span><span class="message">(which would of course cause bad stack and on next return it's jump to somewhere &quot;random&quot;)</span></div><div class="line" id="025327"><span class="nick" style="color:#80b1d3"><a href="#025327" label="[02:53:27]">&lt;oriansj&gt;</a></span><span class="message">ooh, unbalanced stack issues are the worst to debug</span></div><div class="line" id="025343"><span class="nick" style="color:#8dd3c7"><a href="#025343" label="[02:53:43]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll just go over the file once more now paying more attention</span></div><div class="line" id="025354"><span class="nick" style="color:#8dd3c7"><a href="#025354" label="[02:53:54]">&lt;stikonas&gt;</a></span><span class="message">rather than quickly machanically porting GAS to M1</span></div><div class="line" id="025416"><span class="nick" style="color:#8dd3c7"><a href="#025416" label="[02:54:16]">&lt;stikonas&gt;</a></span><span class="message">I'm sure this will be solved...</span></div><div class="line" id="025503"><span class="nick" style="color:#8dd3c7"><a href="#025503" label="[02:55:03]">&lt;stikonas&gt;</a></span><span class="message">that first issue where UEFI refused to start cc_amd64.efi was scarier initially, but luckily I've figured out which PE field was causing the problem</span></div><div class="line" id="025633"><span class="nick" style="color:#80b1d3"><a href="#025633" label="[02:56:33]">&lt;oriansj&gt;</a></span><span class="message">UEFI just seems like the worst possible development environment</span></div><div class="line" id="025843"><span class="nick" style="color:#8dd3c7"><a href="#025843" label="[02:58:43]">&lt;stikonas&gt;</a></span><span class="message">well, it's not a full scale OS...</span></div><div class="line" id="025853"><span class="nick" style="color:#8dd3c7"><a href="#025853" label="[02:58:53]">&lt;stikonas&gt;</a></span><span class="message">I think one can wire in gdb, but it's not trivial</span></div><div class="line" id="025905"><span class="nick" style="color:#8dd3c7"><a href="#025905" label="[02:59:05]">&lt;stikonas&gt;</a></span><span class="message">though maybe it would work easier for us since we are fully position independent</span></div><div class="line" id="025935"><span class="nick" style="color:#8dd3c7"><a href="#025935" label="[02:59:35]">&lt;stikonas&gt;</a></span><span class="message">there is something here: <a rel="nofollow" href="https://wiki.osdev.org/Debugging_UEFI_applications_with_GDB">https://wiki.osdev.org/Debugging_UEFI_applications_with_GDB</a> </span></div><div class="line" id="025939"><span class="nick" style="color:#8dd3c7"><a href="#025939" label="[02:59:39]">&lt;stikonas&gt;</a></span><span class="message">but so far I avoided it</span></div><div class="line" id="025950"><span class="nick" style="color:#8dd3c7"><a href="#025950" label="[02:59:50]">&lt;stikonas&gt;</a></span><span class="message">and I don't think I'll need it here either</span></div><div class="line" id="030047"><span class="nick" style="color:#80b1d3"><a href="#030047" label="[03:00:47]">&lt;oriansj&gt;</a></span><span class="message">well, you are quite capable so I don't doubt that.</span></div><div class="line" id="040730"><span class="nick" style="color:#80b1d3"><a href="#040730" label="[04:07:30]">&lt;oriansj&gt;</a></span><span class="message">ric342[m]: you probably will also find stikonas's UEFI bootstrap work interesting <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi">https://git.stikonas.eu/andrius/stage0-uefi</a> </span></div><div class="line" id="044306"><span class="nick" style="color:#2e2a4a"><a href="#044306" label="[04:43:06]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/woodrush/lambda-8cc">https://github.com/woodrush/lambda-8cc</a>  &quot;lambda-8cc is an x86 C compiler written as a monolithic closed untyped lambda calculus term.&quot;</span></div><div class="line" id="050853"><span class="nick" style="color:#80b1d3"><a href="#050853" label="[05:08:53]">&lt;oriansj&gt;</a></span><span class="message">neat</span></div><div class="line" id="051118"><span class="nick" style="color:#80b1d3"><a href="#051118" label="[05:11:18]">&lt;oriansj&gt;</a></span><span class="message">hard bet that it is a generated string</span></div><div class="line" id="051559"><span class="nick" style="color:#2e2a4a"><a href="#051559" label="[05:15:59]">&lt;muurkha&gt;</a></span><span class="message">yeah, I don't think he typed 18000 pages of lambda-calculus by hand</span></div><div class="line" id="051617"><span class="nick" style="color:#2e2a4a"><a href="#051617" label="[05:16:17]">&lt;muurkha&gt;</a></span><span class="message">I think he modified Rui Ueyama's 8cc to target the lambda calculus</span></div><div class="line" id="051627"><span class="nick" style="color:#2e2a4a"><a href="#051627" label="[05:16:27]">&lt;muurkha&gt;</a></span><span class="message">and used it to compile itself</span></div><div class="line" id="052715"><span class="nick" style="color:#80b1d3"><a href="#052715" label="[05:27:15]">&lt;oriansj&gt;</a></span><span class="message">and then didn't provide that source code</span></div><div class="line" id="053158"><span class="nick" style="color:#2e2a4a"><a href="#053158" label="[05:31:58]">&lt;muurkha&gt;</a></span><span class="message">didn't he?</span></div><div class="line" id="053226"><span class="nick" style="color:#2e2a4a"><a href="#053226" label="[05:32:26]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/woodrush/lambda-8cc/blob/main/details.md">https://github.com/woodrush/lambda-8cc/blob/main/details.md</a> </span></div><div class="line" id="053836"><span class="nick" style="color:#80b1d3"><a href="#053836" label="[05:38:36]">&lt;oriansj&gt;</a></span><span class="message">I just am not seeing it</span></div><div class="line" id="140155"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o oriansj</span></div><div class="line" id="164841"><span class="nick" style="color:#6d2462"><a href="#164841" label="[16:48:41]">&lt;jbowen&gt;</a></span><span class="message">The source is in that repo; it looks like the 18k pages were generated with <a rel="nofollow" href="https://github.com/woodrush/lambdacraft">https://github.com/woodrush/lambdacraft</a> </span></div><div class="line" id="192125"><span class="nick" style="color:#234e69"><a href="#192125" label="[19:21:25]">&lt;stikonas[m]&gt;</a></span><span class="message">but then what's the point of comitting 18k pages to git... Just push the script that generates it...</span></div><div class="line" id="192750"><span class="nick" style="color:#2e2a4a"><a href="#192750" label="[19:27:50]">&lt;muurkha&gt;</a></span><span class="message">indeed, committing build artifacts to source control is not a best practice</span></div><div class="line" id="192846"><span class="nick" style="color:#2e2a4a"><a href="#192846" label="[19:28:46]">&lt;muurkha&gt;</a></span><span class="message">but there are some features of github that incentivize it</span></div><div class="line" id="203751"><span class="nick" style="color:#80b1d3"><a href="#203751" label="[20:37:51]">&lt;oriansj&gt;</a></span><span class="message">it is a massively abuse encouraging metric</span></div><div class="line" id="212748"><span class="nick" style="color:#2e2a4a"><a href="#212748" label="[21:27:48]">&lt;muurkha&gt;</a></span><span class="message">what is?</span></div><div class="line" id="214217"><span class="nick" style="color:#6d2462"><a href="#214217" label="[21:42:17]">&lt;jbowen&gt;</a></span><span class="message">I assume they meant having a lot of changed lines on your profile</span></div><div class="line" id="214324"><span class="nick" style="color:#2e2a4a"><a href="#214324" label="[21:43:24]">&lt;muurkha&gt;</a></span><span class="message">could be?  is that metric published somewhere?</span></div><div class="line" id="214809"><span class="nick" style="color:#8dd3c7"><a href="#214809" label="[21:48:09]">&lt;stikonas&gt;</a></span><span class="message">it is definitely visible per project</span></div><div class="line" id="214824"><span class="nick" style="color:#8dd3c7"><a href="#214824" label="[21:48:24]">&lt;stikonas&gt;</a></span><span class="message">but not sure about aggregate throught all repos that you have contributed to</span></div><div class="line" id="222934"><span class="nick" style="color:#8dd3c7"><a href="#222934" label="[22:29:34]">&lt;stikonas&gt;</a></span><span class="message">oriansj: if I remember correctly, M0 doesn't have escapes? Why do we have \\ in <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-amd64/blob/8d727450b47a6978591d370307f74568acf8e6df/NASM/cc_amd64.S#L3583">https://github.com/oriansj/stage0-posix-amd64/blob/8d727450b47a6978591d370307f74568acf8e6df/NASM/cc_amd64.S#L3583</a> </span></div><div class="line" id="222946"><span class="nick" style="color:#8dd3c7"><a href="#222946" label="[22:29:46]">&lt;stikonas&gt;</a></span><span class="message">should it be single \ ?</span></div><div class="line" id="223446"><span class="nick" style="color:#80b1d3"><a href="#223446" label="[22:34:46]">&lt;oriansj&gt;</a></span><span class="message">stikonas: that is correct M0 doesn't have escapes but NASM does</span></div><div class="line" id="223521"><span class="nick" style="color:#8dd3c7"><a href="#223521" label="[22:35:21]">&lt;stikonas&gt;</a></span><span class="message">oh, let me check the other file, I think it's there too</span></div><div class="line" id="223543"><span class="nick" style="color:#8dd3c7"><a href="#223543" label="[22:35:43]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-amd64/blob/8d727450b47a6978591d370307f74568acf8e6df/cc_amd64.M1#L4193">https://github.com/oriansj/stage0-posix-amd64/blob/8d727450b47a6978591d370307f74568acf8e6df/cc_amd64.M1#L4193</a> </span></div><div class="line" id="223544"><span class="nick" style="color:#8dd3c7"><a href="#223544" label="[22:35:44]">&lt;stikonas&gt;</a></span><span class="message">I guess slipped in via copy-paste</span></div><div class="line" id="223558"><span class="nick" style="color:#8dd3c7"><a href="#223558" label="[22:35:58]">&lt;stikonas&gt;</a></span><span class="message">I guess safe to remove then</span></div><div class="line" id="223606"><span class="nick" style="color:#8dd3c7"><a href="#223606" label="[22:36:06]">&lt;stikonas&gt;</a></span><span class="message">though it should be harmless</span></div><div class="line" id="223655"><span class="nick" style="color:#80b1d3"><a href="#223655" label="[22:36:55]">&lt;oriansj&gt;</a></span><span class="message">yeah, it would just cause the char \ to be checked twice</span></div><div class="line" id="224321"><span class="nick" style="color:#80b1d3"><a href="#224321" label="[22:43:21]">&lt;oriansj&gt;</a></span><span class="message">but yeah that can be removed to save a couple cycles</span></div><div class="line" id="224610"><span class="nick" style="color:#8dd3c7"><a href="#224610" label="[22:46:10]">&lt;stikonas&gt;</a></span><span class="message">anyway, first I need to find remaining bugs in UEFI version of cc_amd64.M1</span></div><div class="line" id="224632"><span class="nick" style="color:#8dd3c7"><a href="#224632" label="[22:46:32]">&lt;stikonas&gt;</a></span><span class="message">found a few small issues, but there is at least 1 more</span></div><div class="line" id="231302"><span class="nick" style="color:#80b1d3"><a href="#231302" label="[23:13:02]">&lt;oriansj&gt;</a></span><span class="message">muurkha: I was thinking about this post: <a rel="nofollow" href="http://howicode.nateeag.com/data-preservation.html">http://howicode.nateeag.com/data-preservation.html</a>  and there might be a way to leverage stage0 (ported to a very minimal architecture which could be described in a few pages) to enable future data recovery from media provided about 30-50MB of storage could be ensured.</span></div><div class="line" id="231424"><span class="nick" style="color:#80b1d3"><a href="#231424" label="[23:14:24]">&lt;oriansj&gt;</a></span><span class="message">(although about 834M would be needed to preserve the full contents of live-bootstrap)</span></div><br /></div></body></html>