<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-07-20.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000602"><span class="nick" style="color:#389600"><a href="#000602" label="[00:06:02]">&lt;kerravon&gt;</a></span><span class="message">hi guys - some time ago we discussed CDs and briefly touched on paper tape</span></div><div class="line" id="000635"><span class="nick" style="color:#389600"><a href="#000635" label="[00:06:35]">&lt;kerravon&gt;</a></span><span class="message">it has just come to my attention that IBM mainframes in the 1960s also supported paper tape - not just cards</span></div><div class="line" id="000711"><span class="nick" style="color:#389600"><a href="#000711" label="[00:07:11]">&lt;kerravon&gt;</a></span><span class="message">i don't think it was very common, but did exist</span></div><div class="line" id="000824"><span class="nick" style="color:#389600"><a href="#000824" label="[00:08:24]">&lt;kerravon&gt;</a></span><span class="message">so - i have a mainframe OS (z/PDOS), which is also capable of running on S/370</span></div><div class="line" id="000851"><span class="nick" style="color:#389600"><a href="#000851" label="[00:08:51]">&lt;kerravon&gt;</a></span><span class="message">and i have ported a flavor of &quot;Sector C&quot; to that</span></div><div class="line" id="000909"><span class="nick" style="color:#389600"><a href="#000909" label="[00:09:09]">&lt;kerravon&gt;</a></span><span class="message">and i'm just trying to clarify an end goal</span></div><div class="line" id="000951"><span class="nick" style="color:#389600"><a href="#000951" label="[00:09:51]">&lt;kerravon&gt;</a></span><span class="message">i believe what i want is a paper tape containing some bootstrap programs including the Sector C variant, plus source code, plus compiled executables</span></div><div class="line" id="001023"><span class="nick" style="color:#389600"><a href="#001023" label="[00:10:23]">&lt;kerravon&gt;</a></span><span class="message">and the idea would be to manually inspect the initial essential binaries in machine code (i haven't yet determined what that would be)</span></div><div class="line" id="001045"><span class="nick" style="color:#8dd3c7"><a href="#001045" label="[00:10:45]">&lt;stikonas&gt;</a></span><span class="message">nektro: lua tarball just seems to be autotools</span></div><div class="line" id="001057"><span class="nick" style="color:#389600"><a href="#001057" label="[00:10:57]">&lt;kerravon&gt;</a></span><span class="message">and then you IPL (boot) from punched tape (we believe that is possible - there is no technical reason why it shouldn't be)</span></div><div class="line" id="001145"><span class="nick" style="color:#8dd3c7"><a href="#001145" label="[00:11:45]">&lt;stikonas&gt;</a></span><span class="message">so standard configure</span></div><div class="line" id="001149"><span class="nick" style="color:#389600"><a href="#001149" label="[00:11:49]">&lt;kerravon&gt;</a></span><span class="message">and then I assume there needs to be an option from the user - this option could be given by a separate device (card reader) or terminal or maybe a bit of preceding paper tape</span></div><div class="line" id="001156"><span class="nick" style="color:#8dd3c7"><a href="#001156" label="[00:11:56]">&lt;stikonas&gt;</a></span><span class="message">but git repo is indeed incomplete</span></div><div class="line" id="001203"><span class="nick" style="color:#8dd3c7"><a href="#001203" label="[00:12:03]">&lt;stikonas&gt;</a></span><span class="message">only src directory is in it</span></div><div class="line" id="001306"><span class="nick" style="color:#389600"><a href="#001306" label="[00:13:06]">&lt;kerravon&gt;</a></span><span class="message">and the first option that should be chosen is to &quot;print source&quot;, so the bootstrap program jumps to each pre-calculated offset on the paper tape and prints the source code</span></div><div class="line" id="001322"><span class="nick" style="color:#389600"><a href="#001322" label="[00:13:22]">&lt;kerravon&gt;</a></span><span class="message">so this then needs to be read to confirm it is as expected</span></div><div class="line" id="001402"><span class="nick" style="color:#389600"><a href="#001402" label="[00:14:02]">&lt;kerravon&gt;</a></span><span class="message">and then you IPL again and choose the option to build - so all the source code gets compiled, and byte-verified against the executables already on the tape - and it should match</span></div><div class="line" id="001436"><span class="nick" style="color:#389600"><a href="#001436" label="[00:14:36]">&lt;kerravon&gt;</a></span><span class="message">and either before, during or after, the contents of the paper tape are put onto a disk so that you can IPL from that instead</span></div><div class="line" id="001548"><span class="nick" style="color:#389600"><a href="#001548" label="[00:15:48]">&lt;kerravon&gt;</a></span><span class="message">there are no device drivers involved here - IBM mainframe peripherals are &quot;intelligent&quot; - although i'm not sure how much intelligence there was in a punch tape reader from the 1960s</span></div><div class="line" id="001646"><span class="nick" style="color:#389600"><a href="#001646" label="[00:16:46]">&lt;kerravon&gt;</a></span><span class="message">so i'm thinking this is a good starting point to &quot;rebuild the world securely&quot;</span></div><div class="line" id="001700"><span class="nick" style="color:#389600"><a href="#001700" label="[00:17:00]">&lt;kerravon&gt;</a></span><span class="message">it shouldn't be a problem emulating any of this</span></div><div class="line" id="001718"><span class="nick" style="color:#389600"><a href="#001718" label="[00:17:18]">&lt;kerravon&gt;</a></span><span class="message">not sure how feasible it is to reproduce the hardware of the 1960s</span></div><div class="line" id="001748"><span class="nick" style="color:#389600"><a href="#001748" label="[00:17:48]">&lt;kerravon&gt;</a></span><span class="message">or do something similar with a CD</span></div><div class="line" id="001827"><span class="nick" style="color:#389600"><a href="#001827" label="[00:18:27]">&lt;kerravon&gt;</a></span><span class="message">does that process sound correct though - first pass is to just print the source code on the paper tape?</span></div><div class="line" id="001836"><span class="nick" style="color:#389600"><a href="#001836" label="[00:18:36]">&lt;kerravon&gt;</a></span><span class="message">to a real physical printer</span></div><div class="line" id="001928"><span class="nick" style="color:#389600"><a href="#001928" label="[00:19:28]">&lt;kerravon&gt;</a></span><span class="message">i've never used paper tape, but i am disappointed that options have to come from another device or stuff around with another piece of paper</span></div><div class="line" id="002018"><span class="nick" style="color:#389600"><a href="#002018" label="[00:20:18]">&lt;kerravon&gt;</a></span><span class="message">maybe it could be time-based instead? if you IPL in the first half an hour of an hour, it does the print option</span></div><div class="line" id="002029"><span class="nick" style="color:#389600"><a href="#002029" label="[00:20:29]">&lt;kerravon&gt;</a></span><span class="message">otherwise it does the auto-build</span></div><div class="line" id="002047"><span class="nick" style="color:#389600"><a href="#002047" label="[00:20:47]">&lt;kerravon&gt;</a></span><span class="message">and there's no typing involved in any of this</span></div><div class="line" id="002125"><span class="nick" style="color:#389600"><a href="#002125" label="[00:21:25]">&lt;kerravon&gt;</a></span><span class="message">i guess if the printer device number is being hardcoded, you may as well hardcode the device number of a card reader</span></div><div class="line" id="002131"><span class="nick" style="color:#389600"><a href="#002131" label="[00:21:31]">&lt;kerravon&gt;</a></span><span class="message">so get the options from a card</span></div><div class="line" id="002201"><span class="nick" style="color:#389600"><a href="#002201" label="[00:22:01]">&lt;kerravon&gt;</a></span><span class="message">the card reader, card punch and printer are at well-defined device numbers anyway (00c, 00d, 00e)</span></div><div class="line" id="003059"><span class="nick" style="color:#389600"><a href="#003059" label="[00:30:59]">&lt;kerravon&gt;</a></span><span class="message">so my questions are:</span></div><div class="line" id="003116"><span class="nick" style="color:#389600"><a href="#003116" label="[00:31:16]">&lt;kerravon&gt;</a></span><span class="message">1. is that a good procedure?</span></div><div class="line" id="003217"><span class="nick" style="color:#389600"><a href="#003217" label="[00:32:17]">&lt;kerravon&gt;</a></span><span class="message">2. is it possible to build a paper tape reader today? they've had them for centuries</span></div><div class="line" id="004925"><span class="nick" style="color:#389600"><a href="#004925" label="[00:49:25]">&lt;kerravon&gt;</a></span><span class="message">oh - also, is it possible to make &quot;paper&quot; tape out of something more durable - the plastic that was mentioned earlier as being possibly suitable for cards</span></div><div class="line" id="004936"><span class="nick" style="color:#389600"><a href="#004936" label="[00:49:36]">&lt;kerravon&gt;</a></span><span class="message">tape needs to be flexible, unlike cards</span></div><div class="line" id="013901"><span class="nick" style="color:#2e2a4a"><a href="#013901" label="[01:39:01]">&lt;oriansj&gt;</a></span><span class="message">kerravon: well it would be more secure if the process that builds the source code just includes an echo in the reader function (so that everything the reader sees is written to output for audit and review) thus making it impossible for the build process to see anything that isn't also output.</span></div><div class="line" id="015054"><span class="nick" style="color:#8dd3c7"><a href="#015054" label="[01:50:54]">&lt;stikonas&gt;</a></span><span class="message">oriansj: any chance you would have riscv64 version of hex2 (from mescc-tools not assembly version)</span></div><div class="line" id="015142"><span class="nick" style="color:#8dd3c7"><a href="#015142" label="[01:51:42]">&lt;stikonas&gt;</a></span><span class="message">I'm trying to investigate why qemu upgrade broke stage0-posix-riscv64...</span></div><div class="line" id="015150"><span class="nick" style="color:#8dd3c7"><a href="#015150" label="[01:51:50]">&lt;stikonas&gt;</a></span><span class="message">and I have a theory but it's not confirmed yet</span></div><div class="line" id="015215"><span class="nick" style="color:#8dd3c7"><a href="#015215" label="[01:52:15]">&lt;stikonas&gt;</a></span><span class="message">it might be due to us not allocating memory...</span></div><div class="line" id="015338"><span class="nick" style="color:#6b8072"><a href="#015338" label="[01:53:38]">&lt;vagrantc&gt;</a></span><span class="message">muurkha: i haven't dug up the old references to the reproducible toolchains from the 90s ... it was never much detail, but at least find the names</span></div><div class="line" id="015351"><span class="nick" style="color:#8dd3c7"><a href="#015351" label="[01:53:51]">&lt;stikonas&gt;</a></span><span class="message">(possibly brk location changed and there isn't enough space for unallocated storage that we might have used</span></div><div class="line" id="015408"><span class="nick" style="color:#8dd3c7"><a href="#015408" label="[01:54:08]">&lt;stikonas&gt;</a></span><span class="message">(to store jump_table)</span></div><div class="line" id="021317"><span class="nick" style="color:#8dd3c7"><a href="#021317" label="[02:13:17]">&lt;stikonas&gt;</a></span><span class="message">hmm, actually somehow scratch is located in the middle of brk section...</span></div><div class="line" id="021326"><span class="nick" style="color:#8dd3c7"><a href="#021326" label="[02:13:26]">&lt;stikonas&gt;</a></span><span class="message">that is very strange...</span></div><div class="line" id="021647"><span class="nick" style="color:#8dd3c7"><a href="#021647" label="[02:16:47]">&lt;stikonas&gt;</a></span><span class="message">I think I have a workaround now...</span></div><div class="line" id="021700"><span class="nick" style="color:#8dd3c7"><a href="#021700" label="[02:17:00]">&lt;stikonas&gt;</a></span><span class="message">just skip some memory after brk allocation</span></div><div class="line" id="021707"><span class="nick" style="color:#8dd3c7"><a href="#021707" label="[02:17:07]">&lt;stikonas&gt;</a></span><span class="message">hmm, that's very ugly though...</span></div><div class="line" id="021725"><span class="nick" style="color:#8dd3c7"><a href="#021725" label="[02:17:25]">&lt;stikonas&gt;</a></span><span class="message">and not sure if further programs will also need this</span></div><div class="line" id="022916"><span class="nick" style="color:#8dd3c7"><a href="#022916" label="[02:29:16]">&lt;stikonas&gt;</a></span><span class="message">well, I have a workaround for hex2 now, but M0 probably has a similar problem</span></div><div class="line" id="022956"><span class="nick" style="color:#389600"><a href="#022956" label="[02:29:56]">&lt;kerravon&gt;</a></span><span class="message">oriansj - surely a copy of the card deck is entirely useless? you already have that</span></div><div class="line" id="023051"><span class="nick" style="color:#389600"><a href="#023051" label="[02:30:51]">&lt;kerravon&gt;</a></span><span class="message">it's the source code that needs to be printed out for review</span></div><div class="line" id="023056"><span class="nick" style="color:#389600"><a href="#023056" label="[02:30:56]">&lt;kerravon&gt;</a></span><span class="message">the binary can be auto-checked</span></div><div class="line" id="023122"><span class="nick" style="color:#8dd3c7"><a href="#023122" label="[02:31:22]">&lt;stikonas&gt;</a></span><span class="message">(hex2 workaround: <a rel="nofollow" href="https://paste.debian.net/1286390/">https://paste.debian.net/1286390/</a>) </span></div><div class="line" id="023125"><span class="nick" style="color:#389600"><a href="#023125" label="[02:31:25]">&lt;kerravon&gt;</a></span><span class="message">(except for the very first bit)</span></div><div class="line" id="030036"><span class="nick" style="color:#80b1d3"><a href="#030036" label="[03:00:36]">&lt;muurkha&gt;</a></span><span class="message">vagrantc: I talked to a couple of Cygnus people from the 90s, but they couldn't remember the GNU toolchain being reproducible in that way</span></div><div class="line" id="094753"><span class="nick" style="color:#6d2462"><a href="#094753" label="[09:47:53]">&lt;h01ger&gt;</a></span><span class="message">muurkha: <a rel="nofollow" href="https://lists.reproducible-builds.org/pipermail/rb-general/2017-January/000309.html">https://lists.reproducible-builds.org/pipermail/rb-general/2017-January/000309.html</a>  (via <a rel="nofollow" href="https://reproducible-builds.org/docs/history/">https://reproducible-builds.org/docs/history/</a>  which sadly is incomplete on recent years)</span></div><div class="line" id="100347"><span class="nick" style="color:#80b1d3"><a href="#100347" label="[10:03:47]">&lt;muurkha&gt;</a></span><span class="message">thank you h01ger!</span></div><div class="line" id="101034"><span class="nick" style="color:#6d2462"><a href="#101034" label="[10:10:34]">&lt;h01ger&gt;</a></span><span class="message">:)</span></div><div class="line" id="122038"><span class="nick" style="color:#234e69"><a href="#122038" label="[12:20:38]">&lt;stikonas[m]&gt;</a></span><span class="message">well, even if they couldn't remember GNU toolchain being reproducible, it might have been</span></div><div class="line" id="122126"><span class="nick" style="color:#234e69"><a href="#122126" label="[12:21:26]">&lt;stikonas[m]&gt;</a></span><span class="message">at least 10 years later GNU software was mostly reproducible</span></div><div class="line" id="133058"><span class="nick" style="color:#2e2a4a"><a href="#133058" label="[13:30:58]">&lt;oriansj&gt;</a></span><span class="message">stikonas: yes one built by gcc and another built by M2-Planet. Could it be classified as a Qemu bug? as the code did work on a real machine (if I remember correctly)</span></div><div class="line" id="133140"><span class="nick" style="color:#8dd3c7"><a href="#133140" label="[13:31:40]">&lt;stikonas&gt;</a></span><span class="message">oriansj: it is probably a qemu bug</span></div><div class="line" id="133146"><span class="nick" style="color:#8dd3c7"><a href="#133146" label="[13:31:46]">&lt;stikonas&gt;</a></span><span class="message">have you seen my workaround for hex2?</span></div><div class="line" id="133156"><span class="nick" style="color:#8dd3c7"><a href="#133156" label="[13:31:56]">&lt;stikonas&gt;</a></span><span class="message">so .data and brk were intersecting</span></div><div class="line" id="133210"><span class="nick" style="color:#8dd3c7"><a href="#133210" label="[13:32:10]">&lt;stikonas&gt;</a></span><span class="message">I'll have to apply something similar to M1</span></div><div class="line" id="133215"><span class="nick" style="color:#8dd3c7"><a href="#133215" label="[13:32:15]">&lt;stikonas&gt;</a></span><span class="message">and probably higher up...</span></div><div class="line" id="133228"><span class="nick" style="color:#8dd3c7"><a href="#133228" label="[13:32:28]">&lt;stikonas&gt;</a></span><span class="message">M2libc</span></div><div class="line" id="133233"><span class="nick" style="color:#8dd3c7"><a href="#133233" label="[13:32:33]">&lt;stikonas&gt;</a></span><span class="message">maybe mes libc too</span></div><div class="line" id="133350"><span class="nick" style="color:#234e69"><a href="#133350" label="[13:33:50]">&lt;stikonas[m]&gt;</a></span><span class="message">In general I think qemu doesn't like brk usage</span></div><div class="line" id="133353"><span class="nick" style="color:#2e2a4a"><a href="#133353" label="[13:33:53]">&lt;oriansj&gt;</a></span><span class="message">well we don't have a .data segment</span></div><div class="line" id="133435"><span class="nick" style="color:#234e69"><a href="#133435" label="[13:34:35]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, I was testing with GAS prototype too</span></div><div class="line" id="133454"><span class="nick" style="color:#234e69"><a href="#133454" label="[13:34:54]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe on real hex2 .text intersects brk</span></div><div class="line" id="133509"><span class="nick" style="color:#234e69"><a href="#133509" label="[13:35:09]">&lt;stikonas[m]&gt;</a></span><span class="message">What qemu version do you have?</span></div><div class="line" id="133512"><span class="nick" style="color:#2e2a4a"><a href="#133512" label="[13:35:12]">&lt;oriansj&gt;</a></span><span class="message">yeah, that would have a .data segment by default which would use up that block</span></div><div class="line" id="133637"><span class="nick" style="color:#2e2a4a"><a href="#133637" label="[13:36:37]">&lt;oriansj&gt;</a></span><span class="message">stikonas: version 7.2.1</span></div><div class="line" id="133838"><span class="nick" style="color:#2e2a4a"><a href="#133838" label="[13:38:38]">&lt;oriansj&gt;</a></span><span class="message">brk 0 is supposed to return the address of the first free address for a malloc/calloc; which seems very odd behavior in qemu if it is a gas .data block sized offset wrong.</span></div><div class="line" id="135440"><span class="nick" style="color:#8dd3c7"><a href="#135440" label="[13:54:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, so I think i had version 7 before</span></div><div class="line" id="135446"><span class="nick" style="color:#8dd3c7"><a href="#135446" label="[13:54:46]">&lt;stikonas&gt;</a></span><span class="message">but now got upgraded to version 8...</span></div><div class="line" id="135550"><span class="nick" style="color:#8dd3c7"><a href="#135550" label="[13:55:50]">&lt;stikonas&gt;</a></span><span class="message">maybe we should report it to qemu...</span></div><div class="line" id="135651"><span class="nick" style="color:#8dd3c7"><a href="#135651" label="[13:56:51]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think it might be a blocker for next stage0-posix release</span></div><div class="line" id="140039"><span class="nick" style="color:#6c3d55"><a href="#140039" label="[14:00:39]">&lt;sam_&gt;</a></span><span class="message">i think this is fixed already</span></div><div class="line" id="140046"><span class="nick" style="color:#6c3d55"><a href="#140046" label="[14:00:46]">&lt;sam_&gt;</a></span><span class="message">i remember at least one brk fix, and another important mmap one</span></div><div class="line" id="140102"><span class="nick" style="color:#6c3d55"><a href="#140102" label="[14:01:02]">&lt;sam_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/qemu-project/qemu/-/commit/9de4eebc878845b65cd1096d93d1d285453615ab">https://gitlab.com/qemu-project/qemu/-/commit/9de4eebc878845b65cd1096d93d1d285453615ab</a>  ?</span></div><div class="line" id="140114"><span class="nick" style="color:#6c3d55"><a href="#140114" label="[14:01:14]">&lt;sam_&gt;</a></span><span class="message">or is this not linux-user?</span></div><div class="line" id="140207"><span class="nick" style="color:#8dd3c7"><a href="#140207" label="[14:02:07]">&lt;stikonas&gt;</a></span><span class="message">this is user emulation...</span></div><div class="line" id="140227"><span class="nick" style="color:#8dd3c7"><a href="#140227" label="[14:02:27]">&lt;stikonas&gt;</a></span><span class="message">I probably don't have this commit in qemu stable on gentoo</span></div><div class="line" id="140233"><span class="nick" style="color:#8dd3c7"><a href="#140233" label="[14:02:33]">&lt;stikonas&gt;</a></span><span class="message">I'll try building it with this patch</span></div><div class="line" id="140846"><span class="nick" style="color:#6c3d55"><a href="#140846" label="[14:08:46]">&lt;sam_&gt;</a></span><span class="message">I kicked off bug 909541 earlier which will include this fix too, IIRC</span></div><div class="line" id="144410"><span class="nick" style="color:#8dd3c7"><a href="#144410" label="[14:44:10]">&lt;stikonas&gt;</a></span><span class="message">sam_: yes, this patch helps</span></div><div class="line" id="144416"><span class="nick" style="color:#8dd3c7"><a href="#144416" label="[14:44:16]">&lt;stikonas&gt;</a></span><span class="message">thanks a lot!</span></div><div class="line" id="144431"><span class="nick" style="color:#8dd3c7"><a href="#144431" label="[14:44:31]">&lt;stikonas&gt;</a></span><span class="message">will save us quite a lot of hassle of workarounding it</span></div><div class="line" id="144912"><span class="nick" style="color:#6c3d55"><a href="#144912" label="[14:49:12]">&lt;sam_&gt;</a></span><span class="message">np :)</span></div><div class="line" id="170448"><span class="nick" style="color:#6b8072"><a href="#170448" label="[17:04:48]">&lt;vagrantc&gt;</a></span><span class="message">muurkha: the discussion seemed needlessly conflictual, but <a rel="nofollow" href="https://lists.reproducible-builds.org/pipermail/rb-general/2017-January/000309.html">https://lists.reproducible-builds.org/pipermail/rb-general/2017-January/000309.html</a> </span></div><div class="line" id="170540"><span class="nick" style="color:#6c3d55"><a href="#170540" label="[17:05:40]">&lt;sam_&gt;</a></span><span class="message">ah, I remember some of this now!</span></div><div class="line" id="182218"><span class="nick" style="color:#80b1d3"><a href="#182218" label="[18:22:18]">&lt;muurkha&gt;</a></span><span class="message">vagrantc: yes, I thought that was amusing, though maybe I shouldn't</span></div><div class="line" id="182252"><span class="nick" style="color:#80b1d3"><a href="#182252" label="[18:22:52]">&lt;muurkha&gt;</a></span><span class="message">I mean obviously working together with John is important, and he has a demonstrated capacity to work together with people</span></div><div class="line" id="184756"><span class="nick" style="color:#6b8072"><a href="#184756" label="[18:47:56]">&lt;vagrantc&gt;</a></span><span class="message">i have not always found that to be true, but have not crossed paths too much</span></div><div class="line" id="185251"><span class="nick" style="color:#8dd3c7"><a href="#185251" label="[18:52:51]">&lt;stikonas&gt;</a></span><span class="message">well, but in any case they did not do bootstrappable builds in cygnus even if there is some debate about reproducible builds</span></div><div class="line" id="185530"><span class="nick" style="color:#80b1d3"><a href="#185530" label="[18:55:30]">&lt;muurkha&gt;</a></span><span class="message">what I mean is that he built Sun, Cygnus, and the EFF, and if working with him were impossible all three would have failed</span></div><div class="line" id="185538"><span class="nick" style="color:#80b1d3"><a href="#185538" label="[18:55:38]">&lt;muurkha&gt;</a></span><span class="message">so would the GNU project</span></div><div class="line" id="185557"><span class="nick" style="color:#8dd3c7"><a href="#185557" label="[18:55:57]">&lt;stikonas&gt;</a></span><span class="message">well, no argument here...</span></div><div class="line" id="185613"><span class="nick" style="color:#80b1d3"><a href="#185613" label="[18:56:13]">&lt;muurkha&gt;</a></span><span class="message">not that he</span></div><div class="line" id="185618"><span class="nick" style="color:#80b1d3"><a href="#185618" label="[18:56:18]">&lt;muurkha&gt;</a></span><span class="message">he's *easy* to work with</span></div><div class="line" id="185703"><span class="nick" style="color:#80b1d3"><a href="#185703" label="[18:57:03]">&lt;muurkha&gt;</a></span><span class="message">he has his peccadilloes</span></div><div class="line" id="185711"><span class="nick" style="color:#80b1d3"><a href="#185711" label="[18:57:11]">&lt;muurkha&gt;</a></span><span class="message">but not at the level of Stallman, say</span></div><div class="line" id="185749"><span class="nick" style="color:#80b1d3"><a href="#185749" label="[18:57:49]">&lt;muurkha&gt;</a></span><span class="message">also I don't mean working with him is *necessary*</span></div><div class="line" id="185805"><span class="nick" style="color:#80b1d3"><a href="#185805" label="[18:58:05]">&lt;muurkha&gt;</a></span><span class="message">just that it's a big advantage if it can happen</span></div><div class="line" id="190146"><span class="nick" style="color:#80b1d3"><a href="#190146" label="[19:01:46]">&lt;muurkha&gt;</a></span><span class="message">to clarify, a couple of lines above should have read &quot;not that he's *easy* to work with&quot;</span></div><br /></div></body></html>