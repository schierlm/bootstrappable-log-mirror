<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-09-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000213"><span class="nick" style="color:#389600"><a href="#000213" label="[00:02:13]">&lt;muurkha&gt;</a></span><span class="message">aggi: <a rel="nofollow" href="https://en.wikipedia.org/wiki/ARM_architecture_family#Early_licensees">https://en.wikipedia.org/wiki/ARM_architecture_family#Early_licensees</a>  says the ARM6 still had only 35000 transistors</span></div><div class="line" id="000655"><span class="nick" style="color:#389600"><a href="#000655" label="[00:06:55]">&lt;muurkha&gt;</a></span><span class="message">which is, roughly speaking, about 8192-16384 gates or 1024â€“8192 4-LUTs</span></div><div class="line" id="014608"><span class="nick" style="color:#2e2a4a"><a href="#014608" label="[01:46:08]">&lt;pabs3&gt;</a></span><span class="message">stikonas, muurkha: there is libre boot firmware for RPi <a rel="nofollow" href="https://github.com/librerpi/">https://github.com/librerpi/</a> </span></div><div class="line" id="014609"><span class="nick" style="color:#2e2a4a"><a href="#014609" label="[01:46:09]">&lt;pabs3&gt;</a></span><span class="message"> it isn't fully usable yet, but is in some situations it could be <a rel="nofollow" href="https://gwolf.org/2022/04/how-is-the-free-firmware-for-the-raspberry-progressing.html">https://gwolf.org/2022/04/how-is-the-free-firmware-for-the-raspberry-progressing.html</a> </span></div><div class="line" id="020514"><span class="nick" style="color:#6b8072"><a href="#020514" label="[02:05:14]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, i've seen those some time ago...</span></div><div class="line" id="020644"><span class="nick" style="color:#6b8072"><a href="#020644" label="[02:06:44]">&lt;stikonas[m]&gt;</a></span><span class="message">But it's a very slow progress, though slowly moving</span></div><div class="line" id="030108"><span class="nick" style="color:#2e2a4a"><a href="#030108" label="[03:01:08]">&lt;pabs3&gt;</a></span><span class="message">yeah, very few contributors IIRC</span></div><div class="line" id="030318"><span class="nick" style="color:#2e2a4a"><a href="#030318" label="[03:03:18]">&lt;pabs3&gt;</a></span><span class="message">I tried to suggest they get funding to work on it full time, but they already have a job, didn't seem to want to change that</span></div><div class="line" id="065243"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o janneke</span></div><div class="line" id="082557"><span class="nick" style="color:#80b1d3"><a href="#082557" label="[08:25:57]">&lt;doras&gt;</a></span><span class="message">stikonas: I uploaded a new revision for <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/194">https://github.com/fosslinux/live-bootstrap/pull/194</a> </span></div><div class="line" id="095144"><span class="nick" style="color:#6d2462"><a href="#095144" label="[09:51:44]">&lt;aggi&gt;</a></span><span class="message">sam_: fyi, fully integrated slibtool 6 weeks ago, which does however break cross-compilation with many builds... almost forgot to test this</span></div><div class="line" id="095241"><span class="nick" style="color:#6d2462"><a href="#095241" label="[09:52:41]">&lt;aggi&gt;</a></span><span class="message">most errors are this &quot;lib*.a: could not read symbols: Archive has no index; run ranlib to add one&quot;</span></div><div class="line" id="100108"><span class="nick" style="color:#6d2462"><a href="#100108" label="[10:01:08]">&lt;aggi&gt;</a></span><span class="message">sam_: found it, seems AR=&lt;ctarget&gt;-ar must be exported explicitely</span></div><div class="line" id="100835"><span class="nick" style="color:#6d2462"><a href="#100835" label="[10:08:35]">&lt;aggi&gt;</a></span><span class="message">next time i'll have coffee first</span></div><div class="line" id="100932"><span class="nick" style="color:#6d2462"><a href="#100932" label="[10:09:32]">&lt;aggi&gt;</a></span><span class="message">with perl-5.8 (required for tcc-toolchain), there's no simple solution to support both tcc and any crossdev setup</span></div><div class="line" id="100957"><span class="nick" style="color:#6d2462"><a href="#100957" label="[10:09:57]">&lt;aggi&gt;</a></span><span class="message">crossdev will require a recent unmasked perl version</span></div><div class="line" id="101117"><span class="nick" style="color:#6d2462"><a href="#101117" label="[10:11:17]">&lt;aggi&gt;</a></span><span class="message">hence, to crossdev and bootstrap for tcc-toolchain, a first cross-compile will require a perl-update (for autotools/automake), and the proceeding tcc-toolchain a perl version downgrade</span></div><div class="line" id="101334"><span class="nick" style="color:#6d2462"><a href="#101334" label="[10:13:34]">&lt;aggi&gt;</a></span><span class="message">with tcc-toolchain, due to python-bootstrapping issues, the system-integration had to be detangled from gentoo-tooling anyway</span></div><div class="line" id="101445"><span class="nick" style="color:#6d2462"><a href="#101445" label="[10:14:45]">&lt;aggi&gt;</a></span><span class="message">ideally too, with a minified software-set, all autotools/automake/perl dependencies are detangled</span></div><div class="line" id="101527"><span class="nick" style="color:#6d2462"><a href="#101527" label="[10:15:27]">&lt;aggi&gt;</a></span><span class="message">i fear however, as soon as some precious software is desired, such as dev-vcs/git, a huge dependency graph is introduced</span></div><div class="line" id="101638"><span class="nick" style="color:#6d2462"><a href="#101638" label="[10:16:38]">&lt;aggi&gt;</a></span><span class="message">with this, replacing libressl/openssl with bearssl/bearssl-libtls is another milestone</span></div><div class="line" id="101805"><span class="nick" style="color:#6d2462"><a href="#101805" label="[10:18:05]">&lt;aggi&gt;</a></span><span class="message">anyway, once the crossdev use-case passes, i think the gcc47 c-only toolchain system-profile can be frozen/archived finally</span></div><div class="line" id="101908"><span class="nick" style="color:#6d2462"><a href="#101908" label="[10:19:08]">&lt;aggi&gt;</a></span><span class="message">to fork-away with linux-2.4/mes-libc/toybox and tcc-toolchain</span></div><div class="line" id="112110"><span class="nick" style="color:#6d2462"><a href="#112110" label="[11:21:10]">&lt;aggi&gt;</a></span><span class="message">reason for slibtool, initially, i hope for most/all bashism can be avoided with any bootstrapping path taken</span></div><div class="line" id="112136"><span class="nick" style="color:#6d2462"><a href="#112136" label="[11:21:36]">&lt;aggi&gt;</a></span><span class="message">there's still a handfull of cross-compiles failing with slibtool, nothing critical</span></div><div class="line" id="112228"><span class="nick" style="color:#6d2462"><a href="#112228" label="[11:22:28]">&lt;aggi&gt;</a></span><span class="message">anyway, retaining _all_ necessary rdeps and bdepts for bootstrapping _without_ any /bin/bash is another issue, with GNU buildsystem involved</span></div><div class="line" id="112521"><span class="nick" style="color:#6d2462"><a href="#112521" label="[11:25:21]">&lt;aggi&gt;</a></span><span class="message">hence, with tcc-toolchain bootstrapping (userspace), it's is two problems to cope with</span></div><div class="line" id="112545"><span class="nick" style="color:#6d2462"><a href="#112545" label="[11:25:45]">&lt;aggi&gt;</a></span><span class="message">1) full removal of GNU-toolchain and GNU-buildsystem, removal of python, perl, bash etc...</span></div><div class="line" id="112604"><span class="nick" style="color:#6d2462"><a href="#112604" label="[11:26:04]">&lt;aggi&gt;</a></span><span class="message">AND retaining a self-hosting system which can bootstrap/cross/compile itself</span></div><div class="line" id="112647"><span class="nick" style="color:#6d2462"><a href="#112647" label="[11:26:47]">&lt;aggi&gt;</a></span><span class="message">then 2) a fully detangled tcc-toolchain system must be capable to bootstrap GNU toolchain and/buildsystem</span></div><div class="line" id="112719"><span class="nick" style="color:#6d2462"><a href="#112719" label="[11:27:19]">&lt;aggi&gt;</a></span><span class="message">the latter is accomplished by bootstrappable, the former isn't</span></div><div class="line" id="124930"><span class="nick" style="color:#234e69"><a href="#124930" label="[12:49:30]">&lt;Hagfish&gt;</a></span><span class="message">it's great that the bootstrappable project is shining a light onto other pieces of technical debt</span></div><div class="line" id="124950"><span class="nick" style="color:#234e69"><a href="#124950" label="[12:49:50]">&lt;Hagfish&gt;</a></span><span class="message">it could make people really consider their tools, and find new important goals</span></div><div class="line" id="125009"><span class="nick" style="color:#234e69"><a href="#125009" label="[12:50:09]">&lt;Hagfish&gt;</a></span><span class="message">or at the very least, raise awareness to help avoid making the same mistakes in the future :)</span></div><div class="line" id="163508"><span class="nick" style="color:#6d2462"><a href="#163508" label="[16:35:08]">&lt;aggi&gt;</a></span><span class="message">ok, this is the reasoning, to consider any upgrade path beyond gcc47 for example, void, and instead considering a ROLL-BACK strategy</span></div><div class="line" id="163540"><span class="nick" style="color:#6d2462"><a href="#163540" label="[16:35:40]">&lt;aggi&gt;</a></span><span class="message">and with this, just theoretical, linux-2.4 which x86 32bit hardware was appropriate for (including ao486 opensource SoC)</span></div><div class="line" id="163604"><span class="nick" style="color:#6d2462"><a href="#163604" label="[16:36:04]">&lt;aggi&gt;</a></span><span class="message">year2038</span></div><div class="line" id="163609"><span class="nick" style="color:#6d2462"><a href="#163609" label="[16:36:09]">&lt;aggi&gt;</a></span><span class="message">the most recent kernel version which addressed year2038, is linux-5.6, and this, probably, won't pass with tcc-toolchain</span></div><div class="line" id="163946"><span class="nick" style="color:#6b8072"><a href="#163946" label="[16:39:46]">&lt;stikonas[m]&gt;</a></span><span class="message">meslibc also has y2038 problem</span></div><div class="line" id="175205"><span class="nick" style="color:#6c3d55"><a href="#175205" label="[17:52:05]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I am confused by the catm command on line 14 here:</span></div><div class="line" id="175215"><span class="nick" style="color:#6c3d55"><a href="#175215" label="[17:52:15]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/gzip-1.2.4/gzip-1.2.4.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/gzip-1.2.4/gzip-1.2.4.kaem</a> </span></div><div class="line" id="175223"><span class="nick" style="color:#6c3d55"><a href="#175223" label="[17:52:23]">&lt;rickmasters&gt;</a></span><span class="message">That command and the next line seem to be in the wrong current directory.</span></div><div class="line" id="175240"><span class="nick" style="color:#6c3d55"><a href="#175240" label="[17:52:40]">&lt;rickmasters&gt;</a></span><span class="message">They are duplicated on line 25 (in the correct directory).</span></div><div class="line" id="175251"><span class="nick" style="color:#6c3d55"><a href="#175251" label="[17:52:51]">&lt;rickmasters&gt;</a></span><span class="message">That seems like a simple cut and paste mistake but what confuses me is how could</span></div><div class="line" id="175258"><span class="nick" style="color:#6c3d55"><a href="#175258" label="[17:52:58]">&lt;rickmasters&gt;</a></span><span class="message">anyone build live-bootstrap for the last 8 months since that was introduced?</span></div><div class="line" id="180111"><span class="nick" style="color:#6b8072"><a href="#180111" label="[18:01:11]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, looks like copy paste typo indeed</span></div><div class="line" id="180201"><span class="nick" style="color:#6b8072"><a href="#180201" label="[18:02:01]">&lt;stikonas[m]&gt;</a></span><span class="message">rickmasters: but it wouldn't cause build error</span></div><div class="line" id="180213"><span class="nick" style="color:#6b8072"><a href="#180213" label="[18:02:13]">&lt;stikonas[m]&gt;</a></span><span class="message">It will just create empty file</span></div><div class="line" id="180217"><span class="nick" style="color:#6b8072"><a href="#180217" label="[18:02:17]">&lt;stikonas[m]&gt;</a></span><span class="message">And copy it</span></div><div class="line" id="180234"><span class="nick" style="color:#6b8072"><a href="#180234" label="[18:02:34]">&lt;stikonas[m]&gt;</a></span><span class="message">I think catm tolerates missing files</span></div><div class="line" id="180255"><span class="nick" style="color:#6b8072"><a href="#180255" label="[18:02:55]">&lt;stikonas[m]&gt;</a></span><span class="message">But we should fix this</span></div><div class="line" id="180302"><span class="nick" style="color:#6b8072"><a href="#180302" label="[18:03:02]">&lt;stikonas[m]&gt;</a></span><span class="message">Can you open PR?</span></div><div class="line" id="180353"><span class="nick" style="color:#6c3d55"><a href="#180353" label="[18:03:53]">&lt;rickmasters&gt;</a></span><span class="message">I get a &quot;cannot open&quot; error that terminates everything</span></div><div class="line" id="180419"><span class="nick" style="color:#6c3d55"><a href="#180419" label="[18:04:19]">&lt;rickmasters&gt;</a></span><span class="message">this is under builder-hex0 kernel but I don't see why it would be different under another kernel</span></div><div class="line" id="180517"><span class="nick" style="color:#6c3d55"><a href="#180517" label="[18:05:17]">&lt;rickmasters&gt;</a></span><span class="message">i can open a PR</span></div><div class="line" id="180605"><span class="nick" style="color:#6c3d55"><a href="#180605" label="[18:06:05]">&lt;rickmasters&gt;</a></span><span class="message">By the way, I should say I've never run a full build of live-bootstrap under qemu with a linux kernel.</span></div><div class="line" id="180655"><span class="nick" style="color:#6c3d55"><a href="#180655" label="[18:06:55]">&lt;rickmasters&gt;</a></span><span class="message">The friction for me was getting a proper linux kernel that would work which I believe there is no documentation for.</span></div><div class="line" id="180759"><span class="nick" style="color:#6c3d55"><a href="#180759" label="[18:07:59]">&lt;rickmasters&gt;</a></span><span class="message">Is there a simple way I can get such a kernel? Could you help me out with suggestion for which kernel to use and how you got it?</span></div><div class="line" id="181544"><span class="nick" style="color:#6b8072"><a href="#181544" label="[18:15:44]">&lt;stikonas[m]&gt;</a></span><span class="message">rickmasters: any 32 bit kernel should work</span></div><div class="line" id="181644"><span class="nick" style="color:#6b8072"><a href="#181644" label="[18:16:44]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe not the obe built with allnoconfig but requirements are very minimal</span></div><div class="line" id="181930"><span class="nick" style="color:#6b8072"><a href="#181930" label="[18:19:30]">&lt;stikonas[m]&gt;</a></span><span class="message">Strange, this suggest that it shouldn't work <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/blob/6746862204e6211b954c9c4b8cb7c51e58ee16a9/catm.c#L55">https://github.com/oriansj/mescc-tools/blob/6746862204e6211b954c9c4b8cb7c51e58ee16a9/catm.c#L55</a> </span></div><div class="line" id="182004"><span class="nick" style="color:#6b8072"><a href="#182004" label="[18:20:04]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe there is a bug somewhere else and non zero exit code is ignored...</span></div><div class="line" id="182454"><span class="nick" style="color:#6b8072"><a href="#182454" label="[18:24:54]">&lt;stikonas[m]&gt;</a></span><span class="message">rickmasters: <a rel="nofollow" href="https://stikonas.eu/files/bootstrap/kernel/kernel32">https://stikonas.eu/files/bootstrap/kernel/kernel32</a> </span></div><div class="line" id="182855"><span class="nick" style="color:#6c3d55"><a href="#182855" label="[18:28:55]">&lt;rickmasters&gt;</a></span><span class="message">ok, I realized that I have my kernel set to terminate on error, but kaem is running non-strict so it will ignore it</span></div><div class="line" id="182925"><span class="nick" style="color:#6c3d55"><a href="#182925" label="[18:29:25]">&lt;rickmasters&gt;</a></span><span class="message">so, it would output an error and continue like you said.</span></div><div class="line" id="183010"><span class="nick" style="color:#6c3d55"><a href="#183010" label="[18:30:10]">&lt;rickmasters&gt;</a></span><span class="message">its not a bug, unless you intended to run kaem in strict mode</span></div><div class="line" id="183301"><span class="nick" style="color:#6c3d55"><a href="#183301" label="[18:33:01]">&lt;rickmasters&gt;</a></span><span class="message">stage0-posix runs kaem with --strict which seems like a good idea.</span></div><div class="line" id="183713"><span class="nick" style="color:#6c3d55"><a href="#183713" label="[18:37:13]">&lt;rickmasters&gt;</a></span><span class="message">Thanks for the kernel. I'll give it a try</span></div><div class="line" id="185529"><span class="nick" style="color:#d9d9d9"><a href="#185529" label="[18:55:29]">&lt;oriansj&gt;</a></span><span class="message">possibly a M2lic bug which results in values other than -1 being returned on error?</span></div><div class="line" id="185637"><span class="nick" style="color:#d9d9d9"><a href="#185637" label="[18:56:37]">&lt;oriansj&gt;</a></span><span class="message">yep: <a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/stdio.c#L235">https://github.com/oriansj/M2libc/blob/main/stdio.c#L235</a> </span></div><div class="line" id="185653"><span class="nick" style="color:#d9d9d9"><a href="#185653" label="[18:56:53]">&lt;oriansj&gt;</a></span><span class="message">should be returning -1 and not zero</span></div><div class="line" id="185752"><span class="nick" style="color:#d9d9d9"><a href="#185752" label="[18:57:52]">&lt;oriansj&gt;</a></span><span class="message">I'll patch that later today</span></div><div class="line" id="190047"><span class="nick" style="color:#6c3d55"><a href="#190047" label="[19:00:47]">&lt;rickmasters&gt;</a></span><span class="message">catm is using open, not fopen</span></div><div class="line" id="190527"><span class="nick" style="color:#6b8072"><a href="#190527" label="[19:05:27]">&lt;stikonas[m]&gt;</a></span><span class="message">I think we want --strict for kaem</span></div><div class="line" id="190836"><span class="nick" style="color:#6c3d55"><a href="#190836" label="[19:08:36]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: i think you want fopen to return NULL on error. I think thats correct. errno is used for the error</span></div><div class="line" id="191021"><span class="nick" style="color:#6c3d55"><a href="#191021" label="[19:10:21]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: catm uses open which returns -1 on error, which is also correct for open</span></div><div class="line" id="191347"><span class="nick" style="color:#6c3d55"><a href="#191347" label="[19:13:47]">&lt;rickmasters&gt;</a></span><span class="message">stikonas, oriansj: yes, the error is propagating correctly to catm and then to kaem, but it is currently ignored there. agree that --strict would help</span></div><div class="line" id="191746"><span class="nick" style="color:#6c3d55"><a href="#191746" label="[19:17:46]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: if you'd like, after the gzip PR I can test with --strict on all the kaem commands and send you another PR for that</span></div><div class="line" id="191808"><span class="nick" style="color:#bc80bd"><a href="#191808" label="[19:18:08]">&lt;stikonas&gt;</a></span><span class="message">sure, that's very welcom</span></div><div class="line" id="191824"><span class="nick" style="color:#bc80bd"><a href="#191824" label="[19:18:24]">&lt;stikonas&gt;</a></span><span class="message">I was under impression that we already have strict mode</span></div><div class="line" id="192708"><span class="nick" style="color:#6c3d55"><a href="#192708" label="[19:27:08]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: well this is odd, on the linux build of live-bootstrap, I don't see an error message from catm on those gzip commands...</span></div><div class="line" id="195147"><span class="nick" style="color:#bc80bd"><a href="#195147" label="[19:51:47]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: well, that's how it was missed...</span></div><div class="line" id="200527"><span class="nick" style="color:#6c3d55"><a href="#200527" label="[20:05:27]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: kaem --strict doesn't catch it either, so something else is different.</span></div><div class="line" id="200650"><span class="nick" style="color:#6c3d55"><a href="#200650" label="[20:06:50]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: i'll keep digging. boot2now runs live-bootstrap in phases, cacheing executables between phases, maybe my catm is different, not sure</span></div><div class="line" id="201607"><span class="nick" style="color:#389600"><a href="#201607" label="[20:16:07]">&lt;muurkha&gt;</a></span><span class="message">pabs3: thanks for the note on LibreRPi!</span></div><div class="line" id="202254"><span class="nick" style="color:#6c3d55"><a href="#202254" label="[20:22:54]">&lt;rickmasters&gt;</a></span><span class="message">stikonas, oriansj: so I noticed that gzip-1.2.4.kaem does &quot;set -ex&quot; at the beginning. That probably turns on --strict mode?</span></div><div class="line" id="202729"><span class="nick" style="color:#bc80bd"><a href="#202729" label="[20:27:29]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: let me check but I doubt it</span></div><div class="line" id="202739"><span class="nick" style="color:#bc80bd"><a href="#202739" label="[20:27:39]">&lt;stikonas&gt;</a></span><span class="message">it might be for bash compatibility if you run it with bash</span></div><div class="line" id="202909"><span class="nick" style="color:#bc80bd"><a href="#202909" label="[20:29:09]">&lt;stikonas&gt;</a></span><span class="message">hmm, actually it should</span></div><div class="line" id="202929"><span class="nick" style="color:#bc80bd"><a href="#202929" label="[20:29:29]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/blob/master/Kaem/kaem.c#L725">https://github.com/oriansj/mescc-tools/blob/master/Kaem/kaem.c#L725</a> </span></div><div class="line" id="203230"><span class="nick" style="color:#6c3d55"><a href="#203230" label="[20:32:30]">&lt;rickmasters&gt;</a></span><span class="message">So I need track down why boot2now produces a catm error and live-bootstrap does not.</span></div><div class="line" id="212147"><span class="nick" style="color:#80b1d3"><a href="#212147" label="[21:21:47]">&lt;doras&gt;</a></span><span class="message">stikonas: have you ever noticed these strange symlinks?</span></div><div class="line" id="212200"><span class="nick" style="color:#80b1d3"><a href="#212200" label="[21:22:00]">&lt;doras&gt;</a></span><span class="message">They are in sysa.</span></div><div class="line" id="212307"><span class="nick" style="color:#bc80bd"><a href="#212307" label="[21:23:07]">&lt;stikonas&gt;</a></span><span class="message">which ones?</span></div><div class="line" id="212427"><span class="nick" style="color:#80b1d3"><a href="#212427" label="[21:24:27]">&lt;doras&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.gnome.org/-/snippets/4153/raw/main/snippetfile1.txt">https://gitlab.gnome.org/-/snippets/4153/raw/main/snippetfile1.txt</a> </span></div><div class="line" id="212503"><span class="nick" style="color:#80b1d3"><a href="#212503" label="[21:25:03]">&lt;doras&gt;</a></span><span class="message">stikonas: sorry, apparently I didn't paste the link originally ;)</span></div><div class="line" id="212538"><span class="nick" style="color:#bc80bd"><a href="#212538" label="[21:25:38]">&lt;stikonas&gt;</a></span><span class="message">hmm, they seem to come from util-linux</span></div><div class="line" id="212546"><span class="nick" style="color:#bc80bd"><a href="#212546" label="[21:25:46]">&lt;stikonas&gt;</a></span><span class="message">could be bug in old build system</span></div><div class="line" id="212719"><span class="nick" style="color:#80b1d3"><a href="#212719" label="[21:27:19]">&lt;doras&gt;</a></span><span class="message">stikonas: I also noticed util-linux doesn't respect --libdir properly and places some libraries directly in in `/usr/lib`.</span></div><div class="line" id="212735"><span class="nick" style="color:#bc80bd"><a href="#212735" label="[21:27:35]">&lt;stikonas&gt;</a></span><span class="message">probably fixed in newer versions of util-linux...</span></div><div class="line" id="212738"><span class="nick" style="color:#bc80bd"><a href="#212738" label="[21:27:38]">&lt;stikonas&gt;</a></span><span class="message">but that one is quite old</span></div><div class="line" id="212807"><span class="nick" style="color:#bc80bd"><a href="#212807" label="[21:28:07]">&lt;stikonas&gt;</a></span><span class="message">I don't see anything in build script that would cause those symlinks</span></div><div class="line" id="212817"><span class="nick" style="color:#bc80bd"><a href="#212817" label="[21:28:17]">&lt;stikonas&gt;</a></span><span class="message">so I think they come from util-linux build system</span></div><div class="line" id="212827"><span class="nick" style="color:#bc80bd"><a href="#212827" label="[21:28:27]">&lt;stikonas&gt;</a></span><span class="message">I would just ignore them, they should be harmless</span></div><div class="line" id="213604"><span class="nick" style="color:#80b1d3"><a href="#213604" label="[21:36:04]">&lt;doras&gt;</a></span><span class="message">stikonas: by the way, another small PR: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/196">https://github.com/fosslinux/live-bootstrap/pull/196</a> </span></div><div class="line" id="214022"><span class="nick" style="color:#80b1d3"><a href="#214022" label="[21:40:22]">&lt;doras&gt;</a></span><span class="message">It's in preparation for some other changes around the musl library directory.</span></div><div class="line" id="214342"><span class="nick" style="color:#bc80bd"><a href="#214342" label="[21:43:42]">&lt;stikonas&gt;</a></span><span class="message">yeah, looks fine. I guess I'll merge that  earlier PR later today and then we can merge this</span></div><div class="line" id="221029"><span class="nick" style="color:#80b1d3"><a href="#221029" label="[22:10:29]">&lt;doras&gt;</a></span><span class="message">stikonas: I'd like to reduce our dependency on environment variables. I found at least one case where a package caught an environment variable set in our build scripts and changed its output.</span></div><div class="line" id="221217"><span class="nick" style="color:#3c5b35"><a href="#221217" label="[22:12:17]">&lt;sam_&gt;</a></span><span class="message">what was it, out of interest?</span></div><div class="line" id="221224"><span class="nick" style="color:#80b1d3"><a href="#221224" label="[22:12:24]">&lt;doras&gt;</a></span><span class="message">Do you think it's preferred to pass variables between bash scripts using command line arguments (such as in the `init` -&gt; `run.sh` cases), or should each script (both `init` and `run.sh` in this case) redefine its own?</span></div><div class="line" id="221252"><span class="nick" style="color:#bc80bd"><a href="#221252" label="[22:12:52]">&lt;stikonas&gt;</a></span><span class="message">doras: I though passing is better</span></div><div class="line" id="221307"><span class="nick" style="color:#bc80bd"><a href="#221307" label="[22:13:07]">&lt;stikonas&gt;</a></span><span class="message">otherwise there will be a lot of hardcoding of the same thing</span></div><div class="line" id="221351"><span class="nick" style="color:#bc80bd"><a href="#221351" label="[22:13:51]">&lt;stikonas&gt;</a></span><span class="message">though I thought that in most cases environmental variables are not exported</span></div><div class="line" id="221400"><span class="nick" style="color:#bc80bd"><a href="#221400" label="[22:14:00]">&lt;stikonas&gt;</a></span><span class="message">(except early ones in kaem)</span></div><div class="line" id="221410"><span class="nick" style="color:#80b1d3"><a href="#221410" label="[22:14:10]">&lt;doras&gt;</a></span><span class="message">sam_: I tried to add LIBDIR in additional to our existing LIBDIR and it resulted in bison changing one of its man page outputs.</span></div><div class="line" id="221516"><span class="nick" style="color:#80b1d3"><a href="#221516" label="[22:15:16]">&lt;doras&gt;</a></span><span class="message">stikonas: I removed some environment variables some months ago, but there are quite a few more. I won't get rid of all of them, but I'll do one more iteration</span></div><div class="line" id="221548"><span class="nick" style="color:#80b1d3"><a href="#221548" label="[22:15:48]">&lt;doras&gt;</a></span><span class="message">Specifically I'm after PREFIX/SOURCES/SRCDIR/DSTDIR and friends.</span></div><div class="line" id="221619"><span class="nick" style="color:#bc80bd"><a href="#221619" label="[22:16:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, but ideally try not to have it hardcoded in more than 1 place</span></div><div class="line" id="221624"><span class="nick" style="color:#80b1d3"><a href="#221624" label="[22:16:24]">&lt;doras&gt;</a></span><span class="message">I want to add LIBDIR in a future PR to avoid a lot of existing duplication that we have.</span></div><div class="line" id="221648"><span class="nick" style="color:#80b1d3"><a href="#221648" label="[22:16:48]">&lt;doras&gt;</a></span><span class="message">stikonas: ideally once per system.</span></div><div class="line" id="221657"><span class="nick" style="color:#bc80bd"><a href="#221657" label="[22:16:57]">&lt;stikonas&gt;</a></span><span class="message">maybe some can be renamed to avoid clash with commonly used names that affect packages</span></div><div class="line" id="221741"><span class="nick" style="color:#80b1d3"><a href="#221741" label="[22:17:41]">&lt;doras&gt;</a></span><span class="message">I think it's best to remove them from the environment entirely if possible. Plan B can be a rename.</span></div><div class="line" id="222208"><span class="nick" style="color:#bc80bd"><a href="#222208" label="[22:22:08]">&lt;stikonas&gt;</a></span><span class="message">yeah, we still export them right now...</span></div><div class="line" id="222554"><span class="nick" style="color:#80b1d3"><a href="#222554" label="[22:25:54]">&lt;doras&gt;</a></span><span class="message">I'd be surprised if SOURCES or DESTDIR aren't already caught by some package accidentally.</span></div><div class="line" id="222624"><span class="nick" style="color:#80b1d3"><a href="#222624" label="[22:26:24]">&lt;doras&gt;</a></span><span class="message">Sorry, I meant PREFIX or DESTDIR.</span></div><div class="line" id="222647"><span class="nick" style="color:#80b1d3"><a href="#222647" label="[22:26:47]">&lt;doras&gt;</a></span><span class="message">Even if it gets us the result we wanted, it's implicit and hard to predict. I'd rather pass these explicitly.</span></div><div class="line" id="224430"><span class="nick" style="color:#80b1d3"><a href="#224430" label="[22:44:30]">&lt;doras&gt;</a></span><span class="message">stikonas: how about `after.sh`? Same thing, use command line arguments?</span></div><div class="line" id="224450"><span class="nick" style="color:#bc80bd"><a href="#224450" label="[22:44:50]">&lt;stikonas&gt;</a></span><span class="message">I think so</span></div><div class="line" id="224713"><span class="nick" style="color:#bc80bd"><a href="#224713" label="[22:47:13]">&lt;stikonas&gt;</a></span><span class="message">but I guess these can be unexported <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/run.sh#L12">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/run.sh#L12</a> </span></div><div class="line" id="224715"><span class="nick" style="color:#bc80bd"><a href="#224715" label="[22:47:15]">&lt;stikonas&gt;</a></span><span class="message">just set them</span></div><div class="line" id="224812"><span class="nick" style="color:#80b1d3"><a href="#224812" label="[22:48:12]">&lt;doras&gt;</a></span><span class="message">stikonas: you mean unset the ones we get from kaem?</span></div><div class="line" id="224845"><span class="nick" style="color:#bc80bd"><a href="#224845" label="[22:48:45]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure if we should bother with that....</span></div><div class="line" id="224953"><span class="nick" style="color:#bc80bd"><a href="#224953" label="[22:49:53]">&lt;stikonas&gt;</a></span><span class="message">kaem variables are mostly lowercase, I doubt that they clash with anything</span></div><div class="line" id="225005"><span class="nick" style="color:#bc80bd"><a href="#225005" label="[22:50:05]">&lt;stikonas&gt;</a></span><span class="message">I meant it should be possible to remove that export keyword</span></div><div class="line" id="225200"><span class="nick" style="color:#80b1d3"><a href="#225200" label="[22:52:00]">&lt;doras&gt;</a></span><span class="message">stikonas: yes, this is what I'm doing.</span></div><div class="line" id="225239"><span class="nick" style="color:#bc80bd"><a href="#225239" label="[22:52:39]">&lt;stikonas&gt;</a></span><span class="message">ok, I've merged <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/191">https://github.com/fosslinux/live-bootstrap/pull/191</a>  (newer binutils)</span></div><div class="line" id="225246"><span class="nick" style="color:#80b1d3"><a href="#225246" label="[22:52:46]">&lt;doras&gt;</a></span><span class="message">Almost done covering everything. Then I'll find out what breaks/changes hash after a bootstrap.</span></div><div class="line" id="225300"><span class="nick" style="color:#bc80bd"><a href="#225300" label="[22:53:00]">&lt;stikonas&gt;</a></span><span class="message">I think you addressed all fossy's concerns. If there are any more, we can sort it out later</span></div><div class="line" id="225314"><span class="nick" style="color:#80b1d3"><a href="#225314" label="[22:53:14]">&lt;doras&gt;</a></span><span class="message">stikonas: yay :)</span></div><div class="line" id="225316"><span class="nick" style="color:#80b1d3"><a href="#225316" label="[22:53:16]">&lt;doras&gt;</a></span><span class="message">Thanks!</span></div><div class="line" id="225344"><span class="nick" style="color:#bc80bd"><a href="#225344" label="[22:53:44]">&lt;stikonas&gt;</a></span><span class="message">doras: can you fix <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/196">https://github.com/fosslinux/live-bootstrap/pull/196</a>  ?</span></div><div class="line" id="225351"><span class="nick" style="color:#bc80bd"><a href="#225351" label="[22:53:51]">&lt;stikonas&gt;</a></span><span class="message">we now have merge conflict</span></div><div class="line" id="225450"><span class="nick" style="color:#80b1d3"><a href="#225450" label="[22:54:50]">&lt;doras&gt;</a></span><span class="message">Yes. I guess GitHub isn't smart enough to figure out that a clean fast-forward is possible?</span></div><div class="line" id="225533"><span class="nick" style="color:#80b1d3"><a href="#225533" label="[22:55:33]">&lt;doras&gt;</a></span><span class="message">Oh, you also merged the dynamic linking support.</span></div><div class="line" id="225533"><span class="nick" style="color:#80b1d3"><a href="#225533" label="[22:55:33]">&lt;doras&gt;</a></span><span class="message">So it makes sense.</span></div><div class="line" id="225615"><span class="nick" style="color:#bc80bd"><a href="#225615" label="[22:56:15]">&lt;stikonas&gt;</a></span><span class="message">yeah, that one can approvals from both fossy and me and no comments, so no need to wait</span></div><div class="line" id="230551"><span class="nick" style="color:#80b1d3"><a href="#230551" label="[23:05:51]">&lt;doras&gt;</a></span><span class="message">sam_: actually, it was dhcpcd, not bison.</span></div><div class="line" id="230905"><span class="nick" style="color:#80b1d3"><a href="#230905" label="[23:09:05]">&lt;doras&gt;</a></span><span class="message">stikonas: rebased: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/196">https://github.com/fosslinux/live-bootstrap/pull/196</a> </span></div><div class="line" id="230936"><span class="nick" style="color:#bc80bd"><a href="#230936" label="[23:09:36]">&lt;stikonas&gt;</a></span><span class="message">ok, merged</span></div><div class="line" id="231222"><span class="nick" style="color:#80b1d3"><a href="#231222" label="[23:12:22]">&lt;doras&gt;</a></span><span class="message">Thanks again :)</span></div><div class="line" id="232905"><span class="nick" style="color:#6c3d55"><a href="#232905" label="[23:29:05]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: it appears catm is getting -2 from open when the file does not exist.</span></div><div class="line" id="233009"><span class="nick" style="color:#6c3d55"><a href="#233009" label="[23:30:09]">&lt;rickmasters&gt;</a></span><span class="message">not sure why yet, it should be -1 and it is -1 with builder-hex0 / boot2now</span></div><div class="line" id="233159"><span class="nick" style="color:#6c3d55"><a href="#233159" label="[23:31:59]">&lt;rickmasters&gt;</a></span><span class="message">I should point out my submodule versions of stage0-posix and live-bootstrap are a few months out of date in boot2now</span></div><div class="line" id="233219"><span class="nick" style="color:#bc80bd"><a href="#233219" label="[23:32:19]">&lt;stikonas&gt;</a></span><span class="message">I don't think we made any changes regarding catm though</span></div><div class="line" id="233221"><span class="nick" style="color:#bc80bd"><a href="#233221" label="[23:32:21]">&lt;stikonas&gt;</a></span><span class="message">or M2libc...</span></div><div class="line" id="233847"><span class="nick" style="color:#6c3d55"><a href="#233847" label="[23:38:47]">&lt;rickmasters&gt;</a></span><span class="message">yeah, and the open implementations in M2libc are just assembly code to invoke the kernel syscall</span></div><div class="line" id="234200"><span class="nick" style="color:#d9d9d9"><a href="#234200" label="[23:42:00]">&lt;oriansj&gt;</a></span><span class="message">yeah, it is a naked return from the kernel syscall</span></div><div class="line" id="234223"><span class="nick" style="color:#d9d9d9"><a href="#234223" label="[23:42:23]">&lt;oriansj&gt;</a></span><span class="message">so if the kernel gives it 42, it returns 42. if the kernel gives it -2, it returns -2</span></div><div class="line" id="234426"><span class="nick" style="color:#d9d9d9"><a href="#234426" label="[23:44:26]">&lt;oriansj&gt;</a></span><span class="message">but we can tweak catm to be robust against that by changing if(-1 == input) to if(0 &gt; input)</span></div><div class="line" id="234752"><span class="nick" style="color:#d9d9d9"><a href="#234752" label="[23:47:52]">&lt;oriansj&gt;</a></span><span class="message">but that might just be masking an error</span></div><div class="line" id="235226"><span class="nick" style="color:#6c3d55"><a href="#235226" label="[23:52:26]">&lt;rickmasters&gt;</a></span><span class="message">My suspicion is that the kernel can return various negative errors and then libc is supposed to set errno and return -1</span></div><div class="line" id="235537"><span class="nick" style="color:#d9d9d9"><a href="#235537" label="[23:55:37]">&lt;oriansj&gt;</a></span><span class="message">quite possibly</span></div><div class="line" id="235623"><span class="nick" style="color:#6c3d55"><a href="#235623" label="[23:56:23]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/bpowers/musl/blob/master/src/internal/syscall_ret.c">https://github.com/bpowers/musl/blob/master/src/internal/syscall_ret.c</a> </span></div><br /></div></body></html>