<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-05-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="031903"><span class="nick" style="color:#389600"><a href="#031903" label="[03:19:03]">&lt;oriansj&gt;</a></span><span class="message">hmm, it appears that git notes themselves could be used to store metadata about code reviews and someone made a tool about it years ago: <a rel="nofollow" href="https://github.com/google/git-appraise">https://github.com/google/git-appraise</a> </span></div><div class="line" id="180304"><span class="nick" style="color:#8dd3c7"><a href="#180304" label="[18:03:04]">&lt;ekaitz&gt;</a></span><span class="message">oriansj: yeah that git-appraise thingie is supercool</span></div><div class="line" id="180417"><span class="nick" style="color:#8dd3c7"><a href="#180417" label="[18:04:17]">&lt;ekaitz&gt;</a></span><span class="message">also fossil kind of does a similar &quot;all in the repo&quot; approach that is interesting</span></div><div class="line" id="180420"><span class="nick" style="color:#8dd3c7"><a href="#180420" label="[18:04:20]">&lt;ekaitz&gt;</a></span><span class="message">but fossil is not git</span></div><div class="line" id="180912"><span class="nick" style="color:#2e2a4a"><a href="#180912" label="[18:09:12]">&lt;tazjin&gt;</a></span><span class="message">radicle does that too (by just creating git objects), need to try that out at some point: <a rel="nofollow" href="https://radicle.xyz/guides/protocol#collaborative-objects">https://radicle.xyz/guides/protocol#collaborative-objects</a> </span></div><div class="line" id="183012"><span class="nick" style="color:#6b8072"><a href="#183012" label="[18:30:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; oriansj: binary glibc and bash. I could eliminate them like I did in my earlier bootstrap path, but I haven't got around to it yet. Things like M2 are still statically linked, but in later stages I use otccelf (built by M2) to allow me to dynamically link to glibc.</span></div><div class="line" id="183159"><span class="nick" style="color:#6b8072"><a href="#183159" label="[18:31:59]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Googulator: part of this was to allow me to better understand cc_x86 by trying to create something similar but hopefully simpler.</span></div><div class="line" id="183701"><span class="nick" style="color:#6b8072"><a href="#183701" label="[18:37:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; oriansj: regarding going straight from M2-Planet to tcc. That reminds me, last year I condensed the whole i386 Linux version of tcc-0.9.27 into a single 11kloc C file <a rel="nofollow" href="https://github.com/cosinusoidally/mishmashvm/blob/master/tcc_js_bootstrap/alt_bootstrap/tcc_bootstrap.c">https://github.com/cosinusoidally/mishmashvm/blob/master/tcc_js_bootstrap/alt_bootstrap/tcc_bootstrap.c</a>  if I eventually have the patience/spare time I might have a stab at cutting that down to the M2 dialect of C.</span></div><br /></div></body></html>