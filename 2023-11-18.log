<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-18.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003356"><span class="nick" style="color:#389600"><a href="#003356" label="[00:33:56]">&lt;mihi&gt;</a></span><span class="message">stikonas, vagrantc, what problem did you notice with M2-Planet's install target? When testing it (M2-Planet/mescc-tools) around 2021 in Cygwin, I noticed that the VPATH trickery in the Makefile only worked when &quot;install&quot; was called as a sole target (i.e. bin/M2-Planet already existed when make run started). At that time, I thought it to be a quirk of Cygwin, and made a note to test it on other systems, which I</span></div><div class="line" id="003356"><span class="nick" style="color:#389600"><a href="#003356" label="[00:33:56]">&lt;mihi&gt;</a></span><span class="message">somehow forgot...</span></div><div class="line" id="003447"><span class="nick" style="color:#389600"><a href="#003447" label="[00:34:47]">&lt;mihi&gt;</a></span><span class="message">a Makefile without VPATH trickery would probably be preferred for compatibility reasons anyway :)</span></div><div class="line" id="003623"><span class="nick" style="color:#389600"><a href="#003623" label="[00:36:23]">&lt;mihi&gt;</a></span><span class="message">mescc-tools doing the same btw :D</span></div><div class="line" id="003701"><span class="nick" style="color:#8dd3c7"><a href="#003701" label="[00:37:01]">&lt;stikonas&gt;</a></span><span class="message">mihi: install target is &quot;install: M2-Planet&quot;</span></div><div class="line" id="003714"><span class="nick" style="color:#8dd3c7"><a href="#003714" label="[00:37:14]">&lt;stikonas&gt;</a></span><span class="message">but the binary is actually in bin/M2-Planet</span></div><div class="line" id="003725"><span class="nick" style="color:#8dd3c7"><a href="#003725" label="[00:37:25]">&lt;stikonas&gt;</a></span><span class="message">so i think we just need to prefix it with bin/</span></div><div class="line" id="003737"><span class="nick" style="color:#389600"><a href="#003737" label="[00:37:37]">&lt;mihi&gt;</a></span><span class="message">same for mescc-tools: &quot;install: M1 hex2 blood-elf kaem get_machine&quot;</span></div><div class="line" id="003754"><span class="nick" style="color:#8dd3c7"><a href="#003754" label="[00:37:54]">&lt;stikonas&gt;</a></span><span class="message">oh, there is M2-Planet: target too</span></div><div class="line" id="003759"><span class="nick" style="color:#8dd3c7"><a href="#003759" label="[00:37:59]">&lt;stikonas&gt;</a></span><span class="message">so it's not a file target</span></div><div class="line" id="003813"><span class="nick" style="color:#8dd3c7"><a href="#003813" label="[00:38:13]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe I should test it myself</span></div><div class="line" id="003816"><span class="nick" style="color:#389600"><a href="#003816" label="[00:38:16]">&lt;mihi&gt;</a></span><span class="message">VPATH (set at top of makefile) is supposed to lookup inputs in bin/ as well, but I suppose it only works when that already exists</span></div><div class="line" id="003836"><span class="nick" style="color:#389600"><a href="#003836" label="[00:38:36]">&lt;mihi&gt;</a></span><span class="message">for me, &quot;make all &amp;&amp; make install&quot; worked, but &quot;make all install&quot; did not.</span></div><div class="line" id="003841"><span class="nick" style="color:#389600"><a href="#003841" label="[00:38:41]">&lt;mihi&gt;</a></span><span class="message">(on Cygwin)</span></div><div class="line" id="003841"><span class="nick" style="color:#8dd3c7"><a href="#003841" label="[00:38:41]">&lt;stikonas&gt;</a></span><span class="message">hmm, works for me</span></div><div class="line" id="003854"><span class="nick" style="color:#389600"><a href="#003854" label="[00:38:54]">&lt;mihi&gt;</a></span><span class="message">(assuming bin/M2-Planet did not exist at start)</span></div><div class="line" id="003900"><span class="nick" style="color:#8dd3c7"><a href="#003900" label="[00:39:00]">&lt;stikonas&gt;</a></span><span class="message">make install DESTDIR=destdir/</span></div><div class="line" id="003902"><span class="nick" style="color:#8dd3c7"><a href="#003902" label="[00:39:02]">&lt;stikonas&gt;</a></span><span class="message">mkdir -p destdir//usr/local/bin</span></div><div class="line" id="003903"><span class="nick" style="color:#8dd3c7"><a href="#003903" label="[00:39:03]">&lt;stikonas&gt;</a></span><span class="message">cp bin/M2-Planet destdir//usr/local/bin</span></div><div class="line" id="004126"><span class="nick" style="color:#389600"><a href="#004126" label="[00:41:26]">&lt;mihi&gt;</a></span><span class="message">stikonas, does &quot;make all install DESTDIR=destdir/&quot; work for you if bin directory does not exist at start of run?</span></div><div class="line" id="004153"><span class="nick" style="color:#8dd3c7"><a href="#004153" label="[00:41:53]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="004157"><span class="nick" style="color:#8dd3c7"><a href="#004157" label="[00:41:57]">&lt;stikonas&gt;</a></span><span class="message">well, mkdir -o creates it</span></div><div class="line" id="004201"><span class="nick" style="color:#8dd3c7"><a href="#004201" label="[00:42:01]">&lt;stikonas&gt;</a></span><span class="message">mkdir -p</span></div><div class="line" id="004224"><span class="nick" style="color:#389600"><a href="#004224" label="[00:42:24]">&lt;mihi&gt;</a></span><span class="message">and the &quot;install&quot; picked up the correct file? Good, then what I was seeing is indeed a Cygwin quirk.</span></div><div class="line" id="004243"><span class="nick" style="color:#389600"><a href="#004243" label="[00:42:43]">&lt;mihi&gt;</a></span><span class="message">for me, it compiled to bin/M2-Planet and then tried to move ./M2-Planet to destdir :D</span></div><div class="line" id="004410"><span class="nick" style="color:#389600"><a href="#004410" label="[00:44:10]">&lt;mihi&gt;</a></span><span class="message">so the question remains what problem vagrantc encountered :D</span></div><div class="line" id="004450"><span class="nick" style="color:#389600"><a href="#004450" label="[00:44:50]">&lt;mihi&gt;</a></span><span class="message">(in fact, it compiled to bin/M2-Planet.exe since it is cygwin :D)</span></div><div class="line" id="004507"><span class="nick" style="color:#8dd3c7"><a href="#004507" label="[00:45:07]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe because its not looking in local</span></div><div class="line" id="004509"><span class="nick" style="color:#8dd3c7"><a href="#004509" label="[00:45:09]">&lt;stikonas&gt;</a></span><span class="message">cp M2-Planet /&lt;&lt;PKGBUILDDIR&gt;&gt;/debian/m2-planet/usr/bin</span></div><div class="line" id="004518"><span class="nick" style="color:#8dd3c7"><a href="#004518" label="[00:45:18]">&lt;stikonas&gt;</a></span><span class="message">so PREFIX is not set?</span></div><div class="line" id="004554"><span class="nick" style="color:#8dd3c7"><a href="#004554" label="[00:45:54]">&lt;stikonas&gt;</a></span><span class="message">something is strange</span></div><div class="line" id="004602"><span class="nick" style="color:#8dd3c7"><a href="#004602" label="[00:46:02]">&lt;stikonas&gt;</a></span><span class="message">but I don't see anything wrong in our makefile</span></div><div class="line" id="005123"><span class="nick" style="color:#2e2a4a"><a href="#005123" label="[00:51:23]">&lt;vagrantc&gt;</a></span><span class="message">i tried setting PREFIX and it seemed to ignore it</span></div><div class="line" id="005222"><span class="nick" style="color:#2e2a4a"><a href="#005222" label="[00:52:22]">&lt;vagrantc&gt;</a></span><span class="message">i can poke at it some more at some point</span></div><div class="line" id="005305"><span class="nick" style="color:#2e2a4a"><a href="#005305" label="[00:53:05]">&lt;vagrantc&gt;</a></span><span class="message">but basically i need to be able to override PREFIX and DESTDIR appropriately somehow ... either through environment variable or explicitly passing to make</span></div><div class="line" id="005329"><span class="nick" style="color:#2e2a4a"><a href="#005329" label="[00:53:29]">&lt;vagrantc&gt;</a></span><span class="message">maybe i poke at it now</span></div><div class="line" id="005713"><span class="nick" style="color:#2e2a4a"><a href="#005713" label="[00:57:13]">&lt;vagrantc&gt;</a></span><span class="message">hrm. PREFIX and DESTDIR were empty ... weird.</span></div><div class="line" id="010126"><span class="nick" style="color:#8dd3c7"><a href="#010126" label="[01:01:26]">&lt;stikonas&gt;</a></span><span class="message">seems to work here</span></div><div class="line" id="010133"><span class="nick" style="color:#8dd3c7"><a href="#010133" label="[01:01:33]">&lt;stikonas&gt;</a></span><span class="message">both PREFIX and DESTDIR are respected</span></div><div class="line" id="010156"><span class="nick" style="color:#2e2a4a"><a href="#010156" label="[01:01:56]">&lt;vagrantc&gt;</a></span><span class="message">ok, it is clearly something in my packaging.</span></div><div class="line" id="010508"><span class="nick" style="color:#2e2a4a"><a href="#010508" label="[01:05:08]">&lt;vagrantc&gt;</a></span><span class="message">huh. ok. I have successfully passed PREFIX and DESTDIR ....</span></div><div class="line" id="010509"><span class="nick" style="color:#2e2a4a"><a href="#010509" label="[01:05:09]">&lt;vagrantc&gt;</a></span><span class="message">cp M2-Planet /&lt;&lt;PKGBUILDDIR&gt;&gt;/debian/m2-planet/usr/bin</span></div><div class="line" id="010509"><span class="nick" style="color:#2e2a4a"><a href="#010509" label="[01:05:09]">&lt;vagrantc&gt;</a></span><span class="message">cp: cannot stat 'M2-Planet': No such file or directory</span></div><div class="line" id="010520"><span class="nick" style="color:#2e2a4a"><a href="#010520" label="[01:05:20]">&lt;vagrantc&gt;</a></span><span class="message">M2-Planet is in bin/M2-Planet</span></div><div class="line" id="010553"><span class="nick" style="color:#2e2a4a"><a href="#010553" label="[01:05:53]">&lt;vagrantc&gt;</a></span><span class="message">is the &quot;cp&quot; call assuming to be run from some directory other than the toplevel directory?</span></div><div class="line" id="010956"><span class="nick" style="color:#2e2a4a"><a href="#010956" label="[01:09:56]">&lt;vagrantc&gt;</a></span><span class="message">well ... patching the makefile made it work as expected:</span></div><div class="line" id="010957"><span class="nick" style="color:#2e2a4a"><a href="#010957" label="[01:09:57]">&lt;vagrantc&gt;</a></span><span class="message">-install: M2-Planet</span></div><div class="line" id="010958"><span class="nick" style="color:#2e2a4a"><a href="#010958" label="[01:09:58]">&lt;vagrantc&gt;</a></span><span class="message">+install: bin/M2-Planet</span></div><div class="line" id="011321"><span class="nick" style="color:#8dd3c7"><a href="#011321" label="[01:13:21]">&lt;stikonas&gt;</a></span><span class="message">no, cp runs form toplevel</span></div><div class="line" id="011337"><span class="nick" style="color:#8dd3c7"><a href="#011337" label="[01:13:37]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: but that's very strange</span></div><div class="line" id="011346"><span class="nick" style="color:#8dd3c7"><a href="#011346" label="[01:13:46]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet is not a file target, it's another make target</span></div><div class="line" id="011405"><span class="nick" style="color:#8dd3c7"><a href="#011405" label="[01:14:05]">&lt;stikonas&gt;</a></span><span class="message">why does that one fail?</span></div><div class="line" id="011412"><span class="nick" style="color:#8dd3c7"><a href="#011412" label="[01:14:12]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/blob/master/makefile#L28">https://github.com/oriansj/M2-Planet/blob/master/makefile#L28</a> </span></div><div class="line" id="011559"><span class="nick" style="color:#2e2a4a"><a href="#011559" label="[01:15:59]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/blob/master/makefile#L122">https://github.com/oriansj/M2-Planet/blob/master/makefile#L122</a> </span></div><div class="line" id="011606"><span class="nick" style="color:#2e2a4a"><a href="#011606" label="[01:16:06]">&lt;vagrantc&gt;</a></span><span class="message">pretty sure that is where it is failing</span></div><div class="line" id="011720"><span class="nick" style="color:#389600"><a href="#011720" label="[01:17:20]">&lt;mihi&gt;</a></span><span class="message">vagrantc, do you explicitly mess with VPATH variable?</span></div><div class="line" id="011737"><span class="nick" style="color:#2e2a4a"><a href="#011737" label="[01:17:37]">&lt;vagrantc&gt;</a></span><span class="message">not that i am aware of, but i am using standard debian machinery</span></div><div class="line" id="011856"><span class="nick" style="color:#8dd3c7"><a href="#011856" label="[01:18:56]">&lt;stikonas&gt;</a></span><span class="message">well, VPATH is set in makefile to VPATH = bin:test:test/results</span></div><div class="line" id="011905"><span class="nick" style="color:#8dd3c7"><a href="#011905" label="[01:19:05]">&lt;stikonas&gt;</a></span><span class="message">so it should look in bin</span></div><div class="line" id="011919"><span class="nick" style="color:#2e2a4a"><a href="#011919" label="[01:19:19]">&lt;vagrantc&gt;</a></span><span class="message">this is just a cp call ...</span></div><div class="line" id="011937"><span class="nick" style="color:#2e2a4a"><a href="#011937" label="[01:19:37]">&lt;vagrantc&gt;</a></span><span class="message">cp $^ $(bindir)</span></div><div class="line" id="011946"><span class="nick" style="color:#8dd3c7"><a href="#011946" label="[01:19:46]">&lt;stikonas&gt;</a></span><span class="message">it's not cp that fails I think</span></div><div class="line" id="011951"><span class="nick" style="color:#8dd3c7"><a href="#011951" label="[01:19:51]">&lt;stikonas&gt;</a></span><span class="message">it's $^ resolution</span></div><div class="line" id="012003"><span class="nick" style="color:#8dd3c7"><a href="#012003" label="[01:20:03]">&lt;stikonas&gt;</a></span><span class="message">$^ is expanded to M2-Planet rather than bin/M2-Planet</span></div><div class="line" id="012225"><span class="nick" style="color:#2e2a4a"><a href="#012225" label="[01:22:25]">&lt;vagrantc&gt;</a></span><span class="message">clearly. i guess the question is how is it even actually supposed to work.</span></div><div class="line" id="012422"><span class="nick" style="color:#8dd3c7"><a href="#012422" label="[01:24:22]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: make should search for dirs in VPATH</span></div><div class="line" id="012425"><span class="nick" style="color:#8dd3c7"><a href="#012425" label="[01:24:25]">&lt;stikonas&gt;</a></span><span class="message">and if it fidns it</span></div><div class="line" id="012445"><span class="nick" style="color:#8dd3c7"><a href="#012445" label="[01:24:45]">&lt;stikonas&gt;</a></span><span class="message">it's basically $^ -&gt; ${VPATH}/${target}</span></div><div class="line" id="012510"><span class="nick" style="color:#2e2a4a"><a href="#012510" label="[01:25:10]">&lt;vagrantc&gt;</a></span><span class="message">huh, works locally ...</span></div><div class="line" id="012627"><span class="nick" style="color:#2e2a4a"><a href="#012627" label="[01:26:27]">&lt;vagrantc&gt;</a></span><span class="message">well ... huh. only when DESTDIR already exists</span></div><div class="line" id="012737"><span class="nick" style="color:#8dd3c7"><a href="#012737" label="[01:27:37]">&lt;stikonas&gt;</a></span><span class="message">but we do call mkdir -p there</span></div><div class="line" id="012744"><span class="nick" style="color:#2e2a4a"><a href="#012744" label="[01:27:44]">&lt;vagrantc&gt;</a></span><span class="message">ok ...</span></div><div class="line" id="012757"><span class="nick" style="color:#2e2a4a"><a href="#012757" label="[01:27:57]">&lt;vagrantc&gt;</a></span><span class="message">first pass, it fails, second pass, it succeeds</span></div><div class="line" id="012759"><span class="nick" style="color:#2e2a4a"><a href="#012759" label="[01:27:59]">&lt;vagrantc&gt;</a></span><span class="message">make install PREFIX=x DESTDIR=xyz/</span></div><div class="line" id="012818"><span class="nick" style="color:#2e2a4a"><a href="#012818" label="[01:28:18]">&lt;vagrantc&gt;</a></span><span class="message">mkdir -p xyz/x/bin</span></div><div class="line" id="012818"><span class="nick" style="color:#2e2a4a"><a href="#012818" label="[01:28:18]">&lt;vagrantc&gt;</a></span><span class="message">cp M2-Planet xyz/x/bin</span></div><div class="line" id="012818"><span class="nick" style="color:#2e2a4a"><a href="#012818" label="[01:28:18]">&lt;vagrantc&gt;</a></span><span class="message">cp: cannot stat 'M2-Planet': No such file or directory</span></div><div class="line" id="012818"><span class="nick" style="color:#2e2a4a"><a href="#012818" label="[01:28:18]">&lt;vagrantc&gt;</a></span><span class="message">make: *** [makefile:122: install] Error 1</span></div><div class="line" id="012820"><span class="nick" style="color:#8dd3c7"><a href="#012820" label="[01:28:20]">&lt;stikonas&gt;</a></span><span class="message">just works here</span></div><div class="line" id="012834"><span class="nick" style="color:#8dd3c7"><a href="#012834" label="[01:28:34]">&lt;stikonas&gt;</a></span><span class="message">make install PREFIX=x DESTDIR=xyz/</span></div><div class="line" id="012836"><span class="nick" style="color:#2e2a4a"><a href="#012836" label="[01:28:36]">&lt;vagrantc&gt;</a></span><span class="message">make install PREFIX=x DESTDIR=xyz/</span></div><div class="line" id="012836"><span class="nick" style="color:#2e2a4a"><a href="#012836" label="[01:28:36]">&lt;vagrantc&gt;</a></span><span class="message">mkdir -p xyz/x/bin</span></div><div class="line" id="012836"><span class="nick" style="color:#8dd3c7"><a href="#012836" label="[01:28:36]">&lt;stikonas&gt;</a></span><span class="message">mkdir -p xyz/x/bin</span></div><div class="line" id="012836"><span class="nick" style="color:#2e2a4a"><a href="#012836" label="[01:28:36]">&lt;vagrantc&gt;</a></span><span class="message">cp bin/M2-Planet xyz/x/bin</span></div><div class="line" id="012837"><span class="nick" style="color:#8dd3c7"><a href="#012837" label="[01:28:37]">&lt;stikonas&gt;</a></span><span class="message">cp bin/M2-Planet xyz/x/bin</span></div><div class="line" id="012840"><span class="nick" style="color:#2e2a4a"><a href="#012840" label="[01:28:40]">&lt;vagrantc&gt;</a></span><span class="message">works on the second pass</span></div><div class="line" id="012846"><span class="nick" style="color:#8dd3c7"><a href="#012846" label="[01:28:46]">&lt;stikonas&gt;</a></span><span class="message">huh...</span></div><div class="line" id="012849"><span class="nick" style="color:#8dd3c7"><a href="#012849" label="[01:28:49]">&lt;stikonas&gt;</a></span><span class="message">but here it works on 1st</span></div><div class="line" id="012900"><span class="nick" style="color:#8dd3c7"><a href="#012900" label="[01:29:00]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: that's locally outside debian packaging?</span></div><div class="line" id="012906"><span class="nick" style="color:#2e2a4a"><a href="#012906" label="[01:29:06]">&lt;vagrantc&gt;</a></span><span class="message">yeah</span></div><div class="line" id="012920"><span class="nick" style="color:#8dd3c7"><a href="#012920" label="[01:29:20]">&lt;stikonas&gt;</a></span><span class="message">make --version?</span></div><div class="line" id="012939"><span class="nick" style="color:#2e2a4a"><a href="#012939" label="[01:29:39]">&lt;vagrantc&gt;</a></span><span class="message">GNU Make 4.3</span></div><div class="line" id="012956"><span class="nick" style="color:#2e2a4a"><a href="#012956" label="[01:29:56]">&lt;vagrantc&gt;</a></span><span class="message">same version in the build environment too</span></div><div class="line" id="013053"><span class="nick" style="color:#8dd3c7"><a href="#013053" label="[01:30:53]">&lt;stikonas&gt;</a></span><span class="message">ok, I have 4.4.1</span></div><div class="line" id="013056"><span class="nick" style="color:#8dd3c7"><a href="#013056" label="[01:30:56]">&lt;stikonas&gt;</a></span><span class="message">probably both have -d flag</span></div><div class="line" id="013121"><span class="nick" style="color:#2e2a4a"><a href="#013121" label="[01:31:21]">&lt;vagrantc&gt;</a></span><span class="message">ok, if i run make PREFIX=x DESTDIR=xyz/ &amp;&amp; make install PREFIX=x DESTDIR=xyz/ ... it works</span></div><div class="line" id="013208"><span class="nick" style="color:#8dd3c7"><a href="#013208" label="[01:32:08]">&lt;stikonas&gt;</a></span><span class="message">ok, I can reproduce</span></div><div class="line" id="013214"><span class="nick" style="color:#8dd3c7"><a href="#013214" label="[01:32:14]">&lt;stikonas&gt;</a></span><span class="message">I had to run make clean</span></div><div class="line" id="013222"><span class="nick" style="color:#2e2a4a"><a href="#013222" label="[01:32:22]">&lt;vagrantc&gt;</a></span><span class="message">ah, yes, from a clean git checkout</span></div><div class="line" id="013234"><span class="nick" style="color:#8dd3c7"><a href="#013234" label="[01:32:34]">&lt;stikonas&gt;</a></span><span class="message">yeah, but to reproduce you need to run make install</span></div><div class="line" id="013236"><span class="nick" style="color:#8dd3c7"><a href="#013236" label="[01:32:36]">&lt;stikonas&gt;</a></span><span class="message">not make</span></div><div class="line" id="013241"><span class="nick" style="color:#8dd3c7"><a href="#013241" label="[01:32:41]">&lt;stikonas&gt;</a></span><span class="message">and then followed by install</span></div><div class="line" id="013302"><span class="nick" style="color:#2e2a4a"><a href="#013302" label="[01:33:02]">&lt;vagrantc&gt;</a></span><span class="message">right ... which ... the packaging should be doing</span></div><div class="line" id="013316"><span class="nick" style="color:#8dd3c7"><a href="#013316" label="[01:33:16]">&lt;stikonas&gt;</a></span><span class="message">but clearly isn't</span></div><div class="line" id="013322"><span class="nick" style="color:#2e2a4a"><a href="#013322" label="[01:33:22]">&lt;vagrantc&gt;</a></span><span class="message">e.g. bin/M2-Planet exists when i just do not even bother to call &quot;make install&quot;</span></div><div class="line" id="013323"><span class="nick" style="color:#8dd3c7"><a href="#013323" label="[01:33:23]">&lt;stikonas&gt;</a></span><span class="message">though I think the bug is also in makefile</span></div><div class="line" id="013605"><span class="nick" style="color:#8dd3c7"><a href="#013605" label="[01:36:05]">&lt;stikonas&gt;</a></span><span class="message">somebody advises against using VPATH to find targets <a rel="nofollow" href="https://make.mad-scientist.net/papers/how-not-to-use-vpath/">https://make.mad-scientist.net/papers/how-not-to-use-vpath/</a> </span></div><div class="line" id="013841"><span class="nick" style="color:#2e2a4a"><a href="#013841" label="[01:38:41]">&lt;vagrantc&gt;</a></span><span class="message">that sounds like a plausible explanation of what is going on</span></div><div class="line" id="013853"><span class="nick" style="color:#8dd3c7"><a href="#013853" label="[01:38:53]">&lt;stikonas&gt;</a></span><span class="message">yaeh...</span></div><div class="line" id="013955"><span class="nick" style="color:#2e2a4a"><a href="#013955" label="[01:39:55]">&lt;vagrantc&gt;</a></span><span class="message">well, i have workarounds until a proper fix comes up</span></div><div class="line" id="014004"><span class="nick" style="color:#2e2a4a"><a href="#014004" label="[01:40:04]">&lt;vagrantc&gt;</a></span><span class="message">at least two workarounds to choose from...</span></div><div class="line" id="014103"><span class="nick" style="color:#2e2a4a"><a href="#014103" label="[01:41:03]">&lt;vagrantc&gt;</a></span><span class="message">ugh. not enough sunshine to finish my mes build on riscv64 :/</span></div><div class="line" id="014239"><span class="nick" style="color:#2e2a4a"><a href="#014239" label="[01:42:39]">&lt;vagrantc&gt;</a></span><span class="message">first workaround is just to manually install it from the debian packaging ... second is to patch the makefile to look in the &quot;right&quot; place.</span></div><div class="line" id="014259"><span class="nick" style="color:#2e2a4a"><a href="#014259" label="[01:42:59]">&lt;vagrantc&gt;</a></span><span class="message">is that one-line patch ... wrong?</span></div><div class="line" id="014342"><span class="nick" style="color:#2e2a4a"><a href="#014342" label="[01:43:42]">&lt;vagrantc&gt;</a></span><span class="message">the M2-Planet target *does* create bin/M2-Planet ... so it appears to work.</span></div><div class="line" id="014429"><span class="nick" style="color:#2e2a4a"><a href="#014429" label="[01:44:29]">&lt;vagrantc&gt;</a></span><span class="message">although then i still have to manually install the manpage :)</span></div><div class="line" id="014838"><span class="nick" style="color:#6b8072"><a href="#014838" label="[01:48:38]">&lt;stikonas_&gt;</a></span><span class="message">vagrantc: hmm, I'm a bit concerned about just patching that one line</span></div><div class="line" id="014852"><span class="nick" style="color:#6b8072"><a href="#014852" label="[01:48:52]">&lt;stikonas_&gt;</a></span><span class="message">so  now you have install : bin/M2-Planet</span></div><div class="line" id="014909"><span class="nick" style="color:#6b8072"><a href="#014909" label="[01:49:09]">&lt;stikonas_&gt;</a></span><span class="message">but we don't have bin/M2-Planet target anywhere in the file</span></div><div class="line" id="014913"><span class="nick" style="color:#6b8072"><a href="#014913" label="[01:49:13]">&lt;stikonas_&gt;</a></span><span class="message">there is M2-Planet target...</span></div><div class="line" id="014944"><span class="nick" style="color:#2e2a4a"><a href="#014944" label="[01:49:44]">&lt;vagrantc&gt;</a></span><span class="message">ah, right ... so it would not actually build M2-Planet if it was not yet present</span></div><div class="line" id="014953"><span class="nick" style="color:#6b8072"><a href="#014953" label="[01:49:53]">&lt;stikonas_&gt;</a></span><span class="message">how does it know that bin/M2-Planet has to be built using rules from M2-Planet:</span></div><div class="line" id="015000"><span class="nick" style="color:#6b8072"><a href="#015000" label="[01:50:00]">&lt;stikonas_&gt;</a></span><span class="message">(maybe VPATH works this time)</span></div><div class="line" id="015026"><span class="nick" style="color:#2e2a4a"><a href="#015026" label="[01:50:26]">&lt;vagrantc&gt;</a></span><span class="message">because it effectively first does &quot;make all&quot;</span></div><div class="line" id="015026"><span class="nick" style="color:#6b8072"><a href="#015026" label="[01:50:26]">&lt;stikonas_&gt;</a></span><span class="message">yeah, I think so..</span></div><div class="line" id="015036"><span class="nick" style="color:#6b8072"><a href="#015036" label="[01:50:36]">&lt;stikonas_&gt;</a></span><span class="message">so it's still a bit buggy</span></div><div class="line" id="015040"><span class="nick" style="color:#6b8072"><a href="#015040" label="[01:50:40]">&lt;stikonas_&gt;</a></span><span class="message">and not a proper fix</span></div><div class="line" id="015114"><span class="nick" style="color:#6b8072"><a href="#015114" label="[01:51:14]">&lt;stikonas_&gt;</a></span><span class="message">perhaps we should just follow that blog</span></div><div class="line" id="015123"><span class="nick" style="color:#6b8072"><a href="#015123" label="[01:51:23]">&lt;stikonas_&gt;</a></span><span class="message">but that's more work than there is time today</span></div><div class="line" id="015151"><span class="nick" style="color:#2e2a4a"><a href="#015151" label="[01:51:51]">&lt;vagrantc&gt;</a></span><span class="message">not too opinionated, really :)</span></div><div class="line" id="015209"><span class="nick" style="color:#6b8072"><a href="#015209" label="[01:52:09]">&lt;stikonas_&gt;</a></span><span class="message">we should also ask what oriansj thinks...</span></div><div class="line" id="015243"><span class="nick" style="color:#2e2a4a"><a href="#015243" label="[01:52:43]">&lt;vagrantc&gt;</a></span><span class="message">indeed</span></div><div class="line" id="032805"><span class="nick" style="color:#80b1d3"><a href="#032805" label="[03:28:05]">&lt;oriansj&gt;</a></span><span class="message">we can always make M2-Planet and mescc-tools more proper</span></div><div class="line" id="054824"><span class="nick" style="color:#6d2462"><a href="#054824" label="[05:48:24]">&lt;muurkha&gt;</a></span><span class="message">ACTION make mrproper</span></div><div class="line" id="141853"><span class="nick" style="color:#234e69"><a href="#141853" label="[14:18:53]">&lt;Googulator&gt;</a></span><span class="message">Today, I've officially entered the 6th bit of my life :) and what could be a better birthday gift than seeing bootstrap go all the way to GCC 13 (and counting) on bare metal *with no more linux-5.10 dependency* - while watching Starship Flight 2!</span></div><div class="line" id="142141"><span class="nick" style="color:#234e69"><a href="#142141" label="[14:21:41]">&lt;Googulator&gt;</a></span><span class="message">And I also verified that with linux-5.10 gone from srcfs, we can now fit a 1280MB sysa.ext2 below the MMIO limit on qemu, which is also bootstrapping as we speak (currently rebuilding musl, but I have already seen it reach sysb, where it failed due to a dumb mistake I've now fixed)</span></div><div class="line" id="142338"><span class="nick" style="color:#234e69"><a href="#142338" label="[14:23:38]">&lt;Googulator&gt;</a></span><span class="message">bare metal sysa.img is down to 284MiB - with gz -&gt; bz2 recompression, we could easily get back to below 256MiB, which is my target for the SPI or parallel flash bootstrap plan</span></div><div class="line" id="142442"><span class="nick" style="color:#234e69"><a href="#142442" label="[14:24:42]">&lt;Googulator&gt;</a></span><span class="message">hopefully the bare metal bootstrap won't blow up at the last second in GCC 13, unlike Starship</span></div><div class="line" id="142452"><span class="nick" style="color:#234e69"><a href="#142452" label="[14:24:52]">&lt;Googulator&gt;</a></span><span class="message">🤞</span></div><div class="line" id="142555"><span class="nick" style="color:#234e69"><a href="#142555" label="[14:25:55]">&lt;Googulator&gt;</a></span><span class="message">probably an hour or two to go at this point</span></div><div class="line" id="144919"><span class="nick" style="color:#8dd3c7"><a href="#144919" label="[14:49:19]">&lt;stikonas&gt;</a></span><span class="message">Googulator: nice! At some point we should start upstreaming your patches</span></div><div class="line" id="144944"><span class="nick" style="color:#8dd3c7"><a href="#144944" label="[14:49:44]">&lt;stikonas&gt;</a></span><span class="message">though there is probably quite a lot, it would be easier if you can split it into a few smaller PRs...</span></div><div class="line" id="145320"><span class="nick" style="color:#234e69"><a href="#145320" label="[14:53:20]">&lt;Googulator&gt;</a></span><span class="message">Yeah, I'll have to properly refactor it &amp; split into more logical units</span></div><div class="line" id="145415"><span class="nick" style="color:#234e69"><a href="#145415" label="[14:54:15]">&lt;Googulator&gt;</a></span><span class="message">also the way grub is built is very unbootstraplike</span></div><div class="line" id="145427"><span class="nick" style="color:#234e69"><a href="#145427" label="[14:54:27]">&lt;Googulator&gt;</a></span><span class="message">it's all &quot;by hand&quot; in after.sh</span></div><div class="line" id="145433"><span class="nick" style="color:#234e69"><a href="#145433" label="[14:54:33]">&lt;Googulator&gt;</a></span><span class="message">instead of a proper package</span></div><div class="line" id="145709"><span class="nick" style="color:#234e69"><a href="#145709" label="[14:57:09]">&lt;Googulator&gt;</a></span><span class="message">By the way, does anyone know a way to code a for loop in the early bash (2.0.something)?</span></div><div class="line" id="145716"><span class="nick" style="color:#8dd3c7"><a href="#145716" label="[14:57:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, grub should be upgraded a bit</span></div><div class="line" id="145734"><span class="nick" style="color:#8dd3c7"><a href="#145734" label="[14:57:34]">&lt;stikonas&gt;</a></span><span class="message">all those config files should be also moved outside bash scripts witgh cat &gt;&gt;&gt;</span></div><div class="line" id="145739"><span class="nick" style="color:#234e69"><a href="#145739" label="[14:57:39]">&lt;Googulator&gt;</a></span><span class="message">Neither the C-like syntax nor the for a in {1..1000} one works</span></div><div class="line" id="145803"><span class="nick" style="color:#234e69"><a href="#145803" label="[14:58:03]">&lt;Googulator&gt;</a></span><span class="message">AFAIK that's the latest grub right now</span></div><div class="line" id="145809"><span class="nick" style="color:#234e69"><a href="#145809" label="[14:58:09]">&lt;Googulator&gt;</a></span><span class="message">there's only an RC that's newer</span></div><div class="line" id="145826"><span class="nick" style="color:#8dd3c7"><a href="#145826" label="[14:58:26]">&lt;stikonas&gt;</a></span><span class="message">{1..1000} wouldn't work I think</span></div><div class="line" id="145827"><span class="nick" style="color:#8dd3c7"><a href="#145827" label="[14:58:27]">&lt;stikonas&gt;</a></span><span class="message">that's much newer</span></div><div class="line" id="145838"><span class="nick" style="color:#8dd3c7"><a href="#145838" label="[14:58:38]">&lt;stikonas&gt;</a></span><span class="message">Googulator: can you not use seq?</span></div><div class="line" id="145904"><span class="nick" style="color:#234e69"><a href="#145904" label="[14:59:04]">&lt;Googulator&gt;</a></span><span class="message">I'm not sure if seq is built by that point</span></div><div class="line" id="145906"><span class="nick" style="color:#8dd3c7"><a href="#145906" label="[14:59:06]">&lt;stikonas&gt;</a></span><span class="message">Googulator: sorry, I wanted to say scripts updated, bit grub upgraded...</span></div><div class="line" id="145913"><span class="nick" style="color:#8dd3c7"><a href="#145913" label="[14:59:13]">&lt;stikonas&gt;</a></span><span class="message">hmm, seq is probably built in coreutils</span></div><div class="line" id="145915"><span class="nick" style="color:#8dd3c7"><a href="#145915" label="[14:59:15]">&lt;stikonas&gt;</a></span><span class="message">let's check</span></div><div class="line" id="145915"><span class="nick" style="color:#234e69"><a href="#145915" label="[14:59:15]">&lt;Googulator&gt;</a></span><span class="message">or is that built into Bash itself?</span></div><div class="line" id="145921"><span class="nick" style="color:#8dd3c7"><a href="#145921" label="[14:59:21]">&lt;stikonas&gt;</a></span><span class="message">no, coreutils</span></div><div class="line" id="145928"><span class="nick" style="color:#8dd3c7"><a href="#145928" label="[14:59:28]">&lt;stikonas&gt;</a></span><span class="message">but we build first iteration of coreutils before bash</span></div><div class="line" id="145942"><span class="nick" style="color:#234e69"><a href="#145942" label="[14:59:42]">&lt;Googulator&gt;</a></span><span class="message">tbh, the reason I need the for loop in the first place is because we're missing df at that point</span></div><div class="line" id="145954"><span class="nick" style="color:#234e69"><a href="#145954" label="[14:59:54]">&lt;Googulator&gt;</a></span><span class="message">also coreutils</span></div><div class="line" id="150022"><span class="nick" style="color:#234e69"><a href="#150022" label="[15:00:22]">&lt;Googulator&gt;</a></span><span class="message">I'm trying to see how much space is left over after the Linux build, before clean up</span></div><div class="line" id="150036"><span class="nick" style="color:#234e69"><a href="#150036" label="[15:00:36]">&lt;Googulator&gt;</a></span><span class="message">I tried df first - no dice, it's not built until much later</span></div><div class="line" id="150122"><span class="nick" style="color:#234e69"><a href="#150122" label="[15:01:22]">&lt;Googulator&gt;</a></span><span class="message">so I came up with     for i in {1..1000000};   do   echo &quot;interation $i&quot;;     cat /boot/fiwix &gt;&gt; /boot/wifix || break;  done</span></div><div class="line" id="150130"><span class="nick" style="color:#234e69"><a href="#150130" label="[15:01:30]">&lt;Googulator&gt;</a></span><span class="message">&amp; then ls -l /boot/wifix</span></div><div class="line" id="150143"><span class="nick" style="color:#234e69"><a href="#150143" label="[15:01:43]">&lt;Googulator&gt;</a></span><span class="message">will tell us how big it got before the disk got full</span></div><div class="line" id="150215"><span class="nick" style="color:#234e69"><a href="#150215" label="[15:02:15]">&lt;Googulator&gt;</a></span><span class="message">unfortunately that for loop syntax doesn't work</span></div><div class="line" id="150310"><span class="nick" style="color:#234e69"><a href="#150310" label="[15:03:10]">&lt;Googulator&gt;</a></span><span class="message">neither did for (( i=1; i&lt;=1000000; i++ ))</span></div><div class="line" id="150400"><span class="nick" style="color:#234e69"><a href="#150400" label="[15:04:00]">&lt;Googulator&gt;</a></span><span class="message">hmm, I could try nested loops of for i in 1 2 3 4 5 6 7 8 9 10</span></div><div class="line" id="151350"><span class="nick" style="color:#8dd3c7"><a href="#151350" label="[15:13:50]">&lt;stikonas&gt;</a></span><span class="message">sorry, had to run away for a bit</span></div><div class="line" id="151357"><span class="nick" style="color:#8dd3c7"><a href="#151357" label="[15:13:57]">&lt;stikonas&gt;</a></span><span class="message">seq is in the first coreutils build <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/coreutils-5.0/coreutils-5.0.checksums">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/coreutils-5.0/coreutils-5.0.checksums</a> </span></div><div class="line" id="151426"><span class="nick" style="color:#234e69"><a href="#151426" label="[15:14:26]">&lt;Googulator&gt;</a></span><span class="message">good!</span></div><div class="line" id="151442"><span class="nick" style="color:#234e69"><a href="#151442" label="[15:14:42]">&lt;Googulator&gt;</a></span><span class="message">(I've already started a test with nested loops, will try seq if that fails)</span></div><div class="line" id="151531"><span class="nick" style="color:#234e69"><a href="#151531" label="[15:15:31]">&lt;Googulator&gt;</a></span><span class="message">btw, in kexec-fiwix, we now have this:</span></div><div class="line" id="151532"><span class="nick" style="color:#234e69"><a href="#151532" label="[15:15:32]">&lt;Googulator&gt;</a></span><span class="message">Found image at filenum 8472</span></div><div class="line" id="151532"><span class="nick" style="color:#234e69"><a href="#151532" label="[15:15:32]">&lt;Googulator&gt;</a></span><span class="message">initrd_src: 0x6b9b2b96</span></div><div class="line" id="151533"><span class="nick" style="color:#234e69"><a href="#151533" label="[15:15:33]">&lt;Googulator&gt;</a></span><span class="message">initrd_len: 0x50000000</span></div><div class="line" id="151611"><span class="nick" style="color:#8dd3c7"><a href="#151611" label="[15:16:11]">&lt;stikonas&gt;</a></span><span class="message">ideally we should also leave some space for future upgrades</span></div><div class="line" id="151623"><span class="nick" style="color:#234e69"><a href="#151623" label="[15:16:23]">&lt;Googulator&gt;</a></span><span class="message">MMIO space starts @ 0xbffe0000 in qemu</span></div><div class="line" id="151641"><span class="nick" style="color:#8dd3c7"><a href="#151641" label="[15:16:41]">&lt;stikonas&gt;</a></span><span class="message">i.e. at some point we might have to add some more packages (e.g. gash) or upgrade other stuff, especially GCC</span></div><div class="line" id="151659"><span class="nick" style="color:#8dd3c7"><a href="#151659" label="[15:16:59]">&lt;stikonas&gt;</a></span><span class="message">also boot scripts might grow as well...</span></div><div class="line" id="151707"><span class="nick" style="color:#8dd3c7"><a href="#151707" label="[15:17:07]">&lt;stikonas&gt;</a></span><span class="message">though probably not too much there</span></div><div class="line" id="151719"><span class="nick" style="color:#234e69"><a href="#151719" label="[15:17:19]">&lt;Googulator&gt;</a></span><span class="message">That means, we can go up to 1350MB on the fiwix initrd right now</span></div><div class="line" id="151724"><span class="nick" style="color:#8dd3c7"><a href="#151724" label="[15:17:24]">&lt;stikonas&gt;</a></span><span class="message">but stuff like GCC upgrade might need quite a bit of space</span></div><div class="line" id="151731"><span class="nick" style="color:#234e69"><a href="#151731" label="[15:17:31]">&lt;Googulator&gt;</a></span><span class="message">of course, any files added to sysa will eat into that</span></div><div class="line" id="151733"><span class="nick" style="color:#8dd3c7"><a href="#151733" label="[15:17:33]">&lt;stikonas&gt;</a></span><span class="message">Googulator: nice!</span></div><div class="line" id="151815"><span class="nick" style="color:#234e69"><a href="#151815" label="[15:18:15]">&lt;Googulator&gt;</a></span><span class="message">so we have 70MB of space right now outside the initrd</span></div><div class="line" id="151827"><span class="nick" style="color:#234e69"><a href="#151827" label="[15:18:27]">&lt;Googulator&gt;</a></span><span class="message">I'll soon see how much space we have inside</span></div><div class="line" id="151916"><span class="nick" style="color:#234e69"><a href="#151916" label="[15:19:16]">&lt;Googulator&gt;</a></span><span class="message">Also, as an unexpected consequence of enabling framebuffer console support, I now get 4 penguins on bare metal</span></div><div class="line" id="151930"><span class="nick" style="color:#8dd3c7"><a href="#151930" label="[15:19:30]">&lt;stikonas&gt;</a></span><span class="message">oh, nice extra!</span></div><div class="line" id="151959"><span class="nick" style="color:#234e69"><a href="#151959" label="[15:19:59]">&lt;Googulator&gt;</a></span><span class="message">of course, your mileage (or rather, coreage) may vary depending on the hardware</span></div><div class="line" id="152014"><span class="nick" style="color:#8dd3c7"><a href="#152014" label="[15:20:14]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'll probably try baremetal bootstrap with new hardware in a month or so</span></div><div class="line" id="152036"><span class="nick" style="color:#234e69"><a href="#152036" label="[15:20:36]">&lt;Googulator&gt;</a></span><span class="message">Actual new hardware could be hard</span></div><div class="line" id="152053"><span class="nick" style="color:#234e69"><a href="#152053" label="[15:20:53]">&lt;Googulator&gt;</a></span><span class="message">it's virtually all Class 3/3+ now</span></div><div class="line" id="152056"><span class="nick" style="color:#234e69"><a href="#152056" label="[15:20:56]">&lt;Googulator&gt;</a></span><span class="message">No CSM</span></div><div class="line" id="152058"><span class="nick" style="color:#8dd3c7"><a href="#152058" label="[15:20:58]">&lt;stikonas&gt;</a></span><span class="message">well, we'll see...</span></div><div class="line" id="152122"><span class="nick" style="color:#234e69"><a href="#152122" label="[15:21:22]">&lt;Googulator&gt;</a></span><span class="message">We'll need builder-hex0.efi for that</span></div><div class="line" id="152138"><span class="nick" style="color:#234e69"><a href="#152138" label="[15:21:38]">&lt;Googulator&gt;</a></span><span class="message">should be easier to do than the current BIOS version</span></div><div class="line" id="152152"><span class="nick" style="color:#8dd3c7"><a href="#152152" label="[15:21:52]">&lt;stikonas&gt;</a></span><span class="message">yeah, that is incomplete...</span></div><div class="line" id="152158"><span class="nick" style="color:#234e69"><a href="#152158" label="[15:21:58]">&lt;Googulator&gt;</a></span><span class="message">but then again, I'm not so much interested in bootstrapping on new hardware</span></div><div class="line" id="152200"><span class="nick" style="color:#8dd3c7"><a href="#152200" label="[15:22:00]">&lt;stikonas&gt;</a></span><span class="message">well, stage0-uefi is tehre</span></div><div class="line" id="152208"><span class="nick" style="color:#8dd3c7"><a href="#152208" label="[15:22:08]">&lt;stikonas&gt;</a></span><span class="message">but anything after that is not done</span></div><div class="line" id="152220"><span class="nick" style="color:#234e69"><a href="#152220" label="[15:22:20]">&lt;Googulator&gt;</a></span><span class="message">too much recent, closed source firmware before you get to run any code</span></div><div class="line" id="152248"><span class="nick" style="color:#234e69"><a href="#152248" label="[15:22:48]">&lt;Googulator&gt;</a></span><span class="message">and yes, you could get something with edk2, which is open-source - but is it bootstrappable?</span></div><div class="line" id="152311"><span class="nick" style="color:#8dd3c7"><a href="#152311" label="[15:23:11]">&lt;stikonas&gt;</a></span><span class="message">well, yes, they are not bootstrappable, but still coreboot/edk2 is better than random machine</span></div><div class="line" id="152358"><span class="nick" style="color:#8dd3c7"><a href="#152358" label="[15:23:58]">&lt;stikonas&gt;</a></span><span class="message">even if you don't get bootstrappable trust, you'll at least run more open code than proprietary UEFI</span></div><div class="line" id="152413"><span class="nick" style="color:#234e69"><a href="#152413" label="[15:24:13]">&lt;Googulator&gt;</a></span><span class="message">yeah, it's way better to have a blob you built on a potentially untrustworthy machine with a potentially untrustworthy toolchain than an outright proprietary one</span></div><div class="line" id="152428"><span class="nick" style="color:#8dd3c7"><a href="#152428" label="[15:24:28]">&lt;stikonas&gt;</a></span><span class="message">especially given that with UEFI you even have some UEFI code left in the memory after boot</span></div><div class="line" id="152516"><span class="nick" style="color:#234e69"><a href="#152516" label="[15:25:16]">&lt;Googulator&gt;</a></span><span class="message">but it's still a path through which a retrovirus (i.e. a Trusting-Trust-style backdoor) may sneak through into the bootstrap environment</span></div><div class="line" id="152534"><span class="nick" style="color:#8dd3c7"><a href="#152534" label="[15:25:34]">&lt;stikonas&gt;</a></span><span class="message">yeah, but we do have some help from diverse compiling here</span></div><div class="line" id="152546"><span class="nick" style="color:#8dd3c7"><a href="#152546" label="[15:25:46]">&lt;stikonas&gt;</a></span><span class="message">one can check output hashes</span></div><div class="line" id="152555"><span class="nick" style="color:#234e69"><a href="#152555" label="[15:25:55]">&lt;Googulator&gt;</a></span><span class="message">retrovirus, because HIV is basically a Trusting Trust on our immune system</span></div><div class="line" id="152559"><span class="nick" style="color:#8dd3c7"><a href="#152559" label="[15:25:59]">&lt;stikonas&gt;</a></span><span class="message">and if hashes match on old machine, e.g. what you bootstrap and new machine</span></div><div class="line" id="152636"><span class="nick" style="color:#234e69"><a href="#152636" label="[15:26:36]">&lt;Googulator&gt;</a></span><span class="message">That's one good way to do it - bootstrap once on old hardware, then use the bootstrapped system to build edk2 for your new hardware</span></div><div class="line" id="152715"><span class="nick" style="color:#8dd3c7"><a href="#152715" label="[15:27:15]">&lt;stikonas&gt;</a></span><span class="message">yeah, there is still some window that all HW is infected...</span></div><div class="line" id="152718"><span class="nick" style="color:#234e69"><a href="#152718" label="[15:27:18]">&lt;Googulator&gt;</a></span><span class="message">Flash that (preferably direct SPI from the old bootstrapped system), and then you can safely bootstrap on the newer system, modulo actual hardware-based backdoors/retroviruses</span></div><div class="line" id="152729"><span class="nick" style="color:#8dd3c7"><a href="#152729" label="[15:27:29]">&lt;stikonas&gt;</a></span><span class="message">but at that point those trusting trust attacks get ridiculously unlikely</span></div><div class="line" id="152745"><span class="nick" style="color:#234e69"><a href="#152745" label="[15:27:45]">&lt;Googulator&gt;</a></span><span class="message">that's why I'm shooting for 15 to 25 year old HW</span></div><div class="line" id="152750"><span class="nick" style="color:#8dd3c7"><a href="#152750" label="[15:27:50]">&lt;stikonas&gt;</a></span><span class="message">well, the last step is that oriansj's Nexus atack</span></div><div class="line" id="152808"><span class="nick" style="color:#234e69"><a href="#152808" label="[15:28:08]">&lt;Googulator&gt;</a></span><span class="message">old enough that it's unlikely that any APT would've persevered that long</span></div><div class="line" id="152809"><span class="nick" style="color:#8dd3c7"><a href="#152809" label="[15:28:09]">&lt;stikonas&gt;</a></span><span class="message">where all the litography is backdoored</span></div><div class="line" id="152823"><span class="nick" style="color:#234e69"><a href="#152823" label="[15:28:23]">&lt;Googulator&gt;</a></span><span class="message">new enough that you can't straight up emulate it on today's hardware</span></div><div class="line" id="153029"><span class="nick" style="color:#234e69"><a href="#153029" label="[15:30:29]">&lt;Googulator&gt;</a></span><span class="message">ironically, &quot;nexus&quot; would also be a great name for the initial binary seed (the boot sector) that gets to run before it can get printed</span></div><div class="line" id="153046"><span class="nick" style="color:#234e69"><a href="#153046" label="[15:30:46]">&lt;Googulator&gt;</a></span><span class="message">since it's the narrow point that everything sort of has to pass through</span></div><div class="line" id="153107"><span class="nick" style="color:#234e69"><a href="#153107" label="[15:31:07]">&lt;Googulator&gt;</a></span><span class="message">&amp; hence the only place to hide a backdoor, outside of hardware/firmware</span></div><div class="line" id="153131"><span class="nick" style="color:#234e69"><a href="#153131" label="[15:31:31]">&lt;Googulator&gt;</a></span><span class="message">make it small enough and incompressible enough, and you can pretty much exclude retroviral propagation from the host to the bootstrap environment</span></div><div class="line" id="153251"><span class="nick" style="color:#234e69"><a href="#153251" label="[15:32:51]">&lt;Googulator&gt;</a></span><span class="message">and yes, I'm aware antivirus folks use &quot;retrovirus&quot; in a different sense, to mean viruses that try to target security software and shut it down - and I think it's a mistake</span></div><div class="line" id="153316"><span class="nick" style="color:#234e69"><a href="#153316" label="[15:33:16]">&lt;Googulator&gt;</a></span><span class="message">the idea is that like HIV, such viruses target the computer's immune system</span></div><div class="line" id="153400"><span class="nick" style="color:#234e69"><a href="#153400" label="[15:34:00]">&lt;Googulator&gt;</a></span><span class="message">but targeting the immune system is not what makes HIV a retrovirus - it's the fact that it writes itself back into the host's DNA</span></div><div class="line" id="153418"><span class="nick" style="color:#234e69"><a href="#153418" label="[15:34:18]">&lt;Googulator&gt;</a></span><span class="message">like a program altering its own compiler</span></div><div class="line" id="153951"><span class="nick" style="color:#8dd3c7"><a href="#153951" label="[15:39:51]">&lt;stikonas&gt;</a></span><span class="message">well, at least if you have kernel bootstrap</span></div><div class="line" id="154009"><span class="nick" style="color:#8dd3c7"><a href="#154009" label="[15:40:09]">&lt;stikonas&gt;</a></span><span class="message">otherwise there is really big binary too</span></div><div class="line" id="154030"><span class="nick" style="color:#234e69"><a href="#154030" label="[15:40:30]">&lt;Googulator&gt;</a></span><span class="message">yeah, no proper nexus there</span></div><div class="line" id="154042"><span class="nick" style="color:#8dd3c7"><a href="#154042" label="[15:40:42]">&lt;stikonas&gt;</a></span><span class="message">and unlike hardware which &quot;knows&quot; very little about what it is running, kernel has way more control</span></div><div class="line" id="154054"><span class="nick" style="color:#8dd3c7"><a href="#154054" label="[15:40:54]">&lt;stikonas&gt;</a></span><span class="message">far more state...</span></div><div class="line" id="154331"><span class="nick" style="color:#234e69"><a href="#154331" label="[15:43:31]">&lt;Googulator&gt;</a></span><span class="message">same for a &quot;full fat&quot; firmware like uefi or uboot</span></div><div class="line" id="154346"><span class="nick" style="color:#234e69"><a href="#154346" label="[15:43:46]">&lt;Googulator&gt;</a></span><span class="message">which is basically a kernel with a non-POSIX ABI</span></div><div class="line" id="154507"><span class="nick" style="color:#8dd3c7"><a href="#154507" label="[15:45:07]">&lt;stikonas&gt;</a></span><span class="message">true...</span></div><div class="line" id="154520"><span class="nick" style="color:#8dd3c7"><a href="#154520" label="[15:45:20]">&lt;stikonas&gt;</a></span><span class="message">well, M2libc is some incomplete POSIX layer around that</span></div><div class="line" id="154541"><span class="nick" style="color:#234e69"><a href="#154541" label="[15:45:41]">&lt;Googulator&gt;</a></span><span class="message">there's even a full port of Python to the UEFI interface</span></div><div class="line" id="154547"><span class="nick" style="color:#8dd3c7"><a href="#154547" label="[15:45:47]">&lt;stikonas&gt;</a></span><span class="message">though we are using UEFI in stage0-uefi in a very limitted manner</span></div><div class="line" id="154613"><span class="nick" style="color:#8dd3c7"><a href="#154613" label="[15:46:13]">&lt;stikonas&gt;</a></span><span class="message">basically just file I/O and spawn another process</span></div><div class="line" id="154658"><span class="nick" style="color:#8dd3c7"><a href="#154658" label="[15:46:58]">&lt;stikonas&gt;</a></span><span class="message">some of the UEFI compat code in M2libc actually resembles builder-hex0 a bit</span></div><div class="line" id="154723"><span class="nick" style="color:#8dd3c7"><a href="#154723" label="[15:47:23]">&lt;stikonas&gt;</a></span><span class="message">e.g. support for &quot;cd&quot;...</span></div><div class="line" id="154812"><span class="nick" style="color:#8dd3c7"><a href="#154812" label="[15:48:12]">&lt;stikonas&gt;</a></span><span class="message">but stage0-uefi bootstrap seeds are quite a bit larger...</span></div><div class="line" id="155035"><span class="nick" style="color:#234e69"><a href="#155035" label="[15:50:35]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://user-images.githubusercontent.com/16308406/284005588-1aab670c-65e7-4003-9b0c-550b26d4755b.jpg">https://user-images.githubusercontent.com/16308406/284005588-1aab670c-65e7-4003-9b0c-550b26d4755b.jpg</a> </span></div><div class="line" id="155046"><span class="nick" style="color:#234e69"><a href="#155046" label="[15:50:46]">&lt;Googulator&gt;</a></span><span class="message">linux-headers-4.9.10 ;)</span></div><div class="line" id="155120"><span class="nick" style="color:#234e69"><a href="#155120" label="[15:51:20]">&lt;Googulator&gt;</a></span><span class="message">anyway, with stage0-posix, you also have to trust the BIOS</span></div><div class="line" id="155130"><span class="nick" style="color:#234e69"><a href="#155130" label="[15:51:30]">&lt;Googulator&gt;</a></span><span class="message">since it just translates everything to BIOS calls</span></div><div class="line" id="155149"><span class="nick" style="color:#234e69"><a href="#155149" label="[15:51:49]">&lt;Googulator&gt;</a></span><span class="message">all the data read from disk passes through the hands of BIOS</span></div><div class="line" id="155213"><span class="nick" style="color:#234e69"><a href="#155213" label="[15:52:13]">&lt;Googulator&gt;</a></span><span class="message">but I'm much more inclined to trust a 15-year-old firmware than a 2-year-old one</span></div><div class="line" id="155309"><span class="nick" style="color:#234e69"><a href="#155309" label="[15:53:09]">&lt;Googulator&gt;</a></span><span class="message">an APT can anticipate a bootstrap strategy that will be made public 2 years from now and still appear relevant then, but not if it's 15 years from now</span></div><div class="line" id="155430"><span class="nick" style="color:#234e69"><a href="#155430" label="[15:54:30]">&lt;Googulator&gt;</a></span><span class="message">by &quot;anticipate&quot;, I potentially mean even the possibility that an APT will intentionally pretend to be one of us, releasing some bootstrapping code on GitHub - code that they have actually written 2 years ago, but not revealed</span></div><div class="line" id="155453"><span class="nick" style="color:#234e69"><a href="#155453" label="[15:54:53]">&lt;Googulator&gt;</a></span><span class="message">&amp; in that time, they already put backdoors into various firmware to subvert that bootstrap code</span></div><div class="line" id="155509"><span class="nick" style="color:#234e69"><a href="#155509" label="[15:55:09]">&lt;Googulator&gt;</a></span><span class="message">basically a premining attack, but for bootstrapping instead of block chains</span></div><div class="line" id="155535"><span class="nick" style="color:#234e69"><a href="#155535" label="[15:55:35]">&lt;Googulator&gt;</a></span><span class="message">you can do that 2 years out</span></div><div class="line" id="155541"><span class="nick" style="color:#234e69"><a href="#155541" label="[15:55:41]">&lt;Googulator&gt;</a></span><span class="message">but not 15 or 25</span></div><div class="line" id="155547"><span class="nick" style="color:#234e69"><a href="#155547" label="[15:55:47]">&lt;Googulator&gt;</a></span><span class="message">10 is really pushing it</span></div><div class="line" id="155619"><span class="nick" style="color:#234e69"><a href="#155619" label="[15:56:19]">&lt;Googulator&gt;</a></span><span class="message">(&quot;you&quot; the APT, that is)</span></div><div class="line" id="160017"><span class="nick" style="color:#8dd3c7"><a href="#160017" label="[16:00:17]">&lt;stikonas&gt;</a></span><span class="message">true...</span></div><div class="line" id="160137"><span class="nick" style="color:#234e69"><a href="#160137" label="[16:01:37]">&lt;Googulator&gt;</a></span><span class="message">The challenge in implementing such an attack (apart from needing APT-level capabilities) is in making sure that the bootstrap code/plan released seems relevant today, while still letting your N-year-old planted backdoor recognize and successfully subvert it</span></div><div class="line" id="160148"><span class="nick" style="color:#234e69"><a href="#160148" label="[16:01:48]">&lt;Googulator&gt;</a></span><span class="message">easy for small N, hard for larger N</span></div><div class="line" id="160348"><span class="nick" style="color:#234e69"><a href="#160348" label="[16:03:48]">&lt;Googulator&gt;</a></span><span class="message">but very large N permits another attack: because the hardware from that far back is so much less capable than modern stuff, it becomes possible to emulate it with a backdoor inserted on modern hardware small enough to dress up to look like thee vintage hardware it emulates</span></div><div class="line" id="160458"><span class="nick" style="color:#234e69"><a href="#160458" label="[16:04:58]">&lt;Googulator&gt;</a></span><span class="message">e.g. an Intel P8080-2 that's secretly a Cortex-M0 running a backdoored 8080 emulator, packaged into a DIP that looks like a real 8080 and takes actual 8080 signaling</span></div><div class="line" id="160512"><span class="nick" style="color:#8dd3c7"><a href="#160512" label="[16:05:12]">&lt;stikonas&gt;</a></span><span class="message">well, that you can workaround buy buying older hardware</span></div><div class="line" id="160515"><span class="nick" style="color:#8dd3c7"><a href="#160515" label="[16:05:15]">&lt;stikonas&gt;</a></span><span class="message">and keeping it for some time</span></div><div class="line" id="160549"><span class="nick" style="color:#234e69"><a href="#160549" label="[16:05:49]">&lt;Googulator&gt;</a></span><span class="message">This is what creates that &quot;sweet spot&quot; effect in the 15 to 25 year range</span></div><div class="line" id="160636"><span class="nick" style="color:#234e69"><a href="#160636" label="[16:06:36]">&lt;Googulator&gt;</a></span><span class="message">making a fake Pentium 4 CPU in a convincing looking Socket 478 package is (hopefully) impossible even with our current technology</span></div><div class="line" id="160819"><span class="nick" style="color:#234e69"><a href="#160819" label="[16:08:19]">&lt;Googulator&gt;</a></span><span class="message">a fake that also functions, that is - until you hit the backdoor</span></div><div class="line" id="162553"><span class="nick" style="color:#234e69"><a href="#162553" label="[16:25:53]">&lt;Googulator&gt;</a></span><span class="message">alright, we have 78MB of free space left over inside the 1280MB Fiwix initrd</span></div><div class="line" id="162609"><span class="nick" style="color:#234e69"><a href="#162609" label="[16:26:09]">&lt;Googulator&gt;</a></span><span class="message">so 148MB of space to grow overall</span></div><div class="line" id="162732"><span class="nick" style="color:#234e69"><a href="#162732" label="[16:27:32]">&lt;Googulator&gt;</a></span><span class="message">&amp; that is with the various tricks I use to bring over more stuff from sysa to sysc - without that, we can fit even more</span></div><div class="line" id="162853"><span class="nick" style="color:#234e69"><a href="#162853" label="[16:28:53]">&lt;Googulator&gt;</a></span><span class="message">Bootstrap done on the bare metal system - and I just tested, it does reboot cleanly!</span></div><div class="line" id="170522"><span class="nick" style="color:#8dd3c7"><a href="#170522" label="[17:05:22]">&lt;stikonas&gt;</a></span><span class="message">Googulator: nice!</span></div><div class="line" id="170537"><span class="nick" style="color:#8dd3c7"><a href="#170537" label="[17:05:37]">&lt;stikonas&gt;</a></span><span class="message">cleanup time I guess now</span></div><div class="line" id="170549"><span class="nick" style="color:#8dd3c7"><a href="#170549" label="[17:05:49]">&lt;stikonas&gt;</a></span><span class="message">I'm trying to upgrade bootstrappable tcc snapshot now</span></div><div class="line" id="170607"><span class="nick" style="color:#8dd3c7"><a href="#170607" label="[17:06:07]">&lt;stikonas&gt;</a></span><span class="message">which might also clean up a few MiB...</span></div><div class="line" id="191508"><span class="nick" style="color:#234e69"><a href="#191508" label="[19:15:08]">&lt;Googulator&gt;</a></span><span class="message">Raw diff over my &quot;playground&quot; branch: <a rel="nofollow" href="https://gist.github.com/Googulator/ae3fa19bcbe281b482f7fd2949054947">https://gist.github.com/Googulator/ae3fa19bcbe281b482f7fd2949054947</a> </span></div><div class="line" id="193156"><span class="nick" style="color:#80b1d3"><a href="#193156" label="[19:31:56]">&lt;oriansj&gt;</a></span><span class="message">nice</span></div><div class="line" id="195108"><span class="nick" style="color:#234e69"><a href="#195108" label="[19:51:08]">&lt;Googulator&gt;</a></span><span class="message">just made a small fix to it; accidentally it still included the code for probing the remaining free space after the Linux kernel build (which made the build break at that point)</span></div><div class="line" id="222755"><span class="nick" style="color:#80b1d3"><a href="#222755" label="[22:27:55]">&lt;oriansj&gt;</a></span><span class="message">I think nested switch statements in M2-Planet are working correctly too</span></div><div class="line" id="222823"><span class="nick" style="color:#8dd3c7"><a href="#222823" label="[22:28:23]">&lt;stikonas&gt;</a></span><span class="message">oh, that's a nice extra</span></div><div class="line" id="223637"><span class="nick" style="color:#80b1d3"><a href="#223637" label="[22:36:37]">&lt;oriansj&gt;</a></span><span class="message">can someone sanity check my logic?</span></div><div class="line" id="223724"><span class="nick" style="color:#8dd3c7"><a href="#223724" label="[22:37:24]">&lt;stikonas&gt;</a></span><span class="message">oriansj: is there some new commit?</span></div><div class="line" id="223726"><span class="nick" style="color:#80b1d3"><a href="#223726" label="[22:37:26]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="http://paste.debian.net/1298521/">http://paste.debian.net/1298521/</a> </span></div><div class="line" id="223727"><span class="nick" style="color:#8dd3c7"><a href="#223727" label="[22:37:27]">&lt;stikonas&gt;</a></span><span class="message">or it was already working</span></div><div class="line" id="223729"><span class="nick" style="color:#8dd3c7"><a href="#223729" label="[22:37:29]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="223746"><span class="nick" style="color:#80b1d3"><a href="#223746" label="[22:37:46]">&lt;oriansj&gt;</a></span><span class="message">on test4 shouldn't the default case for the switch statement be hit?</span></div><div class="line" id="223825"><span class="nick" style="color:#80b1d3"><a href="#223825" label="[22:38:25]">&lt;oriansj&gt;</a></span><span class="message">as case 6 does not exist and b is 6 when the test is run</span></div><div class="line" id="224158"><span class="nick" style="color:#80b1d3"><a href="#224158" label="[22:41:58]">&lt;oriansj&gt;</a></span><span class="message">or is this me forgetting that an 8bit number is the limit for Posix return values</span></div><div class="line" id="224348"><span class="nick" style="color:#8dd3c7"><a href="#224348" label="[22:43:48]">&lt;stikonas&gt;</a></span><span class="message">yeah, returns are bound...</span></div><div class="line" id="224437"><span class="nick" style="color:#8dd3c7"><a href="#224437" label="[22:44:37]">&lt;stikonas&gt;</a></span><span class="message">maybe add expected = ${value}; statements to if's...</span></div><div class="line" id="224500"><span class="nick" style="color:#8dd3c7"><a href="#224500" label="[22:45:00]">&lt;stikonas&gt;</a></span><span class="message">and then subtract them from i in each case?</span></div><div class="line" id="224505"><span class="nick" style="color:#8dd3c7"><a href="#224505" label="[22:45:05]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="224519"><span class="nick" style="color:#8dd3c7"><a href="#224519" label="[22:45:19]">&lt;stikonas&gt;</a></span><span class="message">or just pick smaller numbers</span></div><div class="line" id="224557"><span class="nick" style="color:#80b1d3"><a href="#224557" label="[22:45:57]">&lt;oriansj&gt;</a></span><span class="message">yeah, moving to smaller numbers fixed it</span></div><div class="line" id="224654"><span class="nick" style="color:#80b1d3"><a href="#224654" label="[22:46:54]">&lt;oriansj&gt;</a></span><span class="message">now we have 8 switch test cases; all working correctly</span></div><div class="line" id="224856"><span class="nick" style="color:#80b1d3"><a href="#224856" label="[22:48:56]">&lt;oriansj&gt;</a></span><span class="message">ironically go's fallthrough would be simpler to implement than C's break</span></div><div class="line" id="225054"><span class="nick" style="color:#80b1d3"><a href="#225054" label="[22:50:54]">&lt;oriansj&gt;</a></span><span class="message">Googulator: another option to expand our storage limits would be to add an unxz into mescc-tools-extra</span></div><div class="line" id="225129"><span class="nick" style="color:#80b1d3"><a href="#225129" label="[22:51:29]">&lt;oriansj&gt;</a></span><span class="message">and with the new switch support we might even be able to do it with minimal code changes</span></div><div class="line" id="225316"><span class="nick" style="color:#8dd3c7"><a href="#225316" label="[22:53:16]">&lt;stikonas&gt;</a></span><span class="message">though a lot of older software does not have xz tarballs</span></div><div class="line" id="225512"><span class="nick" style="color:#80b1d3"><a href="#225512" label="[22:55:12]">&lt;oriansj&gt;</a></span><span class="message">true</span></div><div class="line" id="230425"><span class="nick" style="color:#80b1d3"><a href="#230425" label="[23:04:25]">&lt;oriansj&gt;</a></span><span class="message">I guess I really lucked out. I have yet to find a failing test where gcc and M2-Planet don't  agree on the output in a switch statement</span></div><div class="line" id="231132"><span class="nick" style="color:#6c3d55"><a href="#231132" label="[23:11:32]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It's not just luck. I'm sure skill was involved too.</span></div><br /></div></body></html>