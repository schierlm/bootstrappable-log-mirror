<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-12-23.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000331"><span class="nick" style="color:#389600"><a href="#000331" label="[00:03:31]">&lt;oriansj&gt;</a></span><span class="message">pder: I noticed strange behavior in your unbz; ./bin/unbz2 -f unbz2.c.bz2 -o unbz2.c results in exit code of 1 but the resulting output does have a matching checksum</span></div><div class="line" id="000633"><span class="nick" style="color:#8dd3c7"><a href="#000633" label="[00:06:33]">&lt;stikonas&gt;</a></span><span class="message">oriansj: thanks</span></div><div class="line" id="000704"><span class="nick" style="color:#8dd3c7"><a href="#000704" label="[00:07:04]">&lt;stikonas&gt;</a></span><span class="message">and yes, we really need exit code 0</span></div><div class="line" id="000722"><span class="nick" style="color:#8dd3c7"><a href="#000722" label="[00:07:22]">&lt;stikonas&gt;</a></span><span class="message">otherwise it's somewhat tricky to ignore it</span></div><div class="line" id="000741"><span class="nick" style="color:#8dd3c7"><a href="#000741" label="[00:07:41]">&lt;stikonas&gt;</a></span><span class="message">would have to wrap it in another kaem script that we run with non strict mode</span></div><div class="line" id="003412"><span class="nick" style="color:#389600"><a href="#003412" label="[00:34:12]">&lt;oriansj&gt;</a></span><span class="message">it appears to be exiting in do_bunzip2 because err was -6</span></div><div class="line" id="031347"><span class="nick" style="color:#2e2a4a"><a href="#031347" label="[03:13:47]">&lt;pder&gt;</a></span><span class="message">oriansj: thanks for reviewing, I will take a look</span></div><div class="line" id="034109"><span class="nick" style="color:#6b8072"><a href="#034109" label="[03:41:09]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: are you ok with a global SOURCE_DATE_EPOCH=0? python is finally modern enough software to respect SOURCE_DATE_EPOCH for a few things in its build</span></div><div class="line" id="100246"><span class="nick" style="color:#80b1d3"><a href="#100246" label="[10:02:46]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: I think so</span></div><div class="line" id="160252"><span class="nick" style="color:#389600"><a href="#160252" label="[16:02:52]">&lt;oriansj&gt;</a></span><span class="message">pabs3: I've been thinking deeper on your question. And I feel that the video you posted is more about how modern firmwares are effectively operating systems; in which the answer is to eliminate firmware that functions beyond an extremely limited let of essentials</span></div><div class="line" id="160301"><span class="nick" style="color:#2e2a4a"><a href="#160301" label="[16:03:01]">&lt;pder&gt;</a></span><span class="message">oriansj: I fixed the return code issue and ran astyle and pushed to the unbz2 branch.  The return code problem was due to me reusing the i variable in the for loop when freeing, so the function was always returning -6</span></div><div class="line" id="160326"><span class="nick" style="color:#2e2a4a"><a href="#160326" label="[16:03:26]">&lt;pder&gt;</a></span><span class="message">Let me know if you want me to squash the changes</span></div><div class="line" id="160429"><span class="nick" style="color:#389600"><a href="#160429" label="[16:04:29]">&lt;oriansj&gt;</a></span><span class="message">pder: well I leave that up to you, just let me know when you are ready for me to pull and merge</span></div><div class="line" id="162529"><span class="nick" style="color:#2e2a4a"><a href="#162529" label="[16:25:29]">&lt;pder&gt;</a></span><span class="message">oriansj: I just created a new pull request</span></div><div class="line" id="163240"><span class="nick" style="color:#389600"><a href="#163240" label="[16:32:40]">&lt;oriansj&gt;</a></span><span class="message">pder: merged</span></div><div class="line" id="163244"><span class="nick" style="color:#389600"><a href="#163244" label="[16:32:44]">&lt;oriansj&gt;</a></span><span class="message">thank you</span></div><div class="line" id="163741"><span class="nick" style="color:#6d2462"><a href="#163741" label="[16:37:41]">&lt;rickmasters&gt;</a></span><span class="message">pder: thank you for the contribution! That should allows us to build tcc-0.9.27 from its original bz2 package without repackaging/rehosting as gzip.</span></div><div class="line" id="164017"><span class="nick" style="color:#6d2462"><a href="#164017" label="[16:40:17]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: regarding tcc-0.9.27, there is a already a kaem file (make not needed) but it relies on patch ...</span></div><div class="line" id="164127"><span class="nick" style="color:#6d2462"><a href="#164127" label="[16:41:27]">&lt;rickmasters&gt;</a></span><span class="message">patch has a very simple Makefile so it shouldn't be difficult to use kaem commands instead.</span></div><div class="line" id="164840"><span class="nick" style="color:#6d2462"><a href="#164840" label="[16:48:40]">&lt;rickmasters&gt;</a></span><span class="message">also, there is a sed command used to remove some lines from a source file. That could also be replaced with a purpose built tool.</span></div><div class="line" id="165022"><span class="nick" style="color:#6d2462"><a href="#165022" label="[16:50:22]">&lt;rickmasters&gt;</a></span><span class="message">So, I'll try to build tcc-0.9.27 right after tcc-0.9.26.</span></div><div class="line" id="165051"><span class="nick" style="color:#6d2462"><a href="#165051" label="[16:50:51]">&lt;rickmasters&gt;</a></span><span class="message">Sorry, I mean tcc-0.9.26, then patch, then tcc-0.9.27</span></div><div class="line" id="165401"><span class="nick" style="color:#8dd3c7"><a href="#165401" label="[16:54:01]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: you can skip patch</span></div><div class="line" id="165422"><span class="nick" style="color:#6d2462"><a href="#165422" label="[16:54:22]">&lt;rickmasters&gt;</a></span><span class="message">how so?</span></div><div class="line" id="165429"><span class="nick" style="color:#8dd3c7"><a href="#165429" label="[16:54:29]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: I think it would be easier if you build tcc without patches</span></div><div class="line" id="165439"><span class="nick" style="color:#8dd3c7"><a href="#165439" label="[16:54:39]">&lt;stikonas&gt;</a></span><span class="message">then build fiwix</span></div><div class="line" id="165454"><span class="nick" style="color:#8dd3c7"><a href="#165454" label="[16:54:54]">&lt;stikonas&gt;</a></span><span class="message">and then continue by building patch and patched tcc 0.9.27</span></div><div class="line" id="165505"><span class="nick" style="color:#8dd3c7"><a href="#165505" label="[16:55:05]">&lt;stikonas&gt;</a></span><span class="message">which adds 1 extra build step but not much more complexity</span></div><div class="line" id="165514"><span class="nick" style="color:#8dd3c7"><a href="#165514" label="[16:55:14]">&lt;stikonas&gt;</a></span><span class="message">but we'll reduce number of steps before fiwix</span></div><div class="line" id="165543"><span class="nick" style="color:#8dd3c7"><a href="#165543" label="[16:55:43]">&lt;stikonas&gt;</a></span><span class="message">first tcc 0.9.27 patch just removes needs to call it with -static flag</span></div><div class="line" id="165723"><span class="nick" style="color:#8dd3c7"><a href="#165723" label="[16:57:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, I don't remember exactly why 2nd patch is needed, but there is a comment</span></div><div class="line" id="165743"><span class="nick" style="color:#8dd3c7"><a href="#165743" label="[16:57:43]">&lt;stikonas&gt;</a></span><span class="message"># Note that tcc includes static-link and ignore-static-inside-array patches since we do not build from clean checkout.</span></div><div class="line" id="165859"><span class="nick" style="color:#8dd3c7"><a href="#165859" label="[16:58:59]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: do you think it will be easier for you this way?</span></div><div class="line" id="170034"><span class="nick" style="color:#8dd3c7"><a href="#170034" label="[17:00:34]">&lt;stikonas&gt;</a></span><span class="message">pder: are you going to update stage0-posix and live-bootstrap?</span></div><div class="line" id="170042"><span class="nick" style="color:#8dd3c7"><a href="#170042" label="[17:00:42]">&lt;stikonas&gt;</a></span><span class="message">(to include unbz2)</span></div><div class="line" id="170106"><span class="nick" style="color:#6d2462"><a href="#170106" label="[17:01:06]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: It looks easy either way. I did change a couple lines to build Fiwix but that doesn't need patch. I can probably skip patch.</span></div><div class="line" id="170106"><span class="nick" style="color:#8dd3c7"><a href="#170106" label="[17:01:06]">&lt;stikonas&gt;</a></span><span class="message">(if not, I can do it at some point later)</span></div><div class="line" id="170209"><span class="nick" style="color:#8dd3c7"><a href="#170209" label="[17:02:09]">&lt;stikonas&gt;</a></span><span class="message">something that can't be upstreamed?</span></div><div class="line" id="170215"><span class="nick" style="color:#6d2462"><a href="#170215" label="[17:02:15]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I'm not sure pder would need to change live-bootstrap much, I could make the change for tcc and we could continue to build bzip2 normally.</span></div><div class="line" id="170234"><span class="nick" style="color:#8dd3c7"><a href="#170234" label="[17:02:34]">&lt;stikonas&gt;</a></span><span class="message">well, at the very least one has to update stage0-posix submodule</span></div><div class="line" id="170307"><span class="nick" style="color:#8dd3c7"><a href="#170307" label="[17:03:07]">&lt;stikonas&gt;</a></span><span class="message">I might take a look at updating it this weekened if pder doesn't do it before that</span></div><div class="line" id="170318"><span class="nick" style="color:#6d2462"><a href="#170318" label="[17:03:18]">&lt;rickmasters&gt;</a></span><span class="message">ok</span></div><div class="line" id="170338"><span class="nick" style="color:#8dd3c7"><a href="#170338" label="[17:03:38]">&lt;stikonas&gt;</a></span><span class="message">we can first just update it to build unbz2</span></div><div class="line" id="170348"><span class="nick" style="color:#8dd3c7"><a href="#170348" label="[17:03:48]">&lt;stikonas&gt;</a></span><span class="message">and then you can make other changes as you need them for fiwix</span></div><div class="line" id="170412"><span class="nick" style="color:#6d2462"><a href="#170412" label="[17:04:12]">&lt;rickmasters&gt;</a></span><span class="message">ok, sounds good</span></div><div class="line" id="170427"><span class="nick" style="color:#8dd3c7"><a href="#170427" label="[17:04:27]">&lt;stikonas&gt;</a></span><span class="message">I'll probably move tcc 0.9.27  earlier too</span></div><div class="line" id="170440"><span class="nick" style="color:#8dd3c7"><a href="#170440" label="[17:04:40]">&lt;stikonas&gt;</a></span><span class="message">with availability of unbz2, there is no reason to build tcc 0.9.27 later</span></div><div class="line" id="170450"><span class="nick" style="color:#8dd3c7"><a href="#170450" label="[17:04:50]">&lt;stikonas&gt;</a></span><span class="message">and we get some early stuff built with newer compiler</span></div><div class="line" id="170545"><span class="nick" style="color:#6d2462"><a href="#170545" label="[17:05:45]">&lt;rickmasters&gt;</a></span><span class="message">So, I have good news. I've been using gcc to build Fiwix. Yesterday I got Fiwix to build with tcc-0.9.27 and it drove live-bootstrap through to Linux!</span></div><div class="line" id="170652"><span class="nick" style="color:#6d2462"><a href="#170652" label="[17:06:52]">&lt;rickmasters&gt;</a></span><span class="message">This was tcc-0.9.27 outside of live-bootstrap and so I'll be working on building inside live-bootstrap next. So this discussion is timely.</span></div><div class="line" id="170723"><span class="nick" style="color:#8dd3c7"><a href="#170723" label="[17:07:23]">&lt;stikonas&gt;</a></span><span class="message">that is indeed good</span></div><div class="line" id="170749"><span class="nick" style="color:#6d2462"><a href="#170749" label="[17:07:49]">&lt;rickmasters&gt;</a></span><span class="message">And just confirmed it was tcc-0.9.27 unpatched so I think we're good without the patches.</span></div><div class="line" id="170810"><span class="nick" style="color:#8dd3c7"><a href="#170810" label="[17:08:10]">&lt;stikonas&gt;</a></span><span class="message">well, static patch doesn't apply to kernel anyway</span></div><div class="line" id="170815"><span class="nick" style="color:#8dd3c7"><a href="#170815" label="[17:08:15]">&lt;stikonas&gt;</a></span><span class="message">you can't have dynamically linked kernel</span></div><div class="line" id="170829"><span class="nick" style="color:#8dd3c7"><a href="#170829" label="[17:08:29]">&lt;stikonas&gt;</a></span><span class="message">(and it was just to remove the need to specify -static for all compile commands)</span></div><div class="line" id="170856"><span class="nick" style="color:#6d2462"><a href="#170856" label="[17:08:56]">&lt;rickmasters&gt;</a></span><span class="message">(Unpatched except for a couple lines I changed - a bug fix and a linker hack).</span></div><div class="line" id="170859"><span class="nick" style="color:#8dd3c7"><a href="#170859" label="[17:08:59]">&lt;stikonas&gt;</a></span><span class="message">and I think the 2nd patch is not used till much later</span></div><div class="line" id="170913"><span class="nick" style="color:#8dd3c7"><a href="#170913" label="[17:09:13]">&lt;stikonas&gt;</a></span><span class="message">anyway, sounds like it should work</span></div><div class="line" id="170925"><span class="nick" style="color:#8dd3c7"><a href="#170925" label="[17:09:25]">&lt;stikonas&gt;</a></span><span class="message">and then I guess kernel transition / fs work...</span></div><div class="line" id="171034"><span class="nick" style="color:#6d2462"><a href="#171034" label="[17:10:34]">&lt;rickmasters&gt;</a></span><span class="message">Yes, I'll try to transition to Fiwix after building it, and the Linux transition will come later as the final step</span></div><div class="line" id="171643"><span class="nick" style="color:#6d2462"><a href="#171643" label="[17:16:43]">&lt;rickmasters&gt;</a></span><span class="message">fossy asked about where to find my work - today I'll try to commit all my Fiwix changes to my fork on github then I'll work on upstream PRs.</span></div><div class="line" id="171824"><span class="nick" style="color:#234e69"><a href="#171824" label="[17:18:24]">&lt;Hagfish_&gt;</a></span><span class="message">this is such an exciting time for bootstrapping.  for the first time in decades, we can almost say that the only space for a trusting-trust attack is in a few hundred bytes of binary (or firmware, or hardware).  i'm hopeful that next year, those areas will get more attention too</span></div><div class="line" id="172648"><span class="nick" style="color:#2e2a4a"><a href="#172648" label="[17:26:48]">&lt;pder&gt;</a></span><span class="message">rickmasters: glad it will be useful.  Thank you for all the work on the kernel bootstrap.  Exciting times!</span></div><div class="line" id="172712"><span class="nick" style="color:#2e2a4a"><a href="#172712" label="[17:27:12]">&lt;pder&gt;</a></span><span class="message">stikonas: I have started updating stage0-posix</span></div><div class="line" id="172813"><span class="nick" style="color:#2e2a4a"><a href="#172813" label="[17:28:13]">&lt;pder&gt;</a></span><span class="message">Its not clear to me if I need to update checksums for all architectures in stage0-posix since I need to update the M2-Planet submodule</span></div><div class="line" id="172838"><span class="nick" style="color:#2e2a4a"><a href="#172838" label="[17:28:38]">&lt;pder&gt;</a></span><span class="message">how do you normally go about updating all the *.answers files</span></div><div class="line" id="172856"><span class="nick" style="color:#389600"><a href="#172856" label="[17:28:56]">&lt;oriansj&gt;</a></span><span class="message"> Hagfish: well they have already started to get attention on the firmware (libreboot, openBMC, etc) and hardware (opencores, libresilicon, etc) the question becomes when and how do we link up with those</span></div><div class="line" id="173051"><span class="nick" style="color:#389600"><a href="#173051" label="[17:30:51]">&lt;oriansj&gt;</a></span><span class="message">pder: look at the makefile (hint Generate-${ARCH}-answers: )</span></div><div class="line" id="173139"><span class="nick" style="color:#2e2a4a"><a href="#173139" label="[17:31:39]">&lt;pder&gt;</a></span><span class="message">ahh- so I dont actually need to be to run on different architecures?</span></div><div class="line" id="173226"><span class="nick" style="color:#389600"><a href="#173226" label="[17:32:26]">&lt;oriansj&gt;</a></span><span class="message">(it is easiest if you have qemu userspace virtualization)</span></div><div class="line" id="173242"><span class="nick" style="color:#389600"><a href="#173242" label="[17:32:42]">&lt;oriansj&gt;</a></span><span class="message">if you wish to test for those architectures</span></div><div class="line" id="173749"><span class="nick" style="color:#234e69"><a href="#173749" label="[17:37:49]">&lt;Hagfish_&gt;</a></span><span class="message">oriansj: yes, those are just the sort of people whose contributions would be valuable.  you're right that linking up with them is tricky, but you've done an amazing job of community-building so far, so i'm confident that things will continue to grow</span></div><div class="line" id="173901"><span class="nick" style="color:#2e2a4a"><a href="#173901" label="[17:39:01]">&lt;pder&gt;</a></span><span class="message">if for example I want to bootstrap-seeds/POSIX/AArch64/kaem-optional-seed, do I need to do this within a AArch64 distro running in qemu, or is there another way?</span></div><div class="line" id="174031"><span class="nick" style="color:#8dd3c7"><a href="#174031" label="[17:40:31]">&lt;stikonas&gt;</a></span><span class="message">pder: no, user space emulation just runs on your distro</span></div><div class="line" id="174052"><span class="nick" style="color:#8dd3c7"><a href="#174052" label="[17:40:52]">&lt;stikonas&gt;</a></span><span class="message">it's basically a transparent running of aarch64 binaries on x86</span></div><div class="line" id="174134"><span class="nick" style="color:#8dd3c7"><a href="#174134" label="[17:41:34]">&lt;stikonas&gt;</a></span><span class="message">in order to be able to use it, you need to install qemu and configure binfmt in /etc/binfmt.d/</span></div><div class="line" id="174200"><span class="nick" style="color:#8dd3c7"><a href="#174200" label="[17:42:00]">&lt;stikonas&gt;</a></span><span class="message">let me try to find some wiki links</span></div><div class="line" id="174226"><span class="nick" style="color:#8dd3c7"><a href="#174226" label="[17:42:26]">&lt;stikonas&gt;</a></span><span class="message">pder: what distro are you on?</span></div><div class="line" id="174251"><span class="nick" style="color:#8dd3c7"><a href="#174251" label="[17:42:51]">&lt;stikonas&gt;</a></span><span class="message">if something Debian based, you can take a look at <a rel="nofollow" href="https://wiki.debian.org/QemuUserEmulation">https://wiki.debian.org/QemuUserEmulation</a> </span></div><div class="line" id="174443"><span class="nick" style="color:#8dd3c7"><a href="#174443" label="[17:44:43]">&lt;stikonas&gt;</a></span><span class="message">but basically, 1. install qemu. 2. Put config files into /etc/binfmt.d/ (or your distro might do it for you already when installing qemu) 3. systemctl enable systemd-binfmt; systemctl start systemd-binfmt</span></div><div class="line" id="174458"><span class="nick" style="color:#2e2a4a"><a href="#174458" label="[17:44:58]">&lt;pder&gt;</a></span><span class="message">debian</span></div><div class="line" id="174529"><span class="nick" style="color:#8dd3c7"><a href="#174529" label="[17:45:29]">&lt;stikonas&gt;</a></span><span class="message">ok, so that debian wiki should have exact steps</span></div><div class="line" id="174547"><span class="nick" style="color:#2e2a4a"><a href="#174547" label="[17:45:47]">&lt;pder&gt;</a></span><span class="message">cool, thanks, I will give it a try</span></div><div class="line" id="174624"><span class="nick" style="color:#8dd3c7"><a href="#174624" label="[17:46:24]">&lt;stikonas&gt;</a></span><span class="message">and debian even ships update-binfmt helper, so it should be fairly easy</span></div><div class="line" id="174645"><span class="nick" style="color:#8dd3c7"><a href="#174645" label="[17:46:45]">&lt;stikonas&gt;</a></span><span class="message">I had to copy in config files like :aarch64:M::\x7fELF\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\xb7:\xff\xff\xff\xff\xff\xff\xff\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-aarch64:</span></div><div class="line" id="174945"><span class="nick" style="color:#8dd3c7"><a href="#174945" label="[17:49:45]">&lt;stikonas&gt;</a></span><span class="message">and once qemu is configured, run &quot;make test-aarch64&quot; in stage0-posix</span></div><div class="line" id="175053"><span class="nick" style="color:#8dd3c7"><a href="#175053" label="[17:50:53]">&lt;stikonas&gt;</a></span><span class="message">it will run the seed and will also checksum results (so once checksum will be calculated using sha256sum from mescc-tools-extra and then make will also launch external distro sha256sum)</span></div><div class="line" id="175342"><span class="nick" style="color:#2e2a4a"><a href="#175342" label="[17:53:42]">&lt;pder&gt;</a></span><span class="message">are you able to test all architectures that stage0-posix supports?</span></div><div class="line" id="175354"><span class="nick" style="color:#2e2a4a"><a href="#175354" label="[17:53:54]">&lt;pder&gt;</a></span><span class="message">I wasn't sure about knight</span></div><div class="line" id="175645"><span class="nick" style="color:#8dd3c7"><a href="#175645" label="[17:56:45]">&lt;stikonas&gt;</a></span><span class="message">pder: I think so, knight is not in stage0-posix</span></div><div class="line" id="175657"><span class="nick" style="color:#8dd3c7"><a href="#175657" label="[17:56:57]">&lt;stikonas&gt;</a></span><span class="message">I tried testing knight-posix recently for M2-Planet tests</span></div><div class="line" id="175734"><span class="nick" style="color:#8dd3c7"><a href="#175734" label="[17:57:34]">&lt;stikonas&gt;</a></span><span class="message">(you just need to build ./vm from stage0 and it runs there</span></div><div class="line" id="175758"><span class="nick" style="color:#8dd3c7"><a href="#175758" label="[17:57:58]">&lt;stikonas&gt;</a></span><span class="message">but we don't have anything like qemu-user for knight-posix</span></div><div class="line" id="175943"><span class="nick" style="color:#8dd3c7"><a href="#175943" label="[17:59:43]">&lt;stikonas&gt;</a></span><span class="message">pder: so basically you need x86, amd64, aarch64, riscv32 and riscv64</span></div><div class="line" id="175952"><span class="nick" style="color:#8dd3c7"><a href="#175952" label="[17:59:52]">&lt;stikonas&gt;</a></span><span class="message">there is no armv7l support in stage0-posix right now</span></div><div class="line" id="194810"><span class="nick" style="color:#6c3d55"><a href="#194810" label="[19:48:10]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/civboot/civboot">https://github.com/civboot/civboot</a> </span></div><div class="line" id="194829"><span class="nick" style="color:#6c3d55"><a href="#194829" label="[19:48:29]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/civboot/fngi">https://github.com/civboot/fngi</a> </span></div><div class="line" id="195318"><span class="nick" style="color:#6c3d55"><a href="#195318" label="[19:53:18]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/bettertools/zigenesis">https://github.com/bettertools/zigenesis</a> </span></div><div class="line" id="195327"><span class="nick" style="color:#6c3d55"><a href="#195327" label="[19:53:27]">&lt;drakonis&gt;</a></span><span class="message">some interesting bits</span></div><div class="line" id="204406"><span class="nick" style="color:#d9d9d9"><a href="#204406" label="[20:44:06]">&lt;duplexsystem&gt;</a></span><span class="message">Does anyone know of a way to bootstrap clang without GCC?</span></div><div class="line" id="204754"><span class="nick" style="color:#8dd3c7"><a href="#204754" label="[20:47:54]">&lt;stikonas&gt;</a></span><span class="message">duplexsystem: there is none as far as I know</span></div><div class="line" id="204759"><span class="nick" style="color:#8dd3c7"><a href="#204759" label="[20:47:59]">&lt;stikonas&gt;</a></span><span class="message">clang needs c++</span></div><div class="line" id="204818"><span class="nick" style="color:#8dd3c7"><a href="#204818" label="[20:48:18]">&lt;stikonas&gt;</a></span><span class="message">and so you need to find some other bootstrappable C++ compiler that is not GCC</span></div><div class="line" id="210849"><span class="nick" style="color:#234e69"><a href="#210849" label="[21:08:49]">&lt;Hagfish_&gt;</a></span><span class="message">thanks  for sharing the &quot;civboot&quot; project!</span></div><div class="line" id="210908"><span class="nick" style="color:#234e69"><a href="#210908" label="[21:09:08]">&lt;Hagfish_&gt;</a></span><span class="message">they have some interesting goals, including  &quot;Photo Optics (lenses) fabrication and working knowledge.&quot;</span></div><div class="line" id="210946"><span class="nick" style="color:#234e69"><a href="#210946" label="[21:09:46]">&lt;Hagfish_&gt;</a></span><span class="message">sadly it seems that so far (after three years) their main achievement is coming up with a new programming language</span></div><div class="line" id="211055"><span class="nick" style="color:#8dd3c7"><a href="#211055" label="[21:10:55]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'm not sure if new programming language is that helpful, we already have a fairly good bootstrap in stage0</span></div><div class="line" id="211134"><span class="nick" style="color:#234e69"><a href="#211134" label="[21:11:34]">&lt;Hagfish_&gt;</a></span><span class="message">yeah, and it doesn't look like they're planning to use their system to bootstrap the extensive corpus of existing free software, but that doesn't mean there isn't overlap between our goals and theirs</span></div><div class="line" id="212136"><span class="nick" style="color:#bc80bd"><a href="#212136" label="[21:21:36]">&lt;rillian&gt;</a></span><span class="message">Hagfish_: is this the solarpunk/ceramic path to hi-tech for people who can no longer access fossil fuels?</span></div><div class="line" id="212444"><span class="nick" style="color:#234e69"><a href="#212444" label="[21:24:44]">&lt;Hagfish_&gt;</a></span><span class="message">hmm, it's not clear whether they are expecting it to be useful after a disaster, but i guess &quot;no longer access fossil fuels&quot; could happen for lots of reasons, some of which their project is suited to</span></div><div class="line" id="220543"><span class="nick" style="color:#bc80bd"><a href="#220543" label="[22:05:43]">&lt;rillian&gt;</a></span><span class="message">re cpu, does the bootstrap sequence fit in 24 bits of address space?</span></div><div class="line" id="220844"><span class="nick" style="color:#8dd3c7"><a href="#220844" label="[22:08:44]">&lt;stikonas&gt;</a></span><span class="message">rillian: in what sense?</span></div><div class="line" id="220901"><span class="nick" style="color:#8dd3c7"><a href="#220901" label="[22:09:01]">&lt;stikonas&gt;</a></span><span class="message">to bootstrap C compiler?</span></div><div class="line" id="221019"><span class="nick" style="color:#234e69"><a href="#221019" label="[22:10:19]">&lt;Hagfish_&gt;</a></span><span class="message">like a 286 PC?</span></div><div class="line" id="223755"><span class="nick" style="color:#6c3d55"><a href="#223755" label="[22:37:55]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.reddit.com/r/Zig/comments/zf65zd/smallest_possible_selfhosting_zig_compiler/">https://www.reddit.com/r/Zig/comments/zf65zd/smallest_possible_selfhosting_zig_compiler/</a>  some insights on the author's thought process</span></div><div class="line" id="223937"><span class="nick" style="color:#bc80bd"><a href="#223937" label="[22:39:37]">&lt;rillian&gt;</a></span><span class="message">stikonas: I suppose so. and an operating system under it.</span></div><div class="line" id="224016"><span class="nick" style="color:#6c3d55"><a href="#224016" label="[22:40:16]">&lt;drakonis&gt;</a></span><span class="message">i think zigenesis might be a bit closer</span></div><div class="line" id="224019"><span class="nick" style="color:#8dd3c7"><a href="#224019" label="[22:40:19]">&lt;stikonas&gt;</a></span><span class="message">well, at the very least nobody has done any work on it. So in theory should be possible to do it, but in practice we don't have much</span></div><div class="line" id="224023"><span class="nick" style="color:#bc80bd"><a href="#224023" label="[22:40:23]">&lt;rillian&gt;</a></span><span class="message">was just thinking about the 'running on your own relay computer' aspect of it.</span></div><div class="line" id="224035"><span class="nick" style="color:#8dd3c7"><a href="#224035" label="[22:40:35]">&lt;stikonas&gt;</a></span><span class="message">rillian: in fact we only have bootstrap chain to gcc on x86, not even amd64</span></div><div class="line" id="224120"><span class="nick" style="color:#bc80bd"><a href="#224120" label="[22:41:20]">&lt;rillian&gt;</a></span><span class="message">stikonas: ah. because mes+tcc output x86 only?</span></div><div class="line" id="224142"><span class="nick" style="color:#8dd3c7"><a href="#224142" label="[22:41:42]">&lt;stikonas&gt;</a></span><span class="message">rillian: that's the main problem</span></div><div class="line" id="224149"><span class="nick" style="color:#8dd3c7"><a href="#224149" label="[22:41:49]">&lt;stikonas&gt;</a></span><span class="message">but probably not just that</span></div><div class="line" id="224203"><span class="nick" style="color:#8dd3c7"><a href="#224203" label="[22:42:03]">&lt;stikonas&gt;</a></span><span class="message">I guess mescc can output some other stuff</span></div><div class="line" id="224223"><span class="nick" style="color:#8dd3c7"><a href="#224223" label="[22:42:23]">&lt;stikonas&gt;</a></span><span class="message">but patches for tcc 0.9.26 only work for x86</span></div><div class="line" id="224253"><span class="nick" style="color:#8dd3c7"><a href="#224253" label="[22:42:53]">&lt;stikonas&gt;</a></span><span class="message">it would be nice if somebody could get more than just x86</span></div><div class="line" id="224305"><span class="nick" style="color:#8dd3c7"><a href="#224305" label="[22:43:05]">&lt;stikonas&gt;</a></span><span class="message">in particular amd64 bootstrap would be good to have too</span></div><div class="line" id="224315"><span class="nick" style="color:#8dd3c7"><a href="#224315" label="[22:43:15]">&lt;stikonas&gt;</a></span><span class="message">x86 will have problems after 2037</span></div><div class="line" id="224331"><span class="nick" style="color:#8dd3c7"><a href="#224331" label="[22:43:31]">&lt;stikonas&gt;</a></span><span class="message">you'll have to rewind clock or fix all Y2K37 bugs</span></div><div class="line" id="225049"><span class="nick" style="color:#bc80bd"><a href="#225049" label="[22:50:49]">&lt;rillian&gt;</a></span><span class="message">well, yes. But I was thinking if you wanted to connect to some kind of audited hardware there's still something of a gap between something individually comprehensible like an 8-bit cpu and what a posix system capable of linux+gcc</span></div><div class="line" id="225149"><span class="nick" style="color:#bc80bd"><a href="#225149" label="[22:51:49]">&lt;rillian&gt;</a></span><span class="message">or how much you'd need to trust MB of storage</span></div><div class="line" id="225900"><span class="nick" style="color:#389600"><a href="#225900" label="[22:59:00]">&lt;oriansj&gt;</a></span><span class="message">drakonis: yes they look like they might be onboard with our goals, I should reach out to them</span></div><div class="line" id="230032"><span class="nick" style="color:#6c3d55"><a href="#230032" label="[23:00:32]">&lt;drakonis&gt;</a></span><span class="message">plus getting somebody zig adjacent might be better</span></div><div class="line" id="230056"><span class="nick" style="color:#389600"><a href="#230056" label="[23:00:56]">&lt;oriansj&gt;</a></span><span class="message">rillian: well we could port cc_x86 to an 8086 and CP/M if someone was interested in that work</span></div><div class="line" id="230542"><span class="nick" style="color:#389600"><a href="#230542" label="[23:05:42]">&lt;oriansj&gt;</a></span><span class="message">also 24bits of address space is enough for a POSIX kernel and a  full development (as was done on the 68K systems in the 80s/90s)</span></div><div class="line" id="230618"><span class="nick" style="color:#389600"><a href="#230618" label="[23:06:18]">&lt;oriansj&gt;</a></span><span class="message">^^environment including emacs)</span></div><div class="line" id="230632"><span class="nick" style="color:#389600"><a href="#230632" label="[23:06:32]">&lt;oriansj&gt;</a></span><span class="message">^)^^^</span></div><div class="line" id="230915"><span class="nick" style="color:#389600"><a href="#230915" label="[23:09:15]">&lt;oriansj&gt;</a></span><span class="message">a 386 is just much easier to program and  if one opts to, can ignore most of the ugly bits of x86</span></div><div class="line" id="231351"><span class="nick" style="color:#2e2a4a"><a href="#231351" label="[23:13:51]">&lt;pder&gt;</a></span><span class="message">oriansj: I just sent you a pull request for mescc-tools-seed.  This updates M2-Planet, M2libc, mescc-tools-extra to integrate unbz2 into the build</span></div><div class="line" id="231502"><span class="nick" style="color:#8dd3c7"><a href="#231502" label="[23:15:02]">&lt;stikonas&gt;</a></span><span class="message">yes, and amd64 is even easier to program, one has access to easy position independent code there</span></div><div class="line" id="232254"><span class="nick" style="color:#389600"><a href="#232254" label="[23:22:54]">&lt;oriansj&gt;</a></span><span class="message">not to mention 16 registers instead of 8</span></div><div class="line" id="232951"><span class="nick" style="color:#389600"><a href="#232951" label="[23:29:51]">&lt;oriansj&gt;</a></span><span class="message">pder:  reviewing now</span></div><div class="line" id="233127"><span class="nick" style="color:#bc80bd"><a href="#233127" label="[23:31:27]">&lt;rillian&gt;</a></span><span class="message">oriansj: CP/M is an interesting idea!</span></div><div class="line" id="234029"><span class="nick" style="color:#389600"><a href="#234029" label="[23:40:29]">&lt;oriansj&gt;</a></span><span class="message">pder: merged</span></div><div class="line" id="234155"><span class="nick" style="color:#389600"><a href="#234155" label="[23:41:55]">&lt;oriansj&gt;</a></span><span class="message">rillian: well DOS has been discussed; unfortunately no  one published such work</span></div><div class="line" id="234415"><span class="nick" style="color:#8dd3c7"><a href="#234415" label="[23:44:15]">&lt;stikonas&gt;</a></span><span class="message">there was a typo in commit but oh well...</span></div><div class="line" id="234436"><span class="nick" style="color:#8dd3c7"><a href="#234436" label="[23:44:36]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/commit/f92c2fb3a2947ac746ac5760afc84b3ff400389b">https://github.com/oriansj/stage0-posix/commit/f92c2fb3a2947ac746ac5760afc84b3ff400389b</a>  says &quot;integrate ungz2&quot;</span></div><div class="line" id="234850"><span class="nick" style="color:#8dd3c7"><a href="#234850" label="[23:48:50]">&lt;stikonas&gt;</a></span><span class="message">pder: nice work! Just tested unbz2 on tcc-0.9.27.tar.bz2 tarball</span></div><div class="line" id="234945"><span class="nick" style="color:#8dd3c7"><a href="#234945" label="[23:49:45]">&lt;stikonas&gt;</a></span><span class="message">janneke: you might want to be aware of this too: stage0-posix now has unbz2 program, so we are not restricted to .tar.gz anymore</span></div><div class="line" id="235519"><span class="nick" style="color:#8dd3c7"><a href="#235519" label="[23:55:19]">&lt;stikonas&gt;</a></span><span class="message">oriansj, pder (cc fossy, rickmasters): we have some issue with live-boostrap update</span></div><div class="line" id="235535"><span class="nick" style="color:#8dd3c7"><a href="#235535" label="[23:55:35]">&lt;stikonas&gt;</a></span><span class="message">lib/m2/time.c:31: Got unsupported size 8 when trying to load value.</span></div><div class="line" id="235650"><span class="nick" style="color:#8dd3c7"><a href="#235650" label="[23:56:50]">&lt;stikonas&gt;</a></span><span class="message">which probably means that some of my M2-Planet updates that I did for UEFI bringup have some bug</span></div><div class="line" id="235947"><span class="nick" style="color:#8dd3c7"><a href="#235947" label="[23:59:47]">&lt;stikonas&gt;</a></span><span class="message">hmm, it's not happy with &quot;r = _sys_call2 (SYS_gettimeofday, tv, tz);&quot; and things that we have 64-bit value on x86...</span></div><br /></div></body></html>