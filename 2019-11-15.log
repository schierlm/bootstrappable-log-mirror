<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2019-11-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000015"><span class="nick" style="color:#389600"><a href="#000015" label="[00:00:15]">&lt;oriansj&gt;</a></span><span class="message">gio: if perfection is playing PC games; AMD64 is impossible to beat</span></div><div class="line" id="012356"><span class="nick" style="color:#2e2a4a"><a href="#012356" label="[01:23:56]">&lt;xentrac&gt;</a></span><span class="message">I feel like division hardware is sort of marginally worthwhile really</span></div><div class="line" id="020413"><span class="nick" style="color:#389600"><a href="#020413" label="[02:04:13]">&lt;oriansj&gt;</a></span><span class="message">xentrac: granted when transistor budgets were low but not when you are doing OoO</span></div><div class="line" id="045126"><span class="nick" style="color:#2e2a4a"><a href="#045126" label="[04:51:26]">&lt;xentrac&gt;</a></span><span class="message">well, I mean multiplication has an enormous amount of potential parallelism, so you can get a big speedup from hardware multipliers</span></div><div class="line" id="045150"><span class="nick" style="color:#2e2a4a"><a href="#045150" label="[04:51:50]">&lt;xentrac&gt;</a></span><span class="message">but division is, if not inherently serial, serial in practice, so hardware dividers don't give as big a speedup</span></div><div class="line" id="045210"><span class="nick" style="color:#2e2a4a"><a href="#045210" label="[04:52:10]">&lt;xentrac&gt;</a></span><span class="message">as i understand the situation, anyway.  I haven't dissected production division logic even on ancient processors, much less modern ones</span></div><div class="line" id="045237"><span class="nick" style="color:#2e2a4a"><a href="#045237" label="[04:52:37]">&lt;xentrac&gt;</a></span><span class="message">I just know it's slow as shit and that classic Crays didn't even have a vector division instruction, just a reciprocal</span></div><div class="line" id="090918"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="220218"><span class="nick" style="color:#389600"><a href="#220218" label="[22:02:18]">&lt;oriansj&gt;</a></span><span class="message">xentrac: well even in classic designs it is possible to do 1bits of division per clock cycle (so 128 clock cycles tops for 128bit division, with 64 remainder and 64bit modulo); which is still better than the 8 clocks per bit required for a software loop (Assuming perfect pipelining and prediction)</span></div><div class="line" id="220748"><span class="nick" style="color:#389600"><a href="#220748" label="[22:07:48]">&lt;oriansj&gt;</a></span><span class="message">More modern approaches can do 16bits per clock cycle (9 cycles per idiv) or can pipeline idivs to reduce stalls in idiv heavy blocks (39cycle latencies)</span></div><div class="line" id="220953"><span class="nick" style="color:#389600"><a href="#220953" label="[22:09:53]">&lt;oriansj&gt;</a></span><span class="message">The big argument against integer division is it consumes alot of transistors and complicates pipeline logic.</span></div><div class="line" id="221033"><span class="nick" style="color:#389600"><a href="#221033" label="[22:10:33]">&lt;oriansj&gt;</a></span><span class="message">But on modern OoO that isn't really a valid argument</span></div><div class="line" id="221135"><span class="nick" style="color:#389600"><a href="#221135" label="[22:11:35]">&lt;oriansj&gt;</a></span><span class="message">janneke: it is appearing my experiment might bare some interesting fruit shortly (at a small regression cost)</span></div><div class="line" id="230903"><span class="nick" style="color:#6b8072"><a href="#230903" label="[23:09:03]">&lt;janneke&gt;</a></span><span class="message">oriansj: sounds exciting</span></div><div class="line" id="230946"><span class="nick" style="color:#6b8072"><a href="#230946" label="[23:09:46]">&lt;janneke&gt;</a></span><span class="message">i'm still playing with integrating guile's module system</span></div><br /></div></body></html>