<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-01-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="020918"><span class="nick" style="color:#8dd3c7"><a href="#020918" label="[02:09:18]">&lt;oriansj&gt;</a></span><span class="message">dddddd: I guess, brute force does have that weakness.</span></div><div class="line" id="020953"><span class="nick" style="color:#8dd3c7"><a href="#020953" label="[02:09:53]">&lt;oriansj&gt;</a></span><span class="message">and I've added support for s-expression and token overflows when reading s-expressions and tokens in mes-m2</span></div><div class="line" id="021127"><span class="nick" style="color:#8dd3c7"><a href="#021127" label="[02:11:27]">&lt;oriansj&gt;</a></span><span class="message">now when someone does something stupid like export MES_MAX_STRING=4; it results in an understandable error message instead of a segfault</span></div><div class="line" id="024136"><span class="nick" style="color:#8dd3c7"><a href="#024136" label="[02:41:36]">&lt;oriansj&gt;</a></span><span class="message">dddddd: I'll be getting to your draft as soon as I fix a bug.</span></div><div class="line" id="024542"><span class="nick" style="color:#8dd3c7"><a href="#024542" label="[02:45:42]">&lt;oriansj&gt;</a></span><span class="message">greetings ovf</span></div><div class="line" id="025733"><span class="nick" style="color:#8dd3c7"><a href="#025733" label="[02:57:33]">&lt;oriansj&gt;</a></span><span class="message">and updated mescc-tools is now up (with exec_enable finally gone)</span></div><div class="line" id="030239"><span class="nick" style="color:#8dd3c7"><a href="#030239" label="[03:02:39]">&lt;oriansj&gt;</a></span><span class="message">greetings xelxebar</span></div><div class="line" id="030613"><span class="nick" style="color:#8dd3c7"><a href="#030613" label="[03:06:13]">&lt;oriansj&gt;</a></span><span class="message">janneke: I the more I think about slow-utils; the more I feel meh about finishing M1.scm; although I probably should put it into an almost done state and commit so that someone else who might feel it is more important can just finish the half dozen functions required to make it work as a perfect drop in replacement for mescc-tools</span></div><div class="line" id="030656"><span class="nick" style="color:#8dd3c7"><a href="#030656" label="[03:06:56]">&lt;oriansj&gt;</a></span><span class="message">(literally express-immediate, preserve-other and output-hex)</span></div><div class="line" id="030754"><span class="nick" style="color:#8dd3c7"><a href="#030754" label="[03:07:54]">&lt;oriansj&gt;</a></span><span class="message">Mostly because I just can't think of a pretty way to get scheme to NULL pad for Knight correctly</span></div><div class="line" id="030853"><span class="nick" style="color:#8dd3c7"><a href="#030853" label="[03:08:53]">&lt;oriansj&gt;</a></span><span class="message">and I figure the time will be better spent on getting modules in mes-m2 (or atleast enough of it that everyone is happy)</span></div><div class="line" id="030917"><span class="nick" style="color:#2e2a4a"><a href="#030917" label="[03:09:17]">&lt;xelxebar&gt;</a></span><span class="message">oriansj: Hello.</span></div><div class="line" id="030919"><span class="nick" style="color:#2e2a4a"><a href="#030919" label="[03:09:19]">&lt;xelxebar&gt;</a></span><span class="message">You just happened to catch me in the rare case that my znc instance restarted.</span></div><div class="line" id="031028"><span class="nick" style="color:#8dd3c7"><a href="#031028" label="[03:10:28]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: well rare things tend to happen quite frequently around here;</span></div><div class="line" id="031154"><span class="nick" style="color:#8dd3c7"><a href="#031154" label="[03:11:54]">&lt;oriansj&gt;</a></span><span class="message">janneke: I need to add support for the access kernel call into M2-Planet first (which should help fossy to make kaem.c a little prettier) and allow me to finally add path searching into mes-m2 to exactly match mes.c behavior</span></div><div class="line" id="031246"><span class="nick" style="color:#8dd3c7"><a href="#031246" label="[03:12:46]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: So perhaps the question is what fun are you working on?</span></div><div class="line" id="031746"><span class="nick" style="color:#2e2a4a"><a href="#031746" label="[03:17:46]">&lt;xelxebar&gt;</a></span><span class="message">oriansj: Mostly just trying to bootstrap my understanding of guix and bootstrapping issues in general. I recently acquired a ThinkPad T400s (same as RMS) and am seeing how far one can go in practice with bootstrapping from zero blobs.</span></div><div class="line" id="031919"><span class="nick" style="color:#2e2a4a"><a href="#031919" label="[03:19:19]">&lt;xelxebar&gt;</a></span><span class="message">Still really early on though. Need to buy a power supply so I can flash the bios with libreboot... which is somewhat of a catch-22</span></div><div class="line" id="031942"><span class="nick" style="color:#8dd3c7"><a href="#031942" label="[03:19:42]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: well, the answer to that unfortunately is a bit ugly</span></div><div class="line" id="032014"><span class="nick" style="color:#8dd3c7"><a href="#032014" label="[03:20:14]">&lt;oriansj&gt;</a></span><span class="message">The current near terms is: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf</a> </span></div><div class="line" id="032045"><span class="nick" style="color:#8dd3c7"><a href="#032045" label="[03:20:45]">&lt;oriansj&gt;</a></span><span class="message">however it includes a big blob call the bios, and the posix system it runs upon</span></div><div class="line" id="032204"><span class="nick" style="color:#8dd3c7"><a href="#032204" label="[03:22:04]">&lt;oriansj&gt;</a></span><span class="message">Now once mes-m2 is done, I'll be solving both of those but it'll end up being another 2-3 years of work before I complete all of those pieces</span></div><div class="line" id="032259"><span class="nick" style="color:#2e2a4a"><a href="#032259" label="[03:22:59]">&lt;xelxebar&gt;</a></span><span class="message">Yeah, that's sort of the catch. Flashing libreboot just pushes the bios problem back to whatever compiler ended up building libreboot.</span></div><div class="line" id="032316"><span class="nick" style="color:#2e2a4a"><a href="#032316" label="[03:23:16]">&lt;xelxebar&gt;</a></span><span class="message">Probably a really basic question, but what's mes-m2?</span></div><div class="line" id="032353"><span class="nick" style="color:#8dd3c7"><a href="#032353" label="[03:23:53]">&lt;oriansj&gt;</a></span><span class="message">here are notes on all the major pieces <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/bootstrappable.org">https://github.com/oriansj/talk-notes/blob/master/bootstrappable.org</a> </span></div><div class="line" id="032420"><span class="nick" style="color:#2e2a4a"><a href="#032420" label="[03:24:20]">&lt;xelxebar&gt;</a></span><span class="message">Naively, one would like to start with some easily-verifiable hardware and hex0 or something...?</span></div><div class="line" id="032430"><span class="nick" style="color:#8dd3c7"><a href="#032430" label="[03:24:30]">&lt;oriansj&gt;</a></span><span class="message">essentially it is a scheme written in the subset of C supported by M2-Planet; which is the world's only bootstrapped C compiler</span></div><div class="line" id="032535"><span class="nick" style="color:#2e2a4a"><a href="#032535" label="[03:25:35]">&lt;xelxebar&gt;</a></span><span class="message">Oh. I see, it's a scheme sitting a few layers atop hex0</span></div><div class="line" id="032539"><span class="nick" style="color:#8dd3c7"><a href="#032539" label="[03:25:39]">&lt;oriansj&gt;</a></span><span class="message">well on the posix of your choice and jsut a 357byte binary(hex0); we have completed a full bootstrap to M2-Planet <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed">https://github.com/oriansj/mescc-tools-seed</a> </span></div><div class="line" id="032635"><span class="nick" style="color:#8dd3c7"><a href="#032635" label="[03:26:35]">&lt;oriansj&gt;</a></span><span class="message">which when complete will enable us to finish bootstapping GCC and from there it becomes trivial to bootstrap the guix world</span></div><div class="line" id="032745"><span class="nick" style="color:#8dd3c7"><a href="#032745" label="[03:27:45]">&lt;oriansj&gt;</a></span><span class="message">It still has the bios and Posix problem but stage0 will solve both of those</span></div><div class="line" id="032851"><span class="nick" style="color:#2e2a4a"><a href="#032851" label="[03:28:51]">&lt;xelxebar&gt;</a></span><span class="message">Is anyone working on a boostrap from knight?</span></div><div class="line" id="032854"><span class="nick" style="color:#8dd3c7"><a href="#032854" label="[03:28:54]">&lt;oriansj&gt;</a></span><span class="message">Which will involve me building hardware in TTL and providing the full blueprints to the public (and  some libresilicon work if I can afford it)</span></div><div class="line" id="032917"><span class="nick" style="color:#8dd3c7"><a href="#032917" label="[03:29:17]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: well From hex0-&gt;M2-Planet is already done on knight</span></div><div class="line" id="033000"><span class="nick" style="color:#8dd3c7"><a href="#033000" label="[03:30:00]">&lt;oriansj&gt;</a></span><span class="message">I just need to write a Posix in M2-Planet to solve the issue for the posix on x86</span></div><div class="line" id="033023"><span class="nick" style="color:#2e2a4a"><a href="#033023" label="[03:30:23]">&lt;xelxebar&gt;</a></span><span class="message">&quot;just&quot; heh</span></div><div class="line" id="033100"><span class="nick" style="color:#2e2a4a"><a href="#033100" label="[03:31:00]">&lt;xelxebar&gt;</a></span><span class="message">hex0 is implemented for knight, but is there any actual knight hardware yet?</span></div><div class="line" id="033100"><span class="nick" style="color:#8dd3c7"><a href="#033100" label="[03:31:00]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: well compared to everything else I've done; seems rather simple to do</span></div><div class="line" id="033218"><span class="nick" style="color:#8dd3c7"><a href="#033218" label="[03:32:18]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: well there are a handful of ancient machines that conform to that ISA but I don't wish to force people to depend upon them for trust</span></div><div class="line" id="033315"><span class="nick" style="color:#8dd3c7"><a href="#033315" label="[03:33:15]">&lt;oriansj&gt;</a></span><span class="message">So I'll be doing an FPGA using  IceStorm to get the first major step in that direction</span></div><div class="line" id="033349"><span class="nick" style="color:#8dd3c7"><a href="#033349" label="[03:33:49]">&lt;oriansj&gt;</a></span><span class="message">That'll give me time to figure out the TTL required from there</span></div><div class="line" id="033405"><span class="nick" style="color:#2e2a4a"><a href="#033405" label="[03:34:05]">&lt;xelxebar&gt;</a></span><span class="message">Building a TTL implementation sounds exceptionally fun</span></div><div class="line" id="033435"><span class="nick" style="color:#8dd3c7"><a href="#033435" label="[03:34:35]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: to be honest, alot of this is exceptionally fun</span></div><div class="line" id="033501"><span class="nick" style="color:#2e2a4a"><a href="#033501" label="[03:35:01]">&lt;xelxebar&gt;</a></span><span class="message">I hear you. The deeper I dig the more I get sucked in :)</span></div><div class="line" id="033504"><span class="nick" style="color:#8dd3c7"><a href="#033504" label="[03:35:04]">&lt;oriansj&gt;</a></span><span class="message">(not so much working with interpreters but hey, lessons learned)</span></div><div class="line" id="033526"><span class="nick" style="color:#2e2a4a"><a href="#033526" label="[03:35:26]">&lt;xelxebar&gt;</a></span><span class="message">Any rough idea of what transistor count will look like?</span></div><div class="line" id="033659"><span class="nick" style="color:#8dd3c7"><a href="#033659" label="[03:36:59]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: well that depends heavily is how good I am at that problem. As the original was done in a budget close to that of the PDP-1</span></div><div class="line" id="033749"><span class="nick" style="color:#8dd3c7"><a href="#033749" label="[03:37:49]">&lt;oriansj&gt;</a></span><span class="message">But honestly, I'm hoping someone amazing in hardware beats me to the punch</span></div><div class="line" id="033812"><span class="nick" style="color:#8dd3c7"><a href="#033812" label="[03:38:12]">&lt;oriansj&gt;</a></span><span class="message">Or makes it obsolete</span></div><div class="line" id="034200"><span class="nick" style="color:#8dd3c7"><a href="#034200" label="[03:42:00]">&lt;oriansj&gt;</a></span><span class="message">It is one of the reasons I make big grand maps; so that others can see pieces that interest them and get done before I even get started.</span></div><div class="line" id="034704"><span class="nick" style="color:#2e2a4a"><a href="#034704" label="[03:47:04]">&lt;xelxebar&gt;</a></span><span class="message">Hrm. I certainly wish I could volunteer. My EE skillz are nil though.</span></div><div class="line" id="034709"><span class="nick" style="color:#2e2a4a"><a href="#034709" label="[03:47:09]">&lt;xelxebar&gt;</a></span><span class="message">Is there much communication between the stage0 work and that of betrusted.io?</span></div><div class="line" id="034938"><span class="nick" style="color:#2e2a4a"><a href="#034938" label="[03:49:38]">&lt;xelxebar&gt;</a></span><span class="message">Thank you for entertaining my blast of newbie questions. I should just educate myself first and come back here.</span></div><div class="line" id="035024"><span class="nick" style="color:#2e2a4a"><a href="#035024" label="[03:50:24]">&lt;xelxebar&gt;</a></span><span class="message">This is super exciting work!</span></div><div class="line" id="041641"><span class="nick" style="color:#2e2a4a"><a href="#041641" label="[04:16:41]">&lt;xelxebar&gt;</a></span><span class="message">Wow, the &quot;Current bootstrap map&quot; is exceptionally complete looking!</span></div><div class="line" id="052925"><span class="nick" style="color:#6b8072"><a href="#052925" label="[05:29:25]">&lt;plasma41&gt;</a></span><span class="message">So does the Mes bootstrap binary run on straight silicon or on top of an existing operating system kernel?</span></div><div class="line" id="053037"><span class="nick" style="color:#6b8072"><a href="#053037" label="[05:30:37]">&lt;plasma41&gt;</a></span><span class="message">If on top of a kernel, wouldn't the kernel necessarily be considered part of the binary seed?</span></div><div class="line" id="053149"><span class="nick" style="color:#6b8072"><a href="#053149" label="[05:31:49]">&lt;plasma41&gt;</a></span><span class="message">If so what's the smallest kernel/oldest kernel version that has everything needed to run Mes?</span></div><div class="line" id="053239"><span class="nick" style="color:#6b8072"><a href="#053239" label="[05:32:39]">&lt;plasma41&gt;</a></span><span class="message">Is there a Mes + Minimal kernel bootstrap boot disc image?</span></div><div class="line" id="053909"><span class="nick" style="color:#6b8072"><a href="#053909" label="[05:39:09]">&lt;plasma41&gt;</a></span><span class="message">&quot;If you wish to make an apple pie from scratch, you must first invent the universe.&quot; - Carl Sagan</span></div><div class="line" id="065116"><span class="nick" style="color:#80b1d3"><a href="#065116" label="[06:51:16]">&lt;fossy&gt;</a></span><span class="message">oriansj: is there any references on M1 anywhere?</span></div><div class="line" id="065139"><span class="nick" style="color:#80b1d3"><a href="#065139" label="[06:51:39]">&lt;fossy&gt;</a></span><span class="message">i'm having a lot of trouble with implementing chdir() in M2-Planet because of my inexperience with assembly (especially M1)</span></div><div class="line" id="065643"><span class="nick" style="color:#6d2462"><a href="#065643" label="[06:56:43]">&lt;janneke&gt;</a></span><span class="message">oriansj: i am working on analog things, this week</span></div><div class="line" id="065906"><span class="nick" style="color:#80b1d3"><a href="#065906" label="[06:59:06]">&lt;fossy&gt;</a></span><span class="message">bootstrappable related things, janneke?</span></div><div class="line" id="065909"><span class="nick" style="color:#6d2462"><a href="#065909" label="[06:59:09]">&lt;janneke&gt;</a></span><span class="message">oriansj, fossy: the mes C library has been ported to m2-planet on my wip-m2 branch</span></div><div class="line" id="065910"><span class="nick" style="color:#80b1d3"><a href="#065910" label="[06:59:10]">&lt;fossy&gt;</a></span><span class="message">oiasdjf</span></div><div class="line" id="065912"><span class="nick" style="color:#80b1d3"><a href="#065912" label="[06:59:12]">&lt;fossy&gt;</a></span><span class="message">what do i mean</span></div><div class="line" id="065916"><span class="nick" style="color:#80b1d3"><a href="#065916" label="[06:59:16]">&lt;fossy&gt;</a></span><span class="message">i read your sentence wrong</span></div><div class="line" id="065928"><span class="nick" style="color:#80b1d3"><a href="#065928" label="[06:59:28]">&lt;fossy&gt;</a></span><span class="message">janneke: oo, very nice</span></div><div class="line" id="070010"><span class="nick" style="color:#6d2462"><a href="#070010" label="[07:00:10]">&lt;janneke&gt;</a></span><span class="message">which also has access</span></div><div class="line" id="070015"><span class="nick" style="color:#6d2462"><a href="#070015" label="[07:00:15]">&lt;janneke&gt;</a></span><span class="message">&quot;access&quot;</span></div><div class="line" id="112201"><span class="nick" style="color:#8dd3c7"><a href="#112201" label="[11:22:01]">&lt;oriansj&gt;</a></span><span class="message">xelxebar: no, I don't believe there has been any communication between the projects stage0 and betrusted.io; possibly because they don't know about us</span></div><div class="line" id="112352"><span class="nick" style="color:#8dd3c7"><a href="#112352" label="[11:23:52]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well yes Mes does run on a posix and it would need to be included in the trusted binaries; however there is a plan which will solve that issue from M2-Planet level (write a posix in M2-Planet); although we do not have a minimal mes+kernel bootstrap disc image yet</span></div><div class="line" id="112837"><span class="nick" style="color:#8dd3c7"><a href="#112837" label="[11:28:37]">&lt;oriansj&gt;</a></span><span class="message">fossy: well M1 is a language you can define your own instructions (DEFINE); the only bits that are hard-coded are the syntax rules for :labels, @jumps (!@$%&amp;), !5 (immediates !@%), ;line # comments, 'hex literals' and &quot;raw strings&quot;</span></div><div class="line" id="112947"><span class="nick" style="color:#8dd3c7"><a href="#112947" label="[11:29:47]">&lt;oriansj&gt;</a></span><span class="message">now each of the ports in M2-Planet have their own definitions files which contain a fairly complete set needed to implement all functionality for M2-Planet and all of its tests</span></div><div class="line" id="113245"><span class="nick" style="color:#8dd3c7"><a href="#113245" label="[11:32:45]">&lt;oriansj&gt;</a></span><span class="message">janneke: sounds good, I'll check it out later tomorrow (assuming someone else doesn't beat me to getting it done)</span></div><div class="line" id="114228"><span class="nick" style="color:#8dd3c7"><a href="#114228" label="[11:42:28]">&lt;oriansj&gt;</a></span><span class="message">morning dddddd</span></div><div class="line" id="114600"><span class="nick" style="color:#234e69"><a href="#114600" label="[11:46:00]">&lt;dddddd&gt;</a></span><span class="message">Hello!</span></div><div class="line" id="114856"><span class="nick" style="color:#8dd3c7"><a href="#114856" label="[11:48:56]">&lt;oriansj&gt;</a></span><span class="message">Today is going to be a day of me trying to find segfaults in mes-m2, so that users will never have to see them</span></div><div class="line" id="115149"><span class="nick" style="color:#8dd3c7"><a href="#115149" label="[11:51:49]">&lt;oriansj&gt;</a></span><span class="message">I probably need to get a good scheme fuzzer</span></div><div class="line" id="120150"><span class="nick" style="color:#234e69"><a href="#120150" label="[12:01:50]">&lt;dddddd&gt;</a></span><span class="message">Along with the RISC-V port of M2-Planet I'm considering the POSIX kernel as next task. I guess we don't need to strictly start from scratch, do you know of a &quot;simple&quot; one we can use as reference (maybe to convert from)?</span></div><div class="line" id="120311"><span class="nick" style="color:#8dd3c7"><a href="#120311" label="[12:03:11]">&lt;oriansj&gt;</a></span><span class="message">dddddd: well I was looking at xv6 as a possible root</span></div><div class="line" id="120409"><span class="nick" style="color:#8dd3c7"><a href="#120409" label="[12:04:09]">&lt;oriansj&gt;</a></span><span class="message">as it is relatively clean for a kernel and people have already done ports of it to arm; which we might be able to leverage</span></div><div class="line" id="120430"><span class="nick" style="color:#8dd3c7"><a href="#120430" label="[12:04:30]">&lt;oriansj&gt;</a></span><span class="message">(since very few simple kernels ever are multiarch)</span></div><div class="line" id="120438"><span class="nick" style="color:#234e69"><a href="#120438" label="[12:04:38]">&lt;dddddd&gt;</a></span><span class="message">fossy, in test/common_*/ of M2-Planet there're some lib functions, mostly doing syscalls. What did you try, wrt chdir()?</span></div><div class="line" id="120505"><span class="nick" style="color:#234e69"><a href="#120505" label="[12:05:05]">&lt;dddddd&gt;</a></span><span class="message">noted, oriansj</span></div><div class="line" id="162811"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="190554"><span class="nick" style="color:#6c3d55"><a href="#190554" label="[19:05:54]">&lt;vagrantc&gt;</a></span><span class="message">janneke: i tested mes building with nyacc 1.00.2 and seems to still work fine, even got the same hash :)</span></div><div class="line" id="190653"><span class="nick" style="color:#6c3d55"><a href="#190653" label="[19:06:53]">&lt;vagrantc&gt;</a></span><span class="message">janneke: also tested the latest mes wip patches ... curious when we might see another release? :)</span></div><div class="line" id="191803"><span class="nick" style="color:#6d2462"><a href="#191803" label="[19:18:03]">&lt;janneke&gt;</a></span><span class="message">vagrantc: that's great!</span></div><div class="line" id="191912"><span class="nick" style="color:#6d2462"><a href="#191912" label="[19:19:12]">&lt;janneke&gt;</a></span><span class="message">vagrantc: yes, any day now 0.22; you haven't heard from david wheeler yet?</span></div><div class="line" id="192000"><span class="nick" style="color:#6c3d55"><a href="#192000" label="[19:20:00]">&lt;vagrantc&gt;</a></span><span class="message">janneke: no.</span></div><div class="line" id="192037"><span class="nick" style="color:#6c3d55"><a href="#192037" label="[19:20:37]">&lt;vagrantc&gt;</a></span><span class="message">janneke: i did make some edits to the news post that i'd probably feel comfortable with publishing...</span></div><div class="line" id="192044"><span class="nick" style="color:#6c3d55"><a href="#192044" label="[19:20:44]">&lt;vagrantc&gt;</a></span><span class="message">janneke: even without comment from dwheeler</span></div><div class="line" id="192243"><span class="nick" style="color:#6d2462"><a href="#192243" label="[19:22:43]">&lt;janneke&gt;</a></span><span class="message">yes, we should probably not wait too long</span></div><div class="line" id="192512"><span class="nick" style="color:#6c3d55"><a href="#192512" label="[19:25:12]">&lt;vagrantc&gt;</a></span><span class="message">janneke: <a rel="nofollow" href="https://salsa.debian.org/reproducible-builds/reproducible-website/blob/master/_posts/2019-12-XX-reproducible-bootstrap-of-mes-c-compiler.md">https://salsa.debian.org/reproducible-builds/reproducible-website/blob/master/_posts/2019-12-XX-reproducible-bootstrap-of-mes-c-compiler.md</a> </span></div><div class="line" id="192655"><span class="nick" style="color:#6c3d55"><a href="#192655" label="[19:26:55]">&lt;vagrantc&gt;</a></span><span class="message">janneke: if the release for 0.22 is &quot;any day now&quot; we could make the news post in sync with it :)</span></div><div class="line" id="192723"><span class="nick" style="color:#6c3d55"><a href="#192723" label="[19:27:23]">&lt;vagrantc&gt;</a></span><span class="message">janneke: haven't heard back from xwvvvvwx recently, either...</span></div><div class="line" id="192745"><span class="nick" style="color:#6c3d55"><a href="#192745" label="[19:27:45]">&lt;vagrantc&gt;</a></span><span class="message">would be nice to reconfirm it still works on nix</span></div><div class="line" id="193222"><span class="nick" style="color:#6c3d55"><a href="#193222" label="[19:32:22]">&lt;vagrantc&gt;</a></span><span class="message">though i'd be surprised if it didn't</span></div><div class="line" id="193424"><span class="nick" style="color:#6d2462"><a href="#193424" label="[19:34:24]">&lt;janneke&gt;</a></span><span class="message">yes, i'll see if ik can prepare 0.22 this weekend; let's see how we can sync!</span></div><div class="line" id="223835"><span class="nick" style="color:#d9d9d9"><a href="#223835" label="[22:38:35]">&lt;Hagfish&gt;</a></span><span class="message">is there a standard constant used in cryptography to describe how &quot;lucky&quot; an attacker is expected to be?</span></div><div class="line" id="223853"><span class="nick" style="color:#d9d9d9"><a href="#223853" label="[22:38:53]">&lt;Hagfish&gt;</a></span><span class="message">i mean, an attacker could guess a private key on their first attempt if they are really really lucky</span></div><div class="line" id="223940"><span class="nick" style="color:#d9d9d9"><a href="#223940" label="[22:39:40]">&lt;Hagfish&gt;</a></span><span class="message">i guess if the &quot;attack&quot; is &quot;try random values&quot; then the attacker is assumed to be &quot;averagely lucky&quot;</span></div><div class="line" id="231021"><span class="nick" style="color:#d9d9d9"><a href="#231021" label="[23:10:21]">&lt;Hagfish&gt;</a></span><span class="message">i'm probably thinking of this: <a rel="nofollow" href="https://security.stackexchange.com/questions/31072/the-security-level-in-hash-function">https://security.stackexchange.com/questions/31072/the-security-level-in-hash-function</a> </span></div><br /></div></body></html>