<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-28.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000306"><span class="nick" style="color:#389600"><a href="#000306" label="[00:03:06]">&lt;fossy&gt;</a></span><span class="message">stikonas: nice!! all it needs to do is build bison, so it dosen't matter too much</span></div><div class="line" id="002406"><span class="nick" style="color:#2e2a4a"><a href="#002406" label="[00:24:06]">&lt;stikonas&gt;</a></span><span class="message">fossy: actually it only needs to build flex1</span></div><div class="line" id="002424"><span class="nick" style="color:#2e2a4a"><a href="#002424" label="[00:24:24]">&lt;stikonas&gt;</a></span><span class="message">so we really need to only run it on that single file</span></div><div class="line" id="002436"><span class="nick" style="color:#2e2a4a"><a href="#002436" label="[00:24:36]">&lt;stikonas&gt;</a></span><span class="message">let me try it in live environment</span></div><div class="line" id="002454"><span class="nick" style="color:#2e2a4a"><a href="#002454" label="[00:24:54]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, is there any particular reason why you chose patching with -p0?</span></div><div class="line" id="002521"><span class="nick" style="color:#2e2a4a"><a href="#002521" label="[00:25:21]">&lt;stikonas&gt;</a></span><span class="message">I'm trying to find nicer way to produce patches like that but most tools give me -p1</span></div><div class="line" id="003028"><span class="nick" style="color:#2e2a4a"><a href="#003028" label="[00:30:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, good news is that flex 1 builds in my chroot (with busybox)</span></div><div class="line" id="003045"><span class="nick" style="color:#2e2a4a"><a href="#003045" label="[00:30:45]">&lt;stikonas&gt;</a></span><span class="message">so I'll push lex now and later start working on flex 2.5.1</span></div><div class="line" id="003100"><span class="nick" style="color:#2e2a4a"><a href="#003100" label="[00:31:00]">&lt;stikonas&gt;</a></span><span class="message">I want to start from tarball, not gio's submodule</span></div><div class="line" id="003112"><span class="nick" style="color:#2e2a4a"><a href="#003112" label="[00:31:12]">&lt;stikonas&gt;</a></span><span class="message">and also need to workaround mkskel.sh</span></div><div class="line" id="003123"><span class="nick" style="color:#2e2a4a"><a href="#003123" label="[00:31:23]">&lt;stikonas&gt;</a></span><span class="message">it's a simple shell script that produces another file, but we don't have shell yet...</span></div><div class="line" id="011040"><span class="nick" style="color:#389600"><a href="#011040" label="[01:10:40]">&lt;fossy&gt;</a></span><span class="message">stikonas: honestly because that's what i'm used to, lol</span></div><div class="line" id="011054"><span class="nick" style="color:#389600"><a href="#011054" label="[01:10:54]">&lt;fossy&gt;</a></span><span class="message">in void all patches are -p0 so i default to using that :P</span></div><div class="line" id="011122"><span class="nick" style="color:#2e2a4a"><a href="#011122" label="[01:11:22]">&lt;stikonas&gt;</a></span><span class="message">anyway, I've just locally tested <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/19">https://github.com/fosslinux/live-bootstrap/pull/19</a> </span></div><div class="line" id="011123"><span class="nick" style="color:#2e2a4a"><a href="#011123" label="[01:11:23]">&lt;stikonas&gt;</a></span><span class="message">and it passed</span></div><div class="line" id="011144"><span class="nick" style="color:#2e2a4a"><a href="#011144" label="[01:11:44]">&lt;stikonas&gt;</a></span><span class="message">did M-x replace-string to get rid of those prefixes</span></div><div class="line" id="011249"><span class="nick" style="color:#389600"><a href="#011249" label="[01:12:49]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, mkskel is rather ugly</span></div><div class="line" id="011254"><span class="nick" style="color:#2e2a4a"><a href="#011254" label="[01:12:54]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah...</span></div><div class="line" id="011306"><span class="nick" style="color:#2e2a4a"><a href="#011306" label="[01:13:06]">&lt;stikonas&gt;</a></span><span class="message">that's the only problem with flex 2.5.1</span></div><div class="line" id="011311"><span class="nick" style="color:#2e2a4a"><a href="#011311" label="[01:13:11]">&lt;stikonas&gt;</a></span><span class="message">I think everything else is working</span></div><div class="line" id="011313"><span class="nick" style="color:#2e2a4a"><a href="#011313" label="[01:13:13]">&lt;stikonas&gt;</a></span><span class="message">sed seems to work</span></div><div class="line" id="011321"><span class="nick" style="color:#389600"><a href="#011321" label="[01:13:21]">&lt;fossy&gt;</a></span><span class="message">yeah but piping</span></div><div class="line" id="011322"><span class="nick" style="color:#2e2a4a"><a href="#011322" label="[01:13:22]">&lt;stikonas&gt;</a></span><span class="message">yacc and lex works</span></div><div class="line" id="011326"><span class="nick" style="color:#2e2a4a"><a href="#011326" label="[01:13:26]">&lt;stikonas&gt;</a></span><span class="message">yeah, I know</span></div><div class="line" id="011333"><span class="nick" style="color:#2e2a4a"><a href="#011333" label="[01:13:33]">&lt;stikonas&gt;</a></span><span class="message">I was thinking maybe write a C app that does the same thing</span></div><div class="line" id="011337"><span class="nick" style="color:#389600"><a href="#011337" label="[01:13:37]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="011339"><span class="nick" style="color:#389600"><a href="#011339" label="[01:13:39]">&lt;fossy&gt;</a></span><span class="message">alternatively</span></div><div class="line" id="011410"><span class="nick" style="color:#389600"><a href="#011410" label="[01:14:10]">&lt;fossy&gt;</a></span><span class="message">ah.. m4 only does it to stdout</span></div><div class="line" id="011443"><span class="nick" style="color:#2e2a4a"><a href="#011443" label="[01:14:43]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="011515"><span class="nick" style="color:#2e2a4a"><a href="#011515" label="[01:15:15]">&lt;stikonas&gt;</a></span><span class="message">anyway, I hope it's easier...</span></div><div class="line" id="011518"><span class="nick" style="color:#389600"><a href="#011518" label="[01:15:18]">&lt;fossy&gt;</a></span><span class="message">um</span></div><div class="line" id="011521"><span class="nick" style="color:#389600"><a href="#011521" label="[01:15:21]">&lt;fossy&gt;</a></span><span class="message">what is mkskel used for</span></div><div class="line" id="011530"><span class="nick" style="color:#2e2a4a"><a href="#011530" label="[01:15:30]">&lt;stikonas&gt;</a></span><span class="message">heirloom tools took me maybe 2 weeks</span></div><div class="line" id="011531"><span class="nick" style="color:#2e2a4a"><a href="#011531" label="[01:15:31]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="011535"><span class="nick" style="color:#2e2a4a"><a href="#011535" label="[01:15:35]">&lt;stikonas&gt;</a></span><span class="message">it generates skel.c file</span></div><div class="line" id="011537"><span class="nick" style="color:#389600"><a href="#011537" label="[01:15:37]">&lt;fossy&gt;</a></span><span class="message">oh i see</span></div><div class="line" id="011537"><span class="nick" style="color:#2e2a4a"><a href="#011537" label="[01:15:37]">&lt;stikonas&gt;</a></span><span class="message">that is compiled in</span></div><div class="line" id="011550"><span class="nick" style="color:#389600"><a href="#011550" label="[01:15:50]">&lt;fossy&gt;</a></span><span class="message">oooh now i can read tinycc</span></div><div class="line" id="011558"><span class="nick" style="color:#2e2a4a"><a href="#011558" label="[01:15:58]">&lt;stikonas&gt;</a></span><span class="message">??</span></div><div class="line" id="011703"><span class="nick" style="color:#389600"><a href="#011703" label="[01:17:03]">&lt;fossy&gt;</a></span><span class="message">lol, so, i'm trying to figure out how to link the linux kenrel, so i was using tcbcoot, so i extracted the iso, but then there was a romfs filesystem (wtf?) inside it, so i recompiled my kernel to add support for it, so now i can finally read it, and finish the kernel xD</span></div><div class="line" id="011703"><span class="nick" style="color:#389600"><a href="#011703" label="[01:17:03]">&lt;fossy&gt;</a></span><span class="message">anyway</span></div><div class="line" id="011707"><span class="nick" style="color:#2e2a4a"><a href="#011707" label="[01:17:07]">&lt;stikonas&gt;</a></span><span class="message">oh ok :)</span></div><div class="line" id="011712"><span class="nick" style="color:#2e2a4a"><a href="#011712" label="[01:17:12]">&lt;stikonas&gt;</a></span><span class="message">by the way, can we make kernel optional?</span></div><div class="line" id="011715"><span class="nick" style="color:#389600"><a href="#011715" label="[01:17:15]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="011717"><span class="nick" style="color:#2e2a4a"><a href="#011717" label="[01:17:17]">&lt;stikonas&gt;</a></span><span class="message">so that we don't break chroot...</span></div><div class="line" id="011721"><span class="nick" style="color:#2e2a4a"><a href="#011721" label="[01:17:21]">&lt;stikonas&gt;</a></span><span class="message">probably need to do via make</span></div><div class="line" id="011725"><span class="nick" style="color:#2e2a4a"><a href="#011725" label="[01:17:25]">&lt;stikonas&gt;</a></span><span class="message">kaem doesn't have conditionals...</span></div><div class="line" id="011729"><span class="nick" style="color:#2e2a4a"><a href="#011729" label="[01:17:29]">&lt;stikonas&gt;</a></span><span class="message">even though we have test...</span></div><div class="line" id="011736"><span class="nick" style="color:#389600"><a href="#011736" label="[01:17:36]">&lt;fossy&gt;</a></span><span class="message">that's on my todo list</span></div><div class="line" id="011748"><span class="nick" style="color:#389600"><a href="#011748" label="[01:17:48]">&lt;fossy&gt;</a></span><span class="message">i am unconvinced that everything will always work with all linux kernels</span></div><div class="line" id="011750"><span class="nick" style="color:#389600"><a href="#011750" label="[01:17:50]">&lt;fossy&gt;</a></span><span class="message">but that's ok</span></div><div class="line" id="011805"><span class="nick" style="color:#389600"><a href="#011805" label="[01:18:05]">&lt;fossy&gt;</a></span><span class="message">we can document that</span></div><div class="line" id="011836"><span class="nick" style="color:#389600"><a href="#011836" label="[01:18:36]">&lt;fossy&gt;</a></span><span class="message">hmmm</span></div><div class="line" id="015937"><span class="nick" style="color:#2e2a4a"><a href="#015937" label="[01:59:37]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think I have an idea for mkskel.sh</span></div><div class="line" id="015944"><span class="nick" style="color:#389600"><a href="#015944" label="[01:59:44]">&lt;fossy&gt;</a></span><span class="message">shoot</span></div><div class="line" id="020032"><span class="nick" style="color:#2e2a4a"><a href="#020032" label="[02:00:32]">&lt;stikonas&gt;</a></span><span class="message">provided that sed works for that file (I haven't tested it) we run sed and do catm skel.c header sed'ed file footer</span></div><div class="line" id="020048"><span class="nick" style="color:#2e2a4a"><a href="#020048" label="[02:00:48]">&lt;stikonas&gt;</a></span><span class="message">those header and footer are very simple anyway</span></div><div class="line" id="020056"><span class="nick" style="color:#2e2a4a"><a href="#020056" label="[02:00:56]">&lt;stikonas&gt;</a></span><span class="message">we can just ship them...</span></div><div class="line" id="020125"><span class="nick" style="color:#2e2a4a"><a href="#020125" label="[02:01:25]">&lt;stikonas&gt;</a></span><span class="message">footer is just 0 \n };</span></div><div class="line" id="020128"><span class="nick" style="color:#389600"><a href="#020128" label="[02:01:28]">&lt;fossy&gt;</a></span><span class="message">oh yeah that works</span></div><div class="line" id="020140"><span class="nick" style="color:#2e2a4a"><a href="#020140" label="[02:01:40]">&lt;stikonas&gt;</a></span><span class="message">just need to hope that sed works...</span></div><div class="line" id="020203"><span class="nick" style="color:#2e2a4a"><a href="#020203" label="[02:02:03]">&lt;stikonas&gt;</a></span><span class="message">well, I can create header and footer with patches...</span></div><div class="line" id="020213"><span class="nick" style="color:#2e2a4a"><a href="#020213" label="[02:02:13]">&lt;stikonas&gt;</a></span><span class="message">or just copy them</span></div><div class="line" id="020219"><span class="nick" style="color:#2e2a4a"><a href="#020219" label="[02:02:19]">&lt;stikonas&gt;</a></span><span class="message">probably don't have to be in patch format</span></div><div class="line" id="020230"><span class="nick" style="color:#2e2a4a"><a href="#020230" label="[02:02:30]">&lt;stikonas&gt;</a></span><span class="message">it just reduces readability</span></div><div class="line" id="020259"><span class="nick" style="color:#2e2a4a"><a href="#020259" label="[02:02:59]">&lt;stikonas&gt;</a></span><span class="message">oh and <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/19">https://github.com/fosslinux/live-bootstrap/pull/19</a>  now passed in CI</span></div><div class="line" id="020314"><span class="nick" style="color:#389600"><a href="#020314" label="[02:03:14]">&lt;fossy&gt;</a></span><span class="message">ill merge once I get back home :)</span></div><div class="line" id="020344"><span class="nick" style="color:#2e2a4a"><a href="#020344" label="[02:03:44]">&lt;stikonas&gt;</a></span><span class="message">sure :)</span></div><div class="line" id="020354"><span class="nick" style="color:#2e2a4a"><a href="#020354" label="[02:03:54]">&lt;stikonas&gt;</a></span><span class="message">hmm, newer flex has much more annoying mkskel.sh</span></div><div class="line" id="020405"><span class="nick" style="color:#2e2a4a"><a href="#020405" label="[02:04:05]">&lt;stikonas&gt;</a></span><span class="message">I wonder if we can skip it until we have bash</span></div><div class="line" id="020415"><span class="nick" style="color:#2e2a4a"><a href="#020415" label="[02:04:15]">&lt;stikonas&gt;</a></span><span class="message">it also needs m4</span></div><div class="line" id="020448"><span class="nick" style="color:#2e2a4a"><a href="#020448" label="[02:04:48]">&lt;stikonas&gt;</a></span><span class="message">and pipes...</span></div><div class="line" id="020550"><span class="nick" style="color:#2e2a4a"><a href="#020550" label="[02:05:50]">&lt;stikonas&gt;</a></span><span class="message">I'm now always at home...</span></div><div class="line" id="020600"><span class="nick" style="color:#2e2a4a"><a href="#020600" label="[02:06:00]">&lt;stikonas&gt;</a></span><span class="message">haven't been in office since last March...</span></div><div class="line" id="020624"><span class="nick" style="color:#2e2a4a"><a href="#020624" label="[02:06:24]">&lt;stikonas&gt;</a></span><span class="message">well, still WFH...</span></div><div class="line" id="020911"><span class="nick" style="color:#389600"><a href="#020911" label="[02:09:11]">&lt;fossy&gt;</a></span><span class="message">what country?</span></div><div class="line" id="021946"><span class="nick" style="color:#2e2a4a"><a href="#021946" label="[02:19:46]">&lt;stikonas&gt;</a></span><span class="message">fossy: UK</span></div><div class="line" id="022006"><span class="nick" style="color:#2e2a4a"><a href="#022006" label="[02:20:06]">&lt;stikonas&gt;</a></span><span class="message">although, I'm not british</span></div><div class="line" id="022225"><span class="nick" style="color:#2e2a4a"><a href="#022225" label="[02:22:25]">&lt;stikonas&gt;</a></span><span class="message">getting late here in UK now...</span></div><div class="line" id="022239"><span class="nick" style="color:#2e2a4a"><a href="#022239" label="[02:22:39]">&lt;stikonas&gt;</a></span><span class="message">so I'll go to bed and maybe tomorrow evening I can start looking at flex 2.5.1</span></div><div class="line" id="022247"><span class="nick" style="color:#2e2a4a"><a href="#022247" label="[02:22:47]">&lt;stikonas&gt;</a></span><span class="message">should be fairly straightforward</span></div><div class="line" id="022308"><span class="nick" style="color:#2e2a4a"><a href="#022308" label="[02:23:08]">&lt;stikonas&gt;</a></span><span class="message">since I was already using it to test correctness of yacc and lex</span></div><div class="line" id="022331"><span class="nick" style="color:#2e2a4a"><a href="#022331" label="[02:23:31]">&lt;stikonas&gt;</a></span><span class="message">then I think I'll try to skip newer flex and go directly to vison</span></div><div class="line" id="022333"><span class="nick" style="color:#2e2a4a"><a href="#022333" label="[02:23:33]">&lt;stikonas&gt;</a></span><span class="message">bison</span></div><div class="line" id="022421"><span class="nick" style="color:#2e2a4a"><a href="#022421" label="[02:24:21]">&lt;stikonas&gt;</a></span><span class="message">then hopefully bash and then newer flex</span></div><div class="line" id="022505"><span class="nick" style="color:#6b8072"><a href="#022505" label="[02:25:05]">&lt;OriansJ&gt;</a></span><span class="message">--tty-in and --tty-out have been added to stage0's vm to allow easier testing</span></div><div class="line" id="022807"><span class="nick" style="color:#389600"><a href="#022807" label="[02:28:07]">&lt;fossy&gt;</a></span><span class="message">stikonas: ah, sucks over there rn, hope youre doing ok</span></div><div class="line" id="023150"><span class="nick" style="color:#2e2a4a"><a href="#023150" label="[02:31:50]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'm fine. I have builder's half mask for diy, those work very well against corona too</span></div><div class="line" id="023238"><span class="nick" style="color:#2e2a4a"><a href="#023238" label="[02:32:38]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.jspsafety.com/link/en/respiratory-protection/force-8-half-masks-and-filters/force-8-with-presstocheck-filters/force-trade-8-half-mask-with-presstocheck-trade-p3-filters/bht0a3-0l5-n00/p/?parm=CAT1JSP&amp;prdcod=BHT0A3-0L5-N00">https://www.jspsafety.com/link/en/respiratory-protection/force-8-half-masks-and-filters/force-8-with-presstocheck-filters/force-trade-8-half-mask-with-presstocheck-trade-p3-filters/bht0a3-0l5-n00/p/?parm=CAT1JSP&amp;prdcod=BHT0A3-0L5-N00</a> </span></div><div class="line" id="023957"><span class="nick" style="color:#6b8072"><a href="#023957" label="[02:39:57]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I have the revised knight-native tests nearly done and should be up shortly</span></div><div class="line" id="024100"><span class="nick" style="color:#6b8072"><a href="#024100" label="[02:41:00]">&lt;OriansJ&gt;</a></span><span class="message">the knight-posix will take a little longer but I should have it up before  this weekend.</span></div><div class="line" id="024206"><span class="nick" style="color:#6b8072"><a href="#024206" label="[02:42:06]">&lt;OriansJ&gt;</a></span><span class="message">just make sure to have stage0's vm at commit 086c5f0ed2f234700f37b8be690825b12c855412 or newer</span></div><div class="line" id="024325"><span class="nick" style="color:#6b8072"><a href="#024325" label="[02:43:25]">&lt;OriansJ&gt;</a></span><span class="message">and revised tests are up</span></div><div class="line" id="031335"><span class="nick" style="color:#80b1d3"><a href="#031335" label="[03:13:35]">&lt;deesix&gt;</a></span><span class="message">OriansJ, looking at the diff for 2043a574c982 it the scripts are now testing [ 0 = $? ] for programs that returns (usually) 42, is this correct?</span></div><div class="line" id="031354"><span class="nick" style="color:#80b1d3"><a href="#031354" label="[03:13:54]">&lt;deesix&gt;</a></span><span class="message">s/it//</span></div><div class="line" id="031632"><span class="nick" style="color:#6b8072"><a href="#031632" label="[03:16:32]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well yes because HALTing a machine doesn't exactly have a defined way of returning a value.</span></div><div class="line" id="031735"><span class="nick" style="color:#6b8072"><a href="#031735" label="[03:17:35]">&lt;OriansJ&gt;</a></span><span class="message">normally I'd use Knight.py and set a breakpoint at the halt to see what is register R0</span></div><div class="line" id="032011"><span class="nick" style="color:#6b8072"><a href="#032011" label="[03:20:11]">&lt;OriansJ&gt;</a></span><span class="message">knight-posix will actually return a value because the SYS_EXIT HALCODE does exit(vm-&gt;reg[0]);</span></div><div class="line" id="032142"><span class="nick">***</span><span class="message notice">duncanm_ is now known as duncanm</span></div><div class="line" id="032251"><span class="nick" style="color:#80b1d3"><a href="#032251" label="[03:22:51]">&lt;deesix&gt;</a></span><span class="message">Still special cases for the unified scripts but now we can run the tests, which is great, thanks!</span></div><div class="line" id="032401"><span class="nick" style="color:#80b1d3"><a href="#032401" label="[03:24:01]">&lt;deesix&gt;</a></span><span class="message">I'll try it tomorrow.</span></div><div class="line" id="032412"><span class="nick" style="color:#6b8072"><a href="#032412" label="[03:24:12]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well knight-native might not ever fit in the unified scripts but knight POSIX should be able to without much complexity</span></div><div class="line" id="032550"><span class="nick" style="color:#6b8072"><a href="#032550" label="[03:25:50]">&lt;OriansJ&gt;</a></span><span class="message">just a single variable set (say KNIGHT_EMULATION) and an else if will be sufficient to put knight-posix into your unified script. I'll get an example ready for you so it'll be more obvious</span></div><div class="line" id="033545"><span class="nick" style="color:#80b1d3"><a href="#033545" label="[03:35:45]">&lt;deesix&gt;</a></span><span class="message">Yes, for native is also a conditional branch.</span></div><div class="line" id="033648"><span class="nick" style="color:#6b8072"><a href="#033648" label="[03:36:48]">&lt;OriansJ&gt;</a></span><span class="message">deesix: native doesn't have to be in the unified because it is sufficiently unique</span></div><div class="line" id="033759"><span class="nick" style="color:#80b1d3"><a href="#033759" label="[03:37:59]">&lt;deesix&gt;</a></span><span class="message">It's 90% the same, like the rest...</span></div><div class="line" id="033917"><span class="nick" style="color:#80b1d3"><a href="#033917" label="[03:39:17]">&lt;deesix&gt;</a></span><span class="message">I mean, if M2libc is used.</span></div><div class="line" id="034140"><span class="nick" style="color:#80b1d3"><a href="#034140" label="[03:41:40]">&lt;deesix&gt;</a></span><span class="message">If not, just a bit different and I guess unify-able, but sure... a bit more ugly. I guess we can skip it.</span></div><div class="line" id="034200"><span class="nick" style="color:#6b8072"><a href="#034200" label="[03:42:00]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well yes; just like x86-userspace is 90% of x86-native. it has syscalls, arguments and environment variables; whereas x86 bios don't.</span></div><div class="line" id="034446"><span class="nick" style="color:#80b1d3"><a href="#034446" label="[03:44:46]">&lt;deesix&gt;</a></span><span class="message">Sorry, I'm lost now xD I was talking about about the content of the scripts... the calls to M2-Planet, M1, ... then the verify zone.</span></div><div class="line" id="034859"><span class="nick" style="color:#6b8072"><a href="#034859" label="[03:48:59]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I am just saying unification with knight-native is not a priority nor likely to yield much benefits</span></div><div class="line" id="034916"><span class="nick" style="color:#6b8072"><a href="#034916" label="[03:49:16]">&lt;OriansJ&gt;</a></span><span class="message">knight-posix however is a different matter.</span></div><div class="line" id="035023"><span class="nick" style="color:#80b1d3"><a href="#035023" label="[03:50:23]">&lt;deesix&gt;</a></span><span class="message">OK, so test/common_knight/* won't be replaced soon.</span></div><div class="line" id="035153"><span class="nick" style="color:#6b8072"><a href="#035153" label="[03:51:53]">&lt;OriansJ&gt;</a></span><span class="message">deesix: it'll be the last of the test/common_* to be removed.</span></div><div class="line" id="035540"><span class="nick" style="color:#6b8072"><a href="#035540" label="[03:55:40]">&lt;OriansJ&gt;</a></span><span class="message">419,265,798 instructions for knight-posix to self-host M2-Planet; even at 1Mhz that is only 7minutes</span></div><div class="line" id="035655"><span class="nick" style="color:#6b8072"><a href="#035655" label="[03:56:55]">&lt;OriansJ&gt;</a></span><span class="message">and less than 10MB of RAM too</span></div><div class="line" id="035854"><span class="nick" style="color:#6b8072"><a href="#035854" label="[03:58:54]">&lt;OriansJ&gt;</a></span><span class="message">under 3MB nice</span></div><div class="line" id="035935"><span class="nick" style="color:#6b8072"><a href="#035935" label="[03:59:35]">&lt;OriansJ&gt;</a></span><span class="message">I could probably cut that significantly if if I didn't tokenize all of the input and cache all of the output</span></div><div class="line" id="040104"><span class="nick" style="color:#6b8072"><a href="#040104" label="[04:01:04]">&lt;OriansJ&gt;</a></span><span class="message">So the current design goal for bare metal knight: 1Mhz or faster and 5MB of RAM</span></div><div class="line" id="040133"><span class="nick" style="color:#6b8072"><a href="#040133" label="[04:01:33]">&lt;OriansJ&gt;</a></span><span class="message">I think that is doable</span></div><div class="line" id="040259"><span class="nick" style="color:#6b8072"><a href="#040259" label="[04:02:59]">&lt;OriansJ&gt;</a></span><span class="message">and deesix here is what would be required for knight-posix to  also include virtualized execution: <a rel="nofollow" href="https://paste.debian.net/1183053/">https://paste.debian.net/1183053/</a> </span></div><div class="line" id="040743"><span class="nick" style="color:#80b1d3"><a href="#040743" label="[04:07:43]">&lt;deesix&gt;</a></span><span class="message">Thanks.</span></div><div class="line" id="051313"><span class="nick" style="color:#6b8072"><a href="#051313" label="[05:13:13]">&lt;OriansJ&gt;</a></span><span class="message">I'll probably end up making knight-posix more posix compatible.</span></div><div class="line" id="075052"><span class="nick">***</span><span class="message notice">qyliss- is now known as qyliss</span></div><div class="line" id="081949"><span class="nick" style="color:#389600"><a href="#081949" label="[08:19:49]">&lt;fossy&gt;</a></span><span class="message">lol, 1185 LOC patches for linux</span></div><div class="line" id="081953"><span class="nick" style="color:#389600"><a href="#081953" label="[08:19:53]">&lt;fossy&gt;</a></span><span class="message">totalling 68K size</span></div><div class="line" id="082550"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="083309"><span class="nick" style="color:#6d2462"><a href="#083309" label="[08:33:09]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: but hopefully same a generated (e.g. replacements)</span></div><div class="line" id="083318"><span class="nick" style="color:#6d2462"><a href="#083318" label="[08:33:18]">&lt;gforce_de1977&gt;</a></span><span class="message">/same/some/</span></div><div class="line" id="083618"><span class="nick" style="color:#6d2462"><a href="#083618" label="[08:36:18]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: can you upload/show/pastebin your .config for a minimal 2.4.26 kernel?</span></div><div class="line" id="092352"><span class="nick" style="color:#389600"><a href="#092352" label="[09:23:52]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: only 10k ish</span></div><div class="line" id="092432"><span class="nick" style="color:#389600"><a href="#092432" label="[09:24:32]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: well, we are not really using a .config, as this is before makefile</span></div><div class="line" id="092439"><span class="nick" style="color:#389600"><a href="#092439" label="[09:24:39]">&lt;fossy&gt;</a></span><span class="message">(kaem script is being used)</span></div><div class="line" id="092505"><span class="nick" style="color:#389600"><a href="#092505" label="[09:25:05]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: this is what i based it off <a rel="nofollow" href="https://raw.githubusercontent.com/8l/tccboot/master/linux-2.4.26-config">https://raw.githubusercontent.com/8l/tccboot/master/linux-2.4.26-config</a> </span></div><div class="line" id="093358"><span class="nick" style="color:#6d2462"><a href="#093358" label="[09:33:58]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: thanks a lot! i will try and report</span></div><div class="line" id="095132"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="121940"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="142912"><span class="nick" style="color:#6d2462"><a href="#142912" label="[14:29:12]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: till now the minikernel/kritis did not work with kernel 2.4, so i'am trying to get an idea why (strange compiler complaints)</span></div><div class="line" id="144057"><span class="nick" style="color:#6d2462"><a href="#144057" label="[14:40:57]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: but seems, that this old kernel need GCC-2.95.3 or at least GCC&lt;4</span></div><div class="line" id="144613"><span class="nick">***</span><span class="message notice">nimaje1 is now known as nimaje</span></div><div class="line" id="151203"><span class="nick" style="color:#234e69"><a href="#151203" label="[15:12:03]">&lt;pder&gt;</a></span><span class="message">stikonas: in live-bootstrap are you treating bash as not currently available since it isn't properly bootstrapped?  I am wondering why you say you need a workaround to mkskel.sh?</span></div><div class="line" id="151319"><span class="nick" style="color:#2e2a4a"><a href="#151319" label="[15:13:19]">&lt;stikonas&gt;</a></span><span class="message">pder: yes, it's not available</span></div><div class="line" id="151327"><span class="nick" style="color:#2e2a4a"><a href="#151327" label="[15:13:27]">&lt;stikonas&gt;</a></span><span class="message">so we can't run mkskel.sh</span></div><div class="line" id="151333"><span class="nick" style="color:#2e2a4a"><a href="#151333" label="[15:13:33]">&lt;stikonas&gt;</a></span><span class="message">pder: but the workaround is quite easy</span></div><div class="line" id="151343"><span class="nick" style="color:#234e69"><a href="#151343" label="[15:13:43]">&lt;pder&gt;</a></span><span class="message">I dont understand, bash is built and runs scripts</span></div><div class="line" id="151404"><span class="nick" style="color:#234e69"><a href="#151404" label="[15:14:04]">&lt;pder&gt;</a></span><span class="message">Is it due to the way it is built?</span></div><div class="line" id="151405"><span class="nick" style="color:#2e2a4a"><a href="#151405" label="[15:14:05]">&lt;stikonas&gt;</a></span><span class="message">pder: we used pregenerated file to build bash</span></div><div class="line" id="151413"><span class="nick" style="color:#2e2a4a"><a href="#151413" label="[15:14:13]">&lt;stikonas&gt;</a></span><span class="message">this work is to remove that</span></div><div class="line" id="151426"><span class="nick" style="color:#2e2a4a"><a href="#151426" label="[15:14:26]">&lt;stikonas&gt;</a></span><span class="message">once this work is done we'll have bash properly available</span></div><div class="line" id="151428"><span class="nick" style="color:#234e69"><a href="#151428" label="[15:14:28]">&lt;pder&gt;</a></span><span class="message">ah, I see</span></div><div class="line" id="151432"><span class="nick" style="color:#2e2a4a"><a href="#151432" label="[15:14:32]">&lt;stikonas&gt;</a></span><span class="message">and it's comming close...</span></div><div class="line" id="151443"><span class="nick" style="color:#2e2a4a"><a href="#151443" label="[15:14:43]">&lt;stikonas&gt;</a></span><span class="message">took me maybe 2 weeks :D to get yacc and lex working</span></div><div class="line" id="151449"><span class="nick" style="color:#234e69"><a href="#151449" label="[15:14:49]">&lt;pder&gt;</a></span><span class="message">Yeah, nice work by the way on yacc and flex</span></div><div class="line" id="151449"><span class="nick" style="color:#2e2a4a"><a href="#151449" label="[15:14:49]">&lt;stikonas&gt;</a></span><span class="message">but now I think it will be much faster</span></div><div class="line" id="151504"><span class="nick" style="color:#2e2a4a"><a href="#151504" label="[15:15:04]">&lt;stikonas&gt;</a></span><span class="message">pder: s/flex/lex/</span></div><div class="line" id="151516"><span class="nick" style="color:#2e2a4a"><a href="#151516" label="[15:15:16]">&lt;stikonas&gt;</a></span><span class="message">flex 2.5.11 should be done later today if I'm lucky</span></div><div class="line" id="151541"><span class="nick" style="color:#2e2a4a"><a href="#151541" label="[15:15:41]">&lt;stikonas&gt;</a></span><span class="message">but I don't expect any difficulties with flex 2.5.11</span></div><div class="line" id="151559"><span class="nick" style="color:#234e69"><a href="#151559" label="[15:15:59]">&lt;pder&gt;</a></span><span class="message">Ive been busy with other stuff, so havent had a chance to investigate why doubles are so broken in tcc.  Is this possibly a known issue?</span></div><div class="line" id="151603"><span class="nick" style="color:#2e2a4a"><a href="#151603" label="[15:16:03]">&lt;stikonas&gt;</a></span><span class="message">then hopefully I can skip latest flex version (postpone after bash) and go for bison</span></div><div class="line" id="151611"><span class="nick" style="color:#2e2a4a"><a href="#151611" label="[15:16:11]">&lt;stikonas&gt;</a></span><span class="message">no idea...</span></div><div class="line" id="151631"><span class="nick" style="color:#2e2a4a"><a href="#151631" label="[15:16:31]">&lt;stikonas&gt;</a></span><span class="message">but we can probably live with it</span></div><div class="line" id="151637"><span class="nick" style="color:#234e69"><a href="#151637" label="[15:16:37]">&lt;pder&gt;</a></span><span class="message">I noticed in gio's asmc project he patched tcc to use softfloat</span></div><div class="line" id="151638"><span class="nick" style="color:#2e2a4a"><a href="#151638" label="[15:16:38]">&lt;stikonas&gt;</a></span><span class="message">even seq is not completely useless...</span></div><div class="line" id="151655"><span class="nick" style="color:#2e2a4a"><a href="#151655" label="[15:16:55]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe we can look at that too...</span></div><div class="line" id="151703"><span class="nick" style="color:#2e2a4a"><a href="#151703" label="[15:17:03]">&lt;stikonas&gt;</a></span><span class="message">seq still prints correct number of zeroes</span></div><div class="line" id="155844"><span class="nick" style="color:#6c3d55"><a href="#155844" label="[15:58:44]">&lt;bauen1&gt;</a></span><span class="message">this discussion reminds me, didn't tccboot use some tools to pregenerate / preprocess files and make them usable with tcc ?</span></div><div class="line" id="155910"><span class="nick" style="color:#2e2a4a"><a href="#155910" label="[15:59:10]">&lt;stikonas&gt;</a></span><span class="message">well, only fossy looked at it...</span></div><div class="line" id="155917"><span class="nick" style="color:#2e2a4a"><a href="#155917" label="[15:59:17]">&lt;stikonas&gt;</a></span><span class="message">so that's a question for him</span></div><div class="line" id="155942"><span class="nick" style="color:#6c3d55"><a href="#155942" label="[15:59:42]">&lt;bauen1&gt;</a></span><span class="message">fossy: true, maybe you can answer that</span></div><div class="line" id="160008"><span class="nick" style="color:#2e2a4a"><a href="#160008" label="[16:00:08]">&lt;stikonas&gt;</a></span><span class="message">I initially thought makefile will be used but apparently it's kaem...</span></div><div class="line" id="160029"><span class="nick" style="color:#2e2a4a"><a href="#160029" label="[16:00:29]">&lt;stikonas&gt;</a></span><span class="message">anyway, for now I'll to go get bash bootstrapped</span></div><div class="line" id="160202"><span class="nick" style="color:#2e2a4a"><a href="#160202" label="[16:02:02]">&lt;stikonas&gt;</a></span><span class="message">s/to go/try to/</span></div><div class="line" id="191214"><span class="nick" style="color:#2e2a4a"><a href="#191214" label="[19:12:14]">&lt;stikonas&gt;</a></span><span class="message">hmm, I barely managed to get hold of flex 2.5.11 tarball... Well, it wouldn't have been a disaster since there is git history but there were only two places left</span></div><div class="line" id="194005"><span class="nick" style="color:#2e2a4a"><a href="#194005" label="[19:40:05]">&lt;stikonas&gt;</a></span><span class="message">ok, flex 2.5.11 works :)</span></div><div class="line" id="194119"><span class="nick" style="color:#2e2a4a"><a href="#194119" label="[19:41:19]">&lt;stikonas&gt;</a></span><span class="message">I'm building it basically 3 times...</span></div><div class="line" id="194231"><span class="nick" style="color:#2e2a4a"><a href="#194231" label="[19:42:31]">&lt;stikonas&gt;</a></span><span class="message">first flex-tmp which uses simplified lexer written for heirloom lex. Then flex-tmp builds very lightly patched flex. Then very lightly patched flex builds unpatched flex.</span></div><div class="line" id="201854"><span class="nick" style="color:#234e69"><a href="#201854" label="[20:18:54]">&lt;pder&gt;</a></span><span class="message">very nice.  now bison, then bash?</span></div><div class="line" id="202545"><span class="nick" style="color:#2e2a4a"><a href="#202545" label="[20:25:45]">&lt;stikonas&gt;</a></span><span class="message">pder: hopefully...</span></div><div class="line" id="202558"><span class="nick" style="color:#2e2a4a"><a href="#202558" label="[20:25:58]">&lt;stikonas&gt;</a></span><span class="message">nsb had newer flex first which I'll try to skip</span></div><div class="line" id="202610"><span class="nick" style="color:#2e2a4a"><a href="#202610" label="[20:26:10]">&lt;stikonas&gt;</a></span><span class="message">pder: so bison, and then only minor adjustments to bash</span></div><div class="line" id="202621"><span class="nick" style="color:#2e2a4a"><a href="#202621" label="[20:26:21]">&lt;stikonas&gt;</a></span><span class="message">we just need to add one rm command, update README, etc...</span></div><div class="line" id="202941"><span class="nick" style="color:#2e2a4a"><a href="#202941" label="[20:29:41]">&lt;stikonas&gt;</a></span><span class="message">pder: feel free to review <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/21">https://github.com/fosslinux/live-bootstrap/pull/21</a> </span></div><div class="line" id="211250"><span class="nick" style="color:#d9d9d9"><a href="#211250" label="[21:12:50]">&lt;warren&gt;</a></span><span class="message">Does anyone know if Guix as shipped on Debian bootstraps from Debian's toolchain and results in a binary identical Guix?</span></div><div class="line" id="211326"><span class="nick" style="color:#d9d9d9"><a href="#211326" label="[21:13:26]">&lt;warren&gt;</a></span><span class="message">I have never used Debian, but I want to package Guix for Fedora. They would require anything that ships in Fedora to be buildable from Fedora's toolchain.</span></div><div class="line" id="211335"><span class="nick" style="color:#d9d9d9"><a href="#211335" label="[21:13:35]">&lt;warren&gt;</a></span><span class="message">bootstrappable from Fedora's toolchain</span></div><div class="line" id="211355"><span class="nick" style="color:#bc80bd"><a href="#211355" label="[21:13:55]">&lt;vagrantc&gt;</a></span><span class="message">what part are you wondering about binary identicalness?</span></div><div class="line" id="211402"><span class="nick" style="color:#d9d9d9"><a href="#211402" label="[21:14:02]">&lt;warren&gt;</a></span><span class="message">vagrantc: oh hey!</span></div><div class="line" id="211431"><span class="nick" style="color:#d9d9d9"><a href="#211431" label="[21:14:31]">&lt;warren&gt;</a></span><span class="message">vagrantc: Is the Guix in Debian built entirely from source or does it rely upon some base binaries?</span></div><div class="line" id="211434"><span class="nick" style="color:#bc80bd"><a href="#211434" label="[21:14:34]">&lt;vagrantc&gt;</a></span><span class="message">the binary it ships is definitely not binary identical to any guix binary in guix, but it can produce (at least as good as guix can) any package</span></div><div class="line" id="211443"><span class="nick" style="color:#d9d9d9"><a href="#211443" label="[21:14:43]">&lt;warren&gt;</a></span><span class="message">oh</span></div><div class="line" id="211502"><span class="nick" style="color:#bc80bd"><a href="#211502" label="[21:15:02]">&lt;vagrantc&gt;</a></span><span class="message">warren: it's built from the Debian toolchain, but can bootstrap a guix just as good as guix itself can</span></div><div class="line" id="211518"><span class="nick" style="color:#d9d9d9"><a href="#211518" label="[21:15:18]">&lt;warren&gt;</a></span><span class="message">wouldn't it be possible for Debian toolchain -&gt; guix -&gt; guix builds itself again to be identical to upstream guix?</span></div><div class="line" id="211535"><span class="nick" style="color:#bc80bd"><a href="#211535" label="[21:15:35]">&lt;vagrantc&gt;</a></span><span class="message">if guix itself were reproducible :/</span></div><div class="line" id="211554"><span class="nick" style="color:#d9d9d9"><a href="#211554" label="[21:15:54]">&lt;warren&gt;</a></span><span class="message">I thought that was the raison detre of guix?</span></div><div class="line" id="211602"><span class="nick" style="color:#2e2a4a"><a href="#211602" label="[21:16:02]">&lt;stikonas&gt;</a></span><span class="message">warren: not everything in guix is reproducible</span></div><div class="line" id="211617"><span class="nick" style="color:#d9d9d9"><a href="#211617" label="[21:16:17]">&lt;warren&gt;</a></span><span class="message">the parts that matter are reproducible?</span></div><div class="line" id="211622"><span class="nick" style="color:#bc80bd"><a href="#211622" label="[21:16:22]">&lt;vagrantc&gt;</a></span><span class="message">it sets up an environment the maximizes the chances of reproducibility, and does some work to make that happen</span></div><div class="line" id="211701"><span class="nick" style="color:#d9d9d9"><a href="#211701" label="[21:17:01]">&lt;warren&gt;</a></span><span class="message">the ultimate goal of wanting guix is to make static linked binaries of something else like Bitcoin Core. If the end output is identical between any guix that's good enough.</span></div><div class="line" id="211702"><span class="nick" style="color:#bc80bd"><a href="#211702" label="[21:17:02]">&lt;vagrantc&gt;</a></span><span class="message">warren: there was some recent thread on guix-devel about building guile (and ostensibly guix itself) reproducibly</span></div><div class="line" id="211810"><span class="nick" style="color:#bc80bd"><a href="#211810" label="[21:18:10]">&lt;vagrantc&gt;</a></span><span class="message">warren: it's plausible that Debian's guix, guix's guix and some future Fedora's guix could all produce an bit-identical bitcoin (since bitcoin has gone to some lengths to be reproducible)</span></div><div class="line" id="211827"><span class="nick" style="color:#2e2a4a"><a href="#211827" label="[21:18:27]">&lt;stikonas&gt;</a></span><span class="message">well, some people might use guix for bootstrappability instead of reproducibility...</span></div><div class="line" id="211856"><span class="nick" style="color:#bc80bd"><a href="#211856" label="[21:18:56]">&lt;vagrantc&gt;</a></span><span class="message">and yeah, this might be more on-topic for #guix or some reproducible builds channel :)</span></div><div class="line" id="211900"><span class="nick" style="color:#2e2a4a"><a href="#211900" label="[21:19:00]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: Debian's guix uses upstream's guix bootstrap binaries anywya</span></div><div class="line" id="211926"><span class="nick" style="color:#2e2a4a"><a href="#211926" label="[21:19:26]">&lt;stikonas&gt;</a></span><span class="message">so most likely they would result in the same bit-identical software (in those 90% or so reproducible packages)</span></div><div class="line" id="212006"><span class="nick" style="color:#d9d9d9"><a href="#212006" label="[21:20:06]">&lt;warren&gt;</a></span><span class="message">A challenges that I  have in packaging guix is Fedora's buildsystem requires everything to be built as non-root and offline. I've read <a rel="nofollow" href="https://github.com/pjotrp/guix-notes/blob/master/GUIX-NO-ROOT.org">https://github.com/pjotrp/guix-notes/blob/master/GUIX-NO-ROOT.org</a>  which seems relevant</span></div><div class="line" id="212014"><span class="nick" style="color:#bc80bd"><a href="#212014" label="[21:20:14]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: no, the guix in debian is only built from tools in Debian</span></div><div class="line" id="212034"><span class="nick" style="color:#bc80bd"><a href="#212034" label="[21:20:34]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: i would know, having disabled the hundreds of tests that depended on the bootstrap binaries :)</span></div><div class="line" id="212040"><span class="nick" style="color:#2e2a4a"><a href="#212040" label="[21:20:40]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: but do you edit hashes in bootstrap.scm?</span></div><div class="line" id="212111"><span class="nick" style="color:#bc80bd"><a href="#212111" label="[21:21:11]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: no ... the first guix pull will then use the bootstrap binaries</span></div><div class="line" id="212147"><span class="nick" style="color:#2e2a4a"><a href="#212147" label="[21:21:47]">&lt;stikonas&gt;</a></span><span class="message">yeah, so basically build process for buix packages will be identical</span></div><div class="line" id="212152"><span class="nick" style="color:#2e2a4a"><a href="#212152" label="[21:21:52]">&lt;stikonas&gt;</a></span><span class="message">and you should get the same hashes</span></div><div class="line" id="212154"><span class="nick" style="color:#bc80bd"><a href="#212154" label="[21:21:54]">&lt;vagrantc&gt;</a></span><span class="message">warren: same basic requirements for Debian packages (at least how I packaged guix)</span></div><div class="line" id="212223"><span class="nick" style="color:#d9d9d9"><a href="#212223" label="[21:22:23]">&lt;warren&gt;</a></span><span class="message">vagrantc: OK I will take a crack at this, I will likely have questions.</span></div><div class="line" id="212234"><span class="nick" style="color:#bc80bd"><a href="#212234" label="[21:22:34]">&lt;vagrantc&gt;</a></span><span class="message">warren: had to disable a *lot* of tests that assume network access and access to the bootstrap binaries</span></div><div class="line" id="212247"><span class="nick" style="color:#d9d9d9"><a href="#212247" label="[21:22:47]">&lt;warren&gt;</a></span><span class="message"> <a rel="nofollow" href="https://copr.fedorainfracloud.org/coprs/lantw44/guix/package/guix/">https://copr.fedorainfracloud.org/coprs/lantw44/guix/package/guix/</a>  Somebody previously packaged guix, haven't looked at what bootstrapping approach they used.</span></div><div class="line" id="212318"><span class="nick" style="color:#2e2a4a"><a href="#212318" label="[21:23:18]">&lt;stikonas&gt;</a></span><span class="message">well, in any case it's not full bootstrap :)</span></div><div class="line" id="212331"><span class="nick" style="color:#d9d9d9"><a href="#212331" label="[21:23:31]">&lt;warren&gt;</a></span><span class="message">vagrantc: <a rel="nofollow" href="https://salsa.debian.org/debian/guix/-/tree/debian/devel/debian">https://salsa.debian.org/debian/guix/-/tree/debian/devel/debian</a>  &lt;--- is this your latest work?</span></div><div class="line" id="212344"><span class="nick" style="color:#bc80bd"><a href="#212344" label="[21:23:44]">&lt;vagrantc&gt;</a></span><span class="message">warren: yup</span></div><div class="line" id="212357"><span class="nick" style="color:#2e2a4a"><a href="#212357" label="[21:23:57]">&lt;stikonas&gt;</a></span><span class="message">warren: we'll hopefully bootstrap bash this weekend, still a while to go until guile is bootstrapped</span></div><div class="line" id="212358"><span class="nick" style="color:#d9d9d9"><a href="#212358" label="[21:23:58]">&lt;warren&gt;</a></span><span class="message">vagrantc: would guix accept commits to have an official offline bootstrap mode or something?</span></div><div class="line" id="212410"><span class="nick" style="color:#bc80bd"><a href="#212410" label="[21:24:10]">&lt;vagrantc&gt;</a></span><span class="message">warren: you'll be terrified, er, interested in debian/patches/ :)</span></div><div class="line" id="212453"><span class="nick" style="color:#bc80bd"><a href="#212453" label="[21:24:53]">&lt;vagrantc&gt;</a></span><span class="message">warren: don't see why not, and consider me an ally in nudging for it :)</span></div><div class="line" id="212455"><span class="nick" style="color:#2e2a4a"><a href="#212455" label="[21:24:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: this is now ready for merging <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/21">https://github.com/fosslinux/live-bootstrap/pull/21</a> </span></div><div class="line" id="212600"><span class="nick" style="color:#bc80bd"><a href="#212600" label="[21:26:00]">&lt;vagrantc&gt;</a></span><span class="message">i suspect the full-source bootstrap is going to be infeasible for debian; shipping ancient versions of various core packages likely frowned upon</span></div><div class="line" id="212612"><span class="nick" style="color:#d9d9d9"><a href="#212612" label="[21:26:12]">&lt;warren&gt;</a></span><span class="message">stikonas: i'm curious what the meaning/significance of bootstrap bash and bootstrap guile means?</span></div><div class="line" id="212613"><span class="nick" style="color:#2e2a4a"><a href="#212613" label="[21:26:13]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: you don't have to ship everything :)</span></div><div class="line" id="212625"><span class="nick" style="color:#bc80bd"><a href="#212625" label="[21:26:25]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: well, to do it in the archive, we do</span></div><div class="line" id="212646"><span class="nick" style="color:#bc80bd"><a href="#212646" label="[21:26:46]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: everything built in debian needs to have it's dependencies packaged...</span></div><div class="line" id="212650"><span class="nick" style="color:#d9d9d9"><a href="#212650" label="[21:26:50]">&lt;warren&gt;</a></span><span class="message">back in 20 minutes</span></div><div class="line" id="212720"><span class="nick" style="color:#2e2a4a"><a href="#212720" label="[21:27:20]">&lt;stikonas&gt;</a></span><span class="message">warren: we are trying to build everything from 737 byte shell and 357 byte hex assembler</span></div><div class="line" id="212755"><span class="nick" style="color:#2e2a4a"><a href="#212755" label="[21:27:55]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: hmm, yeah, that's true...</span></div><div class="line" id="212801"><span class="nick" style="color:#2e2a4a"><a href="#212801" label="[21:28:01]">&lt;stikonas&gt;</a></span><span class="message">gcc depends on gcc I guess...</span></div><div class="line" id="212920"><span class="nick" style="color:#bc80bd"><a href="#212920" label="[21:29:20]">&lt;vagrantc&gt;</a></span><span class="message">exactly...</span></div><div class="line" id="212928"><span class="nick" style="color:#2e2a4a"><a href="#212928" label="[21:29:28]">&lt;stikonas&gt;</a></span><span class="message">warren: this is what we call full source bootstrap (for now ignoring POSIX kernel)... so from just those 2 binaries and a lot of source code we try to build proper toolchain</span></div><div class="line" id="212939"><span class="nick" style="color:#2e2a4a"><a href="#212939" label="[21:29:39]">&lt;stikonas&gt;</a></span><span class="message">(in a fully automated way)</span></div><div class="line" id="213008"><span class="nick" style="color:#bc80bd"><a href="#213008" label="[21:30:08]">&lt;vagrantc&gt;</a></span><span class="message">maybe an exception for bootstrapping specific versions would be allowed, especially if the binaries were in non-standard paths or something like that</span></div><div class="line" id="213056"><span class="nick" style="color:#bc80bd"><a href="#213056" label="[21:30:56]">&lt;vagrantc&gt;</a></span><span class="message">though then i wonder about security implications of building a foundation on software that has known security vulnerabilities...</span></div><div class="line" id="213111"><span class="nick" style="color:#bc80bd"><a href="#213111" label="[21:31:11]">&lt;vagrantc&gt;</a></span><span class="message">(e.g. old/ancient versions of toolchains)</span></div><div class="line" id="213113"><span class="nick" style="color:#2e2a4a"><a href="#213113" label="[21:31:13]">&lt;stikonas&gt;</a></span><span class="message">well, it's just for bootstrapping...</span></div><div class="line" id="213122"><span class="nick" style="color:#2e2a4a"><a href="#213122" label="[21:31:22]">&lt;stikonas&gt;</a></span><span class="message">it's not like current debian was not bootstrapped on those</span></div><div class="line" id="213130"><span class="nick" style="color:#2e2a4a"><a href="#213130" label="[21:31:30]">&lt;stikonas&gt;</a></span><span class="message">just steps to bootstrap it were lost</span></div><div class="line" id="213134"><span class="nick" style="color:#bc80bd"><a href="#213134" label="[21:31:34]">&lt;vagrantc&gt;</a></span><span class="message">true</span></div><div class="line" id="213149"><span class="nick" style="color:#2e2a4a"><a href="#213149" label="[21:31:49]">&lt;stikonas&gt;</a></span><span class="message">and I guess there were many more steps</span></div><div class="line" id="213158"><span class="nick" style="color:#bc80bd"><a href="#213158" label="[21:31:58]">&lt;vagrantc&gt;</a></span><span class="message">but this audience in this channel may be a bit easier to convince than ... all of debian, for example :)</span></div><div class="line" id="213209"><span class="nick" style="color:#2e2a4a"><a href="#213209" label="[21:32:09]">&lt;stikonas&gt;</a></span><span class="message">that's understandable</span></div><div class="line" id="213222"><span class="nick" style="color:#bc80bd"><a href="#213222" label="[21:32:22]">&lt;vagrantc&gt;</a></span><span class="message">the case can be made ... but ... things move slow in Debian :(</span></div><div class="line" id="213226"><span class="nick" style="color:#2e2a4a"><a href="#213226" label="[21:32:26]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="213306"><span class="nick" style="color:#2e2a4a"><a href="#213306" label="[21:33:06]">&lt;stikonas&gt;</a></span><span class="message">well, you can make gcc-bootstrap package that has no dependencies and includes all bootrapping steps as part of build process but does not install insecure binaries... But I guess such big frankenstein build would also be frowned upon</span></div><div class="line" id="213338"><span class="nick" style="color:#2e2a4a"><a href="#213338" label="[21:33:38]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: in any case you can't install everything</span></div><div class="line" id="213344"><span class="nick" style="color:#2e2a4a"><a href="#213344" label="[21:33:44]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: some of the packages are non-redistributable</span></div><div class="line" id="213434"><span class="nick" style="color:#2e2a4a"><a href="#213434" label="[21:34:34]">&lt;stikonas&gt;</a></span><span class="message">so they wouldn't be able to go to main</span></div><div class="line" id="213459"><span class="nick" style="color:#389600"><a href="#213459" label="[21:34:59]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: ah, yeah, kernel 2.4 will never compile on new compieer</span></div><div class="line" id="213506"><span class="nick" style="color:#bc80bd"><a href="#213506" label="[21:35:06]">&lt;vagrantc&gt;</a></span><span class="message">might be possible to get exceptions, too</span></div><div class="line" id="213526"><span class="nick" style="color:#2e2a4a"><a href="#213526" label="[21:35:26]">&lt;stikonas&gt;</a></span><span class="message">in live-bootstrap those non-redistributable packages are not a big problem since we compile from source and don't distribute them</span></div><div class="line" id="213533"><span class="nick" style="color:#389600"><a href="#213533" label="[21:35:33]">&lt;fossy&gt;</a></span><span class="message">&lt;bauen1&gt; this discussion reminds me, didn't tccboot use some tools to pregenerate / preprocess files and make them usable with tcc ?</span></div><div class="line" id="213542"><span class="nick" style="color:#389600"><a href="#213542" label="[21:35:42]">&lt;fossy&gt;</a></span><span class="message">correct</span></div><div class="line" id="213545"><span class="nick" style="color:#2e2a4a"><a href="#213545" label="[21:35:45]">&lt;stikonas&gt;</a></span><span class="message">in fact they only live for a few seconds until they get overwritten with good packages</span></div><div class="line" id="213557"><span class="nick" style="color:#389600"><a href="#213557" label="[21:35:57]">&lt;fossy&gt;</a></span><span class="message">it precompiles some things from the kernel sources to build the iso</span></div><div class="line" id="213626"><span class="nick" style="color:#389600"><a href="#213626" label="[21:36:26]">&lt;fossy&gt;</a></span><span class="message">but, the kernel it kexecs into is completely from source</span></div><div class="line" id="213705"><span class="nick" style="color:#389600"><a href="#213705" label="[21:37:05]">&lt;fossy&gt;</a></span><span class="message">I am not using any of the tccboot code, so that eliminates the precompiled code, all I used tccboot for was finding the required files and arguments to tcc for linking :D</span></div><div class="line" id="213933"><span class="nick" style="color:#389600"><a href="#213933" label="[21:39:33]">&lt;fossy&gt;</a></span><span class="message">vagrantc: you clearly know a lot more about this than me, but one issue I envisinge is security flaws, distros dont like using these old things because they have soooo many cves</span></div><div class="line" id="213959"><span class="nick" style="color:#389600"><a href="#213959" label="[21:39:59]">&lt;fossy&gt;</a></span><span class="message">(I.e. why I am hesistant to provide network access during the bootstrap)</span></div><div class="line" id="214039"><span class="nick" style="color:#bc80bd"><a href="#214039" label="[21:40:39]">&lt;vagrantc&gt;</a></span><span class="message">i mostly know the distro policies, but you might likely know more in regards to technical details :)</span></div><div class="line" id="214052"><span class="nick" style="color:#2e2a4a"><a href="#214052" label="[21:40:52]">&lt;stikonas&gt;</a></span><span class="message">well, maybe if we firewall off incoming connections then risk is managable?</span></div><div class="line" id="214128"><span class="nick" style="color:#2e2a4a"><a href="#214128" label="[21:41:28]">&lt;stikonas&gt;</a></span><span class="message">fossy, vagrantc: curiously, live-bootstrap has newer bzip2 than my main system!</span></div><div class="line" id="214149"><span class="nick" style="color:#bc80bd"><a href="#214149" label="[21:41:49]">&lt;vagrantc&gt;</a></span><span class="message">hah</span></div><div class="line" id="214158"><span class="nick" style="color:#2e2a4a"><a href="#214158" label="[21:41:58]">&lt;stikonas&gt;</a></span><span class="message">so not everything is ancient</span></div><div class="line" id="214238"><span class="nick" style="color:#389600"><a href="#214238" label="[21:42:38]">&lt;fossy&gt;</a></span><span class="message">stikonas: hehe, maybe a few things lol</span></div><div class="line" id="214255"><span class="nick" style="color:#389600"><a href="#214255" label="[21:42:55]">&lt;fossy&gt;</a></span><span class="message">firewall is probably doable, but you need an uptodate firewall</span></div><div class="line" id="214436"><span class="nick" style="color:#2e2a4a"><a href="#214436" label="[21:44:36]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, I'm trying to play with bison now, got a few ugly warnings...  or maybe errors, not sure yet</span></div><div class="line" id="214450"><span class="nick" style="color:#2e2a4a"><a href="#214450" label="[21:44:50]">&lt;stikonas&gt;</a></span><span class="message">/after/bison-3.4.1/bison-3.4.1/src # flex scan-code.l</span></div><div class="line" id="214452"><span class="nick" style="color:#2e2a4a"><a href="#214452" label="[21:44:52]">&lt;stikonas&gt;</a></span><span class="message">vsscanf: not supported: %:o</span></div><div class="line" id="214502"><span class="nick" style="color:#2e2a4a"><a href="#214502" label="[21:45:02]">&lt;stikonas&gt;</a></span><span class="message">probaby from mes libc...</span></div><div class="line" id="215022"><span class="nick" style="color:#2e2a4a"><a href="#215022" label="[21:50:22]">&lt;stikonas&gt;</a></span><span class="message">fossy: yep, those seem to be critical errors...</span></div><div class="line" id="215028"><span class="nick" style="color:#2e2a4a"><a href="#215028" label="[21:50:28]">&lt;stikonas&gt;</a></span><span class="message">that's not good :(</span></div><div class="line" id="215049"><span class="nick" style="color:#2e2a4a"><a href="#215049" label="[21:50:49]">&lt;stikonas&gt;</a></span><span class="message">I wonder if I need newer flex or better libc</span></div><div class="line" id="215317"><span class="nick" style="color:#389600"><a href="#215317" label="[21:53:17]">&lt;fossy&gt;</a></span><span class="message">I bet its newer flex, can you try in chroot mode</span></div><div class="line" id="215712"><span class="nick" style="color:#2e2a4a"><a href="#215712" label="[21:57:12]">&lt;stikonas&gt;</a></span><span class="message">well, Im already trying to build it with busybox</span></div><div class="line" id="215810"><span class="nick" style="color:#2e2a4a"><a href="#215810" label="[21:58:10]">&lt;stikonas&gt;</a></span><span class="message">argh, newer flex is also tricky...</span></div><div class="line" id="215817"><span class="nick" style="color:#2e2a4a"><a href="#215817" label="[21:58:17]">&lt;stikonas&gt;</a></span><span class="message">not just mkskel.sh</span></div><div class="line" id="215827"><span class="nick" style="color:#2e2a4a"><a href="#215827" label="[21:58:27]">&lt;stikonas&gt;</a></span><span class="message">flexdef.h:63: error: include file 'netinet/in.h' not found</span></div><div class="line" id="215829"><span class="nick" style="color:#2e2a4a"><a href="#215829" label="[21:58:29]">&lt;stikonas&gt;</a></span><span class="message">let me try to remove it</span></div><div class="line" id="215840"><span class="nick" style="color:#2e2a4a"><a href="#215840" label="[21:58:40]">&lt;stikonas&gt;</a></span><span class="message">hopefully it's not critical</span></div><div class="line" id="220045"><span class="nick" style="color:#2e2a4a"><a href="#220045" label="[22:00:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, newer flex seems to require much more powerful C library</span></div><div class="line" id="220050"><span class="nick" style="color:#2e2a4a"><a href="#220050" label="[22:00:50]">&lt;stikonas&gt;</a></span><span class="message">regexes, etc...</span></div><div class="line" id="220125"><span class="nick" style="color:#2e2a4a"><a href="#220125" label="[22:01:25]">&lt;stikonas&gt;</a></span><span class="message">hmm, that's annoying :(</span></div><div class="line" id="220130"><span class="nick" style="color:#2e2a4a"><a href="#220130" label="[22:01:30]">&lt;stikonas&gt;</a></span><span class="message">were were quite close to bash</span></div><div class="line" id="220136"><span class="nick" style="color:#2e2a4a"><a href="#220136" label="[22:01:36]">&lt;stikonas&gt;</a></span><span class="message">already have flex 2.5.1</span></div><div class="line" id="220511"><span class="nick" style="color:#2e2a4a"><a href="#220511" label="[22:05:11]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think I have success!</span></div><div class="line" id="220515"><span class="nick" style="color:#2e2a4a"><a href="#220515" label="[22:05:15]">&lt;stikonas&gt;</a></span><span class="message">forget about bison for now</span></div><div class="line" id="220529"><span class="nick" style="color:#2e2a4a"><a href="#220529" label="[22:05:29]">&lt;stikonas&gt;</a></span><span class="message">yacc can build bash's parse.y</span></div><div class="line" id="220543"><span class="nick" style="color:#2e2a4a"><a href="#220543" label="[22:05:43]">&lt;stikonas&gt;</a></span><span class="message">although, let me see if it can run anything</span></div><div class="line" id="220645"><span class="nick" style="color:#2e2a4a"><a href="#220645" label="[22:06:45]">&lt;stikonas&gt;</a></span><span class="message">yes, it seems to work!</span></div><div class="line" id="220702"><span class="nick" style="color:#2e2a4a"><a href="#220702" label="[22:07:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: so we can postpone newer flex and bison for a bit</span></div><div class="line" id="220717"><span class="nick" style="color:#2e2a4a"><a href="#220717" label="[22:07:17]">&lt;stikonas&gt;</a></span><span class="message">although, it would be really good if we can get better C library</span></div><div class="line" id="221230"><span class="nick" style="color:#2e2a4a"><a href="#221230" label="[22:12:30]">&lt;stikonas&gt;</a></span><span class="message">ok, let's test bash</span></div><div class="line" id="221534"><span class="nick" style="color:#2e2a4a"><a href="#221534" label="[22:15:34]">&lt;stikonas&gt;</a></span><span class="message">wth... first commit in <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/21">https://github.com/fosslinux/live-bootstrap/pull/21</a>  passed and after second CI failed. Second is just readme update</span></div><div class="line" id="221545"><span class="nick" style="color:#2e2a4a"><a href="#221545" label="[22:15:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: any idea?</span></div><div class="line" id="221817"><span class="nick" style="color:#2e2a4a"><a href="#221817" label="[22:18:17]">&lt;stikonas&gt;</a></span><span class="message">is this sed breakage that you occasionally saw?</span></div><div class="line" id="222607"><span class="nick" style="color:#d9d9d9"><a href="#222607" label="[22:26:07]">&lt;warren&gt;</a></span><span class="message">For the purpose of fedora's guix it would be adequate if it is bootstrapped from Fedora's toolchain where the end result is identical to Guix bootstrapped elsewhere. I'll take a look at the binary diff afterward to see if it matters.</span></div><div class="line" id="222640"><span class="nick" style="color:#d9d9d9"><a href="#222640" label="[22:26:40]">&lt;warren&gt;</a></span><span class="message">It would be cool if we could bootstrap all the way from the 737 byte shell and 357 byte hex assembler on Fedora.</span></div><div class="line" id="222847"><span class="nick" style="color:#389600"><a href="#222847" label="[22:28:47]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, no, i'll just rerun it</span></div><div class="line" id="222937"><span class="nick" style="color:#389600"><a href="#222937" label="[22:29:37]">&lt;fossy&gt;</a></span><span class="message">stikonas: ayy nice</span></div><div class="line" id="222942"><span class="nick" style="color:#389600"><a href="#222942" label="[22:29:42]">&lt;fossy&gt;</a></span><span class="message">that's a good path</span></div><div class="line" id="223013"><span class="nick" style="color:#2e2a4a"><a href="#223013" label="[22:30:13]">&lt;stikonas&gt;</a></span><span class="message">yeah, I was getting a bit scared</span></div><div class="line" id="223115"><span class="nick" style="color:#389600"><a href="#223115" label="[22:31:15]">&lt;fossy&gt;</a></span><span class="message">stikonas: altho we need bison for autools i think</span></div><div class="line" id="223129"><span class="nick" style="color:#389600"><a href="#223129" label="[22:31:29]">&lt;fossy&gt;</a></span><span class="message">let me check that</span></div><div class="line" id="223144"><span class="nick" style="color:#389600"><a href="#223144" label="[22:31:44]">&lt;fossy&gt;</a></span><span class="message">correction, we do not</span></div><div class="line" id="223150"><span class="nick" style="color:#2e2a4a"><a href="#223150" label="[22:31:50]">&lt;stikonas&gt;</a></span><span class="message">we might still need bison later</span></div><div class="line" id="223156"><span class="nick" style="color:#389600"><a href="#223156" label="[22:31:56]">&lt;fossy&gt;</a></span><span class="message">unless gcc or something dumb needs it</span></div><div class="line" id="223159"><span class="nick" style="color:#2e2a4a"><a href="#223159" label="[22:31:59]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="223225"><span class="nick" style="color:#2e2a4a"><a href="#223225" label="[22:32:25]">&lt;stikonas&gt;</a></span><span class="message">well, we can either try to get autotools/binutils/gcc/glibc and then biosn</span></div><div class="line" id="223244"><span class="nick" style="color:#2e2a4a"><a href="#223244" label="[22:32:44]">&lt;stikonas&gt;</a></span><span class="message">or alternative would be to try musl, but I had some problems with it...</span></div><div class="line" id="223303"><span class="nick" style="color:#389600"><a href="#223303" label="[22:33:03]">&lt;fossy&gt;</a></span><span class="message">well, we can just download each of the autotools packages, binutils,gcc, glibc, take a look at them, and see if they have *.y</span></div><div class="line" id="223316"><span class="nick" style="color:#2e2a4a"><a href="#223316" label="[22:33:16]">&lt;stikonas&gt;</a></span><span class="message">perl is the big one</span></div><div class="line" id="223322"><span class="nick" style="color:#389600"><a href="#223322" label="[22:33:22]">&lt;fossy&gt;</a></span><span class="message">yeah :\</span></div><div class="line" id="223336"><span class="nick" style="color:#2e2a4a"><a href="#223336" label="[22:33:36]">&lt;stikonas&gt;</a></span><span class="message">perl has perly.y</span></div><div class="line" id="223346"><span class="nick" style="color:#389600"><a href="#223346" label="[22:33:46]">&lt;fossy&gt;</a></span><span class="message">oh, hooray :(</span></div><div class="line" id="223352"><span class="nick" style="color:#2e2a4a"><a href="#223352" label="[22:33:52]">&lt;stikonas&gt;</a></span><span class="message">well, we still have yacc</span></div><div class="line" id="223354"><span class="nick" style="color:#2e2a4a"><a href="#223354" label="[22:33:54]">&lt;stikonas&gt;</a></span><span class="message">it might work</span></div><div class="line" id="223356"><span class="nick" style="color:#389600"><a href="#223356" label="[22:33:56]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="223401"><span class="nick" style="color:#3c5b35"><a href="#223401" label="[22:34:01]">&lt;xentrac&gt;</a></span><span class="message">in the perl4 era it was common to bootstrap perl without perl --- but not without yacc and not without Configure</span></div><div class="line" id="223401"><span class="nick" style="color:#2e2a4a"><a href="#223401" label="[22:34:01]">&lt;stikonas&gt;</a></span><span class="message">well, I'll test bash first...</span></div><div class="line" id="223426"><span class="nick" style="color:#2e2a4a"><a href="#223426" label="[22:34:26]">&lt;stikonas&gt;</a></span><span class="message">well if you use Configure then you don't need perl</span></div><div class="line" id="223434"><span class="nick" style="color:#2e2a4a"><a href="#223434" label="[22:34:34]">&lt;stikonas&gt;</a></span><span class="message">the problem is that Configure is generated with perl</span></div><div class="line" id="223507"><span class="nick" style="color:#2e2a4a"><a href="#223507" label="[22:35:07]">&lt;stikonas&gt;</a></span><span class="message">xentrac: so we have a really old heirloom yacc parser, and slighly newer flex 2.5.1 lexer</span></div><div class="line" id="223655"><span class="nick" style="color:#3c5b35"><a href="#223655" label="[22:36:55]">&lt;xentrac&gt;</a></span><span class="message">yaay</span></div><div class="line" id="223708"><span class="nick" style="color:#3c5b35"><a href="#223708" label="[22:37:08]">&lt;xentrac&gt;</a></span><span class="message">right, that's why I mentioned Configure</span></div><div class="line" id="223735"><span class="nick" style="color:#3c5b35"><a href="#223735" label="[22:37:35]">&lt;xentrac&gt;</a></span><span class="message">(though IIRC at least some Perl versions had a lower-case configure generated by autoconf as an alternative)</span></div><div class="line" id="223749"><span class="nick" style="color:#2e2a4a"><a href="#223749" label="[22:37:49]">&lt;stikonas&gt;</a></span><span class="message">autoconf needs perl though...</span></div><div class="line" id="223754"><span class="nick" style="color:#2e2a4a"><a href="#223754" label="[22:37:54]">&lt;stikonas&gt;</a></span><span class="message">if you want to generate it</span></div><div class="line" id="223934"><span class="nick" style="color:#3c5b35"><a href="#223934" label="[22:39:34]">&lt;xentrac&gt;</a></span><span class="message">I thought autoconf predated perl</span></div><div class="line" id="223958"><span class="nick" style="color:#3c5b35"><a href="#223958" label="[22:39:58]">&lt;xentrac&gt;</a></span><span class="message">but I didn't know how to use Unix in those days so I could easily be wrong</span></div><div class="line" id="224021"><span class="nick" style="color:#2e2a4a"><a href="#224021" label="[22:40:21]">&lt;stikonas&gt;</a></span><span class="message">well, autoconf itself doens't need perl, but automake does</span></div><div class="line" id="224034"><span class="nick" style="color:#2e2a4a"><a href="#224034" label="[22:40:34]">&lt;stikonas&gt;</a></span><span class="message">$ file /usr/bin/automake-1.13</span></div><div class="line" id="224035"><span class="nick" style="color:#2e2a4a"><a href="#224035" label="[22:40:35]">&lt;stikonas&gt;</a></span><span class="message">/usr/bin/automake-1.13: Perl script text executable</span></div><div class="line" id="224041"><span class="nick" style="color:#2e2a4a"><a href="#224041" label="[22:40:41]">&lt;stikonas&gt;</a></span><span class="message">autoconf without automake is not useful</span></div><div class="line" id="224126"><span class="nick" style="color:#2e2a4a"><a href="#224126" label="[22:41:26]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh also awk has some .y files</span></div><div class="line" id="224136"><span class="nick" style="color:#2e2a4a"><a href="#224136" label="[22:41:36]">&lt;stikonas&gt;</a></span><span class="message">and awk is used by autotools...</span></div><div class="line" id="224141"><span class="nick" style="color:#389600"><a href="#224141" label="[22:41:41]">&lt;fossy&gt;</a></span><span class="message">stikonas: |:</span></div><div class="line" id="224149"><span class="nick" style="color:#2e2a4a"><a href="#224149" label="[22:41:49]">&lt;stikonas&gt;</a></span><span class="message">so everything depends on how good yacc is...</span></div><div class="line" id="224153"><span class="nick" style="color:#af8d2f"><a href="#224153" label="[22:41:53]">*</a></span><span class="message">fossy smack GNU</span></div><div class="line" id="224158"><span class="nick" style="color:#2e2a4a"><a href="#224158" label="[22:41:58]">&lt;stikonas&gt;</a></span><span class="message">hopefully I didn't cripple it too much :D</span></div><div class="line" id="224200"><span class="nick" style="color:#2e2a4a"><a href="#224200" label="[22:42:00]">&lt;stikonas&gt;</a></span><span class="message">with my patches</span></div><div class="line" id="224220"><span class="nick" style="color:#3c5b35"><a href="#224220" label="[22:42:20]">&lt;xentrac&gt;</a></span><span class="message">so, a thing I want to mention about yacc</span></div><div class="line" id="224231"><span class="nick" style="color:#2e2a4a"><a href="#224231" label="[22:42:31]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="224240"><span class="nick" style="color:#3c5b35"><a href="#224240" label="[22:42:40]">&lt;xentrac&gt;</a></span><span class="message">is that bottom-up parsing is actually pretty easy</span></div><div class="line" id="224243"><span class="nick" style="color:#3c5b35"><a href="#224243" label="[22:42:43]">&lt;xentrac&gt;</a></span><span class="message">if it doesn't have to be efficient</span></div><div class="line" id="224253"><span class="nick" style="color:#2e2a4a"><a href="#224253" label="[22:42:53]">&lt;stikonas&gt;</a></span><span class="message">well, that's what yacc does...</span></div><div class="line" id="224302"><span class="nick" style="color:#2e2a4a"><a href="#224302" label="[22:43:02]">&lt;stikonas&gt;</a></span><span class="message">from what I saw in the source code...</span></div><div class="line" id="224305"><span class="nick" style="color:#3c5b35"><a href="#224305" label="[22:43:05]">&lt;xentrac&gt;</a></span><span class="message">no, yacc guarantees linear time for the resulting parser</span></div><div class="line" id="224315"><span class="nick" style="color:#2e2a4a"><a href="#224315" label="[22:43:15]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="224348"><span class="nick" style="color:#3c5b35"><a href="#224348" label="[22:43:48]">&lt;xentrac&gt;</a></span><span class="message">but if you take a very simple backtracking approach, parsing is pretty trivial</span></div><div class="line" id="224357"><span class="nick" style="color:#2e2a4a"><a href="#224357" label="[22:43:57]">&lt;stikonas&gt;</a></span><span class="message">fossy: yep, bash just compiled in rootfs.sh chroot after I removed  rm y.tab.c y.tab.h</span></div><div class="line" id="224359"><span class="nick" style="color:#3c5b35"><a href="#224359" label="[22:43:59]">&lt;xentrac&gt;</a></span><span class="message">Prolog DCGs do this top-down, but they don't handle left recursion</span></div><div class="line" id="224407"><span class="nick" style="color:#2e2a4a"><a href="#224407" label="[22:44:07]">&lt;stikonas&gt;</a></span><span class="message">fossy: do you want to merge flex first?</span></div><div class="line" id="224422"><span class="nick" style="color:#3c5b35"><a href="#224422" label="[22:44:22]">&lt;xentrac&gt;</a></span><span class="message">the problem with the very simple backtracking approach is that in the worst case it's exponential time</span></div><div class="line" id="224426"><span class="nick" style="color:#389600"><a href="#224426" label="[22:44:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'll wait for the CI rerun to finish, see if it succeeds, but you can open another PR on the top</span></div><div class="line" id="224444"><span class="nick" style="color:#2e2a4a"><a href="#224444" label="[22:44:44]">&lt;stikonas&gt;</a></span><span class="message">ok, I think it will have all 3 commits but doesn't matter...</span></div><div class="line" id="224449"><span class="nick" style="color:#2e2a4a"><a href="#224449" label="[22:44:49]">&lt;stikonas&gt;</a></span><span class="message">I can rebase later</span></div><div class="line" id="224454"><span class="nick" style="color:#389600"><a href="#224454" label="[22:44:54]">&lt;fossy&gt;</a></span><span class="message">yeah, then when i merge it, it will go down to 1</span></div><div class="line" id="224457"><span class="nick" style="color:#389600"><a href="#224457" label="[22:44:57]">&lt;fossy&gt;</a></span><span class="message">i think</span></div><div class="line" id="224506"><span class="nick" style="color:#2e2a4a"><a href="#224506" label="[22:45:06]">&lt;stikonas&gt;</a></span><span class="message">possibly...</span></div><div class="line" id="224516"><span class="nick" style="color:#2e2a4a"><a href="#224516" label="[22:45:16]">&lt;stikonas&gt;</a></span><span class="message">definitely after I rebase</span></div><div class="line" id="224532"><span class="nick" style="color:#389600"><a href="#224532" label="[22:45:32]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="224600"><span class="nick" style="color:#2e2a4a"><a href="#224600" label="[22:46:00]">&lt;stikonas&gt;</a></span><span class="message">oh, I just saw DEVEL.md</span></div><div class="line" id="224613"><span class="nick" style="color:#2e2a4a"><a href="#224613" label="[22:46:13]">&lt;stikonas&gt;</a></span><span class="message">luckily I called my dir files without reading DEVEL.md :D</span></div><div class="line" id="224616"><span class="nick" style="color:#3c5b35"><a href="#224616" label="[22:46:16]">&lt;xentrac&gt;</a></span><span class="message">but it occurs to me that maybe you could bootstrap yacc successfully --- maybe even modern Bison --- with a very simple yaccalf kind of thing that uses the exponential-time approach</span></div><div class="line" id="224639"><span class="nick" style="color:#2e2a4a"><a href="#224639" label="[22:46:39]">&lt;stikonas&gt;</a></span><span class="message">xentrac: biggest problem with bison is that bison needs better C library...</span></div><div class="line" id="224653"><span class="nick" style="color:#2e2a4a"><a href="#224653" label="[22:46:53]">&lt;stikonas&gt;</a></span><span class="message">if we have better C library, I think we are done</span></div><div class="line" id="224703"><span class="nick" style="color:#389600"><a href="#224703" label="[22:47:03]">&lt;fossy&gt;</a></span><span class="message">musl pita tho</span></div><div class="line" id="224706"><span class="nick" style="color:#2e2a4a"><a href="#224706" label="[22:47:06]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="224717"><span class="nick" style="color:#2e2a4a"><a href="#224717" label="[22:47:17]">&lt;stikonas&gt;</a></span><span class="message">first of all tcc -ar is not coping well...</span></div><div class="line" id="224719"><span class="nick" style="color:#3c5b35"><a href="#224719" label="[22:47:19]">&lt;xentrac&gt;</a></span><span class="message">because in that case you don't actually care what the worst case is; you only care how long it takes yaccalf-built bison to build bison</span></div><div class="line" id="224721"><span class="nick" style="color:#2e2a4a"><a href="#224721" label="[22:47:21]">&lt;stikonas&gt;</a></span><span class="message">would be nicer to have ar</span></div><div class="line" id="224727"><span class="nick" style="color:#389600"><a href="#224727" label="[22:47:27]">&lt;fossy&gt;</a></span><span class="message">stikonas: ohhh i have a solution for that</span></div><div class="line" id="224731"><span class="nick" style="color:#389600"><a href="#224731" label="[22:47:31]">&lt;fossy&gt;</a></span><span class="message">i did it with linux kernel</span></div><div class="line" id="224735"><span class="nick" style="color:#2e2a4a"><a href="#224735" label="[22:47:35]">&lt;stikonas&gt;</a></span><span class="message">unified ?</span></div><div class="line" id="224737"><span class="nick" style="color:#3c5b35"><a href="#224737" label="[22:47:37]">&lt;xentrac&gt;</a></span><span class="message">hmm, interesting, I didn't realize that!  I thought the biggest problem with bison was that it was written in bison</span></div><div class="line" id="224740"><span class="nick" style="color:#389600"><a href="#224740" label="[22:47:40]">&lt;fossy&gt;</a></span><span class="message">so, instaed of unified sources, we can do unified ars</span></div><div class="line" id="224744"><span class="nick" style="color:#2e2a4a"><a href="#224744" label="[22:47:44]">&lt;stikonas&gt;</a></span><span class="message">xentrac: gio solved that</span></div><div class="line" id="224751"><span class="nick" style="color:#2e2a4a"><a href="#224751" label="[22:47:51]">&lt;stikonas&gt;</a></span><span class="message">xentrac: we were following that path</span></div><div class="line" id="224752"><span class="nick" style="color:#3c5b35"><a href="#224752" label="[22:47:52]">&lt;xentrac&gt;</a></span><span class="message">ah, I'm out of date, sorry</span></div><div class="line" id="224757"><span class="nick" style="color:#389600"><a href="#224757" label="[22:47:57]">&lt;fossy&gt;</a></span><span class="message">tcc -ar lib1.a a.o b.o c.o d.o e.o f.o g.o</span></div><div class="line" id="224808"><span class="nick" style="color:#2e2a4a"><a href="#224808" label="[22:48:08]">&lt;stikonas&gt;</a></span><span class="message">xentrac: read here <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/">https://gitlab.com/giomasce/nbs/</a> </span></div><div class="line" id="224808"><span class="nick" style="color:#389600"><a href="#224808" label="[22:48:08]">&lt;fossy&gt;</a></span><span class="message">tcc -ar lib2.a h.o i.o j.o k.o l.o</span></div><div class="line" id="224813"><span class="nick" style="color:#389600"><a href="#224813" label="[22:48:13]">&lt;fossy&gt;</a></span><span class="message">tcc -ar lib.a lib1.a lib2.a</span></div><div class="line" id="224817"><span class="nick" style="color:#389600"><a href="#224817" label="[22:48:17]">&lt;fossy&gt;</a></span><span class="message">^ this works</span></div><div class="line" id="224821"><span class="nick" style="color:#2e2a4a"><a href="#224821" label="[22:48:21]">&lt;stikonas&gt;</a></span><span class="message">oh ok, that's good...</span></div><div class="line" id="224833"><span class="nick" style="color:#2e2a4a"><a href="#224833" label="[22:48:33]">&lt;stikonas&gt;</a></span><span class="message">xentrac: so we now have flex 2.5.1</span></div><div class="line" id="224847"><span class="nick" style="color:#2e2a4a"><a href="#224847" label="[22:48:47]">&lt;stikonas&gt;</a></span><span class="message">(also we have m4 and I have bash  locally</span></div><div class="line" id="224853"><span class="nick" style="color:#3c5b35"><a href="#224853" label="[22:48:53]">&lt;xentrac&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="224901"><span class="nick" style="color:#2e2a4a"><a href="#224901" label="[22:49:01]">&lt;stikonas&gt;</a></span><span class="message">(we also have make)</span></div><div class="line" id="224915"><span class="nick" style="color:#2e2a4a"><a href="#224915" label="[22:49:15]">&lt;stikonas&gt;</a></span><span class="message">make and m4 are both from GNU, not older versions</span></div><div class="line" id="225026"><span class="nick" style="color:#3c5b35"><a href="#225026" label="[22:50:26]">&lt;xentrac&gt;</a></span><span class="message">yaay</span></div><div class="line" id="225119"><span class="nick" style="color:#3c5b35"><a href="#225119" label="[22:51:19]">&lt;xentrac&gt;</a></span><span class="message">so the obstacle is now building glibc without yacc, or yacc without glibc, and nyacc and archaeological-yacc aren't good enough?</span></div><div class="line" id="225312"><span class="nick" style="color:#2e2a4a"><a href="#225312" label="[22:53:12]">&lt;stikonas&gt;</a></span><span class="message">xentrac: we have archaeological yacc</span></div><div class="line" id="225316"><span class="nick" style="color:#2e2a4a"><a href="#225316" label="[22:53:16]">&lt;stikonas&gt;</a></span><span class="message">that's what I just used for bash</span></div><div class="line" id="225322"><span class="nick" style="color:#2e2a4a"><a href="#225322" label="[22:53:22]">&lt;stikonas&gt;</a></span><span class="message">but ideally we bootstrap bison too</span></div><div class="line" id="225335"><span class="nick" style="color:#2e2a4a"><a href="#225335" label="[22:53:35]">&lt;stikonas&gt;</a></span><span class="message">I'm now updating README a bit</span></div><div class="line" id="225521"><span class="nick" style="color:#3c5b35"><a href="#225521" label="[22:55:21]">&lt;xentrac&gt;</a></span><span class="message">fantastic!</span></div><div class="line" id="225615"><span class="nick" style="color:#2e2a4a"><a href="#225615" label="[22:56:15]">&lt;stikonas&gt;</a></span><span class="message">fossy, xentrac, pder: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/22">https://github.com/fosslinux/live-bootstrap/pull/22</a> </span></div><div class="line" id="225655"><span class="nick" style="color:#2e2a4a"><a href="#225655" label="[22:56:55]">&lt;stikonas&gt;</a></span><span class="message">anyway, bash is really useful to have now...</span></div><div class="line" id="225707"><span class="nick" style="color:#2e2a4a"><a href="#225707" label="[22:57:07]">&lt;stikonas&gt;</a></span><span class="message">even if it is not interactive</span></div><div class="line" id="225714"><span class="nick" style="color:#3c5b35"><a href="#225714" label="[22:57:14]">&lt;xentrac&gt;</a></span><span class="message">yeah!</span></div><div class="line" id="225730"><span class="nick" style="color:#2e2a4a"><a href="#225730" label="[22:57:30]">&lt;stikonas&gt;</a></span><span class="message">we probably need to create /proc file system for it to work too...</span></div><div class="line" id="225732"><span class="nick" style="color:#3c5b35"><a href="#225732" label="[22:57:32]">&lt;xentrac&gt;</a></span><span class="message">sure, interactivity is verboten in a reproducible build process anyway</span></div><div class="line" id="225740"><span class="nick" style="color:#3c5b35"><a href="#225740" label="[22:57:40]">&lt;xentrac&gt;</a></span><span class="message">although it can be helpful when you're trying to debug it ;)</span></div><div class="line" id="225759"><span class="nick" style="color:#2e2a4a"><a href="#225759" label="[22:57:59]">&lt;stikonas&gt;</a></span><span class="message">yeah, would ne nicer to debug with our own bash and not injected busybox</span></div><div class="line" id="225812"><span class="nick" style="color:#2e2a4a"><a href="#225812" label="[22:58:12]">&lt;stikonas&gt;</a></span><span class="message">especially, since my busybox also ships other tools...</span></div><div class="line" id="225835"><span class="nick" style="color:#2e2a4a"><a href="#225835" label="[22:58:35]">&lt;stikonas&gt;</a></span><span class="message">and I want to test our bootstrapped GNU sed and not busybox'es built-in...</span></div><div class="line" id="230353"><span class="nick" style="color:#234e69"><a href="#230353" label="[23:03:53]">&lt;pder&gt;</a></span><span class="message">what is missing from mes libc that is needed for bison?</span></div><div class="line" id="230606"><span class="nick" style="color:#2e2a4a"><a href="#230606" label="[23:06:06]">&lt;stikonas&gt;</a></span><span class="message">I didn't check everything...</span></div><div class="line" id="230653"><span class="nick" style="color:#2e2a4a"><a href="#230653" label="[23:06:53]">&lt;stikonas&gt;</a></span><span class="message">but in seems to want at leats regex.h</span></div><div class="line" id="230709"><span class="nick" style="color:#2e2a4a"><a href="#230709" label="[23:07:09]">&lt;stikonas&gt;</a></span><span class="message">but I think I had problems even with newest flex</span></div><div class="line" id="230749"><span class="nick" style="color:#2e2a4a"><a href="#230749" label="[23:07:49]">&lt;stikonas&gt;</a></span><span class="message">I might try later after we have bash</span></div><div class="line" id="230754"><span class="nick" style="color:#2e2a4a"><a href="#230754" label="[23:07:54]">&lt;stikonas&gt;</a></span><span class="message">since that simplifies some things</span></div><div class="line" id="230915"><span class="nick" style="color:#2e2a4a"><a href="#230915" label="[23:09:15]">&lt;stikonas&gt;</a></span><span class="message">yeah, regex.h is definitely needed for flex 2.6.4</span></div><div class="line" id="232408"><span class="nick" style="color:#389600"><a href="#232408" label="[23:24:08]">&lt;Hagfish&gt;</a></span><span class="message">i think i've missed my chance to use this meme:   weird flex, but okay</span></div><div class="line" id="234418"><span class="nick" style="color:#2e2a4a"><a href="#234418" label="[23:44:18]">&lt;stikonas&gt;</a></span><span class="message">bash PR also passed CI <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/22">https://github.com/fosslinux/live-bootstrap/pull/22</a> </span></div><br /></div></body></html>