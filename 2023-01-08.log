<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-01-08.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001023"><span class="nick" style="color:#389600"><a href="#001023" label="[00:10:23]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah, that's where my QEMU build got to as well</span></div><div class="line" id="001737"><span class="nick" style="color:#8dd3c7"><a href="#001737" label="[00:17:37]">&lt;stikonas&gt;</a></span><span class="message">fossy: so far I've just looked at bash code in PR, that looks fine, but again, I haven't checked any of the pregen stuff yet</span></div><div class="line" id="001802"><span class="nick" style="color:#8dd3c7"><a href="#001802" label="[00:18:02]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe one small note (but it's somewhat optional). All our packages start lowercase, but Python is now uppercase</span></div><div class="line" id="001958"><span class="nick" style="color:#8dd3c7"><a href="#001958" label="[00:19:58]">&lt;stikonas&gt;</a></span><span class="message">oriansj, janneke: I've briefly looked at mes-m2 build process. It might be possible to switch it to M2libc with a moderate effort.</span></div><div class="line" id="002043"><span class="nick" style="color:#8dd3c7"><a href="#002043" label="[00:20:43]">&lt;stikonas&gt;</a></span><span class="message">M2libc only needs a few extra functions and most other functions can be taken from meslibc</span></div><div class="line" id="002203"><span class="nick" style="color:#8dd3c7"><a href="#002203" label="[00:22:03]">&lt;stikonas&gt;</a></span><span class="message">the goal here is use M2libc for lower level stuff like libc.M1, lower level functions that use syscalls but some higher level pure C functions can be taken from mes (i.e. stuff like isdigit)</span></div><div class="line" id="002236"><span class="nick" style="color:#8dd3c7"><a href="#002236" label="[00:22:36]">&lt;stikonas&gt;</a></span><span class="message">that would automatically make mes-m2 available on all arches that stage0/M2libc supports</span></div><div class="line" id="002251"><span class="nick" style="color:#8dd3c7"><a href="#002251" label="[00:22:51]">&lt;stikonas&gt;</a></span><span class="message">and we won't need to dublicate all the libc.M1 functionality</span></div><div class="line" id="002346"><span class="nick" style="color:#8dd3c7"><a href="#002346" label="[00:23:46]">&lt;stikonas&gt;</a></span><span class="message">there are a few obstacles to this though, we would have to build everything with M2-Planet in non-bootstrap mode, which is mostly fine but there are some #defines that M2-Planet chokes upon</span></div><div class="line" id="002437"><span class="nick" style="color:#8dd3c7"><a href="#002437" label="[00:24:37]">&lt;stikonas&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/mes/ntoab.c#n26">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/mes/ntoab.c#n26</a> </span></div><div class="line" id="003820"><span class="nick" style="color:#389600"><a href="#003820" label="[00:38:20]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah, i did think about python vs Python; i dont really have a strong preference either way, it just appears more officially/many distros use Python</span></div><div class="line" id="003841"><span class="nick" style="color:#8dd3c7"><a href="#003841" label="[00:38:41]">&lt;stikonas&gt;</a></span><span class="message">well, ok...</span></div><div class="line" id="003855"><span class="nick" style="color:#8dd3c7"><a href="#003855" label="[00:38:55]">&lt;stikonas&gt;</a></span><span class="message">it's just a cosmetic difference anyway</span></div><div class="line" id="003901"><span class="nick" style="color:#389600"><a href="#003901" label="[00:39:01]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="004043"><span class="nick" style="color:#389600"><a href="#004043" label="[00:40:43]">&lt;fossy&gt;</a></span><span class="message">stikonas: what do you think about that patch nanonyme sent? i'm not really sure about it.. it concerns me more that it fails non-deterministically, so i'm worried this patch just hides a symptom rather than an underlying issue</span></div><div class="line" id="004242"><span class="nick" style="color:#8dd3c7"><a href="#004242" label="[00:42:42]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, hard to tell... I don't really understand why it fails</span></div><div class="line" id="004258"><span class="nick" style="color:#8dd3c7"><a href="#004258" label="[00:42:58]">&lt;stikonas&gt;</a></span><span class="message">so I think even hiding symptom would be useful</span></div><div class="line" id="004310"><span class="nick" style="color:#8dd3c7"><a href="#004310" label="[00:43:10]">&lt;stikonas&gt;</a></span><span class="message">but the patch does not apply cleanly to autoconf 2.69...</span></div><div class="line" id="004337"><span class="nick" style="color:#8dd3c7"><a href="#004337" label="[00:43:37]">&lt;stikonas&gt;</a></span><span class="message">fossy: perhaps a cheap workaround might be not to use 2.69</span></div><div class="line" id="004340"><span class="nick" style="color:#8dd3c7"><a href="#004340" label="[00:43:40]">&lt;stikonas&gt;</a></span><span class="message">if that's possible</span></div><div class="line" id="004433"><span class="nick" style="color:#8dd3c7"><a href="#004433" label="[00:44:33]">&lt;stikonas&gt;</a></span><span class="message">but we might not be able to use autoconf 2.71 at that stage</span></div><div class="line" id="005116"><span class="nick" style="color:#389600"><a href="#005116" label="[00:51:16]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, fair enough</span></div><div class="line" id="010053"><span class="nick" style="color:#8dd3c7"><a href="#010053" label="[01:00:53]">&lt;stikonas&gt;</a></span><span class="message">we also need to fix pregen file bug...</span></div><div class="line" id="010112"><span class="nick" style="color:#8dd3c7"><a href="#010112" label="[01:01:12]">&lt;stikonas&gt;</a></span><span class="message">in gnulib in libtool <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/203">https://github.com/fosslinux/live-bootstrap/issues/203</a> </span></div><div class="line" id="010132"><span class="nick" style="color:#8dd3c7"><a href="#010132" label="[01:01:32]">&lt;stikonas&gt;</a></span><span class="message">I haven't seen those lowest 3 bugs though</span></div><div class="line" id="010140"><span class="nick" style="color:#8dd3c7"><a href="#010140" label="[01:01:40]">&lt;stikonas&gt;</a></span><span class="message">maybe they are fixed</span></div><div class="line" id="010535"><span class="nick" style="color:#389600"><a href="#010535" label="[01:05:35]">&lt;fossy&gt;</a></span><span class="message">ah, forgot about that one</span></div><div class="line" id="010554"><span class="nick" style="color:#389600"><a href="#010554" label="[01:05:54]">&lt;fossy&gt;</a></span><span class="message">neither, i haven't seen those for a while</span></div><div class="line" id="011035"><span class="nick" style="color:#8dd3c7"><a href="#011035" label="[01:10:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: shall we close those oldest 3?</span></div><div class="line" id="011048"><span class="nick" style="color:#8dd3c7"><a href="#011048" label="[01:10:48]">&lt;stikonas&gt;</a></span><span class="message">I think the only one I saw is automake 1.15.1</span></div><div class="line" id="011924"><span class="nick" style="color:#389600"><a href="#011924" label="[01:19:24]">&lt;fossy&gt;</a></span><span class="message">stikonas: i think so</span></div><div class="line" id="012040"><span class="nick" style="color:#8dd3c7"><a href="#012040" label="[01:20:40]">&lt;stikonas&gt;</a></span><span class="message">ok, closed</span></div><div class="line" id="012048"><span class="nick" style="color:#8dd3c7"><a href="#012048" label="[01:20:48]">&lt;stikonas&gt;</a></span><span class="message">we can always reopen if it reappears</span></div><div class="line" id="013114"><span class="nick" style="color:#8dd3c7"><a href="#013114" label="[01:31:14]">&lt;stikonas&gt;</a></span><span class="message">hmm, so I think macro brackets are broken in M2-Planet...</span></div><div class="line" id="013125"><span class="nick" style="color:#8dd3c7"><a href="#013125" label="[01:31:25]">&lt;stikonas&gt;</a></span><span class="message">i.e. #if (__M2__) is alraedy an error</span></div><div class="line" id="013309"><span class="nick" style="color:#8dd3c7"><a href="#013309" label="[01:33:09]">&lt;stikonas&gt;</a></span><span class="message">which is somewhat annoying as mes uses it</span></div><div class="line" id="013320"><span class="nick" style="color:#8dd3c7"><a href="#013320" label="[01:33:20]">&lt;stikonas&gt;</a></span><span class="message">(not this particular one but brackets in general)</span></div><div class="line" id="015058"><span class="nick" style="color:#8dd3c7"><a href="#015058" label="[01:50:58]">&lt;stikonas&gt;</a></span><span class="message">hmm, looks like we process '(' in macros but then have nothing to process closing bracket</span></div><div class="line" id="015857"><span class="nick" style="color:#8dd3c7"><a href="#015857" label="[01:58:57]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/pull/53">https://github.com/oriansj/M2-Planet/pull/53</a>  and <a rel="nofollow" href="https://github.com/oriansj/M2-Mesoplanet/pull/8">https://github.com/oriansj/M2-Mesoplanet/pull/8</a> </span></div><div class="line" id="024751"><span class="nick" style="color:#8dd3c7"><a href="#024751" label="[02:47:51]">&lt;stikonas&gt;</a></span><span class="message">and I've got mes-m2 (with M2libc) to build (with a few stubs for now). Unfortunately it still crashes, but hopefully fixable (possibly due to stubs)</span></div><div class="line" id="102102"><span class="nick" style="color:#2e2a4a"><a href="#102102" label="[10:21:02]">&lt;janneke&gt;</a></span><span class="message">stikonas[m]: yeah, there's a hack for that on the wip branch</span></div><div class="line" id="102202"><span class="nick" style="color:#2e2a4a"><a href="#102202" label="[10:22:02]">&lt;janneke&gt;</a></span><span class="message">=&gt; <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/commit/?h=wip&amp;id=11d024e0977d5a0132687945d12ab188cf52c5be">https://git.savannah.gnu.org/cgit/mes.git/commit/?h=wip&amp;id=11d024e0977d5a0132687945d12ab188cf52c5be</a> </span></div><div class="line" id="102307"><span class="nick" style="color:#2e2a4a"><a href="#102307" label="[10:23:07]">&lt;janneke&gt;</a></span><span class="message">stikonas[m]: that might be interesting</span></div><div class="line" id="102357"><span class="nick" style="color:#2e2a4a"><a href="#102357" label="[10:23:57]">&lt;janneke&gt;</a></span><span class="message">otoh mes and mes libc were initially created so that mes can be built with either glibc, or with mes libc, which is still supported</span></div><div class="line" id="102514"><span class="nick" style="color:#2e2a4a"><a href="#102514" label="[10:25:14]">&lt;janneke&gt;</a></span><span class="message">on the one hand i never understood why stage0 did not adopt mes libc, on the other hand the duplication that was created now is kind of eh redundant</span></div><div class="line" id="102617"><span class="nick" style="color:#2e2a4a"><a href="#102617" label="[10:26:17]">&lt;janneke&gt;</a></span><span class="message">but, mes libc also supports building tinycc and gcc-2.95.3, and it is groing to support gcc-4.6</span></div><div class="line" id="102631"><span class="nick" style="color:#2e2a4a"><a href="#102631" label="[10:26:31]">&lt;janneke&gt;</a></span><span class="message">so yeah, dunno :)</span></div><div class="line" id="111324"><span class="nick" style="color:#6b8072"><a href="#111324" label="[11:13:24]">&lt;stikonas[m]&gt;</a></span><span class="message">That is a question to oriansj</span></div><div class="line" id="112303"><span class="nick" style="color:#6b8072"><a href="#112303" label="[11:23:03]">&lt;stikonas[m]&gt;</a></span><span class="message">Perhaps because M2-Planet was a much simpler compiler</span></div><div class="line" id="112417"><span class="nick" style="color:#6b8072"><a href="#112417" label="[11:24:17]">&lt;stikonas[m]&gt;</a></span><span class="message">In any case meslibc glue for M2-Planet only supports x86</span></div><div class="line" id="112510"><span class="nick" style="color:#6b8072"><a href="#112510" label="[11:25:10]">&lt;stikonas[m]&gt;</a></span><span class="message">And writing glue for other arches would be more work than using m2libc</span></div><div class="line" id="124307"><span class="nick" style="color:#8dd3c7"><a href="#124307" label="[12:43:07]">&lt;stikonas&gt;</a></span><span class="message">janneke: I guess I should rebase my work on top of wip branch</span></div><div class="line" id="124336"><span class="nick" style="color:#8dd3c7"><a href="#124336" label="[12:43:36]">&lt;stikonas&gt;</a></span><span class="message">there is already quite a bit of stuff in there that I had to add (i.e. additional #define instead of //CONSTANT)</span></div><div class="line" id="124419"><span class="nick" style="color:#8dd3c7"><a href="#124419" label="[12:44:19]">&lt;stikonas&gt;</a></span><span class="message">though all that define hackery in <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/mes/ntoab.c?h=wip#n37">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/mes/ntoab.c?h=wip#n37</a>  can be fixed much easier in M2-Planet...</span></div><div class="line" id="124451"><span class="nick" style="color:#8dd3c7"><a href="#124451" label="[12:44:51]">&lt;stikonas&gt;</a></span><span class="message">then of course it won't work with old M2-Planet but maybe we should move everybody to newer M2-Planet anyway</span></div><div class="line" id="124559"><span class="nick" style="color:#2e2a4a"><a href="#124559" label="[12:45:59]">&lt;janneke&gt;</a></span><span class="message">stikonas: that's what i hoped, but i needed to stay on 1.10.0 for a bit, so yeah</span></div><div class="line" id="124615"><span class="nick" style="color:#8dd3c7"><a href="#124615" label="[12:46:15]">&lt;stikonas&gt;</a></span><span class="message">well, I just fixed it yesterday</span></div><div class="line" id="124622"><span class="nick" style="color:#8dd3c7"><a href="#124622" label="[12:46:22]">&lt;stikonas&gt;</a></span><span class="message">waiting for it to be merged</span></div><div class="line" id="124628"><span class="nick" style="color:#2e2a4a"><a href="#124628" label="[12:46:28]">&lt;janneke&gt;</a></span><span class="message">nice</span></div><div class="line" id="124700"><span class="nick" style="color:#8dd3c7"><a href="#124700" label="[12:47:00]">&lt;stikonas&gt;</a></span><span class="message">it was just macro processor seeing '(', then processing what is inside but not dealing at all with ')'</span></div><div class="line" id="124719"><span class="nick" style="color:#2e2a4a"><a href="#124719" label="[12:47:19]">&lt;janneke&gt;</a></span><span class="message">i'm sorry you had to redo some of my work because it was still on &quot;wip&quot;</span></div><div class="line" id="124722"><span class="nick" style="color:#8dd3c7"><a href="#124722" label="[12:47:22]">&lt;stikonas&gt;</a></span><span class="message">so the fix is actually simpler than that define workaround</span></div><div class="line" id="124731"><span class="nick" style="color:#8dd3c7"><a href="#124731" label="[12:47:31]">&lt;stikonas&gt;</a></span><span class="message">oh it's not that much work</span></div><div class="line" id="124737"><span class="nick" style="color:#2e2a4a"><a href="#124737" label="[12:47:37]">&lt;janneke&gt;</a></span><span class="message">ok, good</span></div><div class="line" id="124747"><span class="nick" style="color:#8dd3c7"><a href="#124747" label="[12:47:47]">&lt;stikonas&gt;</a></span><span class="message">mes changes itself that I made where</span></div><div class="line" id="124749"><span class="nick" style="color:#8dd3c7"><a href="#124749" label="[12:47:49]">&lt;stikonas&gt;</a></span><span class="message"> 6 files changed, 48 insertions(+), 11 deletions(-)</span></div><div class="line" id="124750"><span class="nick" style="color:#8dd3c7"><a href="#124750" label="[12:47:50]">&lt;stikonas&gt;</a></span><span class="message">lines 1-7/7 (END)</span></div><div class="line" id="124754"><span class="nick" style="color:#8dd3c7"><a href="#124754" label="[12:47:54]">&lt;stikonas&gt;</a></span><span class="message">s/where/were/</span></div><div class="line" id="124806"><span class="nick" style="color:#2e2a4a"><a href="#124806" label="[12:48:06]">&lt;janneke&gt;</a></span><span class="message">good</span></div><div class="line" id="124818"><span class="nick" style="color:#8dd3c7"><a href="#124818" label="[12:48:18]">&lt;stikonas&gt;</a></span><span class="message">I was doing more work on M2libc</span></div><div class="line" id="124834"><span class="nick" style="color:#8dd3c7"><a href="#124834" label="[12:48:34]">&lt;stikonas&gt;</a></span><span class="message">had to copy getenv and setenv from mes to M2libc</span></div><div class="line" id="124920"><span class="nick" style="color:#8dd3c7"><a href="#124920" label="[12:49:20]">&lt;stikonas&gt;</a></span><span class="message">then kaem file to build with M2libc would look something like <a rel="nofollow" href="https://paste.debian.net/1266487/">https://paste.debian.net/1266487/</a> </span></div><div class="line" id="125007"><span class="nick" style="color:#2e2a4a"><a href="#125007" label="[12:50:07]">&lt;janneke&gt;</a></span><span class="message">that's nice</span></div><div class="line" id="125032"><span class="nick" style="color:#8dd3c7"><a href="#125032" label="[12:50:32]">&lt;stikonas&gt;</a></span><span class="message">so we would still be using mostly meslibc functions, but I don't need to use any of the crt/syscall/etc stuff</span></div><div class="line" id="125055"><span class="nick" style="color:#8dd3c7"><a href="#125055" label="[12:50:55]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll do a rebase later today</span></div><div class="line" id="125059"><span class="nick" style="color:#2e2a4a"><a href="#125059" label="[12:50:59]">&lt;janneke&gt;</a></span><span class="message">yeah, maybe it's a *feature* to have a mes build (use and) support m2libc for m2-planet, for mes or gcc use mes lib c, and also support gcc+glibc</span></div><div class="line" id="125119"><span class="nick" style="color:#8dd3c7"><a href="#125119" label="[12:51:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think that would simplify things a bit</span></div><div class="line" id="125124"><span class="nick" style="color:#2e2a4a"><a href="#125124" label="[12:51:24]">&lt;janneke&gt;</a></span><span class="message">eventually m2libc and meslibc may merge, or not</span></div><div class="line" id="125129"><span class="nick" style="color:#8dd3c7"><a href="#125129" label="[12:51:29]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet is quite picky and needs different glue</span></div><div class="line" id="125137"><span class="nick" style="color:#2e2a4a"><a href="#125137" label="[12:51:37]">&lt;janneke&gt;</a></span><span class="message">it makes sense for a m2-planet build to use m2libc</span></div><div class="line" id="125155"><span class="nick" style="color:#2e2a4a"><a href="#125155" label="[12:51:55]">&lt;janneke&gt;</a></span><span class="message">yeah, i had to find that out</span></div><div class="line" id="125156"><span class="nick" style="color:#8dd3c7"><a href="#125156" label="[12:51:56]">&lt;stikonas&gt;</a></span><span class="message">maybe we can even get mes-m2 running on UEFI almost for free...</span></div><div class="line" id="125212"><span class="nick" style="color:#2e2a4a"><a href="#125212" label="[12:52:12]">&lt;janneke&gt;</a></span><span class="message">yeh, that would be pretty amazing</span></div><div class="line" id="125226"><span class="nick" style="color:#8dd3c7"><a href="#125226" label="[12:52:26]">&lt;stikonas&gt;</a></span><span class="message">getting it to rebuild and self-host is another matter though...</span></div><div class="line" id="125240"><span class="nick" style="color:#8dd3c7"><a href="#125240" label="[12:52:40]">&lt;stikonas&gt;</a></span><span class="message">but anyway, UEFI code in M2libc can probably be ported to meslibc too</span></div><div class="line" id="125334"><span class="nick" style="color:#2e2a4a"><a href="#125334" label="[12:53:34]">&lt;janneke&gt;</a></span><span class="message">what civodul did by adding guix packages in the initial ramdisk, was build it and print hash of the build artifacts</span></div><div class="line" id="125415"><span class="nick" style="color:#2e2a4a"><a href="#125415" label="[12:54:15]">&lt;janneke&gt;</a></span><span class="message">and then verify it's identical to a regular bootstrap build</span></div><div class="line" id="125417"><span class="nick" style="color:#8dd3c7"><a href="#125417" label="[12:54:17]">&lt;stikonas&gt;</a></span><span class="message">I guess to see if they match normal ones</span></div><div class="line" id="125426"><span class="nick" style="color:#2e2a4a"><a href="#125426" label="[12:54:26]">&lt;janneke&gt;</a></span><span class="message">yep</span></div><div class="line" id="125512"><span class="nick" style="color:#8dd3c7"><a href="#125512" label="[12:55:12]">&lt;stikonas&gt;</a></span><span class="message">but I guess guix would always assume a running kernel and won't be doing kernel bootstrapping</span></div><div class="line" id="125518"><span class="nick" style="color:#2e2a4a"><a href="#125518" label="[12:55:18]">&lt;janneke&gt;</a></span><span class="message">that would give us a much stronger case for the normal build being not corrupted, while not having to do the entire bootstrap in uefi/initial ramdisk</span></div><div class="line" id="125531"><span class="nick" style="color:#2e2a4a"><a href="#125531" label="[12:55:31]">&lt;janneke&gt;</a></span><span class="message">right</span></div><div class="line" id="125532"><span class="nick" style="color:#8dd3c7"><a href="#125532" label="[12:55:32]">&lt;stikonas&gt;</a></span><span class="message">anyway, right now rickmaster's builder-hex0 is still more capable than stage0-uefi</span></div><div class="line" id="125556"><span class="nick" style="color:#8dd3c7"><a href="#125556" label="[12:55:56]">&lt;stikonas&gt;</a></span><span class="message">but the more options we have, I guess the better</span></div><div class="line" id="125655"><span class="nick" style="color:#8dd3c7"><a href="#125655" label="[12:56:55]">&lt;stikonas&gt;</a></span><span class="message">still, a year ago, we had basically 0 work on kernel bootstrapping</span></div><div class="line" id="125714"><span class="nick" style="color:#8dd3c7"><a href="#125714" label="[12:57:14]">&lt;stikonas&gt;</a></span><span class="message">and soon it would be possible to bootstrap kernel from tiny seeds too</span></div><div class="line" id="125729"><span class="nick" style="color:#8dd3c7"><a href="#125729" label="[12:57:29]">&lt;stikonas&gt;</a></span><span class="message">quite amazing for just 1 year</span></div><div class="line" id="130446"><span class="nick" style="color:#8dd3c7"><a href="#130446" label="[13:04:46]">&lt;stikonas&gt;</a></span><span class="message">janneke: by the way, M2libc now has a non-trivial free, if you want you can try to steal it and use in meslibc too</span></div><div class="line" id="130603"><span class="nick" style="color:#8dd3c7"><a href="#130603" label="[13:06:03]">&lt;stikonas&gt;</a></span><span class="message">it's not a super optimized one though but it can reduce memory consumption (<a rel="nofollow" href="https://github.com/oriansj/M2libc/blob/main/stdlib.c">https://github.com/oriansj/M2libc/blob/main/stdlib.c</a>) </span></div><div class="line" id="130659"><span class="nick" style="color:#2e2a4a"><a href="#130659" label="[13:06:59]">&lt;janneke&gt;</a></span><span class="message">stikonas: interesting, i haven't felt the need yet</span></div><div class="line" id="130721"><span class="nick" style="color:#8dd3c7"><a href="#130721" label="[13:07:21]">&lt;stikonas&gt;</a></span><span class="message">janneke: for M2libc the need came from UEFI</span></div><div class="line" id="130722"><span class="nick" style="color:#2e2a4a"><a href="#130722" label="[13:07:22]">&lt;janneke&gt;</a></span><span class="message">mes lib c should also make FILE a real struct</span></div><div class="line" id="130729"><span class="nick" style="color:#2e2a4a"><a href="#130729" label="[13:07:29]">&lt;janneke&gt;</a></span><span class="message">ah, right</span></div><div class="line" id="130801"><span class="nick" style="color:#8dd3c7"><a href="#130801" label="[13:08:01]">&lt;stikonas&gt;</a></span><span class="message">in UEFI you really need to free all memory, file descriptors, etc...</span></div><div class="line" id="130818"><span class="nick" style="color:#8dd3c7"><a href="#130818" label="[13:08:18]">&lt;stikonas&gt;</a></span><span class="message">since &quot;OS&quot; doesn't free it for us</span></div><div class="line" id="130826"><span class="nick" style="color:#8dd3c7"><a href="#130826" label="[13:08:26]">&lt;stikonas&gt;</a></span><span class="message">so we needed a way of tracking what is reserved</span></div><div class="line" id="182629"><span class="nick" style="color:#8dd3c7"><a href="#182629" label="[18:26:29]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, so I don't think that patch fixes the problem, maybe it is indeed &quot;cosmetic&quot;. Or maybe it makes random problem into deterministic</span></div><div class="line" id="194152"><span class="nick" style="color:#8dd3c7"><a href="#194152" label="[19:41:52]">&lt;stikonas&gt;</a></span><span class="message">hmm, rebased my mes-m2 with M2libc changes on top of mes &quot;wip&quot; branch. Unfortunately mes-m2 binary crashes... Perhaps I'm trying to do something too hacky then</span></div><div class="line" id="194220"><span class="nick" style="color:#8dd3c7"><a href="#194220" label="[19:42:20]">&lt;stikonas&gt;</a></span><span class="message">and there are too many incompatibilities between mes and M2libc (i.e. like file being struct vs int)</span></div><div class="line" id="194223"><span class="nick" style="color:#8dd3c7"><a href="#194223" label="[19:42:23]">&lt;stikonas&gt;</a></span><span class="message">which are easy to miss</span></div><div class="line" id="194725"><span class="nick" style="color:#8dd3c7"><a href="#194725" label="[19:47:25]">&lt;stikonas&gt;</a></span><span class="message">still at least I found and fixed and issue in M2-Planet macro support</span></div><div class="line" id="195000"><span class="nick" style="color:#8dd3c7"><a href="#195000" label="[19:50:00]">&lt;stikonas&gt;</a></span><span class="message">janneke: maybe here <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/include/mes/lib-mini.h?h=wip#n44">https://git.savannah.gnu.org/cgit/mes.git/tree/include/mes/lib-mini.h?h=wip#n44</a>  it's better to use #define M2_PTR_SIZE (sizeof(void*)) instead of #define M2_PTR_SIZE 4</span></div><div class="line" id="195156"><span class="nick" style="color:#8dd3c7"><a href="#195156" label="[19:51:56]">&lt;stikonas&gt;</a></span><span class="message">and there is a similar M2_CELL_SIZE that could be (3 * sizeof(void*))</span></div><div class="line" id="195206"><span class="nick" style="color:#8dd3c7"><a href="#195206" label="[19:52:06]">&lt;stikonas&gt;</a></span><span class="message">otherwise it will only work on 32-bit architectures</span></div><div class="line" id="220239"><span class="nick" style="color:#2e2a4a"><a href="#220239" label="[22:02:39]">&lt;janneke&gt;</a></span><span class="message">stikonas: right, thanks</span></div><div class="line" id="220509"><span class="nick" style="color:#8dd3c7"><a href="#220509" label="[22:05:09]">&lt;stikonas&gt;</a></span><span class="message">I guess this only works with #defines and didn't work before with // CONSTANT</span></div><div class="line" id="221529"><span class="nick" style="color:#2e2a4a"><a href="#221529" label="[22:15:29]">&lt;janneke&gt;</a></span><span class="message">stikonas: ah yeah, guess that's right</span></div><div class="line" id="221716"><span class="nick" style="color:#8dd3c7"><a href="#221716" label="[22:17:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, so back then we had to hardcode ourselves to 32-bit arches</span></div><div class="line" id="221720"><span class="nick" style="color:#8dd3c7"><a href="#221720" label="[22:17:20]">&lt;stikonas&gt;</a></span><span class="message">anyway, now we can support both</span></div><div class="line" id="221814"><span class="nick" style="color:#8dd3c7"><a href="#221814" label="[22:18:14]">&lt;stikonas&gt;</a></span><span class="message">janneke: anyway, I'm a bit lost at why mes-m2 crashes with M2libc, so perhaps I'll just abandon that experiment</span></div><div class="line" id="221835"><span class="nick" style="color:#8dd3c7"><a href="#221835" label="[22:18:35]">&lt;stikonas&gt;</a></span><span class="message">I tried to run it in gdb, but it's very tedious to debug</span></div><div class="line" id="221917"><span class="nick" style="color:#8dd3c7"><a href="#221917" label="[22:19:17]">&lt;stikonas&gt;</a></span><span class="message">well, it also took you a long time to initially get it to build and run in M2-Planet at all</span></div><div class="line" id="230513"><span class="nick" style="color:#80b1d3"><a href="#230513" label="[23:05:13]">&lt;rickmasters&gt;</a></span><span class="message">stikonas, fossy: Do you know why we have both SHA256SUMS.sources and &lt;pkgdir&gt;/sources with the same checksums?</span></div><div class="line" id="230618"><span class="nick" style="color:#8dd3c7"><a href="#230618" label="[23:06:18]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: is the former still in git?</span></div><div class="line" id="230643"><span class="nick" style="color:#80b1d3"><a href="#230643" label="[23:06:43]">&lt;rickmasters&gt;</a></span><span class="message">oh, sorry I'm on an older version. I think I caught it in transition</span></div><div class="line" id="230645"><span class="nick" style="color:#8dd3c7"><a href="#230645" label="[23:06:45]">&lt;stikonas&gt;</a></span><span class="message">I don't think I have it here, so probably you have an old dirty file</span></div><div class="line" id="230647"><span class="nick" style="color:#8dd3c7"><a href="#230647" label="[23:06:47]">&lt;stikonas&gt;</a></span><span class="message">possibly</span></div><div class="line" id="230726"><span class="nick" style="color:#8dd3c7"><a href="#230726" label="[23:07:26]">&lt;stikonas&gt;</a></span><span class="message">now fossy wrote that checksum-transcriber tool that converts &lt;pkgdir&gt;/sources into format that sha256sum can understasnd</span></div><div class="line" id="230813"><span class="nick" style="color:#8dd3c7"><a href="#230813" label="[23:08:13]">&lt;stikonas&gt;</a></span><span class="message">this is mainly to make list of sources more machine readable than it was before when it was inside rootfs.py</span></div><div class="line" id="230947"><span class="nick" style="color:#80b1d3"><a href="#230947" label="[23:09:47]">&lt;rickmasters&gt;</a></span><span class="message">Right, it's fine. I've just been working on updating to the latest live-bootstrap but I'm still on an older version.</span></div><div class="line" id="231052"><span class="nick" style="color:#80b1d3"><a href="#231052" label="[23:10:52]">&lt;rickmasters&gt;</a></span><span class="message">I'm setting up to use the early tcc-0.9.27 build for Fiwix.</span></div><div class="line" id="231314"><span class="nick" style="color:#8dd3c7"><a href="#231314" label="[23:13:14]">&lt;stikonas&gt;</a></span><span class="message">well, I've added unbz2 and swapped the build order in the latest live-bootstrap</span></div><div class="line" id="231328"><span class="nick" style="color:#8dd3c7"><a href="#231328" label="[23:13:28]">&lt;stikonas&gt;</a></span><span class="message">so now it's building tcc 0.9.27 immediately after tcc 0.9.26</span></div><div class="line" id="231339"><span class="nick" style="color:#8dd3c7"><a href="#231339" label="[23:13:39]">&lt;stikonas&gt;</a></span><span class="message">rather than building make</span></div><div class="line" id="231355"><span class="nick" style="color:#8dd3c7"><a href="#231355" label="[23:13:55]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: are you writing some kaem script to build Fiwix?</span></div><div class="line" id="231411"><span class="nick" style="color:#80b1d3"><a href="#231411" label="[23:14:11]">&lt;rickmasters&gt;</a></span><span class="message">yes, it will be a kaem script</span></div><div class="line" id="234055"><span class="nick" style="color:#80b1d3"><a href="#234055" label="[23:40:55]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I'll have to make sure builder-hex0 can run tcc-0.9.27. It's only run tcc-0.9.26 so far.</span></div><div class="line" id="234200"><span class="nick" style="color:#8dd3c7"><a href="#234200" label="[23:42:00]">&lt;stikonas&gt;</a></span><span class="message">hmm, true. But hopefully it's not too different</span></div><div class="line" id="234223"><span class="nick" style="color:#8dd3c7"><a href="#234223" label="[23:42:23]">&lt;stikonas&gt;</a></span><span class="message">they are fairly compatible</span></div><div class="line" id="234252"><span class="nick" style="color:#8dd3c7"><a href="#234252" label="[23:42:52]">&lt;stikonas&gt;</a></span><span class="message">I think in live-bootstrap we actually use meslibc compiled with tcc 0.9.26 and programs compiled with tcc 0.9.27 then linked into a single binary</span></div><div class="line" id="234348"><span class="nick" style="color:#8dd3c7"><a href="#234348" label="[23:43:48]">&lt;stikonas&gt;</a></span><span class="message">later we'll need to transfer both tcc 0.9.26 and 0.9.27 to Fiwix rootfs</span></div><div class="line" id="234404"><span class="nick" style="color:#8dd3c7"><a href="#234404" label="[23:44:04]">&lt;stikonas&gt;</a></span><span class="message">as 0.9.27 built with meslibc is not self-hosting</span></div><div class="line" id="234416"><span class="nick" style="color:#8dd3c7"><a href="#234416" label="[23:44:16]">&lt;stikonas&gt;</a></span><span class="message">there is probably some bug somewhere that we didn't figure out</span></div><div class="line" id="234731"><span class="nick" style="color:#80b1d3"><a href="#234731" label="[23:47:31]">&lt;rickmasters&gt;</a></span><span class="message">Hmm. I'm not seeing that</span></div><div class="line" id="234909"><span class="nick" style="color:#80b1d3"><a href="#234909" label="[23:49:09]">&lt;rickmasters&gt;</a></span><span class="message">Oh, I think I found that in the tcc-0.9.26 kaem script.</span></div><br /></div></body></html>