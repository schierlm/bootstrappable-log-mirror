<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-30.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000054"><span class="nick" style="color:#389600"><a href="#000054" label="[00:00:54]">&lt;stikonas&gt;</a></span><span class="message">no, even 1.01 crash yacc</span></div><div class="line" id="000203"><span class="nick" style="color:#389600"><a href="#000203" label="[00:02:03]">&lt;stikonas&gt;</a></span><span class="message">so I think we'll have to get bison</span></div><div class="line" id="000527"><span class="nick" style="color:#389600"><a href="#000527" label="[00:05:27]">&lt;stikonas&gt;</a></span><span class="message">anyway, I should be able to build at least flex 2.5.11 now</span></div><div class="line" id="003351"><span class="nick" style="color:#2e2a4a"><a href="#003351" label="[00:33:51]">&lt;fossy&gt;</a></span><span class="message">stikonas: unfortunate, but flex should be easier</span></div><div class="line" id="003357"><span class="nick" style="color:#2e2a4a"><a href="#003357" label="[00:33:57]">&lt;fossy&gt;</a></span><span class="message">bc mksel</span></div><div class="line" id="003440"><span class="nick" style="color:#2e2a4a"><a href="#003440" label="[00:34:40]">&lt;fossy&gt;</a></span><span class="message">bro wtf is this lmao <a rel="nofollow" href="https://cirrus-ci.com/task/6664196479778816">https://cirrus-ci.com/task/6664196479778816</a> </span></div><div class="line" id="003440"><span class="nick" style="color:#389600"><a href="#003440" label="[00:34:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, at least 2.5.11..</span></div><div class="line" id="003444"><span class="nick" style="color:#389600"><a href="#003444" label="[00:34:44]">&lt;stikonas&gt;</a></span><span class="message">.I'm now rebasing 2.5.1</span></div><div class="line" id="003518"><span class="nick" style="color:#389600"><a href="#003518" label="[00:35:18]">&lt;stikonas&gt;</a></span><span class="message">hmm, timed out...</span></div><div class="line" id="003519"><span class="nick" style="color:#389600"><a href="#003519" label="[00:35:19]">&lt;stikonas&gt;</a></span><span class="message">strange</span></div><div class="line" id="003522"><span class="nick" style="color:#2e2a4a"><a href="#003522" label="[00:35:22]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="003525"><span class="nick" style="color:#2e2a4a"><a href="#003525" label="[00:35:25]">&lt;fossy&gt;</a></span><span class="message">on /cone/</span></div><div class="line" id="003525"><span class="nick" style="color:#389600"><a href="#003525" label="[00:35:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: next time don't do merge commits :D</span></div><div class="line" id="003527"><span class="nick" style="color:#2e2a4a"><a href="#003527" label="[00:35:27]">&lt;fossy&gt;</a></span><span class="message">clone</span></div><div class="line" id="003535"><span class="nick" style="color:#389600"><a href="#003535" label="[00:35:35]">&lt;stikonas&gt;</a></span><span class="message">then it won't run CI :D</span></div><div class="line" id="003546"><span class="nick" style="color:#2e2a4a"><a href="#003546" label="[00:35:46]">&lt;fossy&gt;</a></span><span class="message">no github still will i think</span></div><div class="line" id="003554"><span class="nick" style="color:#2e2a4a"><a href="#003554" label="[00:35:54]">&lt;fossy&gt;</a></span><span class="message">it runs on any push to master</span></div><div class="line" id="003557"><span class="nick" style="color:#2e2a4a"><a href="#003557" label="[00:35:57]">&lt;fossy&gt;</a></span><span class="message">including a rebase</span></div><div class="line" id="003639"><span class="nick" style="color:#389600"><a href="#003639" label="[00:36:39]">&lt;stikonas&gt;</a></span><span class="message">fossy: do you want me to rebase ont top of merged ls?</span></div><div class="line" id="003700"><span class="nick" style="color:#389600"><a href="#003700" label="[00:37:00]">&lt;stikonas&gt;</a></span><span class="message">probably just readme renumbering...</span></div><div class="line" id="003703"><span class="nick" style="color:#2e2a4a"><a href="#003703" label="[00:37:03]">&lt;fossy&gt;</a></span><span class="message">which?</span></div><div class="line" id="003723"><span class="nick" style="color:#389600"><a href="#003723" label="[00:37:23]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/23">https://github.com/fosslinux/live-bootstrap/pull/23</a> </span></div><div class="line" id="003740"><span class="nick" style="color:#2e2a4a"><a href="#003740" label="[00:37:40]">&lt;fossy&gt;</a></span><span class="message">merge conflict, yes plz</span></div><div class="line" id="003811"><span class="nick" style="color:#389600"><a href="#003811" label="[00:38:11]">&lt;stikonas&gt;</a></span><span class="message">well, because of those Part &quot;number&quot;</span></div><div class="line" id="003901"><span class="nick" style="color:#2e2a4a"><a href="#003901" label="[00:39:01]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="003958"><span class="nick" style="color:#389600"><a href="#003958" label="[00:39:58]">&lt;stikonas&gt;</a></span><span class="message">ok, pushed</span></div><div class="line" id="004008"><span class="nick" style="color:#389600"><a href="#004008" label="[00:40:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: did you have a chance to review that change?</span></div><div class="line" id="004027"><span class="nick" style="color:#389600"><a href="#004027" label="[00:40:27]">&lt;stikonas&gt;</a></span><span class="message">it does change how we build packages compared to kaem world</span></div><div class="line" id="004057"><span class="nick" style="color:#2e2a4a"><a href="#004057" label="[00:40:57]">&lt;fossy&gt;</a></span><span class="message">what's up with the SPDX-* stuff, never seen that before, is that some kinda convention?</span></div><div class="line" id="004200"><span class="nick" style="color:#389600"><a href="#004200" label="[00:42:00]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah, a lot of projects are swithing to machine readable copyright headers</span></div><div class="line" id="004205"><span class="nick" style="color:#2e2a4a"><a href="#004205" label="[00:42:05]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="004231"><span class="nick" style="color:#389600"><a href="#004231" label="[00:42:31]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://reuse.software/">https://reuse.software/</a> </span></div><div class="line" id="004338"><span class="nick" style="color:#389600"><a href="#004338" label="[00:43:38]">&lt;stikonas&gt;</a></span><span class="message">basically the specification says that every file should have a license and short copyright header</span></div><div class="line" id="004348"><span class="nick" style="color:#389600"><a href="#004348" label="[00:43:48]">&lt;stikonas&gt;</a></span><span class="message">*every* file in the repo...</span></div><div class="line" id="004423"><span class="nick" style="color:#389600"><a href="#004423" label="[00:44:23]">&lt;stikonas&gt;</a></span><span class="message">fossy: some example of usage is here <a rel="nofollow" href="https://invent.kde.org/plasma/kwin/-/blob/master/abstract_client.cpp">https://invent.kde.org/plasma/kwin/-/blob/master/abstract_client.cpp</a>  (but this by no means is KDE thing)</span></div><div class="line" id="004429"><span class="nick" style="color:#2e2a4a"><a href="#004429" label="[00:44:29]">&lt;fossy&gt;</a></span><span class="message">hm, yes, i see</span></div><div class="line" id="004430"><span class="nick" style="color:#2e2a4a"><a href="#004430" label="[00:44:30]">&lt;fossy&gt;</a></span><span class="message">i like this</span></div><div class="line" id="004435"><span class="nick" style="color:#2e2a4a"><a href="#004435" label="[00:44:35]">&lt;fossy&gt;</a></span><span class="message">i'll impl this with the linux kernel</span></div><div class="line" id="004439"><span class="nick" style="color:#2e2a4a"><a href="#004439" label="[00:44:39]">&lt;fossy&gt;</a></span><span class="message">when i push that</span></div><div class="line" id="004539"><span class="nick" style="color:#389600"><a href="#004539" label="[00:45:39]">&lt;stikonas&gt;</a></span><span class="message">this SPDX stuff?</span></div><div class="line" id="004541"><span class="nick" style="color:#2e2a4a"><a href="#004541" label="[00:45:41]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="004542"><span class="nick" style="color:#389600"><a href="#004542" label="[00:45:42]">&lt;stikonas&gt;</a></span><span class="message">or my buidl system</span></div><div class="line" id="004544"><span class="nick" style="color:#389600"><a href="#004544" label="[00:45:44]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="004549"><span class="nick" style="color:#389600"><a href="#004549" label="[00:45:49]">&lt;stikonas&gt;</a></span><span class="message">there is also a linter called reuse</span></div><div class="line" id="004552"><span class="nick" style="color:#2e2a4a"><a href="#004552" label="[00:45:52]">&lt;fossy&gt;</a></span><span class="message">leave yours there tho</span></div><div class="line" id="004557"><span class="nick" style="color:#2e2a4a"><a href="#004557" label="[00:45:57]">&lt;fossy&gt;</a></span><span class="message">can add that to CI i guess?</span></div><div class="line" id="004611"><span class="nick" style="color:#389600"><a href="#004611" label="[00:46:11]">&lt;stikonas&gt;</a></span><span class="message">well, we are very far from complying...</span></div><div class="line" id="004622"><span class="nick" style="color:#2e2a4a"><a href="#004622" label="[00:46:22]">&lt;fossy&gt;</a></span><span class="message">yeah, it's not hard to comply tho</span></div><div class="line" id="004632"><span class="nick" style="color:#389600"><a href="#004632" label="[00:46:32]">&lt;stikonas&gt;</a></span><span class="message">yeah, especially in new project</span></div><div class="line" id="004636"><span class="nick" style="color:#389600"><a href="#004636" label="[00:46:36]">&lt;stikonas&gt;</a></span><span class="message">a bit harder in old ones...</span></div><div class="line" id="004703"><span class="nick" style="color:#389600"><a href="#004703" label="[00:47:03]">&lt;stikonas&gt;</a></span><span class="message">once you start considering stuff like README, which probably shouldn't be GPLv3</span></div><div class="line" id="004728"><span class="nick" style="color:#389600"><a href="#004728" label="[00:47:28]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fsfe/reuse-tool">https://github.com/fsfe/reuse-tool</a> </span></div><div class="line" id="004733"><span class="nick" style="color:#2e2a4a"><a href="#004733" label="[00:47:33]">&lt;fossy&gt;</a></span><span class="message">yeah cause gpl is a code license</span></div><div class="line" id="004742"><span class="nick" style="color:#2e2a4a"><a href="#004742" label="[00:47:42]">&lt;fossy&gt;</a></span><span class="message">CC0/gpl-freedoc or whatever its called</span></div><div class="line" id="004823"><span class="nick" style="color:#389600"><a href="#004823" label="[00:48:23]">&lt;stikonas&gt;</a></span><span class="message">well, either that or CC-BY-SA works for README...</span></div><div class="line" id="004924"><span class="nick" style="color:#389600"><a href="#004924" label="[00:49:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: this is report from reuse <a rel="nofollow" href="https://paste.debian.net/1183298/">https://paste.debian.net/1183298/</a> </span></div><div class="line" id="005025"><span class="nick" style="color:#6b8072"><a href="#005025" label="[00:50:25]">*</a></span><span class="message">fossy confused</span></div><div class="line" id="005027"><span class="nick" style="color:#2e2a4a"><a href="#005027" label="[00:50:27]">&lt;fossy&gt;</a></span><span class="message">LICENSE is there</span></div><div class="line" id="005030"><span class="nick" style="color:#2e2a4a"><a href="#005030" label="[00:50:30]">&lt;fossy&gt;</a></span><span class="message">why is it missing</span></div><div class="line" id="005038"><span class="nick" style="color:#389600"><a href="#005038" label="[00:50:38]">&lt;stikonas&gt;</a></span><span class="message">oh, because it wants LICENSES folder</span></div><div class="line" id="005045"><span class="nick" style="color:#2e2a4a"><a href="#005045" label="[00:50:45]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="005047"><span class="nick" style="color:#389600"><a href="#005047" label="[00:50:47]">&lt;stikonas&gt;</a></span><span class="message">with files of all used licenses</span></div><div class="line" id="005050"><span class="nick" style="color:#389600"><a href="#005050" label="[00:50:50]">&lt;stikonas&gt;</a></span><span class="message">let me find an example</span></div><div class="line" id="005052"><span class="nick" style="color:#2e2a4a"><a href="#005052" label="[00:50:52]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="005104"><span class="nick" style="color:#389600"><a href="#005104" label="[00:51:04]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/calamares/calamares/tree/calamares/LICENSES">https://github.com/calamares/calamares/tree/calamares/LICENSES</a> </span></div><div class="line" id="005125"><span class="nick" style="color:#389600"><a href="#005125" label="[00:51:25]">&lt;stikonas&gt;</a></span><span class="message">well, basically more fine grained approach than one COPYING file</span></div><div class="line" id="005156"><span class="nick" style="color:#389600"><a href="#005156" label="[00:51:56]">&lt;stikonas&gt;</a></span><span class="message">patch files might need some special handling...</span></div><div class="line" id="005216"><span class="nick" style="color:#2e2a4a"><a href="#005216" label="[00:52:16]">&lt;fossy&gt;</a></span><span class="message">why</span></div><div class="line" id="005219"><span class="nick" style="color:#2e2a4a"><a href="#005219" label="[00:52:19]">&lt;fossy&gt;</a></span><span class="message">you can have patch headers</span></div><div class="line" id="005223"><span class="nick" style="color:#389600"><a href="#005223" label="[00:52:23]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="005226"><span class="nick" style="color:#389600"><a href="#005226" label="[00:52:26]">&lt;stikonas&gt;</a></span><span class="message">in that case it's fine</span></div><div class="line" id="005230"><span class="nick" style="color:#389600"><a href="#005230" label="[00:52:30]">&lt;stikonas&gt;</a></span><span class="message">still, there are some files where you can't have</span></div><div class="line" id="005238"><span class="nick" style="color:#2e2a4a"><a href="#005238" label="[00:52:38]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="005240"><span class="nick" style="color:#389600"><a href="#005240" label="[00:52:40]">&lt;stikonas&gt;</a></span><span class="message">in those case it accepts Debian's copyright format</span></div><div class="line" id="005243"><span class="nick" style="color:#389600"><a href="#005243" label="[00:52:43]">&lt;stikonas&gt;</a></span><span class="message">like <a rel="nofollow" href="https://github.com/calamares/calamares/blob/calamares/.reuse/dep5">https://github.com/calamares/calamares/blob/calamares/.reuse/dep5</a> </span></div><div class="line" id="005244"><span class="nick" style="color:#2e2a4a"><a href="#005244" label="[00:52:44]">&lt;fossy&gt;</a></span><span class="message">well there's this .license thing</span></div><div class="line" id="005337"><span class="nick" style="color:#389600"><a href="#005337" label="[00:53:37]">&lt;stikonas&gt;</a></span><span class="message">if you have guix, you can also get reuse linter from it</span></div><div class="line" id="005405"><span class="nick" style="color:#2e2a4a"><a href="#005405" label="[00:54:05]">&lt;fossy&gt;</a></span><span class="message">well i don't use guix on my main system, but i'll package it for void while im at it</span></div><div class="line" id="005435"><span class="nick" style="color:#389600"><a href="#005435" label="[00:54:35]">&lt;stikonas&gt;</a></span><span class="message">well, I have guix as a foreign package manager</span></div><div class="line" id="005445"><span class="nick" style="color:#389600"><a href="#005445" label="[00:54:45]">&lt;stikonas&gt;</a></span><span class="message">in case Gentoo lacks some packages</span></div><div class="line" id="005449"><span class="nick" style="color:#2e2a4a"><a href="#005449" label="[00:54:49]">&lt;fossy&gt;</a></span><span class="message">same, but in a container</span></div><div class="line" id="005500"><span class="nick" style="color:#2e2a4a"><a href="#005500" label="[00:55:00]">&lt;fossy&gt;</a></span><span class="message">well i just packge it for my distro if it dosen't exist lol</span></div><div class="line" id="005524"><span class="nick" style="color:#389600"><a href="#005524" label="[00:55:24]">&lt;stikonas&gt;</a></span><span class="message">yeah, it doesn't seem to be packaged <a rel="nofollow" href="https://repology.org/project/reuse/badges">https://repology.org/project/reuse/badges</a> </span></div><div class="line" id="005531"><span class="nick" style="color:#2e2a4a"><a href="#005531" label="[00:55:31]">&lt;fossy&gt;</a></span><span class="message">it is not correct</span></div><div class="line" id="005551"><span class="nick" style="color:#389600"><a href="#005551" label="[00:55:51]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe it doesn't know about Void</span></div><div class="line" id="005702"><span class="nick" style="color:#389600"><a href="#005702" label="[00:57:02]">&lt;stikonas&gt;</a></span><span class="message">anyway, back to the topic, do you think that build function would be good enough for variety of packages?</span></div><div class="line" id="005710"><span class="nick" style="color:#2e2a4a"><a href="#005710" label="[00:57:10]">&lt;fossy&gt;</a></span><span class="message">mostly, yeah, i'm revieiwing now</span></div><div class="line" id="010025"><span class="nick" style="color:#389600"><a href="#010025" label="[01:00:25]">&lt;stikonas&gt;</a></span><span class="message">I probably need to add handling of &quot;files/&quot; folder</span></div><div class="line" id="010027"><span class="nick" style="color:#389600"><a href="#010027" label="[01:00:27]">&lt;stikonas&gt;</a></span><span class="message">for flex</span></div><div class="line" id="010039"><span class="nick" style="color:#2e2a4a"><a href="#010039" label="[01:00:39]">&lt;fossy&gt;</a></span><span class="message">whats in files/ for flex</span></div><div class="line" id="010039"><span class="nick" style="color:#389600"><a href="#010039" label="[01:00:39]">&lt;stikonas&gt;</a></span><span class="message">i.e. copy everything from files/ into build dir</span></div><div class="line" id="010045"><span class="nick" style="color:#389600"><a href="#010045" label="[01:00:45]">&lt;stikonas&gt;</a></span><span class="message">scan.lex.l</span></div><div class="line" id="010045"><span class="nick" style="color:#2e2a4a"><a href="#010045" label="[01:00:45]">&lt;fossy&gt;</a></span><span class="message">yeah i was going to review that</span></div><div class="line" id="010101"><span class="nick" style="color:#389600"><a href="#010101" label="[01:01:01]">&lt;stikonas&gt;</a></span><span class="message">although, that might go in with flex, once I need</span></div><div class="line" id="010240"><span class="nick" style="color:#2e2a4a"><a href="#010240" label="[01:02:40]">&lt;fossy&gt;</a></span><span class="message">we build printf right?</span></div><div class="line" id="010332"><span class="nick" style="color:#389600"><a href="#010332" label="[01:03:32]">&lt;stikonas&gt;</a></span><span class="message">let me check</span></div><div class="line" id="010354"><span class="nick" style="color:#2e2a4a"><a href="#010354" label="[01:03:54]">&lt;fossy&gt;</a></span><span class="message">yeah we do. stikonas: also, do we use diffutils yet?</span></div><div class="line" id="010358"><span class="nick" style="color:#2e2a4a"><a href="#010358" label="[01:03:58]">&lt;fossy&gt;</a></span><span class="message">we can probably convert diffutils to makefile?</span></div><div class="line" id="010401"><span class="nick" style="color:#389600"><a href="#010401" label="[01:04:01]">&lt;stikonas&gt;</a></span><span class="message">yes, it's in coreutils</span></div><div class="line" id="010415"><span class="nick" style="color:#389600"><a href="#010415" label="[01:04:15]">&lt;stikonas&gt;</a></span><span class="message">yeah, we haven't used diffutils yet</span></div><div class="line" id="010426"><span class="nick" style="color:#389600"><a href="#010426" label="[01:04:26]">&lt;stikonas&gt;</a></span><span class="message">it's cmp and diff</span></div><div class="line" id="010433"><span class="nick" style="color:#389600"><a href="#010433" label="[01:04:33]">&lt;stikonas&gt;</a></span><span class="message">I think I skipped other targets...</span></div><div class="line" id="010501"><span class="nick" style="color:#389600"><a href="#010501" label="[01:05:01]">&lt;stikonas&gt;</a></span><span class="message">like sdiff (side by side)</span></div><div class="line" id="010508"><span class="nick" style="color:#2e2a4a"><a href="#010508" label="[01:05:08]">&lt;fossy&gt;</a></span><span class="message">we don't really need that tho</span></div><div class="line" id="010520"><span class="nick" style="color:#389600"><a href="#010520" label="[01:05:20]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="010529"><span class="nick" style="color:#389600"><a href="#010529" label="[01:05:29]">&lt;stikonas&gt;</a></span><span class="message">that's why I hvae only built cmp and diff</span></div><div class="line" id="010538"><span class="nick" style="color:#389600"><a href="#010538" label="[01:05:38]">&lt;stikonas&gt;</a></span><span class="message">those might be used by autotools</span></div><div class="line" id="010619"><span class="nick" style="color:#2e2a4a"><a href="#010619" label="[01:06:19]">&lt;fossy&gt;</a></span><span class="message">s/might/are/</span></div><div class="line" id="010624"><span class="nick" style="color:#2e2a4a"><a href="#010624" label="[01:06:24]">&lt;fossy&gt;</a></span><span class="message">i know that for sure</span></div><div class="line" id="010646"><span class="nick" style="color:#389600"><a href="#010646" label="[01:06:46]">&lt;stikonas&gt;</a></span><span class="message">well, we can move diffutils after bash</span></div><div class="line" id="010652"><span class="nick" style="color:#2e2a4a"><a href="#010652" label="[01:06:52]">&lt;fossy&gt;</a></span><span class="message">sorry for all the comments on the build harness thing, but it's core infrastructure in this project :D</span></div><div class="line" id="010659"><span class="nick" style="color:#389600"><a href="#010659" label="[01:06:59]">&lt;stikonas&gt;</a></span><span class="message">well, yeah...</span></div><div class="line" id="010704"><span class="nick" style="color:#2e2a4a"><a href="#010704" label="[01:07:04]">&lt;fossy&gt;</a></span><span class="message">good work overall, a pretty nice implementation :D</span></div><div class="line" id="010732"><span class="nick" style="color:#389600"><a href="#010732" label="[01:07:32]">&lt;stikonas&gt;</a></span><span class="message">by the way, lack of -x is also because I'm looking for when we run configure scripts...</span></div><div class="line" id="010741"><span class="nick" style="color:#389600"><a href="#010741" label="[01:07:41]">&lt;stikonas&gt;</a></span><span class="message">although, even now build is too verbose to keep track of</span></div><div class="line" id="010805"><span class="nick" style="color:#2e2a4a"><a href="#010805" label="[01:08:05]">&lt;fossy&gt;</a></span><span class="message">-x dosen't propagate?</span></div><div class="line" id="010834"><span class="nick" style="color:#2e2a4a"><a href="#010834" label="[01:08:34]">&lt;fossy&gt;</a></span><span class="message">eventually i would like to output to a log file and just have the echo statements i'm talking about</span></div><div class="line" id="011049"><span class="nick" style="color:#389600"><a href="#011049" label="[01:10:49]">&lt;stikonas&gt;</a></span><span class="message">yeah, I would also like some output to log file and only nice summary</span></div><div class="line" id="011055"><span class="nick" style="color:#389600"><a href="#011055" label="[01:10:55]">&lt;stikonas&gt;</a></span><span class="message">like Building package A</span></div><div class="line" id="011110"><span class="nick" style="color:#389600"><a href="#011110" label="[01:11:10]">&lt;stikonas&gt;</a></span><span class="message">maybe add some intermediate stages: unpacking, configuring, making, installing</span></div><div class="line" id="011113"><span class="nick" style="color:#2e2a4a"><a href="#011113" label="[01:11:13]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="011119"><span class="nick" style="color:#2e2a4a"><a href="#011119" label="[01:11:19]">&lt;fossy&gt;</a></span><span class="message">i def want intermediate stages</span></div><div class="line" id="011122"><span class="nick" style="color:#2e2a4a"><a href="#011122" label="[01:11:22]">&lt;fossy&gt;</a></span><span class="message">but not all the output coming with it</span></div><div class="line" id="011135"><span class="nick" style="color:#389600"><a href="#011135" label="[01:11:35]">&lt;stikonas&gt;</a></span><span class="message">but I didn't want to implement everything in one go :D</span></div><div class="line" id="011141"><span class="nick" style="color:#2e2a4a"><a href="#011141" label="[01:11:41]">&lt;fossy&gt;</a></span><span class="message">yeah ofc</span></div><div class="line" id="011158"><span class="nick" style="color:#389600"><a href="#011158" label="[01:11:58]">&lt;stikonas&gt;</a></span><span class="message">oh, you want part numbers :D</span></div><div class="line" id="011203"><span class="nick" style="color:#2e2a4a"><a href="#011203" label="[01:12:03]">&lt;fossy&gt;</a></span><span class="message">stikonas: i really don't like adding anything to code to silence bad linters, it just makes the code more confusing</span></div><div class="line" id="011205"><span class="nick" style="color:#389600"><a href="#011205" label="[01:12:05]">&lt;stikonas&gt;</a></span><span class="message">well, I can re-add them...</span></div><div class="line" id="011220"><span class="nick" style="color:#389600"><a href="#011220" label="[01:12:20]">&lt;stikonas&gt;</a></span><span class="message">well, I can add shellcheck ignore comment...</span></div><div class="line" id="011227"><span class="nick" style="color:#2e2a4a"><a href="#011227" label="[01:12:27]">&lt;fossy&gt;</a></span><span class="message">when i was reading it i was like huh waht's that for, as will basically every reviewer, a shellcheck comment is clearer :)</span></div><div class="line" id="011230"><span class="nick" style="color:#2e2a4a"><a href="#011230" label="[01:12:30]">&lt;fossy&gt;</a></span><span class="message">yes please</span></div><div class="line" id="011256"><span class="nick" style="color:#389600"><a href="#011256" label="[01:12:56]">&lt;stikonas&gt;</a></span><span class="message">it's <a rel="nofollow" href="https://github.com/koalaman/shellcheck/wiki/SC2164">https://github.com/koalaman/shellcheck/wiki/SC2164</a> </span></div><div class="line" id="011346"><span class="nick" style="color:#389600"><a href="#011346" label="[01:13:46]">&lt;stikonas&gt;</a></span><span class="message">oh, set -e should disable it</span></div><div class="line" id="011352"><span class="nick" style="color:#389600"><a href="#011352" label="[01:13:52]">&lt;stikonas&gt;</a></span><span class="message">so maybe we can just delete it</span></div><div class="line" id="011401"><span class="nick" style="color:#389600"><a href="#011401" label="[01:14:01]">&lt;stikonas&gt;</a></span><span class="message">because I definitely want set -e</span></div><div class="line" id="011420"><span class="nick" style="color:#2e2a4a"><a href="#011420" label="[01:14:20]">&lt;fossy&gt;</a></span><span class="message">yeah, it's much harder to add set -e after code is written</span></div><div class="line" id="011424"><span class="nick" style="color:#2e2a4a"><a href="#011424" label="[01:14:24]">&lt;fossy&gt;</a></span><span class="message">set -e :+!:</span></div><div class="line" id="011427"><span class="nick" style="color:#2e2a4a"><a href="#011427" label="[01:14:27]">&lt;fossy&gt;</a></span><span class="message">+1</span></div><div class="line" id="011534"><span class="nick" style="color:#389600"><a href="#011534" label="[01:15:34]">&lt;stikonas&gt;</a></span><span class="message">basically everything after tcc is built compiles so fast</span></div><div class="line" id="011539"><span class="nick" style="color:#389600"><a href="#011539" label="[01:15:39]">&lt;stikonas&gt;</a></span><span class="message">that -x is too verbose</span></div><div class="line" id="011546"><span class="nick" style="color:#389600"><a href="#011546" label="[01:15:46]">&lt;stikonas&gt;</a></span><span class="message">I quite like it for mes</span></div><div class="line" id="011552"><span class="nick" style="color:#389600"><a href="#011552" label="[01:15:52]">&lt;stikonas&gt;</a></span><span class="message">because mes is slow to build</span></div><div class="line" id="011658"><span class="nick" style="color:#80b1d3"><a href="#011658" label="[01:16:58]">&lt;OriansJ&gt;</a></span><span class="message">siraben: how goes the lisp in haskell work?</span></div><div class="line" id="011706"><span class="nick" style="color:#2e2a4a"><a href="#011706" label="[01:17:06]">&lt;fossy&gt;</a></span><span class="message">i guess</span></div><div class="line" id="011720"><span class="nick" style="color:#2e2a4a"><a href="#011720" label="[01:17:20]">&lt;fossy&gt;</a></span><span class="message">i wouldn't mind if we disabled it completely</span></div><div class="line" id="011725"><span class="nick" style="color:#2e2a4a"><a href="#011725" label="[01:17:25]">&lt;fossy&gt;</a></span><span class="message">as long as it went to a logfile</span></div><div class="line" id="011729"><span class="nick" style="color:#2e2a4a"><a href="#011729" label="[01:17:29]">&lt;fossy&gt;</a></span><span class="message">but that cant happen until bash</span></div><div class="line" id="011731"><span class="nick" style="color:#2e2a4a"><a href="#011731" label="[01:17:31]">&lt;fossy&gt;</a></span><span class="message">so oh well</span></div><div class="line" id="011857"><span class="nick" style="color:#389600"><a href="#011857" label="[01:18:57]">&lt;stikonas&gt;</a></span><span class="message">by the way, should we clean up some extra executables now that we have rm</span></div><div class="line" id="011913"><span class="nick" style="color:#389600"><a href="#011913" label="[01:19:13]">&lt;stikonas&gt;</a></span><span class="message">we probably won't need tcc-boot0-4</span></div><div class="line" id="011940"><span class="nick" style="color:#389600"><a href="#011940" label="[01:19:40]">&lt;stikonas&gt;</a></span><span class="message">bunzip,bzcat,gunzip,zcat can be symlinked to the main binary</span></div><div class="line" id="012007"><span class="nick" style="color:#389600"><a href="#012007" label="[01:20:07]">&lt;stikonas&gt;</a></span><span class="message">or shall we not bother with these cleanups...</span></div><div class="line" id="012052"><span class="nick" style="color:#2e2a4a"><a href="#012052" label="[01:20:52]">&lt;fossy&gt;</a></span><span class="message">hmmm</span></div><div class="line" id="012106"><span class="nick" style="color:#2e2a4a"><a href="#012106" label="[01:21:06]">&lt;fossy&gt;</a></span><span class="message">can we wait for the linux kernel change?</span></div><div class="line" id="012110"><span class="nick" style="color:#389600"><a href="#012110" label="[01:21:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, sure</span></div><div class="line" id="012120"><span class="nick" style="color:#2e2a4a"><a href="#012120" label="[01:21:20]">&lt;fossy&gt;</a></span><span class="message">kexec reloads initramfs rihgt?</span></div><div class="line" id="012125"><span class="nick" style="color:#389600"><a href="#012125" label="[01:21:25]">&lt;stikonas&gt;</a></span><span class="message">I think so</span></div><div class="line" id="012127"><span class="nick" style="color:#2e2a4a"><a href="#012127" label="[01:21:27]">&lt;fossy&gt;</a></span><span class="message">as far as what i am reading says it does</span></div><div class="line" id="012130"><span class="nick" style="color:#2e2a4a"><a href="#012130" label="[01:21:30]">&lt;fossy&gt;</a></span><span class="message">but i am not sure</span></div><div class="line" id="012139"><span class="nick" style="color:#389600"><a href="#012139" label="[01:21:39]">&lt;stikonas&gt;</a></span><span class="message">I think you need to pass new initramfs</span></div><div class="line" id="012141"><span class="nick" style="color:#2e2a4a"><a href="#012141" label="[01:21:41]">&lt;fossy&gt;</a></span><span class="message">yeah, so we can do a kinda cleanup there, and then another one later</span></div><div class="line" id="012143"><span class="nick" style="color:#2e2a4a"><a href="#012143" label="[01:21:43]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="012143"><span class="nick" style="color:#389600"><a href="#012143" label="[01:21:43]">&lt;stikonas&gt;</a></span><span class="message">or is it old?</span></div><div class="line" id="012147"><span class="nick" style="color:#389600"><a href="#012147" label="[01:21:47]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="012148"><span class="nick" style="color:#2e2a4a"><a href="#012148" label="[01:21:48]">&lt;fossy&gt;</a></span><span class="message">sorry?</span></div><div class="line" id="012150"><span class="nick" style="color:#389600"><a href="#012150" label="[01:21:50]">&lt;stikonas&gt;</a></span><span class="message">where are kexec docs?</span></div><div class="line" id="012157"><span class="nick" style="color:#389600"><a href="#012157" label="[01:21:57]">&lt;stikonas&gt;</a></span><span class="message">are you reading man kexec?</span></div><div class="line" id="012205"><span class="nick" style="color:#2e2a4a"><a href="#012205" label="[01:22:05]">&lt;fossy&gt;</a></span><span class="message">twas reading <a rel="nofollow" href="https://wiki.archlinux.org/index.php/Kexec">https://wiki.archlinux.org/index.php/Kexec</a> </span></div><div class="line" id="012244"><span class="nick" style="color:#389600"><a href="#012244" label="[01:22:44]">&lt;stikonas&gt;</a></span><span class="message">hmm, actually, I'm not sure what happens with initramfs</span></div><div class="line" id="012250"><span class="nick" style="color:#2e2a4a"><a href="#012250" label="[01:22:50]">&lt;fossy&gt;</a></span><span class="message">i think it is redone</span></div><div class="line" id="012253"><span class="nick" style="color:#389600"><a href="#012253" label="[01:22:53]">&lt;stikonas&gt;</a></span><span class="message">especially since we dont' have initramfs image on fs</span></div><div class="line" id="012253"><span class="nick" style="color:#2e2a4a"><a href="#012253" label="[01:22:53]">&lt;fossy&gt;</a></span><span class="message">as the kernel is rebooted</span></div><div class="line" id="012301"><span class="nick" style="color:#2e2a4a"><a href="#012301" label="[01:23:01]">&lt;fossy&gt;</a></span><span class="message">oh, crapp</span></div><div class="line" id="012305"><span class="nick" style="color:#2e2a4a"><a href="#012305" label="[01:23:05]">&lt;fossy&gt;</a></span><span class="message">i didn't think of that</span></div><div class="line" id="012317"><span class="nick" style="color:#389600"><a href="#012317" label="[01:23:17]">&lt;stikonas&gt;</a></span><span class="message">you'll need cpio or something like that</span></div><div class="line" id="012322"><span class="nick" style="color:#2e2a4a"><a href="#012322" label="[01:23:22]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah i know that</span></div><div class="line" id="012325"><span class="nick" style="color:#389600"><a href="#012325" label="[01:23:25]">&lt;stikonas&gt;</a></span><span class="message">probably similar complexity as tar</span></div><div class="line" id="012327"><span class="nick" style="color:#2e2a4a"><a href="#012327" label="[01:23:27]">&lt;fossy&gt;</a></span><span class="message">but if the initramfs is in the ramdisk</span></div><div class="line" id="012332"><span class="nick" style="color:#2e2a4a"><a href="#012332" label="[01:23:32]">&lt;fossy&gt;</a></span><span class="message">then it reboots</span></div><div class="line" id="012339"><span class="nick" style="color:#2e2a4a"><a href="#012339" label="[01:23:39]">&lt;fossy&gt;</a></span><span class="message">boom, new initramfs gone</span></div><div class="line" id="012346"><span class="nick" style="color:#389600"><a href="#012346" label="[01:23:46]">&lt;stikonas&gt;</a></span><span class="message">oh, kexec loads taht image into memory reagion</span></div><div class="line" id="012349"><span class="nick" style="color:#2e2a4a"><a href="#012349" label="[01:23:49]">&lt;fossy&gt;</a></span><span class="message">unless it memcpy's the initramfs like the kernel</span></div><div class="line" id="012349"><span class="nick" style="color:#389600"><a href="#012349" label="[01:23:49]">&lt;stikonas&gt;</a></span><span class="message">I think</span></div><div class="line" id="012350"><span class="nick" style="color:#2e2a4a"><a href="#012350" label="[01:23:50]">&lt;fossy&gt;</a></span><span class="message">oh?</span></div><div class="line" id="012400"><span class="nick" style="color:#389600"><a href="#012400" label="[01:24:00]">&lt;stikonas&gt;</a></span><span class="message">well, it has to be in RAM</span></div><div class="line" id="012408"><span class="nick" style="color:#2e2a4a"><a href="#012408" label="[01:24:08]">&lt;fossy&gt;</a></span><span class="message">i understand it loads the kernel at 0x10000000, but i'm not sure about the initramfs</span></div><div class="line" id="012409"><span class="nick" style="color:#389600"><a href="#012409" label="[01:24:09]">&lt;stikonas&gt;</a></span><span class="message">kernel can't read it from disk</span></div><div class="line" id="012414"><span class="nick" style="color:#389600"><a href="#012414" label="[01:24:14]">&lt;stikonas&gt;</a></span><span class="message">probably some other offset</span></div><div class="line" id="012424"><span class="nick" style="color:#389600"><a href="#012424" label="[01:24:24]">&lt;stikonas&gt;</a></span><span class="message">I guess immediately after kernel</span></div><div class="line" id="012431"><span class="nick" style="color:#2e2a4a"><a href="#012431" label="[01:24:31]">&lt;fossy&gt;</a></span><span class="message">hm, when was kexec added to linux kernel</span></div><div class="line" id="012504"><span class="nick" style="color:#2e2a4a"><a href="#012504" label="[01:25:04]">&lt;fossy&gt;</a></span><span class="message">well on a normal system, the initramfs would be read from another partition by the kenrel, wondering if the same thing happens with kexec..</span></div><div class="line" id="012546"><span class="nick" style="color:#389600"><a href="#012546" label="[01:25:46]">&lt;stikonas&gt;</a></span><span class="message">well, but I think bootloader reads it</span></div><div class="line" id="012549"><span class="nick" style="color:#389600"><a href="#012549" label="[01:25:49]">&lt;stikonas&gt;</a></span><span class="message">puts it in memory</span></div><div class="line" id="012554"><span class="nick" style="color:#389600"><a href="#012554" label="[01:25:54]">&lt;stikonas&gt;</a></span><span class="message">and then kernel only reads it from memory</span></div><div class="line" id="012602"><span class="nick" style="color:#389600"><a href="#012602" label="[01:26:02]">&lt;stikonas&gt;</a></span><span class="message">that's why it's ramfs...</span></div><div class="line" id="012945"><span class="nick" style="color:#389600"><a href="#012945" label="[01:29:45]">&lt;stikonas&gt;</a></span><span class="message">kexec is from 2005</span></div><div class="line" id="012952"><span class="nick" style="color:#389600"><a href="#012952" label="[01:29:52]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think that's 2.6...</span></div><div class="line" id="012956"><span class="nick" style="color:#389600"><a href="#012956" label="[01:29:56]">&lt;stikonas&gt;</a></span><span class="message">if I remember correctly</span></div><div class="line" id="013103"><span class="nick" style="color:#389600"><a href="#013103" label="[01:31:03]">&lt;stikonas&gt;</a></span><span class="message">so if you build 2.4, then we are stuck in it</span></div><div class="line" id="013114"><span class="nick" style="color:#389600"><a href="#013114" label="[01:31:14]">&lt;stikonas&gt;</a></span><span class="message">which is not ideal :(</span></div><div class="line" id="013515"><span class="nick" style="color:#389600"><a href="#013515" label="[01:35:15]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, you asked about printf?</span></div><div class="line" id="013525"><span class="nick" style="color:#389600"><a href="#013525" label="[01:35:25]">&lt;stikonas&gt;</a></span><span class="message">do you want me to use it instead of echo</span></div><div class="line" id="013526"><span class="nick" style="color:#389600"><a href="#013526" label="[01:35:26]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="013924"><span class="nick" style="color:#389600"><a href="#013924" label="[01:39:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, do we have [ bash builtin?</span></div><div class="line" id="014002"><span class="nick" style="color:#2e2a4a"><a href="#014002" label="[01:40:02]">&lt;fossy&gt;</a></span><span class="message">stikonas: idk about [, shellcheck might not like echo (i think that's for /bin/sh actually, now that i think about it)</span></div><div class="line" id="014215"><span class="nick" style="color:#2e2a4a"><a href="#014215" label="[01:42:15]">&lt;fossy&gt;</a></span><span class="message">stikonas: we can also just do it the way that its being done by tccboot</span></div><div class="line" id="014231"><span class="nick" style="color:#2e2a4a"><a href="#014231" label="[01:42:31]">&lt;fossy&gt;</a></span><span class="message">i think</span></div><div class="line" id="014244"><span class="nick" style="color:#389600"><a href="#014244" label="[01:42:44]">&lt;stikonas&gt;</a></span><span class="message">echo should be fine with shellcheck</span></div><div class="line" id="014247"><span class="nick" style="color:#2e2a4a"><a href="#014247" label="[01:42:47]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="014251"><span class="nick" style="color:#389600"><a href="#014251" label="[01:42:51]">&lt;stikonas&gt;</a></span><span class="message">maybe not escape codes</span></div><div class="line" id="014301"><span class="nick" style="color:#389600"><a href="#014301" label="[01:43:01]">&lt;stikonas&gt;</a></span><span class="message">or maybe like you said /bin/sh</span></div><div class="line" id="014307"><span class="nick" style="color:#389600"><a href="#014307" label="[01:43:07]">&lt;stikonas&gt;</a></span><span class="message">so checkbashisms wouldn't like it</span></div><div class="line" id="014315"><span class="nick" style="color:#389600"><a href="#014315" label="[01:43:15]">&lt;stikonas&gt;</a></span><span class="message">but we only have bash anyway</span></div><div class="line" id="014324"><span class="nick" style="color:#389600"><a href="#014324" label="[01:43:24]">&lt;stikonas&gt;</a></span><span class="message">we don't really need to avoid bashisms</span></div><div class="line" id="014354"><span class="nick" style="color:#389600"><a href="#014354" label="[01:43:54]">&lt;stikonas&gt;</a></span><span class="message">ironically, bash was basically the easiest shell to build</span></div><div class="line" id="014410"><span class="nick" style="color:#389600"><a href="#014410" label="[01:44:10]">&lt;stikonas&gt;</a></span><span class="message">even though it was still tricky, took me two weeks to sort the parser out</span></div><div class="line" id="014813"><span class="nick" style="color:#2e2a4a"><a href="#014813" label="[01:48:13]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh this kexec patch is trivial</span></div><div class="line" id="014826"><span class="nick" style="color:#389600"><a href="#014826" label="[01:48:26]">&lt;stikonas&gt;</a></span><span class="message">ok, then that's fine</span></div><div class="line" id="014830"><span class="nick" style="color:#2e2a4a"><a href="#014830" label="[01:48:30]">&lt;fossy&gt;</a></span><span class="message">backporting is easy</span></div><div class="line" id="014834"><span class="nick" style="color:#389600"><a href="#014834" label="[01:48:34]">&lt;stikonas&gt;</a></span><span class="message">well, bauen1 said kexec is easy</span></div><div class="line" id="014911"><span class="nick" style="color:#2e2a4a"><a href="#014911" label="[01:49:11]">&lt;fossy&gt;</a></span><span class="message">yeah its only 200 loc patch</span></div><div class="line" id="014927"><span class="nick" style="color:#389600"><a href="#014927" label="[01:49:27]">&lt;stikonas&gt;</a></span><span class="message">fossy: so we are fine with not allowing empty patch directory?</span></div><div class="line" id="014941"><span class="nick" style="color:#389600"><a href="#014941" label="[01:49:41]">&lt;stikonas&gt;</a></span><span class="message">in principle git wouldn't even store empty dir</span></div><div class="line" id="014947"><span class="nick" style="color:#2e2a4a"><a href="#014947" label="[01:49:47]">&lt;fossy&gt;</a></span><span class="message">no, test if the directory exists</span></div><div class="line" id="015012"><span class="nick" style="color:#389600"><a href="#015012" label="[01:50:12]">&lt;stikonas&gt;</a></span><span class="message">yes, I do</span></div><div class="line" id="015013"><span class="nick" style="color:#2e2a4a"><a href="#015013" label="[01:50:13]">&lt;fossy&gt;</a></span><span class="message">instead of testing inside the loop for of its empty, that took me like 5 mins to work out</span></div><div class="line" id="015023"><span class="nick" style="color:#389600"><a href="#015023" label="[01:50:23]">&lt;stikonas&gt;</a></span><span class="message">but I mean directory exists</span></div><div class="line" id="015025"><span class="nick" style="color:#389600"><a href="#015025" label="[01:50:25]">&lt;stikonas&gt;</a></span><span class="message">but no patches are in it</span></div><div class="line" id="015035"><span class="nick" style="color:#389600"><a href="#015035" label="[01:50:35]">&lt;stikonas&gt;</a></span><span class="message">that would fail if I just test if directory exists</span></div><div class="line" id="015054"><span class="nick" style="color:#389600"><a href="#015054" label="[01:50:54]">&lt;stikonas&gt;</a></span><span class="message">because of how globbing works</span></div><div class="line" id="015115"><span class="nick" style="color:#2e2a4a"><a href="#015115" label="[01:51:15]">&lt;fossy&gt;</a></span><span class="message">I mean, wrap the whole loop in test -e</span></div><div class="line" id="015129"><span class="nick" style="color:#2e2a4a"><a href="#015129" label="[01:51:29]">&lt;fossy&gt;</a></span><span class="message">instead of doing the test inside the loop</span></div><div class="line" id="015154"><span class="nick" style="color:#389600"><a href="#015154" label="[01:51:54]">&lt;stikonas&gt;</a></span><span class="message">yes, I understand</span></div><div class="line" id="015210"><span class="nick" style="color:#2e2a4a"><a href="#015210" label="[01:52:10]">&lt;fossy&gt;</a></span><span class="message">why does that fail antytjing?</span></div><div class="line" id="015212"><span class="nick" style="color:#389600"><a href="#015212" label="[01:52:12]">&lt;stikonas&gt;</a></span><span class="message">I will wrap the whole loop in test -d</span></div><div class="line" id="015218"><span class="nick" style="color:#2e2a4a"><a href="#015218" label="[01:52:18]">&lt;fossy&gt;</a></span><span class="message">yeah cool</span></div><div class="line" id="015218"><span class="nick" style="color:#389600"><a href="#015218" label="[01:52:18]">&lt;stikonas&gt;</a></span><span class="message">but that is not sufficient</span></div><div class="line" id="015231"><span class="nick" style="color:#389600"><a href="#015231" label="[01:52:31]">&lt;stikonas&gt;</a></span><span class="message">because if directory exists and is empty</span></div><div class="line" id="015239"><span class="nick" style="color:#2e2a4a"><a href="#015239" label="[01:52:39]">&lt;fossy&gt;</a></span><span class="message">Ohhhhhhh</span></div><div class="line" id="015242"><span class="nick" style="color:#2e2a4a"><a href="#015242" label="[01:52:42]">&lt;fossy&gt;</a></span><span class="message">Ohhh</span></div><div class="line" id="015249"><span class="nick" style="color:#2e2a4a"><a href="#015249" label="[01:52:49]">&lt;fossy&gt;</a></span><span class="message">I understand you now</span></div><div class="line" id="015254"><span class="nick" style="color:#389600"><a href="#015254" label="[01:52:54]">&lt;stikonas&gt;</a></span><span class="message">globbing will return * as string</span></div><div class="line" id="015256"><span class="nick" style="color:#389600"><a href="#015256" label="[01:52:56]">&lt;stikonas&gt;</a></span><span class="message">for file in *; do echo $file; done</span></div><div class="line" id="015257"><span class="nick" style="color:#389600"><a href="#015257" label="[01:52:57]">&lt;stikonas&gt;</a></span><span class="message">prints *</span></div><div class="line" id="015259"><span class="nick" style="color:#389600"><a href="#015259" label="[01:52:59]">&lt;stikonas&gt;</a></span><span class="message">in empty dir</span></div><div class="line" id="015301"><span class="nick" style="color:#2e2a4a"><a href="#015301" label="[01:53:01]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="015302"><span class="nick" style="color:#6d2462"><a href="#015302" label="[01:53:02]">&lt;siraben&gt;</a></span><span class="message">OriansJ: Hi, uni just started up again and I'll be quite occupied until the summer</span></div><div class="line" id="015320"><span class="nick" style="color:#389600"><a href="#015320" label="[01:53:20]">&lt;stikonas&gt;</a></span><span class="message">siraben: well, good luck</span></div><div class="line" id="015330"><span class="nick" style="color:#2e2a4a"><a href="#015330" label="[01:53:30]">&lt;fossy&gt;</a></span><span class="message">stikonas: sorry I cant read, I have no problem with disallowing empty patches dir</span></div><div class="line" id="015354"><span class="nick" style="color:#389600"><a href="#015354" label="[01:53:54]">&lt;stikonas&gt;</a></span><span class="message">ok, god it</span></div><div class="line" id="015355"><span class="nick" style="color:#389600"><a href="#015355" label="[01:53:55]">&lt;stikonas&gt;</a></span><span class="message">got it</span></div><div class="line" id="015413"><span class="nick" style="color:#389600"><a href="#015413" label="[01:54:13]">&lt;stikonas&gt;</a></span><span class="message">oh, let me see if shellcheck is happy</span></div><div class="line" id="015415"><span class="nick" style="color:#389600"><a href="#015415" label="[01:54:15]">&lt;stikonas&gt;</a></span><span class="message">it might not</span></div><div class="line" id="015423"><span class="nick" style="color:#389600"><a href="#015423" label="[01:54:23]">&lt;stikonas&gt;</a></span><span class="message">maybe comment then</span></div><div class="line" id="015458"><span class="nick" style="color:#389600"><a href="#015458" label="[01:54:58]">&lt;stikonas&gt;</a></span><span class="message">well, it's not complaining</span></div><div class="line" id="015500"><span class="nick" style="color:#389600"><a href="#015500" label="[01:55:00]">&lt;stikonas&gt;</a></span><span class="message">so that's good</span></div><div class="line" id="015512"><span class="nick" style="color:#6d2462"><a href="#015512" label="[01:55:12]">&lt;siraben&gt;</a></span><span class="message">stikonas: thanks</span></div><div class="line" id="020949"><span class="nick" style="color:#389600"><a href="#020949" label="[02:09:49]">&lt;stikonas&gt;</a></span><span class="message">oh, I missed two comments</span></div><div class="line" id="021641"><span class="nick" style="color:#389600"><a href="#021641" label="[02:16:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, so I think I've resolved all comments...</span></div><div class="line" id="025048"><span class="nick" style="color:#389600"><a href="#025048" label="[02:50:48]">&lt;stikonas&gt;</a></span><span class="message">ok, flex 2.5.11 now builds reliably</span></div><div class="line" id="025103"><span class="nick" style="color:#389600"><a href="#025103" label="[02:51:03]">&lt;stikonas&gt;</a></span><span class="message">although newer flex still needs regex.h...</span></div><div class="line" id="025108"><span class="nick" style="color:#389600"><a href="#025108" label="[02:51:08]">&lt;stikonas&gt;</a></span><span class="message">which we don't have</span></div><div class="line" id="025121"><span class="nick" style="color:#389600"><a href="#025121" label="[02:51:21]">&lt;stikonas&gt;</a></span><span class="message">but maybe we can build something intermediate...</span></div><div class="line" id="025134"><span class="nick" style="color:#389600"><a href="#025134" label="[02:51:34]">&lt;stikonas&gt;</a></span><span class="message">like newest 2.5.x</span></div><div class="line" id="030253"><span class="nick" style="color:#2e2a4a"><a href="#030253" label="[03:02:53]">&lt;fossy&gt;</a></span><span class="message">yeah that should work</span></div><div class="line" id="083600"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="084506"><span class="nick" style="color:#234e69"><a href="#084506" label="[08:45:06]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: PR: &quot;Build harness in bash&quot; - looks good to me, i would change shebang to /bin/sh and fn_exists() is simpler with just: test &quot;$(type -t &quot;$1&quot;)&quot; --&gt; this works on posix too</span></div><div class="line" id="084816"><span class="nick" style="color:#2e2a4a"><a href="#084816" label="[08:48:16]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: /bin/sh is de-facto standard for posix compatibility</span></div><div class="line" id="084822"><span class="nick" style="color:#2e2a4a"><a href="#084822" label="[08:48:22]">&lt;fossy&gt;</a></span><span class="message">that script is far from posix compatible</span></div><div class="line" id="084847"><span class="nick" style="color:#2e2a4a"><a href="#084847" label="[08:48:47]">&lt;fossy&gt;</a></span><span class="message">we also don't have any shell other than bash</span></div><div class="line" id="084906"><span class="nick" style="color:#2e2a4a"><a href="#084906" label="[08:49:06]">&lt;fossy&gt;</a></span><span class="message">also, i got the linux 2.4.26 kernel built by tcc linked, but uhhh</span></div><div class="line" id="084909"><span class="nick" style="color:#2e2a4a"><a href="#084909" label="[08:49:09]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://i.imgur.com/0rz9pTu.png">https://i.imgur.com/0rz9pTu.png</a> </span></div><div class="line" id="090414"><span class="nick" style="color:#6c3d55"><a href="#090414" label="[09:04:14]">&lt;bauen1&gt;</a></span><span class="message">fossy: all good osdev debugging begins with art like this</span></div><div class="line" id="090527"><span class="nick" style="color:#6c3d55"><a href="#090527" label="[09:05:27]">&lt;bauen1&gt;</a></span><span class="message">fossy: actually, are you using tcc to do the actual linking too ? because that is a lot less likely to work if linux has _any_ special requirements or makes any assumptions</span></div><div class="line" id="090744"><span class="nick" style="color:#234e69"><a href="#090744" label="[09:07:44]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: &quot;that script is far from posix compatible&quot;? i dont think so: there is just 1 little complain when doing: shellcheck --shell=dash helpers.sh</span></div><div class="line" id="090848"><span class="nick" style="color:#234e69"><a href="#090848" label="[09:08:48]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: there is just no need to enforce bash, when the script is posix anyway, and if we really stick to bash is not totally clear</span></div><div class="line" id="091650"><span class="nick" style="color:#234e69"><a href="#091650" label="[09:16:50]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: are you using .config and .patch from <a rel="nofollow" href="https://bellard.org/tcc/tccboot-0.1.tar.gz">https://bellard.org/tcc/tccboot-0.1.tar.gz</a>  ?</span></div><div class="line" id="091804"><span class="nick" style="color:#234e69"><a href="#091804" label="[09:18:04]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: there seems to be some code to support tcc 2.4.37 | <a rel="nofollow" href="https://github.com/seyko2/tccboot">https://github.com/seyko2/tccboot</a> </span></div><div class="line" id="093413"><span class="nick" style="color:#2e2a4a"><a href="#093413" label="[09:34:13]">&lt;fossy&gt;</a></span><span class="message">bauen1: yes, tcc is doing the linking</span></div><div class="line" id="093451"><span class="nick" style="color:#2e2a4a"><a href="#093451" label="[09:34:51]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: hm, i will look at this updated version, but yes i was using that</span></div><div class="line" id="093630"><span class="nick" style="color:#2e2a4a"><a href="#093630" label="[09:36:30]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: i'll leave the bash decision up to bauen1, you are right it's not too posix incompatbile</span></div><div class="line" id="093641"><span class="nick" style="color:#2e2a4a"><a href="#093641" label="[09:36:41]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: but also, we don't have /bin/sh (we didn't make it)</span></div><div class="line" id="093740"><span class="nick" style="color:#234e69"><a href="#093740" label="[09:37:40]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: it as easy as: cp /bin/bash /bin/sh</span></div><div class="line" id="093806"><span class="nick" style="color:#234e69"><a href="#093806" label="[09:38:06]">&lt;gforce_de1977&gt;</a></span><span class="message">bauen1: do you have some feeling about that? (bash vs. posix scripts)</span></div><div class="line" id="093816"><span class="nick" style="color:#2e2a4a"><a href="#093816" label="[09:38:16]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: yeah, it is, correct</span></div><div class="line" id="093841"><span class="nick" style="color:#2e2a4a"><a href="#093841" label="[09:38:41]">&lt;fossy&gt;</a></span><span class="message">it only seems to  be a couple of lines that need fixing to make it fully posix compilinat</span></div><div class="line" id="093906"><span class="nick" style="color:#2e2a4a"><a href="#093906" label="[09:39:06]">&lt;fossy&gt;</a></span><span class="message">but i guess i'm thinking more in matte rof principles, if a useful feature came up would we use it or not</span></div><div class="line" id="094039"><span class="nick" style="color:#234e69"><a href="#094039" label="[09:40:39]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: there is just 1 line to fix, and the fix is to make the line shorter: test &quot;$(type -t &quot;$1&quot;)&quot;</span></div><div class="line" id="094109"><span class="nick" style="color:#2e2a4a"><a href="#094109" label="[09:41:09]">&lt;fossy&gt;</a></span><span class="message">that's not really a fix</span></div><div class="line" id="094113"><span class="nick" style="color:#2e2a4a"><a href="#094113" label="[09:41:13]">&lt;fossy&gt;</a></span><span class="message">that changes the behvaiour</span></div><div class="line" id="094121"><span class="nick" style="color:#2e2a4a"><a href="#094121" label="[09:41:21]">&lt;fossy&gt;</a></span><span class="message">it needs to be a function and not anything else</span></div><div class="line" id="094520"><span class="nick" style="color:#6c3d55"><a href="#094520" label="[09:45:20]">&lt;bauen1&gt;</a></span><span class="message">uh, not really, my general stance would be that if you can do it with &quot;/bin/sh&quot; with none or only minor changes, that's probably a good diea</span></div><div class="line" id="094524"><span class="nick" style="color:#6c3d55"><a href="#094524" label="[09:45:24]">&lt;bauen1&gt;</a></span><span class="message">*idea</span></div><div class="line" id="094609"><span class="nick" style="color:#6c3d55"><a href="#094609" label="[09:46:09]">&lt;bauen1&gt;</a></span><span class="message">at least some project still spend extra attention to avoid breaking POSIX, so there's that</span></div><div class="line" id="100730"><span class="nick" style="color:#234e69"><a href="#100730" label="[10:07:30]">&lt;gforce_de1977&gt;</a></span><span class="message">bauen1: i'am on your side. especially in this early stage, it's a good idea. It's the same like 'set -x', better set it now, that later...</span></div><div class="line" id="101217"><span class="nick" style="color:#234e69"><a href="#101217" label="[10:12:17]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: if you insist, the posixly fix would be: test &quot;$(command -V &quot;$1&quot;)&quot; = &quot;$1 is a shell function&quot;</span></div><div class="line" id="101411"><span class="nick" style="color:#234e69"><a href="#101411" label="[10:14:11]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: or with 'type': test &quot;$(type &quot;$1&quot;)&quot; = &quot;$1 is a shell function&quot;</span></div><div class="line" id="101518"><span class="nick" style="color:#234e69"><a href="#101518" label="[10:15:18]">&lt;gforce_de1977&gt;</a></span><span class="message">or: case &quot;$(command -V &quot;$1&quot;)&quot; in &quot;$1 is a shell function&quot;) true ;; *) false ;; esac</span></div><div class="line" id="101522"><span class="nick" style="color:#234e69"><a href="#101522" label="[10:15:22]">&lt;gforce_de1977&gt;</a></span><span class="message">8-)</span></div><div class="line" id="101634"><span class="nick" style="color:#234e69"><a href="#101634" label="[10:16:34]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: another approach would be: always establish an empty function package_xy() { true; }</span></div><div class="line" id="101711"><span class="nick" style="color:#234e69"><a href="#101711" label="[10:17:11]">&lt;gforce_de1977&gt;</a></span><span class="message">and call it (the package can overwrite the function) so there is just no need to check for the function, it is just always available</span></div><div class="line" id="103045"><span class="nick" style="color:#2e2a4a"><a href="#103045" label="[10:30:45]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: hm that's not actually a bad idea...</span></div><div class="line" id="103100"><span class="nick" style="color:#d9d9d9"><a href="#103100" label="[10:31:00]">&lt;stikonas[m]&gt;</a></span><span class="message">But what's wrong with bash?</span></div><div class="line" id="103107"><span class="nick" style="color:#2e2a4a"><a href="#103107" label="[10:31:07]">&lt;fossy&gt;</a></span><span class="message">nothing imo</span></div><div class="line" id="103114"><span class="nick" style="color:#2e2a4a"><a href="#103114" label="[10:31:14]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: what if we just defined the functions</span></div><div class="line" id="103117"><span class="nick" style="color:#d9d9d9"><a href="#103117" label="[10:31:17]">&lt;stikonas[m]&gt;</a></span><span class="message">That's the only thing we have anyway</span></div><div class="line" id="103117"><span class="nick" style="color:#2e2a4a"><a href="#103117" label="[10:31:17]">&lt;fossy&gt;</a></span><span class="message">and then sourced the script</span></div><div class="line" id="103128"><span class="nick" style="color:#2e2a4a"><a href="#103128" label="[10:31:28]">&lt;fossy&gt;</a></span><span class="message">which would override it..</span></div><div class="line" id="103159"><span class="nick" style="color:#d9d9d9"><a href="#103159" label="[10:31:59]">&lt;stikonas[m]&gt;</a></span><span class="message">Oh, I didn't want that</span></div><div class="line" id="103206"><span class="nick" style="color:#d9d9d9"><a href="#103206" label="[10:32:06]">&lt;stikonas[m]&gt;</a></span><span class="message">Deliberately</span></div><div class="line" id="103216"><span class="nick" style="color:#2e2a4a"><a href="#103216" label="[10:32:16]">&lt;fossy&gt;</a></span><span class="message">sure, but i can't place why</span></div><div class="line" id="103225"><span class="nick" style="color:#2e2a4a"><a href="#103225" label="[10:32:25]">&lt;fossy&gt;</a></span><span class="message">just clarity?</span></div><div class="line" id="103230"><span class="nick" style="color:#d9d9d9"><a href="#103230" label="[10:32:30]">&lt;stikonas[m]&gt;</a></span><span class="message">I might call default implementation from overridden</span></div><div class="line" id="103237"><span class="nick" style="color:#2e2a4a"><a href="#103237" label="[10:32:37]">&lt;fossy&gt;</a></span><span class="message">ooh, yeah</span></div><div class="line" id="103243"><span class="nick" style="color:#2e2a4a"><a href="#103243" label="[10:32:43]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="103330"><span class="nick" style="color:#d9d9d9"><a href="#103330" label="[10:33:30]">&lt;stikonas[m]&gt;</a></span><span class="message">I might need it even in flex</span></div><div class="line" id="103623"><span class="nick" style="color:#d9d9d9"><a href="#103623" label="[10:36:23]">&lt;stikonas[m]&gt;</a></span><span class="message">E.g. I can apply patches, then touch config.h</span></div><div class="line" id="103738"><span class="nick" style="color:#2e2a4a"><a href="#103738" label="[10:37:38]">&lt;fossy&gt;</a></span><span class="message">yeah, good design decision</span></div><div class="line" id="103839"><span class="nick" style="color:#2e2a4a"><a href="#103839" label="[10:38:39]">&lt;fossy&gt;</a></span><span class="message">uh, this dosen't look good, lol</span></div><div class="line" id="103841"><span class="nick" style="color:#2e2a4a"><a href="#103841" label="[10:38:41]">&lt;fossy&gt;</a></span><span class="message">objdump: vmlinux: file format not recognized</span></div><div class="line" id="103929"><span class="nick" style="color:#d9d9d9"><a href="#103929" label="[10:39:29]">&lt;stikonas[m]&gt;</a></span><span class="message">Where did we get objdump from...</span></div><div class="line" id="103938"><span class="nick" style="color:#2e2a4a"><a href="#103938" label="[10:39:38]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: no this is my debugging of the broken kernel</span></div><div class="line" id="103944"><span class="nick" style="color:#d9d9d9"><a href="#103944" label="[10:39:44]">&lt;stikonas[m]&gt;</a></span><span class="message">Isn't it from binutils</span></div><div class="line" id="103951"><span class="nick" style="color:#2e2a4a"><a href="#103951" label="[10:39:51]">&lt;fossy&gt;</a></span><span class="message">this is what it outputs on boot</span></div><div class="line" id="103952"><span class="nick" style="color:#d9d9d9"><a href="#103952" label="[10:39:52]">&lt;stikonas[m]&gt;</a></span><span class="message">OK...</span></div><div class="line" id="103954"><span class="nick" style="color:#2e2a4a"><a href="#103954" label="[10:39:54]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://i.imgur.com/0rz9pTu.png">https://i.imgur.com/0rz9pTu.png</a> </span></div><div class="line" id="112659"><span class="nick" style="color:#234e69"><a href="#112659" label="[11:26:59]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: whats wrong with bash? a lot 8-) but seriously:</span></div><div class="line" id="112701"><span class="nick" style="color:#234e69"><a href="#112701" label="[11:27:01]">&lt;gforce_de1977&gt;</a></span><span class="message"># &quot;Stick to portable constructs where possible, and</span></div><div class="line" id="112701"><span class="nick" style="color:#234e69"><a href="#112701" label="[11:27:01]">&lt;gforce_de1977&gt;</a></span><span class="message">#  you will make somebody's life easier in the future.</span></div><div class="line" id="112701"><span class="nick" style="color:#234e69"><a href="#112701" label="[11:27:01]">&lt;gforce_de1977&gt;</a></span><span class="message">#  Maybe your own.&quot;</span></div><div class="line" id="112759"><span class="nick" style="color:#234e69"><a href="#112759" label="[11:27:59]">&lt;gforce_de1977&gt;</a></span><span class="message">i do not like the idea to make BASH unavoidable</span></div><div class="line" id="113244"><span class="nick" style="color:#d9d9d9"><a href="#113244" label="[11:32:44]">&lt;stikonas[m]&gt;</a></span><span class="message">Bash is unavoidable, there is no other shell here. I understand the benefits of POSIX compatibility when you distribute scripts to run in their shells. But here we literally just compiled bash and bash only</span></div><div class="line" id="113610"><span class="nick" style="color:#234e69"><a href="#113610" label="[11:36:10]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas[m]: for now, there is only bash, my feeling says that we want something simpler in the future. It's ok for now, but there is no point using bashisms, where not needed. for now your new infrastructure is already posix, so we can stick for it. what do you think about that?</span></div><div class="line" id="113757"><span class="nick" style="color:#2e2a4a"><a href="#113757" label="[11:37:57]">&lt;fossy&gt;</a></span><span class="message">UGH</span></div><div class="line" id="113800"><span class="nick" style="color:#2e2a4a"><a href="#113800" label="[11:38:00]">&lt;fossy&gt;</a></span><span class="message">i HATE kernels</span></div><div class="line" id="113819"><span class="nick" style="color:#2e2a4a"><a href="#113819" label="[11:38:19]">&lt;fossy&gt;</a></span><span class="message">so the image i have built can be loaded in one way and in one way only specific to tccboot</span></div><div class="line" id="113829"><span class="nick" style="color:#2e2a4a"><a href="#113829" label="[11:38:29]">&lt;fossy&gt;</a></span><span class="message">so, uh, yeah, i need to think more about how i'm going to make this work</span></div><div class="line" id="113924"><span class="nick" style="color:#2e2a4a"><a href="#113924" label="[11:39:24]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: yeah, something simpler *might* be better later</span></div><div class="line" id="113930"><span class="nick" style="color:#2e2a4a"><a href="#113930" label="[11:39:30]">&lt;fossy&gt;</a></span><span class="message">but remember we are basically time-travelling</span></div><div class="line" id="113948"><span class="nick" style="color:#2e2a4a"><a href="#113948" label="[11:39:48]">&lt;fossy&gt;</a></span><span class="message">the whole &quot;/bin/sh != /bin/bash&quot; thing only occured in 2007~ when ubuntu made the switch</span></div><div class="line" id="114011"><span class="nick" style="color:#2e2a4a"><a href="#114011" label="[11:40:11]">&lt;fossy&gt;</a></span><span class="message">up until then, there are bashisms /everywhere/ (including autotools, ironically, in some code paths)</span></div><div class="line" id="114043"><span class="nick" style="color:#d9d9d9"><a href="#114043" label="[11:40:43]">&lt;stikonas[m]&gt;</a></span><span class="message">And dash is probably harder to build</span></div><div class="line" id="114050"><span class="nick" style="color:#2e2a4a"><a href="#114050" label="[11:40:50]">&lt;fossy&gt;</a></span><span class="message">s/probably//</span></div><div class="line" id="114058"><span class="nick" style="color:#d9d9d9"><a href="#114058" label="[11:40:58]">&lt;stikonas[m]&gt;</a></span><span class="message">Ironically too</span></div><div class="line" id="114100"><span class="nick" style="color:#2e2a4a"><a href="#114100" label="[11:41:00]">&lt;fossy&gt;</a></span><span class="message">is right now, probably not so much later, but is now</span></div><div class="line" id="114102"><span class="nick" style="color:#2e2a4a"><a href="#114102" label="[11:41:02]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="114113"><span class="nick" style="color:#2e2a4a"><a href="#114113" label="[11:41:13]">&lt;fossy&gt;</a></span><span class="message">i think i might take a break from kernels tomorrow and do reuse instead</span></div><div class="line" id="114130"><span class="nick" style="color:#d9d9d9"><a href="#114130" label="[11:41:30]">&lt;stikonas[m]&gt;</a></span><span class="message">I looked at some other shells too, none were easy</span></div><div class="line" id="114131"><span class="nick" style="color:#2e2a4a"><a href="#114131" label="[11:41:31]">&lt;fossy&gt;</a></span><span class="message">kernel is annoying me to all hell, lol</span></div><div class="line" id="114144"><span class="nick" style="color:#d9d9d9"><a href="#114144" label="[11:41:44]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, take a break</span></div><div class="line" id="114211"><span class="nick" style="color:#2e2a4a"><a href="#114211" label="[11:42:11]">&lt;fossy&gt;</a></span><span class="message">i need to figure out how once transforms a vmlinux into a bzImage... without a shell :D</span></div><div class="line" id="121528"><span class="nick" style="color:#80b1d3"><a href="#121528" label="[12:15:28]">&lt;OriansJ&gt;</a></span><span class="message">siraben: well best of luck with your studies. ^_^</span></div><div class="line" id="121646"><span class="nick" style="color:#80b1d3"><a href="#121646" label="[12:16:46]">&lt;OriansJ&gt;</a></span><span class="message">fossy: have you looked at non-interactive shells too?</span></div><div class="line" id="121656"><span class="nick" style="color:#6d2462"><a href="#121656" label="[12:16:56]">&lt;siraben&gt;</a></span><span class="message">OriansJ: thanks, also for helping to port blynn-compiler to M2-Planet</span></div><div class="line" id="121950"><span class="nick" style="color:#80b1d3"><a href="#121950" label="[12:19:50]">&lt;OriansJ&gt;</a></span><span class="message">siraben: hopefully I can get some of the ugly M2-Planet specific bits into more C standards. But this is a long fight but It'll all be solved together.</span></div><div class="line" id="122043"><span class="nick" style="color:#6d2462"><a href="#122043" label="[12:20:43]">&lt;siraben&gt;</a></span><span class="message">Indeed. Also, the blob issue is still there but anyone familiar with lambda calculus could step in and rewrite it in Scheme.</span></div><div class="line" id="122256"><span class="nick" style="color:#2e2a4a"><a href="#122256" label="[12:22:56]">&lt;fossy&gt;</a></span><span class="message">OriansJ: yeah, our bash is currently non interactive due to a lack of /dev.</span></div><div class="line" id="122336"><span class="nick" style="color:#2e2a4a"><a href="#122336" label="[12:23:36]">&lt;fossy&gt;</a></span><span class="message">we tried dash (requires better than mes libc) and i looked at busybox ash (ditto). gash isnt feasiable due to lack of guile</span></div><div class="line" id="122927"><span class="nick" style="color:#80b1d3"><a href="#122927" label="[12:29:27]">&lt;OriansJ&gt;</a></span><span class="message">siraben: just minor more item on a very long list but we will get there ^_^</span></div><div class="line" id="123131"><span class="nick" style="color:#d9d9d9"><a href="#123131" label="[12:31:31]">&lt;stikonas[m]&gt;</a></span><span class="message">Also lack of readline</span></div><div class="line" id="123219"><span class="nick" style="color:#80b1d3"><a href="#123219" label="[12:32:19]">&lt;OriansJ&gt;</a></span><span class="message">fossy: what about the toybox shell?</span></div><div class="line" id="123310"><span class="nick" style="color:#389600"><a href="#123310" label="[12:33:10]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: we now have bash anyway</span></div><div class="line" id="123325"><span class="nick" style="color:#389600"><a href="#123325" label="[12:33:25]">&lt;stikonas&gt;</a></span><span class="message">well, unless fossy needs some simpler shell for kernel</span></div><div class="line" id="123448"><span class="nick" style="color:#80b1d3"><a href="#123448" label="[12:34:48]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: I think fossy probably wants to reduce the bits that need to be supported to bootstrap linux; reducing the requirements on a bootstrap kernel.</span></div><div class="line" id="123502"><span class="nick" style="color:#389600"><a href="#123502" label="[12:35:02]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: yeah, I think so...</span></div><div class="line" id="123507"><span class="nick" style="color:#389600"><a href="#123507" label="[12:35:07]">&lt;stikonas&gt;</a></span><span class="message">bash already requires a lot of syscalls</span></div><div class="line" id="123525"><span class="nick" style="color:#389600"><a href="#123525" label="[12:35:25]">&lt;stikonas&gt;</a></span><span class="message">so ideally we have some linux and not minimal bootstrap kernel by the time we use bash</span></div><div class="line" id="123553"><span class="nick" style="color:#80b1d3"><a href="#123553" label="[12:35:53]">&lt;OriansJ&gt;</a></span><span class="message">gash would reduce that but we still need to get something easier to bootstrap than guile to use it.</span></div><div class="line" id="123612"><span class="nick" style="color:#389600"><a href="#123612" label="[12:36:12]">&lt;stikonas&gt;</a></span><span class="message">yes, if it can run on mes that would be good</span></div><div class="line" id="123619"><span class="nick" style="color:#389600"><a href="#123619" label="[12:36:19]">&lt;stikonas&gt;</a></span><span class="message">but mes-m2 is still some time away</span></div><div class="line" id="123637"><span class="nick" style="color:#389600"><a href="#123637" label="[12:36:37]">&lt;stikonas&gt;</a></span><span class="message">anyway, there is more work to be done until we bootstrap gcc</span></div><div class="line" id="123652"><span class="nick" style="color:#389600"><a href="#123652" label="[12:36:52]">&lt;stikonas&gt;</a></span><span class="message">it's not like everything is blocked on gash</span></div><div class="line" id="123736"><span class="nick" style="color:#389600"><a href="#123736" label="[12:37:36]">&lt;stikonas&gt;</a></span><span class="message">fossy: I've just pushed and update to PR, it passed locally</span></div><div class="line" id="123746"><span class="nick" style="color:#80b1d3"><a href="#123746" label="[12:37:46]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: the question becomes would the effort be more effectively spent if we assumed magic and then made it happen.</span></div><div class="line" id="123826"><span class="nick" style="color:#389600"><a href="#123826" label="[12:38:26]">&lt;stikonas&gt;</a></span><span class="message">later in bootstrap chain it probably doesn't matter</span></div><div class="line" id="123832"><span class="nick" style="color:#80b1d3"><a href="#123832" label="[12:38:32]">&lt;OriansJ&gt;</a></span><span class="message">eg assumed a bootstrap scheme capable of running gash and gash-utils</span></div><div class="line" id="123835"><span class="nick" style="color:#389600"><a href="#123835" label="[12:38:35]">&lt;stikonas&gt;</a></span><span class="message">it's only the question for kernel</span></div><div class="line" id="123848"><span class="nick" style="color:#389600"><a href="#123848" label="[12:38:48]">&lt;stikonas&gt;</a></span><span class="message">well, maybe much later when we need some other arches</span></div><div class="line" id="123857"><span class="nick" style="color:#389600"><a href="#123857" label="[12:38:57]">&lt;stikonas&gt;</a></span><span class="message">but I think most of the problems wouldn't be coming from utils</span></div><div class="line" id="123921"><span class="nick" style="color:#389600"><a href="#123921" label="[12:39:21]">&lt;stikonas&gt;</a></span><span class="message">probably the problems will be in toolchain... tcc/binutils/libc</span></div><div class="line" id="123936"><span class="nick" style="color:#389600"><a href="#123936" label="[12:39:36]">&lt;stikonas&gt;</a></span><span class="message">e.g. if we need risc v there or something like that</span></div><div class="line" id="124016"><span class="nick" style="color:#80b1d3"><a href="#124016" label="[12:40:16]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: hence the simplification of the bootstrap path even if it means a few custom pieces along the way.</span></div><div class="line" id="124046"><span class="nick" style="color:#80b1d3"><a href="#124046" label="[12:40:46]">&lt;OriansJ&gt;</a></span><span class="message">The less pieces we have to work with, the less that can break or become issues later.</span></div><div class="line" id="124113"><span class="nick" style="color:#389600"><a href="#124113" label="[12:41:13]">&lt;stikonas&gt;</a></span><span class="message">true, but I expect most issues in compilers/binutils and various libc...</span></div><div class="line" id="124207"><span class="nick" style="color:#80b1d3"><a href="#124207" label="[12:42:07]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: porting compilers and libraries to new architectures is just work, not magic and we are experienced at this point in how to do it.</span></div><div class="line" id="124312"><span class="nick" style="color:#389600"><a href="#124312" label="[12:43:12]">&lt;stikonas&gt;</a></span><span class="message">I guess at some point we need to port live-bootstrap to arm64, it will make it more apparent where the problems are</span></div><div class="line" id="124418"><span class="nick" style="color:#80b1d3"><a href="#124418" label="[12:44:18]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: and powerpc, mips, etc.</span></div><div class="line" id="124455"><span class="nick" style="color:#80b1d3"><a href="#124455" label="[12:44:55]">&lt;OriansJ&gt;</a></span><span class="message">The more architectures the better.</span></div><div class="line" id="124530"><span class="nick" style="color:#389600"><a href="#124530" label="[12:45:30]">&lt;stikonas&gt;</a></span><span class="message">yeah, of course, although I don't have suitable powerpc or mips hardware...</span></div><div class="line" id="124536"><span class="nick" style="color:#389600"><a href="#124536" label="[12:45:36]">&lt;stikonas&gt;</a></span><span class="message">well, I have low RAM mips</span></div><div class="line" id="124539"><span class="nick">***</span><span class="message notice">janneke_ is now known as janneke</span></div><div class="line" id="124551"><span class="nick" style="color:#389600"><a href="#124551" label="[12:45:51]">&lt;stikonas&gt;</a></span><span class="message">but router is not good enough for bootstrapping</span></div><div class="line" id="124709"><span class="nick" style="color:#80b1d3"><a href="#124709" label="[12:47:09]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: you aren't expected to do the bootstrapping work for platforms you don't have.</span></div><div class="line" id="124740"><span class="nick" style="color:#80b1d3"><a href="#124740" label="[12:47:40]">&lt;OriansJ&gt;</a></span><span class="message">we just need to make it easier for the people who do to help us gain those roots as well.</span></div><div class="line" id="124804"><span class="nick" style="color:#80b1d3"><a href="#124804" label="[12:48:04]">&lt;OriansJ&gt;</a></span><span class="message">It is about making the job for the next person easier.</span></div><div class="line" id="125029"><span class="nick" style="color:#80b1d3"><a href="#125029" label="[12:50:29]">&lt;OriansJ&gt;</a></span><span class="message">Like Snowball debt payments. We kill off the highest interest technical debt first and work our way down until we are all free of the bootstrapping technical debt we were all born with.</span></div><div class="line" id="125212"><span class="nick" style="color:#80b1d3"><a href="#125212" label="[12:52:12]">&lt;OriansJ&gt;</a></span><span class="message">M2-Planet + mescc-tools might not be great programming languages but they are a fuckload more portable and easier to work with than the alternatives.</span></div><div class="line" id="131007"><span class="nick" style="color:#bc80bd"><a href="#131007" label="[13:10:07]">&lt;deesix&gt;</a></span><span class="message">I guess one issue for some archs is that the compilers don't have support, because the arch is newer than the version of the compiler. So I guess one option is to bootstrap on x86 until the support is there, but does not feel elegant :/</span></div><div class="line" id="131214"><span class="nick" style="color:#80b1d3"><a href="#131214" label="[13:12:14]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well the M3 plan would solve that but would require help</span></div><div class="line" id="131308"><span class="nick" style="color:#80b1d3"><a href="#131308" label="[13:13:08]">&lt;OriansJ&gt;</a></span><span class="message">as the bootstrap path would become M2-Planet+mescc-tools-&gt;M3-&gt;GCC-&gt;everything else</span></div><div class="line" id="131428"><span class="nick" style="color:#80b1d3"><a href="#131428" label="[13:14:28]">&lt;OriansJ&gt;</a></span><span class="message">then porting to a new architecture just requires the generation of a new mescc-tools-seed and updating of 3 major pieces</span></div><div class="line" id="131429"><span class="nick" style="color:#bc80bd"><a href="#131429" label="[13:14:29]">&lt;deesix&gt;</a></span><span class="message">Another plan is to backport support to older GCC, I guess.</span></div><div class="line" id="131559"><span class="nick" style="color:#80b1d3"><a href="#131559" label="[13:15:59]">&lt;OriansJ&gt;</a></span><span class="message">deesix: there are no easily solutions here; as bootstrapping a new architecture will always require significant effort.</span></div><div class="line" id="131615"><span class="nick" style="color:#bc80bd"><a href="#131615" label="[13:16:15]">&lt;deesix&gt;</a></span><span class="message">Of course I'm not saying it's easy.</span></div><div class="line" id="131709"><span class="nick" style="color:#bc80bd"><a href="#131709" label="[13:17:09]">&lt;deesix&gt;</a></span><span class="message">... or even possible.</span></div><div class="line" id="131728"><span class="nick" style="color:#80b1d3"><a href="#131728" label="[13:17:28]">&lt;OriansJ&gt;</a></span><span class="message">It'll get easy once bootstrappable builds becomes part of everyone's build chains but that will require a lot more politics than I have the stomach for.</span></div><div class="line" id="131728"><span class="nick" style="color:#389600"><a href="#131728" label="[13:17:28]">&lt;stikonas&gt;</a></span><span class="message">everything is possible, it's just the amount of work needed</span></div><div class="line" id="131856"><span class="nick" style="color:#80b1d3"><a href="#131856" label="[13:18:56]">&lt;OriansJ&gt;</a></span><span class="message">getting it into Guix's took us 4 years of hardwork.</span></div><div class="line" id="131912"><span class="nick" style="color:#bc80bd"><a href="#131912" label="[13:19:12]">&lt;deesix&gt;</a></span><span class="message">Well, yes... you know what I mean, to the point that gcc whatever can be still called gcc with all that backport/rewrite.</span></div><div class="line" id="131921"><span class="nick" style="color:#80b1d3"><a href="#131921" label="[13:19:21]">&lt;OriansJ&gt;</a></span><span class="message">and that is with guix developers actually helping us.</span></div><div class="line" id="132004"><span class="nick" style="color:#80b1d3"><a href="#132004" label="[13:20:04]">&lt;OriansJ&gt;</a></span><span class="message">getting bootstrappable into Debian will probably be much harder</span></div><div class="line" id="132105"><span class="nick" style="color:#80b1d3"><a href="#132105" label="[13:21:05]">&lt;OriansJ&gt;</a></span><span class="message">after that it'll be all down hill</span></div><div class="line" id="132342"><span class="nick" style="color:#80b1d3"><a href="#132342" label="[13:23:42]">&lt;OriansJ&gt;</a></span><span class="message">deesix: we have done the impossible enough times to know when most people say bootstrapping is impossible, it just means they are not willing to do the required work.</span></div><div class="line" id="132429"><span class="nick" style="color:#80b1d3"><a href="#132429" label="[13:24:29]">&lt;OriansJ&gt;</a></span><span class="message">So we pick up the shit they left on the floor and solve the problems one by one until we did the impossible again.</span></div><div class="line" id="132446"><span class="nick" style="color:#6d2462"><a href="#132446" label="[13:24:46]">&lt;siraben&gt;</a></span><span class="message">OriansJ: I'm curious, how did we collectively lose the bootstraps as a society?</span></div><div class="line" id="132758"><span class="nick" style="color:#80b1d3"><a href="#132758" label="[13:27:58]">&lt;OriansJ&gt;</a></span><span class="message">siraben: people threw away things they were ashamed of or thought had no purpose.</span></div><div class="line" id="132827"><span class="nick" style="color:#234e69"><a href="#132827" label="[13:28:27]">&lt;gforce_de1977&gt;</a></span><span class="message">siraben: on the other hand it seems wise, to rely on already done stuff and concentrate on new ideas.</span></div><div class="line" id="132837"><span class="nick" style="color:#80b1d3"><a href="#132837" label="[13:28:37]">&lt;OriansJ&gt;</a></span><span class="message">why keep the code for a hex build system when you had a better optimizing assembler?</span></div><div class="line" id="132917"><span class="nick" style="color:#bc80bd"><a href="#132917" label="[13:29:17]">&lt;deesix&gt;</a></span><span class="message">wrt. the conversation of a few days ago about old/ancient versions of toolchains, I guess the context is this amazing bug hunting <a rel="nofollow" href="https://lwn.net/Articles/842122/">https://lwn.net/Articles/842122/</a> </span></div><div class="line" id="132920"><span class="nick" style="color:#6d2462"><a href="#132920" label="[13:29:20]">&lt;siraben&gt;</a></span><span class="message">In a way we're recreating all of that &quot;negative space&quot; left behind, code that was deleted or never committed, heh</span></div><div class="line" id="132927"><span class="nick" style="color:#234e69"><a href="#132927" label="[13:29:27]">&lt;gforce_de1977&gt;</a></span><span class="message">OriansJ: book, paper and program code will always be there an will not &quot;rotten&quot;</span></div><div class="line" id="132936"><span class="nick" style="color:#80b1d3"><a href="#132936" label="[13:29:36]">&lt;OriansJ&gt;</a></span><span class="message">these people were not stupid or evil. They just did not place value in the things that they no longer needed.</span></div><div class="line" id="132957"><span class="nick" style="color:#6d2462"><a href="#132957" label="[13:29:57]">&lt;siraben&gt;</a></span><span class="message">Of course</span></div><div class="line" id="133143"><span class="nick" style="color:#80b1d3"><a href="#133143" label="[13:31:43]">&lt;OriansJ&gt;</a></span><span class="message">deesix: indeed the world is moving on; letting go of the problems of the past but losing the history needed to restart correctly.</span></div><div class="line" id="133537"><span class="nick" style="color:#80b1d3"><a href="#133537" label="[13:35:37]">&lt;OriansJ&gt;</a></span><span class="message">much like the nano material manufactoring technique of the Lycurgus Cup; humanity has a bad time remembering how to do things and likes to forget leading steps.</span></div><div class="line" id="133725"><span class="nick" style="color:#389600"><a href="#133725" label="[13:37:25]">&lt;stikonas&gt;</a></span><span class="message">deesix: also free software was not bootstrapped with free software in the first place</span></div><div class="line" id="133746"><span class="nick" style="color:#6d2462"><a href="#133746" label="[13:37:46]">&lt;siraben&gt;</a></span><span class="message">Reminds me of the Collapse OS project which is aimed at providing some cushion come the apocalypse</span></div><div class="line" id="133813"><span class="nick" style="color:#80b1d3"><a href="#133813" label="[13:38:13]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: a technical debt, knowingly taken by Stallman as a sacrifice to get the FSF off the ground.</span></div><div class="line" id="133908"><span class="nick" style="color:#389600"><a href="#133908" label="[13:39:08]">&lt;stikonas&gt;</a></span><span class="message">well, there was no other way to quickly get off</span></div><div class="line" id="133935"><span class="nick" style="color:#80b1d3"><a href="#133935" label="[13:39:35]">&lt;OriansJ&gt;</a></span><span class="message">siraben: there are repeating patterns in human nature. Fear of losing everything in the future is just one pattern that keeps playing out over and over again. Rarely working together in large groups.</span></div><div class="line" id="134037"><span class="nick" style="color:#80b1d3"><a href="#134037" label="[13:40:37]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: and he couldn't have afforded the 4 year delay that we paid to get as far as we have.</span></div><div class="line" id="134125"><span class="nick" style="color:#80b1d3"><a href="#134125" label="[13:41:25]">&lt;OriansJ&gt;</a></span><span class="message">debt is sometimes a good thing to take; it sometimes even being cheaper than trying to save up to buy.</span></div><div class="line" id="134216"><span class="nick" style="color:#389600"><a href="#134216" label="[13:42:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's often the case</span></div><div class="line" id="134225"><span class="nick" style="color:#389600"><a href="#134225" label="[13:42:25]">&lt;stikonas&gt;</a></span><span class="message">not many people rent until they can save 100% for house</span></div><div class="line" id="134231"><span class="nick" style="color:#389600"><a href="#134231" label="[13:42:31]">&lt;stikonas&gt;</a></span><span class="message">that would be more expensive</span></div><div class="line" id="134232"><span class="nick" style="color:#80b1d3"><a href="#134232" label="[13:42:32]">&lt;OriansJ&gt;</a></span><span class="message">For example some religions forbid house mortgages; so the followers spend their lives saving up cash to buy the house in cash.</span></div><div class="line" id="134249"><span class="nick" style="color:#80b1d3"><a href="#134249" label="[13:42:49]">&lt;OriansJ&gt;</a></span><span class="message">And I know someone who is actually doing that right now</span></div><div class="line" id="134326"><span class="nick" style="color:#80b1d3"><a href="#134326" label="[13:43:26]">&lt;OriansJ&gt;</a></span><span class="message">Even though I showed him that it would save him $78K to just take a loan, he still refused to even consider the option.</span></div><div class="line" id="134406"><span class="nick" style="color:#80b1d3"><a href="#134406" label="[13:44:06]">&lt;OriansJ&gt;</a></span><span class="message">And that isn't even considering the rate of rising house prices in the area he wanted to live in.</span></div><div class="line" id="134420"><span class="nick" style="color:#389600"><a href="#134420" label="[13:44:20]">&lt;stikonas&gt;</a></span><span class="message">yeah, that is unfortunate...</span></div><div class="line" id="134434"><span class="nick" style="color:#80b1d3"><a href="#134434" label="[13:44:34]">&lt;OriansJ&gt;</a></span><span class="message">let alone rent increases which will certainly happen before then</span></div><div class="line" id="134558"><span class="nick" style="color:#80b1d3"><a href="#134558" label="[13:45:58]">&lt;OriansJ&gt;</a></span><span class="message">it is why I am ok with taking on tiny, low interest technical debts to clear off far more expensive high interest debts in our bootstrap.</span></div><div class="line" id="134713"><span class="nick" style="color:#80b1d3"><a href="#134713" label="[13:47:13]">&lt;OriansJ&gt;</a></span><span class="message">the blobs in blynn-compiler are small and low interst debt to solve but having a Haskell Compiler gives us a path to elimination of the high interest bootstrap debt of GHC and everything that depends upon it</span></div><div class="line" id="134858"><span class="nick" style="color:#80b1d3"><a href="#134858" label="[13:48:58]">&lt;OriansJ&gt;</a></span><span class="message">punting on Guile, having the pieces restrict themselves to a subset of r7rs scheme save a bunch of time because it might take 4 years to solve the scheme bootstrap problem but it is a static target</span></div><div class="line" id="134951"><span class="nick" style="color:#80b1d3"><a href="#134951" label="[13:49:51]">&lt;OriansJ&gt;</a></span><span class="message">and it keeps an straight path to everything thanks to the work Gnu Guix is maintaining for us</span></div><div class="line" id="135116"><span class="nick" style="color:#80b1d3"><a href="#135116" label="[13:51:16]">&lt;OriansJ&gt;</a></span><span class="message">Our efforts are better spent just assuming guile on a POSIX, getting that clean enough for all Linux distros to be able to bootstrap Guix; then solving GHC</span></div><div class="line" id="135152"><span class="nick" style="color:#80b1d3"><a href="#135152" label="[13:51:52]">&lt;OriansJ&gt;</a></span><span class="message">I know everyone just wants to be done</span></div><div class="line" id="135226"><span class="nick" style="color:#80b1d3"><a href="#135226" label="[13:52:26]">&lt;OriansJ&gt;</a></span><span class="message">but every programming language on the planet is running away from us.</span></div><div class="line" id="135246"><span class="nick" style="color:#80b1d3"><a href="#135246" label="[13:52:46]">&lt;OriansJ&gt;</a></span><span class="message">we need to catch them while we still can.</span></div><div class="line" id="135336"><span class="nick" style="color:#80b1d3"><a href="#135336" label="[13:53:36]">&lt;OriansJ&gt;</a></span><span class="message">because reconstructing those steps is a far harder problem than just recording them in guix</span></div><div class="line" id="135356"><span class="nick" style="color:#6d2462"><a href="#135356" label="[13:53:56]">&lt;siraben&gt;</a></span><span class="message">How come?</span></div><div class="line" id="135512"><span class="nick" style="color:#80b1d3"><a href="#135512" label="[13:55:12]">&lt;OriansJ&gt;</a></span><span class="message">siraben: inside the bootstrap of every new language is shame and mistakes; the very things people want to get past quickly.</span></div><div class="line" id="135524"><span class="nick" style="color:#80b1d3"><a href="#135524" label="[13:55:24]">&lt;OriansJ&gt;</a></span><span class="message">So old versions get deleted</span></div><div class="line" id="135535"><span class="nick" style="color:#80b1d3"><a href="#135535" label="[13:55:35]">&lt;OriansJ&gt;</a></span><span class="message">git histories get rewritten</span></div><div class="line" id="135622"><span class="nick" style="color:#6d2462"><a href="#135622" label="[13:56:22]">&lt;siraben&gt;</a></span><span class="message">will we be able to bootstrap golang with GCC?</span></div><div class="line" id="135630"><span class="nick" style="color:#80b1d3"><a href="#135630" label="[13:56:30]">&lt;OriansJ&gt;</a></span><span class="message">polished over by people who can't and will not allow their mistakes to haunt them.</span></div><div class="line" id="135752"><span class="nick" style="color:#80b1d3"><a href="#135752" label="[13:57:52]">&lt;OriansJ&gt;</a></span><span class="message">siraben: we already bootstrapped golang &quot;sorta&quot;; the problem is the generated bits need to be redone properly but we caught it early enough that it is a problem we can reasonably address when we get a developer to work on it</span></div><div class="line" id="135812"><span class="nick" style="color:#6d2462"><a href="#135812" label="[13:58:12]">&lt;siraben&gt;</a></span><span class="message">What's important to those devs (their past mistakes) is likely not a matter of concern for others</span></div><div class="line" id="135825"><span class="nick" style="color:#6d2462"><a href="#135825" label="[13:58:25]">&lt;siraben&gt;</a></span><span class="message">and of course makes our goal of bootstrapping a lot harder</span></div><div class="line" id="135856"><span class="nick" style="color:#80b1d3"><a href="#135856" label="[13:58:56]">&lt;OriansJ&gt;</a></span><span class="message">siraben: They don't care about our job because it isn't their job too.</span></div><div class="line" id="135926"><span class="nick" style="color:#80b1d3"><a href="#135926" label="[13:59:26]">&lt;OriansJ&gt;</a></span><span class="message">it is why Gnu Guix and the Software Heritage project have to download sources and host them *FOREVER*</span></div><div class="line" id="135954"><span class="nick" style="color:#6d2462"><a href="#135954" label="[13:59:54]">&lt;siraben&gt;</a></span><span class="message">is it also on IPFS or distributed torrents?</span></div><div class="line" id="140002"><span class="nick" style="color:#80b1d3"><a href="#140002" label="[14:00:02]">&lt;OriansJ&gt;</a></span><span class="message">people no one else is likely to keep a copy of that super essential minor release that enabled xyz required feature.</span></div><div class="line" id="140042"><span class="nick" style="color:#80b1d3"><a href="#140042" label="[14:00:42]">&lt;OriansJ&gt;</a></span><span class="message">siraben: I think there was discussion about adding support for IPFS into Guix but I don't think anyone actually got it working yet.</span></div><div class="line" id="140103"><span class="nick" style="color:#80b1d3"><a href="#140103" label="[14:01:03]">&lt;OriansJ&gt;</a></span><span class="message">but it wouldn't be too hard to just run IPFS on your /gnu/store</span></div><div class="line" id="140122"><span class="nick" style="color:#389600"><a href="#140122" label="[14:01:22]">&lt;stikonas&gt;</a></span><span class="message">siraben: golang is quit easy to bootstrap</span></div><div class="line" id="140123"><span class="nick" style="color:#80b1d3"><a href="#140123" label="[14:01:23]">&lt;OriansJ&gt;</a></span><span class="message">I think I even have a version of IPFS written in C somewhere too</span></div><div class="line" id="140144"><span class="nick" style="color:#389600"><a href="#140144" label="[14:01:44]">&lt;stikonas&gt;</a></span><span class="message">especially on older arches where you can build golang 1.4 with C and then jump to latest golang</span></div><div class="line" id="140154"><span class="nick" style="color:#389600"><a href="#140154" label="[14:01:54]">&lt;stikonas&gt;</a></span><span class="message">other arches can be bootstrapped via gccgo</span></div><div class="line" id="140340"><span class="nick" style="color:#234e69"><a href="#140340" label="[14:03:40]">&lt;gforce_de1977&gt;</a></span><span class="message">fossy: i just checked, and Autoconf seems to emit shell-scripts for posix-shells (no bashisms), just for the record</span></div><div class="line" id="140352"><span class="nick" style="color:#80b1d3"><a href="#140352" label="[14:03:52]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/Agorise/c-ipfs.git">https://github.com/Agorise/c-ipfs.git</a>  (you'll want to do git clone --recursive)</span></div><div class="line" id="140442"><span class="nick" style="color:#389600"><a href="#140442" label="[14:04:42]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: which autoconf? we'll likely use old autoconf</span></div><div class="line" id="140518"><span class="nick" style="color:#389600"><a href="#140518" label="[14:05:18]">&lt;stikonas&gt;</a></span><span class="message">but in any case, I think rootfs.sh is better candidate from cleaning bashisms than things in actual bootstrap</span></div><div class="line" id="140524"><span class="nick" style="color:#389600"><a href="#140524" label="[14:05:24]">&lt;stikonas&gt;</a></span><span class="message">we don't have many anyway</span></div><div class="line" id="140600"><span class="nick" style="color:#6d2462"><a href="#140600" label="[14:06:00]">&lt;siraben&gt;</a></span><span class="message">OriansJ: nice</span></div><div class="line" id="140619"><span class="nick" style="color:#6d2462"><a href="#140619" label="[14:06:19]">&lt;siraben&gt;</a></span><span class="message">C, for all its quirks, pitfalls and poor design choices, when simplified, is a great bootstrapping language</span></div><div class="line" id="140710"><span class="nick" style="color:#6d2462"><a href="#140710" label="[14:07:10]">&lt;siraben&gt;</a></span><span class="message">I was surprised from the start to see that Forth programmers haven't put in the work to show how Forth can be used as a bootstrapping language</span></div><div class="line" id="141201"><span class="nick" style="color:#80b1d3"><a href="#141201" label="[14:12:01]">&lt;OriansJ&gt;</a></span><span class="message">siraben: they did for a little bit and just gave up</span></div><div class="line" id="141214"><span class="nick" style="color:#6d2462"><a href="#141214" label="[14:12:14]">&lt;siraben&gt;</a></span><span class="message">How come?</span></div><div class="line" id="141313"><span class="nick" style="color:#80b1d3"><a href="#141313" label="[14:13:13]">&lt;OriansJ&gt;</a></span><span class="message">siraben: they didn't say. They just stopped contributing when they hit the part of FORTH where you have to encode assembly instructions to get stuff done</span></div><div class="line" id="141400"><span class="nick" style="color:#80b1d3"><a href="#141400" label="[14:14:00]">&lt;OriansJ&gt;</a></span><span class="message">: JUMP-TO, 0x3C000008 , , 0x2E60FFFC , 0x0D010000 , ; just isn't that portable now is it?</span></div><div class="line" id="141409"><span class="nick" style="color:#80b1d3"><a href="#141409" label="[14:14:09]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0/blob/master/stage3/inital_library.fs">https://github.com/oriansj/stage0/blob/master/stage3/inital_library.fs</a> </span></div><div class="line" id="141539"><span class="nick" style="color:#80b1d3"><a href="#141539" label="[14:15:39]">&lt;OriansJ&gt;</a></span><span class="message">Thus the really short version is FORTH isn't actually portable</span></div><div class="line" id="141612"><span class="nick" style="color:#80b1d3"><a href="#141612" label="[14:16:12]">&lt;OriansJ&gt;</a></span><span class="message">and it requires far more primitives than even C does</span></div><div class="line" id="141715"><span class="nick" style="color:#80b1d3"><a href="#141715" label="[14:17:15]">&lt;OriansJ&gt;</a></span><span class="message">Interpreters are always a harder program than Compilers to get right and far less forgiving too.</span></div><div class="line" id="142344"><span class="nick" style="color:#6d2462"><a href="#142344" label="[14:23:44]">&lt;siraben&gt;</a></span><span class="message">Right</span></div><div class="line" id="142405"><span class="nick" style="color:#80b1d3"><a href="#142405" label="[14:24:05]">&lt;OriansJ&gt;</a></span><span class="message">xentrac did an amazing job with stone-knife FORTH but eventually opcodes still has to show up eventually.</span></div><div class="line" id="142526"><span class="nick" style="color:#80b1d3"><a href="#142526" label="[14:25:26]">&lt;OriansJ&gt;</a></span><span class="message">as mes.c and mes-m2 and countless other scheme interpreters have shown; there are no magic languages that make bootstrapping easy.</span></div><div class="line" id="142615"><span class="nick" style="color:#80b1d3"><a href="#142615" label="[14:26:15]">&lt;OriansJ&gt;</a></span><span class="message">Only bits that are easier to bootstrap than others or able to attract enough developers where it stops being a problem.</span></div><div class="line" id="142802"><span class="nick" style="color:#80b1d3"><a href="#142802" label="[14:28:02]">&lt;OriansJ&gt;</a></span><span class="message">cc_* was easier than FORTH or Scheme but gash+gash-utils attracted more developers</span></div><div class="line" id="143518"><span class="nick" style="color:#389600"><a href="#143518" label="[14:35:18]">&lt;stikonas&gt;</a></span><span class="message">what about <a rel="nofollow" href="https://raw.githubusercontent.com/peterferrie/brainfuck/master/brainfuck_nc.asm">https://raw.githubusercontent.com/peterferrie/brainfuck/master/brainfuck_nc.asm</a>  :D only 100 bytes</span></div><div class="line" id="144035"><span class="nick" style="color:#389600"><a href="#144035" label="[14:40:35]">&lt;stikonas&gt;</a></span><span class="message">argh, I might want to scale down on subshells in bootstrap...</span></div><div class="line" id="144052"><span class="nick" style="color:#389600"><a href="#144052" label="[14:40:52]">&lt;stikonas&gt;</a></span><span class="message">bash-2.05b doesn't seem to support -E, so I can't error out nicely</span></div><div class="line" id="144059"><span class="nick" style="color:#389600"><a href="#144059" label="[14:40:59]">&lt;stikonas&gt;</a></span><span class="message">from a few subshells in</span></div><div class="line" id="145727"><span class="nick" style="color:#389600"><a href="#145727" label="[14:57:27]">&lt;stikonas&gt;</a></span><span class="message">ok, I think a bit ugly but working solution is to kill shell with kill $$</span></div><div class="line" id="151753"><span class="nick" style="color:#80b1d3"><a href="#151753" label="[15:17:53]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: if you wish to bootstrap a C compiler from brainfuck; no one here will stop you. As whoever does decides. But int 0x21 indicates DOS and I don 't see a read anywhere; so it is likely a DEBUG.com load with file contents put into memory (thus larger than 100bytes)</span></div><div class="line" id="151905"><span class="nick" style="color:#389600"><a href="#151905" label="[15:19:05]">&lt;stikonas&gt;</a></span><span class="message">no, I'm not bootstrapping C from BF. I don't think it would be readable even if somebody does it</span></div><div class="line" id="151912"><span class="nick" style="color:#389600"><a href="#151912" label="[15:19:12]">&lt;stikonas&gt;</a></span><span class="message">bootstrap should be readable</span></div><div class="line" id="160118"><span class="nick" style="color:#3c5b35"><a href="#160118" label="[16:01:18]">&lt;theruran&gt;</a></span><span class="message">so GNAT Ada has a bootstrap problem? Does it mean a mes/Guile compiler should be written?</span></div><div class="line" id="160428"><span class="nick" style="color:#3c5b35"><a href="#160428" label="[16:04:28]">&lt;theruran&gt;</a></span><span class="message">Ada compiler written in Guile/mes*</span></div><div class="line" id="160638"><span class="nick" style="color:#80b1d3"><a href="#160638" label="[16:06:38]">&lt;OriansJ&gt;</a></span><span class="message">theruran: does GCC not support Ada enough to support it?</span></div><div class="line" id="160723"><span class="nick" style="color:#3c5b35"><a href="#160723" label="[16:07:23]">&lt;theruran&gt;</a></span><span class="message">I guess it needs Ada to build! so GNAT is not available in Guix or Nix :/</span></div><div class="line" id="161043"><span class="nick" style="color:#80b1d3"><a href="#161043" label="[16:10:43]">&lt;OriansJ&gt;</a></span><span class="message">I guess that info needs to be added to: <a rel="nofollow" href="https://bootstrapping.miraheze.org/wiki/Boostrapping_Specific_Languages">https://bootstrapping.miraheze.org/wiki/Boostrapping_Specific_Languages</a>  as a TODO</span></div><div class="line" id="161312"><span class="nick" style="color:#3c5b35"><a href="#161312" label="[16:13:12]">&lt;theruran&gt;</a></span><span class="message">got it</span></div><div class="line" id="161458"><span class="nick" style="color:#80b1d3"><a href="#161458" label="[16:14:58]">&lt;OriansJ&gt;</a></span><span class="message">as we find unbootstrappable from C languages, all we can really do is document that they can't be bootstrapped and what is currently known that might help someone sort out that problem and then document the solution.</span></div><div class="line" id="161707"><span class="nick" style="color:#80b1d3"><a href="#161707" label="[16:17:07]">&lt;OriansJ&gt;</a></span><span class="message">enable the Guix community to build out proper bootstrap chains that they will maintain, while we go after the next bootstrapping problem for them.</span></div><div class="line" id="161842"><span class="nick" style="color:#3c5b35"><a href="#161842" label="[16:18:42]">&lt;theruran&gt;</a></span><span class="message">I am looking at the Gentoo ebuild for clues</span></div><div class="line" id="161944"><span class="nick" style="color:#80b1d3"><a href="#161944" label="[16:19:44]">&lt;OriansJ&gt;</a></span><span class="message">blobs and pre-generated &quot;code&quot; is usually what we find.</span></div><div class="line" id="162012"><span class="nick" style="color:#3c5b35"><a href="#162012" label="[16:20:12]">&lt;theruran&gt;</a></span><span class="message">if use bootstrap; then GCC=...gnat-gpl-2014-x86_64-linux-bin...</span></div><div class="line" id="162114"><span class="nick" style="color:#80b1d3"><a href="#162114" label="[16:21:14]">&lt;OriansJ&gt;</a></span><span class="message">But we are like force Recon here; we lack the fire power to take on a hardened target but we can punch holes in bootstrapping problems to the point that a more conventional force can finish them off for us.</span></div><div class="line" id="163139"><span class="nick" style="color:#3c5b35"><a href="#163139" label="[16:31:39]">&lt;theruran&gt;</a></span><span class="message">OriansJ: how goes the Haskell bootstrap?</span></div><div class="line" id="163235"><span class="nick" style="color:#6c3d55"><a href="#163235" label="[16:32:35]">&lt;bauen1&gt;</a></span><span class="message">actually having an overview of every non-bootstrappable (or cyclic dependency) is already very valuable on its own</span></div><div class="line" id="163324"><span class="nick" style="color:#80b1d3"><a href="#163324" label="[16:33:24]">&lt;OriansJ&gt;</a></span><span class="message">theruran: Haskell doesn't bootstrap yet, it still depends on a GHC binary seed in guix</span></div><div class="line" id="163410"><span class="nick" style="color:#af8d2f"><a href="#163410" label="[16:34:10]">&lt;malina&gt;</a></span><span class="message">OriansJ, unfortunately one can't bootstrap Ada in its entirety, it's closed source</span></div><div class="line" id="163437"><span class="nick" style="color:#af8d2f"><a href="#163437" label="[16:34:37]">&lt;malina&gt;</a></span><span class="message">so it's not something one would want, in a gnu centric (guix) kinda env anyway. (Unfortunately). it SEEMS that Dlang however</span></div><div class="line" id="163448"><span class="nick" style="color:#80b1d3"><a href="#163448" label="[16:34:48]">&lt;OriansJ&gt;</a></span><span class="message">malina: not an acceptable answer.</span></div><div class="line" id="163452"><span class="nick" style="color:#3c5b35"><a href="#163452" label="[16:34:52]">&lt;theruran&gt;</a></span><span class="message">OriansJ: I was referring to your Blynn compiler</span></div><div class="line" id="163454"><span class="nick" style="color:#af8d2f"><a href="#163454" label="[16:34:54]">&lt;malina&gt;</a></span><span class="message">which also needed the closed backend, somehow now works withougt.</span></div><div class="line" id="163459"><span class="nick" style="color:#af8d2f"><a href="#163459" label="[16:34:59]">&lt;malina&gt;</a></span><span class="message">sorry, why not acceptable?</span></div><div class="line" id="163513"><span class="nick" style="color:#af8d2f"><a href="#163513" label="[16:35:13]">&lt;malina&gt;</a></span><span class="message">I am just stating what Ada is. . it's not an open source seed</span></div><div class="line" id="163520"><span class="nick" style="color:#80b1d3"><a href="#163520" label="[16:35:20]">&lt;OriansJ&gt;</a></span><span class="message">malina: if GCC-Ada isn't source what is?</span></div><div class="line" id="163530"><span class="nick" style="color:#af8d2f"><a href="#163530" label="[16:35:30]">&lt;malina&gt;</a></span><span class="message">it NEEDS ada to boostrap itself</span></div><div class="line" id="163540"><span class="nick" style="color:#af8d2f"><a href="#163540" label="[16:35:40]">&lt;malina&gt;</a></span><span class="message">actually.. gcc ada has _never_ had a full source bootstrap</span></div><div class="line" id="163549"><span class="nick" style="color:#80b1d3"><a href="#163549" label="[16:35:49]">&lt;OriansJ&gt;</a></span><span class="message">malina: and GCC needs a C compiler to bootstrap itself</span></div><div class="line" id="163557"><span class="nick" style="color:#af8d2f"><a href="#163557" label="[16:35:57]">&lt;malina&gt;</a></span><span class="message">it's a frontend which used Ada to build itself. again, as I say.. unfortunately.</span></div><div class="line" id="163613"><span class="nick" style="color:#af8d2f"><a href="#163613" label="[16:36:13]">&lt;malina&gt;</a></span><span class="message">yes, but my point is, you NEED access to Ada's source code then, you won't get it</span></div><div class="line" id="163616"><span class="nick" style="color:#af8d2f"><a href="#163616" label="[16:36:16]">&lt;malina&gt;</a></span><span class="message">it's not open source....</span></div><div class="line" id="163641"><span class="nick" style="color:#af8d2f"><a href="#163641" label="[16:36:41]">&lt;malina&gt;</a></span><span class="message">this is just me telling you.. I am not with Ada or anything you know</span></div><div class="line" id="163644"><span class="nick" style="color:#80b1d3"><a href="#163644" label="[16:36:44]">&lt;OriansJ&gt;</a></span><span class="message">malina: the problem is how to build it from the sources we have</span></div><div class="line" id="163659"><span class="nick" style="color:#80b1d3"><a href="#163659" label="[16:36:59]">&lt;OriansJ&gt;</a></span><span class="message">not the sources we don't and will not have</span></div><div class="line" id="163702"><span class="nick" style="color:#af8d2f"><a href="#163702" label="[16:37:02]">&lt;malina&gt;</a></span><span class="message">the way gcc builds it is</span></div><div class="line" id="163709"><span class="nick" style="color:#af8d2f"><a href="#163709" label="[16:37:09]">&lt;malina&gt;</a></span><span class="message">grab a seed from Ada core company thing</span></div><div class="line" id="163715"><span class="nick" style="color:#af8d2f"><a href="#163715" label="[16:37:15]">&lt;malina&gt;</a></span><span class="message">then use that to build the gcc-ada front end</span></div><div class="line" id="163822"><span class="nick" style="color:#af8d2f"><a href="#163822" label="[16:38:22]">&lt;malina&gt;</a></span><span class="message">dlang used to be closed binary too, the backend, but I managed to build it in the cross I did recently and I am think it has changed and become fully open.. although I am not 100% sure, if it took something from my host.</span></div><div class="line" id="163859"><span class="nick" style="color:#80b1d3"><a href="#163859" label="[16:38:59]">&lt;OriansJ&gt;</a></span><span class="message">malina: Document exactly the problems with Ada in the wiki so that we can address them until the bootstrap problem is solved.</span></div><div class="line" id="163909"><span class="nick" style="color:#af8d2f"><a href="#163909" label="[16:39:09]">&lt;malina&gt;</a></span><span class="message">OriansJ, yes, I was simply trying to help ... w.r.t. Ada once you have gcc you will have the gcc-ada.</span></div><div class="line" id="163922"><span class="nick" style="color:#3c5b35"><a href="#163922" label="[16:39:22]">&lt;theruran&gt;</a></span><span class="message">There are some experimental Ada compilers written in Ada..</span></div><div class="line" id="163930"><span class="nick" style="color:#af8d2f"><a href="#163930" label="[16:39:30]">&lt;malina&gt;</a></span><span class="message">you guys seeminly show me a cold shoulder, and I have no idea how to use a wiki, I simply tried to giveyou a beneficial advice but</span></div><div class="line" id="163943"><span class="nick" style="color:#af8d2f"><a href="#163943" label="[16:39:43]">&lt;malina&gt;</a></span><span class="message">theruran, ye, I wuldn't know.. I was simply being informative sigh.</span></div><div class="line" id="163944"><span class="nick" style="color:#3c5b35"><a href="#163944" label="[16:39:44]">&lt;theruran&gt;</a></span><span class="message">I'm wondering how big the closed-source seed is, and what it does</span></div><div class="line" id="163952"><span class="nick" style="color:#80b1d3"><a href="#163952" label="[16:39:52]">&lt;OriansJ&gt;</a></span><span class="message">We are not giving up on bootstrapping any language;</span></div><div class="line" id="164014"><span class="nick" style="color:#3c5b35"><a href="#164014" label="[16:40:14]">&lt;theruran&gt;</a></span><span class="message">I am adding a simple note to that wiki page</span></div><div class="line" id="164018"><span class="nick" style="color:#80b1d3"><a href="#164018" label="[16:40:18]">&lt;OriansJ&gt;</a></span><span class="message">malina: a wiki in this case is just a text file you add Ascii text to</span></div><div class="line" id="164034"><span class="nick" style="color:#af8d2f"><a href="#164034" label="[16:40:34]">&lt;malina&gt;</a></span><span class="message">good question. I wanted ot write my PM (package manager) in Ada once, but ye, it's not open. Ravenports, which is a very good,ubiquitous posix package manager is written in Ada, but</span></div><div class="line" id="164130"><span class="nick" style="color:#80b1d3"><a href="#164130" label="[16:41:30]">&lt;OriansJ&gt;</a></span><span class="message">malina: specific facts that are verifiable and directly related to the bootstrap of GCC-Ada please</span></div><div class="line" id="164140"><span class="nick" style="color:#af8d2f"><a href="#164140" label="[16:41:40]">&lt;malina&gt;</a></span><span class="message">I am fairly certain you know more than I do about gcc bootstrapping. Again, it did seem like maybe you missed that Ada is a closed source language, which gcc has, and maintains, a front end to. That's all, That's all I have to say.</span></div><div class="line" id="164229"><span class="nick" style="color:#3c5b35"><a href="#164229" label="[16:42:29]">&lt;theruran&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.gnu.org/software/gnat/">https://www.gnu.org/software/gnat/</a>  just refers to the GCC pages</span></div><div class="line" id="164243"><span class="nick" style="color:#80b1d3"><a href="#164243" label="[16:42:43]">&lt;OriansJ&gt;</a></span><span class="message">Ok, so we have a potential bootstrap problem with Ada that needs to be confirmed and the exact issue needs to be documented in a fashion that others can verify and could potentially start working on.</span></div><div class="line" id="164718"><span class="nick" style="color:#80b1d3"><a href="#164718" label="[16:47:18]">&lt;OriansJ&gt;</a></span><span class="message">FUD doesn't help solve the problem but clear and easily verifiable facts that we can address in a structured fashion.</span></div><div class="line" id="164829"><span class="nick" style="color:#af8d2f"><a href="#164829" label="[16:48:29]">&lt;malina&gt;</a></span><span class="message"> <a rel="nofollow" href="http://www.linuxfromscratch.org/blfs/view/8.3/general/gcc-ada.html">http://www.linuxfromscratch.org/blfs/view/8.3/general/gcc-ada.html</a>  &lt;- the 2nd paragraph exemplifies the isssue. When bootstrapping my distro, I certinaly could not do ada from pure sources, so it's a &quot;bad boy&quot; as far as I am concerned. But maybe things change or you can access the full sources of the process. I wasn't aware of this then.</span></div><div class="line" id="164857"><span class="nick" style="color:#af8d2f"><a href="#164857" label="[16:48:57]">&lt;malina&gt;</a></span><span class="message">fine, if you call it FUD, fine. not gonna say a single hting here more then</span></div><div class="line" id="164902"><span class="nick" style="color:#af8d2f"><a href="#164902" label="[16:49:02]">&lt;malina&gt;</a></span><span class="message">what a twat</span></div><div class="line" id="165652"><span class="nick" style="color:#80b1d3"><a href="#165652" label="[16:56:52]">&lt;OriansJ&gt;</a></span><span class="message">ok, so yes GCC-Ada needs an Ada compiler; let us see what we can find that might help address that issue.</span></div><div class="line" id="165943"><span class="nick" style="color:#80b1d3"><a href="#165943" label="[16:59:43]">&lt;OriansJ&gt;</a></span><span class="message">malina: thank you for that specific bit of information. However please refrain from personal attacks; it doesn't generally promote cooperation.</span></div><div class="line" id="170120"><span class="nick" style="color:#3c5b35"><a href="#170120" label="[17:01:20]">&lt;theruran&gt;</a></span><span class="message">alright, I added a few notes here: <a rel="nofollow" href="https://bootstrapping.miraheze.org/wiki/Bootstrapping_Specific_Languages#Ada_and_SPARK">https://bootstrapping.miraheze.org/wiki/Bootstrapping_Specific_Languages#Ada_and_SPARK</a> </span></div><div class="line" id="170617"><span class="nick" style="color:#389600"><a href="#170617" label="[17:06:17]">&lt;pabs3&gt;</a></span><span class="message">(malina left the channel after their last comment)</span></div><div class="line" id="171006"><span class="nick" style="color:#8dd3c7"><a href="#171006" label="[17:10:06]">&lt;rain1&gt;</a></span><span class="message">that is good information thanks for adding it theruran</span></div><div class="line" id="171246"><span class="nick" style="color:#3c5b35"><a href="#171246" label="[17:12:46]">&lt;theruran&gt;</a></span><span class="message">👍 and there's a few Ada compilers on GitHub written in Java, Python, C, ...</span></div><div class="line" id="171304"><span class="nick" style="color:#8dd3c7"><a href="#171304" label="[17:13:04]">&lt;rain1&gt;</a></span><span class="message">nice!</span></div><div class="line" id="171527"><span class="nick" style="color:#3c5b35"><a href="#171527" label="[17:15:27]">&lt;theruran&gt;</a></span><span class="message">yeah, quite a few, in various states, typically from university compiler courses</span></div><div class="line" id="171545"><span class="nick" style="color:#389600"><a href="#171545" label="[17:15:45]">&lt;stikonas&gt;</a></span><span class="message">anyway, circular dependency doesn't mean something is closed source</span></div><div class="line" id="171610"><span class="nick" style="color:#8dd3c7"><a href="#171610" label="[17:16:10]">&lt;rain1&gt;</a></span><span class="message">yeah it just means it is not yet bootstrappable</span></div><div class="line" id="173722"><span class="nick" style="color:#3c5b35"><a href="#173722" label="[17:37:22]">&lt;theruran&gt;</a></span><span class="message">this translator/interpreter looks the most complete I've found so far, written in C, from New York University, GPLv2: <a rel="nofollow" href="https://github.com/daveshields/AdaEd">https://github.com/daveshields/AdaEd</a> </span></div><div class="line" id="173800"><span class="nick" style="color:#3c5b35"><a href="#173800" label="[17:38:00]">&lt;theruran&gt;</a></span><span class="message">and there's a compiler for the Pascal subset of Ada with Ada tasking from the source linked in that AdaEd commit message: <a rel="nofollow" href="https://web.archive.org/web/20181018033600/http://www2.informatik.uni-stuttgart.de/iste/ps/ada-software/html/dos_ada.html">https://web.archive.org/web/20181018033600/http://www2.informatik.uni-stuttgart.de/iste/ps/ada-software/html/dos_ada.html</a> </span></div><div class="line" id="174430"><span class="nick" style="color:#80b1d3"><a href="#174430" label="[17:44:30]">&lt;OriansJ&gt;</a></span><span class="message">now that is really useful info theruran thank you.</span></div><div class="line" id="175910"><span class="nick" style="color:#80b1d3"><a href="#175910" label="[17:59:10]">&lt;OriansJ&gt;</a></span><span class="message">This seems much more solvable of a problem. Probably need someone to spend a week or two to find the key points that might be missing; get the working bits into Guix and then update the wiki with any remaining work needed for bootstrapping.</span></div><div class="line" id="180120"><span class="nick" style="color:#80b1d3"><a href="#180120" label="[18:01:20]">&lt;OriansJ&gt;</a></span><span class="message">hmm guix has gnu/packages/ada.scm</span></div><div class="line" id="180302"><span class="nick" style="color:#80b1d3"><a href="#180302" label="[18:03:02]">&lt;OriansJ&gt;</a></span><span class="message">and ada-ed is already bootstrapped in there by the looks of it</span></div><div class="line" id="180521"><span class="nick" style="color:#80b1d3"><a href="#180521" label="[18:05:21]">&lt;OriansJ&gt;</a></span><span class="message">which looks like it was the first Ada in the chain of Gnat: <a rel="nofollow" href="https://en.wikipedia.org/wiki/Gnu_ada">https://en.wikipedia.org/wiki/Gnu_ada</a> </span></div><div class="line" id="180551"><span class="nick" style="color:#80b1d3"><a href="#180551" label="[18:05:51]">&lt;OriansJ&gt;</a></span><span class="message">So it might just be a matter of finding the newest version of Ada that can be built with it and repeating until the chain is complete.</span></div><div class="line" id="180605"><span class="nick" style="color:#80b1d3"><a href="#180605" label="[18:06:05]">&lt;OriansJ&gt;</a></span><span class="message">So perhaps only a couple days work</span></div><div class="line" id="180728"><span class="nick" style="color:#80b1d3"><a href="#180728" label="[18:07:28]">&lt;OriansJ&gt;</a></span><span class="message">So one can probably skip doing a Mes/Ada probably and do a Guix/Ada bootstrap tree and then we can put that potential bootstrap problem to rest forever.</span></div><div class="line" id="180812"><span class="nick" style="color:#2e2a4a"><a href="#180812" label="[18:08:12]">&lt;Hagfish&gt;</a></span><span class="message">&quot;The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable.&quot;</span></div><div class="line" id="180824"><span class="nick" style="color:#2e2a4a"><a href="#180824" label="[18:08:24]">&lt;Hagfish&gt;</a></span><span class="message">at what point can we say that the GPL requires bootstrappability?</span></div><div class="line" id="180904"><span class="nick" style="color:#2e2a4a"><a href="#180904" label="[18:09:04]">&lt;Hagfish&gt;</a></span><span class="message">if not because a bootstrap path is &quot;the preferred form of the work&quot;, then because it is the source code &quot;used to control compilation&quot;?</span></div><div class="line" id="180938"><span class="nick" style="color:#80b1d3"><a href="#180938" label="[18:09:38]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: well that would cause a great deal of trouble real fast for every Distro that isn't Guix</span></div><div class="line" id="180954"><span class="nick" style="color:#2e2a4a"><a href="#180954" label="[18:09:54]">&lt;Hagfish&gt;</a></span><span class="message">and you're saying that's a bad thing? ;)</span></div><div class="line" id="181007"><span class="nick" style="color:#80b1d3"><a href="#181007" label="[18:10:07]">&lt;OriansJ&gt;</a></span><span class="message">No but a hard political move</span></div><div class="line" id="181013"><span class="nick" style="color:#2e2a4a"><a href="#181013" label="[18:10:13]">&lt;Hagfish&gt;</a></span><span class="message">indeed</span></div><div class="line" id="181033"><span class="nick" style="color:#80b1d3"><a href="#181033" label="[18:10:33]">&lt;OriansJ&gt;</a></span><span class="message">Now FSF and GNU should make it strictly required per policy</span></div><div class="line" id="181051"><span class="nick" style="color:#80b1d3"><a href="#181051" label="[18:10:51]">&lt;OriansJ&gt;</a></span><span class="message">as we need a hard line there</span></div><div class="line" id="181054"><span class="nick" style="color:#2e2a4a"><a href="#181054" label="[18:10:54]">&lt;Hagfish&gt;</a></span><span class="message">yeah</span></div><div class="line" id="181140"><span class="nick" style="color:#80b1d3"><a href="#181140" label="[18:11:40]">&lt;OriansJ&gt;</a></span><span class="message">but I have gotten no response of any kind from gnueval@ in regards to getting Gnu bootstrap seeds into Gnu as an official project.</span></div><div class="line" id="181215"><span class="nick" style="color:#80b1d3"><a href="#181215" label="[18:12:15]">&lt;OriansJ&gt;</a></span><span class="message">So the question becomes how will they take the expectation internally.</span></div><div class="line" id="181238"><span class="nick" style="color:#2e2a4a"><a href="#181238" label="[18:12:38]">&lt;Hagfish&gt;</a></span><span class="message">if Gnu accepted it, they might start to be more militant about interpreting the license that way</span></div><div class="line" id="181250"><span class="nick" style="color:#2e2a4a"><a href="#181250" label="[18:12:50]">&lt;Hagfish&gt;</a></span><span class="message">&quot;However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.&quot;</span></div><div class="line" id="181321"><span class="nick" style="color:#2e2a4a"><a href="#181321" label="[18:13:21]">&lt;Hagfish&gt;</a></span><span class="message">if a compiler depends on a binary of itself, then does the &quot;special exception&quot; apply or not?</span></div><div class="line" id="181328"><span class="nick" style="color:#2e2a4a"><a href="#181328" label="[18:13:28]">&lt;Hagfish&gt;</a></span><span class="message">bit of a philosophical question</span></div><div class="line" id="181412"><span class="nick" style="color:#80b1d3"><a href="#181412" label="[18:14:12]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: well not entirely if cross-platform builds are put into consideration.</span></div><div class="line" id="181421"><span class="nick" style="color:#2e2a4a"><a href="#181421" label="[18:14:21]">&lt;Hagfish&gt;</a></span><span class="message">ah, good point</span></div><div class="line" id="181438"><span class="nick" style="color:#80b1d3"><a href="#181438" label="[18:14:38]">&lt;OriansJ&gt;</a></span><span class="message">As we will never have the source for Windows but we should have software that can run on Windows.</span></div><div class="line" id="181531"><span class="nick" style="color:#80b1d3"><a href="#181531" label="[18:15:31]">&lt;OriansJ&gt;</a></span><span class="message">So as long as we can build from Gnu sources everything; it should be perfectly acceptable.</span></div><div class="line" id="181557"><span class="nick" style="color:#80b1d3"><a href="#181557" label="[18:15:57]">&lt;OriansJ&gt;</a></span><span class="message">If we have the source and can build it in guix, it should be clear and valid.</span></div><div class="line" id="181631"><span class="nick" style="color:#80b1d3"><a href="#181631" label="[18:16:31]">&lt;OriansJ&gt;</a></span><span class="message">But if guix can't build it even with the cross-platform build behavior, it might be a valid issue.</span></div><div class="line" id="181704"><span class="nick" style="color:#80b1d3"><a href="#181704" label="[18:17:04]">&lt;OriansJ&gt;</a></span><span class="message">So depending on non-free libraries might actually be something to crack down upon.</span></div><div class="line" id="181813"><span class="nick" style="color:#80b1d3"><a href="#181813" label="[18:18:13]">&lt;OriansJ&gt;</a></span><span class="message">So you can say that GPLv3+ program can't depend on that binary blob library but it can be built to run on that binary blob system as a matter of freedom.</span></div><div class="line" id="181929"><span class="nick" style="color:#2e2a4a"><a href="#181929" label="[18:19:29]">&lt;Hagfish&gt;</a></span><span class="message">i think the idea of running Free software on non-Free platforms was a compromise that the FSF accepted from the start</span></div><div class="line" id="182044"><span class="nick" style="color:#80b1d3"><a href="#182044" label="[18:20:44]">&lt;OriansJ&gt;</a></span><span class="message">and one maintained to help those people escape, nothing more</span></div><div class="line" id="182138"><span class="nick" style="color:#80b1d3"><a href="#182138" label="[18:21:38]">&lt;OriansJ&gt;</a></span><span class="message">But the age of depending on binary blobs in our build process is over.</span></div><div class="line" id="182207"><span class="nick" style="color:#2e2a4a"><a href="#182207" label="[18:22:07]">&lt;Hagfish&gt;</a></span><span class="message">it's like a second renaissance for Free software</span></div><div class="line" id="182257"><span class="nick" style="color:#80b1d3"><a href="#182257" label="[18:22:57]">&lt;OriansJ&gt;</a></span><span class="message">well we need Gnu to take the newly created bootstrap powers to heart.</span></div><div class="line" id="182330"><span class="nick" style="color:#80b1d3"><a href="#182330" label="[18:23:30]">&lt;OriansJ&gt;</a></span><span class="message">Get bootstrapping a core value in Gnu and then start chipping away at all that remain.</span></div><div class="line" id="182356"><span class="nick" style="color:#2e2a4a"><a href="#182356" label="[18:23:56]">&lt;Hagfish&gt;</a></span><span class="message">yup, that will be a good sustainability milestone</span></div><div class="line" id="182424"><span class="nick" style="color:#80b1d3"><a href="#182424" label="[18:24:24]">&lt;OriansJ&gt;</a></span><span class="message">Everytime a new language shows up, we get its bootstrap into Guix or hammer it until we can get it properly bootstrapped.</span></div><div class="line" id="182501"><span class="nick" style="color:#80b1d3"><a href="#182501" label="[18:25:01]">&lt;OriansJ&gt;</a></span><span class="message">No more compromise for software; source only builds</span></div><div class="line" id="182629"><span class="nick" style="color:#80b1d3"><a href="#182629" label="[18:26:29]">&lt;OriansJ&gt;</a></span><span class="message">Guix will need to make the generation of their bootstrap binaries more trivial for third parties but we are miles ahead of where we were 4 years ago.</span></div><div class="line" id="182635"><span class="nick" style="color:#2e2a4a"><a href="#182635" label="[18:26:35]">&lt;Hagfish&gt;</a></span><span class="message">for a long time, i thought that the goal of bootstrappability would be mostly achieved by Rob Landley, who is extremely talented and has some views i respect, but also has an odd opposition to the GPL</span></div><div class="line" id="182821"><span class="nick" style="color:#80b1d3"><a href="#182821" label="[18:28:21]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: all great progress comes at the cost of countless people who's contributions to the cause get lost in the sands of time.</span></div><div class="line" id="182915"><span class="nick" style="color:#2e2a4a"><a href="#182915" label="[18:29:15]">&lt;Hagfish&gt;</a></span><span class="message">standing on the shoulders of invisible giants?</span></div><div class="line" id="182932"><span class="nick" style="color:#80b1d3"><a href="#182932" label="[18:29:32]">&lt;OriansJ&gt;</a></span><span class="message">What matters is that the struggle for Freedom remains active and pushing towards new heights.</span></div><div class="line" id="182940"><span class="nick" style="color:#80b1d3"><a href="#182940" label="[18:29:40]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: indeed.</span></div><div class="line" id="182955"><span class="nick" style="color:#80b1d3"><a href="#182955" label="[18:29:55]">&lt;OriansJ&gt;</a></span><span class="message">We are not going to stop with just software</span></div><div class="line" id="183004"><span class="nick" style="color:#80b1d3"><a href="#183004" label="[18:30:04]">&lt;OriansJ&gt;</a></span><span class="message">We are going to go into hardware</span></div><div class="line" id="183021"><span class="nick" style="color:#80b1d3"><a href="#183021" label="[18:30:21]">&lt;OriansJ&gt;</a></span><span class="message">and carve a path so wide the world can't ignore</span></div><div class="line" id="183138"><span class="nick" style="color:#80b1d3"><a href="#183138" label="[18:31:38]">&lt;OriansJ&gt;</a></span><span class="message">We have known freedom, long enough to never wish to give it up.</span></div><div class="line" id="183225"><span class="nick" style="color:#80b1d3"><a href="#183225" label="[18:32:25]">&lt;OriansJ&gt;</a></span><span class="message">No compromise. No Surrender.</span></div><div class="line" id="183402"><span class="nick" style="color:#2e2a4a"><a href="#183402" label="[18:34:02]">&lt;Hagfish&gt;</a></span><span class="message">something like that</span></div><div class="line" id="183430"><span class="nick" style="color:#80b1d3"><a href="#183430" label="[18:34:30]">&lt;OriansJ&gt;</a></span><span class="message">It might take us another 35 years but what started on 4 October 1985; will become so much more than ever imaged possible to even RMS back then.</span></div><div class="line" id="183432"><span class="nick" style="color:#2e2a4a"><a href="#183432" label="[18:34:32]">&lt;Hagfish&gt;</a></span><span class="message">certainly there is a synergy(?), where society can't be free if our tools aren't free, and our tools can't be free if our society isn't</span></div><div class="line" id="183550"><span class="nick" style="color:#2e2a4a"><a href="#183550" label="[18:35:50]">&lt;Hagfish&gt;</a></span><span class="message">&quot;The Right to Read&quot; was published in 1997</span></div><div class="line" id="213928"><span class="nick" style="color:#389600"><a href="#213928" label="[21:39:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I've now updated my PRs I think both are ready to be merged...</span></div><div class="line" id="214051"><span class="nick" style="color:#389600"><a href="#214051" label="[21:40:51]">&lt;stikonas&gt;</a></span><span class="message">there were some issues with yesterday's version but now it's fixed</span></div><div class="line" id="221426"><span class="nick" style="color:#2e2a4a"><a href="#221426" label="[22:14:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: thanks I'll look</span></div><div class="line" id="221528"><span class="nick" style="color:#389600"><a href="#221528" label="[22:15:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: so 2.1.14 is the newest flex I was able to build...</span></div><div class="line" id="221540"><span class="nick" style="color:#389600"><a href="#221540" label="[22:15:40]">&lt;stikonas&gt;</a></span><span class="message">2.5.14...</span></div><div class="line" id="221552"><span class="nick" style="color:#389600"><a href="#221552" label="[22:15:52]">&lt;stikonas&gt;</a></span><span class="message">2.5.15 starts using more libc functions</span></div><div class="line" id="221555"><span class="nick" style="color:#2e2a4a"><a href="#221555" label="[22:15:55]">&lt;fossy&gt;</a></span><span class="message">ok, is that sufficient for bison</span></div><div class="line" id="221611"><span class="nick" style="color:#389600"><a href="#221611" label="[22:16:11]">&lt;stikonas&gt;</a></span><span class="message">I think bison also uses more libc functions</span></div><div class="line" id="221618"><span class="nick" style="color:#389600"><a href="#221618" label="[22:16:18]">&lt;stikonas&gt;</a></span><span class="message">we'll have to do somethngn about libc</span></div><div class="line" id="221627"><span class="nick" style="color:#2e2a4a"><a href="#221627" label="[22:16:27]">&lt;fossy&gt;</a></span><span class="message">grr</span></div><div class="line" id="221629"><span class="nick" style="color:#389600"><a href="#221629" label="[22:16:29]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="221638"><span class="nick" style="color:#2e2a4a"><a href="#221638" label="[22:16:38]">&lt;fossy&gt;</a></span><span class="message">even old version?</span></div><div class="line" id="221638"><span class="nick" style="color:#389600"><a href="#221638" label="[22:16:38]">&lt;stikonas&gt;</a></span><span class="message">well, regarding gawk, I think I can try something else</span></div><div class="line" id="221647"><span class="nick" style="color:#389600"><a href="#221647" label="[22:16:47]">&lt;stikonas&gt;</a></span><span class="message">old versions of bison are not bootstrappable</span></div><div class="line" id="221653"><span class="nick" style="color:#389600"><a href="#221653" label="[22:16:53]">&lt;stikonas&gt;</a></span><span class="message">you need that particular version</span></div><div class="line" id="221700"><span class="nick" style="color:#389600"><a href="#221700" label="[22:17:00]">&lt;stikonas&gt;</a></span><span class="message">it has custom parser written by gio in C</span></div><div class="line" id="221717"><span class="nick" style="color:#389600"><a href="#221717" label="[22:17:17]">&lt;stikonas&gt;</a></span><span class="message">instead of gawk, I can try <a rel="nofollow" href="https://github.com/eunuchs/heirloom-project/tree/master/heirloom/heirloom/nawk">https://github.com/eunuchs/heirloom-project/tree/master/heirloom/heirloom/nawk</a> </span></div><div class="line" id="221726"><span class="nick" style="color:#2e2a4a"><a href="#221726" label="[22:17:26]">&lt;fossy&gt;</a></span><span class="message">oh right, forgot about that</span></div><div class="line" id="231128"><span class="nick" style="color:#389600"><a href="#231128" label="[23:11:28]">&lt;stikonas&gt;</a></span><span class="message">ok, yacc segfaults on nawk... so this way is not good</span></div><div class="line" id="231646"><span class="nick" style="color:#389600"><a href="#231646" label="[23:16:46]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, I'm a bit out of ideas what can be done next...</span></div><div class="line" id="232137"><span class="nick" style="color:#389600"><a href="#232137" label="[23:21:37]">&lt;stikonas&gt;</a></span><span class="message">hmm, I think we need to build uname from coreutils too for configure scripts</span></div><div class="line" id="232344"><span class="nick" style="color:#389600"><a href="#232344" label="[23:23:44]">&lt;stikonas&gt;</a></span><span class="message">argh, that is ugly...</span></div><div class="line" id="232407"><span class="nick" style="color:#389600"><a href="#232407" label="[23:24:07]">&lt;stikonas&gt;</a></span><span class="message">it depends on sys/utsname.h</span></div><div class="line" id="232531"><span class="nick" style="color:#389600"><a href="#232531" label="[23:25:31]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe we can use one from linux-headers</span></div><div class="line" id="234550"><span class="nick" style="color:#bc80bd"><a href="#234550" label="[23:45:50]">&lt;deesix&gt;</a></span><span class="message">M2-Planet has some support for utsname (now also in M2libc), for get_machine. For that seems simple enough (of course, I don't know how much uname needs).</span></div><div class="line" id="234822"><span class="nick" style="color:#389600"><a href="#234822" label="[23:48:22]">&lt;stikonas&gt;</a></span><span class="message">well, so far I was unable to run a single configure script, all of them for different reasons...</span></div><div class="line" id="234856"><span class="nick" style="color:#389600"><a href="#234856" label="[23:48:56]">&lt;stikonas&gt;</a></span><span class="message">one wasnted uname, the other date, etc...</span></div><div class="line" id="234935"><span class="nick" style="color:#6b8072"><a href="#234935" label="[23:49:35]">&lt;pder&gt;</a></span><span class="message">what is guix doing in its bootstrap for bison that is different from live-bootstrap?</span></div><div class="line" id="235031"><span class="nick" style="color:#389600"><a href="#235031" label="[23:50:31]">&lt;stikonas&gt;</a></span><span class="message">pder: pregenerated C files?</span></div><div class="line" id="235043"><span class="nick" style="color:#389600"><a href="#235043" label="[23:50:43]">&lt;stikonas&gt;</a></span><span class="message">pder: although, it's not just bison that we are stuck with...</span></div><div class="line" id="235054"><span class="nick" style="color:#389600"><a href="#235054" label="[23:50:54]">&lt;stikonas&gt;</a></span><span class="message">I'm unable to think of anything right now</span></div><div class="line" id="235120"><span class="nick" style="color:#389600"><a href="#235120" label="[23:51:20]">&lt;stikonas&gt;</a></span><span class="message">most of the stuff that I tried to play with needs much more libc support than mes libc provides</span></div><div class="line" id="235215"><span class="nick" style="color:#389600"><a href="#235215" label="[23:52:15]">&lt;stikonas&gt;</a></span><span class="message">maybe we can try to build binutils with custom make, but binutils without ./configure is ugly :(</span></div><div class="line" id="235238"><span class="nick" style="color:#389600"><a href="#235238" label="[23:52:38]">&lt;stikonas&gt;</a></span><span class="message">pder: so far the only minor thing that I managed to do after flex is sleep from coreutils</span></div><div class="line" id="235241"><span class="nick" style="color:#389600"><a href="#235241" label="[23:52:41]">&lt;stikonas&gt;</a></span><span class="message">somehow we missed it</span></div><div class="line" id="235648"><span class="nick" style="color:#389600"><a href="#235648" label="[23:56:48]">&lt;stikonas&gt;</a></span><span class="message">so maybe we have to try to fix musl...</span></div><div class="line" id="235653"><span class="nick" style="color:#389600"><a href="#235653" label="[23:56:53]">&lt;stikonas&gt;</a></span><span class="message">which is argh :(</span></div><br /></div></body></html>