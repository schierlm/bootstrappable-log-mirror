<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-01-04.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="010945"><span class="nick" style="color:#8dd3c7"><a href="#010945" label="[01:09:45]">&lt;fossy&gt;</a></span><span class="message">oriansj: i havent used submodules in git before so this might be a really simple question</span></div><div class="line" id="010954"><span class="nick" style="color:#8dd3c7"><a href="#010954" label="[01:09:54]">&lt;fossy&gt;</a></span><span class="message">but i cant find how to pin a submodule to a specific commit</span></div><div class="line" id="011014"><span class="nick" style="color:#8dd3c7"><a href="#011014" label="[01:10:14]">&lt;fossy&gt;</a></span><span class="message">you were talking about a known working commit... how do you make sure that the submodule is on that commit?</span></div><div class="line" id="011615"><span class="nick" style="color:#8dd3c7"><a href="#011615" label="[01:16:15]">&lt;fossy&gt;</a></span><span class="message">oh i get it now</span></div><div class="line" id="011617"><span class="nick" style="color:#8dd3c7"><a href="#011617" label="[01:16:17]">&lt;fossy&gt;</a></span><span class="message">never mind</span></div><div class="line" id="013001"><span class="nick" style="color:#2e2a4a"><a href="#013001" label="[01:30:01]">&lt;oriansj&gt;</a></span><span class="message">fossy: here are all the notes you need about git submodules: <a rel="nofollow" href="https://paste.debian.net/1124419/">https://paste.debian.net/1124419/</a> </span></div><div class="line" id="013148"><span class="nick" style="color:#8dd3c7"><a href="#013148" label="[01:31:48]">&lt;fossy&gt;</a></span><span class="message">thank you very much</span></div><div class="line" id="013208"><span class="nick" style="color:#8dd3c7"><a href="#013208" label="[01:32:08]">&lt;fossy&gt;</a></span><span class="message">i figured out that checkouts arent something that are done using .gitmodules</span></div><div class="line" id="013839"><span class="nick" style="color:#2e2a4a"><a href="#013839" label="[01:38:39]">&lt;oriansj&gt;</a></span><span class="message">yep the actual commit # is in .git/modules/$REPO/refs/heads/master</span></div><div class="line" id="014046"><span class="nick" style="color:#2e2a4a"><a href="#014046" label="[01:40:46]">&lt;oriansj&gt;</a></span><span class="message">which is of course tracked in the commit history at the directory level as is noticable in 0960160d3b104baf16965b90b916d201689163dd</span></div><div class="line" id="023044"><span class="nick" style="color:#2e2a4a"><a href="#023044" label="[02:30:44]">&lt;oriansj&gt;</a></span><span class="message">janneke: do you think I should bother making this: <a rel="nofollow" href="https://paste.debian.net/1124422/">https://paste.debian.net/1124422/</a>  match guile?</span></div><div class="line" id="024912"><span class="nick" style="color:#2e2a4a"><a href="#024912" label="[02:49:12]">&lt;oriansj&gt;</a></span><span class="message">and initial baseline support for keywords has been added to mes-m2 (patches are up)</span></div><div class="line" id="030505"><span class="nick" style="color:#2e2a4a"><a href="#030505" label="[03:05:05]">&lt;oriansj&gt;</a></span><span class="message">and added string-&gt;keyword (because it seems a better primitive than keyword-like-symbol-&gt;keyword)</span></div><div class="line" id="030916"><span class="nick" style="color:#2e2a4a"><a href="#030916" label="[03:09:16]">&lt;oriansj&gt;</a></span><span class="message">and as is visable in the latest commit trivially enables it's implemention entirely in scheme</span></div><div class="line" id="031736"><span class="nick" style="color:#2e2a4a"><a href="#031736" label="[03:17:36]">&lt;oriansj&gt;</a></span><span class="message">I was thinking of breaking boot-0.scm into core.scm and boot-0.scm and just having boot-0.scm load core.scm as a module once module support is done that way it makes it trivial for one to convert the current boot-0.scm MesCC flows into -f flows for more trivial audits (Or bare metal builds for mes-m2)</span></div><div class="line" id="032026"><span class="nick" style="color:#6b8072"><a href="#032026" label="[03:20:26]">&lt;plasma41&gt;</a></span><span class="message">Is <a rel="nofollow" href="http://bootstappable.org">http://bootstappable.org</a>  unreachable for everyone or is it just me?</span></div><div class="line" id="032034"><span class="nick" style="color:#2e2a4a"><a href="#032034" label="[03:20:34]">&lt;oriansj&gt;</a></span><span class="message">janneke: do you think we can delete module/mes/quasiquote.mes now that mes-m2 supports everything in it?</span></div><div class="line" id="032114"><span class="nick" style="color:#2e2a4a"><a href="#032114" label="[03:21:14]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well the url should be <a rel="nofollow" href="http://bootstrappable.org/">http://bootstrappable.org/</a> </span></div><div class="line" id="032156"><span class="nick" style="color:#2e2a4a"><a href="#032156" label="[03:21:56]">&lt;oriansj&gt;</a></span><span class="message">bootstappable.org appears completely unregistered</span></div><div class="line" id="032216"><span class="nick" style="color:#6b8072"><a href="#032216" label="[03:22:16]">&lt;plasma41&gt;</a></span><span class="message">oriansj: Oops, <a rel="nofollow" href="http://bootstrappable.org/">http://bootstrappable.org/</a>  yes. Same question though.</span></div><div class="line" id="032251"><span class="nick" style="color:#2e2a4a"><a href="#032251" label="[03:22:51]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well it is entirely reachable via tor; as I check this very minute</span></div><div class="line" id="032409"><span class="nick" style="color:#6b8072"><a href="#032409" label="[03:24:09]">&lt;plasma41&gt;</a></span><span class="message">Ok, now it's working for me. Weird.</span></div><div class="line" id="032420"><span class="nick" style="color:#2e2a4a"><a href="#032420" label="[03:24:20]">&lt;oriansj&gt;</a></span><span class="message">and from several locations around the globe with curl</span></div><div class="line" id="032459"><span class="nick" style="color:#2e2a4a"><a href="#032459" label="[03:24:59]">&lt;oriansj&gt;</a></span><span class="message">plasma41: no worries</span></div><div class="line" id="032513"><span class="nick" style="color:#2e2a4a"><a href="#032513" label="[03:25:13]">&lt;oriansj&gt;</a></span><span class="message">perhaps DNS resolution failure?</span></div><div class="line" id="032611"><span class="nick" style="color:#2e2a4a"><a href="#032611" label="[03:26:11]">&lt;oriansj&gt;</a></span><span class="message">if you run: dig bootstrappable.org do you get bootstrappable.org.3577INA141.80.181.40</span></div><div class="line" id="032637"><span class="nick" style="color:#2e2a4a"><a href="#032637" label="[03:26:37]">&lt;oriansj&gt;</a></span><span class="message">(resolves to 141.80.181.40)</span></div><div class="line" id="033004"><span class="nick" style="color:#2e2a4a"><a href="#033004" label="[03:30:04]">&lt;oriansj&gt;</a></span><span class="message">which reminds me; I really need to update the stage0 text on <a rel="nofollow" href="http://bootstrappable.org/projects/mes.html">http://bootstrappable.org/projects/mes.html</a> </span></div><div class="line" id="033247"><span class="nick" style="color:#2e2a4a"><a href="#033247" label="[03:32:47]">&lt;oriansj&gt;</a></span><span class="message">and finish slow-utils so janneke can make guix's bootstrap a single binary</span></div><div class="line" id="034554"><span class="nick" style="color:#2e2a4a"><a href="#034554" label="[03:45:54]">&lt;oriansj&gt;</a></span><span class="message">and the diff for updating <a rel="nofollow" href="http://bootstrappable.org/projects/mes.html">http://bootstrappable.org/projects/mes.html</a>  when you get the chance  <a rel="nofollow" href="https://paste.debian.net/1124424/">https://paste.debian.net/1124424/</a> </span></div><div class="line" id="043346"><span class="nick" style="color:#8dd3c7"><a href="#043346" label="[04:33:46]">&lt;fossy&gt;</a></span><span class="message">janneke: what CFLAGS do you use and the like , and do you use TCC or GCC for mes bootstrap binaries?</span></div><div class="line" id="043357"><span class="nick" style="color:#8dd3c7"><a href="#043357" label="[04:33:57]">&lt;fossy&gt;</a></span><span class="message">i'm having a hard time making a statically linked mes</span></div><div class="line" id="074840"><span class="nick" style="color:#80b1d3"><a href="#074840" label="[07:48:40]">&lt;janneke&gt;</a></span><span class="message">oriansj: sure, delete quasiquote.mes (or anything else) once we have a C implementation</span></div><div class="line" id="074917"><span class="nick" style="color:#80b1d3"><a href="#074917" label="[07:49:17]">&lt;janneke&gt;</a></span><span class="message">ew can always switch back later, if we decide to move things out of the core again, but let's not keep unused code lying around</span></div><div class="line" id="075207"><span class="nick" style="color:#80b1d3"><a href="#075207" label="[07:52:07]">&lt;janneke&gt;</a></span><span class="message">oriansj: your question about nul, is that about C string and embedded null characters?  i am not sure how long we can get away with not supporting binary 0 in strings, but we will have to eventually anyway; i'd vote to support it now.  i am unsure if it's required to compile tcc, for example</span></div><div class="line" id="075600"><span class="nick" style="color:#80b1d3"><a href="#075600" label="[07:56:00]">&lt;janneke&gt;</a></span><span class="message">fossy: the Guix recipe to build bootstrap mes is in gnu/packages/make-bootstrap.scm, which uses mes.scm: <a rel="nofollow" href="http://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/make-bootstrap.scm#n645">http://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/make-bootstrap.scm#n645</a> </span></div><div class="line" id="075641"><span class="nick" style="color:#8dd3c7"><a href="#075641" label="[07:56:41]">&lt;fossy&gt;</a></span><span class="message">thx</span></div><div class="line" id="075642"><span class="nick" style="color:#80b1d3"><a href="#075642" label="[07:56:42]">&lt;janneke&gt;</a></span><span class="message">guix performs a vanilla ./configure; make; make install using a 32bit gcc</span></div><div class="line" id="075731"><span class="nick" style="color:#80b1d3"><a href="#075731" label="[07:57:31]">&lt;janneke&gt;</a></span><span class="message">fossy: note that you should be able to use latest mes, no need to revert to 0.19</span></div><div class="line" id="075840"><span class="nick" style="color:#80b1d3"><a href="#075840" label="[07:58:40]">&lt;janneke&gt;</a></span><span class="message">fossy: i am wondering, though, how you get a dynamically linked mes, do you configure --with-system-libc?  that is not really supported, its only a development aid, really</span></div><div class="line" id="075932"><span class="nick" style="color:#80b1d3"><a href="#075932" label="[07:59:32]">&lt;janneke&gt;</a></span><span class="message">the mes c library is only available statically</span></div><div class="line" id="075933"><span class="nick" style="color:#8dd3c7"><a href="#075933" label="[07:59:33]">&lt;fossy&gt;</a></span><span class="message">um</span></div><div class="line" id="075937"><span class="nick" style="color:#8dd3c7"><a href="#075937" label="[07:59:37]">&lt;fossy&gt;</a></span><span class="message">im not sute</span></div><div class="line" id="075939"><span class="nick" style="color:#8dd3c7"><a href="#075939" label="[07:59:39]">&lt;fossy&gt;</a></span><span class="message">sure</span></div><div class="line" id="080015"><span class="nick" style="color:#8dd3c7"><a href="#080015" label="[08:00:15]">&lt;fossy&gt;</a></span><span class="message">it was segfalting when I mvd the binary to a different folder</span></div><div class="line" id="080024"><span class="nick" style="color:#6d2462"><a href="#080024" label="[08:00:24]">*</a></span><span class="message">janneke really wishes this was documented better</span></div><div class="line" id="080036"><span class="nick" style="color:#80b1d3"><a href="#080036" label="[08:00:36]">&lt;janneke&gt;</a></span><span class="message">sorry to make this such a search for you, fossy</span></div><div class="line" id="080044"><span class="nick" style="color:#80b1d3"><a href="#080044" label="[08:00:44]">&lt;janneke&gt;</a></span><span class="message">and thanks for doing it!</span></div><div class="line" id="080045"><span class="nick" style="color:#8dd3c7"><a href="#080045" label="[08:00:45]">&lt;fossy&gt;</a></span><span class="message">lol all good</span></div><div class="line" id="080111"><span class="nick" style="color:#80b1d3"><a href="#080111" label="[08:01:11]">&lt;janneke&gt;</a></span><span class="message">fossy: ah, that may just be because it cannot find its boot-0.scm</span></div><div class="line" id="080248"><span class="nick" style="color:#8dd3c7"><a href="#080248" label="[08:02:48]">&lt;fossy&gt;</a></span><span class="message">before it was displaying an error message though?</span></div><div class="line" id="080327"><span class="nick" style="color:#80b1d3"><a href="#080327" label="[08:03:27]">&lt;janneke&gt;</a></span><span class="message">which version are you using?  (and remember MES_DEBUG=2)</span></div><div class="line" id="080432"><span class="nick" style="color:#8dd3c7"><a href="#080432" label="[08:04:32]">&lt;fossy&gt;</a></span><span class="message">O wait its working now</span></div><div class="line" id="080450"><span class="nick" style="color:#8dd3c7"><a href="#080450" label="[08:04:50]">&lt;fossy&gt;</a></span><span class="message">must have been an env var or something</span></div><div class="line" id="080457"><span class="nick" style="color:#8dd3c7"><a href="#080457" label="[08:04:57]">&lt;fossy&gt;</a></span><span class="message">because a new shell fixed it</span></div><div class="line" id="080624"><span class="nick" style="color:#8dd3c7"><a href="#080624" label="[08:06:24]">&lt;fossy&gt;</a></span><span class="message">janneke: ok nvm about that issue</span></div><div class="line" id="080635"><span class="nick" style="color:#8dd3c7"><a href="#080635" label="[08:06:35]">&lt;fossy&gt;</a></span><span class="message">whats MES_PREFIX meant to point to</span></div><div class="line" id="081405"><span class="nick" style="color:#80b1d3"><a href="#081405" label="[08:14:05]">&lt;janneke&gt;</a></span><span class="message">fossy: MES_PREFIX is used to find the *.mes modules under mes/module...</span></div><div class="line" id="081410"><span class="nick" style="color:#80b1d3"><a href="#081410" label="[08:14:10]">&lt;janneke&gt;</a></span><span class="message">fossy: so either to the mes toplevel src directory (a directory that holds mes/module/mes), or the toplevel mes installation directory (that holds share/mes/module/mes)</span></div><div class="line" id="081420"><span class="nick" style="color:#8dd3c7"><a href="#081420" label="[08:14:20]">&lt;fossy&gt;</a></span><span class="message">okey</span></div><div class="line" id="081445"><span class="nick" style="color:#80b1d3"><a href="#081445" label="[08:14:45]">&lt;janneke&gt;</a></span><span class="message">after mes is booted, it uses GUILE_LOAD_PATH to find fully guile-compatible modules</span></div><div class="line" id="081546"><span class="nick" style="color:#80b1d3"><a href="#081546" label="[08:15:46]">&lt;janneke&gt;</a></span><span class="message">this is one of the uglier things that oriansj has refactored/fixed in mes-m2</span></div><div class="line" id="081618"><span class="nick" style="color:#80b1d3"><a href="#081618" label="[08:16:18]">&lt;janneke&gt;</a></span><span class="message">i won't be able to merge that back into mes for now</span></div><div class="line" id="081657"><span class="nick" style="color:#80b1d3"><a href="#081657" label="[08:16:57]">&lt;janneke&gt;</a></span><span class="message">the next big thing for mes is to have the mes-m2 m2-planet build merged to bootstrap mes from mescc-tools-seed</span></div><div class="line" id="081742"><span class="nick" style="color:#80b1d3"><a href="#081742" label="[08:17:42]">&lt;janneke&gt;</a></span><span class="message">only after that we'll have to see how to go forward with the more radical mes-m2 changes; the merger of slow-lisp etc -- very exciting but that needs some more time</span></div><div class="line" id="082345"><span class="nick" style="color:#8dd3c7"><a href="#082345" label="[08:23:45]">&lt;fossy&gt;</a></span><span class="message">pkgdatadir=/usr/local/share/mes &lt;--- from MES_DEBUG=2</span></div><div class="line" id="082348"><span class="nick" style="color:#8dd3c7"><a href="#082348" label="[08:23:48]">&lt;fossy&gt;</a></span><span class="message">how do i change that</span></div><div class="line" id="082355"><span class="nick" style="color:#8dd3c7"><a href="#082355" label="[08:23:55]">&lt;fossy&gt;</a></span><span class="message">i want pkgdatadir to be a different path</span></div><div class="line" id="082435"><span class="nick" style="color:#80b1d3"><a href="#082435" label="[08:24:35]">&lt;janneke&gt;</a></span><span class="message">./configure --prefix=&lt;your-prefix-instead-of/usr/local&gt;</span></div><div class="line" id="082552"><span class="nick" style="color:#80b1d3"><a href="#082552" label="[08:25:52]">&lt;janneke&gt;</a></span><span class="message">(note that in latest pre-0.22 mes, pkgdatadir will no longer be embedded in the binary and you'll have to use MES_PREFIX)</span></div><div class="line" id="082639"><span class="nick" style="color:#80b1d3"><a href="#082639" label="[08:26:39]">&lt;janneke&gt;</a></span><span class="message">from mes v0.22 on, it will be cross-distro reproducible; so no embedding of installation prefixes</span></div><div class="line" id="082703"><span class="nick" style="color:#80b1d3"><a href="#082703" label="[08:27:03]">&lt;janneke&gt;</a></span><span class="message">we/distros might add a wrapper script for convenience</span></div><div class="line" id="082721"><span class="nick" style="color:#8dd3c7"><a href="#082721" label="[08:27:21]">&lt;fossy&gt;</a></span><span class="message">oh.</span></div><div class="line" id="082734"><span class="nick" style="color:#8dd3c7"><a href="#082734" label="[08:27:34]">&lt;fossy&gt;</a></span><span class="message">well this is good about 0.22 mes</span></div><div class="line" id="082752"><span class="nick" style="color:#80b1d3"><a href="#082752" label="[08:27:52]">&lt;janneke&gt;</a></span><span class="message">:)</span></div><div class="line" id="082754"><span class="nick" style="color:#8dd3c7"><a href="#082754" label="[08:27:54]">&lt;fossy&gt;</a></span><span class="message">janneke: do you have a commit for that so i dont have to go searching lol</span></div><div class="line" id="082803"><span class="nick" style="color:#8dd3c7"><a href="#082803" label="[08:28:03]">&lt;fossy&gt;</a></span><span class="message">because i will need to patch that because the prefix is arbitary</span></div><div class="line" id="082820"><span class="nick" style="color:#8dd3c7"><a href="#082820" label="[08:28:20]">&lt;fossy&gt;</a></span><span class="message">i don't want to have to rely on the user having mes installed in a pre defined path</span></div><div class="line" id="083059"><span class="nick" style="color:#80b1d3"><a href="#083059" label="[08:30:59]">&lt;janneke&gt;</a></span><span class="message">fossy: you can use the tarball <a rel="nofollow" href="http://lilypond.org/janneke/mes/mes-0.21-54-g85cadbb2c.tar.gz">http://lilypond.org/janneke/mes/mes-0.21-54-g85cadbb2c.tar.gz</a>  or the `wip' branch @savannah ... BUT they only have this embedded prefix removed; the MES_PREFIX functionality is identical to mes-0.21 anyway</span></div><div class="line" id="083135"><span class="nick" style="color:#8dd3c7"><a href="#083135" label="[08:31:35]">&lt;fossy&gt;</a></span><span class="message">oh  the MES_PREFIX behaviour is fine</span></div><div class="line" id="083143"><span class="nick" style="color:#8dd3c7"><a href="#083143" label="[08:31:43]">&lt;fossy&gt;</a></span><span class="message">because then i can use relative paths to the git repository</span></div><div class="line" id="083149"><span class="nick" style="color:#80b1d3"><a href="#083149" label="[08:31:49]">&lt;janneke&gt;</a></span><span class="message">good</span></div><div class="line" id="083209"><span class="nick" style="color:#8dd3c7"><a href="#083209" label="[08:32:09]">&lt;fossy&gt;</a></span><span class="message">but an absolute path hard coded into the binary won't work</span></div><div class="line" id="083218"><span class="nick" style="color:#8dd3c7"><a href="#083218" label="[08:32:18]">&lt;fossy&gt;</a></span><span class="message">i'll try out this tarball thanks :D</span></div><div class="line" id="083335"><span class="nick" style="color:#8dd3c7"><a href="#083335" label="[08:33:35]">&lt;fossy&gt;</a></span><span class="message">this commit right janneke 2c2f03c9e44aa9f5659b27aee0dfc3470c8ef56d?</span></div><div class="line" id="083346"><span class="nick" style="color:#8dd3c7"><a href="#083346" label="[08:33:46]">&lt;fossy&gt;</a></span><span class="message">mescc: Honor --includedir, --libdir.</span></div><div class="line" id="083406"><span class="nick" style="color:#8dd3c7"><a href="#083406" label="[08:34:06]">&lt;fossy&gt;</a></span><span class="message">oh no</span></div><div class="line" id="083515"><span class="nick" style="color:#80b1d3"><a href="#083515" label="[08:35:15]">&lt;janneke&gt;</a></span><span class="message">the tarball's commit works (85cadbb2c, fully tested in bootstrap), wip/fdcdead8577b2f9ff81af4a3045060a881bfed63 should also work</span></div><div class="line" id="083524"><span class="nick" style="color:#8dd3c7"><a href="#083524" label="[08:35:24]">&lt;fossy&gt;</a></span><span class="message">oh it's on WIP</span></div><div class="line" id="083534"><span class="nick" style="color:#8dd3c7"><a href="#083534" label="[08:35:34]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="083854"><span class="nick" style="color:#8dd3c7"><a href="#083854" label="[08:38:54]">&lt;fossy&gt;</a></span><span class="message">janneke: this tarball when doing `sh bootstrap.sh` is giving me</span></div><div class="line" id="083858"><span class="nick" style="color:#8dd3c7"><a href="#083858" label="[08:38:58]">&lt;fossy&gt;</a></span><span class="message">/usr/bin/ld: lib.c:(.text+0x5b0): undefined reference to `fdputs'</span></div><div class="line" id="083902"><span class="nick" style="color:#8dd3c7"><a href="#083902" label="[08:39:02]">&lt;fossy&gt;</a></span><span class="message">and other errors of the like</span></div><div class="line" id="083922"><span class="nick" style="color:#8dd3c7"><a href="#083922" label="[08:39:22]">&lt;fossy&gt;</a></span><span class="message">itoa, eputs, fdputc</span></div><div class="line" id="083930"><span class="nick" style="color:#8dd3c7"><a href="#083930" label="[08:39:30]">&lt;fossy&gt;</a></span><span class="message">for the last   CCLD     bin/mes-mescc</span></div><div class="line" id="090214"><span class="nick" style="color:#80b1d3"><a href="#090214" label="[09:02:14]">&lt;janneke&gt;</a></span><span class="message">fossy: ah; for regular, gcc builds: use sh build.sh</span></div><div class="line" id="090649"><span class="nick" style="color:#2e2a4a"><a href="#090649" label="[09:06:49]">&lt;oriansj&gt;</a></span><span class="message">janneke: hmmm, interesting point about nul in strings for scheme;</span></div><div class="line" id="090822"><span class="nick" style="color:#2e2a4a"><a href="#090822" label="[09:08:22]">&lt;oriansj&gt;</a></span><span class="message">Do symbols, ports and other name like things also have to support nuls in their names?</span></div><div class="line" id="091116"><span class="nick" style="color:#80b1d3"><a href="#091116" label="[09:11:16]">&lt;janneke&gt;</a></span><span class="message">oriansj: &quot;have to&quot; is a bit strong, guile and mes support it</span></div><div class="line" id="091131"><span class="nick" style="color:#80b1d3"><a href="#091131" label="[09:11:31]">&lt;janneke&gt;</a></span><span class="message">i mean, isn't it a &quot;bug&quot; in C that you cannot do that?</span></div><div class="line" id="091203"><span class="nick" style="color:#2e2a4a"><a href="#091203" label="[09:12:03]">&lt;oriansj&gt;</a></span><span class="message">janneke: actually it is an intensional design choice</span></div><div class="line" id="091223"><span class="nick" style="color:#80b1d3"><a href="#091223" label="[09:12:23]">&lt;janneke&gt;</a></span><span class="message">don't get me wrong, i am all for being pragmatic in our 100% guile compatibility; we don't need to support what isn't used</span></div><div class="line" id="091302"><span class="nick" style="color:#2e2a4a"><a href="#091302" label="[09:13:02]">&lt;oriansj&gt;</a></span><span class="message">because otherwise you have to do prefix strings; which means slower string handling</span></div><div class="line" id="091425"><span class="nick" style="color:#80b1d3"><a href="#091425" label="[09:14:25]">&lt;janneke&gt;</a></span><span class="message">is keeping track of length really slower?  doesn't that depend on how often you are recalculating the length?</span></div><div class="line" id="091448"><span class="nick" style="color:#8dd3c7"><a href="#091448" label="[09:14:48]">&lt;fossy&gt;</a></span><span class="message">janneke: hm, ah i just saw that it said use boootstrap.sh not build.sh in configure.sh</span></div><div class="line" id="091546"><span class="nick" style="color:#80b1d3"><a href="#091546" label="[09:15:46]">&lt;janneke&gt;</a></span><span class="message">yes, so configure.sh is also for bootstrap mode; better use ./configure instead (./configure.sh may just work, but not tested/supported atm)</span></div><div class="line" id="091605"><span class="nick" style="color:#8dd3c7"><a href="#091605" label="[09:16:05]">&lt;fossy&gt;</a></span><span class="message">ohhhh</span></div><div class="line" id="091607"><span class="nick" style="color:#8dd3c7"><a href="#091607" label="[09:16:07]">&lt;fossy&gt;</a></span><span class="message">that explains a lot</span></div><div class="line" id="091620"><span class="nick" style="color:#80b1d3"><a href="#091620" label="[09:16:20]">&lt;janneke&gt;</a></span><span class="message">ah, possibly you don't want to depend on guile yet -- hmm</span></div><div class="line" id="091648"><span class="nick" style="color:#80b1d3"><a href="#091648" label="[09:16:48]">&lt;janneke&gt;</a></span><span class="message">i'm open to suggestions to use ./configure.sh ./build.sh</span></div><div class="line" id="091654"><span class="nick" style="color:#8dd3c7"><a href="#091654" label="[09:16:54]">&lt;fossy&gt;</a></span><span class="message">yeah --- that's why i was using configure.sh build.sh</span></div><div class="line" id="091658"><span class="nick" style="color:#80b1d3"><a href="#091658" label="[09:16:58]">&lt;janneke&gt;</a></span><span class="message">supporting that would be nice and should be very doable</span></div><div class="line" id="091704"><span class="nick" style="color:#8dd3c7"><a href="#091704" label="[09:17:04]">&lt;fossy&gt;</a></span><span class="message">i got a working mes binary with configure.sh build.sh with mes 0.19</span></div><div class="line" id="091722"><span class="nick" style="color:#80b1d3"><a href="#091722" label="[09:17:22]">&lt;janneke&gt;</a></span><span class="message">if possible, i'd like to get that fixed &amp; supported for 0.22</span></div><div class="line" id="091723"><span class="nick" style="color:#8dd3c7"><a href="#091723" label="[09:17:23]">&lt;fossy&gt;</a></span><span class="message">after a few tweaks to some build-aux/ stuff because -fno-stack-protector</span></div><div class="line" id="091727"><span class="nick" style="color:#8dd3c7"><a href="#091727" label="[09:17:27]">&lt;fossy&gt;</a></span><span class="message">i mean mes 0.21</span></div><div class="line" id="091742"><span class="nick" style="color:#8dd3c7"><a href="#091742" label="[09:17:42]">&lt;fossy&gt;</a></span><span class="message">it seems to be mostly working right now</span></div><div class="line" id="091842"><span class="nick" style="color:#80b1d3"><a href="#091842" label="[09:18:42]">&lt;janneke&gt;</a></span><span class="message">ah, yes the mes-0.22 development series saw some debian/nix/arch fixes in the build system; esp. stack protector/CFLAGS things -- all pretty trivial fixes once you know what's needed</span></div><div class="line" id="092217"><span class="nick" style="color:#2e2a4a"><a href="#092217" label="[09:22:17]">&lt;oriansj&gt;</a></span><span class="message">janneke: well it is slower for string matching (because you can't use the intel vector instructions geared toward nul terminated strings) of the same size length strings (but faster for different length ones). It also involves a decrement operation for display of strings and additional math in the manipulation of strings; not to mention some additional complexity in a handful of implementation points. but as we are going for</span></div><div class="line" id="092217"><span class="nick" style="color:#2e2a4a"><a href="#092217" label="[09:22:17]">&lt;oriansj&gt;</a></span><span class="message">compatibility I guess it is the right choice. Can we just ban it entirely from ports? (it would potentially be a major issue)</span></div><div class="line" id="092520"><span class="nick" style="color:#80b1d3"><a href="#092520" label="[09:25:20]">&lt;janneke&gt;</a></span><span class="message">oriansj: i'm not sure what you mean by ports?  it's safe to not support nul characters in file names, but reading a bytevector from a port will contain nul characters</span></div><div class="line" id="092602"><span class="nick" style="color:#80b1d3"><a href="#092602" label="[09:26:02]">&lt;janneke&gt;</a></span><span class="message">hmm, i haven't considered hardware/cpu instruction level optimizations</span></div><div class="line" id="092611"><span class="nick" style="color:#2e2a4a"><a href="#092611" label="[09:26:11]">&lt;oriansj&gt;</a></span><span class="message">janneke: by ports I mean the file names, not the reading from files themselves</span></div><div class="line" id="092628"><span class="nick" style="color:#80b1d3"><a href="#092628" label="[09:26:28]">&lt;janneke&gt;</a></span><span class="message">that's waaay in the future for me; but that's not to say it will never happen</span></div><div class="line" id="092701"><span class="nick" style="color:#2e2a4a"><a href="#092701" label="[09:27:01]">&lt;oriansj&gt;</a></span><span class="message">as linux allows nuls in file names but most standard unix utilities can't work with files with nuls in their names</span></div><div class="line" id="092703"><span class="nick" style="color:#80b1d3"><a href="#092703" label="[09:27:03]">&lt;janneke&gt;</a></span><span class="message">until now, i have focussed on using a not too big assembler instruction set</span></div><div class="line" id="092734"><span class="nick" style="color:#80b1d3"><a href="#092734" label="[09:27:34]">&lt;janneke&gt;</a></span><span class="message">ah, no -- we certainly have no files with nul chacacters in them</span></div><div class="line" id="092742"><span class="nick" style="color:#80b1d3"><a href="#092742" label="[09:27:42]">&lt;janneke&gt;</a></span><span class="message">*file names</span></div><div class="line" id="092821"><span class="nick" style="color:#2e2a4a"><a href="#092821" label="[09:28:21]">&lt;oriansj&gt;</a></span><span class="message">janneke: well I did promise to help you avoid having to write mes.c in assembly</span></div><div class="line" id="092844"><span class="nick" style="color:#2e2a4a"><a href="#092844" label="[09:28:44]">&lt;oriansj&gt;</a></span><span class="message">(god that would have been a nightmare)</span></div><div class="line" id="092908"><span class="nick" style="color:#80b1d3"><a href="#092908" label="[09:29:08]">&lt;janneke&gt;</a></span><span class="message">yup</span></div><div class="line" id="092922"><span class="nick" style="color:#80b1d3"><a href="#092922" label="[09:29:22]">&lt;janneke&gt;</a></span><span class="message">esp. because there are so many assembly's</span></div><div class="line" id="093012"><span class="nick" style="color:#2e2a4a"><a href="#093012" label="[09:30:12]">&lt;oriansj&gt;</a></span><span class="message">but now we are doing it in M2-Planet and it is working; as long as we make sure we don't break the M2-Planet build. We can just keep hacking like it is plain od C</span></div><div class="line" id="093020"><span class="nick" style="color:#80b1d3"><a href="#093020" label="[09:30:20]">&lt;janneke&gt;</a></span><span class="message">of course, when we want to start an obfuscated bootstrap contest, supporting nul characters in file names might be a feature</span></div><div class="line" id="093054"><span class="nick" style="color:#2e2a4a"><a href="#093054" label="[09:30:54]">&lt;oriansj&gt;</a></span><span class="message">janneke: if one wants to make unfindable trojans</span></div><div class="line" id="093108"><span class="nick" style="color:#2e2a4a"><a href="#093108" label="[09:31:08]">&lt;oriansj&gt;</a></span><span class="message">\x00evil.scm</span></div><div class="line" id="093202"><span class="nick" style="color:#80b1d3"><a href="#093202" label="[09:32:02]">&lt;janneke&gt;</a></span><span class="message">hehe</span></div><div class="line" id="093439"><span class="nick" style="color:#2e2a4a"><a href="#093439" label="[09:34:39]">&lt;oriansj&gt;</a></span><span class="message">even git and tar don't support those; so it also makes it hard to spread those sorts of files around as they are impossible to make in C family languages</span></div><div class="line" id="093514"><span class="nick" style="color:#2e2a4a"><a href="#093514" label="[09:35:14]">&lt;oriansj&gt;</a></span><span class="message">can't do it in javascript or C or even bash</span></div><div class="line" id="093545"><span class="nick" style="color:#2e2a4a"><a href="#093545" label="[09:35:45]">&lt;oriansj&gt;</a></span><span class="message">So only systems with a scheme or Common Lisp could even create them</span></div><div class="line" id="093725"><span class="nick" style="color:#2e2a4a"><a href="#093725" label="[09:37:25]">&lt;oriansj&gt;</a></span><span class="message">hmmm; but it also allows for an interesting idea</span></div><div class="line" id="093733"><span class="nick" style="color:#80b1d3"><a href="#093733" label="[09:37:33]">&lt;janneke&gt;</a></span><span class="message">that provides a whole new perspective on the label &quot;scheme-only bootstrap&quot;</span></div><div class="line" id="093902"><span class="nick" style="color:#234e69"><a href="#093902" label="[09:39:02]">&lt;xentrac&gt;</a></span><span class="message">can't do it with POSIX system calls</span></div><div class="line" id="093924"><span class="nick" style="color:#2e2a4a"><a href="#093924" label="[09:39:24]">&lt;oriansj&gt;</a></span><span class="message">xentrac: correct libc would choke on it</span></div><div class="line" id="093930"><span class="nick" style="color:#234e69"><a href="#093930" label="[09:39:30]">&lt;xentrac&gt;</a></span><span class="message">even without libc</span></div><div class="line" id="093955"><span class="nick" style="color:#2e2a4a"><a href="#093955" label="[09:39:55]">&lt;oriansj&gt;</a></span><span class="message">xentrac: violates the POSIX standard I am guessing for file names</span></div><div class="line" id="093959"><span class="nick" style="color:#234e69"><a href="#093959" label="[09:39:59]">&lt;xentrac&gt;</a></span><span class="message">(I mean POSIX system calls can be provided by libc but that's an implementation detail)</span></div><div class="line" id="094007"><span class="nick" style="color:#234e69"><a href="#094007" label="[09:40:07]">&lt;xentrac&gt;</a></span><span class="message">probably</span></div><div class="line" id="094035"><span class="nick" style="color:#2e2a4a"><a href="#094035" label="[09:40:35]">&lt;oriansj&gt;</a></span><span class="message">as POSIX assumes C naming standards</span></div><div class="line" id="094042"><span class="nick" style="color:#234e69"><a href="#094042" label="[09:40:42]">&lt;xentrac&gt;</a></span><span class="message">certainly things like open(), rename(), and truncate() take pointers to NUL-terminated strings as arguments</span></div><div class="line" id="094309"><span class="nick" style="color:#2e2a4a"><a href="#094309" label="[09:43:09]">&lt;oriansj&gt;</a></span><span class="message">xentrac: per the standard but Linux's vector optimizations actually allow for some abuse here</span></div><div class="line" id="094440"><span class="nick" style="color:#234e69"><a href="#094440" label="[09:44:40]">&lt;xentrac&gt;</a></span><span class="message">!?</span></div><div class="line" id="094450"><span class="nick" style="color:#2e2a4a"><a href="#094450" label="[09:44:50]">&lt;oriansj&gt;</a></span><span class="message">see by linux internally padding strings to 8byte boundries; it allows for faster string operations</span></div><div class="line" id="094530"><span class="nick" style="color:#2e2a4a"><a href="#094530" label="[09:45:30]">&lt;oriansj&gt;</a></span><span class="message">but it also means leading nuls are ignored</span></div><div class="line" id="094548"><span class="nick" style="color:#234e69"><a href="#094548" label="[09:45:48]">&lt;xentrac&gt;</a></span><span class="message">hmm, so libc open on some platforms needs to copy the string into a buffer with enough space for the trailing padding?</span></div><div class="line" id="094555"><span class="nick" style="color:#234e69"><a href="#094555" label="[09:45:55]">&lt;xentrac&gt;</a></span><span class="message">I didn't know that</span></div><div class="line" id="094612"><span class="nick" style="color:#2e2a4a"><a href="#094612" label="[09:46:12]">&lt;oriansj&gt;</a></span><span class="message">it is an optimization</span></div><div class="line" id="094656"><span class="nick" style="color:#234e69"><a href="#094656" label="[09:46:56]">&lt;xentrac&gt;</a></span><span class="message">btw I stopped working on Dercuano: <a rel="nofollow" href="https://zenodo.org/record/3595681">https://zenodo.org/record/3595681</a> </span></div><div class="line" id="094658"><span class="nick" style="color:#2e2a4a"><a href="#094658" label="[09:46:58]">&lt;oriansj&gt;</a></span><span class="message">one that is invisible and causes issues only if the hardware doesn't do exactly what you think it does</span></div><div class="line" id="094710"><span class="nick" style="color:#234e69"><a href="#094710" label="[09:47:10]">&lt;xentrac&gt;</a></span><span class="message">it's final</span></div><div class="line" id="094720"><span class="nick" style="color:#234e69"><a href="#094720" label="[09:47:20]">&lt;xentrac&gt;</a></span><span class="message">although I guess I need to update the README to explain that</span></div><div class="line" id="094722"><span class="nick" style="color:#2e2a4a"><a href="#094722" label="[09:47:22]">&lt;oriansj&gt;</a></span><span class="message">xentrac: I'll pull the latest updates then</span></div><div class="line" id="094740"><span class="nick" style="color:#234e69"><a href="#094740" label="[09:47:40]">&lt;xentrac&gt;</a></span><span class="message">there's a fair bit of bootstrapping stuff in there</span></div><div class="line" id="094747"><span class="nick" style="color:#234e69"><a href="#094747" label="[09:47:47]">&lt;xentrac&gt;</a></span><span class="message">but nothing really revolutionary</span></div><div class="line" id="094830"><span class="nick" style="color:#234e69"><a href="#094830" label="[09:48:30]">&lt;xentrac&gt;</a></span><span class="message">I made a PDF rendering for cellphone reading</span></div><div class="line" id="094849"><span class="nick" style="color:#2e2a4a"><a href="#094849" label="[09:48:49]">&lt;oriansj&gt;</a></span><span class="message">xentrac: reasonable choice</span></div><div class="line" id="094919"><span class="nick" style="color:#234e69"><a href="#094919" label="[09:49:19]">&lt;xentrac&gt;</a></span><span class="message">(and to upload to places that only accept PDF uploads)</span></div><div class="line" id="094938"><span class="nick" style="color:#2e2a4a"><a href="#094938" label="[09:49:38]">&lt;oriansj&gt;</a></span><span class="message">me, I prefer reading text files to PDFs most days (org files if one has alot to say)</span></div><div class="line" id="095036"><span class="nick" style="color:#234e69"><a href="#095036" label="[09:50:36]">&lt;xentrac&gt;</a></span><span class="message">for me it depends</span></div><div class="line" id="095057"><span class="nick" style="color:#234e69"><a href="#095057" label="[09:50:57]">&lt;xentrac&gt;</a></span><span class="message">although I'm not taking advantage of PDF graphics much</span></div><div class="line" id="095113"><span class="nick" style="color:#234e69"><a href="#095113" label="[09:51:13]">&lt;xentrac&gt;</a></span><span class="message">PDF supports links, which text files usually don't</span></div><div class="line" id="095125"><span class="nick" style="color:#234e69"><a href="#095125" label="[09:51:25]">&lt;xentrac&gt;</a></span><span class="message">(though org does, somewhat)</span></div><div class="line" id="095205"><span class="nick" style="color:#2e2a4a"><a href="#095205" label="[09:52:05]">&lt;oriansj&gt;</a></span><span class="message">xentrac: and images too</span></div><div class="line" id="095212"><span class="nick" style="color:#234e69"><a href="#095212" label="[09:52:12]">&lt;xentrac&gt;</a></span><span class="message">yeah</span></div><div class="line" id="095231"><span class="nick" style="color:#234e69"><a href="#095231" label="[09:52:31]">&lt;xentrac&gt;</a></span><span class="message">this PDF works pretty well with pdftotext but links on the HTML version is maybe a better choice for getting typewriter text out of Dercuano</span></div><div class="line" id="095240"><span class="nick" style="color:#234e69"><a href="#095240" label="[09:52:40]">&lt;xentrac&gt;</a></span><span class="message">I mean the browser, Links</span></div><div class="line" id="095429"><span class="nick" style="color:#80b1d3"><a href="#095429" label="[09:54:29]">&lt;janneke&gt;</a></span><span class="message">fixing the internet has no priority for me, but iwbn if someone did that</span></div><div class="line" id="095430"><span class="nick" style="color:#234e69"><a href="#095430" label="[09:54:30]">&lt;xentrac&gt;</a></span><span class="message">cellphones are usually pretty shitty at handling 80-column fixed-pitch text; I was able to find a much better solution to that than I've seen previously</span></div><div class="line" id="095549"><span class="nick" style="color:#2e2a4a"><a href="#095549" label="[09:55:49]">&lt;oriansj&gt;</a></span><span class="message">xentrac: if the link needs to last put it in archive.org</span></div><div class="line" id="095555"><span class="nick" style="color:#234e69"><a href="#095555" label="[09:55:55]">&lt;xentrac&gt;</a></span><span class="message">it's there</span></div><div class="line" id="095725"><span class="nick" style="color:#234e69"><a href="#095725" label="[09:57:25]">&lt;xentrac&gt;</a></span><span class="message">but that's just one place; I think incentivizing people to download it and save a copy locally is more reliable</span></div><div class="line" id="095749"><span class="nick" style="color:#234e69"><a href="#095749" label="[09:57:49]">&lt;xentrac&gt;</a></span><span class="message">maybe I should stick a bandwidth limit on it so that it takes a minute or so to download the PDF from my server</span></div><div class="line" id="095829"><span class="nick" style="color:#2e2a4a"><a href="#095829" label="[09:58:29]">&lt;oriansj&gt;</a></span><span class="message">xentrac: put it on ipfs?</span></div><div class="line" id="095852"><span class="nick" style="color:#2e2a4a"><a href="#095852" label="[09:58:52]">&lt;oriansj&gt;</a></span><span class="message">So that anyone who has a copy enables everyone else to get one too</span></div><div class="line" id="100259"><span class="nick" style="color:#234e69"><a href="#100259" label="[10:02:59]">&lt;xentrac&gt;</a></span><span class="message">yeah, that's not a terrible idea.  is there any way to demonstrate that something was on IPFS by a particular date?</span></div><div class="line" id="100532"><span class="nick" style="color:#2e2a4a"><a href="#100532" label="[10:05:32]">&lt;oriansj&gt;</a></span><span class="message">xentrac: I am going to be honest and say, that I have not the faintest clue on those details (haven't had a chance to look at the low level details yet)</span></div><div class="line" id="100808"><span class="nick" style="color:#234e69"><a href="#100808" label="[10:08:08]">&lt;xentrac&gt;</a></span><span class="message">maybe if other people were posting the IPFS link in public places with dates and saying that it worked for them</span></div><div class="line" id="100838"><span class="nick" style="color:#2e2a4a"><a href="#100838" label="[10:08:38]">&lt;oriansj&gt;</a></span><span class="message">say the contents of this IRC channel?</span></div><div class="line" id="100913"><span class="nick" style="color:#2e2a4a"><a href="#100913" label="[10:09:13]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="http://logs.guix.gnu.org/bootstrappable/2020-01-04.log">http://logs.guix.gnu.org/bootstrappable/2020-01-04.log</a> </span></div><div class="line" id="101120"><span class="nick" style="color:#234e69"><a href="#101120" label="[10:11:20]">&lt;xentrac&gt;</a></span><span class="message">right, for example</span></div><div class="line" id="101713"><span class="nick" style="color:#2e2a4a"><a href="#101713" label="[10:17:13]">&lt;oriansj&gt;</a></span><span class="message">janneke: would record-types have nuls in their names?</span></div><div class="line" id="101915"><span class="nick" style="color:#6d2462"><a href="#101915" label="[10:19:15]">*</a></span><span class="message">oriansj *looks like mes-m2 is in for a nul of a time today!*</span></div><div class="line" id="101942"><span class="nick" style="color:#8dd3c7"><a href="#101942" label="[10:19:42]">&lt;fossy&gt;</a></span><span class="message">haha very funny</span></div><div class="line" id="102004"><span class="nick" style="color:#80b1d3"><a href="#102004" label="[10:20:04]">&lt;janneke&gt;</a></span><span class="message">oriansj: i haven't seen any</span></div><div class="line" id="102127"><span class="nick" style="color:#2e2a4a"><a href="#102127" label="[10:21:27]">&lt;oriansj&gt;</a></span><span class="message">well lets say no for now and I'll deal with it later if it comes up</span></div><div class="line" id="102156"><span class="nick" style="color:#80b1d3"><a href="#102156" label="[10:21:56]">&lt;janneke&gt;</a></span><span class="message">in guile, the convention for record types is &lt;[-a-z0-9]+&gt;</span></div><div class="line" id="102218"><span class="nick" style="color:#80b1d3"><a href="#102218" label="[10:22:18]">&lt;janneke&gt;</a></span><span class="message">yeah</span></div><div class="line" id="102459"><span class="nick" style="color:#2e2a4a"><a href="#102459" label="[10:24:59]">&lt;oriansj&gt;</a></span><span class="message">good because changing records types to support nuls in their names would be a pain</span></div><div class="line" id="103347"><span class="nick" style="color:#2e2a4a"><a href="#103347" label="[10:33:47]">&lt;oriansj&gt;</a></span><span class="message">lots and lots of little growing pains</span></div><div class="line" id="104223"><span class="nick" style="color:#80b1d3"><a href="#104223" label="[10:42:23]">&lt;janneke&gt;</a></span><span class="message">what about nul characters in irc logs?</span></div><div class="line" id="104336"><span class="nick" style="color:#2e2a4a"><a href="#104336" label="[10:43:36]">&lt;oriansj&gt;</a></span><span class="message">janneke: well putting (&amp;$(&amp;&amp;$@_)(#$UNEXPECTED END OF FILE REACHED</span></div><div class="line" id="104722"><span class="nick" style="color:#2e2a4a"><a href="#104722" label="[10:47:22]">&lt;oriansj&gt;</a></span><span class="message">got (string-&gt;list (list-&gt;string (list nul nul nul))) working now just to make (list-&gt;string (list nul nul nul)) look like guile's output</span></div><div class="line" id="105010"><span class="nick" style="color:#80b1d3"><a href="#105010" label="[10:50:10]">&lt;janneke&gt;</a></span><span class="message">oh nice; mes simply prints (list-&gt;string '(#\A #\nul #\B)) =&gt; &quot;A\0B&quot;</span></div><div class="line" id="105019"><span class="nick" style="color:#234e69"><a href="#105019" label="[10:50:19]">&lt;xentrac&gt;</a></span><span class="message">yay :)</span></div><div class="line" id="110355"><span class="nick" style="color:#2e2a4a"><a href="#110355" label="[11:03:55]">&lt;oriansj&gt;</a></span><span class="message">interesting looking at guile's behavior in regards to (write (list-&gt;string (list nul nul (integer-&gt;char 251))))</span></div><div class="line" id="110421"><span class="nick" style="color:#2e2a4a"><a href="#110421" label="[11:04:21]">&lt;oriansj&gt;</a></span><span class="message">as one would assume it would match the behavior of (write (list-&gt;string (list nul nul (integer-&gt;char 31))))</span></div><div class="line" id="110439"><span class="nick" style="color:#2e2a4a"><a href="#110439" label="[11:04:39]">&lt;oriansj&gt;</a></span><span class="message">(0-31 -&gt; \x##)</span></div><div class="line" id="110507"><span class="nick" style="color:#2e2a4a"><a href="#110507" label="[11:05:07]">&lt;oriansj&gt;</a></span><span class="message">but as ascii doesn't extend past 177</span></div><div class="line" id="110527"><span class="nick" style="color:#2e2a4a"><a href="#110527" label="[11:05:27]">&lt;oriansj&gt;</a></span><span class="message"> (sorry 127 decimal (177 octal))</span></div><div class="line" id="110557"><span class="nick" style="color:#2e2a4a"><a href="#110557" label="[11:05:57]">&lt;oriansj&gt;</a></span><span class="message">why doesn't the correct behavior resume in guile for numbers greater than 126?</span></div><div class="line" id="110959"><span class="nick" style="color:#80b1d3"><a href="#110959" label="[11:09:59]">&lt;janneke&gt;</a></span><span class="message">i get &quot;\x00\x00\x7f&quot;; could be a locale thing?</span></div><div class="line" id="111225"><span class="nick" style="color:#2e2a4a"><a href="#111225" label="[11:12:25]">&lt;oriansj&gt;</a></span><span class="message">hmm interesting</span></div><div class="line" id="111338"><span class="nick" style="color:#2e2a4a"><a href="#111338" label="[11:13:38]">&lt;oriansj&gt;</a></span><span class="message">from 127 to 160 it does the right thing and then it switches at 161</span></div><div class="line" id="111401"><span class="nick" style="color:#2e2a4a"><a href="#111401" label="[11:14:01]">&lt;oriansj&gt;</a></span><span class="message">possibly a utf-8 thing?</span></div><div class="line" id="112121"><span class="nick" style="color:#6c3d55"><a href="#112121" label="[11:21:21]">&lt;NieDzejkob&gt;</a></span><span class="message">160 sounds utf-8 as hell</span></div><div class="line" id="112231"><span class="nick" style="color:#80b1d3"><a href="#112231" label="[11:22:31]">&lt;janneke&gt;</a></span><span class="message">oriansj: what about after you (set-port-encoding! (current-output-port) &quot;latin1&quot;)</span></div><div class="line" id="112324"><span class="nick" style="color:#80b1d3"><a href="#112324" label="[11:23:24]">&lt;janneke&gt;</a></span><span class="message">or (set-port-encoding! (current-output-port) &quot;ascii&quot;)</span></div><div class="line" id="112342"><span class="nick" style="color:#80b1d3"><a href="#112342" label="[11:23:42]">&lt;janneke&gt;</a></span><span class="message">locales are tricksy, i am not planning any support for mes</span></div><div class="line" id="114121"><span class="nick" style="color:#2e2a4a"><a href="#114121" label="[11:41:21]">&lt;oriansj&gt;</a></span><span class="message">janneke: I vote we stick to 7bit ascii and punt everything utf-8 and locale spectific to hell</span></div><div class="line" id="114139"><span class="nick" style="color:#2e2a4a"><a href="#114139" label="[11:41:39]">&lt;oriansj&gt;</a></span><span class="message">because honestly, fuck that noise</span></div><div class="line" id="114208"><span class="nick" style="color:#2e2a4a"><a href="#114208" label="[11:42:08]">&lt;oriansj&gt;</a></span><span class="message">I've got enough to deal without without having to explain why your poop emoji doesn't make a good function name</span></div><div class="line" id="114249"><span class="nick" style="color:#2e2a4a"><a href="#114249" label="[11:42:49]">&lt;oriansj&gt;</a></span><span class="message">^without^with^</span></div><div class="line" id="121101"><span class="nick" style="color:#2e2a4a"><a href="#121101" label="[12:11:01]">&lt;oriansj&gt;</a></span><span class="message">ok patches are up</span></div><div class="line" id="121204"><span class="nick" style="color:#2e2a4a"><a href="#121204" label="[12:12:04]">&lt;oriansj&gt;</a></span><span class="message">I'll probably need to write some tests for that to ensure proper behavior but I'll punt that for now (so feel free to do so if you wish to solve that for me)</span></div><div class="line" id="161733"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="203130"><span class="nick" style="color:#2e2a4a"><a href="#203130" label="[20:31:30]">&lt;oriansj&gt;</a></span><span class="message">#:pure</span></div><div class="line" id="203358"><span class="nick" style="color:#2e2a4a"><a href="#203358" label="[20:33:58]">&lt;oriansj&gt;</a></span><span class="message">why do I keep getting the feeling that scheme module support has to be written in scheme</span></div><div class="line" id="204752"><span class="nick" style="color:#2e2a4a"><a href="#204752" label="[20:47:52]">&lt;oriansj&gt;</a></span><span class="message">in theory (use-modules (ice-9 popen)); would just be a scheme function that executes (primitive-load-path &quot;modules/ice-9/popen.scm&quot;)</span></div><div class="line" id="204811"><span class="nick" style="color:#2e2a4a"><a href="#204811" label="[20:48:11]">&lt;oriansj&gt;</a></span><span class="message">I have primitive-load done and working</span></div><div class="line" id="204907"><span class="nick" style="color:#2e2a4a"><a href="#204907" label="[20:49:07]">&lt;oriansj&gt;</a></span><span class="message">So in theory I can just do a (define (use-modules ....) and be done</span></div><div class="line" id="204945"><span class="nick" style="color:#2e2a4a"><a href="#204945" label="[20:49:45]">&lt;oriansj&gt;</a></span><span class="message">especially now that mes-m2 has working keywords and the other keyword supporting primitives</span></div><div class="line" id="205415"><span class="nick" style="color:#2e2a4a"><a href="#205415" label="[20:54:15]">&lt;oriansj&gt;</a></span><span class="message">except #:select  and #:renamer scream for primitives; only for #:version to make one stop and say what... then I see #:pure and think; why?</span></div><div class="line" id="205511"><span class="nick" style="color:#2e2a4a"><a href="#205511" label="[20:55:11]">&lt;oriansj&gt;</a></span><span class="message">Why do I keep doing this to myself?</span></div><div class="line" id="205841"><span class="nick" style="color:#2e2a4a"><a href="#205841" label="[20:58:41]">&lt;oriansj&gt;</a></span><span class="message">only to see: <a rel="nofollow" href="https://www.gnu.org/software/guile/manual/html_node/provide-and-require.html#provide-and-require">https://www.gnu.org/software/guile/manual/html_node/provide-and-require.html#provide-and-require</a> </span></div><div class="line" id="210941"><span class="nick" style="color:#2e2a4a"><a href="#210941" label="[21:09:41]">&lt;oriansj&gt;</a></span><span class="message">So if anyone has a dumb/clever idea hit me with it.</span></div><div class="line" id="211119"><span class="nick" style="color:#80b1d3"><a href="#211119" label="[21:11:19]">&lt;janneke&gt;</a></span><span class="message">i don't think #:pure and #:version are priorities, we'll need select and probably #:renamer</span></div><div class="line" id="211126"><span class="nick" style="color:#80b1d3"><a href="#211126" label="[21:11:26]">&lt;janneke&gt;</a></span><span class="message">did not realise you are writing this in C</span></div><div class="line" id="211204"><span class="nick" style="color:#80b1d3"><a href="#211204" label="[21:12:04]">&lt;janneke&gt;</a></span><span class="message">my half-functioning prototype is exposing the guile C module and variable api and then boots boot-9.scm</span></div><div class="line" id="211240"><span class="nick" style="color:#80b1d3"><a href="#211240" label="[21:12:40]">&lt;janneke&gt;</a></span><span class="message">i hoped you would be able to profit from that; but you are going waay to fast for me :)</span></div><div class="line" id="211404"><span class="nick" style="color:#80b1d3"><a href="#211404" label="[21:14:04]">&lt;janneke&gt;</a></span><span class="message">i did not know about provide and require; but i have never seen them used either</span></div><div class="line" id="211418"><span class="nick" style="color:#2e2a4a"><a href="#211418" label="[21:14:18]">&lt;oriansj&gt;</a></span><span class="message">janneke: well I want module support in mes-m2 to be a perfect behavior match to guile but I keep getting stuck on which parts to shove into C and which parts to just do in scheme</span></div><div class="line" id="211436"><span class="nick" style="color:#80b1d3"><a href="#211436" label="[21:14:36]">&lt;janneke&gt;</a></span><span class="message">i'm not trying to suggest you are doing it wrong!</span></div><div class="line" id="211447"><span class="nick" style="color:#2e2a4a"><a href="#211447" label="[21:14:47]">&lt;oriansj&gt;</a></span><span class="message">janneke: of course</span></div><div class="line" id="211451"><span class="nick" style="color:#80b1d3"><a href="#211451" label="[21:14:51]">&lt;janneke&gt;</a></span><span class="message">i just did not think of this...</span></div><div class="line" id="211505"><span class="nick" style="color:#2e2a4a"><a href="#211505" label="[21:15:05]">&lt;oriansj&gt;</a></span><span class="message">understandably</span></div><div class="line" id="211601"><span class="nick" style="color:#2e2a4a"><a href="#211601" label="[21:16:01]">&lt;oriansj&gt;</a></span><span class="message">if one assumed from the scheme perspective, if you wanted to do it entirely in scheme, what primtives would you want?</span></div><div class="line" id="211636"><span class="nick" style="color:#2e2a4a"><a href="#211636" label="[21:16:36]">&lt;oriansj&gt;</a></span><span class="message">because I could in theory do it entirely in C but it'll be insanely large and ugly</span></div><div class="line" id="211702"><span class="nick" style="color:#2e2a4a"><a href="#211702" label="[21:17:02]">&lt;oriansj&gt;</a></span><span class="message">and I can't quite feel what the correct balance is</span></div><div class="line" id="220445"><span class="nick" style="color:#8dd3c7"><a href="#220445" label="[22:04:45]">&lt;fossy&gt;</a></span><span class="message">janneke: more mes help, lol</span></div><div class="line" id="220447"><span class="nick" style="color:#8dd3c7"><a href="#220447" label="[22:04:47]">&lt;fossy&gt;</a></span><span class="message">./../mes --no-auto-compile -e main module/mescc.scm</span></div><div class="line" id="220449"><span class="nick" style="color:#8dd3c7"><a href="#220449" label="[22:04:49]">&lt;fossy&gt;</a></span><span class="message">unhandled exception:unbound-variable:(main)</span></div><div class="line" id="220453"><span class="nick" style="color:#8dd3c7"><a href="#220453" label="[22:04:53]">&lt;fossy&gt;</a></span><span class="message">mes will run now</span></div><div class="line" id="220502"><span class="nick" style="color:#8dd3c7"><a href="#220502" label="[22:05:02]">&lt;fossy&gt;</a></span><span class="message">but it dosen't want to execute main on module/mescc.scm</span></div><div class="line" id="221921"><span class="nick" style="color:#80b1d3"><a href="#221921" label="[22:19:21]">&lt;janneke&gt;</a></span><span class="message">fossy: you prolly want to use ../pre-inst-env mes ...; or even ../pre-inst-env mescc ...</span></div><div class="line" id="221935"><span class="nick" style="color:#8dd3c7"><a href="#221935" label="[22:19:35]">&lt;fossy&gt;</a></span><span class="message">okey</span></div><div class="line" id="221952"><span class="nick" style="color:#80b1d3"><a href="#221952" label="[22:19:52]">&lt;janneke&gt;</a></span><span class="message">have a look at scripts/mescc.in</span></div><div class="line" id="221953"><span class="nick" style="color:#8dd3c7"><a href="#221953" label="[22:19:53]">&lt;fossy&gt;</a></span><span class="message">im not using the mescc script because my environment is very different</span></div><div class="line" id="222016"><span class="nick" style="color:#80b1d3"><a href="#222016" label="[22:20:16]">&lt;janneke&gt;</a></span><span class="message">mes+mescc needs a larger pre-set arena and it needs to find nyacc too</span></div><div class="line" id="222258"><span class="nick" style="color:#8dd3c7"><a href="#222258" label="[22:22:58]">&lt;fossy&gt;</a></span><span class="message">janneke: so MES_DEBUG=2 shows all the nyacc modules being loaded</span></div><div class="line" id="222303"><span class="nick" style="color:#80b1d3"><a href="#222303" label="[22:23:03]">&lt;janneke&gt;</a></span><span class="message">nice</span></div><div class="line" id="222305"><span class="nick" style="color:#8dd3c7"><a href="#222305" label="[22:23:05]">&lt;fossy&gt;</a></span><span class="message">and a number of mescc modules</span></div><div class="line" id="222321"><span class="nick" style="color:#8dd3c7"><a href="#222321" label="[22:23:21]">&lt;fossy&gt;</a></span><span class="message">then it gets here</span></div><div class="line" id="222323"><span class="nick" style="color:#8dd3c7"><a href="#222323" label="[22:23:23]">&lt;fossy&gt;</a></span><span class="message">include-from-path: mescc/mescc.scm</span></div><div class="line" id="222325"><span class="nick" style="color:#8dd3c7"><a href="#222325" label="[22:23:25]">&lt;fossy&gt;</a></span><span class="message">;;; read module/mescc/mescc.scm</span></div><div class="line" id="222327"><span class="nick" style="color:#8dd3c7"><a href="#222327" label="[22:23:27]">&lt;fossy&gt;</a></span><span class="message">#&lt;closure mescc:main (args)&gt;</span></div><div class="line" id="222330"><span class="nick" style="color:#8dd3c7"><a href="#222330" label="[22:23:30]">&lt;fossy&gt;</a></span><span class="message">and then gc stats</span></div><div class="line" id="222342"><span class="nick" style="color:#8dd3c7"><a href="#222342" label="[22:23:42]">&lt;fossy&gt;</a></span><span class="message">with --version</span></div><div class="line" id="222350"><span class="nick" style="color:#8dd3c7"><a href="#222350" label="[22:23:50]">&lt;fossy&gt;</a></span><span class="message">so it seems it's triggering main but main isn't doing anything</span></div><div class="line" id="222629"><span class="nick" style="color:#8dd3c7"><a href="#222629" label="[22:26:29]">&lt;fossy&gt;</a></span><span class="message">interesting, scripts/mescc works with a few changes</span></div><div class="line" id="222634"><span class="nick" style="color:#8dd3c7"><a href="#222634" label="[22:26:34]">&lt;fossy&gt;</a></span><span class="message">let's see what's different there</span></div><div class="line" id="222950"><span class="nick" style="color:#80b1d3"><a href="#222950" label="[22:29:50]">&lt;janneke&gt;</a></span><span class="message">fossy: possibly something like: -e '(main (command-line))'</span></div><div class="line" id="223024"><span class="nick" style="color:#8dd3c7"><a href="#223024" label="[22:30:24]">&lt;fossy&gt;</a></span><span class="message">yay it works now :D</span></div><div class="line" id="223104"><span class="nick" style="color:#80b1d3"><a href="#223104" label="[22:31:04]">&lt;janneke&gt;</a></span><span class="message">mes fakes guile modules currently, pretty ugly hacks here</span></div><div class="line" id="223355"><span class="nick" style="color:#8dd3c7"><a href="#223355" label="[22:33:55]">&lt;fossy&gt;</a></span><span class="message">yeah that tripped me up quite a bit</span></div><div class="line" id="223440"><span class="nick" style="color:#8dd3c7"><a href="#223440" label="[22:34:40]">&lt;fossy&gt;</a></span><span class="message">with the guile modules, i compromised by creating a sibling directory mes-assets and copying the guile/nyacc modules there so they aren't polluting the main mes directory, and adjusting scripts/mescc to -L mes-assets</span></div><div class="line" id="223503"><span class="nick" style="color:#8dd3c7"><a href="#223503" label="[22:35:03]">&lt;fossy&gt;</a></span><span class="message">gosh, this is janky</span></div><div class="line" id="223521"><span class="nick" style="color:#2e2a4a"><a href="#223521" label="[22:35:21]">&lt;oriansj&gt;</a></span><span class="message">fossy: hence the major rewrite in mes-m2</span></div><div class="line" id="223558"><span class="nick" style="color:#8dd3c7"><a href="#223558" label="[22:35:58]">&lt;fossy&gt;</a></span><span class="message">the seed mes is from your tarball but i'm running it against mes 0.21 modules and nyacc 1.0 modules all spread out</span></div><div class="line" id="223603"><span class="nick" style="color:#8dd3c7"><a href="#223603" label="[22:36:03]">&lt;fossy&gt;</a></span><span class="message">but oh well it works</span></div><div class="line" id="223647"><span class="nick" style="color:#2e2a4a"><a href="#223647" label="[22:36:47]">&lt;oriansj&gt;</a></span><span class="message">9 months thus far into making this baby, I am guess when it pops out it isn't going to be human</span></div><div class="line" id="223653"><span class="nick" style="color:#8dd3c7"><a href="#223653" label="[22:36:53]">&lt;fossy&gt;</a></span><span class="message">116K mes-seed</span></div><div class="line" id="223701"><span class="nick" style="color:#8dd3c7"><a href="#223701" label="[22:37:01]">&lt;fossy&gt;</a></span><span class="message">hm, not great, but not bad</span></div><div class="line" id="223724"><span class="nick" style="color:#2e2a4a"><a href="#223724" label="[22:37:24]">&lt;oriansj&gt;</a></span><span class="message">fossy: mes-m2 currently at 164KB</span></div><div class="line" id="223731"><span class="nick" style="color:#2e2a4a"><a href="#223731" label="[22:37:31]">&lt;oriansj&gt;</a></span><span class="message">and growing</span></div><div class="line" id="223734"><span class="nick" style="color:#8dd3c7"><a href="#223734" label="[22:37:34]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="223755"><span class="nick" style="color:#8dd3c7"><a href="#223755" label="[22:37:55]">&lt;fossy&gt;</a></span><span class="message">but this is a current /seed/ for my mescc-tools-seed which will do mes-&gt;gcc</span></div><div class="line" id="223821"><span class="nick" style="color:#8dd3c7"><a href="#223821" label="[22:38:21]">&lt;fossy&gt;</a></span><span class="message">i'm doing this now so that when mes-m2 is finished it should be a very simple change to integrate the two halves of mescc-tools-seed</span></div><div class="line" id="223853"><span class="nick" style="color:#8dd3c7"><a href="#223853" label="[22:38:53]">&lt;fossy&gt;</a></span><span class="message">i'm trying very hard for a &lt;1MB seed for this</span></div><div class="line" id="223942"><span class="nick" style="color:#2e2a4a"><a href="#223942" label="[22:39:42]">&lt;oriansj&gt;</a></span><span class="message">fossy: I don't think that there will be any steps between the 60MB announcement and the 357 announcement</span></div><div class="line" id="223955"><span class="nick" style="color:#8dd3c7"><a href="#223955" label="[22:39:55]">&lt;fossy&gt;</a></span><span class="message">oriansj: not for guix no</span></div><div class="line" id="224632"><span class="nick" style="color:#2e2a4a"><a href="#224632" label="[22:46:32]">&lt;oriansj&gt;</a></span><span class="message">fossy: well you are also going to need:9,359bytes for blood-elf, 27,494bytes for hex2 and 29,342bytes for M1</span></div><div class="line" id="224735"><span class="nick" style="color:#2e2a4a"><a href="#224735" label="[22:47:35]">&lt;oriansj&gt;</a></span><span class="message">(fortunately they are static binaries that don't depend upon anything but POSIX syscalls and hardware)</span></div><div class="line" id="224804"><span class="nick" style="color:#2e2a4a"><a href="#224804" label="[22:48:04]">&lt;oriansj&gt;</a></span><span class="message">otherwise MesCC will not be able to make binaries (atleast until I finish slow-utils)</span></div><div class="line" id="224838"><span class="nick" style="color:#8dd3c7"><a href="#224838" label="[22:48:38]">&lt;fossy&gt;</a></span><span class="message">oh yeah right</span></div><div class="line" id="225203"><span class="nick" style="color:#2e2a4a"><a href="#225203" label="[22:52:03]">&lt;oriansj&gt;</a></span><span class="message">So 2MB is possible</span></div><div class="line" id="230631"><span class="nick" style="color:#8dd3c7"><a href="#230631" label="[23:06:31]">&lt;fossy&gt;</a></span><span class="message">actually no</span></div><div class="line" id="230647"><span class="nick" style="color:#8dd3c7"><a href="#230647" label="[23:06:47]">&lt;fossy&gt;</a></span><span class="message">we don't need those as seedw</span></div><div class="line" id="230649"><span class="nick" style="color:#8dd3c7"><a href="#230649" label="[23:06:49]">&lt;fossy&gt;</a></span><span class="message">seeds</span></div><div class="line" id="230740"><span class="nick" style="color:#8dd3c7"><a href="#230740" label="[23:07:40]">&lt;fossy&gt;</a></span><span class="message">ill use the existing mescc tools seed code to reduce those seeds down to kaem + 357 hex0 since mescc tools seed generates those</span></div><div class="line" id="230853"><span class="nick" style="color:#8dd3c7"><a href="#230853" label="[23:08:53]">&lt;fossy&gt;</a></span><span class="message">so it will be an extension of the current mescc tools seed just with mes injected after mes-m2 is built</span></div><div class="line" id="231216"><span class="nick" style="color:#6b8072"><a href="#231216" label="[23:12:16]">&lt;plasma41&gt;</a></span><span class="message">oriansj: I read about the 60MB seed while browsing the mes repo, but what's the 357 announcement?</span></div><div class="line" id="231522"><span class="nick" style="color:#6b8072"><a href="#231522" label="[23:15:22]">&lt;plasma41&gt;</a></span><span class="message">I think it would be amusing to read in the initial binary seed off of punch cards. Unfortunately, according to my off hand calculations a 60MB seed would require at least 73 cubic yards of punch cards.</span></div><div class="line" id="231642"><span class="nick" style="color:#8dd3c7"><a href="#231642" label="[23:16:42]">&lt;fossy&gt;</a></span><span class="message">plasma41: the 357 byte seed is just a hex0 monitor</span></div><div class="line" id="231706"><span class="nick" style="color:#8dd3c7"><a href="#231706" label="[23:17:06]">&lt;fossy&gt;</a></span><span class="message">see <a rel="nofollow" href="https://github.com/oriansj/stage0">https://github.com/oriansj/stage0</a> </span></div><div class="line" id="231831"><span class="nick" style="color:#8dd3c7"><a href="#231831" label="[23:18:31]">&lt;fossy&gt;</a></span><span class="message">it compiles up from hex0 to hex1 to hex2 to M0 to M1 to M2 to cc_amd64 (or whatever your architecture is) and then M2-Planet, blood-elf, and mes-m2</span></div><div class="line" id="231854"><span class="nick" style="color:#8dd3c7"><a href="#231854" label="[23:18:54]">&lt;fossy&gt;</a></span><span class="message">mes-m2 is mes rewritten in m2-planet</span></div><div class="line" id="231858"><span class="nick" style="color:#80b1d3"><a href="#231858" label="[23:18:58]">&lt;janneke&gt;</a></span><span class="message">the 60MB seed is the second big milestone on our way to the holy grail</span></div><div class="line" id="231933"><span class="nick" style="color:#8dd3c7"><a href="#231933" label="[23:19:33]">&lt;fossy&gt;</a></span><span class="message">once that is ready it will be used to bootstrap tcc using mescc and then various GCCs up to GCC 9</span></div><div class="line" id="231952"><span class="nick" style="color:#8dd3c7"><a href="#231952" label="[23:19:52]">&lt;fossy&gt;</a></span><span class="message">im in the process of attempting to make a 2MB seed</span></div><div class="line" id="231955"><span class="nick" style="color:#8dd3c7"><a href="#231955" label="[23:19:55]">&lt;fossy&gt;</a></span><span class="message">which is possible</span></div><div class="line" id="231958"><span class="nick" style="color:#8dd3c7"><a href="#231958" label="[23:19:58]">&lt;fossy&gt;</a></span><span class="message">but very hard</span></div><div class="line" id="232024"><span class="nick" style="color:#8dd3c7"><a href="#232024" label="[23:20:24]">&lt;fossy&gt;</a></span><span class="message">but 60MB is a very big milestone for guix in particular</span></div><div class="line" id="232136"><span class="nick" style="color:#8dd3c7"><a href="#232136" label="[23:21:36]">&lt;fossy&gt;</a></span><span class="message">since mine wont be distribution compatible nessecarily and it wont work for guix for many reasons</span></div><div class="line" id="232149"><span class="nick" style="color:#8dd3c7"><a href="#232149" label="[23:21:49]">&lt;fossy&gt;</a></span><span class="message">janneke: is it currently 120MB?</span></div><div class="line" id="232200"><span class="nick" style="color:#8dd3c7"><a href="#232200" label="[23:22:00]">&lt;fossy&gt;</a></span><span class="message">or are you on 60MB right now</span></div><div class="line" id="232304"><span class="nick" style="color:#80b1d3"><a href="#232304" label="[23:23:04]">&lt;janneke&gt;</a></span><span class="message">~140 MB is the already pretty impressive reduced binary seed bootstrap, current guix master</span></div><div class="line" id="232354"><span class="nick" style="color:#80b1d3"><a href="#232354" label="[23:23:54]">&lt;janneke&gt;</a></span><span class="message">~60MB is on wip-bootstrap, awaiting mainly a gash core utils and mes release before merger to guix core-updates</span></div><div class="line" id="232402"><span class="nick" style="color:#8dd3c7"><a href="#232402" label="[23:24:02]">&lt;fossy&gt;</a></span><span class="message">yeah its so much better than it was</span></div><div class="line" id="232418"><span class="nick" style="color:#6b8072"><a href="#232418" label="[23:24:18]">&lt;plasma41&gt;</a></span><span class="message">60MB / 1.44MB = a binary seed on 42 3.5in. floppies!</span></div><div class="line" id="232423"><span class="nick" style="color:#8dd3c7"><a href="#232423" label="[23:24:23]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="232448"><span class="nick" style="color:#8dd3c7"><a href="#232448" label="[23:24:48]">&lt;fossy&gt;</a></span><span class="message">and when we get to 357 byte it'll fit on a few punch cards!!</span></div><div class="line" id="232906"><span class="nick" style="color:#6b8072"><a href="#232906" label="[23:29:06]">&lt;plasma41&gt;</a></span><span class="message">Now I just need to figure out how to acquire a punch card reader and figure out how to connect it to a breadboard with my 8086 processor. :-D</span></div><div class="line" id="233005"><span class="nick" style="color:#8dd3c7"><a href="#233005" label="[23:30:05]">&lt;fossy&gt;</a></span><span class="message">lmao</span></div><div class="line" id="233014"><span class="nick" style="color:#8dd3c7"><a href="#233014" label="[23:30:14]">&lt;fossy&gt;</a></span><span class="message">talk to oriansj about knigjt</span></div><div class="line" id="233016"><span class="nick" style="color:#8dd3c7"><a href="#233016" label="[23:30:16]">&lt;fossy&gt;</a></span><span class="message">knight</span></div><div class="line" id="233021"><span class="nick" style="color:#8dd3c7"><a href="#233021" label="[23:30:21]">&lt;fossy&gt;</a></span><span class="message">Knight is the end game</span></div><div class="line" id="233030"><span class="nick" style="color:#8dd3c7"><a href="#233030" label="[23:30:30]">&lt;fossy&gt;</a></span><span class="message">and when we get there it'll be super cool</span></div><div class="line" id="235438"><span class="nick" style="color:#2e2a4a"><a href="#235438" label="[23:54:38]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well a paper take reader is easier to make</span></div><div class="line" id="235449"><span class="nick" style="color:#2e2a4a"><a href="#235449" label="[23:54:49]">&lt;oriansj&gt;</a></span><span class="message">^take^tape^</span></div><div class="line" id="235632"><span class="nick" style="color:#2e2a4a"><a href="#235632" label="[23:56:32]">&lt;oriansj&gt;</a></span><span class="message">plasma41: well if you want to play with bootstrapping from 357 bytes gets you, check out this: <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed">https://github.com/oriansj/mescc-tools-seed</a> </span></div><div class="line" id="235709"><span class="nick" style="color:#2e2a4a"><a href="#235709" label="[23:57:09]">&lt;oriansj&gt;</a></span><span class="message">a cross-platform C compiler and a respectable scheme (that is growing to become a drop in guile replacement)</span></div><div class="line" id="235901"><span class="nick" style="color:#2e2a4a"><a href="#235901" label="[23:59:01]">&lt;oriansj&gt;</a></span><span class="message">also fossy janneke already broke out the steps you need in {x86,AMD64}/mescc-tools.kaem</span></div><br /></div></body></html>