<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000817"><span class="nick" style="color:#389600"><a href="#000817" label="[00:08:17]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: good luck with the mouse/upgrade :)</span></div><div class="line" id="000949"><span class="nick" style="color:#8dd3c7"><a href="#000949" label="[00:09:49]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Its not mouse upgrade, its Qt upgrade</span></div><div class="line" id="001050"><span class="nick" style="color:#8dd3c7"><a href="#001050" label="[00:10:50]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But now with Wayland I guess input devices can be affected too</span></div><div class="line" id="001555"><span class="nick" style="color:#389600"><a href="#001555" label="[00:15:55]">&lt;vagrantc&gt;</a></span><span class="message">right, i just meant good luck with the mouse &amp;&amp; good luck with the upgrade :)</span></div><div class="line" id="002052"><span class="nick" style="color:#389600"><a href="#002052" label="[00:20:52]">&lt;vagrantc&gt;</a></span><span class="message">the other &quot;release&quot; key for mescc-tools i have is for oriansj but it has expired ... and looks to be intentional</span></div><div class="line" id="002633"><span class="nick" style="color:#2e2a4a"><a href="#002633" label="[00:26:33]">&lt;jcowan&gt;</a></span><span class="message">The PDP-8 has no fixed calling convention except the JMS instruction itself, which places the current PC at the target address and jumps to the target + 1. Sometimes what follows is pointers to the arguments, sometimes the arguments themselves.</span></div><div class="line" id="002706"><span class="nick" style="color:#8dd3c7"><a href="#002706" label="[00:27:06]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; vagrantc: yeah, that's the first release made by me...</span></div><div class="line" id="002851"><span class="nick" style="color:#389600"><a href="#002851" label="[00:28:51]">&lt;vagrantc&gt;</a></span><span class="message">overall, mescc-tools 1.5.0 (for reals) seems to be building fine on debian: <a rel="nofollow" href="https://salsa.debian.org/debian/mescc-tools/-/pipelines/601198">https://salsa.debian.org/debian/mescc-tools/-/pipelines/601198</a> </span></div><div class="line" id="002905"><span class="nick" style="color:#389600"><a href="#002905" label="[00:29:05]">&lt;vagrantc&gt;</a></span><span class="message">will upload to debian shortly.</span></div><div class="line" id="003025"><span class="nick" style="color:#389600"><a href="#003025" label="[00:30:25]">&lt;vagrantc&gt;</a></span><span class="message">i guess i should find and subscribe to the bootstrappable list...</span></div><div class="line" id="003155"><span class="nick" style="color:#389600"><a href="#003155" label="[00:31:55]">&lt;vagrantc&gt;</a></span><span class="message">i ought to be able to handle the 10-20 mails per year :)</span></div><div class="line" id="003427"><span class="nick" style="color:#389600"><a href="#003427" label="[00:34:27]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: although reviewing 2023's list archive, i do not see mescc-tools announced specifically ... maybe part of some other release announcement for mes?</span></div><div class="line" id="003829"><span class="nick" style="color:#389600"><a href="#003829" label="[00:38:29]">&lt;vagrantc&gt;</a></span><span class="message">ok, on to mes itself....</span></div><div class="line" id="004315"><span class="nick" style="color:#6b8072"><a href="#004315" label="[00:43:15]">&lt;mihi&gt;</a></span><span class="message">vagrantc, <a rel="nofollow" href="https://www.freelists.org/post/bootstrappable/stage0posix-release">https://www.freelists.org/post/bootstrappable/stage0posix-release</a>,1 </span></div><div class="line" id="004425"><span class="nick" style="color:#389600"><a href="#004425" label="[00:44:25]">&lt;vagrantc&gt;</a></span><span class="message">mihi: e.g. part of some other release announcement :)</span></div><div class="line" id="004451"><span class="nick" style="color:#6b8072"><a href="#004451" label="[00:44:51]">&lt;mihi&gt;</a></span><span class="message">vagrantc, yeah, I gueesed you might have been interested which one without looking into every one :)</span></div><div class="line" id="004505"><span class="nick" style="color:#389600"><a href="#004505" label="[00:45:05]">&lt;vagrantc&gt;</a></span><span class="message">mihi: thanks :)</span></div><div class="line" id="004512"><span class="nick" style="color:#80b1d3"><a href="#004512" label="[00:45:12]">&lt;stikonas&gt;</a></span><span class="message">yeah, stage0-posix came with all other releases too...</span></div><div class="line" id="004524"><span class="nick" style="color:#80b1d3"><a href="#004524" label="[00:45:24]">&lt;stikonas&gt;</a></span><span class="message">we also have stage0-posix tarball too which contains everything</span></div><div class="line" id="004546"><span class="nick" style="color:#389600"><a href="#004546" label="[00:45:46]">&lt;vagrantc&gt;</a></span><span class="message">well, i've got enough to get a new mes into debian, i think</span></div><div class="line" id="004547"><span class="nick" style="color:#80b1d3"><a href="#004547" label="[00:45:47]">&lt;stikonas&gt;</a></span><span class="message">bootstrap-seeds/mescc-tools/M2-Planet/mescc-tools-extra/M2-Mesoplanet</span></div><div class="line" id="004550"><span class="nick" style="color:#389600"><a href="#004550" label="[00:45:50]">&lt;vagrantc&gt;</a></span><span class="message">oh, i need to enable riscv64</span></div><div class="line" id="004558"><span class="nick" style="color:#80b1d3"><a href="#004558" label="[00:45:58]">&lt;stikonas&gt;</a></span><span class="message">yep, riscv now works</span></div><div class="line" id="004701"><span class="nick" style="color:#6b8072"><a href="#004701" label="[00:47:01]">&lt;mihi&gt;</a></span><span class="message">stikonas, vagrantc, mescc-tools is somehow special in the stage0 project that it is not only consumed by stage0-posix but also by mes...</span></div><div class="line" id="004830"><span class="nick" style="color:#389600"><a href="#004830" label="[00:48:30]">&lt;vagrantc&gt;</a></span><span class="message">i haven't actually poked at stage0 much ... only go as deep as mes so far. someday. although the prospects of Debian ever adopting a full source bootstrap seem ... unlikely at best :/</span></div><div class="line" id="010021"><span class="nick" style="color:#80b1d3"><a href="#010021" label="[01:00:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, mes is based on the same assembler/linker</span></div><div class="line" id="012208"><span class="nick" style="color:#80b1d3"><a href="#012208" label="[01:22:08]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: 1.5.2 now uploaded to savannah</span></div><div class="line" id="012211"><span class="nick" style="color:#80b1d3"><a href="#012211" label="[01:22:11]">&lt;stikonas&gt;</a></span><span class="message">still need to do github</span></div><div class="line" id="012356"><span class="nick" style="color:#389600"><a href="#012356" label="[01:23:56]">&lt;vagrantc&gt;</a></span><span class="message">doh. i guess i should have waited :)</span></div><div class="line" id="012417"><span class="nick" style="color:#389600"><a href="#012417" label="[01:24:17]">&lt;vagrantc&gt;</a></span><span class="message">some fun for another day....</span></div><div class="line" id="012434"><span class="nick" style="color:#389600"><a href="#012434" label="[01:24:34]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: thanks though! that will be less confusing in the end. :)</span></div><div class="line" id="012439"><span class="nick" style="color:#389600"><a href="#012439" label="[01:24:39]">&lt;vagrantc&gt;</a></span><span class="message">ACTION waves</span></div><div class="line" id="012458"><span class="nick" style="color:#80b1d3"><a href="#012458" label="[01:24:58]">&lt;stikonas&gt;</a></span><span class="message">yep, and will help janneke a bit too</span></div><div class="line" id="012511"><span class="nick" style="color:#80b1d3"><a href="#012511" label="[01:25:11]">&lt;stikonas&gt;</a></span><span class="message">as previous release had a broken shebang in the test script</span></div><div class="line" id="012552"><span class="nick" style="color:#80b1d3"><a href="#012552" label="[01:25:52]">&lt;stikonas&gt;</a></span><span class="message">ok, pushed to github too</span></div><div class="line" id="023106"><span class="nick" style="color:#6d2462"><a href="#023106" label="[02:31:06]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: well I am open to removing submodules iff such that it would result in a simpler and easier to get correct system for people who are not familiar with the tools in question.</span></div><div class="line" id="071816"><span class="nick" style="color:#234e69"><a href="#071816" label="[07:18:16]">&lt;tmg1|michelson&gt;</a></span><span class="message">for what it's worth, my rescued-form-github fork of ninja will try to stay only dependent on python just for you as long as i can keep it <a rel="nofollow" href="https://git.freecumextremist.com/themusicgod1/ninja-build">https://git.freecumextremist.com/themusicgod1/ninja-build</a> </span></div><div class="line" id="095432"><span class="nick" style="color:#8dd3c7"><a href="#095432" label="[09:54:32]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Christoph&gt; vagrantc: What keeps debian from adopting full source bootstrap?</span></div><div class="line" id="134219"><span class="nick" style="color:#6d2462"><a href="#134219" label="[13:42:19]">&lt;oriansj&gt;</a></span><span class="message">Christoph: their current dependency graph probably, it'll take a while to unwind all of it: <a rel="nofollow" href="https://wiki.debian.org/DebianBootstrap">https://wiki.debian.org/DebianBootstrap</a> </span></div><div class="line" id="134337"><span class="nick" style="color:#6d2462"><a href="#134337" label="[13:43:37]">&lt;oriansj&gt;</a></span><span class="message">so a clean bootstrap will probably come easiest from the outside via a functional package manager (like guix or nix) building deb files</span></div><div class="line" id="144442"><span class="nick" style="color:#6c3d55"><a href="#144442" label="[14:44:42]">&lt;ztrawhcse&gt;</a></span><span class="message">tmg1|michelson: there is no bootstrap problem with ninja at all, as your own link already points out</span></div><div class="line" id="144509"><span class="nick" style="color:#2e2a4a"><a href="#144509" label="[14:45:09]">&lt;jcowan&gt;</a></span><span class="message">oriansj: And after that it is a political decision.  If someone gets a Thompson attack into an important distribution, adopting source bootstraps will be quick.</span></div><div class="line" id="144536"><span class="nick" style="color:#2e2a4a"><a href="#144536" label="[14:45:36]">&lt;jcowan&gt;</a></span><span class="message">or if someone important is willing to spend political capital on getting them in.</span></div><div class="line" id="153317"><span class="nick" style="color:#6d2462"><a href="#153317" label="[15:33:17]">&lt;oriansj&gt;</a></span><span class="message">jcowan: yeah, solving human organizational problems is so much harder than the technical problems involved in bootstrapping</span></div><div class="line" id="153516"><span class="nick" style="color:#d9d9d9"><a href="#153516" label="[15:35:16]">&lt;ekaitz&gt;</a></span><span class="message">jcowan: so the best thing we can do to make our work relevant is to trust-attack a major distro??</span></div><div class="line" id="153522"><span class="nick" style="color:#d9d9d9"><a href="#153522" label="[15:35:22]">&lt;ekaitz&gt;</a></span><span class="message">;)</span></div><div class="line" id="153620"><span class="nick" style="color:#2e2a4a"><a href="#153620" label="[15:36:20]">&lt;jcowan&gt;</a></span><span class="message">In the sense that if you want to raise the GDP of your country, you should go around breaking  as many windows as possible, thus triggering the economic activities of making and installing replacements, yes.</span></div><div class="line" id="153646"><span class="nick" style="color:#d9d9d9"><a href="#153646" label="[15:36:46]">&lt;ekaitz&gt;</a></span><span class="message">jcowan: :)</span></div><div class="line" id="154248"><span class="nick" style="color:#6d2462"><a href="#154248" label="[15:42:48]">&lt;oriansj&gt;</a></span><span class="message">ekaitz: we don't even need to do that, we just need to point out trusting trust attacks that already exist</span></div><div class="line" id="154839"><span class="nick" style="color:#bc80bd"><a href="#154839" label="[15:48:39]">&lt;Googulator&gt;</a></span><span class="message">Is 2.19 really the latest version of util-linux we're able to use in live-bootstrap?</span></div><div class="line" id="154921"><span class="nick" style="color:#bc80bd"><a href="#154921" label="[15:49:21]">&lt;Googulator&gt;</a></span><span class="message">It would be nice to use a version that isn't obsessed with CHS geometries and starting/ending partitions on cylinder boundary.</span></div><div class="line" id="160706"><span class="nick" style="color:#6d2462"><a href="#160706" label="[16:07:06]">&lt;oriansj&gt;</a></span><span class="message">Googulator: nothing is the latest we can use, improvements are always possible.</span></div><div class="line" id="160741"><span class="nick" style="color:#6d2462"><a href="#160741" label="[16:07:41]">&lt;oriansj&gt;</a></span><span class="message">it is just a matter of effort and doing the work required to improve the situation.</span></div><div class="line" id="161219"><span class="nick" style="color:#bc80bd"><a href="#161219" label="[16:12:19]">&lt;Googulator&gt;</a></span><span class="message">I did found a workaround to get 2.19 to use proper alignment (echo &quot;2048;&quot; | sfdisk -uS -S32 -H64 &quot;/dev/${DISK}&quot; instead of just echo &quot;;&quot; | sfdisk &quot;/dev/${DISK}&quot; in sysb/run.sh), but 2.26 and up will just do the right thing by default</span></div><div class="line" id="161905"><span class="nick" style="color:#bc80bd"><a href="#161905" label="[16:19:05]">&lt;Googulator&gt;</a></span><span class="message">without this, the ext4 fs will start at offset 0x200, which is misaligned (if you have an AF HDD or an SSD), and also leaves no space for grub (that's another thing I'm working on, so after bootstrap, we can boot back into sysc at any time and do more compilation or auditing in a trusted environment)</span></div><div class="line" id="162018"><span class="nick" style="color:#bc80bd"><a href="#162018" label="[16:20:18]">&lt;Googulator&gt;</a></span><span class="message">I already solved bringing the Linux kernel image into sysc's file system, will post the code for that soon</span></div><div class="line" id="162830"><span class="nick" style="color:#6d2462"><a href="#162830" label="[16:28:30]">&lt;oriansj&gt;</a></span><span class="message">thank you Googulator, we look forward to your improvements.</span></div><div class="line" id="164426"><span class="nick" style="color:#8dd3c7"><a href="#164426" label="[16:44:26]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: no, its likely that newer util-linux will work</span></div><div class="line" id="164451"><span class="nick" style="color:#8dd3c7"><a href="#164451" label="[16:44:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Thought this might be of interest. I've been working on an alternative bootstrap path for tcc <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt">https://github.com/cosinusoidally/tcc_bootstrap_alt</a>  . I've still got work to do, but I have now got to the point where I can generate tcc 0.9.10 using only cc_x86 and M2 (and technically a JS dependency atm, but that can be fixed by porting a ~120 line JS program to C). Process is essentially this:...</span></div><div class="line" id="164456"><span class="nick" style="color:#8dd3c7"><a href="#164456" label="[16:44:56]">&lt;matrix_bridge&gt;</a></span><span class="message">... ./mk_js_to_c_cc_x86 ; mv tcc_js/tcc_boot.o tcc_10/ ; ./mk_loader_m2 . This process generates an unlinked copy of tcc 0.9.10 and deposits it in tcc_10/tcc.o . Next step is to write an elf loader/linker in the cc_x86 dialect of C, plus enought of a libc to allow tcc 0.9.10 to run and build tcc 0.9.23.</span></div><div class="line" id="164500"><span class="nick" style="color:#8dd3c7"><a href="#164500" label="[16:45:00]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Especially since we updated binutils since then</span></div><div class="line" id="170232"><span class="nick" style="color:#bc80bd"><a href="#170232" label="[17:02:32]">&lt;Googulator&gt;</a></span><span class="message">matrix_bridge: &quot;The latest version is not used because of autotools/GCC incompatibilities.&quot; - I wonder what version introduces those incompatibilities.</span></div><div class="line" id="170255"><span class="nick" style="color:#bc80bd"><a href="#170255" label="[17:02:55]">&lt;Googulator&gt;</a></span><span class="message">If it's 2.27 or later, then we can just trivially switch to 2.26.</span></div><div class="line" id="172859"><span class="nick" style="color:#80b1d3"><a href="#172859" label="[17:28:59]">&lt;stikonas&gt;</a></span><span class="message">Googulator: well, you'll have to try</span></div><div class="line" id="172918"><span class="nick" style="color:#80b1d3"><a href="#172918" label="[17:29:18]">&lt;stikonas&gt;</a></span><span class="message">by the way, pinging matrix_bridge wouldn't work... it's a bridge</span></div><div class="line" id="172950"><span class="nick" style="color:#80b1d3"><a href="#172950" label="[17:29:50]">&lt;stikonas&gt;</a></span><span class="message">Googulator: generally we have reasonably new autotools by then, though not the latest</span></div><div class="line" id="173005"><span class="nick" style="color:#80b1d3"><a href="#173005" label="[17:30:05]">&lt;stikonas&gt;</a></span><span class="message">gcc so far is a bit old (4.0.4)</span></div><div class="line" id="173015"><span class="nick" style="color:#80b1d3"><a href="#173015" label="[17:30:15]">&lt;stikonas&gt;</a></span><span class="message">most likely that one can also be upgraded</span></div><div class="line" id="173035"><span class="nick" style="color:#80b1d3"><a href="#173035" label="[17:30:35]">&lt;stikonas&gt;</a></span><span class="message">4.6 migth be of  particular interest as that is what riscv64 port will target</span></div><div class="line" id="173140"><span class="nick" style="color:#bc80bd"><a href="#173140" label="[17:31:40]">&lt;Googulator&gt;</a></span><span class="message">About that alternative TCC bootstrap path: do we actually use the Scheme side of mes for anything other than running mescc?</span></div><div class="line" id="173250"><span class="nick" style="color:#bc80bd"><a href="#173250" label="[17:32:50]">&lt;Googulator&gt;</a></span><span class="message">If not, we can drop mes altogether from the bootstrap path, and just go straight from m2 to tcc</span></div><div class="line" id="173402"><span class="nick" style="color:#80b1d3"><a href="#173402" label="[17:34:02]">&lt;stikonas&gt;</a></span><span class="message">Googulator: we will</span></div><div class="line" id="173410"><span class="nick" style="color:#80b1d3"><a href="#173410" label="[17:34:10]">&lt;stikonas&gt;</a></span><span class="message">but we are not doing it yet</span></div><div class="line" id="173428"><span class="nick" style="color:#80b1d3"><a href="#173428" label="[17:34:28]">&lt;stikonas&gt;</a></span><span class="message">at least in live-bootstrap we'll switch to gash for some early steps</span></div><div class="line" id="173452"><span class="nick" style="color:#bc80bd"><a href="#173452" label="[17:34:52]">&lt;Googulator&gt;</a></span><span class="message">what does gash get us?</span></div><div class="line" id="173452"><span class="nick" style="color:#80b1d3"><a href="#173452" label="[17:34:52]">&lt;stikonas&gt;</a></span><span class="message">it will solve one licensing issue that we have</span></div><div class="line" id="173518"><span class="nick" style="color:#80b1d3"><a href="#173518" label="[17:35:18]">&lt;stikonas&gt;</a></span><span class="message">right now we build heirloom tools (yacc)-&gt;bash-&gt;musl</span></div><div class="line" id="173526"><span class="nick" style="color:#80b1d3"><a href="#173526" label="[17:35:26]">&lt;stikonas&gt;</a></span><span class="message">heirloom tools ins not redistributable</span></div><div class="line" id="173530"><span class="nick" style="color:#80b1d3"><a href="#173530" label="[17:35:30]">&lt;stikonas&gt;</a></span><span class="message">if we do</span></div><div class="line" id="173542"><span class="nick" style="color:#80b1d3"><a href="#173542" label="[17:35:42]">&lt;stikonas&gt;</a></span><span class="message">gash-&gt;musl-&gt;heirloom tools (yacc)-&gt;bash then we are fine</span></div><div class="line" id="173602"><span class="nick" style="color:#80b1d3"><a href="#173602" label="[17:36:02]">&lt;stikonas&gt;</a></span><span class="message">bash/gash are needed to run (non-autotools) configure script of musl</span></div><div class="line" id="173646"><span class="nick" style="color:#3c5b35"><a href="#173646" label="[17:36:46]">&lt;muurkha&gt;</a></span><span class="message">heirloom tools is not redistributable?</span></div><div class="line" id="173704"><span class="nick" style="color:#3c5b35"><a href="#173704" label="[17:37:04]">&lt;muurkha&gt;</a></span><span class="message">I thought they'd been properly open-sourced at last.  is that wrong?</span></div><div class="line" id="173716"><span class="nick" style="color:#bc80bd"><a href="#173716" label="[17:37:16]">&lt;Googulator&gt;</a></span><span class="message">Looks like they're 4-clasuse BSD</span></div><div class="line" id="173744"><span class="nick" style="color:#80b1d3"><a href="#173744" label="[17:37:44]">&lt;stikonas&gt;</a></span><span class="message">muurkha, Googulator, not it's not heirloom tools, it's heirloom tools + meslibc</span></div><div class="line" id="173754"><span class="nick" style="color:#80b1d3"><a href="#173754" label="[17:37:54]">&lt;stikonas&gt;</a></span><span class="message">heirloom tools are CDDL</span></div><div class="line" id="173837"><span class="nick" style="color:#bc80bd"><a href="#173837" label="[17:38:37]">&lt;Googulator&gt;</a></span><span class="message">&amp; meslibc is GPL I guess, which is a problem when they get linked</span></div><div class="line" id="173857"><span class="nick" style="color:#80b1d3"><a href="#173857" label="[17:38:57]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="173912"><span class="nick" style="color:#80b1d3"><a href="#173912" label="[17:39:12]">&lt;stikonas&gt;</a></span><span class="message">and bash has some parser .y file that would be nice to rebuild</span></div><div class="line" id="173923"><span class="nick" style="color:#80b1d3"><a href="#173923" label="[17:39:23]">&lt;stikonas&gt;</a></span><span class="message">well, rebuild .c file generated from .y file</span></div><div class="line" id="173944"><span class="nick" style="color:#bc80bd"><a href="#173944" label="[17:39:44]">&lt;Googulator&gt;</a></span><span class="message">And I guess Bison has some dependency that prevents its use at that stage</span></div><div class="line" id="174004"><span class="nick" style="color:#80b1d3"><a href="#174004" label="[17:40:04]">&lt;stikonas&gt;</a></span><span class="message">yeah, bison bootstrap is far more complicated</span></div><div class="line" id="174017"><span class="nick" style="color:#80b1d3"><a href="#174017" label="[17:40:17]">&lt;stikonas&gt;</a></span><span class="message">it requires at the very least more capable libc</span></div><div class="line" id="174022"><span class="nick" style="color:#80b1d3"><a href="#174022" label="[17:40:22]">&lt;stikonas&gt;</a></span><span class="message">so we need musl</span></div><div class="line" id="174034"><span class="nick" style="color:#80b1d3"><a href="#174034" label="[17:40:34]">&lt;stikonas&gt;</a></span><span class="message">also I think some shell scripts are used there</span></div><div class="line" id="174044"><span class="nick" style="color:#80b1d3"><a href="#174044" label="[17:40:44]">&lt;stikonas&gt;</a></span><span class="message">Googulator: oh, and heirloom tools themselves</span></div><div class="line" id="174050"><span class="nick" style="color:#80b1d3"><a href="#174050" label="[17:40:50]">&lt;stikonas&gt;</a></span><span class="message">that's how we bootstrap bison</span></div><div class="line" id="174107"><span class="nick" style="color:#80b1d3"><a href="#174107" label="[17:41:07]">&lt;stikonas&gt;</a></span><span class="message">well, both flex and bison</span></div><div class="line" id="174139"><span class="nick" style="color:#bc80bd"><a href="#174139" label="[17:41:39]">&lt;Googulator&gt;</a></span><span class="message">&amp; I guess we need a more capable shell than kaem for musl</span></div><div class="line" id="174159"><span class="nick" style="color:#bc80bd"><a href="#174159" label="[17:41:59]">&lt;Googulator&gt;</a></span><span class="message">musl should be linkable with CDDL code, right?</span></div><div class="line" id="174202"><span class="nick" style="color:#80b1d3"><a href="#174202" label="[17:42:02]">&lt;stikonas&gt;</a></span><span class="message">kind of</span></div><div class="line" id="174209"><span class="nick" style="color:#80b1d3"><a href="#174209" label="[17:42:09]">&lt;stikonas&gt;</a></span><span class="message">musl is linkable, yes</span></div><div class="line" id="174224"><span class="nick" style="color:#80b1d3"><a href="#174224" label="[17:42:24]">&lt;stikonas&gt;</a></span><span class="message">there is anoher workaround, not to use ./configure and create config file manually</span></div><div class="line" id="174229"><span class="nick" style="color:#80b1d3"><a href="#174229" label="[17:42:29]">&lt;stikonas&gt;</a></span><span class="message">but given that gash will be coming anyway</span></div><div class="line" id="174232"><span class="nick" style="color:#80b1d3"><a href="#174232" label="[17:42:32]">&lt;stikonas&gt;</a></span><span class="message">then we can just use it</span></div><div class="line" id="174249"><span class="nick" style="color:#80b1d3"><a href="#174249" label="[17:42:49]">&lt;stikonas&gt;</a></span><span class="message">also gash might be usable for building mes/tcc too</span></div><div class="line" id="174305"><span class="nick" style="color:#bc80bd"><a href="#174305" label="[17:43:05]">&lt;Googulator&gt;</a></span><span class="message">problem is, gash is written in Scheme</span></div><div class="line" id="174324"><span class="nick" style="color:#bc80bd"><a href="#174324" label="[17:43:24]">&lt;Googulator&gt;</a></span><span class="message">and right now, running Scheme in mes is d  o  g      s  l  o  w</span></div><div class="line" id="174327"><span class="nick" style="color:#80b1d3"><a href="#174327" label="[17:43:27]">&lt;stikonas&gt;</a></span><span class="message">yes...</span></div><div class="line" id="174338"><span class="nick" style="color:#80b1d3"><a href="#174338" label="[17:43:38]">&lt;stikonas&gt;</a></span><span class="message">oriansj might be able to make it a bit faster</span></div><div class="line" id="174350"><span class="nick" style="color:#80b1d3"><a href="#174350" label="[17:43:50]">&lt;stikonas&gt;</a></span><span class="message">though musl's configure script is fairly short</span></div><div class="line" id="174353"><span class="nick" style="color:#bc80bd"><a href="#174353" label="[17:43:53]">&lt;Googulator&gt;</a></span><span class="message">which is why I was hoping for this alternative tcc bootstrap path with no Scheme dependency</span></div><div class="line" id="174356"><span class="nick" style="color:#80b1d3"><a href="#174356" label="[17:43:56]">&lt;stikonas&gt;</a></span><span class="message">I don't think it will add signigicant time for bootstrap</span></div><div class="line" id="174400"><span class="nick" style="color:#3c5b35"><a href="#174400" label="[17:44:00]">&lt;muurkha&gt;</a></span><span class="message">oh, CDDL is fine on its own, just not in combination with GPL, sure</span></div><div class="line" id="174419"><span class="nick" style="color:#80b1d3"><a href="#174419" label="[17:44:19]">&lt;stikonas&gt;</a></span><span class="message">Googulator: alternative path is interesting, but I think it's disadvantage would be it's x86 only</span></div><div class="line" id="174436"><span class="nick" style="color:#80b1d3"><a href="#174436" label="[17:44:36]">&lt;stikonas&gt;</a></span><span class="message">s/it's/its/</span></div><div class="line" id="174512"><span class="nick" style="color:#bc80bd"><a href="#174512" label="[17:45:12]">&lt;Googulator&gt;</a></span><span class="message">with strategically no /g at the end :)</span></div><div class="line" id="174538"><span class="nick" style="color:#80b1d3"><a href="#174538" label="[17:45:38]">&lt;stikonas&gt;</a></span><span class="message">:)</span></div><div class="line" id="174608"><span class="nick" style="color:#80b1d3"><a href="#174608" label="[17:46:08]">&lt;stikonas&gt;</a></span><span class="message">anyway, mes might be a bit faster once M2-Planet supports switch</span></div><div class="line" id="174625"><span class="nick" style="color:#80b1d3"><a href="#174625" label="[17:46:25]">&lt;stikonas&gt;</a></span><span class="message">and mes.c restores it's switch statements that were once replaced with if/elseif</span></div><div class="line" id="174706"><span class="nick" style="color:#bc80bd"><a href="#174706" label="[17:47:06]">&lt;Googulator&gt;</a></span><span class="message">BTW, in the Guile bootstrap, is mes still being used?</span></div><div class="line" id="174721"><span class="nick" style="color:#bc80bd"><a href="#174721" label="[17:47:21]">&lt;Googulator&gt;</a></span><span class="message">(happens quite late in sysc)</span></div><div class="line" id="174736"><span class="nick" style="color:#80b1d3"><a href="#174736" label="[17:47:36]">&lt;stikonas&gt;</a></span><span class="message">no, mes is not used at all after musl</span></div><div class="line" id="174748"><span class="nick" style="color:#80b1d3"><a href="#174748" label="[17:47:48]">&lt;stikonas&gt;</a></span><span class="message">and after tcc, only meslibc is used</span></div><div class="line" id="174804"><span class="nick" style="color:#80b1d3"><a href="#174804" label="[17:48:04]">&lt;stikonas&gt;</a></span><span class="message">mes is not even transferred from sysa to sysc</span></div><div class="line" id="174822"><span class="nick" style="color:#bc80bd"><a href="#174822" label="[17:48:22]">&lt;Googulator&gt;</a></span><span class="message">Because right now, it's the single slowest part of bootstrap, specifically when it starts touching Scheme code for the first time</span></div><div class="line" id="174834"><span class="nick" style="color:#80b1d3"><a href="#174834" label="[17:48:34]">&lt;stikonas&gt;</a></span><span class="message">Googulator: well, slowest part early on</span></div><div class="line" id="174846"><span class="nick" style="color:#bc80bd"><a href="#174846" label="[17:48:46]">&lt;Googulator&gt;</a></span><span class="message">I mean the Guile build</span></div><div class="line" id="174854"><span class="nick" style="color:#80b1d3"><a href="#174854" label="[17:48:54]">&lt;stikonas&gt;</a></span><span class="message">isn't GCC13 far slower?</span></div><div class="line" id="174908"><span class="nick" style="color:#80b1d3"><a href="#174908" label="[17:49:08]">&lt;stikonas&gt;</a></span><span class="message">but yes, guile build takes a while</span></div><div class="line" id="174908"><span class="nick" style="color:#bc80bd"><a href="#174908" label="[17:49:08]">&lt;Googulator&gt;</a></span><span class="message">could be - haven't had a successful GCC13 build yet...</span></div><div class="line" id="174948"><span class="nick" style="color:#80b1d3"><a href="#174948" label="[17:49:48]">&lt;stikonas&gt;</a></span><span class="message">Googulator: try running all of this on riscv64 (we only reached first tcc right now) and all those x86 builds will feel blazingly fast</span></div><div class="line" id="174950"><span class="nick" style="color:#bc80bd"><a href="#174950" label="[17:49:50]">&lt;Googulator&gt;</a></span><span class="message">compiling the very first Scheme file took 30 min for me on a very modern AMD machine</span></div><div class="line" id="175001"><span class="nick" style="color:#bc80bd"><a href="#175001" label="[17:50:01]">&lt;Googulator&gt;</a></span><span class="message">slower than the whole Linux kernel</span></div><div class="line" id="175006"><span class="nick" style="color:#bc80bd"><a href="#175006" label="[17:50:06]">&lt;Googulator&gt;</a></span><span class="message">for that one file</span></div><div class="line" id="175011"><span class="nick" style="color:#80b1d3"><a href="#175011" label="[17:50:11]">&lt;stikonas&gt;</a></span><span class="message">Googulator: with kernel bootstrap?</span></div><div class="line" id="175032"><span class="nick" style="color:#80b1d3"><a href="#175032" label="[17:50:32]">&lt;stikonas&gt;</a></span><span class="message">and it's probably a second scheme</span></div><div class="line" id="175035"><span class="nick" style="color:#bc80bd"><a href="#175035" label="[17:50:35]">&lt;Googulator&gt;</a></span><span class="message">yes, building Linux in Fiwix takes less time than compiling a single Scheme file during the Guile bootstrap</span></div><div class="line" id="175039"><span class="nick" style="color:#80b1d3"><a href="#175039" label="[17:50:39]">&lt;stikonas&gt;</a></span><span class="message">mes-m2 is the first one that is build with M2-Planet</span></div><div class="line" id="175049"><span class="nick" style="color:#80b1d3"><a href="#175049" label="[17:50:49]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet compiles very quickly, though it's binaries are slow</span></div><div class="line" id="175105"><span class="nick" style="color:#80b1d3"><a href="#175105" label="[17:51:05]">&lt;stikonas&gt;</a></span><span class="message">btu yes, I know what you mean...</span></div><div class="line" id="175119"><span class="nick" style="color:#80b1d3"><a href="#175119" label="[17:51:19]">&lt;stikonas&gt;</a></span><span class="message">part of it is builder-hex0 being also slow</span></div><div class="line" id="175148"><span class="nick" style="color:#80b1d3"><a href="#175148" label="[17:51:48]">&lt;stikonas&gt;</a></span><span class="message">bootstrap in chroot/bubblewrap is a bit faster</span></div><div class="line" id="175151"><span class="nick" style="color:#bc80bd"><a href="#175151" label="[17:51:51]">&lt;Googulator&gt;</a></span><span class="message">and that's with Linux building on a single thread, while Guile compiling that one single Scheme file (within sysc, way after builder-hex0 or anything could be relevant) spins all 8 Zen 4 cores at 100% for half an hour</span></div><div class="line" id="175158"><span class="nick" style="color:#80b1d3"><a href="#175158" label="[17:51:58]">&lt;stikonas&gt;</a></span><span class="message">my 8 year old laptop can build to tcc in about 30 minutes</span></div><div class="line" id="175212"><span class="nick" style="color:#bc80bd"><a href="#175212" label="[17:52:12]">&lt;Googulator&gt;</a></span><span class="message">I'm not talking about the mes build</span></div><div class="line" id="175229"><span class="nick" style="color:#80b1d3"><a href="#175229" label="[17:52:29]">&lt;stikonas&gt;</a></span><span class="message">oh, that guile bootstrap thingy tha mihi wrote</span></div><div class="line" id="175245"><span class="nick" style="color:#80b1d3"><a href="#175245" label="[17:52:45]">&lt;stikonas&gt;</a></span><span class="message">that's trying to solve some precompiled files in guile source issue</span></div><div class="line" id="175247"><span class="nick" style="color:#bc80bd"><a href="#175247" label="[17:52:47]">&lt;Googulator&gt;</a></span><span class="message">GCC 10 also builds faster than a single Scheme file during the guile bootstrap</span></div><div class="line" id="175255"><span class="nick" style="color:#80b1d3"><a href="#175255" label="[17:52:55]">&lt;stikonas&gt;</a></span><span class="message">somethign to do with preexpanded macros</span></div><div class="line" id="175327"><span class="nick" style="color:#80b1d3"><a href="#175327" label="[17:53:27]">&lt;stikonas&gt;</a></span><span class="message">GCC13 will be slower as it is rebuilt with itself (--with-bootstrap)</span></div><div class="line" id="175347"><span class="nick" style="color:#bc80bd"><a href="#175347" label="[17:53:47]">&lt;Googulator&gt;</a></span><span class="message">don't all GCCs do that?</span></div><div class="line" id="175351"><span class="nick" style="color:#80b1d3"><a href="#175351" label="[17:53:51]">&lt;stikonas&gt;</a></span><span class="message">still, I'm a bit surprised that that Guile file takes 30 minutes</span></div><div class="line" id="175356"><span class="nick" style="color:#80b1d3"><a href="#175356" label="[17:53:56]">&lt;stikonas&gt;</a></span><span class="message">Googulator: no, it's an option in ./configure</span></div><div class="line" id="175422"><span class="nick" style="color:#80b1d3"><a href="#175422" label="[17:54:22]">&lt;stikonas&gt;</a></span><span class="message">most distros do that</span></div><div class="line" id="175423"><span class="nick" style="color:#bc80bd"><a href="#175423" label="[17:54:23]">&lt;Googulator&gt;</a></span><span class="message">I'm guessing it's hitting some kind of worst case on AMD</span></div><div class="line" id="175446"><span class="nick" style="color:#bc80bd"><a href="#175446" label="[17:54:46]">&lt;Googulator&gt;</a></span><span class="message">related to Spectre or similar</span></div><div class="line" id="175458"><span class="nick" style="color:#80b1d3"><a href="#175458" label="[17:54:58]">&lt;stikonas&gt;</a></span><span class="message">still, that is a bit strange</span></div><div class="line" id="175546"><span class="nick" style="color:#bc80bd"><a href="#175546" label="[17:55:46]">&lt;Googulator&gt;</a></span><span class="message">&amp; beyond that point, everything feels slower than before, even after Guile is done building</span></div><div class="line" id="175600"><span class="nick" style="color:#bc80bd"><a href="#175600" label="[17:56:00]">&lt;Googulator&gt;</a></span><span class="message">Until gcc13 runs out of memory and I'm dropped to a Bash shell</span></div><div class="line" id="175615"><span class="nick" style="color:#80b1d3"><a href="#175615" label="[17:56:15]">&lt;stikonas&gt;</a></span><span class="message">hmm, how much memory do you have?</span></div><div class="line" id="175620"><span class="nick" style="color:#80b1d3"><a href="#175620" label="[17:56:20]">&lt;stikonas&gt;</a></span><span class="message">it shouldn't take too much</span></div><div class="line" id="175637"><span class="nick" style="color:#80b1d3"><a href="#175637" label="[17:56:37]">&lt;stikonas&gt;</a></span><span class="message">although in 32-bit you are limitted to 3 GiB anyway</span></div><div class="line" id="175639"><span class="nick" style="color:#bc80bd"><a href="#175639" label="[17:56:39]">&lt;Googulator&gt;</a></span><span class="message">I'm giving 8G to qemu, but /proc/meminfo only shows 3G free</span></div><div class="line" id="175644"><span class="nick" style="color:#bc80bd"><a href="#175644" label="[17:56:44]">&lt;Googulator&gt;</a></span><span class="message">3G total I mean</span></div><div class="line" id="175651"><span class="nick" style="color:#80b1d3"><a href="#175651" label="[17:56:51]">&lt;stikonas&gt;</a></span><span class="message">yeah, you won't get more on 32-bit machine</span></div><div class="line" id="175704"><span class="nick" style="color:#bc80bd"><a href="#175704" label="[17:57:04]">&lt;Googulator&gt;</a></span><span class="message">probably 32-bit restriction, although it's weird since the kernel's built with PAE</span></div><div class="line" id="175733"><span class="nick" style="color:#bc80bd"><a href="#175733" label="[17:57:33]">&lt;Googulator&gt;</a></span><span class="message">Right now I'm doing another bootstrap, this time with a swap file early in sysc/run.sh</span></div><div class="line" id="175821"><span class="nick" style="color:#bc80bd"><a href="#175821" label="[17:58:21]">&lt;Googulator&gt;</a></span><span class="message">PAE should support 64G</span></div><div class="line" id="175834"><span class="nick" style="color:#bc80bd"><a href="#175834" label="[17:58:34]">&lt;Googulator&gt;</a></span><span class="message">With only a 4G/process restriction</span></div><div class="line" id="175846"><span class="nick" style="color:#bc80bd"><a href="#175846" label="[17:58:46]">&lt;Googulator&gt;</a></span><span class="message">(or 3G/process because of the user/kernel split)</span></div><div class="line" id="175904"><span class="nick" style="color:#80b1d3"><a href="#175904" label="[17:59:04]">&lt;stikonas&gt;</a></span><span class="message">well, that only helps with parallel builds</span></div><div class="line" id="175949"><span class="nick" style="color:#bc80bd"><a href="#175949" label="[17:59:49]">&lt;Googulator&gt;</a></span><span class="message">I'm building on 8 cores / 16 threads right now, so maybe that's why it's running out of memory there</span></div><div class="line" id="180024"><span class="nick" style="color:#80b1d3"><a href="#180024" label="[18:00:24]">&lt;stikonas&gt;</a></span><span class="message">perhaps PAE is misbehaving?</span></div><div class="line" id="180234"><span class="nick" style="color:#bc80bd"><a href="#180234" label="[18:02:34]">&lt;Googulator&gt;</a></span><span class="message">I'm guessing either qemu isn't reporting PAE support to the guest</span></div><div class="line" id="180253"><span class="nick" style="color:#bc80bd"><a href="#180253" label="[18:02:53]">&lt;Googulator&gt;</a></span><span class="message">Or maybe the 4.9 kernel doesn't properly detect PAE support on AMD in 32-bit mode</span></div><div class="line" id="180406"><span class="nick" style="color:#bc80bd"><a href="#180406" label="[18:04:06]">&lt;Googulator&gt;</a></span><span class="message">tbh contemporary Intel CPUs aren't even officially supported in any 32-bit environment, although AMD is supposed to be a bit more lenient here</span></div><div class="line" id="180901"><span class="nick" style="color:#bc80bd"><a href="#180901" label="[18:09:01]">&lt;Googulator&gt;</a></span><span class="message">How does the Linux kernel even receive the memory map in our setup with kexec-linux from Fiwix?</span></div><div class="line" id="180959"><span class="nick" style="color:#2e2a4a"><a href="#180959" label="[18:09:59]">&lt;jcowan&gt;</a></span><span class="message">What about using Solaris rather than GNU toolkit programs?</span></div><div class="line" id="181005"><span class="nick" style="color:#2e2a4a"><a href="#181005" label="[18:10:05]">&lt;jcowan&gt;</a></span><span class="message">it is CDDL</span></div><div class="line" id="181024"><span class="nick" style="color:#bc80bd"><a href="#181024" label="[18:10:24]">&lt;Googulator&gt;</a></span><span class="message">Toolkit isn't the issue</span></div><div class="line" id="181026"><span class="nick" style="color:#bc80bd"><a href="#181026" label="[18:10:26]">&lt;Googulator&gt;</a></span><span class="message">meslibc is</span></div><div class="line" id="181032"><span class="nick" style="color:#bc80bd"><a href="#181032" label="[18:10:32]">&lt;Googulator&gt;</a></span><span class="message">which isn't easily replaced</span></div><div class="line" id="181050"><span class="nick" style="color:#bc80bd"><a href="#181050" label="[18:10:50]">&lt;Googulator&gt;</a></span><span class="message">&amp; it's strictly GPL with no linking exception, unlike other libc implementations</span></div><div class="line" id="181118"><span class="nick" style="color:#3c5b35"><a href="#181118" label="[18:11:18]">&lt;muurkha&gt;</a></span><span class="message">yeah, I don't think Solaris has a libc that can be compiled with toolchains from 40 years ago</span></div><div class="line" id="182052"><span class="nick" style="color:#bc80bd"><a href="#182052" label="[18:20:52]">&lt;Googulator&gt;</a></span><span class="message">not even &quot;from 40 years ago&quot; at that point, but rather minimal toolchains specifically made for bootstrapping</span></div><div class="line" id="183913"><span class="nick" style="color:#3c5b35"><a href="#183913" label="[18:39:13]">&lt;muurkha&gt;</a></span><span class="message">well, I was thinking of heirloom-tools</span></div><div class="line" id="183921"><span class="nick" style="color:#3c5b35"><a href="#183921" label="[18:39:21]">&lt;muurkha&gt;</a></span><span class="message">aren't those from 40 years ago?</span></div><div class="line" id="185257"><span class="nick" style="color:#80b1d3"><a href="#185257" label="[18:52:57]">&lt;stikonas&gt;</a></span><span class="message">well, using gash/musl is the easiest way to replace meslibc for heirloom-tools</span></div><div class="line" id="191511"><span class="nick" style="color:#af8d2f"><a href="#191511" label="[19:15:11]">&lt;janneke&gt;</a></span><span class="message">Christoph: i'd say a debian developer who wants to attempt it</span></div><div class="line" id="191658"><span class="nick" style="color:#af8d2f"><a href="#191658" label="[19:16:58]">&lt;janneke&gt;</a></span><span class="message">it should be possible to patch dpkg so that it can build a package that ignores build-essential and instead specifies all of its build dependencies</span></div><div class="line" id="191829"><span class="nick" style="color:#af8d2f"><a href="#191829" label="[19:18:29]">&lt;janneke&gt;</a></span><span class="message">then, as a first step, all packages that are part of build-essential could be rewritten and be bootstrapped</span></div><div class="line" id="191849"><span class="nick" style="color:#af8d2f"><a href="#191849" label="[19:18:49]">&lt;janneke&gt;</a></span><span class="message">for the rest of debian, i defer to oriansj's answer :)</span></div><div class="line" id="192956"><span class="nick" style="color:#80b1d3"><a href="#192956" label="[19:29:56]">&lt;stikonas&gt;</a></span><span class="message">janneke: by the way, I've released mescc-tools 1.5.2 with that fix to test.sh</span></div><div class="line" id="193004"><span class="nick" style="color:#80b1d3"><a href="#193004" label="[19:30:04]">&lt;stikonas&gt;</a></span><span class="message">(the one where shebang was broken)</span></div><div class="line" id="193411"><span class="nick" style="color:#af8d2f"><a href="#193411" label="[19:34:11]">&lt;janneke&gt;</a></span><span class="message">stikonas: lovely, thanks</span></div><div class="line" id="195603"><span class="nick" style="color:#6d2462"><a href="#195603" label="[19:56:03]">&lt;oriansj&gt;</a></span><span class="message">although the meslibc CDDL issue could  be resolved by moving musl earlier and building flex/bison with it instead. But stikonas would know better if I missed something obvious</span></div><div class="line" id="195639"><span class="nick" style="color:#80b1d3"><a href="#195639" label="[19:56:39]">&lt;stikonas&gt;</a></span><span class="message">oriansj: yeah, if we move musl before heirloom tools then it would be resolved</span></div><div class="line" id="195656"><span class="nick" style="color:#80b1d3"><a href="#195656" label="[19:56:56]">&lt;stikonas&gt;</a></span><span class="message">though we need at least heirloom tools for bash</span></div><div class="line" id="195708"><span class="nick" style="color:#80b1d3"><a href="#195708" label="[19:57:08]">&lt;stikonas&gt;</a></span><span class="message">which is why gash would help us with this issue</span></div><div class="line" id="195836"><span class="nick" style="color:#bc80bd"><a href="#195836" label="[19:58:36]">&lt;Googulator&gt;</a></span><span class="message">Looks like the extreme Guile slowness was memory pressure - adding swap seems to have helped.</span></div><div class="line" id="195856"><span class="nick" style="color:#6d2462"><a href="#195856" label="[19:58:56]">&lt;oriansj&gt;</a></span><span class="message">which means it would be an ugly kaem script for the tcc build of musl but it could potentially be done instead of waiting for gash</span></div><div class="line" id="200212"><span class="nick" style="color:#bc80bd"><a href="#200212" label="[20:02:12]">&lt;Googulator&gt;</a></span><span class="message">With 8G swap, less than 2 hours after starting the VM, I'm already bootstrapping Python</span></div><div class="line" id="200848"><span class="nick" style="color:#bc80bd"><a href="#200848" label="[20:08:48]">&lt;Googulator&gt;</a></span><span class="message">Python bootstrap done just before the 2-hour mark, now building gcc 10</span></div><div class="line" id="201056"><span class="nick" style="color:#389600"><a href="#201056" label="[20:10:56]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: the memory map is passed to Linux using the Linux boot protocol: &lt;<a rel="nofollow" href="https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb3/kernel/kexec.c#L915-L928">https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb3/kernel/kexec.c#L915-L928</a>&gt; </span></div><div class="line" id="201122"><span class="nick" style="color:#bc80bd"><a href="#201122" label="[20:11:22]">&lt;Googulator&gt;</a></span><span class="message">(with the slight blemish that the trick I did to bring the Linux kernel into sysc failed due to an incorrectly called tar command, so we saved some time there by not creating that tarball)</span></div><div class="line" id="202011"><span class="nick" style="color:#bc80bd"><a href="#202011" label="[20:20:11]">&lt;Googulator&gt;</a></span><span class="message">Mikaku: That explains it, since Fiwix censors the BIOS memory map, dropping anything in PAE address space (<a rel="nofollow" href="https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb3/mm/bios_map.c#L126">https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb3/mm/bios_map.c#L126</a>) </span></div><div class="line" id="202149"><span class="nick" style="color:#389600"><a href="#202149" label="[20:21:49]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: yes, Fiwix doesn't support PAE</span></div><div class="line" id="202228"><span class="nick" style="color:#bc80bd"><a href="#202228" label="[20:22:28]">&lt;Googulator&gt;</a></span><span class="message">worse than just &quot;doesn't support&quot;, it blocks anything it kexecs from using its own PAE support either</span></div><div class="line" id="203104"><span class="nick" style="color:#80b1d3"><a href="#203104" label="[20:31:04]">&lt;stikonas&gt;</a></span><span class="message">Googulator: how about if we kexec again into linux?</span></div><div class="line" id="203110"><span class="nick" style="color:#80b1d3"><a href="#203110" label="[20:31:10]">&lt;stikonas&gt;</a></span><span class="message">does that block remain?</span></div><div class="line" id="203137"><span class="nick" style="color:#bc80bd"><a href="#203137" label="[20:31:37]">&lt;Googulator&gt;</a></span><span class="message">Yes, because now Linux gets the BIOS memory map censored by Fiwix, rather than the original one</span></div><div class="line" id="203152"><span class="nick" style="color:#80b1d3"><a href="#203152" label="[20:31:52]">&lt;stikonas&gt;</a></span><span class="message">I see</span></div><div class="line" id="203200"><span class="nick" style="color:#80b1d3"><a href="#203200" label="[20:32:00]">&lt;stikonas&gt;</a></span><span class="message">so only cold reboot would help...</span></div><div class="line" id="203214"><span class="nick" style="color:#80b1d3"><a href="#203214" label="[20:32:14]">&lt;stikonas&gt;</a></span><span class="message">or maybe warm reboot but not kexec reboot</span></div><div class="line" id="203552"><span class="nick" style="color:#80b1d3"><a href="#203552" label="[20:35:52]">&lt;stikonas&gt;</a></span><span class="message">hmm, still if we have memory issue, then it's probably not worth building with so many threads</span></div><div class="line" id="203607"><span class="nick" style="color:#80b1d3"><a href="#203607" label="[20:36:07]">&lt;stikonas&gt;</a></span><span class="message">even -j1 only takes 3h or so, so maybe just -j2 would work better for you</span></div><div class="line" id="203848"><span class="nick" style="color:#bc80bd"><a href="#203848" label="[20:38:48]">&lt;Googulator&gt;</a></span><span class="message">Seems like Fiwix's map censoring is quite easy to fix</span></div><div class="line" id="205126"><span class="nick" style="color:#bc80bd"><a href="#205126" label="[20:51:26]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/Googulator/Fiwix/commit/42f8af6c221e3c6c49739e5cea0325d2f161941b">https://github.com/Googulator/Fiwix/commit/42f8af6c221e3c6c49739e5cea0325d2f161941b</a>  first attempt</span></div><div class="line" id="211445"><span class="nick" style="color:#bc80bd"><a href="#211445" label="[21:14:45]">&lt;Googulator&gt;</a></span><span class="message">Fiwix did boot with this patch, but unfortunately it's not the only place where we're losing memory</span></div><div class="line" id="211508"><span class="nick" style="color:#bc80bd"><a href="#211508" label="[21:15:08]">&lt;Googulator&gt;</a></span><span class="message">kexec-fiwix.c actually constructs a fake memory map, and that's the one Fiwix receives, and eventually passes on to Linux</span></div><div class="line" id="213125"><span class="nick" style="color:#bc80bd"><a href="#213125" label="[21:31:25]">&lt;Googulator&gt;</a></span><span class="message">For reference, this is the current diff to live-bootstrap I'm running with: <a rel="nofollow" href="https://paste.linux.chat/?06da0f3839d325fe#Dmo5MoXKWcUgRkZm3VhZ4qewrr6u2jkXHnrfxT2v3YLB">https://paste.linux.chat/?06da0f3839d325fe#Dmo5MoXKWcUgRkZm3VhZ4qewrr6u2jkXHnrfxT2v3YLB</a> </span></div><div class="line" id="213236"><span class="nick" style="color:#bc80bd"><a href="#213236" label="[21:32:36]">&lt;Googulator&gt;</a></span><span class="message">(the Fiwix URL there is not valid yet, I just put the modified tar.gz in distfiles)</span></div><div class="line" id="215719"><span class="nick" style="color:#80b1d3"><a href="#215719" label="[21:57:19]">&lt;stikonas&gt;</a></span><span class="message">Googulator: openssl fails to download?</span></div><div class="line" id="215916"><span class="nick" style="color:#bc80bd"><a href="#215916" label="[21:59:16]">&lt;Googulator&gt;</a></span><span class="message">yes, redirects to HTTPS URL</span></div><div class="line" id="215923"><span class="nick" style="color:#bc80bd"><a href="#215923" label="[21:59:23]">&lt;Googulator&gt;</a></span><span class="message">I've made an issue about this on GitHub</span></div><div class="line" id="220020"><span class="nick" style="color:#bc80bd"><a href="#220020" label="[22:00:20]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/327">https://github.com/fosslinux/live-bootstrap/issues/327</a> </span></div><div class="line" id="220456"><span class="nick" style="color:#bc80bd"><a href="#220456" label="[22:04:56]">&lt;Googulator&gt;</a></span><span class="message">[    0.000000] BIOS-e820: [mem 0x0000000100000000-0x00000001fffffffe] usable</span></div><div class="line" id="220457"><span class="nick" style="color:#bc80bd"><a href="#220457" label="[22:04:57]">&lt;Googulator&gt;</a></span><span class="message">YES!!!</span></div><div class="line" id="220903"><span class="nick" style="color:#bc80bd"><a href="#220903" label="[22:09:03]">&lt;Googulator&gt;</a></span><span class="message">Mikaku: <a rel="nofollow" href="https://github.com/rick-masters/Fiwix/pull/1">https://github.com/rick-masters/Fiwix/pull/1</a> </span></div><div class="line" id="220935"><span class="nick" style="color:#bc80bd"><a href="#220935" label="[22:09:35]">&lt;Googulator&gt;</a></span><span class="message">(submitted to Rick's repo, but should also apply cleanly to yours, except for the bits related to Linux kexec targets)</span></div><div class="line" id="221344"><span class="nick" style="color:#bc80bd"><a href="#221344" label="[22:13:44]">&lt;Googulator&gt;</a></span><span class="message">this will also need a fix to kexec-fiwix to use the actual BIOS-provided memory map instead of its own fake one - for now, I band-aided over this by hardcoding 4GB of available high memory right above the non-PAE address space</span></div><div class="line" id="235041"><span class="nick" style="color:#389600"><a href="#235041" label="[23:50:41]">&lt;vagrantc&gt;</a></span><span class="message">stikonas, oriansj: the clean target in mescc-tools is missing a couple things: <a rel="nofollow" href="https://salsa.debian.org/debian/mescc-tools/-/blob/debian/latest/debian/patches/0001-makefile-Call-cleanup.sh-for-test12-and-test13.patch">https://salsa.debian.org/debian/mescc-tools/-/blob/debian/latest/debian/patches/0001-makefile-Call-cleanup.sh-for-test12-and-test13.patch</a> </span></div><div class="line" id="235213"><span class="nick" style="color:#80b1d3"><a href="#235213" label="[23:52:13]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: merged</span></div><div class="line" id="235230"><span class="nick" style="color:#80b1d3"><a href="#235230" label="[23:52:30]">&lt;stikonas&gt;</a></span><span class="message">hopefully you don't need a new release urgently...</span></div><div class="line" id="235556"><span class="nick" style="color:#389600"><a href="#235556" label="[23:55:56]">&lt;vagrantc&gt;</a></span><span class="message"> stikonas: yeah, no release needed. just wanted to cleanup the tag/tarball confusion :)</span></div><div class="line" id="235634"><span class="nick" style="color:#389600"><a href="#235634" label="[23:56:34]">&lt;vagrantc&gt;</a></span><span class="message">i am fine for applying a few patches usually, but i did not want anyone else to go through the labrynthe of waht happened with 1.5.0 and 1.5.1 again, if it could be avoided. :)</span></div><div class="line" id="235646"><span class="nick" style="color:#389600"><a href="#235646" label="[23:56:46]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: and thanks!</span></div><div class="line" id="235701"><span class="nick" style="color:#389600"><a href="#235701" label="[23:57:01]">&lt;vagrantc&gt;</a></span><span class="message">probably have a similar patch i need to work on for mes</span></div><br /></div></body></html>