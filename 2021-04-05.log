<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-04-05.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000005"><span class="nick" style="color:#389600"><a href="#000005" label="[00:00:05]">&lt;fossy&gt;</a></span><span class="message">when using git it is significantly easier for it to be MITMd and data changed within</span></div><div class="line" id="000006"><span class="nick" style="color:#8dd3c7"><a href="#000006" label="[00:00:06]">&lt;stikonas&gt;</a></span><span class="message">but bootstrap can check validity of checksums</span></div><div class="line" id="000007"><span class="nick" style="color:#2e2a4a"><a href="#000007" label="[00:00:07]">&lt;bauen1&gt;</a></span><span class="message">stikonas: that depends on the hosts tar being decent enough</span></div><div class="line" id="000009"><span class="nick" style="color:#389600"><a href="#000009" label="[00:00:09]">&lt;fossy&gt;</a></span><span class="message">we have to do that either way?</span></div><div class="line" id="000017"><span class="nick" style="color:#389600"><a href="#000017" label="[00:00:17]">&lt;fossy&gt;</a></span><span class="message">(download million of gnulib snapshots)</span></div><div class="line" id="000023"><span class="nick" style="color:#389600"><a href="#000023" label="[00:00:23]">&lt;fossy&gt;</a></span><span class="message">as a submodule points to a specific commit</span></div><div class="line" id="000025"><span class="nick" style="color:#2e2a4a"><a href="#000025" label="[00:00:25]">&lt;bauen1&gt;</a></span><span class="message">stikonas: another option discussed here was using the software heritage archive as backup mirror</span></div><div class="line" id="000042"><span class="nick" style="color:#8dd3c7"><a href="#000042" label="[00:00:42]">&lt;stikonas&gt;</a></span><span class="message">well, git downloads all snapshots, but it compresses them better</span></div><div class="line" id="000044"><span class="nick" style="color:#8dd3c7"><a href="#000044" label="[00:00:44]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="000056"><span class="nick" style="color:#389600"><a href="#000056" label="[00:00:56]">&lt;fossy&gt;</a></span><span class="message">yes but downloading a tar.gz snapshot is like depth=1</span></div><div class="line" id="000108"><span class="nick" style="color:#389600"><a href="#000108" label="[00:01:08]">&lt;fossy&gt;</a></span><span class="message">so it's always going to be faster/smaller than full git submodule</span></div><div class="line" id="000108"><span class="nick" style="color:#8dd3c7"><a href="#000108" label="[00:01:08]">&lt;stikonas&gt;</a></span><span class="message">but yes, I guess we depend on tar being decent enough</span></div><div class="line" id="000116"><span class="nick" style="color:#8dd3c7"><a href="#000116" label="[00:01:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: for one thing yes</span></div><div class="line" id="000129"><span class="nick" style="color:#8dd3c7"><a href="#000129" label="[00:01:29]">&lt;stikonas&gt;</a></span><span class="message">but once we have more, like 20, I'm not sure what is faster...</span></div><div class="line" id="000135"><span class="nick" style="color:#8dd3c7"><a href="#000135" label="[00:01:35]">&lt;stikonas&gt;</a></span><span class="message">but ok, I can switch to snapshot</span></div><div class="line" id="000137"><span class="nick" style="color:#80b1d3"><a href="#000137" label="[00:01:37]">*</a></span><span class="message">fossy would eventually like to remove the need for submodules entirely and preferably git on the host as well</span></div><div class="line" id="000150"><span class="nick" style="color:#389600"><a href="#000150" label="[00:01:50]">&lt;fossy&gt;</a></span><span class="message">smaller TCB for generation</span></div><div class="line" id="000158"><span class="nick" style="color:#8dd3c7"><a href="#000158" label="[00:01:58]">&lt;stikonas&gt;</a></span><span class="message">well, Ideally we create a release at some point</span></div><div class="line" id="000202"><span class="nick" style="color:#389600"><a href="#000202" label="[00:02:02]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="000243"><span class="nick" style="color:#389600"><a href="#000243" label="[00:02:43]">&lt;fossy&gt;</a></span><span class="message">how does having more change how fast it is? cause you still need a submodule for every single gnulib checkout, and same for the tarball</span></div><div class="line" id="000301"><span class="nick" style="color:#8dd3c7"><a href="#000301" label="[00:03:01]">&lt;stikonas&gt;</a></span><span class="message">I thought it's the same submodule</span></div><div class="line" id="000306"><span class="nick" style="color:#389600"><a href="#000306" label="[00:03:06]">&lt;fossy&gt;</a></span><span class="message">no</span></div><div class="line" id="000310"><span class="nick" style="color:#8dd3c7"><a href="#000310" label="[00:03:10]">&lt;stikonas&gt;</a></span><span class="message">just checked out to different revisions</span></div><div class="line" id="000313"><span class="nick" style="color:#8dd3c7"><a href="#000313" label="[00:03:13]">&lt;stikonas&gt;</a></span><span class="message">git can't do that?</span></div><div class="line" id="000319"><span class="nick" style="color:#389600"><a href="#000319" label="[00:03:19]">&lt;fossy&gt;</a></span><span class="message">no, i tried that before</span></div><div class="line" id="000324"><span class="nick" style="color:#389600"><a href="#000324" label="[00:03:24]">&lt;fossy&gt;</a></span><span class="message">don't remember with which package</span></div><div class="line" id="000324"><span class="nick" style="color:#8dd3c7"><a href="#000324" label="[00:03:24]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="000328"><span class="nick" style="color:#8dd3c7"><a href="#000328" label="[00:03:28]">&lt;stikonas&gt;</a></span><span class="message">probably tcc</span></div><div class="line" id="000336"><span class="nick" style="color:#389600"><a href="#000336" label="[00:03:36]">&lt;fossy&gt;</a></span><span class="message">oh no it was mes libc</span></div><div class="line" id="000338"><span class="nick" style="color:#8dd3c7"><a href="#000338" label="[00:03:38]">&lt;stikonas&gt;</a></span><span class="message">that's the only early package that we build twice</span></div><div class="line" id="000340"><span class="nick" style="color:#8dd3c7"><a href="#000340" label="[00:03:40]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="000341"><span class="nick" style="color:#389600"><a href="#000341" label="[00:03:41]">&lt;fossy&gt;</a></span><span class="message">the main one and then -patched</span></div><div class="line" id="000344"><span class="nick" style="color:#389600"><a href="#000344" label="[00:03:44]">&lt;fossy&gt;</a></span><span class="message">i think</span></div><div class="line" id="000402"><span class="nick" style="color:#389600"><a href="#000402" label="[00:04:02]">&lt;fossy&gt;</a></span><span class="message">it has 0 form of caching :|</span></div><div class="line" id="000418"><span class="nick" style="color:#8dd3c7"><a href="#000418" label="[00:04:18]">&lt;stikonas&gt;</a></span><span class="message">ok, then I agree, submodules wouldn't be faster</span></div><div class="line" id="000500"><span class="nick" style="color:#8dd3c7"><a href="#000500" label="[00:05:00]">&lt;stikonas&gt;</a></span><span class="message">hmm, slightly annoyingly though, get_file function only supports 1 download</span></div><div class="line" id="000522"><span class="nick" style="color:#389600"><a href="#000522" label="[00:05:22]">&lt;fossy&gt;</a></span><span class="message">we need to look at how to 'fix' that</span></div><div class="line" id="000523"><span class="nick" style="color:#8dd3c7"><a href="#000523" label="[00:05:23]">&lt;stikonas&gt;</a></span><span class="message">I think I need to fix that first</span></div><div class="line" id="000528"><span class="nick" style="color:#8dd3c7"><a href="#000528" label="[00:05:28]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="000608"><span class="nick" style="color:#8dd3c7"><a href="#000608" label="[00:06:08]">&lt;stikonas&gt;</a></span><span class="message">get_files function that is similar to get_file wrt to the first argument but also downloads rest of the files?</span></div><div class="line" id="000822"><span class="nick" style="color:#6d2462"><a href="#000822" label="[00:08:22]">&lt;OriansJ`&gt;</a></span><span class="message">well git submodules only make sense if you have various pieces all in development and you can't depend upon tar, wget and/or sha256sum being available</span></div><div class="line" id="000903"><span class="nick" style="color:#8dd3c7"><a href="#000903" label="[00:09:03]">&lt;stikonas&gt;</a></span><span class="message">well, fossy convinced me that snapshot is better anyway..</span></div><div class="line" id="000914"><span class="nick" style="color:#6d2462"><a href="#000914" label="[00:09:14]">&lt;OriansJ`&gt;</a></span><span class="message">which is fine for the really low level pieces like stage0-posix (which you can manually check for correctness)</span></div><div class="line" id="000921"><span class="nick" style="color:#8dd3c7"><a href="#000921" label="[00:09:21]">&lt;stikonas&gt;</a></span><span class="message">I had an impression that there would be more caching, but apparently that's wrong</span></div><div class="line" id="000944"><span class="nick" style="color:#6d2462"><a href="#000944" label="[00:09:44]">&lt;OriansJ`&gt;</a></span><span class="message">yeah git submodule really hogs bandwidth</span></div><div class="line" id="001010"><span class="nick" style="color:#6d2462"><a href="#001010" label="[00:10:10]">&lt;OriansJ`&gt;</a></span><span class="message">which doesn't matter if the repo is 10KB but becomes a bitch when you have something like 100MB repo</span></div><div class="line" id="001020"><span class="nick" style="color:#6d2462"><a href="#001020" label="[00:10:20]">&lt;OriansJ`&gt;</a></span><span class="message">that you would have to download perhaps a dozen times</span></div><div class="line" id="001117"><span class="nick" style="color:#6d2462"><a href="#001117" label="[00:11:17]">&lt;OriansJ`&gt;</a></span><span class="message">like mes or tcc</span></div><div class="line" id="001348"><span class="nick" style="color:#6d2462"><a href="#001348" label="[00:13:48]">&lt;OriansJ`&gt;</a></span><span class="message">right now live-bootstrap can *NOT* be downloaded using git on a flaky network connection</span></div><div class="line" id="001359"><span class="nick" style="color:#389600"><a href="#001359" label="[00:13:59]">&lt;fossy&gt;</a></span><span class="message">it has a lot of submodules rn, yes</span></div><div class="line" id="001422"><span class="nick" style="color:#8dd3c7"><a href="#001422" label="[00:14:22]">&lt;stikonas&gt;</a></span><span class="message">oh, yeah, that might be the problem. luckily my connections is quite reliable</span></div><div class="line" id="001435"><span class="nick" style="color:#389600"><a href="#001435" label="[00:14:35]">&lt;fossy&gt;</a></span><span class="message">i wonder how downloading over tor would go</span></div><div class="line" id="001435"><span class="nick" style="color:#6d2462"><a href="#001435" label="[00:14:35]">&lt;OriansJ`&gt;</a></span><span class="message">and mes and TCC submodules flat out die</span></div><div class="line" id="001509"><span class="nick" style="color:#6d2462"><a href="#001509" label="[00:15:09]">&lt;OriansJ`&gt;</a></span><span class="message">and because git pull/fetch doesn't resume downloads it tries to download the 100+MB pack file from scratch again</span></div><div class="line" id="001604"><span class="nick" style="color:#6d2462"><a href="#001604" label="[00:16:04]">&lt;OriansJ`&gt;</a></span><span class="message">So the only way it can be downloaded for those people is to setup a VPS and do the git clone --recursive and then tar it up and use sftp to download it (it supports resume)</span></div><div class="line" id="001607"><span class="nick" style="color:#8dd3c7"><a href="#001607" label="[00:16:07]">&lt;stikonas&gt;</a></span><span class="message">but in any case I was thinking that at some point once we get a bit further, we should make a release</span></div><div class="line" id="001616"><span class="nick" style="color:#8dd3c7"><a href="#001616" label="[00:16:16]">&lt;stikonas&gt;</a></span><span class="message">i.e. git tag and tarball of all sources</span></div><div class="line" id="001630"><span class="nick" style="color:#389600"><a href="#001630" label="[00:16:30]">&lt;fossy&gt;</a></span><span class="message">we should do that once we get to modern toolchain</span></div><div class="line" id="001645"><span class="nick" style="color:#389600"><a href="#001645" label="[00:16:45]">&lt;fossy&gt;</a></span><span class="message">that's when i think it has fufilled its main purpose</span></div><div class="line" id="001656"><span class="nick" style="color:#389600"><a href="#001656" label="[00:16:56]">&lt;fossy&gt;</a></span><span class="message">then we need to go back and make various improvements</span></div><div class="line" id="001658"><span class="nick" style="color:#6d2462"><a href="#001658" label="[00:16:58]">&lt;OriansJ`&gt;</a></span><span class="message">absolutely traditionally in bootstrapping projects once you bootstrap GCC, you call it version 1.0</span></div><div class="line" id="001711"><span class="nick" style="color:#8dd3c7"><a href="#001711" label="[00:17:11]">&lt;stikonas&gt;</a></span><span class="message">well, our GCC is so far C only...</span></div><div class="line" id="001721"><span class="nick" style="color:#389600"><a href="#001721" label="[00:17:21]">&lt;fossy&gt;</a></span><span class="message">i think OriansJ` means modern GCC</span></div><div class="line" id="001728"><span class="nick" style="color:#8dd3c7"><a href="#001728" label="[00:17:28]">&lt;stikonas&gt;</a></span><span class="message">I'm not sure...</span></div><div class="line" id="001731"><span class="nick" style="color:#389600"><a href="#001731" label="[00:17:31]">&lt;fossy&gt;</a></span><span class="message">idk</span></div><div class="line" id="001735"><span class="nick" style="color:#8dd3c7"><a href="#001735" label="[00:17:35]">&lt;stikonas&gt;</a></span><span class="message">which one do you mean?</span></div><div class="line" id="001736"><span class="nick" style="color:#389600"><a href="#001736" label="[00:17:36]">&lt;fossy&gt;</a></span><span class="message">i don't think it's release-ready</span></div><div class="line" id="001742"><span class="nick" style="color:#8dd3c7"><a href="#001742" label="[00:17:42]">&lt;stikonas&gt;</a></span><span class="message">yeah, we need to solve more issues</span></div><div class="line" id="001743"><span class="nick" style="color:#6d2462"><a href="#001743" label="[00:17:43]">&lt;OriansJ`&gt;</a></span><span class="message">and 1.0 releases don't have to be amazing just something to point to and say hey look</span></div><div class="line" id="001811"><span class="nick" style="color:#389600"><a href="#001811" label="[00:18:11]">&lt;fossy&gt;</a></span><span class="message">mm, kinda, i prefer saying 1.0 is stable-ish and known to work well</span></div><div class="line" id="001814"><span class="nick" style="color:#6d2462"><a href="#001814" label="[00:18:14]">&lt;OriansJ`&gt;</a></span><span class="message">with the promise of something better at version 1.1 or 2.0 (depending how fast you are making progress)</span></div><div class="line" id="001814"><span class="nick" style="color:#8dd3c7"><a href="#001814" label="[00:18:14]">&lt;stikonas&gt;</a></span><span class="message">although, I was thinking we should write to bootstrappable mailing list that live-bootstrap can now get to GCC 4.04</span></div><div class="line" id="001845"><span class="nick" style="color:#6d2462"><a href="#001845" label="[00:18:45]">&lt;OriansJ`&gt;</a></span><span class="message">fossy: It is your project, do what makes you happest ^_^</span></div><div class="line" id="001914"><span class="nick" style="color:#8dd3c7"><a href="#001914" label="[00:19:14]">&lt;stikonas&gt;</a></span><span class="message">by the way, a few more tests showed that we might already win a minute or two if we don't rebuild mes</span></div><div class="line" id="001922"><span class="nick" style="color:#6d2462"><a href="#001922" label="[00:19:22]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: public announcments in bootstrapping is one area we have always been traditionally weak at but I hope you can help address that weakness.</span></div><div class="line" id="001945"><span class="nick" style="color:#8dd3c7"><a href="#001945" label="[00:19:45]">&lt;stikonas&gt;</a></span><span class="message">well, I can write there, but I first want to solve pregen files in findutils</span></div><div class="line" id="001955"><span class="nick" style="color:#8dd3c7"><a href="#001955" label="[00:19:55]">&lt;stikonas&gt;</a></span><span class="message">which is just redoing gnulib import</span></div><div class="line" id="002012"><span class="nick" style="color:#8dd3c7"><a href="#002012" label="[00:20:12]">&lt;stikonas&gt;</a></span><span class="message">(should be similar to what I'm trying with tar now)</span></div><div class="line" id="002023"><span class="nick" style="color:#389600"><a href="#002023" label="[00:20:23]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'm happy to draft an email and we can co-sign it? i'll post a draft in a second</span></div><div class="line" id="002030"><span class="nick" style="color:#389600"><a href="#002030" label="[00:20:30]">&lt;fossy&gt;</a></span><span class="message">i'm waiting for a run of live-bootstrap rn anyway</span></div><div class="line" id="002030"><span class="nick" style="color:#8dd3c7"><a href="#002030" label="[00:20:30]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="002043"><span class="nick" style="color:#8dd3c7"><a href="#002043" label="[00:20:43]">&lt;stikonas&gt;</a></span><span class="message">but maybe let's send if once findutils issue is resolved</span></div><div class="line" id="002058"><span class="nick" style="color:#389600"><a href="#002058" label="[00:20:58]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="002102"><span class="nick" style="color:#8dd3c7"><a href="#002102" label="[00:21:02]">&lt;stikonas&gt;</a></span><span class="message">it should be fairly similar to tar, so once tar is done we can copy/paste the same solution to there</span></div><div class="line" id="002132"><span class="nick" style="color:#8dd3c7"><a href="#002132" label="[00:21:32]">&lt;stikonas&gt;</a></span><span class="message">by the way, other than submodule, that PR looks alright?</span></div><div class="line" id="002404"><span class="nick" style="color:#389600"><a href="#002404" label="[00:24:04]">&lt;fossy&gt;</a></span><span class="message">yeah think so</span></div><div class="line" id="002424"><span class="nick" style="color:#389600"><a href="#002424" label="[00:24:24]">&lt;fossy&gt;</a></span><span class="message">if you push with submodule i'll give it green tick</span></div><div class="line" id="002438"><span class="nick" style="color:#389600"><a href="#002438" label="[00:24:38]">&lt;fossy&gt;</a></span><span class="message">wat is /after/libexec/rmt?</span></div><div class="line" id="002507"><span class="nick" style="color:#389600"><a href="#002507" label="[00:25:07]">&lt;fossy&gt;</a></span><span class="message">also, perhaps 4-space indenting in import-gnulib.sh (dosen't matter too much tho)</span></div><div class="line" id="002723"><span class="nick" style="color:#8dd3c7"><a href="#002723" label="[00:27:23]">&lt;stikonas&gt;</a></span><span class="message">ok, I can change that too</span></div><div class="line" id="002737"><span class="nick" style="color:#8dd3c7"><a href="#002737" label="[00:27:37]">&lt;stikonas&gt;</a></span><span class="message">I'm now writing some fucntion to get multiple files</span></div><div class="line" id="002842"><span class="nick" style="color:#8dd3c7"><a href="#002842" label="[00:28:42]">&lt;stikonas&gt;</a></span><span class="message">2-space indenting was inherited from copy-pasted file</span></div><div class="line" id="002905"><span class="nick" style="color:#8dd3c7"><a href="#002905" label="[00:29:05]">&lt;stikonas&gt;</a></span><span class="message">actually there it was #+3 spaces</span></div><div class="line" id="002919"><span class="nick" style="color:#8dd3c7"><a href="#002919" label="[00:29:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'm not sure what is rmt</span></div><div class="line" id="002921"><span class="nick" style="color:#8dd3c7"><a href="#002921" label="[00:29:21]">&lt;stikonas&gt;</a></span><span class="message">never used it</span></div><div class="line" id="002928"><span class="nick" style="color:#8dd3c7"><a href="#002928" label="[00:29:28]">&lt;stikonas&gt;</a></span><span class="message">but manpage says remote magnetic tape server</span></div><div class="line" id="003015"><span class="nick" style="color:#8dd3c7"><a href="#003015" label="[00:30:15]">&lt;stikonas&gt;</a></span><span class="message">well, tar is tape archive after all</span></div><div class="line" id="003359"><span class="nick" style="color:#389600"><a href="#003359" label="[00:33:59]">&lt;fossy&gt;</a></span><span class="message">mkay</span></div><div class="line" id="003614"><span class="nick" style="color:#6d2462"><a href="#003614" label="[00:36:14]">&lt;OriansJ`&gt;</a></span><span class="message">rmt: &quot;Using this utility as a general-purpose remote file access tool is discouraged.&quot;</span></div><div class="line" id="004425"><span class="nick" style="color:#389600"><a href="#004425" label="[00:44:25]">&lt;fossy&gt;</a></span><span class="message">stikonas: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/90">https://github.com/fosslinux/live-bootstrap/pull/90</a> </span></div><div class="line" id="004438"><span class="nick" style="color:#389600"><a href="#004438" label="[00:44:38]">&lt;fossy&gt;</a></span><span class="message">that was slightly painful</span></div><div class="line" id="004509"><span class="nick" style="color:#8dd3c7"><a href="#004509" label="[00:45:09]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, you were also doing that</span></div><div class="line" id="004519"><span class="nick" style="color:#8dd3c7"><a href="#004519" label="[00:45:19]">&lt;stikonas&gt;</a></span><span class="message">hmm, I have a slightly different version</span></div><div class="line" id="004521"><span class="nick" style="color:#389600"><a href="#004521" label="[00:45:21]">&lt;fossy&gt;</a></span><span class="message">oops, were you doing it?</span></div><div class="line" id="004527"><span class="nick" style="color:#389600"><a href="#004527" label="[00:45:27]">&lt;fossy&gt;</a></span><span class="message">what's yours look like</span></div><div class="line" id="004536"><span class="nick" style="color:#8dd3c7"><a href="#004536" label="[00:45:36]">&lt;stikonas&gt;</a></span><span class="message">let me upload, then we can pick</span></div><div class="line" id="004822"><span class="nick" style="color:#8dd3c7"><a href="#004822" label="[00:48:22]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/1fd99fb9048eb3d14ca4905e11e11edc0069495e">https://github.com/stikonas/live-bootstrap/commit/1fd99fb9048eb3d14ca4905e11e11edc0069495e</a> </span></div><div class="line" id="004853"><span class="nick" style="color:#8dd3c7"><a href="#004853" label="[00:48:53]">&lt;stikonas&gt;</a></span><span class="message">yours is a bit more complete</span></div><div class="line" id="004903"><span class="nick" style="color:#8dd3c7"><a href="#004903" label="[00:49:03]">&lt;stikonas&gt;</a></span><span class="message">since I haven't unpacked multiple tarballs yet</span></div><div class="line" id="004906"><span class="nick" style="color:#8dd3c7"><a href="#004906" label="[00:49:06]">&lt;stikonas&gt;</a></span><span class="message">it's just downloading</span></div><div class="line" id="005135"><span class="nick" style="color:#389600"><a href="#005135" label="[00:51:35]">&lt;fossy&gt;</a></span><span class="message">i think yours is /slightly/ cleaner but also mine does positional arguments</span></div><div class="line" id="005140"><span class="nick" style="color:#389600"><a href="#005140" label="[00:51:40]">&lt;fossy&gt;</a></span><span class="message">uh</span></div><div class="line" id="005142"><span class="nick" style="color:#389600"><a href="#005142" label="[00:51:42]">&lt;fossy&gt;</a></span><span class="message">named arguments</span></div><div class="line" id="005256"><span class="nick" style="color:#8dd3c7"><a href="#005256" label="[00:52:56]">&lt;stikonas&gt;</a></span><span class="message">yeah, that were my thoughts...</span></div><div class="line" id="005324"><span class="nick" style="color:#8dd3c7"><a href="#005324" label="[00:53:24]">&lt;stikonas&gt;</a></span><span class="message">named arguments are nice...</span></div><div class="line" id="005333"><span class="nick" style="color:#8dd3c7"><a href="#005333" label="[00:53:33]">&lt;stikonas&gt;</a></span><span class="message">although, my code is a bit shorter</span></div><div class="line" id="005341"><span class="nick" style="color:#8dd3c7"><a href="#005341" label="[00:53:41]">&lt;stikonas&gt;</a></span><span class="message">hmm, OriansJ`: up for review?</span></div><div class="line" id="005403"><span class="nick" style="color:#8dd3c7"><a href="#005403" label="[00:54:03]">&lt;stikonas&gt;</a></span><span class="message">we now have two functions doing similar things...</span></div><div class="line" id="005405"><span class="nick" style="color:#389600"><a href="#005405" label="[00:54:05]">&lt;fossy&gt;</a></span><span class="message">another advantage of mine is that it has a supprot for all features</span></div><div class="line" id="005405"><span class="nick" style="color:#8dd3c7"><a href="#005405" label="[00:54:05]">&lt;stikonas&gt;</a></span><span class="message">need to pick one</span></div><div class="line" id="005413"><span class="nick" style="color:#8dd3c7"><a href="#005413" label="[00:54:13]">&lt;stikonas&gt;</a></span><span class="message">yeah, mine does not rename</span></div><div class="line" id="005419"><span class="nick" style="color:#8dd3c7"><a href="#005419" label="[00:54:19]">&lt;stikonas&gt;</a></span><span class="message">any extra files</span></div><div class="line" id="005448"><span class="nick" style="color:#389600"><a href="#005448" label="[00:54:48]">&lt;fossy&gt;</a></span><span class="message">i can invisinge usecases for that</span></div><div class="line" id="005505"><span class="nick" style="color:#8dd3c7"><a href="#005505" label="[00:55:05]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe yours can be a bit cleaner if you can split into smaller functions?</span></div><div class="line" id="005511"><span class="nick" style="color:#389600"><a href="#005511" label="[00:55:11]">&lt;fossy&gt;</a></span><span class="message">yeah ok</span></div><div class="line" id="005522"><span class="nick" style="color:#8dd3c7"><a href="#005522" label="[00:55:22]">&lt;stikonas&gt;</a></span><span class="message">although, bash might be painful</span></div><div class="line" id="005532"><span class="nick" style="color:#389600"><a href="#005532" label="[00:55:32]">&lt;fossy&gt;</a></span><span class="message">it is :|</span></div><div class="line" id="005537"><span class="nick" style="color:#8dd3c7"><a href="#005537" label="[00:55:37]">&lt;stikonas&gt;</a></span><span class="message">well, returning arguments, etc...</span></div><div class="line" id="005556"><span class="nick" style="color:#6d2462"><a href="#005556" label="[00:55:56]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: sure give me one minute</span></div><div class="line" id="005640"><span class="nick" style="color:#6d2462"><a href="#005640" label="[00:56:40]">&lt;OriansJ`&gt;</a></span><span class="message">as I am just about to announce that stage0-posix has both M2libc and mes-m2 (actual mes.c) build functional: <a rel="nofollow" href="https://paste.debian.net/1192327/">https://paste.debian.net/1192327/</a> </span></div><div class="line" id="005802"><span class="nick" style="color:#6d2462"><a href="#005802" label="[00:58:02]">&lt;OriansJ`&gt;</a></span><span class="message">just have to duplicate for AMD64 and AArch64 to finish off but that will take a while to spot check for everything. So what did you want me to review stikonas?</span></div><div class="line" id="005826"><span class="nick" style="color:#8dd3c7"><a href="#005826" label="[00:58:26]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/90">https://github.com/fosslinux/live-bootstrap/pull/90</a>  vs <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/commit/1fd99fb9048eb3d14ca4905e11e11edc0069495e">https://github.com/stikonas/live-bootstrap/commit/1fd99fb9048eb3d14ca4905e11e11edc0069495e</a> </span></div><div class="line" id="005839"><span class="nick" style="color:#8dd3c7"><a href="#005839" label="[00:58:39]">&lt;stikonas&gt;</a></span><span class="message">although, I think fossy's has more features</span></div><div class="line" id="005850"><span class="nick" style="color:#8dd3c7"><a href="#005850" label="[00:58:50]">&lt;stikonas&gt;</a></span><span class="message">so I'm leaning to go for that versoin</span></div><div class="line" id="005903"><span class="nick" style="color:#389600"><a href="#005903" label="[00:59:03]">&lt;fossy&gt;</a></span><span class="message">note more features != good lol</span></div><div class="line" id="005911"><span class="nick" style="color:#389600"><a href="#005911" label="[00:59:11]">&lt;fossy&gt;</a></span><span class="message">but in this case i think it is more versatile</span></div><div class="line" id="010307"><span class="nick" style="color:#6d2462"><a href="#010307" label="[01:03:07]">&lt;OriansJ`&gt;</a></span><span class="message">I like the more explicit options in fossy's that is definitely a good idea</span></div><div class="line" id="010416"><span class="nick" style="color:#8dd3c7"><a href="#010416" label="[01:04:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, I didn't like those positional arguments that we had before</span></div><div class="line" id="010541"><span class="nick" style="color:#6d2462"><a href="#010541" label="[01:05:41]">&lt;OriansJ`&gt;</a></span><span class="message">but stikonas: your seperate _get_file function is a good idea</span></div><div class="line" id="010631"><span class="nick" style="color:#8dd3c7"><a href="#010631" label="[01:06:31]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's why I asked fossy if that big function can be split into smaller</span></div><div class="line" id="010649"><span class="nick" style="color:#8dd3c7"><a href="#010649" label="[01:06:49]">&lt;stikonas&gt;</a></span><span class="message">then we might end up with a better option than both initial versions</span></div><div class="line" id="010708"><span class="nick" style="color:#8dd3c7"><a href="#010708" label="[01:07:08]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'm going to bed now, will review in the morning</span></div><div class="line" id="010915"><span class="nick" style="color:#6d2462"><a href="#010915" label="[01:09:15]">&lt;OriansJ`&gt;</a></span><span class="message">so here is my suggestion choose fossy's for merge and then break up that big function (steal stikonas' good idea of a seperate _get_file function) and it should be in better shape long term.</span></div><div class="line" id="011036"><span class="nick" style="color:#6d2462"><a href="#011036" label="[01:10:36]">&lt;OriansJ`&gt;</a></span><span class="message">(I really need to find time to work on mes-m2 this week as in its current form it can't run on AArch64 and the AMD64 isn't native but legacy)</span></div><div class="line" id="011231"><span class="nick" style="color:#6d2462"><a href="#011231" label="[01:12:31]">&lt;OriansJ`&gt;</a></span><span class="message">janneke: if you get a minute free to look at the current mes-m2; I'd like it to be able to actually run the copy of MesCC in it (as well as have guile be able to run that copy of MesCC) so that when I do M2libc conversion work I can make sure to keep it working every step of the way.</span></div><div class="line" id="011318"><span class="nick" style="color:#6d2462"><a href="#011318" label="[01:13:18]">&lt;OriansJ`&gt;</a></span><span class="message">that way mes-m2 will have a native AMD64 build, a working AArch64 and a working armv7l build as well.</span></div><div class="line" id="011413"><span class="nick" style="color:#6d2462"><a href="#011413" label="[01:14:13]">&lt;OriansJ`&gt;</a></span><span class="message">and mes-m2 (mes.c) MesCC will have native M2-Planet binaries for all M2-Planet supported architectures</span></div><div class="line" id="013205"><span class="nick" style="color:#389600"><a href="#013205" label="[01:32:05]">&lt;fossy&gt;</a></span><span class="message">siraben: i have split it into a couple of smaller functions and am testing full run now then ill push</span></div><div class="line" id="013206"><span class="nick" style="color:#389600"><a href="#013206" label="[01:32:06]">&lt;fossy&gt;</a></span><span class="message">./go 17</span></div><div class="line" id="013208"><span class="nick" style="color:#389600"><a href="#013208" label="[01:32:08]">&lt;fossy&gt;</a></span><span class="message">oops wrong ping</span></div><div class="line" id="013212"><span class="nick" style="color:#389600"><a href="#013212" label="[01:32:12]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]:</span></div><div class="line" id="013259"><span class="nick" style="color:#6d2462"><a href="#013259" label="[01:32:59]">&lt;OriansJ`&gt;</a></span><span class="message">fossy: is this: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap.git">https://github.com/fosslinux/live-bootstrap.git</a>  the official link for live-bootstrap master repo (I am updating stage0-posix's README)</span></div><div class="line" id="013317"><span class="nick" style="color:#389600"><a href="#013317" label="[01:33:17]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="075746"><span class="nick" style="color:#234e69"><a href="#075746" label="[07:57:46]">&lt;janneke&gt;</a></span><span class="message">OriansJ`: that's very good news.  MesCC is mostly &quot;just another&quot; scheme program.</span></div><div class="line" id="075807"><span class="nick" style="color:#234e69"><a href="#075807" label="[07:58:07]">&lt;janneke&gt;</a></span><span class="message">if you look at mes, you can do:</span></div><div class="line" id="075813"><span class="nick" style="color:#234e69"><a href="#075813" label="[07:58:13]">&lt;janneke&gt;</a></span><span class="message">guix environment -l guix.scm</span></div><div class="line" id="075816"><span class="nick" style="color:#234e69"><a href="#075816" label="[07:58:16]">&lt;janneke&gt;</a></span><span class="message">./configure</span></div><div class="line" id="075820"><span class="nick" style="color:#234e69"><a href="#075820" label="[07:58:20]">&lt;janneke&gt;</a></span><span class="message">make</span></div><div class="line" id="075835"><span class="nick" style="color:#234e69"><a href="#075835" label="[07:58:35]">&lt;janneke&gt;</a></span><span class="message">./pre-inst-env mescc scaffold/main.c</span></div><div class="line" id="075858"><span class="nick" style="color:#234e69"><a href="#075858" label="[07:58:58]">&lt;janneke&gt;</a></span><span class="message">and it runs scripts/mescc (from scripts/mescc.in), which runs</span></div><div class="line" id="075925"><span class="nick" style="color:#234e69"><a href="#075925" label="[07:59:25]">&lt;janneke&gt;</a></span><span class="message">scripts/mescc.scm (from scripts/mescc.scm.in)</span></div><div class="line" id="080210"><span class="nick" style="color:#234e69"><a href="#080210" label="[08:02:10]">&lt;janneke&gt;</a></span><span class="message">to run mescc on guile, just do MES=GUILE ./pre-inst-env mescc ...</span></div><div class="line" id="103211"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="104844"><span class="nick" style="color:#6c3d55"><a href="#104844" label="[10:48:44]">&lt;gforce_de1977&gt;</a></span><span class="message">4 out of 15 runs of live-bootstrap in qemu, have bad bash checksums: my base64 seems not to work, i will upload some binaries and logs in ~12 hours</span></div><div class="line" id="153230"><span class="nick" style="color:#6c3d55"><a href="#153230" label="[15:32:30]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: fossy: bauen1: ok, found a way to start multiple qemu-instances in parallel, so i have more results: <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/">http://intercity-vpn.de/bootstrap/</a> </span></div><div class="line" id="153420"><span class="nick" style="color:#6c3d55"><a href="#153420" label="[15:34:20]">&lt;gforce_de1977&gt;</a></span><span class="message">here are only logs of failed bash-builts: search for 'bash: FAILED', using base64-encoding, i can &quot;screenscrape&quot; the bash-binaries, and it seems in cause if &quot;fail&quot; they all have the hash df8251032006c8ef3f173f3c8859414ad0c9fe2cf4c5df5bcf5afbaf34ded1f5</span></div><div class="line" id="153536"><span class="nick" style="color:#6c3d55"><a href="#153536" label="[15:35:36]">&lt;gforce_de1977&gt;</a></span><span class="message">it's more easy to just search for string &quot;base64&quot;</span></div><div class="line" id="153553"><span class="nick" style="color:#6c3d55"><a href="#153553" label="[15:35:53]">&lt;gforce_de1977&gt;</a></span><span class="message">i have included the output of &quot;gcc -dM -E -xc /dev/null&quot;</span></div><div class="line" id="153625"><span class="nick" style="color:#6c3d55"><a href="#153625" label="[15:36:25]">&lt;gforce_de1977&gt;</a></span><span class="message">the base64-encoder is just a small pearl script</span></div><div class="line" id="153957"><span class="nick" style="color:#6c3d55"><a href="#153957" label="[15:39:57]">&lt;gforce_de1977&gt;</a></span><span class="message"> <a rel="nofollow" href="http://intercity-vpn.de/base64.pl.txt">http://intercity-vpn.de/base64.pl.txt</a> </span></div><div class="line" id="155646"><span class="nick" style="color:#8dd3c7"><a href="#155646" label="[15:56:46]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: ok, this time difference from good is very small</span></div><div class="line" id="155711"><span class="nick" style="color:#8dd3c7"><a href="#155711" label="[15:57:11]">&lt;stikonas&gt;</a></span><span class="message">0005670A 00 02</span></div><div class="line" id="155713"><span class="nick" style="color:#8dd3c7"><a href="#155713" label="[15:57:13]">&lt;stikonas&gt;</a></span><span class="message">0005670B 01 00</span></div><div class="line" id="155749"><span class="nick" style="color:#8dd3c7"><a href="#155749" label="[15:57:49]">&lt;stikonas&gt;</a></span><span class="message">A is from good hash and B is from your bash binary</span></div><div class="line" id="155757"><span class="nick" style="color:#8dd3c7"><a href="#155757" label="[15:57:57]">&lt;stikonas&gt;</a></span><span class="message">so its just 2 bytes</span></div><div class="line" id="155801"><span class="nick" style="color:#8dd3c7"><a href="#155801" label="[15:58:01]">&lt;stikonas&gt;</a></span><span class="message">that are different</span></div><div class="line" id="155813"><span class="nick" style="color:#8dd3c7"><a href="#155813" label="[15:58:13]">&lt;stikonas&gt;</a></span><span class="message">I guess next step is to disasamble it</span></div><div class="line" id="155917"><span class="nick" style="color:#8dd3c7"><a href="#155917" label="[15:59:17]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: that looks like  pipesize issue</span></div><div class="line" id="155917"><span class="nick" style="color:#6c3d55"><a href="#155917" label="[15:59:17]">&lt;gforce_de1977&gt;</a></span><span class="message">very good...but remember, there was also a version with another size an totally different binary layout. but first things first</span></div><div class="line" id="155931"><span class="nick" style="color:#8dd3c7"><a href="#155931" label="[15:59:31]">&lt;stikonas&gt;</a></span><span class="message">yours is 512</span></div><div class="line" id="155941"><span class="nick" style="color:#6c3d55"><a href="#155941" label="[15:59:41]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, i will output/log the pipesize.h</span></div><div class="line" id="160000"><span class="nick" style="color:#8dd3c7"><a href="#160000" label="[16:00:00]">&lt;stikonas&gt;</a></span><span class="message">this is the diff between two binaries <a rel="nofollow" href="https://paste.debian.net/1192382/">https://paste.debian.net/1192382/</a> </span></div><div class="line" id="160001"><span class="nick" style="color:#6c3d55"><a href="#160001" label="[16:00:01]">&lt;gforce_de1977&gt;</a></span><span class="message">this need some ci-runs again...)</span></div><div class="line" id="160010"><span class="nick" style="color:#8dd3c7"><a href="#160010" label="[16:00:10]">&lt;stikonas&gt;</a></span><span class="message">0x200 is 512</span></div><div class="line" id="160018"><span class="nick" style="color:#8dd3c7"><a href="#160018" label="[16:00:18]">&lt;stikonas&gt;</a></span><span class="message">and 0x10000 is 64K</span></div><div class="line" id="160053"><span class="nick" style="color:#6c3d55"><a href="#160053" label="[16:00:53]">&lt;gforce_de1977&gt;</a></span><span class="message">good catch!</span></div><div class="line" id="160236"><span class="nick" style="color:#6c3d55"><a href="#160236" label="[16:02:36]">&lt;gforce_de1977&gt;</a></span><span class="message">just for saying it: your output if &quot;gcc -dM -E -xc /dev/null&quot; is the same like in my CI (also on case of a &quot;bad&quot; bash binary)</span></div><div class="line" id="160243"><span class="nick" style="color:#6c3d55"><a href="#160243" label="[16:02:43]">&lt;gforce_de1977&gt;</a></span><span class="message">&quot;output of&quot;</span></div><div class="line" id="160438"><span class="nick" style="color:#6c3d55"><a href="#160438" label="[16:04:38]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: can you say me the exact pathname of the generated pipesize.h (or similar)</span></div><div class="line" id="160727"><span class="nick" style="color:#6c3d55"><a href="#160727" label="[16:07:27]">&lt;gforce_de1977&gt;</a></span><span class="message">or should we just hardcode the 0x10000 value ???</span></div><div class="line" id="161120"><span class="nick" style="color:#8dd3c7"><a href="#161120" label="[16:11:20]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: well, that might be one option...</span></div><div class="line" id="161134"><span class="nick" style="color:#8dd3c7"><a href="#161134" label="[16:11:34]">&lt;stikonas&gt;</a></span><span class="message">let's see what fossy and pder think about it...</span></div><div class="line" id="161315"><span class="nick" style="color:#8dd3c7"><a href="#161315" label="[16:13:15]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: path is builtins/pipesize.h</span></div><div class="line" id="161337"><span class="nick" style="color:#8dd3c7"><a href="#161337" label="[16:13:37]">&lt;stikonas&gt;</a></span><span class="message">or I guess absolute would be /after/bash-5.1/build/bash-5.1/builtins/pipesize.h</span></div><div class="line" id="163015"><span class="nick" style="color:#d9d9d9"><a href="#163015" label="[16:30:15]">&lt;pder&gt;</a></span><span class="message">stikonas: nice to see you got tar working- I started on that until I noticed the gnulib-tool issue.</span></div><div class="line" id="163110"><span class="nick" style="color:#d9d9d9"><a href="#163110" label="[16:31:10]">&lt;pder&gt;</a></span><span class="message">There are many places where we are doing make MAKEINFO=true.  Could we set MAKEINFO=true when running configure instead?</span></div><div class="line" id="163228"><span class="nick" style="color:#d9d9d9"><a href="#163228" label="[16:32:28]">&lt;pder&gt;</a></span><span class="message">It's not clear to me what the bash pipesize.h value is for gforce_de1977.  I guess the sleep 3; sync is not working?</span></div><div class="line" id="163700"><span class="nick" style="color:#8dd3c7"><a href="#163700" label="[16:37:00]">&lt;stikonas&gt;</a></span><span class="message">pder: hmm, not sure about MAKEINFO, haven't tied</span></div><div class="line" id="163730"><span class="nick" style="color:#8dd3c7"><a href="#163730" label="[16:37:30]">&lt;stikonas&gt;</a></span><span class="message">pder: maybe we can just try building makeinfo...</span></div><div class="line" id="163737"><span class="nick" style="color:#8dd3c7"><a href="#163737" label="[16:37:37]">&lt;stikonas&gt;</a></span><span class="message">(it's in texinfo package)</span></div><div class="line" id="163746"><span class="nick" style="color:#8dd3c7"><a href="#163746" label="[16:37:46]">&lt;stikonas&gt;</a></span><span class="message">even some old version might be better than nothing</span></div><div class="line" id="163802"><span class="nick" style="color:#d9d9d9"><a href="#163802" label="[16:38:02]">&lt;pder&gt;</a></span><span class="message">yeah that might work</span></div><div class="line" id="163808"><span class="nick" style="color:#8dd3c7"><a href="#163808" label="[16:38:08]">&lt;stikonas&gt;</a></span><span class="message">pder: as for tar, it's almost working, but we need to download gnulib tarball</span></div><div class="line" id="163823"><span class="nick" style="color:#8dd3c7"><a href="#163823" label="[16:38:23]">&lt;stikonas&gt;</a></span><span class="message">and that needs get_file to be reworked</span></div><div class="line" id="163833"><span class="nick" style="color:#8dd3c7"><a href="#163833" label="[16:38:33]">&lt;stikonas&gt;</a></span><span class="message">fossy and me tried yesterday, got something working</span></div><div class="line" id="163848"><span class="nick" style="color:#8dd3c7"><a href="#163848" label="[16:38:48]">&lt;stikonas&gt;</a></span><span class="message">but it might be that this bash script is just getting too big</span></div><div class="line" id="163900"><span class="nick" style="color:#8dd3c7"><a href="#163900" label="[16:39:00]">&lt;stikonas&gt;</a></span><span class="message">I'm not looking at whether to rewrite it in Python</span></div><div class="line" id="164144"><span class="nick" style="color:#6c3d55"><a href="#164144" label="[16:41:44]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: pder: it is a qemu run. always with the same kernel and the same initrd. mostly on runs without issues, but around 5% has at least this pipesize variation. there are also other variations already spotted, i'am preparing another massive parallel run (50 qemu-invokations each with 3gb ram)</span></div><div class="line" id="164224"><span class="nick" style="color:#8dd3c7"><a href="#164224" label="[16:42:24]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: pipesize issue is intermittent</span></div><div class="line" id="164244"><span class="nick" style="color:#8dd3c7"><a href="#164244" label="[16:42:44]">&lt;stikonas&gt;</a></span><span class="message">we also had it intermittently</span></div><div class="line" id="164257"><span class="nick" style="color:#8dd3c7"><a href="#164257" label="[16:42:57]">&lt;stikonas&gt;</a></span><span class="message">but adding sync command after sleep 3 in psize.sh seemed to help</span></div><div class="line" id="164303"><span class="nick" style="color:#8dd3c7"><a href="#164303" label="[16:43:03]">&lt;stikonas&gt;</a></span><span class="message">but for some reason it doesn't help you</span></div><div class="line" id="164323"><span class="nick" style="color:#8dd3c7"><a href="#164323" label="[16:43:23]">&lt;stikonas&gt;</a></span><span class="message">(you can also try replacing sync with sleep 1)</span></div><div class="line" id="164701"><span class="nick" style="color:#6c3d55"><a href="#164701" label="[16:47:01]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: ok, will replace 'sync' with sync; sleep 15</span></div><div class="line" id="164724"><span class="nick" style="color:#6c3d55"><a href="#164724" label="[16:47:24]">&lt;gforce_de1977&gt;</a></span><span class="message">(just so we can see if this help somehow)</span></div><div class="line" id="164810"><span class="nick" style="color:#8dd3c7"><a href="#164810" label="[16:48:10]">&lt;stikonas&gt;</a></span><span class="message">well, it's probably some kind of race, since it is intermittent</span></div><div class="line" id="164845"><span class="nick" style="color:#8dd3c7"><a href="#164845" label="[16:48:45]">&lt;stikonas&gt;</a></span><span class="message">(and not that it only happens in bash built with mes libc)</span></div><div class="line" id="164907"><span class="nick" style="color:#8dd3c7"><a href="#164907" label="[16:49:07]">&lt;stikonas&gt;</a></span><span class="message">i.e. you would have correct pipesize.h if you rebuild bash 5.1 with bash 5.1</span></div><div class="line" id="215438"><span class="nick" style="color:#2e2a4a"><a href="#215438" label="[21:54:38]">&lt;bauen1&gt;</a></span><span class="message">gforce_de1977: are compute resources an issue for you at all ?</span></div><div class="line" id="220945"><span class="nick" style="color:#8dd3c7"><a href="#220945" label="[22:09:45]">&lt;stikonas&gt;</a></span><span class="message">I'm preparing rootfs change that will allow any number of runs too...</span></div><div class="line" id="221421"><span class="nick" style="color:#2e2a4a"><a href="#221421" label="[22:14:21]">&lt;bauen1&gt;</a></span><span class="message">i'm not sure if why 8gb ram laptop is gonna fancy parallel runs lol</span></div><div class="line" id="221722"><span class="nick" style="color:#2e2a4a"><a href="#221722" label="[22:17:22]">&lt;bauen1&gt;</a></span><span class="message">*my</span></div><div class="line" id="222010"><span class="nick" style="color:#8dd3c7"><a href="#222010" label="[22:20:10]">&lt;stikonas&gt;</a></span><span class="message">parallel chroot runs might work...</span></div><div class="line" id="234743"><span class="nick" style="color:#389600"><a href="#234743" label="[23:47:43]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; fossy and me tried yesterday, got something working</span></div><div class="line" id="234750"><span class="nick" style="color:#389600"><a href="#234750" label="[23:47:50]">&lt;fossy&gt;</a></span><span class="message">yeah I finished that last night</span></div><div class="line" id="234801"><span class="nick" style="color:#389600"><a href="#234801" label="[23:48:01]">&lt;fossy&gt;</a></span><span class="message">after bashing out an annoying bug</span></div><div class="line" id="234818"><span class="nick" style="color:#389600"><a href="#234818" label="[23:48:18]">&lt;fossy&gt;</a></span><span class="message">(remember to declare variables local kiddies)</span></div><br /></div></body></html>