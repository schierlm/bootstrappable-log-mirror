<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-04-10.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="004623"><span class="nick" style="color:#8dd3c7"><a href="#004623" label="[00:46:23]">&lt;OriansJ&gt;</a></span><span class="message">although I am confused how he &quot;looked&quot; at stage0 and didn't notice my email address in the README (specifically the &quot;If you wish to contribute&quot; section); but it is always possible he never saw a link to the stage0 source code.</span></div><div class="line" id="004745"><span class="nick" style="color:#8dd3c7"><a href="#004745" label="[00:47:45]">&lt;OriansJ&gt;</a></span><span class="message">or just never bothered to look at the readme.</span></div><div class="line" id="012024"><span class="nick" style="color:#2e2a4a"><a href="#012024" label="[01:20:24]">&lt;fossy&gt;</a></span><span class="message">come on tinycc.... i specifically moved you out of /usr</span></div><div class="line" id="012026"><span class="nick" style="color:#2e2a4a"><a href="#012026" label="[01:20:26]">&lt;fossy&gt;</a></span><span class="message">V</span></div><div class="line" id="012028"><span class="nick" style="color:#2e2a4a"><a href="#012028" label="[01:20:28]">&lt;fossy&gt;</a></span><span class="message">open(&quot;/usr/lib/crt1.o&quot;, O_RDONLY)       = -1 ENOENT (No such file or directory)</span></div><div class="line" id="012748"><span class="nick" style="color:#8dd3c7"><a href="#012748" label="[01:27:48]">&lt;OriansJ&gt;</a></span><span class="message">somedays I wonder if I have the only easy to work with C compiler.</span></div><div class="line" id="012837"><span class="nick" style="color:#8dd3c7"><a href="#012837" label="[01:28:37]">&lt;OriansJ&gt;</a></span><span class="message">and other days I wish I spent more time building a much better assembler.</span></div><div class="line" id="021906"><span class="nick" style="color:#2e2a4a"><a href="#021906" label="[02:19:06]">&lt;fossy&gt;</a></span><span class="message">has anyone ever pursued bootstrapping via microcontrollers?</span></div><div class="line" id="021930"><span class="nick" style="color:#2e2a4a"><a href="#021930" label="[02:19:30]">&lt;fossy&gt;</a></span><span class="message">microcontrollers imo would be an interesting starting point because they have minimal/no binary seeds</span></div><div class="line" id="021932"><span class="nick" style="color:#2e2a4a"><a href="#021932" label="[02:19:32]">&lt;fossy&gt;</a></span><span class="message">raw hardware</span></div><div class="line" id="022303"><span class="nick" style="color:#8dd3c7"><a href="#022303" label="[02:23:03]">&lt;OriansJ&gt;</a></span><span class="message">fossy: kinda, CollapseOS <a rel="nofollow" href="https://github.com/hsoft/collapseos.git">https://github.com/hsoft/collapseos.git</a> </span></div><div class="line" id="022615"><span class="nick" style="color:#6b8072"><a href="#022615" label="[02:26:15]">&lt;xentrac&gt;</a></span><span class="message">fossy: I think that's a very reasonable approach because they also have minimal space for backdoors</span></div><div class="line" id="022646"><span class="nick" style="color:#6b8072"><a href="#022646" label="[02:26:46]">&lt;xentrac&gt;</a></span><span class="message">as Aineko said in Accelerand, &quot;I've bootstrapped myself starting from a clock radio controller&quot;</span></div><div class="line" id="022809"><span class="nick" style="color:#2e2a4a"><a href="#022809" label="[02:28:09]">&lt;fossy&gt;</a></span><span class="message">OriansJ: well I got the idea from collapseos</span></div><div class="line" id="022821"><span class="nick" style="color:#2e2a4a"><a href="#022821" label="[02:28:21]">&lt;fossy&gt;</a></span><span class="message">found out about collapseos yesterday</span></div><div class="line" id="022858"><span class="nick" style="color:#2e2a4a"><a href="#022858" label="[02:28:58]">&lt;fossy&gt;</a></span><span class="message">interesting propersirion, im not sure about the Why but opens up quite a few possibilities in other areas</span></div><div class="line" id="023247"><span class="nick" style="color:#8dd3c7"><a href="#023247" label="[02:32:47]">&lt;OriansJ&gt;</a></span><span class="message">well there is nothing from preventing someone from implementing the stage0 steps in 8051 assembly or z80 or PIC16 or 6502 as all the steps up to M2-Planet can run in 8KB</span></div><div class="line" id="023424"><span class="nick" style="color:#8dd3c7"><a href="#023424" label="[02:34:24]">&lt;OriansJ&gt;</a></span><span class="message">It just requires someone to take the time to do the work (i'll even merge it into mescc-tools-seed and stage0 if someone does the work)</span></div><div class="line" id="023516"><span class="nick" style="color:#8dd3c7"><a href="#023516" label="[02:35:16]">&lt;OriansJ&gt;</a></span><span class="message">I've also been looking into how to get M2-Planet to work in 32KB of RAM.</span></div><div class="line" id="025106"><span class="nick" style="color:#80b1d3"><a href="#025106" label="[02:51:06]">&lt;DKordic&gt;</a></span><span class="message">Oddly enough ARM-Cortex is _binary_ compatible from M to A.</span></div><div class="line" id="045404"><span class="nick">***</span><span class="message notice">vagrantc_ is now known as vagrantc</span></div><div class="line" id="104433"><span class="nick" style="color:#2e2a4a"><a href="#104433" label="[10:44:33]">&lt;fossy&gt;</a></span><span class="message">found a hang in mescc/guile</span></div><div class="line" id="104435"><span class="nick" style="color:#2e2a4a"><a href="#104435" label="[10:44:35]">&lt;fossy&gt;</a></span><span class="message">I think</span></div><div class="line" id="104441"><span class="nick" style="color:#2e2a4a"><a href="#104441" label="[10:44:41]">&lt;fossy&gt;</a></span><span class="message">and memory leak</span></div><div class="line" id="104509"><span class="nick" style="color:#2e2a4a"><a href="#104509" label="[10:45:09]">&lt;fossy&gt;</a></span><span class="message">while trying to fix stupid tinycc</span></div><div class="line" id="111516"><span class="nick" style="color:#6d2462"><a href="#111516" label="[11:15:16]">&lt;bauen1&gt;</a></span><span class="message">fossy: i've build a 65816 (16-bit ~~version~~ extension) based sbc and i've started to write a code generator for '816 native code for 8cc</span></div><div class="line" id="111538"><span class="nick" style="color:#6d2462"><a href="#111538" label="[11:15:38]">&lt;bauen1&gt;</a></span><span class="message">so technically it should be possible at some point to have a self-hosting 8cc</span></div><div class="line" id="111606"><span class="nick" style="color:#6d2462"><a href="#111606" label="[11:16:06]">&lt;bauen1&gt;</a></span><span class="message">on a 65816</span></div><div class="line" id="111934"><span class="nick" style="color:#6d2462"><a href="#111934" label="[11:19:34]">&lt;bauen1&gt;</a></span><span class="message">it currently generates assembler code so to bootstrap it you would need a c compiler written in assembly and a simple assembler</span></div><div class="line" id="135547"><span class="nick">***</span><span class="message notice">reepca`` is now known as reepca</span></div><div class="line" id="165137"><span class="nick" style="color:#8dd3c7"><a href="#165137" label="[16:51:37]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: we already have an entire family of C compilers written in assembly and boostrapped from hex for 3 different architectures.</span></div><div class="line" id="165618"><span class="nick" style="color:#8dd3c7"><a href="#165618" label="[16:56:18]">&lt;OriansJ&gt;</a></span><span class="message">It'll only take about a day to port to the 65816, assuming one is comfortable with 65816 assembly</span></div><div class="line" id="190934"><span class="nick" style="color:#234e69"><a href="#190934" label="[19:09:34]">&lt;Hagfish&gt;</a></span><span class="message">that sounds really cool.  keep up the great work, booters</span></div><div class="line" id="230116"><span class="nick" style="color:#2e2a4a"><a href="#230116" label="[23:01:16]">&lt;fossy&gt;</a></span><span class="message">bauen1: nice!</span></div><div class="line" id="230134"><span class="nick" style="color:#2e2a4a"><a href="#230134" label="[23:01:34]">&lt;fossy&gt;</a></span><span class="message">janneke: what was the first mes version to be self hosting?</span></div><div class="line" id="230500"><span class="nick" style="color:#6c3d55"><a href="#230500" label="[23:05:00]">*</a></span><span class="message">janneke goes to look at the NEWS</span></div><div class="line" id="230649"><span class="nick" style="color:#d9d9d9"><a href="#230649" label="[23:06:49]">&lt;janneke&gt;</a></span><span class="message">possibly 0.12; NEWS says it can &quot;compile itself&quot; -- but was the result correct? hmm</span></div><div class="line" id="230747"><span class="nick" style="color:#2e2a4a"><a href="#230747" label="[23:07:47]">&lt;fossy&gt;</a></span><span class="message">interesting, it dosent seem to be very clear, does it</span></div><div class="line" id="230809"><span class="nick" style="color:#2e2a4a"><a href="#230809" label="[23:08:09]">&lt;fossy&gt;</a></span><span class="message">eh, not a big deal was just interested</span></div><div class="line" id="230839"><span class="nick" style="color:#d9d9d9"><a href="#230839" label="[23:08:39]">&lt;janneke&gt;</a></span><span class="message">no, that's why i looked; it was a very tricky path that i took</span></div><div class="line" id="230854"><span class="nick" style="color:#2e2a4a"><a href="#230854" label="[23:08:54]">&lt;fossy&gt;</a></span><span class="message">Changes in 0.5 since 0.4</span></div><div class="line" id="230856"><span class="nick" style="color:#2e2a4a"><a href="#230856" label="[23:08:56]">&lt;fossy&gt;</a></span><span class="message">** Core</span></div><div class="line" id="230858"><span class="nick" style="color:#2e2a4a"><a href="#230858" label="[23:08:58]">&lt;fossy&gt;</a></span><span class="message">*** Support compilation with Mescc.</span></div><div class="line" id="230911"><span class="nick" style="color:#2e2a4a"><a href="#230911" label="[23:09:11]">&lt;fossy&gt;</a></span><span class="message">maybe 0.5?</span></div><div class="line" id="231108"><span class="nick" style="color:#2e2a4a"><a href="#231108" label="[23:11:08]">&lt;fossy&gt;</a></span><span class="message">also what is nyacc</span></div><div class="line" id="231120"><span class="nick" style="color:#2e2a4a"><a href="#231120" label="[23:11:20]">&lt;fossy&gt;</a></span><span class="message">I remember I had to use it but what for is a good question</span></div><div class="line" id="231136"><span class="nick" style="color:#2e2a4a"><a href="#231136" label="[23:11:36]">&lt;fossy&gt;</a></span><span class="message">I think I just had to dump it in a directory.</span></div><div class="line" id="231314"><span class="nick" style="color:#2e2a4a"><a href="#231314" label="[23:13:14]">&lt;fossy&gt;</a></span><span class="message">Oh, it is a compiler!</span></div><div class="line" id="232350"><span class="nick" style="color:#8dd3c7"><a href="#232350" label="[23:23:50]">&lt;OriansJ&gt;</a></span><span class="message">fossy: not actually but nyacc rather a parser generator if I remember correctly (like yacc)</span></div><div class="line" id="232456"><span class="nick" style="color:#2e2a4a"><a href="#232456" label="[23:24:56]">&lt;fossy&gt;</a></span><span class="message">ahh</span></div><div class="line" id="232520"><span class="nick" style="color:#2e2a4a"><a href="#232520" label="[23:25:20]">&lt;fossy&gt;</a></span><span class="message">janneke: mes cannot run gash as of the lastest version, correct?</span></div><div class="line" id="232550"><span class="nick" style="color:#d9d9d9"><a href="#232550" label="[23:25:50]">&lt;janneke&gt;</a></span><span class="message">true</span></div><div class="line" id="232629"><span class="nick" style="color:#2e2a4a"><a href="#232629" label="[23:26:29]">&lt;fossy&gt;</a></span><span class="message">mhm</span></div><div class="line" id="232648"><span class="nick" style="color:#d9d9d9"><a href="#232648" label="[23:26:48]">&lt;janneke&gt;</a></span><span class="message">not yet</span></div><div class="line" id="232713"><span class="nick" style="color:#d9d9d9"><a href="#232713" label="[23:27:13]">&lt;janneke&gt;</a></span><span class="message">i was planning to first do more guile compatibility</span></div><div class="line" id="232750"><span class="nick" style="color:#d9d9d9"><a href="#232750" label="[23:27:50]">&lt;janneke&gt;</a></span><span class="message">a nyacc-like hack for mes might get us quite far too; shouldn't be too much work</span></div><div class="line" id="232810"><span class="nick" style="color:#d9d9d9"><a href="#232810" label="[23:28:10]">&lt;janneke&gt;</a></span><span class="message">but i would like to start cleaning up things, rather than making a bigger mess</span></div><div class="line" id="232831"><span class="nick" style="color:#d9d9d9"><a href="#232831" label="[23:28:31]">&lt;janneke&gt;</a></span><span class="message">we have kind of shown, proven it's a viable path</span></div><div class="line" id="232841"><span class="nick" style="color:#d9d9d9"><a href="#232841" label="[23:28:41]">&lt;janneke&gt;</a></span><span class="message">now to make the paths worthwile and pleasant to follow</span></div><div class="line" id="232937"><span class="nick" style="color:#bc80bd"><a href="#232937" label="[23:29:37]">&lt;vagrantc&gt;</a></span><span class="message">less mes is more!</span></div><div class="line" id="233656"><span class="nick" style="color:#d9d9d9"><a href="#233656" label="[23:36:56]">&lt;janneke&gt;</a></span><span class="message">:)</span></div><div class="line" id="234149"><span class="nick" style="color:#8dd3c7"><a href="#234149" label="[23:41:49]">&lt;OriansJ&gt;</a></span><span class="message">well that is kinda the point of the seperate of MesCC and mes.c; we buy time by reducing the bootstrap to just guile and then we simply grow mes-m2 until we are able to become a drop in replacement for guile in the bootstrap.</span></div><div class="line" id="234331"><span class="nick" style="color:#8dd3c7"><a href="#234331" label="[23:43:31]">&lt;OriansJ&gt;</a></span><span class="message">Thus solving the Guix, GCC and Guile bootstrap problems all in a single step.</span></div><div class="line" id="234424"><span class="nick" style="color:#8dd3c7"><a href="#234424" label="[23:44:24]">&lt;OriansJ&gt;</a></span><span class="message">but it also requires mes-m2 to do a hell of alot more than mes.c did.</span></div><br /></div></body></html>