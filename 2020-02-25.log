<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-02-25.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="015031"><span class="nick" style="color:#8dd3c7"><a href="#015031" label="[01:50:31]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: thank you for the tests, only 2 currently don't pass</span></div><div class="line" id="015509"><span class="nick" style="color:#8dd3c7"><a href="#015509" label="[01:55:09]">&lt;OriansJ&gt;</a></span><span class="message">speaking of which, patches are up!</span></div><div class="line" id="015808"><span class="nick" style="color:#8dd3c7"><a href="#015808" label="[01:58:08]">&lt;OriansJ&gt;</a></span><span class="message">now mes-m2 looks just like guile when you do: (let ((a 0)) (while (&lt; a 128) (begin (write (integer-&gt;char a)) (set! a (+ a 1)) (display #\newline))))</span></div><div class="line" id="020040"><span class="nick" style="color:#8dd3c7"><a href="#020040" label="[02:00:40]">&lt;OriansJ&gt;</a></span><span class="message">only test039 [tailcall.scm] and test047 [or.scm] didn't pass</span></div><div class="line" id="020207"><span class="nick" style="color:#8dd3c7"><a href="#020207" label="[02:02:07]">&lt;OriansJ&gt;</a></span><span class="message">now the tailcall.scm; I kind of expected (since mes-m2 isn't tail-call yet) but the or.scm feels like a language lawyer sort of question. Should and/or short-circuit evaluate?</span></div><div class="line" id="020417"><span class="nick" style="color:#8dd3c7"><a href="#020417" label="[02:04:17]">&lt;OriansJ&gt;</a></span><span class="message">because the term circuit isn't even in the r7rs standard; let alone anything which would indicate that or/and should short circuit evaluate</span></div><div class="line" id="020437"><span class="nick" style="color:#8dd3c7"><a href="#020437" label="[02:04:37]">&lt;OriansJ&gt;</a></span><span class="message">But perhaps I am just missing something obvious again</span></div><div class="line" id="021933"><span class="nick" style="color:#2e2a4a"><a href="#021933" label="[02:19:33]">&lt;dddddd&gt;</a></span><span class="message">AFAIU 'or' is defined in terms of 'if' (7.3) and 'if' doesn't evaluate the alternate part (4.1.5) if test is false.</span></div><div class="line" id="022632"><span class="nick" style="color:#2e2a4a"><a href="#022632" label="[02:26:32]">&lt;dddddd&gt;</a></span><span class="message">s/false/not true/</span></div><div class="line" id="030738"><span class="nick" style="color:#6b8072"><a href="#030738" label="[03:07:38]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: congratulations!</span></div><div class="line" id="030831"><span class="nick" style="color:#80b1d3"><a href="#030831" label="[03:08:31]">&lt;fossy&gt;</a></span><span class="message">12/13 tests pass for kaem</span></div><div class="line" id="030840"><span class="nick" style="color:#80b1d3"><a href="#030840" label="[03:08:40]">&lt;fossy&gt;</a></span><span class="message">nearly done</span></div><div class="line" id="031227"><span class="nick" style="color:#6b8072"><a href="#031227" label="[03:12:27]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: you are very welcome</span></div><div class="line" id="045306"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="064346"><span class="nick" style="color:#6d2462"><a href="#064346" label="[06:43:46]">&lt;markjenkinsznc&gt;</a></span><span class="message">OriansJ, <a rel="nofollow" href="https://github.com/oriansj/stage0/compare/master...markjenkins:M0-compact-hex2-redo3">https://github.com/oriansj/stage0/compare/master...markjenkins:M0-compact-hex2-redo3</a>  (M0-macro-compact.hex2) has now gone through a audit process where I compared side by side with the .s . Combined with the formatting work already performed I'd say this meets the minimal standard for merge</span></div><div class="line" id="064601"><span class="nick" style="color:#6d2462"><a href="#064601" label="[06:46:01]">&lt;markjenkinsznc&gt;</a></span><span class="message">But I can still do more formatting: whitespace aligning the operands in hex and adjusting the column widths on a per function basis (almost widest common denominator right now) , perhaps even going so far to have a few rare long lines violate column boundaries as is seen in some hex2/.s to tighten things up further</span></div><div class="line" id="064645"><span class="nick" style="color:#6d2462"><a href="#064645" label="[06:46:45]">&lt;markjenkinsznc&gt;</a></span><span class="message">And before PR / merge I can do a rebase squash commit if you'd like</span></div><div class="line" id="064919"><span class="nick" style="color:#6d2462"><a href="#064919" label="[06:49:19]">&lt;markjenkinsznc&gt;</a></span><span class="message">All for now. Next up, integrating my M0 test scripts into stage0 makefile, writing a good featured knight disssembler in python3, doing knighpies 0.4.1 with M0-macro-compact used by test suite for 16/32/64 bit testing</span></div><div class="line" id="165832"><span class="nick">***</span><span class="message notice">pgreco_ is now known as pgreco</span></div><div class="line" id="224949"><span class="nick" style="color:#234e69"><a href="#224949" label="[22:49:49]">&lt;OriansJ`&gt;</a></span><span class="message">markjenkinsznc: I'll begin reviewing your autogenerated M0-macro-compact.hex2 for after I finish fixing continue in M2-Planet.</span></div><div class="line" id="230451"><span class="nick" style="color:#234e69"><a href="#230451" label="[23:04:51]">&lt;OriansJ`&gt;</a></span><span class="message">I am considering a rule going forward for generated files in stage0 is must be manually reviewed by n number of developers before acceptance (n being (LOC/250)^(LOC/250) [limit 10bytes per line (so higher penalties for high level languages)]) to apply heavy pressure against generated files</span></div><div class="line" id="231930"><span class="nick" style="color:#6d2462"><a href="#231930" label="[23:19:30]">&lt;markjenkinsznc&gt;</a></span><span class="message">No rush on the review and audit OriansJ. I am interested in learning if you'd like me to white align the operands in hex and tighten the columns on a per function basis, formatting changes I think will make other people's audits easier</span></div><div class="line" id="232526"><span class="nick" style="color:#2e2a4a"><a href="#232526" label="[23:25:26]">&lt;dddddd&gt;</a></span><span class="message">OriansJ`, did you see my response to the &quot;short-circuit&quot; question?</span></div><div class="line" id="232635"><span class="nick" style="color:#6d2462"><a href="#232635" label="[23:26:35]">&lt;markjenkinsznc&gt;</a></span><span class="message">Though I started auto generated, I did at least do an audit, evidence of that being <a rel="nofollow" href="https://github.com/oriansj/stage0/commit/031c6ce0471b347011a0663a2492b60af2d638b0">https://github.com/oriansj/stage0/commit/031c6ce0471b347011a0663a2492b60af2d638b0</a>  and the tool I used in my audit <a rel="nofollow" href="https://github.com/markjenkins/knightpies/blob/682aa8470cca85fa0f16769be9878abd462840bd/get_instructions_in_M1.py">https://github.com/markjenkins/knightpies/blob/682aa8470cca85fa0f16769be9878abd462840bd/get_instructions_in_M1.py</a>  to sed the hex2 file. This allowed me to find the mistakes in my operand white space seperating, which itself wasn't automated (hence</span></div><div class="line" id="232636"><span class="nick" style="color:#6d2462"><a href="#232636" label="[23:26:36]">&lt;markjenkinsznc&gt;</a></span><span class="message">the errors)</span></div><div class="line" id="232727"><span class="nick" style="color:#6d2462"><a href="#232727" label="[23:27:27]">&lt;markjenkinsznc&gt;</a></span><span class="message">What I did with sed and awk while auditing is similar to getting my editor to assist with the audit with find replace</span></div><div class="line" id="232734"><span class="nick" style="color:#234e69"><a href="#232734" label="[23:27:34]">&lt;OriansJ`&gt;</a></span><span class="message">dddddd: yes thank you; I just need to fix mes-m2's behavior in regards to or/and statements</span></div><div class="line" id="232816"><span class="nick" style="color:#2e2a4a"><a href="#232816" label="[23:28:16]">&lt;dddddd&gt;</a></span><span class="message">my pleasure, OriansJ`. Just checking it didn't get lost.</span></div><div class="line" id="232912"><span class="nick" style="color:#234e69"><a href="#232912" label="[23:29:12]">&lt;OriansJ`&gt;</a></span><span class="message">markjenkinsznc: well at a rough pass, the formating looks good</span></div><div class="line" id="232932"><span class="nick" style="color:#6d2462"><a href="#232932" label="[23:29:32]">&lt;markjenkinsznc&gt;</a></span><span class="message">worth improving as suggested?</span></div><div class="line" id="232946"><span class="nick" style="color:#6d2462"><a href="#232946" label="[23:29:46]">&lt;markjenkinsznc&gt;</a></span><span class="message">or good enough formatting</span></div><div class="line" id="232959"><span class="nick" style="color:#234e69"><a href="#232959" label="[23:29:59]">&lt;OriansJ`&gt;</a></span><span class="message">markjenkinsznc: well looking at <a rel="nofollow" href="https://github.com/markjenkins/stage0/blob/M0-compact-hex2-redo3/stage1/">https://github.com/markjenkins/stage0/blob/M0-compact-hex2-redo3/stage1/</a> </span></div><div class="line" id="233012"><span class="nick" style="color:#234e69"><a href="#233012" label="[23:30:12]">&lt;OriansJ`&gt;</a></span><span class="message">sorry <a rel="nofollow" href="https://github.com/markjenkins/stage0/blob/M0-compact-hex2-redo3/stage1/M0-macro-compact.hex2">https://github.com/markjenkins/stage0/blob/M0-compact-hex2-redo3/stage1/M0-macro-compact.hex2</a> </span></div><div class="line" id="233020"><span class="nick" style="color:#234e69"><a href="#233020" label="[23:30:20]">&lt;OriansJ`&gt;</a></span><span class="message">as it exists right now</span></div><div class="line" id="233054"><span class="nick" style="color:#234e69"><a href="#233054" label="[23:30:54]">&lt;OriansJ`&gt;</a></span><span class="message">with the seperation between opcodes, registers, immediates and pointers</span></div><div class="line" id="233104"><span class="nick" style="color:#234e69"><a href="#233104" label="[23:31:04]">&lt;OriansJ`&gt;</a></span><span class="message">The consistent line spacing</span></div><div class="line" id="233119"><span class="nick" style="color:#6d2462"><a href="#233119" label="[23:31:19]">&lt;markjenkinsznc&gt;</a></span><span class="message">possible improvement #1, white space align the hex operands , especially after the instruction because instructions different size</span></div><div class="line" id="233141"><span class="nick" style="color:#6d2462"><a href="#233141" label="[23:31:41]">&lt;markjenkinsznc&gt;</a></span><span class="message">possible improvement #2, reduce column widths on functions where they don't need to be as wide</span></div><div class="line" id="233235"><span class="nick" style="color:#234e69"><a href="#233235" label="[23:32:35]">&lt;OriansJ`&gt;</a></span><span class="message">well I am not sure about #1</span></div><div class="line" id="233404"><span class="nick" style="color:#234e69"><a href="#233404" label="[23:34:04]">&lt;OriansJ`&gt;</a></span><span class="message">#2 would make it look more compact but as you can see in my hand written code, that can result in a handful of lines (where there are long label names) which have the comment just a single char after the end of the assembly but not lined up with the rest</span></div><div class="line" id="233406"><span class="nick" style="color:#6d2462"><a href="#233406" label="[23:34:06]">&lt;markjenkinsznc&gt;</a></span><span class="message">it's not an idea I got from elsewhere in stage1/mescc-tools-seed, but I thought it could add to readability</span></div><div class="line" id="233442"><span class="nick" style="color:#234e69"><a href="#233442" label="[23:34:42]">&lt;OriansJ`&gt;</a></span><span class="message">markjenkinsznc: well a prototype might allow comment from people so say if it is a real improvement</span></div><div class="line" id="233452"><span class="nick" style="color:#6d2462"><a href="#233452" label="[23:34:52]">&lt;markjenkinsznc&gt;</a></span><span class="message">with #2 I can calibrate width per function to not have any lines go too far</span></div><div class="line" id="233558"><span class="nick" style="color:#6d2462"><a href="#233558" label="[23:35:58]">&lt;markjenkinsznc&gt;</a></span><span class="message">I actually think the rare line going too far is actually okay, as having the vast majority in a function line up is good enough</span></div><div class="line" id="233623"><span class="nick" style="color:#6d2462"><a href="#233623" label="[23:36:23]">&lt;markjenkinsznc&gt;</a></span><span class="message">but we can do perfect alignment on a per function basis instead of a per file basis</span></div><div class="line" id="233624"><span class="nick" style="color:#234e69"><a href="#233624" label="[23:36:24]">&lt;OriansJ`&gt;</a></span><span class="message">if you notice <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed/blob/master/AMD64/cc_amd64.M1#L664">https://github.com/oriansj/mescc-tools-seed/blob/master/AMD64/cc_amd64.M1#L664</a> </span></div><div class="line" id="233752"><span class="nick" style="color:#6d2462"><a href="#233752" label="[23:37:52]">&lt;markjenkinsznc&gt;</a></span><span class="message">not sure what's going on with Line 664</span></div><div class="line" id="233805"><span class="nick" style="color:#6d2462"><a href="#233805" label="[23:38:05]">&lt;markjenkinsznc&gt;</a></span><span class="message">seems to have same alignment</span></div><div class="line" id="233808"><span class="nick" style="color:#234e69"><a href="#233808" label="[23:38:08]">&lt;OriansJ`&gt;</a></span><span class="message">or <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed/blob/master/AMD64/cc_amd64.M1#L920">https://github.com/oriansj/mescc-tools-seed/blob/master/AMD64/cc_amd64.M1#L920</a> </span></div><div class="line" id="233831"><span class="nick" style="color:#234e69"><a href="#233831" label="[23:38:31]">&lt;OriansJ`&gt;</a></span><span class="message">(it is a couple lines down you see the extension past the standard padding)</span></div><div class="line" id="233839"><span class="nick" style="color:#6d2462"><a href="#233839" label="[23:38:39]">&lt;markjenkinsznc&gt;</a></span><span class="message">ahh, 667</span></div><div class="line" id="233859"><span class="nick" style="color:#234e69"><a href="#233859" label="[23:38:59]">&lt;OriansJ`&gt;</a></span><span class="message">It blends in</span></div><div class="line" id="233904"><span class="nick" style="color:#6d2462"><a href="#233904" label="[23:39:04]">&lt;markjenkinsznc&gt;</a></span><span class="message">so I actually think the ocassional line like 667 is okay</span></div><div class="line" id="234007"><span class="nick" style="color:#234e69"><a href="#234007" label="[23:40:07]">&lt;OriansJ`&gt;</a></span><span class="message">which allows the rest of the lines to be more compact</span></div><div class="line" id="234014"><span class="nick" style="color:#6d2462"><a href="#234014" label="[23:40:14]">&lt;markjenkinsznc&gt;</a></span><span class="message">but I can do either way, either tighten columns per function as far as possible without lines like 667, or tighten a lot more and have some 667 like</span></div><div class="line" id="234026"><span class="nick" style="color:#6d2462"><a href="#234026" label="[23:40:26]">&lt;markjenkinsznc&gt;</a></span><span class="message">it sounds like we agree</span></div><div class="line" id="234046"><span class="nick" style="color:#2e2a4a"><a href="#234046" label="[23:40:46]">&lt;dddddd&gt;</a></span><span class="message">Are you talking about some kind of prettifier? For...?</span></div><div class="line" id="234129"><span class="nick" style="color:#234e69"><a href="#234129" label="[23:41:29]">&lt;OriansJ`&gt;</a></span><span class="message">I'd prefer if it was consistent for all functions while minimizing the global number of lines like 667 to a handful</span></div><div class="line" id="234142"><span class="nick" style="color:#6d2462"><a href="#234142" label="[23:41:42]">&lt;markjenkinsznc&gt;</a></span><span class="message">I see</span></div><div class="line" id="234202"><span class="nick" style="color:#234e69"><a href="#234202" label="[23:42:02]">&lt;OriansJ`&gt;</a></span><span class="message">dddddd: M0/hex2</span></div><div class="line" id="234209"><span class="nick" style="color:#6d2462"><a href="#234209" label="[23:42:09]">&lt;markjenkinsznc&gt;</a></span><span class="message">will do</span></div><div class="line" id="234238"><span class="nick" style="color:#234e69"><a href="#234238" label="[23:42:38]">&lt;OriansJ`&gt;</a></span><span class="message">dddddd: because things that hard to read need all the help they can get</span></div><div class="line" id="234247"><span class="nick" style="color:#234e69"><a href="#234247" label="[23:42:47]">&lt;OriansJ`&gt;</a></span><span class="message">markjenkinsznc: thank you</span></div><div class="line" id="234405"><span class="nick" style="color:#2e2a4a"><a href="#234405" label="[23:44:05]">&lt;dddddd&gt;</a></span><span class="message">So, to respect the input comments... I guess. First idea in my mind is just respect the indentation of the original (if that makes sense, as in the output is smaller than the input).</span></div><div class="line" id="234426"><span class="nick" style="color:#2e2a4a"><a href="#234426" label="[23:44:26]">&lt;dddddd&gt;</a></span><span class="message">... instead of a full reformat.</span></div><div class="line" id="234523"><span class="nick" style="color:#234e69"><a href="#234523" label="[23:45:23]">&lt;OriansJ`&gt;</a></span><span class="message">Code shouldn't just be for executing but rather code is first for humans to read/understand and only secondly for computers to run</span></div><div class="line" id="234537"><span class="nick" style="color:#2e2a4a"><a href="#234537" label="[23:45:37]">&lt;dddddd&gt;</a></span><span class="message">you don't need to tell me that :P</span></div><div class="line" id="234555"><span class="nick" style="color:#234e69"><a href="#234555" label="[23:45:55]">&lt;OriansJ`&gt;</a></span><span class="message">dddddd: good ^_^</span></div><div class="line" id="234616"><span class="nick" style="color:#2e2a4a"><a href="#234616" label="[23:46:16]">&lt;dddddd&gt;</a></span><span class="message">But I don't see how that's related to what I said.</span></div><div class="line" id="234722"><span class="nick" style="color:#2e2a4a"><a href="#234722" label="[23:47:22]">&lt;dddddd&gt;</a></span><span class="message">Another question is the complexity of getting that pretty output from low-level implementations, but maybe you're not planning to port it.</span></div><div class="line" id="234816"><span class="nick" style="color:#234e69"><a href="#234816" label="[23:48:16]">&lt;OriansJ`&gt;</a></span><span class="message">automated formatting is for enforcing code style; as generally automated formatters are not needed if people can consistently do the right thing</span></div><div class="line" id="235034"><span class="nick" style="color:#234e69"><a href="#235034" label="[23:50:34]">&lt;OriansJ`&gt;</a></span><span class="message">dddddd: well the cosmetic changes in stage0 are just something that markjenkinsznc wants to work on. I am fine with that contribution</span></div><div class="line" id="235114"><span class="nick" style="color:#2e2a4a"><a href="#235114" label="[23:51:14]">&lt;dddddd&gt;</a></span><span class="message">No questions about that.</span></div><div class="line" id="235149"><span class="nick" style="color:#234e69"><a href="#235149" label="[23:51:49]">&lt;OriansJ`&gt;</a></span><span class="message">also assembly is never portable</span></div><div class="line" id="235250"><span class="nick" style="color:#234e69"><a href="#235250" label="[23:52:50]">&lt;OriansJ`&gt;</a></span><span class="message">hence why mescc-tools+M2-Planet are the only level where cross-platform consistent results are expected.</span></div><div class="line" id="235444"><span class="nick" style="color:#2e2a4a"><a href="#235444" label="[23:54:44]">&lt;dddddd&gt;</a></span><span class="message">Let me try to explain again, with an example... because I think I did't make myself clear enough. My understanding is that the goal is to get, say...</span></div><div class="line" id="235521"><span class="nick" style="color:#2e2a4a"><a href="#235521" label="[23:55:21]">&lt;dddddd&gt;</a></span><span class="message">00 02 03 03 03           ; here be dragons</span></div><div class="line" id="235523"><span class="nick" style="color:#2e2a4a"><a href="#235523" label="[23:55:23]">&lt;dddddd&gt;</a></span><span class="message">from</span></div><div class="line" id="235631"><span class="nick" style="color:#2e2a4a"><a href="#235631" label="[23:56:31]">&lt;dddddd&gt;</a></span><span class="message">THE_DRAGON_INSTRUCTION   ; here be dragons</span></div><div class="line" id="235658"><span class="nick" style="color:#2e2a4a"><a href="#235658" label="[23:56:58]">&lt;dddddd&gt;</a></span><span class="message">Am I close?</span></div><br /></div></body></html>