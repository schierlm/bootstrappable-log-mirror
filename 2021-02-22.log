<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-22.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011108"><span class="nick" style="color:#8dd3c7"><a href="#011108" label="[01:11:08]">&lt;fossy&gt;</a></span><span class="message">pder: yeah im trying to figure that out</span></div><div class="line" id="015321"><span class="nick" style="color:#2e2a4a"><a href="#015321" label="[01:53:21]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I've got autoconf 2.52 working (PR a bit later, maybe tomorrow)</span></div><div class="line" id="015326"><span class="nick" style="color:#2e2a4a"><a href="#015326" label="[01:53:26]">&lt;stikonas&gt;</a></span><span class="message">also possibly automake 1.4</span></div><div class="line" id="015344"><span class="nick" style="color:#2e2a4a"><a href="#015344" label="[01:53:44]">&lt;stikonas&gt;</a></span><span class="message">although, autoconf might need some further bootstrapping if we need newer versions</span></div><div class="line" id="015353"><span class="nick" style="color:#2e2a4a"><a href="#015353" label="[01:53:53]">&lt;stikonas&gt;</a></span><span class="message">annoyingly autoconf 2.53 depends on 2.53</span></div><div class="line" id="015402"><span class="nick" style="color:#2e2a4a"><a href="#015402" label="[01:54:02]">&lt;stikonas&gt;</a></span><span class="message">later they depend on the previous version</span></div><div class="line" id="015730"><span class="nick" style="color:#6b8072"><a href="#015730" label="[01:57:30]">&lt;OriansJ&gt;</a></span><span class="message">and I am pleased to announce M2libc now properly flushes file buffers without needing to call fflush prior to exit or returning from main but also does the correct thing for _exit and skips closing of file buffers as per the C standard.</span></div><div class="line" id="015800"><span class="nick" style="color:#2e2a4a"><a href="#015800" label="[01:58:00]">&lt;stikonas&gt;</a></span><span class="message">oh, that's good. Some softare in the bootstrap chaing does not properly flush</span></div><div class="line" id="020645"><span class="nick" style="color:#6b8072"><a href="#020645" label="[02:06:45]">&lt;OriansJ&gt;</a></span><span class="message">just need to make sure every last bit of the libc tweaks are flawless</span></div><div class="line" id="022424"><span class="nick" style="color:#6b8072"><a href="#022424" label="[02:24:24]">&lt;OriansJ&gt;</a></span><span class="message">and of courese I get armv7l and AArch64 wrong but everything else right</span></div><div class="line" id="023306"><span class="nick" style="color:#2e2a4a"><a href="#023306" label="[02:33:06]">&lt;stikonas&gt;</a></span><span class="message">pder: have you mentioned you had some trouble building binutils with tcc-mes?</span></div><div class="line" id="023337"><span class="nick" style="color:#2e2a4a"><a href="#023337" label="[02:33:37]">&lt;stikonas&gt;</a></span><span class="message">here it seems to work if I just run shipped configure</span></div><div class="line" id="023358"><span class="nick" style="color:#2e2a4a"><a href="#023358" label="[02:33:58]">&lt;stikonas&gt;</a></span><span class="message">although, I had less luck with autoconf (probably need some specific version)</span></div><div class="line" id="023414"><span class="nick" style="color:#80b1d3"><a href="#023414" label="[02:34:14]">&lt;pder&gt;</a></span><span class="message">the issue I was having was actually with tcc-musl.  Getting this error: /after/include/musl/bits/alltypes.h:323: error: too many basic types</span></div><div class="line" id="023449"><span class="nick" style="color:#2e2a4a"><a href="#023449" label="[02:34:49]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="023452"><span class="nick" style="color:#2e2a4a"><a href="#023452" label="[02:34:52]">&lt;stikonas&gt;</a></span><span class="message">anyway, this worked:</span></div><div class="line" id="023454"><span class="nick" style="color:#2e2a4a"><a href="#023454" label="[02:34:54]">&lt;stikonas&gt;</a></span><span class="message">CC=&quot;tcc-mes -D __GLIBC_MINOR__=6&quot; AR=&quot;tcc-mes -ar&quot; RANLIB=true ./configure --prefix=/after --target=i386-unknown-linux-gnu --host=i386-unknown-linux-gnu --target=i386-unknown-linux-gnu -</span></div><div class="line" id="023455"><span class="nick" style="color:#2e2a4a"><a href="#023455" label="[02:34:55]">&lt;stikonas&gt;</a></span><span class="message">-disable-shared --disable-nls --disable-werror</span></div><div class="line" id="023508"><span class="nick" style="color:#2e2a4a"><a href="#023508" label="[02:35:08]">&lt;stikonas&gt;</a></span><span class="message">but not if I ran autoconf/automake</span></div><div class="line" id="023528"><span class="nick" style="color:#2e2a4a"><a href="#023528" label="[02:35:28]">&lt;stikonas&gt;</a></span><span class="message">and there are also a few bison scripts we need to rebuild? (or at least touch)</span></div><div class="line" id="023820"><span class="nick" style="color:#2e2a4a"><a href="#023820" label="[02:38:20]">&lt;stikonas&gt;</a></span><span class="message">pder: well, if tcc-mes works I guess we can use it...</span></div><div class="line" id="025208"><span class="nick" style="color:#2e2a4a"><a href="#025208" label="[02:52:08]">&lt;stikonas&gt;</a></span><span class="message">it's possible that, we might need multiple autoconf versions on the same package (top level vs subdir configure scripts)</span></div><div class="line" id="030744"><span class="nick" style="color:#6b8072"><a href="#030744" label="[03:07:44]">&lt;OriansJ&gt;</a></span><span class="message">and the fixed version for AArch64 and armv7l is now up and M2-Planet has integrated it already</span></div><div class="line" id="030846"><span class="nick" style="color:#6b8072"><a href="#030846" label="[03:08:46]">&lt;OriansJ&gt;</a></span><span class="message">The process of replacing file_print with fputs is slow but it'll finally make M2-Planet a much more standard C program and Compiler</span></div><div class="line" id="030946"><span class="nick" style="color:#6b8072"><a href="#030946" label="[03:09:46]">&lt;OriansJ&gt;</a></span><span class="message">and I'll be adding a char* int2str(int x, int base, int signed_p) to bootstrappable.h to give a lisp style number-&gt;string sort of function to C</span></div><div class="line" id="031011"><span class="nick" style="color:#6b8072"><a href="#031011" label="[03:10:11]">&lt;OriansJ&gt;</a></span><span class="message">because atoi isn't standard and it expects you to pass it the buffer.</span></div><div class="line" id="031222"><span class="nick" style="color:#6b8072"><a href="#031222" label="[03:12:22]">&lt;OriansJ&gt;</a></span><span class="message">and making it univerally behave (only excepting 32bit numbers and actually handling the -2147483648 case correctly unlike ntoab)</span></div><div class="line" id="031353"><span class="nick" style="color:#6b8072"><a href="#031353" label="[03:13:53]">&lt;OriansJ&gt;</a></span><span class="message">hopefully I'll be able to pull all of the bootstrap.h functions out of mescc-tools and M2-Planet and provide only the absolute core of value.</span></div><div class="line" id="031510"><span class="nick" style="color:#6b8072"><a href="#031510" label="[03:15:10]">&lt;OriansJ&gt;</a></span><span class="message">supporting base-2 through base-36 and being correct for all inputs</span></div><div class="line" id="031632"><span class="nick" style="color:#6b8072"><a href="#031632" label="[03:16:32]">&lt;OriansJ&gt;</a></span><span class="message">and if calloc fails return NULL so that the calling function can catch it and deal with the mess but not have to deal with allocation details.</span></div><div class="line" id="031824"><span class="nick" style="color:#6b8072"><a href="#031824" label="[03:18:24]">&lt;OriansJ&gt;</a></span><span class="message">and with the recent fflush behavior change We have achieved a healthy speed increase as well.</span></div><div class="line" id="032102"><span class="nick" style="color:#6b8072"><a href="#032102" label="[03:21:02]">&lt;OriansJ&gt;</a></span><span class="message">it can now write a 25MB file in 3 seconds flat (iterating over int2str a shitload)</span></div><div class="line" id="032532"><span class="nick" style="color:#6b8072"><a href="#032532" label="[03:25:32]">&lt;OriansJ&gt;</a></span><span class="message">up next in M2libc is string.h and other new fun libraries</span></div><div class="line" id="042822"><span class="nick" style="color:#80b1d3"><a href="#042822" label="[04:28:22]">&lt;pder&gt;</a></span><span class="message">OriansJ: that all sounds great.  One thing I noted when debugging blynn-compiler and doing lots of printing numbers is that it would malloc new memory each call, so eventually I would run out of memory.  It would be nice to be able to pass in your own buffer</span></div><div class="line" id="050425"><span class="nick" style="color:#8dd3c7"><a href="#050425" label="[05:04:25]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; annoyingly autoconf 2.53 depends on 2.53</span></div><div class="line" id="050428"><span class="nick" style="color:#8dd3c7"><a href="#050428" label="[05:04:28]">&lt;fossy&gt;</a></span><span class="message">how does this work</span></div><div class="line" id="053410"><span class="nick" style="color:#6d2462"><a href="#053410" label="[05:34:10]">&lt;siraben&gt;</a></span><span class="message">pder: oh? I thought blynn-compiler used its own large array to manage memory?</span></div><div class="line" id="053451"><span class="nick" style="color:#6d2462"><a href="#053451" label="[05:34:51]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/blynn-compiler/blob/747028512aaa4a2ad31a94e3adea90d7da95a7c8/vm.c#L744">https://github.com/oriansj/blynn-compiler/blob/747028512aaa4a2ad31a94e3adea90d7da95a7c8/vm.c#L744</a> </span></div><div class="line" id="055025"><span class="nick" style="color:#8dd3c7"><a href="#055025" label="[05:50:25]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: wheres that configure from?</span></div><div class="line" id="060542"><span class="nick" style="color:#80b1d3"><a href="#060542" label="[06:05:42]">&lt;pder&gt;</a></span><span class="message">siraben: when I was debugging blynn-compiler, I was often printing out debug info to compare the M2-Planet build with the gcc build.  The call to numerate_number allocates memory each time that is never freed and I was doing this millions of times.</span></div><div class="line" id="061823"><span class="nick" style="color:#6d2462"><a href="#061823" label="[06:18:23]">&lt;siraben&gt;</a></span><span class="message">Ah.</span></div><div class="line" id="063813"><span class="nick" style="color:#234e69"><a href="#063813" label="[06:38:13]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://blogs.gentoo.org/mgorny/2021/02/19/the-modern-packagers-security-nightmare/">https://blogs.gentoo.org/mgorny/2021/02/19/the-modern-packagers-security-nightmare/</a> </span></div><div class="line" id="063954"><span class="nick" style="color:#234e69"><a href="#063954" label="[06:39:54]">&lt;Hagfish&gt;</a></span><span class="message">i'm glad there are people out there who still stand up for proper software engineering principles</span></div><div class="line" id="064248"><span class="nick" style="color:#6d2462"><a href="#064248" label="[06:42:48]">&lt;siraben&gt;</a></span><span class="message">heh having a discussion on that right now in a different channel</span></div><div class="line" id="070028"><span class="nick" style="color:#234e69"><a href="#070028" label="[07:00:28]">&lt;Hagfish&gt;</a></span><span class="message">they probably saw it the same place as me: <a rel="nofollow" href="https://news.ycombinator.com/item?id=26203853">https://news.ycombinator.com/item?id=26203853</a> </span></div><div class="line" id="070130"><span class="nick" style="color:#6d2462"><a href="#070130" label="[07:01:30]">&lt;siraben&gt;</a></span><span class="message">Yeah, so did I.</span></div><div class="line" id="070409"><span class="nick" style="color:#6d2462"><a href="#070409" label="[07:04:09]">&lt;siraben&gt;</a></span><span class="message">I don't think it's really a concern. Because lockfiles serve the purpose of pinning dependencies down exactly whereas nominal (and therefore inexact) specifications are more lax about what dependencies are used</span></div><div class="line" id="070449"><span class="nick" style="color:#6d2462"><a href="#070449" label="[07:04:49]">&lt;siraben&gt;</a></span><span class="message">In general you can't even be sure a minor version bump of a dependency wouldn't break your package, I've had that problem happen to me before and lockfiles were useful to revert.</span></div><div class="line" id="070736"><span class="nick" style="color:#234e69"><a href="#070736" label="[07:07:36]">&lt;Hagfish&gt;</a></span><span class="message">i've seen a library deliberately introduce a breaking change into a minor version on the basis that they were making the behaviour match the documentation</span></div><div class="line" id="070803"><span class="nick" style="color:#234e69"><a href="#070803" label="[07:08:03]">&lt;Hagfish&gt;</a></span><span class="message">(following the documentation up until that point would have resulted in broken code, so no one was using it how the documentation said)</span></div><div class="line" id="070804"><span class="nick" style="color:#6d2462"><a href="#070804" label="[07:08:04]">&lt;siraben&gt;</a></span><span class="message">yikes</span></div><div class="line" id="070812"><span class="nick" style="color:#6d2462"><a href="#070812" label="[07:08:12]">&lt;siraben&gt;</a></span><span class="message">Hyrum's law!</span></div><div class="line" id="070830"><span class="nick" style="color:#234e69"><a href="#070830" label="[07:08:30]">&lt;Hagfish&gt;</a></span><span class="message">Hyrum wasn't expecting malicious developers :)</span></div><div class="line" id="070916"><span class="nick" style="color:#6d2462"><a href="#070916" label="[07:09:16]">&lt;siraben&gt;</a></span><span class="message">that behavior gives off such chaotic neutral vibes</span></div><div class="line" id="070923"><span class="nick" style="color:#234e69"><a href="#070923" label="[07:09:23]">&lt;Hagfish&gt;</a></span><span class="message">heh, yup</span></div><div class="line" id="070933"><span class="nick" style="color:#234e69"><a href="#070933" label="[07:09:33]">&lt;Hagfish&gt;</a></span><span class="message">it takes a special type of sociopath to use the excuse &quot;well you should have been following the documentation&quot; when following the documentation would have resulted in your code not working</span></div><div class="line" id="071026"><span class="nick" style="color:#6d2462"><a href="#071026" label="[07:10:26]">&lt;siraben&gt;</a></span><span class="message">the article does raise the point that because of lockfiles, it can take years before you have all dependencies (direct or transitive) of a Go/Rust program &quot;secure&quot;</span></div><div class="line" id="071034"><span class="nick" style="color:#234e69"><a href="#071034" label="[07:10:34]">&lt;Hagfish&gt;</a></span><span class="message">right</span></div><div class="line" id="071041"><span class="nick" style="color:#6d2462"><a href="#071041" label="[07:10:41]">&lt;siraben&gt;</a></span><span class="message">I guess an overriding mechanism would be nice</span></div><div class="line" id="071131"><span class="nick" style="color:#234e69"><a href="#071131" label="[07:11:31]">&lt;Hagfish&gt;</a></span><span class="message">i think that it must be a false dichotomy to choose between &quot;lock to a specific tested version&quot; and &quot;allow some wiggle room for security updates (which lazy/malicious developers then drive a bus through)&quot;</span></div><div class="line" id="071155"><span class="nick" style="color:#6d2462"><a href="#071155" label="[07:11:55]">&lt;siraben&gt;</a></span><span class="message">For certain languages (Python/Haskell), Nixpkgs actually maintains a package set of it, but for others (Go/Rust) you just specify the hash of the lockfile and are done with it</span></div><div class="line" id="071211"><span class="nick" style="color:#6d2462"><a href="#071211" label="[07:12:11]">&lt;siraben&gt;</a></span><span class="message">in the former case overriding to any degree is supported, but not in the latter case</span></div><div class="line" id="071240"><span class="nick" style="color:#6d2462"><a href="#071240" label="[07:12:40]">&lt;siraben&gt;</a></span><span class="message">Hagfish: what would you have instead?</span></div><div class="line" id="071300"><span class="nick" style="color:#234e69"><a href="#071300" label="[07:13:00]">&lt;Hagfish&gt;</a></span><span class="message">i'm not sure exactly</span></div><div class="line" id="071301"><span class="nick" style="color:#6d2462"><a href="#071301" label="[07:13:01]">&lt;siraben&gt;</a></span><span class="message">pretty shocking that minor version bumps can/will be used for breaking changes</span></div><div class="line" id="071309"><span class="nick" style="color:#234e69"><a href="#071309" label="[07:13:09]">&lt;Hagfish&gt;</a></span><span class="message">i think it requires a different way to look at the problem</span></div><div class="line" id="071312"><span class="nick" style="color:#6d2462"><a href="#071312" label="[07:13:12]">&lt;siraben&gt;</a></span><span class="message">lockfiles are like an extreme solution to this</span></div><div class="line" id="071328"><span class="nick" style="color:#6d2462"><a href="#071328" label="[07:13:28]">&lt;siraben&gt;</a></span><span class="message">bundling deps is worse.</span></div><div class="line" id="071341"><span class="nick" style="color:#234e69"><a href="#071341" label="[07:13:41]">&lt;Hagfish&gt;</a></span><span class="message">probably what i'm proposing is that the issue of solving version dependencies is pushed to a third party who does the integration work for you, i.e. your distro</span></div><div class="line" id="071347"><span class="nick" style="color:#6c3d55"><a href="#071347" label="[07:13:47]">&lt;pabs3&gt;</a></span><span class="message">modified bundled deps of random commits is more worse :)</span></div><div class="line" id="071349"><span class="nick" style="color:#234e69"><a href="#071349" label="[07:13:49]">&lt;Hagfish&gt;</a></span><span class="message">but i know that there are scalability problems with that</span></div><div class="line" id="071359"><span class="nick" style="color:#6d2462"><a href="#071359" label="[07:13:59]">&lt;siraben&gt;</a></span><span class="message">pabs3: !!!</span></div><div class="line" id="071420"><span class="nick" style="color:#d9d9d9"><a href="#071420" label="[07:14:20]">*</a></span><span class="message">pabs3 notes that most of the HN thread thinks the Gentoo post is ultra-stupid</span></div><div class="line" id="071502"><span class="nick" style="color:#6d2462"><a href="#071502" label="[07:15:02]">&lt;siraben&gt;</a></span><span class="message">Yeah. I've packaged C, Rust, Go, Python packages for Nixpkgs before and I have to say, C and especially Python probably take the most effort to do successfully.</span></div><div class="line" id="071542"><span class="nick" style="color:#6c3d55"><a href="#071542" label="[07:15:42]">&lt;pabs3&gt;</a></span><span class="message">if you want some horror, check out the 2nd link on <a rel="nofollow" href="https://wiki.debian.org/EmbeddedCopies">https://wiki.debian.org/EmbeddedCopies</a> </span></div><div class="line" id="071600"><span class="nick" style="color:#6c3d55"><a href="#071600" label="[07:16:00]">&lt;pabs3&gt;</a></span><span class="message">(it is huge yet vastly underestimates the amount of embedding)</span></div><div class="line" id="071637"><span class="nick" style="color:#6d2462"><a href="#071637" label="[07:16:37]">&lt;siraben&gt;</a></span><span class="message">I've seen embedded copies but as submodules</span></div><div class="line" id="071648"><span class="nick" style="color:#6d2462"><a href="#071648" label="[07:16:48]">&lt;siraben&gt;</a></span><span class="message">Oh same thing I think</span></div><div class="line" id="092309"><span class="nick" style="color:#6c3d55"><a href="#092309" label="[09:23:09]">&lt;pabs3&gt;</a></span><span class="message">a couple of patches updating links on the website to https: <a rel="nofollow" href="https://paste.debian.net/plain/1186383/">https://paste.debian.net/plain/1186383/</a> </span></div><div class="line" id="092522"><span class="nick" style="color:#6c3d55"><a href="#092522" label="[09:25:22]">&lt;pabs3&gt;</a></span><span class="message">(I can post them to the list if wanted)</span></div><div class="line" id="111427"><span class="nick" style="color:#2e2a4a"><a href="#111427" label="[11:14:27]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh actually, numbers in README.md and run.sh will again be out of sync...</span></div><div class="line" id="111430"><span class="nick" style="color:#2e2a4a"><a href="#111430" label="[11:14:30]">&lt;stikonas&gt;</a></span><span class="message">after your commit</span></div><div class="line" id="111526"><span class="nick" style="color:#2e2a4a"><a href="#111526" label="[11:15:26]">&lt;stikonas&gt;</a></span><span class="message">oh ignore that</span></div><div class="line" id="111539"><span class="nick" style="color:#2e2a4a"><a href="#111539" label="[11:15:39]">&lt;stikonas&gt;</a></span><span class="message">I'm not on that commit yet...</span></div><div class="line" id="133026"><span class="nick" style="color:#6b8072"><a href="#133026" label="[13:30:26]">&lt;OriansJ&gt;</a></span><span class="message">pder: I believe there is a more standard C function for that; that I'll probably include in strings.h for M2libc and if not, I'll create one just for you.</span></div><div class="line" id="134325"><span class="nick" style="color:#6b8072"><a href="#134325" label="[13:43:25]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: we always knew that incompatible forks and lazy developers were the default. The Cathedral and the Bazaar showed rather clearly that developers don't care about security just only the features that they want. Software only ever bloats.</span></div><div class="line" id="134410"><span class="nick" style="color:#6b8072"><a href="#134410" label="[13:44:10]">&lt;OriansJ&gt;</a></span><span class="message">The fact that there are known security vulnerabilties because of developers not caring shouldn't be a surprise to anyone here.</span></div><div class="line" id="134534"><span class="nick" style="color:#6b8072"><a href="#134534" label="[13:45:34]">&lt;OriansJ&gt;</a></span><span class="message">Bootstrapping is a security issue of the most essential kind; which has been ignored and forgotten for nearly a hundred years before we came together to actually address it correctly.</span></div><div class="line" id="134925"><span class="nick" style="color:#6b8072"><a href="#134925" label="[13:49:25]">&lt;OriansJ&gt;</a></span><span class="message">ironically they didn't call out Java which is so bad that (and I quote): The only working solution with the current Java developement community is to forget the idea of shared libraries and simply having the JARs package all the libraries they depend upon and only shipping Java runtime/interpreter/compiler.</span></div><div class="line" id="135914"><span class="nick" style="color:#6b8072"><a href="#135914" label="[13:59:14]">&lt;OriansJ&gt;</a></span><span class="message">Although reading the HN thread, I can't help but feel the argument is really about programmers needing someone who cares about compatibility and stable ABIs</span></div><div class="line" id="145614"><span class="nick">***</span><span class="message notice">stikonas_ is now known as stikonas</span></div><div class="line" id="175220"><span class="nick" style="color:#80b1d3"><a href="#175220" label="[17:52:20]">&lt;pder&gt;</a></span><span class="message">stikonas: the tcc &quot;too many basic types&quot; error can be triggered simply by creating a trivial C program that includes &quot;typedef int int&quot;</span></div><div class="line" id="175334"><span class="nick" style="color:#80b1d3"><a href="#175334" label="[17:53:34]">&lt;pder&gt;</a></span><span class="message">so something is causing that code to be generated in the preprocessor</span></div><div class="line" id="175336"><span class="nick" style="color:#2e2a4a"><a href="#175336" label="[17:53:36]">&lt;stikonas&gt;</a></span><span class="message">pder: oh I see...</span></div><div class="line" id="175349"><span class="nick" style="color:#2e2a4a"><a href="#175349" label="[17:53:49]">&lt;stikonas&gt;</a></span><span class="message">binutils?</span></div><div class="line" id="175354"><span class="nick" style="color:#2e2a4a"><a href="#175354" label="[17:53:54]">&lt;stikonas&gt;</a></span><span class="message">are you regenerating bison files?</span></div><div class="line" id="175407"><span class="nick" style="color:#2e2a4a"><a href="#175407" label="[17:54:07]">&lt;stikonas&gt;</a></span><span class="message">or is this with just upstream</span></div><div class="line" id="175416"><span class="nick" style="color:#2e2a4a"><a href="#175416" label="[17:54:16]">&lt;stikonas&gt;</a></span><span class="message">(and due to config.h)</span></div><div class="line" id="175422"><span class="nick" style="color:#80b1d3"><a href="#175422" label="[17:54:22]">&lt;pder&gt;</a></span><span class="message">no, i was simply trying to run configure with the same arguments and env vars as guix</span></div><div class="line" id="175438"><span class="nick" style="color:#2e2a4a"><a href="#175438" label="[17:54:38]">&lt;stikonas&gt;</a></span><span class="message">with musl?</span></div><div class="line" id="175442"><span class="nick" style="color:#80b1d3"><a href="#175442" label="[17:54:42]">&lt;pder&gt;</a></span><span class="message">yes</span></div><div class="line" id="175447"><span class="nick" style="color:#2e2a4a"><a href="#175447" label="[17:54:47]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="175452"><span class="nick" style="color:#2e2a4a"><a href="#175452" label="[17:54:52]">&lt;stikonas&gt;</a></span><span class="message">probably something in config.h then</span></div><div class="line" id="175513"><span class="nick" style="color:#2e2a4a"><a href="#175513" label="[17:55:13]">&lt;stikonas&gt;</a></span><span class="message">when I tried musl I've got somet erorr about alloca redefined</span></div><div class="line" id="175649"><span class="nick" style="color:#2e2a4a"><a href="#175649" label="[17:56:49]">&lt;stikonas&gt;</a></span><span class="message">by the way, yesterday I've got autoconf 2.52 working, but not sure how useful it will be for us (might be enough for binutils 2.14, but a lot of other software needs at least 2.54 which needs newer perl...</span></div><div class="line" id="175725"><span class="nick" style="color:#2e2a4a"><a href="#175725" label="[17:57:25]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think I'll not push autoconf to master yet until we have a proper user for it</span></div><div class="line" id="175736"><span class="nick" style="color:#2e2a4a"><a href="#175736" label="[17:57:36]">&lt;stikonas&gt;</a></span><span class="message">(but I can push  to my branch)</span></div><div class="line" id="180611"><span class="nick" style="color:#80b1d3"><a href="#180611" label="[18:06:11]">&lt;pder&gt;</a></span><span class="message">interesting, so I almost had complete success with a tcc-musl build of binutils.  I had to adjust a few things in config.h in libiberty related to typedefs for pid_t and uintptr_t</span></div><div class="line" id="180946"><span class="nick" style="color:#2e2a4a"><a href="#180946" label="[18:09:46]">&lt;stikonas&gt;</a></span><span class="message">ok, that's good I guess</span></div><div class="line" id="181007"><span class="nick" style="color:#2e2a4a"><a href="#181007" label="[18:10:07]">&lt;stikonas&gt;</a></span><span class="message">well, if you manage to build it, you can then try touching .y files to rebuild them and see if it's still builds...</span></div><div class="line" id="181019"><span class="nick" style="color:#2e2a4a"><a href="#181019" label="[18:10:19]">&lt;stikonas&gt;</a></span><span class="message">and then later maybe rebuild configure scripts (<a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/autotools">https://github.com/stikonas/live-bootstrap/tree/autotools</a>) </span></div><div class="line" id="181038"><span class="nick" style="color:#2e2a4a"><a href="#181038" label="[18:10:38]">&lt;stikonas&gt;</a></span><span class="message">(and even later we need to rebuild Makefile.in's)</span></div><div class="line" id="210309"><span class="nick" style="color:#2e2a4a"><a href="#210309" label="[21:03:09]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, where did you find that sha256 is 16x less likely to produce collisions? That's seems wrong</span></div><div class="line" id="210342"><span class="nick" style="color:#2e2a4a"><a href="#210342" label="[21:03:42]">&lt;stikonas&gt;</a></span><span class="message">I would thing sha256 is significantly less likely to collide</span></div><div class="line" id="210346"><span class="nick" style="color:#2e2a4a"><a href="#210346" label="[21:03:46]">&lt;stikonas&gt;</a></span><span class="message">not just 16 times less</span></div><div class="line" id="210436"><span class="nick" style="color:#8dd3c7"><a href="#210436" label="[21:04:36]">&lt;fossy&gt;</a></span><span class="message">stikonas: actually you are correct</span></div><div class="line" id="210450"><span class="nick" style="color:#8dd3c7"><a href="#210450" label="[21:04:50]">&lt;fossy&gt;</a></span><span class="message">I wrote that pretty late, idk what I was thinking</span></div><div class="line" id="210538"><span class="nick" style="color:#2e2a4a"><a href="#210538" label="[21:05:38]">&lt;stikonas&gt;</a></span><span class="message">hmm, so for sha256 I guess you need about 2^128 hashes to observe collision with reasonable chance</span></div><div class="line" id="210547"><span class="nick" style="color:#2e2a4a"><a href="#210547" label="[21:05:47]">&lt;stikonas&gt;</a></span><span class="message">and with flether16 you need 2^8</span></div><div class="line" id="210607"><span class="nick" style="color:#2e2a4a"><a href="#210607" label="[21:06:07]">&lt;stikonas&gt;</a></span><span class="message">so my very rough estimate would be 2^120</span></div><div class="line" id="210844"><span class="nick" style="color:#2e2a4a"><a href="#210844" label="[21:08:44]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I have autoconf 2.52 here in case we need it <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/autotools">https://github.com/stikonas/live-bootstrap/tree/autotools</a>  but I think we should postpone merging it until we have a need for it (some other non-autotools package that needs it)</span></div><div class="line" id="210919"><span class="nick" style="color:#2e2a4a"><a href="#210919" label="[21:09:19]">&lt;stikonas&gt;</a></span><span class="message">since different versions are not always compatible... So it's not clear if we should start with 2.52</span></div><div class="line" id="210930"><span class="nick" style="color:#2e2a4a"><a href="#210930" label="[21:09:30]">&lt;stikonas&gt;</a></span><span class="message">and 2.52 is quite old, a lot of software that we want needs newer</span></div><div class="line" id="210937"><span class="nick" style="color:#2e2a4a"><a href="#210937" label="[21:09:37]">&lt;stikonas&gt;</a></span><span class="message">unfortunately that also requires newer perl</span></div><div class="line" id="213243"><span class="nick" style="color:#8dd3c7"><a href="#213243" label="[21:32:43]">&lt;fossy&gt;</a></span><span class="message">right, I see</span></div><div class="line" id="213300"><span class="nick" style="color:#8dd3c7"><a href="#213300" label="[21:33:00]">&lt;fossy&gt;</a></span><span class="message">are we ready to attempt a gnu toolchain in that case</span></div><div class="line" id="213319"><span class="nick" style="color:#8dd3c7"><a href="#213319" label="[21:33:19]">&lt;fossy&gt;</a></span><span class="message">stikonas: also can we yet use Perl for Perl configure</span></div><div class="line" id="214317"><span class="nick" style="color:#2e2a4a"><a href="#214317" label="[21:43:17]">&lt;stikonas&gt;</a></span><span class="message">fossy: probably not</span></div><div class="line" id="214328"><span class="nick" style="color:#2e2a4a"><a href="#214328" label="[21:43:28]">&lt;stikonas&gt;</a></span><span class="message">we can try gnu toolchain though</span></div><div class="line" id="214342"><span class="nick" style="color:#2e2a4a"><a href="#214342" label="[21:43:42]">&lt;stikonas&gt;</a></span><span class="message">but probably just old</span></div><div class="line" id="214348"><span class="nick" style="color:#2e2a4a"><a href="#214348" label="[21:43:48]">&lt;stikonas&gt;</a></span><span class="message">autoconf is too old for new one</span></div><div class="line" id="214939"><span class="nick" style="color:#8dd3c7"><a href="#214939" label="[21:49:39]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="214942"><span class="nick" style="color:#8dd3c7"><a href="#214942" label="[21:49:42]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="215815"><span class="nick" style="color:#2e2a4a"><a href="#215815" label="[21:58:15]">&lt;stikonas&gt;</a></span><span class="message">and only autoconf 1.4 or older worked for me on current perl</span></div><div class="line" id="215821"><span class="nick" style="color:#2e2a4a"><a href="#215821" label="[21:58:21]">&lt;stikonas&gt;</a></span><span class="message">newer ones segfaulted</span></div><div class="line" id="220608"><span class="nick" style="color:#2e2a4a"><a href="#220608" label="[22:06:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: so my current problem with perl 5.6 is</span></div><div class="line" id="220610"><span class="nick" style="color:#2e2a4a"><a href="#220610" label="[22:06:10]">&lt;stikonas&gt;</a></span><span class="message">tcc -DPRIVLIB_EXP=\&quot;/after/lib/perl5/5.6.2\&quot;   -c -o perly.o perly.c</span></div><div class="line" id="220611"><span class="nick" style="color:#2e2a4a"><a href="#220611" label="[22:06:11]">&lt;stikonas&gt;</a></span><span class="message">perly.tab.c:1662: error: incompatible types for redefinition of 'yydestruct'</span></div><div class="line" id="220623"><span class="nick" style="color:#2e2a4a"><a href="#220623" label="[22:06:23]">&lt;stikonas&gt;</a></span><span class="message">so something is going badly with bison</span></div><div class="line" id="220630"><span class="nick" style="color:#2e2a4a"><a href="#220630" label="[22:06:30]">&lt;stikonas&gt;</a></span><span class="message">although there is another problem too</span></div><div class="line" id="220830"><span class="nick" style="color:#2e2a4a"><a href="#220830" label="[22:08:30]">&lt;stikonas&gt;</a></span><span class="message">toke.c:180: error: 'ANDAND' undeclared</span></div><div class="line" id="220847"><span class="nick" style="color:#2e2a4a"><a href="#220847" label="[22:08:47]">&lt;stikonas&gt;</a></span><span class="message">hmm, this one is probably something wrong with defines, should be fixable</span></div><div class="line" id="223845"><span class="nick" style="color:#234e69"><a href="#223845" label="[22:38:45]">&lt;Hagfish&gt;</a></span><span class="message">stikonas: huh, intriguing errors, but that's way outside my area of expertise.  have you tried dangling this sort of puzzle in front people in a perl channel (or a bison channel?)?</span></div><div class="line" id="224115"><span class="nick" style="color:#8dd3c7"><a href="#224115" label="[22:41:15]">&lt;fossy&gt;</a></span><span class="message">stikonas: is bison new enough?</span></div><div class="line" id="224706"><span class="nick" style="color:#bc80bd"><a href="#224706" label="[22:47:06]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe too new?</span></div><div class="line" id="224724"><span class="nick" style="color:#bc80bd"><a href="#224724" label="[22:47:24]">&lt;stikonas[m]&gt;</a></span><span class="message">Bison 3.4.1 is fairly recent</span></div><div class="line" id="230556"><span class="nick" style="color:#2e2a4a"><a href="#230556" label="[23:05:56]">&lt;stikonas&gt;</a></span><span class="message">ok, the other perl define errors sorted out, only bison left</span></div><div class="line" id="230954"><span class="nick" style="color:#80b1d3"><a href="#230954" label="[23:09:54]">&lt;pder&gt;</a></span><span class="message">I was able to get binutils-2.14 to build and link properly with tcc-musl.  It required a few hacks to force it to use alloca.c.</span></div><div class="line" id="231224"><span class="nick" style="color:#2e2a4a"><a href="#231224" label="[23:12:24]">&lt;stikonas&gt;</a></span><span class="message">pder: nice!</span></div><div class="line" id="231332"><span class="nick" style="color:#80b1d3"><a href="#231332" label="[23:13:32]">&lt;pder&gt;</a></span><span class="message">this was with running the configure script</span></div><div class="line" id="231349"><span class="nick" style="color:#2e2a4a"><a href="#231349" label="[23:13:49]">&lt;stikonas&gt;</a></span><span class="message">pder: maybe now try running autoconf?</span></div><div class="line" id="231407"><span class="nick" style="color:#2e2a4a"><a href="#231407" label="[23:14:07]">&lt;stikonas&gt;</a></span><span class="message">keep in mind that you need to run autoconf in a few subfolders too</span></div><div class="line" id="231415"><span class="nick" style="color:#2e2a4a"><a href="#231415" label="[23:14:15]">&lt;stikonas&gt;</a></span><span class="message">hmm, actually many first try touching .y files</span></div><div class="line" id="231418"><span class="nick" style="color:#2e2a4a"><a href="#231418" label="[23:14:18]">&lt;stikonas&gt;</a></span><span class="message">to see if our bison works</span></div><div class="line" id="231455"><span class="nick" style="color:#2e2a4a"><a href="#231455" label="[23:14:55]">&lt;stikonas&gt;</a></span><span class="message">that should be simpler...</span></div><div class="line" id="231507"><span class="nick" style="color:#2e2a4a"><a href="#231507" label="[23:15:07]">&lt;stikonas&gt;</a></span><span class="message">and I think I might be close enough to perl 5.6.2</span></div><div class="line" id="231524"><span class="nick" style="color:#2e2a4a"><a href="#231524" label="[23:15:24]">&lt;stikonas&gt;</a></span><span class="message">I think removing one line from bison-generated perly.c file helps</span></div><div class="line" id="231528"><span class="nick" style="color:#2e2a4a"><a href="#231528" label="[23:15:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: do you think that's alright?</span></div><div class="line" id="231551"><span class="nick" style="color:#2e2a4a"><a href="#231551" label="[23:15:51]">&lt;stikonas&gt;</a></span><span class="message">well, it complained about redefinition</span></div><div class="line" id="231554"><span class="nick" style="color:#2e2a4a"><a href="#231554" label="[23:15:54]">&lt;stikonas&gt;</a></span><span class="message">so I removed it</span></div><div class="line" id="231607"><span class="nick" style="color:#80b1d3"><a href="#231607" label="[23:16:07]">&lt;pder&gt;</a></span><span class="message">I tried touching all the *.y files and reran make</span></div><div class="line" id="231619"><span class="nick" style="color:#80b1d3"><a href="#231619" label="[23:16:19]">&lt;pder&gt;</a></span><span class="message">it built but had some warnings in the ld directory</span></div><div class="line" id="231838"><span class="nick" style="color:#2e2a4a"><a href="#231838" label="[23:18:38]">&lt;stikonas&gt;</a></span><span class="message">oh, actually removing that line from .y file works</span></div><div class="line" id="231843"><span class="nick" style="color:#2e2a4a"><a href="#231843" label="[23:18:43]">&lt;stikonas&gt;</a></span><span class="message">so I think I have perl 5.6.2</span></div><div class="line" id="231850"><span class="nick" style="color:#80b1d3"><a href="#231850" label="[23:18:50]">&lt;pder&gt;</a></span><span class="message">very nice!</span></div><div class="line" id="231850"><span class="nick" style="color:#2e2a4a"><a href="#231850" label="[23:18:50]">&lt;stikonas&gt;</a></span><span class="message">and path to perl 5.18 should now be clear</span></div><div class="line" id="232122"><span class="nick" style="color:#2e2a4a"><a href="#232122" label="[23:21:22]">&lt;stikonas&gt;</a></span><span class="message">hmm, if perl 5.6.2 is functional though...</span></div><div class="line" id="232125"><span class="nick" style="color:#2e2a4a"><a href="#232125" label="[23:21:25]">&lt;stikonas&gt;</a></span><span class="message">need to test that first</span></div><div class="line" id="232249"><span class="nick" style="color:#2e2a4a"><a href="#232249" label="[23:22:49]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure about that...</span></div><div class="line" id="232314"><span class="nick" style="color:#2e2a4a"><a href="#232314" label="[23:23:14]">&lt;stikonas&gt;</a></span><span class="message">it can't rebuild itself... Can rebuild one file in 5.18 but crashes on the other file</span></div><div class="line" id="233136"><span class="nick" style="color:#2e2a4a"><a href="#233136" label="[23:31:36]">&lt;stikonas&gt;</a></span><span class="message">pder: so maybe now you can try autoconf?</span></div><div class="line" id="233153"><span class="nick" style="color:#2e2a4a"><a href="#233153" label="[23:31:53]">&lt;stikonas&gt;</a></span><span class="message">I would suggest trying one by one (there are maybe 10 configure scripts or so)</span></div><div class="line" id="233207"><span class="nick" style="color:#80b1d3"><a href="#233207" label="[23:32:07]">&lt;pder&gt;</a></span><span class="message">Yes, I will pull in your changes and try it</span></div><div class="line" id="233225"><span class="nick" style="color:#2e2a4a"><a href="#233225" label="[23:32:25]">&lt;stikonas&gt;</a></span><span class="message">I'm not sure, but some configure scripts might require different autoconfs...</span></div><div class="line" id="233234"><span class="nick" style="color:#2e2a4a"><a href="#233234" label="[23:32:34]">&lt;stikonas&gt;</a></span><span class="message">might need e.g. older (2.13) or so...</span></div><div class="line" id="233310"><span class="nick" style="color:#2e2a4a"><a href="#233310" label="[23:33:10]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll try to sort perl 5.6 first, it should be close...</span></div><div class="line" id="233320"><span class="nick" style="color:#2e2a4a"><a href="#233320" label="[23:33:20]">&lt;stikonas&gt;</a></span><span class="message">(hopefully)</span></div><div class="line" id="233449"><span class="nick" style="color:#80b1d3"><a href="#233449" label="[23:34:49]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="http://archive.linuxfromscratch.org/lfs-museum/5.0/LFS-BOOK-5.0-HTML/">http://archive.linuxfromscratch.org/lfs-museum/5.0/LFS-BOOK-5.0-HTML/</a> </span></div><div class="line" id="233557"><span class="nick" style="color:#80b1d3"><a href="#233557" label="[23:35:57]">&lt;pder&gt;</a></span><span class="message">So in this old version of LFS they used binutils-2.14, autoconf 2.57, automake 1.7.6, and perl 5.8.0</span></div><div class="line" id="234131"><span class="nick" style="color:#2e2a4a"><a href="#234131" label="[23:41:31]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="234135"><span class="nick" style="color:#2e2a4a"><a href="#234135" label="[23:41:35]">&lt;stikonas&gt;</a></span><span class="message">that's good to know</span></div><div class="line" id="234147"><span class="nick" style="color:#2e2a4a"><a href="#234147" label="[23:41:47]">&lt;stikonas&gt;</a></span><span class="message">I saw some page telling which autoconf/automake is used for gcc</span></div><div class="line" id="234214"><span class="nick" style="color:#2e2a4a"><a href="#234214" label="[23:42:14]">&lt;stikonas&gt;</a></span><span class="message">but good to know this for binutils too</span></div><div class="line" id="234249"><span class="nick" style="color:#2e2a4a"><a href="#234249" label="[23:42:49]">&lt;stikonas&gt;</a></span><span class="message">pder: for future reference: <a rel="nofollow" href="https://gcc.gnu.org/wiki/Regenerating_GCC_Configuration">https://gcc.gnu.org/wiki/Regenerating_GCC_Configuration</a> </span></div><div class="line" id="234320"><span class="nick" style="color:#2e2a4a"><a href="#234320" label="[23:43:20]">&lt;stikonas&gt;</a></span><span class="message">pder: anywya, that LFS page tells me I need to get newer perl first...</span></div><div class="line" id="234337"><span class="nick" style="color:#2e2a4a"><a href="#234337" label="[23:43:37]">&lt;stikonas&gt;</a></span><span class="message">these versions of autoconf and automake won't run on 5.5</span></div><div class="line" id="234513"><span class="nick" style="color:#2e2a4a"><a href="#234513" label="[23:45:13]">&lt;stikonas&gt;</a></span><span class="message">pder: oh, but I don't think that LFS page uses autoconf 2.57 and automake to actually rebuild binutils' configure file</span></div><div class="line" id="234524"><span class="nick" style="color:#2e2a4a"><a href="#234524" label="[23:45:24]">&lt;stikonas&gt;</a></span><span class="message">so we might have to experiment a bit to find what works</span></div><br /></div></body></html>