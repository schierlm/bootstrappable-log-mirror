<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-03-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003840"><span class="nick" style="color:#8dd3c7"><a href="#003840" label="[00:38:40]">&lt;stikonas&gt;</a></span><span class="message">well, I guess it would get easier as more and more tutorials and readme's are written</span></div><div class="line" id="010043"><span class="nick" style="color:#2e2a4a"><a href="#010043" label="[01:00:43]">&lt;fossy&gt;</a></span><span class="message">tinycc is rather a pile of poo</span></div><div class="line" id="010144"><span class="nick" style="color:#6b8072"><a href="#010144" label="[01:01:44]">&lt;xentrac&gt;</a></span><span class="message">ew</span></div><div class="line" id="010159"><span class="nick" style="color:#6b8072"><a href="#010159" label="[01:01:59]">&lt;xentrac&gt;</a></span><span class="message">then you are the most heroic plumber since Mario</span></div><div class="line" id="010319"><span class="nick" style="color:#2e2a4a"><a href="#010319" label="[01:03:19]">&lt;fossy&gt;</a></span><span class="message">lmao</span></div><div class="line" id="020451"><span class="nick" style="color:#2e2a4a"><a href="#020451" label="[02:04:51]">&lt;fossy&gt;</a></span><span class="message">woo, 45 minutes to run make configure with gash :p</span></div><div class="line" id="020502"><span class="nick" style="color:#2e2a4a"><a href="#020502" label="[02:05:02]">&lt;fossy&gt;</a></span><span class="message">I mean</span></div><div class="line" id="020509"><span class="nick" style="color:#2e2a4a"><a href="#020509" label="[02:05:09]">&lt;fossy&gt;</a></span><span class="message">make's configure</span></div><div class="line" id="021449"><span class="nick" style="color:#6b8072"><a href="#021449" label="[02:14:49]">&lt;xentrac&gt;</a></span><span class="message">haha</span></div><div class="line" id="021453"><span class="nick" style="color:#6b8072"><a href="#021453" label="[02:14:53]">&lt;xentrac&gt;</a></span><span class="message">but it runs!</span></div><div class="line" id="042558"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="042850"><span class="nick">***</span><span class="message notice">nonlinear3 is now known as nonlinear</span></div><div class="line" id="093955"><span class="nick" style="color:#2e2a4a"><a href="#093955" label="[09:39:55]">&lt;fossy&gt;</a></span><span class="message">1.4 hrs for bash configure lessgo</span></div><div class="line" id="134646"><span class="nick">***</span><span class="message notice">coldtom0 is now known as coldtom</span></div><div class="line" id="152446"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado</span></div><div class="line" id="193550"><span class="nick" style="color:#80b1d3"><a href="#193550" label="[19:35:50]">&lt;OriansJ&gt;</a></span><span class="message">well performance of scheme code is always a hard problem. Typed languages have a huge bag of dirty tricks to make code run fast.</span></div><div class="line" id="193707"><span class="nick" style="color:#80b1d3"><a href="#193707" label="[19:37:07]">&lt;OriansJ&gt;</a></span><span class="message">janneke: how much effort was spent getting MesCC's performance more reasonable?</span></div><div class="line" id="193846"><span class="nick" style="color:#6d2462"><a href="#193846" label="[19:38:46]">&lt;janneke&gt;</a></span><span class="message">OriansJ: the scheme code has not been optimized at all</span></div><div class="line" id="193915"><span class="nick" style="color:#80b1d3"><a href="#193915" label="[19:39:15]">&lt;OriansJ&gt;</a></span><span class="message">so performance optimizations in the scheme implementation itself?</span></div><div class="line" id="193933"><span class="nick" style="color:#80b1d3"><a href="#193933" label="[19:39:33]">&lt;OriansJ&gt;</a></span><span class="message">or just the generated M1 from the C code?</span></div><div class="line" id="194134"><span class="nick" style="color:#6d2462"><a href="#194134" label="[19:41:34]">&lt;janneke&gt;</a></span><span class="message">the generated M1 code is very straightforward, no performance considerations at all</span></div><div class="line" id="194234"><span class="nick" style="color:#6d2462"><a href="#194234" label="[19:42:34]">&lt;janneke&gt;</a></span><span class="message">if anything, the generated M1 code is optimized somewhat for using a small alphabet, using only three registers (except for division/multiplication maybe)</span></div><div class="line" id="194348"><span class="nick" style="color:#6b8072"><a href="#194348" label="[19:43:48]">&lt;xentrac&gt;</a></span><span class="message">I was surprised at how good Ur-Scheme's performance was</span></div><div class="line" id="194410"><span class="nick" style="color:#6d2462"><a href="#194410" label="[19:44:10]">&lt;janneke&gt;</a></span><span class="message">i spent *a lot* of work on mes.c's performance; but that was mainly experimenting</span></div><div class="line" id="194419"><span class="nick" style="color:#6b8072"><a href="#194419" label="[19:44:19]">&lt;xentrac&gt;</a></span><span class="message">despite doing all its type checks and even operand stack dynamically, it was only like 5Ã— worse than GCC</span></div><div class="line" id="194455"><span class="nick" style="color:#6d2462"><a href="#194455" label="[19:44:55]">&lt;janneke&gt;</a></span><span class="message">in the end, only two things really matter: a fast variable lookup (alist) and proper macro expansion (not re-expanding everything all the time)</span></div><div class="line" id="194540"><span class="nick" style="color:#6b8072"><a href="#194540" label="[19:45:40]">&lt;xentrac&gt;</a></span><span class="message">so I don't know why Schemes are generally so slow.  I speculate that it's probably more levels of indirection</span></div><div class="line" id="211937"><span class="nick" style="color:#2e2a4a"><a href="#211937" label="[21:19:37]">&lt;fossy&gt;</a></span><span class="message">janneke: do you have a statically linked guile for guix yet?</span></div><div class="line" id="212023"><span class="nick" style="color:#2e2a4a"><a href="#212023" label="[21:20:23]">&lt;fossy&gt;</a></span><span class="message">wow, I found it just after I asked :p</span></div><div class="line" id="212025"><span class="nick" style="color:#2e2a4a"><a href="#212025" label="[21:20:25]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="http://lilypond.org/~janneke/guix/20181124/">http://lilypond.org/~janneke/guix/20181124/</a> </span></div><div class="line" id="213149"><span class="nick" style="color:#6d2462"><a href="#213149" label="[21:31:49]">&lt;janneke&gt;</a></span><span class="message">fossy: the guix bootstrap has been using a static guile forever ;-)</span></div><div class="line" id="213331"><span class="nick" style="color:#6d2462"><a href="#213331" label="[21:33:31]">&lt;janneke&gt;</a></span><span class="message"> <a rel="nofollow" href="https://ftp.gnu.org/pub/gnu/guix/bootstrap/i686-linux/20190815/">https://ftp.gnu.org/pub/gnu/guix/bootstrap/i686-linux/20190815/</a>  but also</span></div><div class="line" id="213332"><span class="nick" style="color:#6d2462"><a href="#213332" label="[21:33:32]">&lt;janneke&gt;</a></span><span class="message"> <a rel="nofollow" href="https://alpha.gnu.org/pub/gnu/guix/bootstrap/">https://alpha.gnu.org/pub/gnu/guix/bootstrap/</a> </span></div><div class="line" id="233208"><span class="nick" style="color:#2e2a4a"><a href="#233208" label="[23:32:08]">&lt;fossy&gt;</a></span><span class="message">janneke: well kudos to you</span></div><div class="line" id="233221"><span class="nick" style="color:#2e2a4a"><a href="#233221" label="[23:32:21]">&lt;fossy&gt;</a></span><span class="message">I am having a lot of trouble building a static guile</span></div><div class="line" id="233226"><span class="nick" style="color:#2e2a4a"><a href="#233226" label="[23:32:26]">&lt;fossy&gt;</a></span><span class="message">So fudge that</span></div><div class="line" id="233229"><span class="nick" style="color:#2e2a4a"><a href="#233229" label="[23:32:29]">&lt;fossy&gt;</a></span><span class="message">I will use yours</span></div><div class="line" id="234515"><span class="nick" style="color:#6d2462"><a href="#234515" label="[23:45:15]">&lt;janneke&gt;</a></span><span class="message">fossy: the recipe is here: <a rel="nofollow" href="http://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/make-bootstrap.scm#n698">http://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/make-bootstrap.scm#n698</a> </span></div><div class="line" id="234540"><span class="nick" style="color:#6d2462"><a href="#234540" label="[23:45:40]">&lt;janneke&gt;</a></span><span class="message">but yeah, some cheating is fine :)</span></div><div class="line" id="234618"><span class="nick" style="color:#2e2a4a"><a href="#234618" label="[23:46:18]">&lt;fossy&gt;</a></span><span class="message">janneke: what was the glibc problem you were having?</span></div><div class="line" id="234625"><span class="nick" style="color:#2e2a4a"><a href="#234625" label="[23:46:25]">&lt;fossy&gt;</a></span><span class="message">Was is Python something?</span></div><div class="line" id="235023"><span class="nick" style="color:#6d2462"><a href="#235023" label="[23:50:23]">&lt;janneke&gt;</a></span><span class="message">fossy: glibc-2.31 (possibly earlier) needs python during build</span></div><br /></div></body></html>