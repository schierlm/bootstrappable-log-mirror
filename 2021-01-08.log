<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-08.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002829"><span class="nick" style="color:#8dd3c7"><a href="#002829" label="[00:28:29]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I love your idea for standardizing the clean up.</span></div><div class="line" id="002948"><span class="nick" style="color:#8dd3c7"><a href="#002948" label="[00:29:48]">&lt;OriansJ&gt;</a></span><span class="message">I wonder if we standardize a few other things we could have generic tests that need only an architecture parameter to generate the correct results instead of having a seperate test for each architecture.</span></div><div class="line" id="003124"><span class="nick" style="color:#2e2a4a"><a href="#003124" label="[00:31:24]">&lt;fossy&gt;</a></span><span class="message">from #reproducible-builds:</span></div><div class="line" id="003127"><span class="nick" style="color:#2e2a4a"><a href="#003127" label="[00:31:27]">&lt;fossy&gt;</a></span><span class="message">15:46 &lt;pabs&gt; LWN predictions for 2021 mentions software supply chain attacks <a rel="nofollow" href="https://lwn.net/SubscriberLink/840632/fb4e404dbe82c65e/">https://lwn.net/SubscriberLink/840632/fb4e404dbe82c65e/</a> </span></div><div class="line" id="003137"><span class="nick" style="color:#8dd3c7"><a href="#003137" label="[00:31:37]">&lt;OriansJ&gt;</a></span><span class="message">pder: well there is one part of the C preprocessor that I absolutely don't want in M2-Planet #include (because I can't do that on bare metal)</span></div><div class="line" id="003310"><span class="nick" style="color:#8dd3c7"><a href="#003310" label="[00:33:10]">&lt;OriansJ&gt;</a></span><span class="message">amirouche: technically you probably are in the first 20 people on the planet to read it</span></div><div class="line" id="003343"><span class="nick" style="color:#8dd3c7"><a href="#003343" label="[00:33:43]">&lt;OriansJ&gt;</a></span><span class="message">hell there are 10,000 people learning what rick rolling is for the first time in their lives today.</span></div><div class="line" id="003422"><span class="nick" style="color:#6b8072"><a href="#003422" label="[00:34:22]">&lt;xentrac&gt;</a></span><span class="message">never gonna link you up, never gonna desugar you down; never gonna parse around and compile ou</span></div><div class="line" id="003508"><span class="nick" style="color:#8dd3c7"><a href="#003508" label="[00:35:08]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: :D</span></div><div class="line" id="004223"><span class="nick" style="color:#8dd3c7"><a href="#004223" label="[00:42:23]">&lt;OriansJ&gt;</a></span><span class="message">deesix: that is some impressive work</span></div><div class="line" id="004228"><span class="nick" style="color:#8dd3c7"><a href="#004228" label="[00:42:28]">&lt;OriansJ&gt;</a></span><span class="message">great job</span></div><div class="line" id="005113"><span class="nick" style="color:#80b1d3"><a href="#005113" label="[00:51:13]">&lt;deesix&gt;</a></span><span class="message">Thanks.</span></div><div class="line" id="005141"><span class="nick" style="color:#80b1d3"><a href="#005141" label="[00:51:41]">&lt;deesix&gt;</a></span><span class="message">OriansJ, yes... that's my next goal but I saw some details that need some thinking.</span></div><div class="line" id="005223"><span class="nick" style="color:#8dd3c7"><a href="#005223" label="[00:52:23]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I trust that you'll bring a brilliant solution as always ^_^</span></div><div class="line" id="005433"><span class="nick" style="color:#2e2a4a"><a href="#005433" label="[00:54:33]">&lt;fossy&gt;</a></span><span class="message">is anyone doing anything at fosdem this year?</span></div><div class="line" id="005702"><span class="nick" style="color:#8dd3c7"><a href="#005702" label="[00:57:02]">&lt;OriansJ&gt;</a></span><span class="message">I proposed a stage0 talk but it got rejected -_-</span></div><div class="line" id="005750"><span class="nick" style="color:#2e2a4a"><a href="#005750" label="[00:57:50]">&lt;fossy&gt;</a></span><span class="message">:|</span></div><div class="line" id="005759"><span class="nick" style="color:#8dd3c7"><a href="#005759" label="[00:57:59]">&lt;OriansJ&gt;</a></span><span class="message">janneke: might have had better luck than I</span></div><div class="line" id="005801"><span class="nick" style="color:#6b8072"><a href="#005801" label="[00:58:01]">&lt;xentrac&gt;</a></span><span class="message">oh, that's too bad</span></div><div class="line" id="005935"><span class="nick" style="color:#8dd3c7"><a href="#005935" label="[00:59:35]">&lt;OriansJ&gt;</a></span><span class="message">I guess I probably should come up with a better proposal than: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/librePlanet-2018/proposal.org">https://github.com/oriansj/talk-notes/blob/master/librePlanet-2018/proposal.org</a> </span></div><div class="line" id="010147"><span class="nick" style="color:#8dd3c7"><a href="#010147" label="[01:01:47]">&lt;OriansJ&gt;</a></span><span class="message">because it clearly isn't working</span></div><div class="line" id="010422"><span class="nick" style="color:#8dd3c7"><a href="#010422" label="[01:04:22]">&lt;OriansJ&gt;</a></span><span class="message">(so glad I don't have to work in sales)</span></div><div class="line" id="010823"><span class="nick" style="color:#6d2462"><a href="#010823" label="[01:08:23]">&lt;plasma41&gt;</a></span><span class="message">oriansj, janneke: Could I get some more experienced eyes on this. In the package definition for the Free Pascal compiler (packagename fpc) it look to me like it's being compiled with a prebuilt fpc downloaded from upstream, thus breaking the chain to the Guix bootstrap binaries. Can y'all confirm?</span></div><div class="line" id="011059"><span class="nick" style="color:#6d2462"><a href="#011059" label="[01:10:59]">&lt;plasma41&gt;</a></span><span class="message">The Free Pascal compiler is itself written in (Object?) Pascal. The only other free software Pascal compiler I am aware of is GNU Pascal, written in C. GNU Pascal appears to have not been maintained since 2005.</span></div><div class="line" id="011117"><span class="nick" style="color:#8dd3c7"><a href="#011117" label="[01:11:17]">&lt;OriansJ&gt;</a></span><span class="message">well it is downloading mirror://sourceforge/freepascal/Linux/3.0.4/fpc-3.0.4.i386-linux.tar</span></div><div class="line" id="011132"><span class="nick" style="color:#8dd3c7"><a href="#011132" label="[01:11:32]">&lt;OriansJ&gt;</a></span><span class="message">per gnu/packages/pascal.scm</span></div><div class="line" id="011506"><span class="nick" style="color:#6d2462"><a href="#011506" label="[01:15:06]">&lt;plasma41&gt;</a></span><span class="message">oriansj: AFAICT, this looks to be the same kind of bootstrapping issue as the one affecting the Glasgow Haskell Compiler.</span></div><div class="line" id="011610"><span class="nick" style="color:#234e69"><a href="#011610" label="[01:16:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think I've seen it before that free pascal compiler is not bootstrappable</span></div><div class="line" id="011649"><span class="nick" style="color:#8dd3c7"><a href="#011649" label="[01:16:49]">&lt;OriansJ&gt;</a></span><span class="message">yep its a big binary blob</span></div><div class="line" id="011707"><span class="nick" style="color:#6d2462"><a href="#011707" label="[01:17:07]">&lt;plasma41&gt;</a></span><span class="message">That's what I was afraid of</span></div><div class="line" id="011708"><span class="nick" style="color:#234e69"><a href="#011708" label="[01:17:08]">&lt;stikonas&gt;</a></span><span class="message">is it still widely used?</span></div><div class="line" id="011717"><span class="nick" style="color:#234e69"><a href="#011717" label="[01:17:17]">&lt;stikonas&gt;</a></span><span class="message">(we did have to learn it at school...)</span></div><div class="line" id="011722"><span class="nick" style="color:#6b8072"><a href="#011722" label="[01:17:22]">&lt;xentrac&gt;</a></span><span class="message">no, because it compiles Pascal</span></div><div class="line" id="011754"><span class="nick" style="color:#6b8072"><a href="#011754" label="[01:17:54]">&lt;xentrac&gt;</a></span><span class="message">I wonder how hard it would be to get fpc to compile with GNU Pascal</span></div><div class="line" id="011855"><span class="nick" style="color:#6d2462"><a href="#011855" label="[01:18:55]">&lt;plasma41&gt;</a></span><span class="message">stikonas: Anything built with the Lazarus IDE uses it. I'm pretty sure ddrescueview falls into that category.</span></div><div class="line" id="011901"><span class="nick" style="color:#8dd3c7"><a href="#011901" label="[01:19:01]">&lt;OriansJ&gt;</a></span><span class="message">probably not that hard compared to the GHC problem</span></div><div class="line" id="012107"><span class="nick" style="color:#6d2462"><a href="#012107" label="[01:21:07]">&lt;plasma41&gt;</a></span><span class="message">I stumbled upon this because I wanted to compile the PortableApps.com Platform from source. Prior to yesterday I didn't even know that platform was written in Pascal.</span></div><div class="line" id="012215"><span class="nick" style="color:#6b8072"><a href="#012215" label="[01:22:15]">&lt;xentrac&gt;</a></span><span class="message">hmm, I thought that at some point Borland had freed some version of their Pascal compiler, but I think I was wrong about that.  I think I was misremembering Kylix</span></div><div class="line" id="012217"><span class="nick" style="color:#2e2a4a"><a href="#012217" label="[01:22:17]">&lt;fossy&gt;</a></span><span class="message">&gt; Originally, the compiler [Free Pascal] was a 16-bit DOS executable compiled by Turbo Pascal. After two years, the compiler was able to compile itself and became a 32-bit executable.</span></div><div class="line" id="012222"><span class="nick" style="color:#2e2a4a"><a href="#012222" label="[01:22:22]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://en.wikipedia.org/wiki/Free_Pascal#Early_years">https://en.wikipedia.org/wiki/Free_Pascal#Early_years</a> </span></div><div class="line" id="012224"><span class="nick" style="color:#2e2a4a"><a href="#012224" label="[01:22:24]">&lt;fossy&gt;</a></span><span class="message">HM.</span></div><div class="line" id="012232"><span class="nick" style="color:#2e2a4a"><a href="#012232" label="[01:22:32]">&lt;fossy&gt;</a></span><span class="message">no going back in time for this one!</span></div><div class="line" id="012241"><span class="nick" style="color:#8dd3c7"><a href="#012241" label="[01:22:41]">&lt;OriansJ&gt;</a></span><span class="message">probably only needs someone to create guix packages for all previous versions until it is able to be built by GNU Pascal again.</span></div><div class="line" id="012253"><span class="nick" style="color:#2e2a4a"><a href="#012253" label="[01:22:53]">&lt;fossy&gt;</a></span><span class="message">proabbly</span></div><div class="line" id="012309"><span class="nick" style="color:#6d2462"><a href="#012309" label="[01:23:09]">&lt;plasma41&gt;</a></span><span class="message">I've never written a line of Pascal in my life, I'm kinda stumbling in the dark here.</span></div><div class="line" id="012335"><span class="nick" style="color:#8dd3c7"><a href="#012335" label="[01:23:35]">&lt;OriansJ&gt;</a></span><span class="message">plasma41: well good news is you only need to run a build tool</span></div><div class="line" id="012408"><span class="nick" style="color:#8dd3c7"><a href="#012408" label="[01:24:08]">&lt;OriansJ&gt;</a></span><span class="message">eg download a source tar and using GNU Pascal see if it builds. If not go older</span></div><div class="line" id="012411"><span class="nick" style="color:#2e2a4a"><a href="#012411" label="[01:24:11]">&lt;fossy&gt;</a></span><span class="message">i'll give this a go</span></div><div class="line" id="012444"><span class="nick" style="color:#2e2a4a"><a href="#012444" label="[01:24:44]">&lt;fossy&gt;</a></span><span class="message">aw shite</span></div><div class="line" id="012447"><span class="nick" style="color:#8dd3c7"><a href="#012447" label="[01:24:47]">&lt;OriansJ&gt;</a></span><span class="message">then find the latest version that can compile; repeat until done bootstrapping pascal</span></div><div class="line" id="012447"><span class="nick" style="color:#2e2a4a"><a href="#012447" label="[01:24:47]">&lt;fossy&gt;</a></span><span class="message">it's a gcc backend</span></div><div class="line" id="012450"><span class="nick" style="color:#2e2a4a"><a href="#012450" label="[01:24:50]">&lt;fossy&gt;</a></span><span class="message">this is less than simple</span></div><div class="line" id="012508"><span class="nick" style="color:#6b8072"><a href="#012508" label="[01:25:08]">&lt;xentrac&gt;</a></span><span class="message">GNU Pascal may not have ever supported all the Pascal extensions used by any version of FPC</span></div><div class="line" id="012605"><span class="nick" style="color:#8dd3c7"><a href="#012605" label="[01:26:05]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: then it becomes just another one  of our problems to solve</span></div><div class="line" id="012648"><span class="nick" style="color:#6b8072"><a href="#012648" label="[01:26:48]">&lt;xentrac&gt;</a></span><span class="message">unlike C, standard Pascal was never powerful enough to use for practical programs, so every practical program written in Pascal was either written in a particular vendor's dialect of Pascal, or written in a higher-level language compiled into Pascal (things tha took this approach were Software Tools in Pascal, and TeX)</span></div><div class="line" id="012653"><span class="nick" style="color:#8dd3c7"><a href="#012653" label="[01:26:53]">&lt;OriansJ&gt;</a></span><span class="message">then we throw a developer at it until we beat it into a proper bootstrap</span></div><div class="line" id="012715"><span class="nick" style="color:#6b8072"><a href="#012715" label="[01:27:15]">&lt;xentrac&gt;</a></span><span class="message">but it wouldn't be surprising if some version of GNU Pascal *was* able to build some version of FPC</span></div><div class="line" id="012743"><span class="nick" style="color:#8dd3c7"><a href="#012743" label="[01:27:43]">&lt;OriansJ&gt;</a></span><span class="message">Only so many combinations to check</span></div><div class="line" id="012743"><span class="nick" style="color:#6b8072"><a href="#012743" label="[01:27:43]">&lt;xentrac&gt;</a></span><span class="message">plasma41 or someone (me?) would have to try it, along the lines you suggest</span></div><div class="line" id="012829"><span class="nick" style="color:#2e2a4a"><a href="#012829" label="[01:28:29]">&lt;fossy&gt;</a></span><span class="message">well step 1 is compiling gcc 3.4.3</span></div><div class="line" id="012835"><span class="nick" style="color:#8dd3c7"><a href="#012835" label="[01:28:35]">&lt;OriansJ&gt;</a></span><span class="message">I'm leaving it to anyone who wants to do the work</span></div><div class="line" id="012838"><span class="nick" style="color:#2e2a4a"><a href="#012838" label="[01:28:38]">&lt;fossy&gt;</a></span><span class="message">and going backwards is less-than-trivial</span></div><div class="line" id="012853"><span class="nick" style="color:#2e2a4a"><a href="#012853" label="[01:28:53]">&lt;fossy&gt;</a></span><span class="message">sdo we can go forwards from gcc 2 :)</span></div><div class="line" id="013040"><span class="nick" style="color:#6d2462"><a href="#013040" label="[01:30:40]">&lt;plasma41&gt;</a></span><span class="message">The website for GNU Pascal hasn't been touched in so long, it still makes a point about not using GIF due to software patents. :P <a rel="nofollow" href="https://www.gnu-pascal.de/gpc/h-resources.html">https://www.gnu-pascal.de/gpc/h-resources.html</a> </span></div><div class="line" id="013206"><span class="nick" style="color:#8dd3c7"><a href="#013206" label="[01:32:06]">&lt;OriansJ&gt;</a></span><span class="message">plasma41: maybe hunt down one of the previous Devs and see if they are willing to help us solve the bootstrap problem (or the FreePascal devs)</span></div><div class="line" id="013330"><span class="nick" style="color:#8dd3c7"><a href="#013330" label="[01:33:30]">&lt;OriansJ&gt;</a></span><span class="message">you can even give them the guix promise, we will keep it working forever</span></div><div class="line" id="013332"><span class="nick" style="color:#234e69"><a href="#013332" label="[01:33:32]">&lt;stikonas&gt;</a></span><span class="message">fossy: you don't have gcc 2 yet :D</span></div><div class="line" id="013348"><span class="nick" style="color:#6d2462"><a href="#013348" label="[01:33:48]">&lt;plasma41&gt;</a></span><span class="message">I'll see what I can do.</span></div><div class="line" id="013357"><span class="nick" style="color:#8dd3c7"><a href="#013357" label="[01:33:57]">&lt;OriansJ&gt;</a></span><span class="message">thank you plasma41</span></div><div class="line" id="013414"><span class="nick" style="color:#6b8072"><a href="#013414" label="[01:34:14]">&lt;xentrac&gt;</a></span><span class="message">&lt;3</span></div><div class="line" id="013424"><span class="nick" style="color:#2e2a4a"><a href="#013424" label="[01:34:24]">&lt;fossy&gt;</a></span><span class="message">stikonas: when we do i mean :)</span></div><div class="line" id="013430"><span class="nick" style="color:#2e2a4a"><a href="#013430" label="[01:34:30]">&lt;fossy&gt;</a></span><span class="message">well guix does at least</span></div><div class="line" id="013432"><span class="nick" style="color:#6c3d55"><a href="#013432" label="[01:34:32]">&lt;vagrantc&gt;</a></span><span class="message">hah! GIF patents!</span></div><div class="line" id="013658"><span class="nick" style="color:#234e69"><a href="#013658" label="[01:36:58]">&lt;stikonas&gt;</a></span><span class="message">well, you still shouldn't use GIF but due to different reasons</span></div><div class="line" id="013818"><span class="nick" style="color:#2e2a4a"><a href="#013818" label="[01:38:18]">&lt;fossy&gt;</a></span><span class="message">whys that</span></div><div class="line" id="013914"><span class="nick" style="color:#6b8072"><a href="#013914" label="[01:39:14]">&lt;xentrac&gt;</a></span><span class="message">GIF is a reasonable thing to use now, and supports animation, but PNG compresses better and supports truecolor</span></div><div class="line" id="013921"><span class="nick" style="color:#6c3d55"><a href="#013921" label="[01:39:21]">&lt;vagrantc&gt;</a></span><span class="message">if nothing else, the patent issue lead to the creation of better image formats :)</span></div><div class="line" id="013936"><span class="nick" style="color:#234e69"><a href="#013936" label="[01:39:36]">&lt;stikonas&gt;</a></span><span class="message">well, only for animation, for everything else PNG is better</span></div><div class="line" id="013937"><span class="nick" style="color:#6b8072"><a href="#013937" label="[01:39:37]">&lt;xentrac&gt;</a></span><span class="message">and MPEG-4 or H.264 compresses better, supports sound, and also supports animation</span></div><div class="line" id="014003"><span class="nick" style="color:#234e69"><a href="#014003" label="[01:40:03]">&lt;stikonas&gt;</a></span><span class="message">but I guess even for animations something based on webm, etc would have better quality</span></div><div class="line" id="014022"><span class="nick" style="color:#6b8072"><a href="#014022" label="[01:40:22]">&lt;xentrac&gt;</a></span><span class="message">yeah, though webm isn't as widely supported and is pretty CPU-intensive to decode</span></div><div class="line" id="014049"><span class="nick" style="color:#6b8072"><a href="#014049" label="[01:40:49]">&lt;xentrac&gt;</a></span><span class="message">Fractint saves its fractal parameters in a GIF89a block, which allows you to load the image into Fractint and zoom out, or in, or tweak the parameters</span></div><div class="line" id="014104"><span class="nick" style="color:#6b8072"><a href="#014104" label="[01:41:04]">&lt;xentrac&gt;</a></span><span class="message">or recompute it at a higher resolution</span></div><div class="line" id="014127"><span class="nick" style="color:#6b8072"><a href="#014127" label="[01:41:27]">&lt;xentrac&gt;</a></span><span class="message">you could do that with PNG too but as far as I know nobody has added PNG support to Fractint</span></div><div class="line" id="014138"><span class="nick" style="color:#6b8072"><a href="#014138" label="[01:41:38]">&lt;xentrac&gt;</a></span><span class="message">but this is pretty offtopic</span></div><div class="line" id="015334"><span class="nick" style="color:#6d2462"><a href="#015334" label="[01:53:34]">&lt;plasma41&gt;</a></span><span class="message">The last two Debian packages of gpc are <a rel="nofollow" href="https://snapshot.debian.org/package/gcc-defaults/1.97/#gpc_5:3a:2.1-4.1.2-47">https://snapshot.debian.org/package/gcc-defaults/1.97/#gpc_5:3a:2.1-4.1.2-47</a>  and <a rel="nofollow" href="https://snapshot.debian.org/package/gcc-defaults/1.97exp1/#gpc_5:3a:2.1-4.1.2-47exp1">https://snapshot.debian.org/package/gcc-defaults/1.97exp1/#gpc_5:3a:2.1-4.1.2-47exp1</a> </span></div><div class="line" id="015809"><span class="nick" style="color:#6d2462"><a href="#015809" label="[01:58:09]">&lt;plasma41&gt;</a></span><span class="message">It looks like gpc has received at least some maintenance since 2005 on some of the BSDs <a rel="nofollow" href="https://repology.org/project/gpc/versions">https://repology.org/project/gpc/versions</a> </span></div><div class="line" id="030241"><span class="nick" style="color:#234e69"><a href="#030241" label="[03:02:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, which files failed to compiled for you when building tcc?</span></div><div class="line" id="030309"><span class="nick" style="color:#234e69"><a href="#030309" label="[03:03:09]">&lt;stikonas&gt;</a></span><span class="message">maybe be the same problem I was facing with mes? i.e. kaem's quote escaping doesn't work</span></div><div class="line" id="030356"><span class="nick" style="color:#2e2a4a"><a href="#030356" label="[03:03:56]">&lt;fossy&gt;</a></span><span class="message">stikonas: it's some weird preprocessing bug in mes</span></div><div class="line" id="030359"><span class="nick" style="color:#2e2a4a"><a href="#030359" label="[03:03:59]">&lt;fossy&gt;</a></span><span class="message">bye</span></div><div class="line" id="030414"><span class="nick" style="color:#2e2a4a"><a href="#030414" label="[03:04:14]">&lt;fossy&gt;</a></span><span class="message">or else yah a bug in kaem</span></div><div class="line" id="030424"><span class="nick" style="color:#2e2a4a"><a href="#030424" label="[03:04:24]">&lt;fossy&gt;</a></span><span class="message">but i dont think so because sometimes the -D's work but other times they don't</span></div><div class="line" id="030443"><span class="nick" style="color:#2e2a4a"><a href="#030443" label="[03:04:43]">&lt;fossy&gt;</a></span><span class="message">anyway i got everything compiled, now i just need to do the recompilations whihc are more straightforward</span></div><div class="line" id="030524"><span class="nick" style="color:#d9d9d9"><a href="#030524" label="[03:05:24]">&lt;stikonas[m]&gt;</a></span><span class="message">I briefly tried -D with strings often failed</span></div><div class="line" id="030539"><span class="nick" style="color:#d9d9d9"><a href="#030539" label="[03:05:39]">&lt;stikonas[m]&gt;</a></span><span class="message">E.g. in tccelf.c</span></div><div class="line" id="030625"><span class="nick" style="color:#d9d9d9"><a href="#030625" label="[03:06:25]">&lt;stikonas[m]&gt;</a></span><span class="message">That's why I suspect quote escaping problem...</span></div><div class="line" id="030652"><span class="nick" style="color:#d9d9d9"><a href="#030652" label="[03:06:52]">&lt;stikonas[m]&gt;</a></span><span class="message">But OK, if you got it compiled, it should be quick now...</span></div><div class="line" id="032151"><span class="nick" style="color:#6b8072"><a href="#032151" label="[03:21:51]">&lt;xentrac&gt;</a></span><span class="message">plasma41: oh, that's great news, it probably means it still works :)</span></div><div class="line" id="032836"><span class="nick" style="color:#8dd3c7"><a href="#032836" label="[03:28:36]">&lt;OriansJ&gt;</a></span><span class="message">stikonas[m]: well you can test what kaem does using echo can compare it against bash to spot any strings kaem escapes wrong</span></div><div class="line" id="034857"><span class="nick" style="color:#2e2a4a"><a href="#034857" label="[03:48:57]">&lt;fossy&gt;</a></span><span class="message">hmmm</span></div><div class="line" id="045123"><span class="nick" style="color:#2e2a4a"><a href="#045123" label="[04:51:23]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: !!! I think i know why kaem isn't handling escaping properly</span></div><div class="line" id="045137"><span class="nick" style="color:#2e2a4a"><a href="#045137" label="[04:51:37]">&lt;fossy&gt;</a></span><span class="message">\ wasn't originally made for escaping and as such isn't handled correctly</span></div><div class="line" id="045203"><span class="nick" style="color:#2e2a4a"><a href="#045203" label="[04:52:03]">&lt;fossy&gt;</a></span><span class="message">because we use it at the end of lines to concat newlines, it should only be eating the next character if it is a newline..</span></div><div class="line" id="045208"><span class="nick" style="color:#2e2a4a"><a href="#045208" label="[04:52:08]">&lt;fossy&gt;</a></span><span class="message">yeah, that'll fix that issue</span></div><div class="line" id="070415"><span class="nick" style="color:#bc80bd"><a href="#070415" label="[07:04:15]">&lt;siraben&gt;</a></span><span class="message">pder: re: C pre-processor in Haskell, that would be possible, I'm looking at the source code <a rel="nofollow" href="https://hackage.haskell.org/package/cpphs-1.20.9.1/docs/src/Language.Preprocessor.Cpphs.RunCpphs.html#runCpphsPass1">https://hackage.haskell.org/package/cpphs-1.20.9.1/docs/src/Language.Preprocessor.Cpphs.RunCpphs.html#runCpphsPass1</a> </span></div><div class="line" id="070504"><span class="nick" style="color:#bc80bd"><a href="#070504" label="[07:05:04]">&lt;siraben&gt;</a></span><span class="message">hm might be easier to write our own naïve one</span></div><div class="line" id="103512"><span class="nick" style="color:#3c5b35"><a href="#103512" label="[10:35:12]">&lt;rain1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/rain-1/s">https://github.com/rain-1/s</a>  you can probably use this for scripts, after kaem and mes before bash if you need a simple shell</span></div><div class="line" id="103540"><span class="nick" style="color:#3c5b35"><a href="#103540" label="[10:35:40]">&lt;rain1&gt;</a></span><span class="message">dont know if that's needed, it is not posix compatable and we do have scheme at that point</span></div><div class="line" id="140507"><span class="nick" style="color:#af8d2f"><a href="#140507" label="[14:05:07]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: really like your table shell vs. codelines. please use 'sloccount' for that and add <a rel="nofollow" href="https://git.kernel.org/pub/scm/utils/dash/dash.git">https://git.kernel.org/pub/scm/utils/dash/dash.git</a>  which has 13805 lines</span></div><div class="line" id="140549"><span class="nick" style="color:#3c5b35"><a href="#140549" label="[14:05:49]">&lt;rain1&gt;</a></span><span class="message">thanks! glad you liked it</span></div><div class="line" id="140613"><span class="nick" style="color:#af8d2f"><a href="#140613" label="[14:06:13]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: an 's' has according to sloccount ~1195 lines of code 8-)</span></div><div class="line" id="140739"><span class="nick" style="color:#af8d2f"><a href="#140739" label="[14:07:39]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: and 2639 lines including 'linenoise', but still much more slim than.....bash 8-)</span></div><div class="line" id="141056"><span class="nick" style="color:#3c5b35"><a href="#141056" label="[14:10:56]">&lt;rain1&gt;</a></span><span class="message">yes, linenoise can be removed too</span></div><div class="line" id="150647"><span class="nick" style="color:#234e69"><a href="#150647" label="[15:06:47]">&lt;stikonas&gt;</a></span><span class="message">I wonder what is the simplest C compiler that can build s...</span></div><div class="line" id="150649"><span class="nick" style="color:#234e69"><a href="#150649" label="[15:06:49]">&lt;stikonas&gt;</a></span><span class="message">tcc?</span></div><div class="line" id="150736"><span class="nick" style="color:#3c5b35"><a href="#150736" label="[15:07:36]">&lt;rain1&gt;</a></span><span class="message">i imagine it can be built by tcc and mescc, i don't know if the M2 c compiler could do it</span></div><div class="line" id="150844"><span class="nick" style="color:#234e69"><a href="#150844" label="[15:08:44]">&lt;stikonas&gt;</a></span><span class="message">if mescc can build it it might be worth building it then</span></div><div class="line" id="150851"><span class="nick" style="color:#af8d2f"><a href="#150851" label="[15:08:51]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: interesting, but irrelevant: for bootstrapping you need a simple shell (e.g. kaem), so this is still an a task for a binary blobbed 'kaem'</span></div><div class="line" id="150903"><span class="nick" style="color:#234e69"><a href="#150903" label="[15:09:03]">&lt;stikonas&gt;</a></span><span class="message">yes, of course you need kaem</span></div><div class="line" id="150913"><span class="nick" style="color:#234e69"><a href="#150913" label="[15:09:13]">&lt;stikonas&gt;</a></span><span class="message">but the sooner we have better shell the better</span></div><div class="line" id="150939"><span class="nick" style="color:#234e69"><a href="#150939" label="[15:09:39]">&lt;stikonas&gt;</a></span><span class="message">kaem is a bit too simple :)</span></div><div class="line" id="151010"><span class="nick" style="color:#234e69"><a href="#151010" label="[15:10:10]">&lt;stikonas&gt;</a></span><span class="message">maybe I'll try to use mescc to build it this evening...</span></div><div class="line" id="151027"><span class="nick" style="color:#3c5b35"><a href="#151027" label="[15:10:27]">&lt;rain1&gt;</a></span><span class="message">kaem is wonderful</span></div><div class="line" id="151046"><span class="nick" style="color:#af8d2f"><a href="#151046" label="[15:10:46]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: you are right, at least we can write better readable shell-script, but 's' is still very limiting</span></div><div class="line" id="151111"><span class="nick" style="color:#af8d2f"><a href="#151111" label="[15:11:11]">&lt;gforce_d11977&gt;</a></span><span class="message">you made my day with &quot;kaem is wonderful&quot; 8-)</span></div><div class="line" id="151124"><span class="nick" style="color:#234e69"><a href="#151124" label="[15:11:24]">&lt;stikonas&gt;</a></span><span class="message">well, yes, kaem is nice at the beginning</span></div><div class="line" id="151143"><span class="nick" style="color:#234e69"><a href="#151143" label="[15:11:43]">&lt;stikonas&gt;</a></span><span class="message">especially when build commands are simple (e.g. building hex2, M1, M2-Planet)...</span></div><div class="line" id="151311"><span class="nick" style="color:#af8d2f"><a href="#151311" label="[15:13:11]">&lt;gforce_d11977&gt;</a></span><span class="message">what is still missing for the early boot is 'chmod +x', but i have an idea for that</span></div><div class="line" id="151407"><span class="nick" style="color:#af8d2f"><a href="#151407" label="[15:14:07]">&lt;gforce_d11977&gt;</a></span><span class="message">idea1: introduce an filesystem/tmpfs where every file is executable 8-)</span></div><div class="line" id="151503"><span class="nick" style="color:#af8d2f"><a href="#151503" label="[15:15:03]">&lt;gforce_d11977&gt;</a></span><span class="message">idea2: prefill the filesystem with a '0-byte' and 'chmod +x' modded 'bin/hex.bin'</span></div><div class="line" id="151531"><span class="nick" style="color:#af8d2f"><a href="#151531" label="[15:15:31]">&lt;gforce_d11977&gt;</a></span><span class="message">idea3: ???</span></div><div class="line" id="151819"><span class="nick" style="color:#234e69"><a href="#151819" label="[15:18:19]">&lt;stikonas&gt;</a></span><span class="message">we have chmod +x quite early</span></div><div class="line" id="152025"><span class="nick" style="color:#234e69"><a href="#152025" label="[15:20:25]">&lt;stikonas&gt;</a></span><span class="message">definitely have it once we have M2-Planet</span></div><div class="line" id="152653"><span class="nick" style="color:#3c5b35"><a href="#152653" label="[15:26:53]">&lt;rain1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/rain-1/f24216a0c75946b8a46984cd31d6f304">https://gist.github.com/rain-1/f24216a0c75946b8a46984cd31d6f304</a>  made s into a single file, with no linenoise (just commented out the interactive mode)</span></div><div class="line" id="152837"><span class="nick" style="color:#af8d2f"><a href="#152837" label="[15:28:37]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: yes, but how will you start all the compiles hex-binaries without +x ??? 8-)</span></div><div class="line" id="153012"><span class="nick" style="color:#af8d2f"><a href="#153012" label="[15:30:12]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: nice! but s_packed.bin is still 35k stripped 8-)</span></div><div class="line" id="153028"><span class="nick" style="color:#3c5b35"><a href="#153028" label="[15:30:28]">&lt;rain1&gt;</a></span><span class="message">yikes why is that</span></div><div class="line" id="153111"><span class="nick" style="color:#af8d2f"><a href="#153111" label="[15:31:11]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: it's ok IMHO, i'am not wondering</span></div><div class="line" id="153253"><span class="nick" style="color:#af8d2f"><a href="#153253" label="[15:32:53]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: it's 21k built with O2 and stripped on x86_64</span></div><div class="line" id="153619"><span class="nick" style="color:#234e69"><a href="#153619" label="[15:36:19]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: I think hex binaries call chmod syscall</span></div><div class="line" id="153619"><span class="nick" style="color:#af8d2f"><a href="#153619" label="[15:36:19]">&lt;gforce_d11977&gt;</a></span><span class="message">rain1: compared with a full blown POSIX shell (dash): 121k</span></div><div class="line" id="153635"><span class="nick" style="color:#af8d2f"><a href="#153635" label="[15:36:35]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: will check that, thank you</span></div><div class="line" id="153743"><span class="nick" style="color:#234e69"><a href="#153743" label="[15:37:43]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: or maybe kaem ignores it and can run non-executable files</span></div><div class="line" id="153821"><span class="nick" style="color:#389600"><a href="#153821" label="[15:38:21]">&lt;malina&gt;</a></span><span class="message">stikonas, apart from this, other projects were isnpired by edmund's 'notes' . including .e.g. <a rel="nofollow" href="https://github.com/rui314/8cc">https://github.com/rui314/8cc</a> </span></div><div class="line" id="153905"><span class="nick" style="color:#389600"><a href="#153905" label="[15:39:05]">&lt;malina&gt;</a></span><span class="message">now works at google I think so, it obviously was interestin stuff. He did/does continue the whole thing of a self compiling compiler which I would think is even more basic than tcc. I forget now but it might be of interest to you as you asked about other simple c compilers.</span></div><div class="line" id="153936"><span class="nick" style="color:#389600"><a href="#153936" label="[15:39:36]">&lt;malina&gt;</a></span><span class="message">(I haven't looked at it myself for a good while so not quite sure if it will be relevant to your question)</span></div><div class="line" id="153939"><span class="nick" style="color:#3c5b35"><a href="#153939" label="[15:39:39]">&lt;rain1&gt;</a></span><span class="message">rui had a promising 9cc project but stopped it</span></div><div class="line" id="154025"><span class="nick" style="color:#389600"><a href="#154025" label="[15:40:25]">&lt;malina&gt;</a></span><span class="message">8cc? ye it says he has a new WIP, chibbi or os</span></div><div class="line" id="154035"><span class="nick" style="color:#389600"><a href="#154035" label="[15:40:35]">&lt;malina&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/rui314/chibicc">https://github.com/rui314/chibicc</a> </span></div><div class="line" id="154121"><span class="nick" style="color:#389600"><a href="#154121" label="[15:41:21]">&lt;malina&gt;</a></span><span class="message">anyway, I sse in noted he does NOT refeence eddie's (sorry i never recall the surname :p) notes, my bad, was firly certain I thought it came from that as well. nvm then</span></div><div class="line" id="154306"><span class="nick" style="color:#af8d2f"><a href="#154306" label="[15:43:06]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: you are right, the first HEX0 binary set +x on HEX1 and so on.....THANKS for the hint</span></div><div class="line" id="154621"><span class="nick" style="color:#234e69"><a href="#154621" label="[15:46:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, it runs LOADI32_EDX %448</span></div><div class="line" id="154701"><span class="nick" style="color:#234e69"><a href="#154701" label="[15:47:01]">&lt;stikonas&gt;</a></span><span class="message">these alternative C compilers are probably harder to build then M2-Planet...</span></div><div class="line" id="154707"><span class="nick" style="color:#234e69"><a href="#154707" label="[15:47:07]">&lt;stikonas&gt;</a></span><span class="message">or cc_x86...</span></div><div class="line" id="155026"><span class="nick" style="color:#389600"><a href="#155026" label="[15:50:26]">&lt;malina&gt;</a></span><span class="message">by all means, but your question was so broad &quot;s...&quot; I just had in mind, there could still be some 'reference material' which might have satsified your curiousity or so.</span></div><div class="line" id="155218"><span class="nick" style="color:#234e69"><a href="#155218" label="[15:52:18]">&lt;stikonas&gt;</a></span><span class="message">s is a shell, not a compiler</span></div><div class="line" id="160710"><span class="nick" style="color:#389600"><a href="#160710" label="[16:07:10]">&lt;malina&gt;</a></span><span class="message">oh. I read s... as s...omething</span></div><div class="line" id="160716"><span class="nick" style="color:#389600"><a href="#160716" label="[16:07:16]">&lt;malina&gt;</a></span><span class="message">got ya</span></div><div class="line" id="164410"><span class="nick" style="color:#234e69"><a href="#164410" label="[16:44:10]">&lt;stikonas&gt;</a></span><span class="message">it's this one <a rel="nofollow" href="https://github.com/rain-1/s">https://github.com/rain-1/s</a> </span></div><div class="line" id="172426"><span class="nick" style="color:#389600"><a href="#172426" label="[17:24:26]">&lt;malina&gt;</a></span><span class="message">OH :D</span></div><div class="line" id="172617"><span class="nick" style="color:#389600"><a href="#172617" label="[17:26:17]">&lt;malina&gt;</a></span><span class="message">I see TempleOs.. just doing a wc -l on its sources must have been brave</span></div><div class="line" id="205532"><span class="nick" style="color:#8dd3c7"><a href="#205532" label="[20:55:32]">&lt;OriansJ&gt;</a></span><span class="message">gforce_d11977: originally mescc-tools had exec_enable to solve the need for chmod +x problem. Then I realized that one can make a file executable with the open command (ECX %577 [O_WRONLY|O_CREAT|O_TRUNC], EDX %448 [700 in octal], EAX %5) and only the hex* series need to make executable files as M0/M1, cc_*/M2-Planet just output for another program to process and 0600 (rw- --- ---) is sufficient.</span></div><div class="line" id="210733"><span class="nick" style="color:#8dd3c7"><a href="#210733" label="[21:07:33]">&lt;OriansJ&gt;</a></span><span class="message">fossy: if you would like, I can try to find time later today to fix kaem's string tokenization to support C style escapes</span></div><div class="line" id="215446"><span class="nick" style="color:#2e2a4a"><a href="#215446" label="[21:54:46]">&lt;fossy&gt;</a></span><span class="message">OriansJ: I was planning to do that today but if you want to do that thats fine</span></div><div class="line" id="221626"><span class="nick" style="color:#8dd3c7"><a href="#221626" label="[22:16:26]">&lt;pder&gt;</a></span><span class="message">fossy: I have updated blynn-compiler so you can build to the final stage (precisely) without using shell redirection.  So basically the go.sh can be changed to a kaem script with little change</span></div><div class="line" id="221846"><span class="nick" style="color:#8dd3c7"><a href="#221846" label="[22:18:46]">&lt;pder&gt;</a></span><span class="message">does it make sense to add mkdir as a builtin in kaem?</span></div><div class="line" id="221922"><span class="nick" style="color:#2e2a4a"><a href="#221922" label="[22:19:22]">&lt;fossy&gt;</a></span><span class="message">pder: no it does not</span></div><div class="line" id="222007"><span class="nick" style="color:#2e2a4a"><a href="#222007" label="[22:20:07]">&lt;fossy&gt;</a></span><span class="message">pder: I am going to PR a cp and chmod command to mescc tools</span></div><div class="line" id="222019"><span class="nick" style="color:#2e2a4a"><a href="#222019" label="[22:20:19]">&lt;fossy&gt;</a></span><span class="message">eventually I will need to add rm and mkdir too</span></div><div class="line" id="222023"><span class="nick" style="color:#2e2a4a"><a href="#222023" label="[22:20:23]">&lt;fossy&gt;</a></span><span class="message">But not as a builtin</span></div><div class="line" id="222136"><span class="nick" style="color:#8dd3c7"><a href="#222136" label="[22:21:36]">&lt;pder&gt;</a></span><span class="message">ok, so with blynn-compiler, go.sh does a mkdir for the bin and generated directories, so for live-bootstrap, they will need to already exist</span></div><div class="line" id="222157"><span class="nick" style="color:#234e69"><a href="#222157" label="[22:21:57]">&lt;stikonas&gt;</a></span><span class="message">rain1: so &quot;s&quot; will not be usable early in bootstrap</span></div><div class="line" id="222244"><span class="nick" style="color:#234e69"><a href="#222244" label="[22:22:44]">&lt;stikonas&gt;</a></span><span class="message">I tried building it with mescc and it didn't work</span></div><div class="line" id="222254"><span class="nick" style="color:#3c5b35"><a href="#222254" label="[22:22:54]">&lt;rain1&gt;</a></span><span class="message">ok</span></div><div class="line" id="222255"><span class="nick" style="color:#234e69"><a href="#222255" label="[22:22:55]">&lt;stikonas&gt;</a></span><span class="message">and I think even tcc would struggle, since we only have access to mescc libc</span></div><div class="line" id="222324"><span class="nick" style="color:#234e69"><a href="#222324" label="[22:23:24]">&lt;stikonas&gt;</a></span><span class="message">e.g. termios.h wouldn't be available...</span></div><div class="line" id="222424"><span class="nick" style="color:#3c5b35"><a href="#222424" label="[22:24:24]">&lt;rain1&gt;</a></span><span class="message">which file includes that?</span></div><div class="line" id="222431"><span class="nick" style="color:#234e69"><a href="#222431" label="[22:24:31]">&lt;stikonas&gt;</a></span><span class="message">linenoise.c</span></div><div class="line" id="222441"><span class="nick" style="color:#3c5b35"><a href="#222441" label="[22:24:41]">&lt;rain1&gt;</a></span><span class="message">oh there is a verson with linenoise reomved</span></div><div class="line" id="222444"><span class="nick" style="color:#234e69"><a href="#222444" label="[22:24:44]">&lt;stikonas&gt;</a></span><span class="message">well, mescc struggles with more files...</span></div><div class="line" id="222451"><span class="nick" style="color:#3c5b35"><a href="#222451" label="[22:24:51]">&lt;rain1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/rain-1/f24216a0c75946b8a46984cd31d6f304">https://gist.github.com/rain-1/f24216a0c75946b8a46984cd31d6f304</a> </span></div><div class="line" id="222452"><span class="nick" style="color:#234e69"><a href="#222452" label="[22:24:52]">&lt;stikonas&gt;</a></span><span class="message">maybe tcc would do better...</span></div><div class="line" id="222520"><span class="nick" style="color:#234e69"><a href="#222520" label="[22:25:20]">&lt;stikonas&gt;</a></span><span class="message">let's see</span></div><div class="line" id="222852"><span class="nick" style="color:#234e69"><a href="#222852" label="[22:28:52]">&lt;stikonas&gt;</a></span><span class="message">no, mescc is too simple...</span></div><div class="line" id="223252"><span class="nick" style="color:#2e2a4a"><a href="#223252" label="[22:32:52]">&lt;fossy&gt;</a></span><span class="message">pder: that is fine</span></div><div class="line" id="223837"><span class="nick" style="color:#2e2a4a"><a href="#223837" label="[22:38:37]">&lt;yt_&gt;</a></span><span class="message">OriansJ: the next bit of the C preprocessor I promised: <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/pull/11">https://github.com/oriansj/M2-Planet/pull/11</a> </span></div><br /></div></body></html>