<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-02-24.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="014702"><span class="nick" style="color:#389600"><a href="#014702" label="[01:47:02]">&lt;fossy&gt;</a></span><span class="message">stikonas: I have a few patches for your gentoo overlay by the way</span></div><div class="line" id="014705"><span class="nick" style="color:#389600"><a href="#014705" label="[01:47:05]">&lt;fossy&gt;</a></span><span class="message">I just need to clean them up</span></div><div class="line" id="091128"><span class="nick" style="color:#8dd3c7"><a href="#091128" label="[09:11:28]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; fossy: sure, that's fine</span></div><div class="line" id="173807"><span class="nick" style="color:#2e2a4a"><a href="#173807" label="[17:38:07]">&lt;webczat&gt;</a></span><span class="message">ehlo</span></div><div class="line" id="174204"><span class="nick" style="color:#6b8072"><a href="#174204" label="[17:42:04]">&lt;janneke&gt;</a></span><span class="message">ehlo</span></div><div class="line" id="174208"><span class="nick" style="color:#6b8072"><a href="#174208" label="[17:42:08]">&lt;janneke&gt;</a></span><span class="message">501 Syntactically invalid EHLO argument(s)</span></div><div class="line" id="174220"><span class="nick" style="color:#2e2a4a"><a href="#174220" label="[17:42:20]">&lt;webczat&gt;</a></span><span class="message">I decided to go with something like full bootstrap starting from hex0 x86. btw, actually there are amd64 versions. don't they work?</span></div><div class="line" id="174252"><span class="nick" style="color:#2e2a4a"><a href="#174252" label="[17:42:52]">&lt;webczat&gt;</a></span><span class="message">janneke: so few people currently know what ehlo is... only once in my life i got a numeric in response :D</span></div><div class="line" id="174305"><span class="nick" style="color:#6b8072"><a href="#174305" label="[17:43:05]">&lt;janneke&gt;</a></span><span class="message">webczat: :)</span></div><div class="line" id="174329"><span class="nick" style="color:#6b8072"><a href="#174329" label="[17:43:29]">&lt;janneke&gt;</a></span><span class="message">stage0-posix supports amd/intel 64bit, but mes doesn't (fully) yet</span></div><div class="line" id="174418"><span class="nick" style="color:#2e2a4a"><a href="#174418" label="[17:44:18]">&lt;webczat&gt;</a></span><span class="message">well about mes. I am not using anything like live bootstrap, only stage0-posix scripts, as in I am reading them. as I've said, I have an environment like kernel + pretty capable busybox so I am randomly skipping steps as I see fit</span></div><div class="line" id="174451"><span class="nick" style="color:#6b8072"><a href="#174451" label="[17:44:51]">&lt;janneke&gt;</a></span><span class="message">in that case, you're good wrt 64bit support</span></div><div class="line" id="174517"><span class="nick" style="color:#2e2a4a"><a href="#174517" label="[17:45:17]">&lt;webczat&gt;</a></span><span class="message">so I actually passed through mes stage manually, which means using the provided .sh scripts and compiling mes as 32 bit</span></div><div class="line" id="174555"><span class="nick" style="color:#2e2a4a"><a href="#174555" label="[17:45:55]">&lt;webczat&gt;</a></span><span class="message">including copying nyacc modules into mes itself because of course no one described... anyway, mes seems to work, but make doesn't configure when I try to build it.</span></div><div class="line" id="174619"><span class="nick" style="color:#2e2a4a"><a href="#174619" label="[17:46:19]">&lt;webczat&gt;</a></span><span class="message">it fails on checking for c preprocessor.</span></div><div class="line" id="175100"><span class="nick" style="color:#2e2a4a"><a href="#175100" label="[17:51:00]">&lt;webczat&gt;</a></span><span class="message">not sure what might be the problem? there are other problems too but they seem solved</span></div><div class="line" id="175106"><span class="nick" style="color:#6b8072"><a href="#175106" label="[17:51:06]">&lt;janneke&gt;</a></span><span class="message">the canonical way to make mes find nyacc, is by setting GUILE_LOAD_PATH, like it's &quot;documented&quot; in the guix bootstrap</span></div><div class="line" id="175126"><span class="nick" style="color:#6b8072"><a href="#175126" label="[17:51:26]">&lt;janneke&gt;</a></span><span class="message">maybe the mes documentation is failing in this regard?</span></div><div class="line" id="175143"><span class="nick" style="color:#2e2a4a"><a href="#175143" label="[17:51:43]">&lt;webczat&gt;</a></span><span class="message">janneke: i just literally copied correct nyacc modules to mes sources. mes docs has no info about it whatsoever</span></div><div class="line" id="175154"><span class="nick" style="color:#6b8072"><a href="#175154" label="[17:51:54]">&lt;janneke&gt;</a></span><span class="message">=&gt; <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm</a> </span></div><div class="line" id="175206"><span class="nick" style="color:#2e2a4a"><a href="#175206" label="[17:52:06]">&lt;webczat&gt;</a></span><span class="message">and that worked as long as I didn't try to use a too new nyacc</span></div><div class="line" id="175309"><span class="nick" style="color:#2e2a4a"><a href="#175309" label="[17:53:09]">&lt;webczat&gt;</a></span><span class="message">anyway now i have messcc, it works except i need to link everything with c+tcc because othervise it doesn't even have printf... that's weird by itself, and I seem to be unable to configure make.</span></div><div class="line" id="175353"><span class="nick" style="color:#80b1d3"><a href="#175353" label="[17:53:53]">&lt;Googulator&gt;</a></span><span class="message">sam_: liveGUI build is complete (well, with cheating - this one still includes binary rust &amp; openjdk)</span></div><div class="line" id="175442"><span class="nick" style="color:#6b8072"><a href="#175442" label="[17:54:42]">&lt;janneke&gt;</a></span><span class="message">webczat: did you build bootstrappable-tcc?</span></div><div class="line" id="175455"><span class="nick" style="color:#6d2462"><a href="#175455" label="[17:54:55]">&lt;sam_&gt;</a></span><span class="message">nice</span></div><div class="line" id="175512"><span class="nick" style="color:#2e2a4a"><a href="#175512" label="[17:55:12]">&lt;webczat&gt;</a></span><span class="message">janneke: not yet. i assumed mes can build make, and I am actually pretty sure it could if i commented out the c preprocessor check, but it's pretty large</span></div><div class="line" id="175552"><span class="nick" style="color:#2e2a4a"><a href="#175552" label="[17:55:52]">&lt;webczat&gt;</a></span><span class="message">also what's special in bootstrappable tcc?</span></div><div class="line" id="175734"><span class="nick" style="color:#80b1d3"><a href="#175734" label="[17:57:34]">&lt;Googulator&gt;</a></span><span class="message">before I attempt stikonas' Rust bootstrap, I'm probably gonna wait for the RAM sticks I ordered to arrive, as right now, I only have 4GiB in the bare metal bootstrap system</span></div><div class="line" id="180010"><span class="nick" style="color:#6b8072"><a href="#180010" label="[18:00:10]">&lt;janneke&gt;</a></span><span class="message">webczat: building make with mes, that's cool; you're way ahead of us</span></div><div class="line" id="180024"><span class="nick" style="color:#2e2a4a"><a href="#180024" label="[18:00:24]">&lt;webczat&gt;</a></span><span class="message">janneke: i'm not... until I actually build it</span></div><div class="line" id="180033"><span class="nick" style="color:#6b8072"><a href="#180033" label="[18:00:33]">&lt;janneke&gt;</a></span><span class="message">it /should/ be possible, however, the only real application we built with mes until now is bootstrappable-tcc</span></div><div class="line" id="180057"><span class="nick" style="color:#2e2a4a"><a href="#180057" label="[18:00:57]">&lt;webczat&gt;</a></span><span class="message">note my goal is to intentionally not to use instructions or patches until possible. that includes making them except in shell scripts/configs.</span></div><div class="line" id="180125"><span class="nick" style="color:#2e2a4a"><a href="#180125" label="[18:01:25]">&lt;webczat&gt;</a></span><span class="message">before mes i had to use kaem scripts because compiling pre mes tools was too order sensitive.</span></div><div class="line" id="180137"><span class="nick" style="color:#6b8072"><a href="#180137" label="[18:01:37]">&lt;janneke&gt;</a></span><span class="message">bootstrappable-tcc is a fork that removes some unnecesarily complex C-constructs, and allows bootstrapping tcc with a compiler that lacks support for floats and long longs</span></div><div class="line" id="180204"><span class="nick" style="color:#2e2a4a"><a href="#180204" label="[18:02:04]">&lt;webczat&gt;</a></span><span class="message">ah</span></div><div class="line" id="180231"><span class="nick" style="color:#6b8072"><a href="#180231" label="[18:02:31]">&lt;janneke&gt;</a></span><span class="message">so, if make (i haven't checked) depends on float or long long, you'd need to do something creative</span></div><div class="line" id="180255"><span class="nick" style="color:#2e2a4a"><a href="#180255" label="[18:02:55]">&lt;webczat&gt;</a></span><span class="message">janneke: i don't know.</span></div><div class="line" id="180309"><span class="nick" style="color:#2e2a4a"><a href="#180309" label="[18:03:09]">&lt;webczat&gt;</a></span><span class="message">good to know that it's specifically the problem here :)</span></div><div class="line" id="180334"><span class="nick" style="color:#6b8072"><a href="#180334" label="[18:03:34]">&lt;janneke&gt;</a></span><span class="message">in any case, afaik, you're in frontier territory :)</span></div><div class="line" id="180342"><span class="nick" style="color:#2e2a4a"><a href="#180342" label="[18:03:42]">&lt;webczat&gt;</a></span><span class="message">i'm not that far yet. need to do something with that preprocessor check</span></div><div class="line" id="180405"><span class="nick" style="color:#2e2a4a"><a href="#180405" label="[18:04:05]">&lt;webczat&gt;</a></span><span class="message">and if that would require modifying real source, i am very likely not going to do that</span></div><div class="line" id="180410"><span class="nick" style="color:#6b8072"><a href="#180410" label="[18:04:10]">&lt;janneke&gt;</a></span><span class="message">have you tried CPP='mescc -E' ?</span></div><div class="line" id="180427"><span class="nick" style="color:#2e2a4a"><a href="#180427" label="[18:04:27]">&lt;webczat&gt;</a></span><span class="message">yes. it still tried to verify it and failed</span></div><div class="line" id="180452"><span class="nick" style="color:#2e2a4a"><a href="#180452" label="[18:04:52]">&lt;webczat&gt;</a></span><span class="message">which is weird because it worked for me btw</span></div><div class="line" id="180502"><span class="nick" style="color:#2e2a4a"><a href="#180502" label="[18:05:02]">&lt;webczat&gt;</a></span><span class="message">and in the example code it tried to test i didn't see anything weird.</span></div><div class="line" id="180506"><span class="nick" style="color:#6b8072"><a href="#180506" label="[18:05:06]">&lt;janneke&gt;</a></span><span class="message">yeah, iwbn to find out why that fails and fix it</span></div><div class="line" id="180512"><span class="nick" style="color:#2e2a4a"><a href="#180512" label="[18:05:12]">&lt;webczat&gt;</a></span><span class="message">it got like syntax errors at line 1. line 1 is a /* comment</span></div><div class="line" id="180529"><span class="nick" style="color:#6b8072"><a href="#180529" label="[18:05:29]">&lt;janneke&gt;</a></span><span class="message">otoh, afaik, live-bootstrap avoids using ./configure in make altogether and just uses a pre-built config.h that it produces</span></div><div class="line" id="180538"><span class="nick" style="color:#6b8072"><a href="#180538" label="[18:05:38]">&lt;janneke&gt;</a></span><span class="message">hmm</span></div><div class="line" id="180552"><span class="nick" style="color:#2e2a4a"><a href="#180552" label="[18:05:52]">&lt;webczat&gt;</a></span><span class="message">also i checked it doesn't error on /* comments</span></div><div class="line" id="180641"><span class="nick" style="color:#2e2a4a"><a href="#180641" label="[18:06:41]">&lt;webczat&gt;</a></span><span class="message">btw i am working in a nice environment. kernel+busybox, but busybox is a builtin kernel initramfs. if something hard crashes, everything I do goes poof :P</span></div><div class="line" id="180650"><span class="nick" style="color:#6b8072"><a href="#180650" label="[18:06:50]">&lt;janneke&gt;</a></span><span class="message">yeah, weird</span></div><div class="line" id="180917"><span class="nick" style="color:#80b1d3"><a href="#180917" label="[18:09:17]">&lt;Googulator&gt;</a></span><span class="message">yeah, ./configure is usually pregenerated code, so it's either avoided or regenerated</span></div><div class="line" id="180938"><span class="nick" style="color:#80b1d3"><a href="#180938" label="[18:09:38]">&lt;Googulator&gt;</a></span><span class="message">unless it happens to be one of those rare projects with a handwritten configure script</span></div><div class="line" id="181010"><span class="nick" style="color:#2e2a4a"><a href="#181010" label="[18:10:10]">&lt;webczat&gt;</a></span><span class="message">my goals are totally out of line with bootstrappable's project goals. i don't care about that</span></div><div class="line" id="181151"><span class="nick" style="color:#2e2a4a"><a href="#181151" label="[18:11:51]">&lt;webczat&gt;</a></span><span class="message">i care about an experiment like: assuming I still have internet access and can provide binary seeds but choose to create as in compile everything, can I get from no build tool to a usable compiler?</span></div><div class="line" id="181211"><span class="nick" style="color:#2e2a4a"><a href="#181211" label="[18:12:11]">&lt;webczat&gt;</a></span><span class="message">i mean, much fun</span></div><div class="line" id="181314"><span class="nick" style="color:#234e69"><a href="#181314" label="[18:13:14]">&lt;oriansj&gt;</a></span><span class="message">webczat: well the answer is one can from very little get to a complete system</span></div><div class="line" id="181337"><span class="nick" style="color:#234e69"><a href="#181337" label="[18:13:37]">&lt;oriansj&gt;</a></span><span class="message">and there are exotic alternates like CollapseOS</span></div><div class="line" id="181353"><span class="nick" style="color:#2e2a4a"><a href="#181353" label="[18:13:53]">&lt;webczat&gt;</a></span><span class="message">oriansj: my very little is kernel+busybox. although my goal is not to make a lfs. my goal is a bit easier but also weirder. but no matter what, first step is getting a toolchain</span></div><div class="line" id="181429"><span class="nick" style="color:#234e69"><a href="#181429" label="[18:14:29]">&lt;oriansj&gt;</a></span><span class="message">well toolchain is vague. M2-Planet+mescc-tools+M2libc is a toolchain</span></div><div class="line" id="181431"><span class="nick" style="color:#2e2a4a"><a href="#181431" label="[18:14:31]">&lt;webczat&gt;</a></span><span class="message">i once did the same except i used a prebuild static toolchain as a seed. now trying to make it.</span></div><div class="line" id="181502"><span class="nick" style="color:#2e2a4a"><a href="#181502" label="[18:15:02]">&lt;webczat&gt;</a></span><span class="message">oriansj: well i meant a gcc toolchain. only gcc and clang are powerful enough probably.</span></div><div class="line" id="181516"><span class="nick" style="color:#6b8072"><a href="#181516" label="[18:15:16]">&lt;janneke&gt;</a></span><span class="message">having fun is, as far as i'm concerned, the most essential ingredient</span></div><div class="line" id="181524"><span class="nick" style="color:#234e69"><a href="#181524" label="[18:15:24]">&lt;oriansj&gt;</a></span><span class="message">webczat: powerful enough for what exactly?</span></div><div class="line" id="181541"><span class="nick" style="color:#6b8072"><a href="#181541" label="[18:15:41]">&lt;janneke&gt;</a></span><span class="message">(helping others is also nice)</span></div><div class="line" id="181635"><span class="nick" style="color:#2e2a4a"><a href="#181635" label="[18:16:35]">&lt;webczat&gt;</a></span><span class="message">janneke: what you are doing would be extremely super extra tedious if you had no fun with it, but the reverse is not that true. I am not sure to which point I agree with your goals, at least with whether they make sense or not, but I am not into that level of distrust which would be required for me to care. i was just sometimes annoyed that you need a compiler to make a compiler, which you</span></div><div class="line" id="181637"><span class="nick" style="color:#2e2a4a"><a href="#181637" label="[18:16:37]">&lt;webczat&gt;</a></span><span class="message">can make with only another compiler... and you can't exit the loop</span></div><div class="line" id="181729"><span class="nick" style="color:#2e2a4a"><a href="#181729" label="[18:17:29]">&lt;webczat&gt;</a></span><span class="message">oriansj: powerful enough to compile good part os a full linux system. let's say that what I am going to compile with this gcc is something very similar to what you compile first when doing lfs, the /tools thing.</span></div><div class="line" id="181802"><span class="nick" style="color:#234e69"><a href="#181802" label="[18:18:02]">&lt;oriansj&gt;</a></span><span class="message">webczat: well if you are selective on your Linux (and are willing to do patching) TCC is also a viable option</span></div><div class="line" id="181844"><span class="nick" style="color:#2e2a4a"><a href="#181844" label="[18:18:44]">&lt;webczat&gt;</a></span><span class="message">oriansj: i am not willing to do patching mostly. i either do the step consciously as in i can change files manually, or not do it at all. or I give up some of my goals, but I can try first.</span></div><div class="line" id="181933"><span class="nick" style="color:#234e69"><a href="#181933" label="[18:19:33]">&lt;oriansj&gt;</a></span><span class="message">and based on the trajectory of mescc, in a few years it'll probably be able to do that too...</span></div><div class="line" id="182014"><span class="nick" style="color:#2e2a4a"><a href="#182014" label="[18:20:14]">&lt;webczat&gt;</a></span><span class="message">I need to go far enough tomake rpm or even dnf. mostly. because there is another loop: to install an os, you need that os or compatible.</span></div><div class="line" id="182133"><span class="nick" style="color:#234e69"><a href="#182133" label="[18:21:33]">&lt;oriansj&gt;</a></span><span class="message">well you don't need an OS to install an OS, only some basic functionality in RAM. (which can either be loaded from ROM or manually toggled in)</span></div><div class="line" id="182155"><span class="nick" style="color:#2e2a4a"><a href="#182155" label="[18:21:55]">&lt;webczat&gt;</a></span><span class="message">oriansj: depends what installing an os means</span></div><div class="line" id="182242"><span class="nick" style="color:#234e69"><a href="#182242" label="[18:22:42]">&lt;oriansj&gt;</a></span><span class="message">I am assuming by Operating system, you imply software that provides process management, virtual memory allocation and file abstractions.</span></div><div class="line" id="182303"><span class="nick" style="color:#234e69"><a href="#182303" label="[18:23:03]">&lt;oriansj&gt;</a></span><span class="message">or would something like BootOS work for you?</span></div><div class="line" id="182334"><span class="nick" style="color:#6b8072"><a href="#182334" label="[18:23:34]">&lt;janneke&gt;</a></span><span class="message">webczat: i'm not really doing this because of distrust</span></div><div class="line" id="182356"><span class="nick" style="color:#2e2a4a"><a href="#182356" label="[18:23:56]">&lt;webczat&gt;</a></span><span class="message">oriansj: probably also something that can run native install tools of the target os and understand it's structures. like for example xfs on raid1 on lvm?</span></div><div class="line" id="182405"><span class="nick" style="color:#6b8072"><a href="#182405" label="[18:24:05]">&lt;janneke&gt;</a></span><span class="message">yes, i think it's super cool that we have drastically reduced the &quot;trusting trust&quot; attakc vector</span></div><div class="line" id="182411"><span class="nick" style="color:#2e2a4a"><a href="#182411" label="[18:24:11]">&lt;webczat&gt;</a></span><span class="message">and run rpm. it's not fun if you have a stage1 bootstrap tar.gz to unpack.</span></div><div class="line" id="182419"><span class="nick" style="color:#6b8072"><a href="#182419" label="[18:24:19]">&lt;janneke&gt;</a></span><span class="message">but i'm doing this mainly because it feels to be &quot;the right thing to do&quot;</span></div><div class="line" id="182451"><span class="nick" style="color:#6b8072"><a href="#182451" label="[18:24:51]">&lt;janneke&gt;</a></span><span class="message">in guix, everything you install is --philosophically-- always built from from source, including all its dependencies</span></div><div class="line" id="182520"><span class="nick" style="color:#6b8072"><a href="#182520" label="[18:25:20]">&lt;janneke&gt;</a></span><span class="message">(you can use binary substitutes, but they have been built from source by someone else, including their dependencies)</span></div><div class="line" id="182608"><span class="nick" style="color:#234e69"><a href="#182608" label="[18:26:08]">&lt;oriansj&gt;</a></span><span class="message">webczat: so your definition of an Operating System explicitly excludes 99.999% of all operating systems. Ok, well then yes you'll have some very high requirements</span></div><div class="line" id="182616"><span class="nick" style="color:#2e2a4a"><a href="#182616" label="[18:26:16]">&lt;webczat&gt;</a></span><span class="message">janneke: and then there are all these who don't care. I actually don't care that much, only partially. I more care about the loops that don't allow me to build something, less so about pregenerated files or binary blobs in repos or downloaded during build, although I don't really like the latter. examples are of course java, .net and such like</span></div><div class="line" id="182621"><span class="nick" style="color:#6b8072"><a href="#182621" label="[18:26:21]">&lt;janneke&gt;</a></span><span class="message">i think it just makes no sense to, at an arbitrary level, say: we're not going to build this package from source, because: &quot;well, we actually don't have any good reason for it but we just won't&quot;</span></div><div class="line" id="182718"><span class="nick" style="color:#6b8072"><a href="#182718" label="[18:27:18]">&lt;janneke&gt;</a></span><span class="message">webczat: well, some people don't care about animal cruelty, or rainforest deforestation, or the 5th mass extinction wave</span></div><div class="line" id="182802"><span class="nick" style="color:#6b8072"><a href="#182802" label="[18:28:02]">&lt;janneke&gt;</a></span><span class="message">ACTION has little time for people who act too apathetic to care</span></div><div class="line" id="182918"><span class="nick" style="color:#2e2a4a"><a href="#182918" label="[18:29:18]">&lt;webczat&gt;</a></span><span class="message">everyone has their own goals. I use your work for mine because it's also doing what I want in addition to the above. but there is no reason other than fun and possibly curiosity</span></div><div class="line" id="182921"><span class="nick" style="color:#234e69"><a href="#182921" label="[18:29:21]">&lt;oriansj&gt;</a></span><span class="message">webczat: we *DO* care about binary blobs here. And we are very active in removing them when possible.</span></div><div class="line" id="182922"><span class="nick" style="color:#2e2a4a"><a href="#182922" label="[18:29:22]">&lt;webczat&gt;</a></span><span class="message">on my side</span></div><div class="line" id="183011"><span class="nick" style="color:#2e2a4a"><a href="#183011" label="[18:30:11]">&lt;webczat&gt;</a></span><span class="message">oriansj: understood. it's just actively working against all the people which made their projects to require these blobs, as in they make your work a bit difficult.</span></div><div class="line" id="183050"><span class="nick" style="color:#2e2a4a"><a href="#183050" label="[18:30:50]">&lt;webczat&gt;</a></span><span class="message">and you have to work around what they did</span></div><div class="line" id="183058"><span class="nick" style="color:#234e69"><a href="#183058" label="[18:30:58]">&lt;oriansj&gt;</a></span><span class="message">indeed and we are not changing in that regard.</span></div><div class="line" id="183101"><span class="nick" style="color:#2e2a4a"><a href="#183101" label="[18:31:01]">&lt;webczat&gt;</a></span><span class="message">I would need very high motivation to do that</span></div><div class="line" id="183133"><span class="nick" style="color:#2e2a4a"><a href="#183133" label="[18:31:33]">&lt;webczat&gt;</a></span><span class="message">oriansj: i am mostly explaining my goals are not yours, but your work magives answers I want.</span></div><div class="line" id="183210"><span class="nick" style="color:#2e2a4a"><a href="#183210" label="[18:32:10]">&lt;webczat&gt;</a></span><span class="message">and probably without your work what I want to try to do wouldn't be possible at all without me writing this from scratch</span></div><div class="line" id="183217"><span class="nick" style="color:#2e2a4a"><a href="#183217" label="[18:32:17]">&lt;webczat&gt;</a></span><span class="message">which I wouldn't try to do.</span></div><div class="line" id="183653"><span class="nick" style="color:#2e2a4a"><a href="#183653" label="[18:36:53]">&lt;webczat&gt;</a></span><span class="message">oriansj: actually i could ask dotnet guys about this, but how many binary blobs or binary downloaded packages are there in the dotnet's source build, if you have ever tried to build this one? do you know the answer?</span></div><div class="line" id="183905"><span class="nick" style="color:#234e69"><a href="#183905" label="[18:39:05]">&lt;oriansj&gt;</a></span><span class="message">webczat: well dotnet has not been a prior bootstrap yet (as no one expressed interest in doing so)</span></div><div class="line" id="183916"><span class="nick" style="color:#2e2a4a"><a href="#183916" label="[18:39:16]">&lt;webczat&gt;</a></span><span class="message">oriansj: okay. :)</span></div><div class="line" id="183946"><span class="nick" style="color:#234e69"><a href="#183946" label="[18:39:46]">&lt;oriansj&gt;</a></span><span class="message">but basic background on what is needed to potentially bootstrap it has been started (and what has been found is in the wiki)</span></div><div class="line" id="183957"><span class="nick" style="color:#2e2a4a"><a href="#183957" label="[18:39:57]">&lt;webczat&gt;</a></span><span class="message">i was once curious if you could do it through mono. as you definitely need a c# compiler to compile a c# compiler</span></div><div class="line" id="184005"><span class="nick" style="color:#2e2a4a"><a href="#184005" label="[18:40:05]">&lt;webczat&gt;</a></span><span class="message">oriansj: aah. nice</span></div><div class="line" id="184028"><span class="nick" style="color:#234e69"><a href="#184028" label="[18:40:28]">&lt;oriansj&gt;</a></span><span class="message">well you have too bootstrap mono as it is also written in C#</span></div><div class="line" id="184043"><span class="nick" style="color:#2e2a4a"><a href="#184043" label="[18:40:43]">&lt;webczat&gt;</a></span><span class="message">oriansj: except maybe? you don't have to bootstrap very first versions?</span></div><div class="line" id="184044"><span class="nick" style="color:#234e69"><a href="#184044" label="[18:40:44]">&lt;oriansj&gt;</a></span><span class="message">but we did find a C# compiler which was not written in C#</span></div><div class="line" id="184112"><span class="nick" style="color:#234e69"><a href="#184112" label="[18:41:12]">&lt;oriansj&gt;</a></span><span class="message">well the first versions of mono were written in C# and built using the Microsoft C# compiler.</span></div><div class="line" id="184149"><span class="nick" style="color:#234e69"><a href="#184149" label="[18:41:49]">&lt;oriansj&gt;</a></span><span class="message">Microsoft has never released the source code for that version of the C# compiler; thus it is not available.</span></div><div class="line" id="184300"><span class="nick" style="color:#2e2a4a"><a href="#184300" label="[18:43:00]">&lt;webczat&gt;</a></span><span class="message">oriansj: really? somehow I was sure they haven't done that because they created mono for linux to bring non existing dotnet to it. I took this for granted that first c# compiler on mono couldn't be written in c#. interesting that I'm wrong. I haven't researched the territory, but to be honest long ago I kinda wanted to try. I didn't mostly because I didn't know how dotnet source repo works</span></div><div class="line" id="184302"><span class="nick" style="color:#2e2a4a"><a href="#184302" label="[18:43:02]">&lt;webczat&gt;</a></span><span class="message">and didn't know how would I ensure I know what's needed/how do I isolate the needed dependencies. not enough motivation on my side :)</span></div><div class="line" id="184337"><span class="nick" style="color:#234e69"><a href="#184337" label="[18:43:37]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.gnu.org/software/dotgnu/pnet.html">https://www.gnu.org/software/dotgnu/pnet.html</a> </span></div><div class="line" id="184346"><span class="nick" style="color:#2e2a4a"><a href="#184346" label="[18:43:46]">&lt;webczat&gt;</a></span><span class="message">oh...</span></div><div class="line" id="184354"><span class="nick" style="color:#2e2a4a"><a href="#184354" label="[18:43:54]">&lt;webczat&gt;</a></span><span class="message">i forgot that existed</span></div><div class="line" id="184416"><span class="nick" style="color:#234e69"><a href="#184416" label="[18:44:16]">&lt;oriansj&gt;</a></span><span class="message">is the only C# compiler written in anything other than C# and you can build it with GCC</span></div><div class="line" id="184431"><span class="nick" style="color:#2e2a4a"><a href="#184431" label="[18:44:31]">&lt;webczat&gt;</a></span><span class="message">it's probably not capable enough to build roslyn. you would likely have to go through early mono or something.</span></div><div class="line" id="184443"><span class="nick" style="color:#234e69"><a href="#184443" label="[18:44:43]">&lt;oriansj&gt;</a></span><span class="message">so there potentially is a path from it to Mono (just no one has actively explored it yet)</span></div><div class="line" id="184542"><span class="nick" style="color:#2e2a4a"><a href="#184542" label="[18:45:42]">&lt;webczat&gt;</a></span><span class="message">well you know, writing c# compilers in c# makes them nicer to write. I definitely understand why most people don't want to write such a thing in a language like c++.</span></div><div class="line" id="184601"><span class="nick" style="color:#2e2a4a"><a href="#184601" label="[18:46:01]">&lt;webczat&gt;</a></span><span class="message">although before roslyn, the ms c# compiler was native. but as you've said, not opensource</span></div><div class="line" id="184618"><span class="nick" style="color:#234e69"><a href="#184618" label="[18:46:18]">&lt;oriansj&gt;</a></span><span class="message">yeah, a great many language compilers end up rewriting themselves in their own language</span></div><div class="line" id="184912"><span class="nick" style="color:#234e69"><a href="#184912" label="[18:49:12]">&lt;oriansj&gt;</a></span><span class="message">and why preserving bootstrapping paths while still possible remains essential if we wish to ensure future access to those languages.</span></div><div class="line" id="185132"><span class="nick" style="color:#2e2a4a"><a href="#185132" label="[18:51:32]">&lt;webczat&gt;</a></span><span class="message">oriansj: the fact that most people don't really care about that much makes it difficult, because there may be cases like actually c/c++ is, where a bootstrap path doesn't exist. and then you need enough motivation and dedication to create it for example. exactly how it happened with c</span></div><div class="line" id="185155"><span class="nick" style="color:#2e2a4a"><a href="#185155" label="[18:51:55]">&lt;webczat&gt;</a></span><span class="message">so if dotgnu didn't exist or ir couldn't compile even first mono, then...</span></div><div class="line" id="185226"><span class="nick" style="color:#2e2a4a"><a href="#185226" label="[18:52:26]">&lt;webczat&gt;</a></span><span class="message">someone would need to have enough interest to create a c# compiler in c/c++</span></div><div class="line" id="185236"><span class="nick" style="color:#2e2a4a"><a href="#185236" label="[18:52:36]">&lt;webczat&gt;</a></span><span class="message">which would be very interesting btw</span></div><div class="line" id="185320"><span class="nick" style="color:#234e69"><a href="#185320" label="[18:53:20]">&lt;oriansj&gt;</a></span><span class="message">well yes but as we are limited in the number of people working on creating new bootstrapping paths and only Guix is actively helping preserve the old ones when possible.</span></div><div class="line" id="185403"><span class="nick" style="color:#2e2a4a"><a href="#185403" label="[18:54:03]">&lt;webczat&gt;</a></span><span class="message">oriansj: i am not saying you should do it. just thinking how that's going to work.</span></div><div class="line" id="185523"><span class="nick" style="color:#2e2a4a"><a href="#185523" label="[18:55:23]">&lt;webczat&gt;</a></span><span class="message">also wondering if non roslyn based c# to c/cpp transpilers exist</span></div><div class="line" id="185621"><span class="nick" style="color:#234e69"><a href="#185621" label="[18:56:21]">&lt;oriansj&gt;</a></span><span class="message">well that wouldn't be bootstrapping; just passing around generated blobs</span></div><div class="line" id="185700"><span class="nick" style="color:#2e2a4a"><a href="#185700" label="[18:57:00]">&lt;webczat&gt;</a></span><span class="message">oriansj: what do you mean? i mean lost context and not sure what you are answering to</span></div><div class="line" id="185920"><span class="nick" style="color:#234e69"><a href="#185920" label="[18:59:20]">&lt;oriansj&gt;</a></span><span class="message"> doing a c# to c/cpp transpile of roslyn wouldn't bootstrap C# but just generate a generated blob.</span></div><div class="line" id="185946"><span class="nick" style="color:#2e2a4a"><a href="#185946" label="[18:59:46]">&lt;webczat&gt;</a></span><span class="message">oriansj: even if that transpiler wouldn't be written in c#?</span></div><div class="line" id="190023"><span class="nick" style="color:#2e2a4a"><a href="#190023" label="[19:00:23]">&lt;webczat&gt;</a></span><span class="message">you could use it to build roslyn during bootstrap. i don't mean passing it's c version around</span></div><div class="line" id="190446"><span class="nick" style="color:#2e2a4a"><a href="#190446" label="[19:04:46]">&lt;webczat&gt;</a></span><span class="message">i mean you can search for something like dotgnu, or for something that gives you ability to directly or indirectly compile to native code, without requiring to pass through IL. so like c# to c++ transpilers or native aot compilers.</span></div><div class="line" id="190915"><span class="nick" style="color:#234e69"><a href="#190915" label="[19:09:15]">&lt;oriansj&gt;</a></span><span class="message">webczat: if one does xeh &lt; binary &gt; my_sources  and then later uses hex0 &lt; my_sources &gt; binary; does that make it properly bootstrapped? I say no. If a human didn't write it, then it isn't source code but generated artifacts.</span></div><div class="line" id="191058"><span class="nick" style="color:#2e2a4a"><a href="#191058" label="[19:10:58]">&lt;webczat&gt;</a></span><span class="message">oriansj: i don't understand this argument in this context. people wrote roslyn and this transpiler. if you can compile the transpiler, then transpile roslyn during bootstrap. roslyn is opensource.\</span></div><div class="line" id="191110"><span class="nick" style="color:#2e2a4a"><a href="#191110" label="[19:11:10]">&lt;webczat&gt;</a></span><span class="message">so what's binary here?</span></div><div class="line" id="191138"><span class="nick" style="color:#2e2a4a"><a href="#191138" label="[19:11:38]">&lt;webczat&gt;</a></span><span class="message">you have all sources</span></div><div class="line" id="191146"><span class="nick" style="color:#2e2a4a"><a href="#191146" label="[19:11:46]">&lt;webczat&gt;</a></span><span class="message">or we just miscommunicated. trying to catch it</span></div><div class="line" id="191204"><span class="nick" style="color:#234e69"><a href="#191204" label="[19:12:04]">&lt;oriansj&gt;</a></span><span class="message">so to clarify your argument is if you find a transpiler for a programming language and use it like a compiler;</span></div><div class="line" id="191231"><span class="nick" style="color:#2e2a4a"><a href="#191231" label="[19:12:31]">&lt;webczat&gt;</a></span><span class="message">oriansj: yes. or a c# implementation compiling directly to native code.</span></div><div class="line" id="191246"><span class="nick" style="color:#234e69"><a href="#191246" label="[19:12:46]">&lt;oriansj&gt;</a></span><span class="message">in which case, you are just compiling and the generated result is morally the same as a generated binary.</span></div><div class="line" id="191411"><span class="nick" style="color:#2e2a4a"><a href="#191411" label="[19:14:11]">&lt;webczat&gt;</a></span><span class="message">yes, my intention is to just compile. starting from original sources</span></div><div class="line" id="191639"><span class="nick" style="color:#2e2a4a"><a href="#191639" label="[19:16:39]">&lt;webczat&gt;</a></span><span class="message">it's just compiling with an additional step. if a transpiler would itself be written in c/cpp/bootstrappable language and would be opensource, then it would fit.</span></div><div class="line" id="191852"><span class="nick" style="color:#234e69"><a href="#191852" label="[19:18:52]">&lt;oriansj&gt;</a></span><span class="message">to me saying use a transpiler is just like saying use a compiler. it is fine as long as it is properly bootstrapped. It is just another technique for bootstrapping. But the output of compilers and transpilers are never to be considered source code.</span></div><div class="line" id="192001"><span class="nick" style="color:#2e2a4a"><a href="#192001" label="[19:20:01]">&lt;webczat&gt;</a></span><span class="message">oriansj: i am not arguing for shipping the transpiler's results like it was original sources. i was just wondering whether such tools exist and whether they are written in c/cpp which it seems they are not</span></div><div class="line" id="192040"><span class="nick" style="color:#2e2a4a"><a href="#192040" label="[19:20:40]">&lt;webczat&gt;</a></span><span class="message">because they use roslyn as a library :)</span></div><div class="line" id="192045"><span class="nick" style="color:#2e2a4a"><a href="#192045" label="[19:20:45]">&lt;webczat&gt;</a></span><span class="message">which is understandable but</span></div><div class="line" id="193342"><span class="nick" style="color:#2e2a4a"><a href="#193342" label="[19:33:42]">&lt;webczat&gt;</a></span><span class="message">also btw things like dotnet/java... even if you can bootstrap them, you would have problems bootstrapping java or dotnet apps because when built from sources they download packages which are already binary, they never use packages from system. curious what's your answer to this. it's possible to build these packages from sources then make them available to build system, but... it's</span></div><div class="line" id="193344"><span class="nick" style="color:#2e2a4a"><a href="#193344" label="[19:33:44]">&lt;webczat&gt;</a></span><span class="message">different than most other langs because it actually has no concept of system packages and everything is shipped with app</span></div><div class="line" id="193533"><span class="nick" style="color:#2e2a4a"><a href="#193533" label="[19:35:33]">&lt;webczat&gt;</a></span><span class="message">probably solvable if you turn these into operating system packages though, in both cases</span></div><div class="line" id="193723"><span class="nick" style="color:#2e2a4a"><a href="#193723" label="[19:37:23]">&lt;webczat&gt;</a></span><span class="message">and definitely easieer than bootstrapping compilers. doesn't require that much fighting against the system, more about a risk that an app unexpectedly downloads something during build and you don't realize.</span></div><div class="line" id="201623"><span class="nick" style="color:#2e2a4a"><a href="#201623" label="[20:16:23]">&lt;webczat&gt;</a></span><span class="message">trying to compile make with mes again. with ./configure but i can't do othervise probably :)</span></div><div class="line" id="213316"><span class="nick" style="color:#6c3d55"><a href="#213316" label="[21:33:16]">&lt;stikonas&gt;</a></span><span class="message">webczat: you would have far more luck building it manually</span></div><div class="line" id="213330"><span class="nick" style="color:#6c3d55"><a href="#213330" label="[21:33:30]">&lt;stikonas&gt;</a></span><span class="message">./configure script is likely to be confused by mescc...</span></div><div class="line" id="213348"><span class="nick" style="color:#2e2a4a"><a href="#213348" label="[21:33:48]">&lt;webczat&gt;</a></span><span class="message">stikonas: we'll see.</span></div><div class="line" id="213407"><span class="nick" style="color:#2e2a4a"><a href="#213407" label="[21:34:07]">&lt;webczat&gt;</a></span><span class="message">nothing bad in trying</span></div><div class="line" id="213450"><span class="nick" style="color:#6c3d55"><a href="#213450" label="[21:34:50]">&lt;stikonas&gt;</a></span><span class="message">no, nothing bad</span></div><div class="line" id="213514"><span class="nick" style="color:#6c3d55"><a href="#213514" label="[21:35:14]">&lt;stikonas&gt;</a></span><span class="message">but nobody tested tried it yet usually means it won't work</span></div><div class="line" id="213709"><span class="nick" style="color:#2e2a4a"><a href="#213709" label="[21:37:09]">&lt;webczat&gt;</a></span><span class="message">stikonas: because it doesn't without changes.</span></div><div class="line" id="213726"><span class="nick" style="color:#2e2a4a"><a href="#213726" label="[21:37:26]">&lt;webczat&gt;</a></span><span class="message">it confuses the configure script, but that doesn't mean build will fail.</span></div><div class="line" id="214256"><span class="nick" style="color:#6c3d55"><a href="#214256" label="[21:42:56]">&lt;stikonas&gt;</a></span><span class="message">webczat: which is why I'm suggesting building directly without configure script</span></div><div class="line" id="214317"><span class="nick" style="color:#6c3d55"><a href="#214317" label="[21:43:17]">&lt;stikonas&gt;</a></span><span class="message">we know exactly which commands havea to be run with tcc...</span></div><div class="line" id="214328"><span class="nick" style="color:#2e2a4a"><a href="#214328" label="[21:43:28]">&lt;webczat&gt;</a></span><span class="message">stikonas: not sure how challenging would that be</span></div><div class="line" id="214337"><span class="nick" style="color:#6c3d55"><a href="#214337" label="[21:43:37]">&lt;stikonas&gt;</a></span><span class="message">trying is easy</span></div><div class="line" id="214412"><span class="nick" style="color:#6c3d55"><a href="#214412" label="[21:44:12]">&lt;stikonas&gt;</a></span><span class="message">you just need to replace tcc with mes/mescc command here <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/make-3.82/pass1.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/steps/make-3.82/pass1.kaem</a> </span></div><div class="line" id="214629"><span class="nick" style="color:#2e2a4a"><a href="#214629" label="[21:46:29]">&lt;webczat&gt;</a></span><span class="message">stikonas: the whole fun is kinda in seeing how far I can go without instructions. i determined that before mes I can't because misordering files on command lines of m2planet/etc might make things not work. but now i'm still in the trying phase</span></div><div class="line" id="214711"><span class="nick" style="color:#6c3d55"><a href="#214711" label="[21:47:11]">&lt;stikonas&gt;</a></span><span class="message">yes, M2-Planet needs precise order</span></div><div class="line" id="214727"><span class="nick" style="color:#6c3d55"><a href="#214727" label="[21:47:27]">&lt;stikonas&gt;</a></span><span class="message">M2-Mesoplanet is a but better in that regard, but only mescc-tools-extra use it and not mes build</span></div><div class="line" id="214830"><span class="nick" style="color:#2e2a4a"><a href="#214830" label="[21:48:30]">&lt;webczat&gt;</a></span><span class="message">stikonas: yeah. i skipped the extra because i have full busybox.</span></div><div class="line" id="214853"><span class="nick" style="color:#6c3d55"><a href="#214853" label="[21:48:53]">&lt;stikonas&gt;</a></span><span class="message">yeah, busybox is superset of that</span></div><div class="line" id="215304"><span class="nick" style="color:#2e2a4a"><a href="#215304" label="[21:53:04]">&lt;webczat&gt;</a></span><span class="message">wanted to do configure because didn't want to manually fill config.h or whatever</span></div><div class="line" id="215836"><span class="nick" style="color:#6c3d55"><a href="#215836" label="[21:58:36]">&lt;stikonas&gt;</a></span><span class="message">you don't need that many flags to build mes...</span></div><div class="line" id="215845"><span class="nick" style="color:#6c3d55"><a href="#215845" label="[21:58:45]">&lt;stikonas&gt;</a></span><span class="message">s/mes/make/</span></div><div class="line" id="215907"><span class="nick" style="color:#6c3d55"><a href="#215907" label="[21:59:07]">&lt;stikonas&gt;</a></span><span class="message">it won't be a very good make but good enough to proceed</span></div><div class="line" id="220024"><span class="nick" style="color:#2e2a4a"><a href="#220024" label="[22:00:24]">&lt;webczat&gt;</a></span><span class="message">stikonas: maybe :)</span></div><br /></div></body></html>