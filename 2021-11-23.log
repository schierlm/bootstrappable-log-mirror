<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-11-23.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011750"><span class="nick" style="color:#8dd3c7"><a href="#011750" label="[01:17:50]">&lt;oriansj&gt;</a></span><span class="message">stikonas: absolutely</span></div><div class="line" id="013317"><span class="nick" style="color:#8dd3c7"><a href="#013317" label="[01:33:17]">&lt;oriansj&gt;</a></span><span class="message">now why the heck is gcc's build of M2-Planet segfaulting on this: <a rel="nofollow" href="https://paste.debian.net/1220475/">https://paste.debian.net/1220475/</a> </span></div><div class="line" id="013624"><span class="nick" style="color:#8dd3c7"><a href="#013624" label="[01:36:24]">&lt;oriansj&gt;</a></span><span class="message">Program received signal SIGSEGV, Segmentation fault</span></div><div class="line" id="014320"><span class="nick" style="color:#2e2a4a"><a href="#014320" label="[01:43:20]">&lt;stikonas&gt;</a></span><span class="message">hmm, strace or gdb?</span></div><div class="line" id="015026"><span class="nick" style="color:#8dd3c7"><a href="#015026" label="[01:50:26]">&lt;oriansj&gt;</a></span><span class="message">gdb just shows Program received signal SIGSEGV, Segmentation fault when I try to step into it</span></div><div class="line" id="015458"><span class="nick" style="color:#8dd3c7"><a href="#015458" label="[01:54:58]">&lt;oriansj&gt;</a></span><span class="message">as this is the last bit before I can fully flush out the spawn functionality: <a rel="nofollow" href="https://github.com/oriansj/M2-Mesoplanet/tree/sanitycheck">https://github.com/oriansj/M2-Mesoplanet/tree/sanitycheck</a> </span></div><div class="line" id="015517"><span class="nick" style="color:#8dd3c7"><a href="#015517" label="[01:55:17]">&lt;oriansj&gt;</a></span><span class="message">I made a seperate branch for anyone else to look at</span></div><div class="line" id="015542"><span class="nick" style="color:#8dd3c7"><a href="#015542" label="[01:55:42]">&lt;oriansj&gt;</a></span><span class="message">as with -E it is passing the tests</span></div><div class="line" id="015555"><span class="nick" style="color:#8dd3c7"><a href="#015555" label="[01:55:55]">&lt;oriansj&gt;</a></span><span class="message">So it has to be in this new block</span></div><div class="line" id="015642"><span class="nick" style="color:#2e2a4a"><a href="#015642" label="[01:56:42]">&lt;stikonas&gt;</a></span><span class="message">hmm, how do you segfault it?</span></div><div class="line" id="015654"><span class="nick" style="color:#2e2a4a"><a href="#015654" label="[01:56:54]">&lt;stikonas&gt;</a></span><span class="message">I do get it passing on simple C files</span></div><div class="line" id="015748"><span class="nick" style="color:#8dd3c7"><a href="#015748" label="[01:57:48]">&lt;oriansj&gt;</a></span><span class="message">I have a return 42 example program that I named foo.c with I hit the bug just doing ./bin/M2-Mesoplanet -f foo.c</span></div><div class="line" id="015757"><span class="nick" style="color:#2e2a4a"><a href="#015757" label="[01:57:57]">&lt;stikonas&gt;</a></span><span class="message">it creates /tmp/M2-Mesoplanet-... file and exits</span></div><div class="line" id="015823"><span class="nick" style="color:#2e2a4a"><a href="#015823" label="[01:58:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, so I don't think I can reproduce it</span></div><div class="line" id="015826"><span class="nick" style="color:#8dd3c7"><a href="#015826" label="[01:58:26]">&lt;oriansj&gt;</a></span><span class="message">it crashes before making the file for me</span></div><div class="line" id="015848"><span class="nick" style="color:#8dd3c7"><a href="#015848" label="[01:58:48]">&lt;oriansj&gt;</a></span><span class="message">ok, so something borked on my end?</span></div><div class="line" id="015855"><span class="nick" style="color:#2e2a4a"><a href="#015855" label="[01:58:55]">&lt;stikonas&gt;</a></span><span class="message">probably</span></div><div class="line" id="015910"><span class="nick" style="color:#2e2a4a"><a href="#015910" label="[01:59:10]">&lt;stikonas&gt;</a></span><span class="message">glibc?</span></div><div class="line" id="015922"><span class="nick" style="color:#2e2a4a"><a href="#015922" label="[01:59:22]">&lt;stikonas&gt;</a></span><span class="message">I am on glibc 2.33, although it's probably something simpler</span></div><div class="line" id="015924"><span class="nick" style="color:#8dd3c7"><a href="#015924" label="[01:59:24]">&lt;oriansj&gt;</a></span><span class="message">yep fresh out of the box debian</span></div><div class="line" id="021326"><span class="nick" style="color:#6b8072"><a href="#021326" label="[02:13:26]">&lt;gbrlwck&gt;</a></span><span class="message">i'm having trouble compiling lib/linux/&lt;arch&gt;-mes-mescc/crt1.c (strictly following live-bootstrap).  is one of you able to compile that with mescc?</span></div><div class="line" id="021332"><span class="nick" style="color:#6b8072"><a href="#021332" label="[02:13:32]">&lt;gbrlwck&gt;</a></span><span class="message">i get expr-&gt;register: not supported:  #f (for both: riscv64 and x86)</span></div><div class="line" id="021459"><span class="nick" style="color:#2e2a4a"><a href="#021459" label="[02:14:59]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: are you sure you set all variables?</span></div><div class="line" id="021528"><span class="nick" style="color:#2e2a4a"><a href="#021528" label="[02:15:28]">&lt;stikonas&gt;</a></span><span class="message">including MES_PREFIX and GUILE_LOAD_PATH</span></div><div class="line" id="021618"><span class="nick" style="color:#2e2a4a"><a href="#021618" label="[02:16:18]">&lt;stikonas&gt;</a></span><span class="message">missing/incorrectly set up env variables were the most common cause of problems with mescc for me</span></div><div class="line" id="022341"><span class="nick" style="color:#6b8072"><a href="#022341" label="[02:23:41]">&lt;gbrlwck&gt;</a></span><span class="message">i add the lib paths via -L option, mescc compiles fine.  i am able to run it on a simple &quot;return 42&quot; c program (which obviously won't work)</span></div><div class="line" id="022434"><span class="nick" style="color:#6b8072"><a href="#022434" label="[02:24:34]">&lt;gbrlwck&gt;</a></span><span class="message">if you have a working mes/mescc setup it would be great if you could check whether you are able to compile crt1.c (x86)</span></div><div class="line" id="022704"><span class="nick" style="color:#2e2a4a"><a href="#022704" label="[02:27:04]">&lt;stikonas&gt;</a></span><span class="message">which commit?</span></div><div class="line" id="022724"><span class="nick" style="color:#2e2a4a"><a href="#022724" label="[02:27:24]">&lt;stikonas&gt;</a></span><span class="message">(I might not have time today, but I can try tomorrow)</span></div><div class="line" id="022815"><span class="nick" style="color:#6b8072"><a href="#022815" label="[02:28:15]">&lt;gbrlwck&gt;</a></span><span class="message">doesn't have to be today</span></div><div class="line" id="022849"><span class="nick" style="color:#6b8072"><a href="#022849" label="[02:28:49]">&lt;gbrlwck&gt;</a></span><span class="message">can be your last: c07111ff876882591bc0077b32b7303d3bf2b99e</span></div><div class="line" id="022922"><span class="nick" style="color:#6b8072"><a href="#022922" label="[02:29:22]">&lt;gbrlwck&gt;</a></span><span class="message">i started building on top of that (but that's just RISC-V emission, i did not change anything within mes)</span></div><div class="line" id="023054"><span class="nick" style="color:#6b8072"><a href="#023054" label="[02:30:54]">&lt;gbrlwck&gt;</a></span><span class="message">if you could paste the results in here, that'd be great :) i'll read the logs for the time i'm not online</span></div><div class="line" id="023301"><span class="nick" style="color:#8dd3c7"><a href="#023301" label="[02:33:01]">&lt;oriansj&gt;</a></span><span class="message">hmm well the syscalls logged strace seem to indicate much earlier as the cause <a rel="nofollow" href="https://paste.debian.net/1220477/">https://paste.debian.net/1220477/</a> </span></div><div class="line" id="023515"><span class="nick" style="color:#2e2a4a"><a href="#023515" label="[02:35:15]">&lt;stikonas&gt;</a></span><span class="message">so after uname call I have openat(AT_FDCWD, &quot;/tmp/M2-Mesoplanet-FU8dtE&quot;, O_RDWR|O_CREAT|O_EXCL, 0600) = 5</span></div><div class="line" id="025957"><span class="nick" style="color:#8dd3c7"><a href="#025957" label="[02:59:57]">&lt;oriansj&gt;</a></span><span class="message">ok, it appears to be something with my debian gcc install</span></div><div class="line" id="030835"><span class="nick" style="color:#8dd3c7"><a href="#030835" label="[03:08:35]">&lt;oriansj&gt;</a></span><span class="message">ok, its making the tempfile and &quot;writing to it&quot;; however nothing is showing up in the file</span></div><div class="line" id="031514"><span class="nick" style="color:#8dd3c7"><a href="#031514" label="[03:15:14]">&lt;oriansj&gt;</a></span><span class="message">wait rw isn't a valid mode? huh</span></div><div class="line" id="031950"><span class="nick" style="color:#8dd3c7"><a href="#031950" label="[03:19:50]">&lt;oriansj&gt;</a></span><span class="message">I guess I'm going to have to do w+ and r+ modes in M2libc for fopen</span></div><div class="line" id="032034"><span class="nick" style="color:#8dd3c7"><a href="#032034" label="[03:20:34]">&lt;oriansj&gt;</a></span><span class="message">so --debug flag or --no-debug flag for M2-Mesoplanet?</span></div><div class="line" id="034224"><span class="nick" style="color:#8dd3c7"><a href="#034224" label="[03:42:24]">&lt;oriansj&gt;</a></span><span class="message">its spawning correctly (ish)</span></div><div class="line" id="034337"><span class="nick" style="color:#8dd3c7"><a href="#034337" label="[03:43:37]">&lt;oriansj&gt;</a></span><span class="message">now to add in the logic for using the M2libc definition files and elf-headers</span></div><div class="line" id="034437"><span class="nick" style="color:#8dd3c7"><a href="#034437" label="[03:44:37]">&lt;oriansj&gt;</a></span><span class="message">and spawing is entirely isolated into cc_spawn.c so it can be easily removed from cc-minimal.c's dependency chain</span></div><div class="line" id="114640"><span class="nick" style="color:#80b1d3"><a href="#114640" label="[11:46:40]">&lt;stikonas[m]&gt;</a></span><span class="message">maybe --no-debug</span></div><div class="line" id="114655"><span class="nick" style="color:#80b1d3"><a href="#114655" label="[11:46:55]">&lt;stikonas[m]&gt;</a></span><span class="message">by default stage0-posix builds everything with debug info</span></div><div class="line" id="114717"><span class="nick" style="color:#80b1d3"><a href="#114717" label="[11:47:17]">&lt;stikonas[m]&gt;</a></span><span class="message">and those binaries are small enough anyway, so debug info is not a big problem</span></div><div class="line" id="114726"><span class="nick" style="color:#80b1d3"><a href="#114726" label="[11:47:26]">&lt;stikonas[m]&gt;</a></span><span class="message">and it's much easier to inspect</span></div><div class="line" id="115822"><span class="nick" style="color:#8dd3c7"><a href="#115822" label="[11:58:22]">&lt;oriansj&gt;</a></span><span class="message">I have spawn working correctly</span></div><div class="line" id="115836"><span class="nick" style="color:#8dd3c7"><a href="#115836" label="[11:58:36]">&lt;oriansj&gt;</a></span><span class="message">commit will be up shortly</span></div><div class="line" id="115942"><span class="nick" style="color:#8dd3c7"><a href="#115942" label="[11:59:42]">&lt;oriansj&gt;</a></span><span class="message">and up</span></div><div class="line" id="120037"><span class="nick" style="color:#8dd3c7"><a href="#120037" label="[12:00:37]">&lt;oriansj&gt;</a></span><span class="message">as of right now ./bin/M2-Mesoplanet -f foo.c -o foo will preprocess, compile, assemble and link without issue basics correctly</span></div><div class="line" id="120121"><span class="nick" style="color:#8dd3c7"><a href="#120121" label="[12:01:21]">&lt;oriansj&gt;</a></span><span class="message">however it just needs a little logic when dealing with #include to set a flag if stdio is used</span></div><div class="line" id="122209"><span class="nick" style="color:#8dd3c7"><a href="#122209" label="[12:22:09]">&lt;oriansj&gt;</a></span><span class="message">here is the logic needed: <a rel="nofollow" href="https://paste.debian.net/1220512/">https://paste.debian.net/1220512/</a> </span></div><div class="line" id="122318"><span class="nick" style="color:#8dd3c7"><a href="#122318" label="[12:23:18]">&lt;oriansj&gt;</a></span><span class="message">the big next step is the actual importing of code with #include with &lt;file&gt; using the M2LIBC_PATH</span></div><div class="line" id="122759"><span class="nick" style="color:#2e2a4a"><a href="#122759" label="[12:27:59]">&lt;stikonas&gt;</a></span><span class="message">yes, that will make building more similar to usual compiler...</span></div><div class="line" id="123024"><span class="nick" style="color:#2e2a4a"><a href="#123024" label="[12:30:24]">&lt;stikonas&gt;</a></span><span class="message">oriansj: maybe with spawning and no -E it shouldn't output to stdout?</span></div><div class="line" id="123100"><span class="nick" style="color:#2e2a4a"><a href="#123100" label="[12:31:00]">&lt;stikonas&gt;</a></span><span class="message">as it will print lots of binary garbage to terminal</span></div><div class="line" id="123820"><span class="nick" style="color:#8dd3c7"><a href="#123820" label="[12:38:20]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well it was a rough solution</span></div><div class="line" id="124008"><span class="nick" style="color:#2e2a4a"><a href="#124008" label="[12:40:08]">&lt;stikonas&gt;</a></span><span class="message">but it does work much nicer now than before</span></div><div class="line" id="124230"><span class="nick" style="color:#8dd3c7"><a href="#124230" label="[12:42:30]">&lt;oriansj&gt;</a></span><span class="message">a.out is the standard</span></div><div class="line" id="204826"><span class="nick" style="color:#6b8072"><a href="#204826" label="[20:48:26]">&lt;gbrlwck&gt;</a></span><span class="message">M2-Mesoplanet sounds exciting!</span></div><div class="line" id="220430"><span class="nick" style="color:#6b8072"><a href="#220430" label="[22:04:30]">&lt;gbrlwck&gt;</a></span><span class="message">did you compile by `make`? any other prerequesites necessary?</span></div><div class="line" id="220521"><span class="nick" style="color:#2e2a4a"><a href="#220521" label="[22:05:21]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: right now by make, but I guess once oriansj gets #include working, we can pull it into stage0-posix</span></div><div class="line" id="220532"><span class="nick" style="color:#2e2a4a"><a href="#220532" label="[22:05:32]">&lt;stikonas&gt;</a></span><span class="message">in principle you can compile it with M2-Planet</span></div><div class="line" id="220541"><span class="nick" style="color:#2e2a4a"><a href="#220541" label="[22:05:41]">&lt;stikonas&gt;</a></span><span class="message">it should be mostly the same procedure</span></div><div class="line" id="220614"><span class="nick" style="color:#2e2a4a"><a href="#220614" label="[22:06:14]">&lt;stikonas&gt;</a></span><span class="message">just slightly different set of files (e.g. no cc_core.c but there is now cc_env.c and cc_spawn.c)</span></div><div class="line" id="220957"><span class="nick" style="color:#6b8072"><a href="#220957" label="[22:09:57]">&lt;gbrlwck&gt;</a></span><span class="message">i tried: `/root/M2-Planet/bin/M2-Planet --architecture riscv64 -f M2libc/bootstrappable.c -f cc_reader.c -f cc_core.c -f cc_macro.c -f cc_env.c -f cc_spawn.c -f cc.c -f cc.h -f cc_globals.c -f gcc_req.h --debug -o bin/M2-Mesoplanet` but this gives &quot;Unterminated string&quot;</span></div><div class="line" id="221034"><span class="nick" style="color:#6b8072"><a href="#221034" label="[22:10:34]">&lt;gbrlwck&gt;</a></span><span class="message">weird. `make` did not work before (not sure why) but typing make now did the trick</span></div><div class="line" id="223053"><span class="nick" style="color:#6b8072"><a href="#223053" label="[22:30:53]">&lt;gbrlwck&gt;</a></span><span class="message">ok, cool</span></div><div class="line" id="223056"><span class="nick" style="color:#6b8072"><a href="#223056" label="[22:30:56]">&lt;gbrlwck&gt;</a></span><span class="message">this is nice!</span></div><div class="line" id="225108"><span class="nick" style="color:#80b1d3"><a href="#225108" label="[22:51:08]">&lt;stikonas[m]&gt;</a></span><span class="message">gbrlwck: try to see which file</span></div><div class="line" id="225127"><span class="nick" style="color:#80b1d3"><a href="#225127" label="[22:51:27]">&lt;stikonas[m]&gt;</a></span><span class="message">It might be some comment that trips tokenizer</span></div><div class="line" id="225138"><span class="nick" style="color:#80b1d3"><a href="#225138" label="[22:51:38]">&lt;stikonas[m]&gt;</a></span><span class="message">Remove some files from -f</span></div><div class="line" id="225152"><span class="nick" style="color:#80b1d3"><a href="#225152" label="[22:51:52]">&lt;stikonas[m]&gt;</a></span><span class="message">And see if error message changes</span></div><div class="line" id="225324"><span class="nick" style="color:#6b8072"><a href="#225324" label="[22:53:24]">&lt;gbrlwck&gt;</a></span><span class="message">not sure what happened, but it seems to work now :)</span></div><div class="line" id="225404"><span class="nick" style="color:#80b1d3"><a href="#225404" label="[22:54:04]">&lt;stikonas[m]&gt;</a></span><span class="message">Building with M2-Planet?</span></div><div class="line" id="225415"><span class="nick" style="color:#80b1d3"><a href="#225415" label="[22:54:15]">&lt;stikonas[m]&gt;</a></span><span class="message">OK, if that works then it's good</span></div><div class="line" id="225600"><span class="nick" style="color:#6b8072"><a href="#225600" label="[22:56:00]">&lt;gbrlwck&gt;</a></span><span class="message">ah, no, building with gcc</span></div><div class="line" id="225951"><span class="nick" style="color:#6b8072"><a href="#225951" label="[22:59:51]">&lt;gbrlwck&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/M2-Mesoplanet/pull/1">https://github.com/oriansj/M2-Mesoplanet/pull/1</a> </span></div><div class="line" id="230018"><span class="nick" style="color:#6b8072"><a href="#230018" label="[23:00:18]">&lt;gbrlwck&gt;</a></span><span class="message">i did a small PR for updating the README and --help (listing all possible options)</span></div><div class="line" id="230651"><span class="nick" style="color:#6b8072"><a href="#230651" label="[23:06:51]">&lt;gbrlwck&gt;</a></span><span class="message">ok, i found the error</span></div><div class="line" id="230738"><span class="nick" style="color:#6b8072"><a href="#230738" label="[23:07:38]">&lt;gbrlwck&gt;</a></span><span class="message">&quot;doesn't&quot; in the // comment in gcc_req.h on line 18 triggers the unterminated string..</span></div><div class="line" id="231015"><span class="nick" style="color:#6b8072"><a href="#231015" label="[23:10:15]">&lt;gbrlwck&gt;</a></span><span class="message">now i get &quot;unknown type FILE&quot;.. is it possible this is not defined in M2libc/bootstrappable.c but only M2libc/stdio.c ?</span></div><div class="line" id="231539"><span class="nick" style="color:#2e2a4a"><a href="#231539" label="[23:15:39]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: replace it with /* doesn't */</span></div><div class="line" id="231549"><span class="nick" style="color:#2e2a4a"><a href="#231549" label="[23:15:49]">&lt;stikonas&gt;</a></span><span class="message">oh actually no</span></div><div class="line" id="231558"><span class="nick" style="color:#2e2a4a"><a href="#231558" label="[23:15:58]">&lt;stikonas&gt;</a></span><span class="message">remove gcc_req.h from your M2-Planet command line</span></div><div class="line" id="231601"><span class="nick" style="color:#2e2a4a"><a href="#231601" label="[23:16:01]">&lt;stikonas&gt;</a></span><span class="message">it's for gcc</span></div><div class="line" id="231611"><span class="nick" style="color:#6b8072"><a href="#231611" label="[23:16:11]">&lt;gbrlwck&gt;</a></span><span class="message">s/doesn't/does not/</span></div><div class="line" id="231613"><span class="nick" style="color:#6b8072"><a href="#231613" label="[23:16:13]">&lt;gbrlwck&gt;</a></span><span class="message">works ;)</span></div><div class="line" id="231621"><span class="nick" style="color:#6b8072"><a href="#231621" label="[23:16:21]">&lt;gbrlwck&gt;</a></span><span class="message">should i open a github issue?</span></div><div class="line" id="231628"><span class="nick" style="color:#2e2a4a"><a href="#231628" label="[23:16:28]">&lt;stikonas&gt;</a></span><span class="message">well, that too but in any case your shouldn't include that file</span></div><div class="line" id="231633"><span class="nick" style="color:#2e2a4a"><a href="#231633" label="[23:16:33]">&lt;stikonas&gt;</a></span><span class="message">well, I know about that issue</span></div><div class="line" id="231651"><span class="nick" style="color:#2e2a4a"><a href="#231651" label="[23:16:51]">&lt;stikonas&gt;</a></span><span class="message">it's because // comments are stripped later (after tokenizer runs)</span></div><div class="line" id="231655"><span class="nick" style="color:#2e2a4a"><a href="#231655" label="[23:16:55]">&lt;stikonas&gt;</a></span><span class="message">so not completely trivial</span></div><div class="line" id="231708"><span class="nick" style="color:#2e2a4a"><a href="#231708" label="[23:17:08]">&lt;stikonas&gt;</a></span><span class="message">and the reason for removing // comments later is that in bootstrap mode they are not comments</span></div><div class="line" id="231725"><span class="nick" style="color:#2e2a4a"><a href="#231725" label="[23:17:25]">&lt;stikonas&gt;</a></span><span class="message">cc_* compilers use // CONSTANT  instead of #define</span></div><div class="line" id="231740"><span class="nick" style="color:#2e2a4a"><a href="#231740" label="[23:17:40]">&lt;stikonas&gt;</a></span><span class="message">and # is a comment</span></div><div class="line" id="231756"><span class="nick" style="color:#6b8072"><a href="#231756" label="[23:17:56]">&lt;gbrlwck&gt;</a></span><span class="message">i see</span></div><div class="line" id="231830"><span class="nick" style="color:#2e2a4a"><a href="#231830" label="[23:18:30]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: but yes, you'll need stdio.c</span></div><div class="line" id="231900"><span class="nick" style="color:#2e2a4a"><a href="#231900" label="[23:19:00]">&lt;stikonas&gt;</a></span><span class="message">and other headers like ../M2libc/amd64/Linux/unistd.h</span></div><div class="line" id="231907"><span class="nick" style="color:#2e2a4a"><a href="#231907" label="[23:19:07]">&lt;stikonas&gt;</a></span><span class="message">see stage0-posix for how to build</span></div><div class="line" id="232008"><span class="nick" style="color:#2e2a4a"><a href="#232008" label="[23:20:08]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/AMD64/mescc-tools-full-kaem.kaem#L95">https://github.com/oriansj/stage0-posix/blob/master/AMD64/mescc-tools-full-kaem.kaem#L95</a> </span></div><div class="line" id="232119"><span class="nick" style="color:#2e2a4a"><a href="#232119" label="[23:21:19]">&lt;stikonas&gt;</a></span><span class="message">it's possible to build it in  M2-Planet --bootstrap-mode too (test1000 does that to check some of the cc_* compatibility) but we can just do proper build</span></div><div class="line" id="232647"><span class="nick" style="color:#6b8072"><a href="#232647" label="[23:26:47]">&lt;gbrlwck&gt;</a></span><span class="message">i get &quot;unknown type const&quot; ?</span></div><div class="line" id="233234"><span class="nick" style="color:#2e2a4a"><a href="#233234" label="[23:32:34]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: what command line are you running?</span></div><div class="line" id="233238"><span class="nick" style="color:#2e2a4a"><a href="#233238" label="[23:32:38]">&lt;stikonas&gt;</a></span><span class="message">I can try</span></div><div class="line" id="233412"><span class="nick" style="color:#2e2a4a"><a href="#233412" label="[23:34:12]">&lt;stikonas&gt;</a></span><span class="message">but M2-Planet should know const...</span></div><div class="line" id="233421"><span class="nick" style="color:#6b8072"><a href="#233421" label="[23:34:21]">&lt;gbrlwck&gt;</a></span><span class="message"> <a rel="nofollow" href="https://termbin.com/35ol">https://termbin.com/35ol</a> </span></div><div class="line" id="233429"><span class="nick" style="color:#2e2a4a"><a href="#233429" label="[23:34:29]">&lt;stikonas&gt;</a></span><span class="message">I think it doesn't enforce it but should compile</span></div><div class="line" id="233455"><span class="nick" style="color:#6b8072"><a href="#233455" label="[23:34:55]">&lt;gbrlwck&gt;</a></span><span class="message">maybe i should update my M2-Planet</span></div><div class="line" id="233542"><span class="nick" style="color:#6b8072"><a href="#233542" label="[23:35:42]">&lt;gbrlwck&gt;</a></span><span class="message">updated, but didn't help :)</span></div><div class="line" id="233653"><span class="nick" style="color:#2e2a4a"><a href="#233653" label="[23:36:53]">&lt;stikonas&gt;</a></span><span class="message">yes, you should update</span></div><div class="line" id="233705"><span class="nick" style="color:#2e2a4a"><a href="#233705" label="[23:37:05]">&lt;stikonas&gt;</a></span><span class="message">I get ./M2libc/stddef.h:18:newline expected at end of macro directive</span></div><div class="line" id="233718"><span class="nick" style="color:#2e2a4a"><a href="#233718" label="[23:37:18]">&lt;stikonas&gt;</a></span><span class="message">Mesoplanet does not assume cc_* compatibility</span></div><div class="line" id="233730"><span class="nick" style="color:#2e2a4a"><a href="#233730" label="[23:37:30]">&lt;stikonas&gt;</a></span><span class="message">and we started using some of the new features like i += 1;</span></div><div class="line" id="233928"><span class="nick" style="color:#2e2a4a"><a href="#233928" label="[23:39:28]">&lt;stikonas&gt;</a></span><span class="message">const looks like new addition by oriansj</span></div><div class="line" id="233946"><span class="nick" style="color:#2e2a4a"><a href="#233946" label="[23:39:46]">&lt;stikonas&gt;</a></span><span class="message">we have to add it to unlink because that's what POSIX requires</span></div><div class="line" id="233948"><span class="nick" style="color:#2e2a4a"><a href="#233948" label="[23:39:48]">&lt;stikonas&gt;</a></span><span class="message">but M2-Planet chokes up on it</span></div><div class="line" id="234133"><span class="nick" style="color:#2e2a4a"><a href="#234133" label="[23:41:33]">&lt;stikonas&gt;</a></span><span class="message">Usually we have char* const</span></div><div class="line" id="234141"><span class="nick" style="color:#2e2a4a"><a href="#234141" label="[23:41:41]">&lt;stikonas&gt;</a></span><span class="message">so perhaps that's what we need to do with unlink too</span></div><div class="line" id="234343"><span class="nick" style="color:#6b8072"><a href="#234343" label="[23:43:43]">&lt;gbrlwck&gt;</a></span><span class="message">&quot;Unkown type filename&quot;</span></div><div class="line" id="234749"><span class="nick" style="color:#2e2a4a"><a href="#234749" label="[23:47:49]">&lt;stikonas&gt;</a></span><span class="message">that's because you need char const* filename</span></div><div class="line" id="234751"><span class="nick" style="color:#2e2a4a"><a href="#234751" label="[23:47:51]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet --architecture $ARCH -f ./M2libc/sys/types.h -f ./M2libc/stddef.h -f ./M2libc/$ARCH/Linux/unistd.h -f ./M2libc/$ARCH/Linux/fcntl.h -f M2libc/stdlib.c -f ./M2libc/stdio.c -f ./M2libc/bootstrappable.c -f M2libc/bootstrappable.c  -f M2libc/string.c -f cc.h -f cc_globals.c -f cc_reader.c -f cc_core.c -f cc_macro.c -f cc_env.c -f cc_spawn.c -f cc.c --debug -o M2-Mesoplanet.M1</span></div><div class="line" id="234753"><span class="nick" style="color:#2e2a4a"><a href="#234753" label="[23:47:53]">&lt;stikonas&gt;</a></span><span class="message">but that needs fdopen</span></div><div class="line" id="234821"><span class="nick" style="color:#2e2a4a"><a href="#234821" label="[23:48:21]">&lt;stikonas&gt;</a></span><span class="message">you also had order of some files  in -f wrong</span></div><div class="line" id="234821"><span class="nick" style="color:#2e2a4a"><a href="#234821" label="[23:48:21]">&lt;stikonas&gt;</a></span><span class="message">header files with declarations should come first</span></div><div class="line" id="234910"><span class="nick" style="color:#2e2a4a"><a href="#234910" label="[23:49:10]">&lt;stikonas&gt;</a></span><span class="message">so we need to add fdopen to M2libc before we can compile it</span></div><div class="line" id="235657"><span class="nick" style="color:#6b8072"><a href="#235657" label="[23:56:57]">&lt;gbrlwck&gt;</a></span><span class="message">does this do more than converting the file descriptor to a FILE * (and check the mode)?</span></div><br /></div></body></html>