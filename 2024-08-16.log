<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-08-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="020358"><span class="nick" style="color:#389600"><a href="#020358" label="[02:03:58]">&lt;oriansj&gt;</a></span><span class="message">test blobs should never be needed; no exceptions</span></div><div class="line" id="020431"><span class="nick" style="color:#389600"><a href="#020431" label="[02:04:31]">&lt;oriansj&gt;</a></span><span class="message">if you have a test that requires a blob; build it as part of the test so that everyone knows exactly whats up</span></div><div class="line" id="020537"><span class="nick" style="color:#389600"><a href="#020537" label="[02:05:37]">&lt;oriansj&gt;</a></span><span class="message">and I believe there is a path one could build zig without binaries but the window to document that in guix is closing.</span></div><div class="line" id="023309"><span class="nick" style="color:#389600"><a href="#023309" label="[02:33:09]">&lt;oriansj&gt;</a></span><span class="message">and I think the idempotent rebuilds is knocking on a very common idea that; we can encode what is needed to build a program and we should. Then the entire build question becomes a solved problem with fixed assets.</span></div><div class="line" id="035759"><span class="nick" style="color:#8dd3c7"><a href="#035759" label="[03:57:59]">&lt;robin&gt;</a></span><span class="message">oriansj, what is closing the window re: zig? bootstrapping complexity?</span></div><div class="line" id="035845"><span class="nick" style="color:#389600"><a href="#035845" label="[03:58:45]">&lt;oriansj&gt;</a></span><span class="message">robin: internet history disappearing with the bits and details needed</span></div><div class="line" id="035901"><span class="nick" style="color:#8dd3c7"><a href="#035901" label="[03:59:01]">&lt;robin&gt;</a></span><span class="message">ah, ty</span></div><div class="line" id="040009"><span class="nick" style="color:#389600"><a href="#040009" label="[04:00:09]">&lt;oriansj&gt;</a></span><span class="message">once the build chain is in guix and the bits mirrored into the Software Heritage archive, then it'll stick around for a while (basically until something crazy happens)</span></div><div class="line" id="043339"><span class="nick" style="color:#2e2a4a"><a href="#043339" label="[04:33:39]">&lt;andydude&gt;</a></span><span class="message">What is the software heritage archive?</span></div><div class="line" id="044643"><span class="nick" style="color:#2e2a4a"><a href="#044643" label="[04:46:43]">&lt;andydude&gt;</a></span><span class="message">Sounds like GH code vault</span></div><div class="line" id="045050"><span class="nick" style="color:#6b8072"><a href="#045050" label="[04:50:50]">&lt;AwesomeAdam54321&gt;</a></span><span class="message">andydude: It's an archive of source code for preservation</span></div><div class="line" id="052934"><span class="nick" style="color:#8dd3c7"><a href="#052934" label="[05:29:34]">&lt;robin&gt;</a></span><span class="message">oriansj, d'you know if anyone's working on zig stuff?</span></div><div class="line" id="052953"><span class="nick" style="color:#8dd3c7"><a href="#052953" label="[05:29:53]">&lt;robin&gt;</a></span><span class="message">sounds like something i might be able to handle, plus i know a very early contributor</span></div><div class="line" id="053626"><span class="nick" style="color:#2e2a4a"><a href="#053626" label="[05:36:26]">&lt;andydude&gt;</a></span><span class="message">I like zig</span></div><div class="line" id="055023"><span class="nick" style="color:#2e2a4a"><a href="#055023" label="[05:50:23]">&lt;andydude&gt;</a></span><span class="message">There is one thing I don't like about Zig</span></div><div class="line" id="055119"><span class="nick" style="color:#2e2a4a"><a href="#055119" label="[05:51:19]">&lt;andydude&gt;</a></span><span class="message">and that's the tendency/tradition of using structs like JavaScript people use objects</span></div><div class="line" id="055332"><span class="nick" style="color:#2e2a4a"><a href="#055332" label="[05:53:32]">&lt;andydude&gt;</a></span><span class="message">I prefer closed/well-defined structs over open/hash-table type maps</span></div><div class="line" id="062105"><span class="nick" style="color:#2e2a4a"><a href="#062105" label="[06:21:05]">&lt;andydude&gt;</a></span><span class="message">So my scheme hex0 was short, for some reason it turned into several pages when I wrote it in python</span></div><div class="line" id="062131"><span class="nick" style="color:#2e2a4a"><a href="#062131" label="[06:21:31]">&lt;andydude&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/andydude/3c0dbe962c8b723a9547702bba21a76c">https://gist.github.com/andydude/3c0dbe962c8b723a9547702bba21a76c</a> </span></div><div class="line" id="063718"><span class="nick" style="color:#80b1d3"><a href="#063718" label="[06:37:18]">&lt;pabs3&gt;</a></span><span class="message">andydude: <a rel="nofollow" href="https://archive.softwareheritage.org/">https://archive.softwareheritage.org/</a>  - they import all of GitHub/GitLab (but have a backlog), Debian/Guix and various other distros, lots of other forges</span></div><div class="line" id="063849"><span class="nick" style="color:#80b1d3"><a href="#063849" label="[06:38:49]">&lt;pabs3&gt;</a></span><span class="message">oriansj: re internet history disappearing, if anything is still up and needs saving imminently, I'm part of ArchiveTeam and we can save (to archive.org) at-risk sites (or proactively save others) <a rel="nofollow" href="https://wiki.archiveteam.org/">https://wiki.archiveteam.org/</a> </span></div><div class="line" id="063938"><span class="nick" style="color:#80b1d3"><a href="#063938" label="[06:39:38]">&lt;pabs3&gt;</a></span><span class="message">ArchiveTeam also have a code archiving project, but its more about at-risk stuff <a rel="nofollow" href="https://wiki.archiveteam.org/index.php/Codearchiver">https://wiki.archiveteam.org/index.php/Codearchiver</a> </span></div><div class="line" id="064025"><span class="nick" style="color:#80b1d3"><a href="#064025" label="[06:40:25]">&lt;pabs3&gt;</a></span><span class="message">(I'm also part of SWH a bit)</span></div><div class="line" id="064650"><span class="nick" style="color:#80b1d3"><a href="#064650" label="[06:46:50]">&lt;pabs3&gt;</a></span><span class="message">sam_: the repro builds folks are also working on reproducing the existing binaries, as well as the existing fuzzing stuff to reduce sources of non-determinism</span></div><div class="line" id="064838"><span class="nick" style="color:#2e2a4a"><a href="#064838" label="[06:48:38]">&lt;andydude&gt;</a></span><span class="message">my understanding is the guix removes timestamps and replaces parts of scripts to make sure there's none of that</span></div><div class="line" id="064949"><span class="nick" style="color:#2e2a4a"><a href="#064949" label="[06:49:49]">&lt;andydude&gt;</a></span><span class="message">one project I would save is xar</span></div><div class="line" id="065336"><span class="nick" style="color:#2e2a4a"><a href="#065336" label="[06:53:36]">&lt;andydude&gt;</a></span><span class="message">looks like it's already archived</span></div><div class="line" id="065647"><span class="nick" style="color:#2e2a4a"><a href="#065647" label="[06:56:47]">&lt;andydude&gt;</a></span><span class="message">Apple put some notice in their fork saying that it's unmaintained, but I'm also sure it's used by 100% of the installers in macos</span></div><div class="line" id="120301"><span class="nick" style="color:#389600"><a href="#120301" label="[12:03:01]">&lt;oriansj&gt;</a></span><span class="message">hmm; I see 0.9.1 and 0.10.1 in guix already. But looking at the 0.10.1 build, I think it is doing the build with the generated sources as 0.10 onward are written in zig and not C; so clang couldn't be compiling the human written sources.</span></div><div class="line" id="122753"><span class="nick" style="color:#6d2462"><a href="#122753" label="[12:27:53]">&lt;aggi&gt;</a></span><span class="message">the GNU buildsystem side is rather fragile</span></div><div class="line" id="122839"><span class="nick" style="color:#6d2462"><a href="#122839" label="[12:28:39]">&lt;aggi&gt;</a></span><span class="message">setting LIBTOOL=&quot;slibtool -all-static&quot;; the entire tree collapses</span></div><div class="line" id="122848"><span class="nick" style="color:#6d2462"><a href="#122848" label="[12:28:48]">&lt;aggi&gt;</a></span><span class="message">AR=&quot;tcc -ar&quot;... have fun</span></div><div class="line" id="123442"><span class="nick" style="color:#6d2462"><a href="#123442" label="[12:34:42]">&lt;aggi&gt;</a></span><span class="message">i am trying to cover all relevant test-cases (with cross-compilation involved), and keeping this fully reproducible/deterministic, all emerge logs, sources, distfiles, hashes archived</span></div><div class="line" id="123614"><span class="nick" style="color:#6d2462"><a href="#123614" label="[12:36:14]">&lt;aggi&gt;</a></span><span class="message">all changes made can be diffed, from my hotfix-overlay against gentoo portage tree (except for what i had to pull manually from the old gentoo-archives predating their year2013 transition)</span></div><div class="line" id="123711"><span class="nick" style="color:#6d2462"><a href="#123711" label="[12:37:11]">&lt;aggi&gt;</a></span><span class="message">hence, if an ebuild did not come from mainline portage tree, it came from their archives, and a few dozen ebuilds i had written myself</span></div><div class="line" id="123746"><span class="nick" style="color:#6d2462"><a href="#123746" label="[12:37:46]">&lt;aggi&gt;</a></span><span class="message">i think it's completely tracked with timestamps and hashes, didn't miss anything</span></div><div class="line" id="123842"><span class="nick" style="color:#6d2462"><a href="#123842" label="[12:38:42]">&lt;aggi&gt;</a></span><span class="message">it is important the gentoo-archives and their distfiles do not vanish</span></div><div class="line" id="123948"><span class="nick" style="color:#6d2462"><a href="#123948" label="[12:39:48]">&lt;aggi&gt;</a></span><span class="message">i did mirror the distfiles, but quit syncing 2022, because it's too much</span></div><div class="line" id="124029"><span class="nick" style="color:#6d2462"><a href="#124029" label="[12:40:29]">&lt;aggi&gt;</a></span><span class="message">removing all c++ dependencies simplified the whole approach</span></div><div class="line" id="124127"><span class="nick" style="color:#6d2462"><a href="#124127" label="[12:41:27]">&lt;aggi&gt;</a></span><span class="message">the principle issue with this, those depenendencies are not _optional_ with what upstream did since ~2013</span></div><div class="line" id="124320"><span class="nick" style="color:#6d2462"><a href="#124320" label="[12:43:20]">&lt;aggi&gt;</a></span><span class="message">gentoo, as an exemplary case, covers broader requirements, than what bootstrappable alone did</span></div><div class="line" id="124455"><span class="nick" style="color:#6d2462"><a href="#124455" label="[12:44:55]">&lt;aggi&gt;</a></span><span class="message">the little patching required for tcc-toolchain, is maintained with a tcc-9999.ebuild itself too</span></div><div class="line" id="124520"><span class="nick" style="color:#6d2462"><a href="#124520" label="[12:45:20]">&lt;aggi&gt;</a></span><span class="message">hence patches and build-time configuration can be scraped easily</span></div><div class="line" id="124608"><span class="nick" style="color:#6d2462"><a href="#124608" label="[12:46:08]">&lt;aggi&gt;</a></span><span class="message">current status is, i have to abandon both, autotools/perl and gentoo/python</span></div><div class="line" id="124716"><span class="nick" style="color:#6d2462"><a href="#124716" label="[12:47:16]">&lt;aggi&gt;</a></span><span class="message">which is remarkable, because otherwise many complicated builds succeeded (such as statically linked mplayer, ffmpeg, with tcc-toolchain _only_)</span></div><div class="line" id="124804"><span class="nick" style="color:#6d2462"><a href="#124804" label="[12:48:04]">&lt;aggi&gt;</a></span><span class="message">meaning, in principle, my approach has proven appropriate, but among ~500ebuilds python/gentoo and perl/gnu refused to</span></div><div class="line" id="124909"><span class="nick" style="color:#6d2462"><a href="#124909" label="[12:49:09]">&lt;aggi&gt;</a></span><span class="message">there wasn't any thought given to this problem yet</span></div><div class="line" id="124948"><span class="nick" style="color:#6d2462"><a href="#124948" label="[12:49:48]">&lt;aggi&gt;</a></span><span class="message">gentoo itself reported bootstrapping success, but this includes inviting upstream madhouse</span></div><div class="line" id="125237"><span class="nick" style="color:#6d2462"><a href="#125237" label="[12:52:37]">&lt;aggi&gt;</a></span><span class="message">full tcc-toolchain support within gentoo and GNU isn't some fringe niche corner-case, currently it is the _only_ viable option</span></div><div class="line" id="125331"><span class="nick" style="color:#6d2462"><a href="#125331" label="[12:53:31]">&lt;aggi&gt;</a></span><span class="message">i consider it a bad excuse, when #bootstrappable argues a fast transition towards gcc/binutils were necessary</span></div><div class="line" id="125446"><span class="nick" style="color:#6d2462"><a href="#125446" label="[12:54:46]">&lt;aggi&gt;</a></span><span class="message">or, to put it another way: what's not passing acceptence criteria of bootstrappable isn't worth bootstrapping nor archival</span></div><div class="line" id="125545"><span class="nick" style="color:#6d2462"><a href="#125545" label="[12:55:45]">&lt;aggi&gt;</a></span><span class="message">if perl/autotools and python/gentoo didn't pass with tcc-toolchain (and/or related static linking problem), then it's not worth the efforts</span></div><div class="line" id="125608"><span class="nick" style="color:#6d2462"><a href="#125608" label="[12:56:08]">&lt;aggi&gt;</a></span><span class="message">this too affects linux-kernel itself</span></div><div class="line" id="125914"><span class="nick" style="color:#6d2462"><a href="#125914" label="[12:59:14]">&lt;aggi&gt;</a></span><span class="message">the choice either bootstrappable or gentoo or linux had to make, was either fully supporting tcc, or don't</span></div><div class="line" id="125949"><span class="nick" style="color:#6d2462"><a href="#125949" label="[12:59:49]">&lt;aggi&gt;</a></span><span class="message">to my understanding, linux-kernel already made this decision, without support for tcc (except some experimental linux-2.4 proof-of-concept)</span></div><div class="line" id="130034"><span class="nick" style="color:#6d2462"><a href="#130034" label="[13:00:34]">&lt;aggi&gt;</a></span><span class="message">gentoo had made the decision too</span></div><div class="line" id="130114"><span class="nick" style="color:#234e69"><a href="#130114" label="[13:01:14]">&lt;lanodan&gt;</a></span><span class="message">Which makes me wonder about swapping linux-kernel for fiwix, wouldn't be very modern but at least you'd get a rather simple system</span></div><div class="line" id="130241"><span class="nick" style="color:#6d2462"><a href="#130241" label="[13:02:41]">&lt;aggi&gt;</a></span><span class="message">I kept linux-2.4/tcc on TODO</span></div><div class="line" id="130331"><span class="nick" style="color:#6c3d55"><a href="#130331" label="[13:03:31]">&lt;nikolar&gt;</a></span><span class="message">now that you mention it, what's the newest linux that can be built with only tcc</span></div><div class="line" id="130356"><span class="nick" style="color:#6d2462"><a href="#130356" label="[13:03:56]">&lt;aggi&gt;</a></span><span class="message">linux-2.4</span></div><div class="line" id="130421"><span class="nick" style="color:#6c3d55"><a href="#130421" label="[13:04:21]">&lt;nikolar&gt;</a></span><span class="message">ah ok</span></div><div class="line" id="130434"><span class="nick" style="color:#6c3d55"><a href="#130434" label="[13:04:34]">&lt;nikolar&gt;</a></span><span class="message">do newer versions use a lot of compiler specific feature</span></div><div class="line" id="130437"><span class="nick" style="color:#6c3d55"><a href="#130437" label="[13:04:37]">&lt;nikolar&gt;</a></span><span class="message">features</span></div><div class="line" id="130446"><span class="nick" style="color:#6d2462"><a href="#130446" label="[13:04:46]">&lt;aggi&gt;</a></span><span class="message">there was several transitions</span></div><div class="line" id="130455"><span class="nick" style="color:#234e69"><a href="#130455" label="[13:04:55]">&lt;lanodan&gt;</a></span><span class="message">Maybe one could try to rebase the patches on more current versions but that sounds horribly tedious, specially without upstream support</span></div><div class="line" id="130506"><span class="nick" style="color:#6c3d55"><a href="#130506" label="[13:05:06]">&lt;nikolar&gt;</a></span><span class="message">indeed</span></div><div class="line" id="130511"><span class="nick" style="color:#6c3d55"><a href="#130511" label="[13:05:11]">&lt;nikolar&gt;</a></span><span class="message">the kernel has grown a lot since 2.x</span></div><div class="line" id="130623"><span class="nick" style="color:#6d2462"><a href="#130623" label="[13:06:23]">&lt;aggi&gt;</a></span><span class="message">bootstrappable patching to musl-libc was very helpful</span></div><div class="line" id="130701"><span class="nick" style="color:#6d2462"><a href="#130701" label="[13:07:01]">&lt;aggi&gt;</a></span><span class="message">yet you see... --disable-shared</span></div><div class="line" id="130733"><span class="nick" style="color:#6d2462"><a href="#130733" label="[13:07:33]">&lt;aggi&gt;</a></span><span class="message">and then, you got the fun ones with perl and python following</span></div><div class="line" id="130902"><span class="nick" style="color:#6d2462"><a href="#130902" label="[13:09:02]">&lt;aggi&gt;</a></span><span class="message">even when bootstrappable transitions to gcc/binutils; the side-effects of --disable-shared remained</span></div><div class="line" id="131010"><span class="nick" style="color:#6d2462"><a href="#131010" label="[13:10:10]">&lt;aggi&gt;</a></span><span class="message">at this spot i consider bootstrapping deadlocked/trapped still</span></div><div class="line" id="131324"><span class="nick" style="color:#6c3d55"><a href="#131324" label="[13:13:24]">&lt;nikolar&gt;</a></span><span class="message">is there a repo with tcc compilible linux, i want to mess with it :)</span></div><div class="line" id="131422"><span class="nick" style="color:#6d2462"><a href="#131422" label="[13:14:22]">&lt;aggi&gt;</a></span><span class="message">i got a complete userspace bootstrapped, but it is missing the tools needed to do so: autotools and gentoo, because those aren't self-hosting with tcc</span></div><div class="line" id="131521"><span class="nick" style="color:#6d2462"><a href="#131521" label="[13:15:21]">&lt;aggi&gt;</a></span><span class="message">as a consequence there is the following options: 1) abandoning autotools and gentoo (which is desireable but not feasible currently)</span></div><div class="line" id="131555"><span class="nick" style="color:#6d2462"><a href="#131555" label="[13:15:55]">&lt;aggi&gt;</a></span><span class="message">or 2) repairing perl and python which is very difficult, and wouldn't abandon autotools and gentoo</span></div><div class="line" id="131636"><span class="nick" style="color:#6d2462"><a href="#131636" label="[13:16:36]">&lt;aggi&gt;</a></span><span class="message">option 1) was the recommended approach, but it is enormous efforts necessary to accomplish this</span></div><div class="line" id="131742"><span class="nick" style="color:#6d2462"><a href="#131742" label="[13:17:42]">&lt;aggi&gt;</a></span><span class="message">option 3) is the status quo, i can emit a tcc-compiled distribution, but it isn't self-hosting</span></div><div class="line" id="131822"><span class="nick" style="color:#6d2462"><a href="#131822" label="[13:18:22]">&lt;aggi&gt;</a></span><span class="message">this at least is sufficient, to continue development, to approach various milestones gradually</span></div><div class="line" id="131906"><span class="nick" style="color:#6d2462"><a href="#131906" label="[13:19:06]">&lt;aggi&gt;</a></span><span class="message">but abandoning gentoo and autotools is an &quot;all-at-once&quot; &quot;all-or-nothing&quot; mega task, and i am _forced_ to do so currently</span></div><div class="line" id="131937"><span class="nick" style="color:#6d2462"><a href="#131937" label="[13:19:37]">&lt;aggi&gt;</a></span><span class="message">or anyone else, who would try to fully support tcc</span></div><div class="line" id="132023"><span class="nick" style="color:#6d2462"><a href="#132023" label="[13:20:23]">&lt;aggi&gt;</a></span><span class="message">so far it seems, noone had tried yet, although it is feasible</span></div><div class="line" id="132128"><span class="nick" style="color:#6d2462"><a href="#132128" label="[13:21:28]">&lt;aggi&gt;</a></span><span class="message">and desirable, but it was avoided, and/or close to sabotaged GNU/linux remained portable accross toolchains (including a quality one that tcc is)</span></div><br /></div></body></html>