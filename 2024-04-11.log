<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-04-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="172456"><span class="nick" style="color:#389600"><a href="#172456" label="[17:24:56]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-autoconf/2024-04/msg00026.html">https://lists.gnu.org/archive/html/bug-autoconf/2024-04/msg00026.html</a>  sigh...</span></div><div class="line" id="172606"><span class="nick" style="color:#389600"><a href="#172606" label="[17:26:06]">&lt;Googulator&gt;</a></span><span class="message">&quot;As an upstream maintainer, I have chosen (...) to give *tarballs* to my users, not git repositories.&quot; - This seems to be a core misunderstanding/disagreement between upstream maintainers and distributions.</span></div><div class="line" id="172618"><span class="nick" style="color:#389600"><a href="#172618" label="[17:26:18]">&lt;Googulator&gt;</a></span><span class="message">Distributors aren't *users,*, they're, well, distributors.</span></div><div class="line" id="173857"><span class="nick" style="color:#8dd3c7"><a href="#173857" label="[17:38:57]">&lt;sam_&gt;</a></span><span class="message">I tried to push back a bit</span></div><div class="line" id="173904"><span class="nick" style="color:#8dd3c7"><a href="#173904" label="[17:39:04]">&lt;sam_&gt;</a></span><span class="message">not sure if I will reply more there</span></div><div class="line" id="184142"><span class="nick" style="color:#2e2a4a"><a href="#184142" label="[18:41:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; Googulator: Might as well just provide tested binaries to users and don't rebuild them as that invalidates release testing...</span></div><div class="line" id="192312"><span class="nick" style="color:#389600"><a href="#192312" label="[19:23:12]">&lt;Googulator&gt;</a></span><span class="message">IMO the fundamental issue is that there are more people interacting with one's maintained software than just users and developers</span></div><div class="line" id="192344"><span class="nick" style="color:#389600"><a href="#192344" label="[19:23:44]">&lt;Googulator&gt;</a></span><span class="message">the needs of a distributor or integrator are quite different from those of either users or developers</span></div><div class="line" id="192436"><span class="nick" style="color:#389600"><a href="#192436" label="[19:24:36]">&lt;Googulator&gt;</a></span><span class="message">and then you have auditors, etc. each with their own workflows</span></div><div class="line" id="192454"><span class="nick" style="color:#389600"><a href="#192454" label="[19:24:54]">&lt;Googulator&gt;</a></span><span class="message">none of these &quot;non-developers&quot; are &quot;users&quot;</span></div><div class="line" id="192639"><span class="nick" style="color:#389600"><a href="#192639" label="[19:26:39]">&lt;Googulator&gt;</a></span><span class="message">for a user, it's entirely fine to just download a release tarball, run the included pregen build script, and be done with it (heck, most users are fine with just downloading prebuilt binaries, if available)</span></div><div class="line" id="192856"><span class="nick" style="color:#389600"><a href="#192856" label="[19:28:56]">&lt;Googulator&gt;</a></span><span class="message">a &quot;plain old&quot; developer will just work with the Git repo, make changes, submit them, and not care about the build system being sane beyond &quot;works for me&quot; - getting that change into a release tarball is the job of the maintainers anyway</span></div><div class="line" id="193035"><span class="nick" style="color:#8dd3c7"><a href="#193035" label="[19:30:35]">&lt;sam_&gt;</a></span><span class="message">yes</span></div><div class="line" id="193039"><span class="nick" style="color:#389600"><a href="#193039" label="[19:30:39]">&lt;Googulator&gt;</a></span><span class="message">but a distributor/integrator isn't just contributing back, but also distributing their own version, for which they have to take responsibility - and you can't reasonably do that unless you can trust the sources you work with, as well as that what you put out is indeed properly derived from the source</span></div><div class="line" id="193138"><span class="nick" style="color:#389600"><a href="#193138" label="[19:31:38]">&lt;Googulator&gt;</a></span><span class="message">and that requires either that the release tarballs be derived from the repository in a reproducible and provably correct way, or that the repository is directly usable for distribution, bypassing the user-facing tarball</span></div><div class="line" id="193251"><span class="nick" style="color:#389600"><a href="#193251" label="[19:32:51]">&lt;Googulator&gt;</a></span><span class="message">and an auditor, of course, needs access to both the Source of Truth (the repository) and any &quot;convenience outputs&quot; (source tarballs, binaries, HTML documentation, etc.) derived from it, in a way that permits meaningful comparison</span></div><div class="line" id="193303"><span class="nick" style="color:#8dd3c7"><a href="#193303" label="[19:33:03]">&lt;sam_&gt;</a></span><span class="message">that's a great point Googulator (wrt distributing our own, responsibility, etc)</span></div><div class="line" id="193431"><span class="nick" style="color:#389600"><a href="#193431" label="[19:34:31]">&lt;Googulator&gt;</a></span><span class="message">there's even established precedent that a redistributor is responsible for supplying the corresponding source code, and can't pass that responsibility on to upstream</span></div><div class="line" id="193524"><span class="nick" style="color:#389600"><a href="#193524" label="[19:35:24]">&lt;Googulator&gt;</a></span><span class="message">and if that's true for supplying source, it's not far-fetched to think that a redistributor is also responsible for the correctness &amp; security of distributed code</span></div><div class="line" id="193819"><span class="nick" style="color:#389600"><a href="#193819" label="[19:38:19]">&lt;Googulator&gt;</a></span><span class="message">In the case of the tarballs in question, I would even argue that the tarball is a distinct source distribution from the upstream Git, and so any non-source included needs source code distributed alongside it, in such a way that the non-source be reproducibly regenerated from it</span></div><div class="line" id="193851"><span class="nick" style="color:#6b8072"><a href="#193851" label="[19:38:51]">&lt;stikonas&gt;</a></span><span class="message">Googulator: indeed, very nice points. You should reply to that thread</span></div><div class="line" id="194138"><span class="nick" style="color:#389600"><a href="#194138" label="[19:41:38]">&lt;Googulator&gt;</a></span><span class="message">maybe we need to propose a new tool to autotools, named &quot;autopwn&quot;, to automatically inject a backdoor, and a corresponding &quot;-p / --pwn&quot; option to autoreconf :)</span></div><div class="line" id="194218"><span class="nick" style="color:#8dd3c7"><a href="#194218" label="[19:42:18]">&lt;sam_&gt;</a></span><span class="message">please do consider replying with these</span></div><div class="line" id="194225"><span class="nick" style="color:#8dd3c7"><a href="#194225" label="[19:42:25]">&lt;sam_&gt;</a></span><span class="message">i think they might be persuasive</span></div><div class="line" id="195649"><span class="nick" style="color:#389600"><a href="#195649" label="[19:56:49]">&lt;Googulator&gt;</a></span><span class="message">I do like the idea of providing &quot;-src&quot; tarballs, although the naming is IMO not ideal</span></div><div class="line" id="195719"><span class="nick" style="color:#389600"><a href="#195719" label="[19:57:19]">&lt;Googulator&gt;</a></span><span class="message">&quot;-user&quot; vs &quot;-reference&quot; (or &quot;-redist&quot;) might be better</span></div><div class="line" id="195756"><span class="nick" style="color:#389600"><a href="#195756" label="[19:57:56]">&lt;Googulator&gt;</a></span><span class="message">another gem from the same mail: &quot;(or, well, GNU has chosen for me, even before I was present) to give *tarballs* to my users, not git repositories&quot;</span></div><div class="line" id="195810"><span class="nick" style="color:#389600"><a href="#195810" label="[19:58:10]">&lt;Googulator&gt;</a></span><span class="message">...that &quot;choice&quot; was made before git was invented</span></div><div class="line" id="195910"><span class="nick" style="color:#389600"><a href="#195910" label="[19:59:10]">&lt;Googulator&gt;</a></span><span class="message">indeed, quite a few GNU tarballs used in live-bootstrap predate the use of any form of real version control by GNU</span></div><div class="line" id="201026"><span class="nick" style="color:#389600"><a href="#201026" label="[20:10:26]">&lt;Googulator&gt;</a></span><span class="message">(I was thinking of Bash-2.05, but it turns out Bash barely uses version control even today - see <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/bash.git/log/?h=devel&amp;ofs=250">https://git.savannah.gnu.org/cgit/bash.git/log/?h=devel&amp;ofs=250</a>  )</span></div><div class="line" id="201153"><span class="nick" style="color:#389600"><a href="#201153" label="[20:11:53]">&lt;Googulator&gt;</a></span><span class="message">only snapshot commits (snapshots of what?) until March 2021, then finally real commits, but all tagged as exclusively authored by Chet Ramey, the maintainer - I somehow doubt that even that is a proper development history</span></div><div class="line" id="201220"><span class="nick" style="color:#389600"><a href="#201220" label="[20:12:20]">&lt;Googulator&gt;</a></span><span class="message">and the release branches are literally just the release tarball contents committed, even for recent releases, with no connection to the devel branch</span></div><div class="line" id="202909"><span class="nick" style="color:#6b8072"><a href="#202909" label="[20:29:09]">&lt;stikonas&gt;</a></span><span class="message">yeah, and even if &quot;choice was made&quot;, it doesn't mean that things should be set in stone</span></div><div class="line" id="210254"><span class="nick" style="color:#389600"><a href="#210254" label="[21:02:54]">&lt;Googulator&gt;</a></span><span class="message">Bash's Git history does in fact contain misattributed commits: <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-bash/2023-12/msg00061.html">https://lists.gnu.org/archive/html/bug-bash/2023-12/msg00061.html</a>  -&gt; <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/bash.git/commit/?h=devel&amp;id=aa2d23cfac90bebe2924ba075fef0a03fddd521d">https://git.savannah.gnu.org/cgit/bash.git/commit/?h=devel&amp;id=aa2d23cfac90bebe2924ba075fef0a03fddd521d</a>  (the real author is only indirectly credited in</span></div><div class="line" id="210256"><span class="nick" style="color:#389600"><a href="#210256" label="[21:02:56]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/bash.git/diff/CWRU/CWRU.chlog?h=devel&amp;id=aa2d23cfac90bebe2924ba075fef0a03fddd521d">https://git.savannah.gnu.org/cgit/bash.git/diff/CWRU/CWRU.chlog?h=devel&amp;id=aa2d23cfac90bebe2924ba075fef0a03fddd521d</a>) </span></div><div class="line" id="210319"><span class="nick" style="color:#389600"><a href="#210319" label="[21:03:19]">&lt;Googulator&gt;</a></span><span class="message">such behavior should probably trigger more scrutiny these days after the XZ incident</span></div><div class="line" id="215325"><span class="nick" style="color:#6b8072"><a href="#215325" label="[21:53:25]">&lt;stikonas&gt;</a></span><span class="message">Googulator: I guess the way it works there is patches are mailed, then &quot;patch -p1&quot; and git commit</span></div><div class="line" id="215335"><span class="nick" style="color:#6b8072"><a href="#215335" label="[21:53:35]">&lt;stikonas&gt;</a></span><span class="message">instead of git am</span></div><div class="line" id="215344"><span class="nick" style="color:#6b8072"><a href="#215344" label="[21:53:44]">&lt;stikonas&gt;</a></span><span class="message">probably predates &quot;git am&quot;</span></div><div class="line" id="215354"><span class="nick" style="color:#6b8072"><a href="#215354" label="[21:53:54]">&lt;stikonas&gt;</a></span><span class="message">in svn there wasn't this much distinction between committer and author</span></div><div class="line" id="215356"><span class="nick" style="color:#389600"><a href="#215356" label="[21:53:56]">&lt;Googulator&gt;</a></span><span class="message">The patch in question is from 2023</span></div><div class="line" id="215413"><span class="nick" style="color:#8dd3c7"><a href="#215413" label="[21:54:13]">&lt;sam_&gt;</a></span><span class="message">bash still does this, yes</span></div><div class="line" id="215414"><span class="nick" style="color:#8dd3c7"><a href="#215414" label="[21:54:14]">&lt;sam_&gt;</a></span><span class="message">it's hell</span></div><div class="line" id="215416"><span class="nick" style="color:#6b8072"><a href="#215416" label="[21:54:16]">&lt;stikonas&gt;</a></span><span class="message">exactly, so this is workflow inertia</span></div><div class="line" id="215426"><span class="nick" style="color:#389600"><a href="#215426" label="[21:54:26]">&lt;Googulator&gt;</a></span><span class="message">and it's not a simple &quot;patch -p1&quot;, the actual commit contents are also slightly different</span></div><div class="line" id="215535"><span class="nick" style="color:#6b8072"><a href="#215535" label="[21:55:35]">&lt;stikonas&gt;</a></span><span class="message">I guess plus &quot;review&quot;</span></div><div class="line" id="220624"><span class="nick" style="color:#8dd3c7"><a href="#220624" label="[22:06:24]">&lt;sam_&gt;</a></span><span class="message">also like</span></div><div class="line" id="220625"><span class="nick" style="color:#8dd3c7"><a href="#220625" label="[22:06:25]">&lt;sam_&gt;</a></span><span class="message">bus-factor?</span></div><div class="line" id="220631"><span class="nick" style="color:#8dd3c7"><a href="#220631" label="[22:06:31]">&lt;sam_&gt;</a></span><span class="message">people have to retire at some point</span></div><div class="line" id="220635"><span class="nick" style="color:#8dd3c7"><a href="#220635" label="[22:06:35]">&lt;sam_&gt;</a></span><span class="message">it is way easier to inherit something with vcs..</span></div><div class="line" id="220732"><span class="nick" style="color:#8dd3c7"><a href="#220732" label="[22:07:32]">&lt;sam_&gt;</a></span><span class="message">or fork</span></div><div class="line" id="230049"><span class="nick" style="color:#389600"><a href="#230049" label="[23:00:49]">&lt;Googulator&gt;</a></span><span class="message">fossy: looking at <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/292">https://github.com/fosslinux/live-bootstrap/issues/292</a>,  is this list still up to date?</span></div><div class="line" id="230106"><span class="nick" style="color:#389600"><a href="#230106" label="[23:01:06]">&lt;Googulator&gt;</a></span><span class="message">given that it predates even the simplify refactor</span></div><div class="line" id="230212"><span class="nick" style="color:#6b8072"><a href="#230212" label="[23:02:12]">&lt;stikonas&gt;</a></span><span class="message">Googulator: kind of up to date</span></div><div class="line" id="230248"><span class="nick" style="color:#6b8072"><a href="#230248" label="[23:02:48]">&lt;stikonas&gt;</a></span><span class="message">half of the remaining items are documentation anyway</span></div><div class="line" id="230257"><span class="nick" style="color:#389600"><a href="#230257" label="[23:02:57]">&lt;Googulator&gt;</a></span><span class="message">&quot;Provide more detailed instructions on how to prepare and run the project, most notably without rootfs.py&quot; - is this still a goal?</span></div><div class="line" id="230318"><span class="nick" style="color:#389600"><a href="#230318" label="[23:03:18]">&lt;Googulator&gt;</a></span><span class="message">with the recent refactors, if anything, dependency on Python has increased significantly</span></div><div class="line" id="230446"><span class="nick" style="color:#389600"><a href="#230446" label="[23:04:46]">&lt;Googulator&gt;</a></span><span class="message">but basically the big sticking point is &quot;mes 0.26.1 (unreleased)&quot;</span></div><div class="line" id="230736"><span class="nick" style="color:#389600"><a href="#230736" label="[23:07:36]">&lt;Googulator&gt;</a></span><span class="message">also OpenSSL 3.0 - marked &quot;optional&quot;, but 1.1.1 has reached its EOL</span></div><div class="line" id="231358"><span class="nick" style="color:#6b8072"><a href="#231358" label="[23:13:58]">&lt;stikonas&gt;</a></span><span class="message">Googulator: well, instructions could still be written on how to do it without python</span></div><div class="line" id="231413"><span class="nick" style="color:#6b8072"><a href="#231413" label="[23:14:13]">&lt;stikonas&gt;</a></span><span class="message">and yes, mes 0.26 is very slow, so we are waiting for that</span></div><div class="line" id="231510"><span class="nick" style="color:#389600"><a href="#231510" label="[23:15:10]">&lt;Googulator&gt;</a></span><span class="message">slowness isn't the main issue there (a patch already exists for that), but rather <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/306">https://github.com/fosslinux/live-bootstrap/issues/306</a> </span></div><div class="line" id="231528"><span class="nick" style="color:#389600"><a href="#231528" label="[23:15:28]">&lt;Googulator&gt;</a></span><span class="message">which, as I understand, needs an as-of-yet-unpublished patch on top of 0.26</span></div><div class="line" id="231549"><span class="nick" style="color:#389600"><a href="#231549" label="[23:15:49]">&lt;Googulator&gt;</a></span><span class="message">if it was just about slowness, 0.25 would be fine</span></div><div class="line" id="232220"><span class="nick" style="color:#389600"><a href="#232220" label="[23:22:20]">&lt;Googulator&gt;</a></span><span class="message">looking at the current documentation we currently have for Pythonless build, there is one major issue: &quot;Only copy distfiles listed in steps/pre-network-sources into this disk.&quot;</span></div><div class="line" id="232326"><span class="nick" style="color:#389600"><a href="#232326" label="[23:23:26]">&lt;Googulator&gt;</a></span><span class="message">pre-network-sources is of course gone, the file list is instead directly derived from the manifest &amp; sources files using Python code that's unreasonable to replicate by hand</span></div><div class="line" id="234656"><span class="nick" style="color:#389600"><a href="#234656" label="[23:46:56]">&lt;Googulator&gt;</a></span><span class="message">stikonas: what do you think about making <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/394">https://github.com/fosslinux/live-bootstrap/issues/394</a>  a 1.0 dependency?</span></div><div class="line" id="235119"><span class="nick" style="color:#6b8072"><a href="#235119" label="[23:51:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, worth including</span></div><div class="line" id="235128"><span class="nick" style="color:#6b8072"><a href="#235128" label="[23:51:28]">&lt;stikonas&gt;</a></span><span class="message">it's an easy task anyway</span></div><div class="line" id="235732"><span class="nick" style="color:#6b8072"><a href="#235732" label="[23:57:32]">&lt;stikonas&gt;</a></span><span class="message">Googulator: generally, I think <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/306">https://github.com/fosslinux/live-bootstrap/issues/306</a>  is the main blocker</span></div><div class="line" id="235844"><span class="nick" style="color:#389600"><a href="#235844" label="[23:58:44]">&lt;Googulator&gt;</a></span><span class="message">Is there any update on that one? Last I heard was that there exists privately a version of / patch for Mes that solves it, but it's not even published, let alone included in a real Mes release</span></div><div class="line" id="235912"><span class="nick" style="color:#389600"><a href="#235912" label="[23:59:12]">&lt;Googulator&gt;</a></span><span class="message">it would be great to at least get that patch published</span></div><br /></div></body></html>