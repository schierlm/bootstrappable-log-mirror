<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000021"><span class="nick" style="color:#389600"><a href="#000021" label="[00:00:21]">&lt;stikonas&gt;</a></span><span class="message">hmm, I just tried to use configure script on binutils to try it out and I'm getting problems with alloca...</span></div><div class="line" id="000025"><span class="nick" style="color:#389600"><a href="#000025" label="[00:00:25]">&lt;stikonas&gt;</a></span><span class="message"> /after/include/alloca.h:39: error: incompatible types for redefinition of 'alloca'</span></div><div class="line" id="000036"><span class="nick" style="color:#389600"><a href="#000036" label="[00:00:36]">&lt;stikonas&gt;</a></span><span class="message">both with tcc-mes and tcc-musl</span></div><div class="line" id="000054"><span class="nick" style="color:#389600"><a href="#000054" label="[00:00:54]">&lt;stikonas&gt;</a></span><span class="message"> /after/include/musl/alloca.h:11: error: incompatible types for redefinition of 'alloca'</span></div><div class="line" id="000103"><span class="nick" style="color:#389600"><a href="#000103" label="[00:01:03]">&lt;stikonas&gt;</a></span><span class="message">I wonder why... It works for guix bootstrap...</span></div><div class="line" id="003830"><span class="nick" style="color:#2e2a4a"><a href="#003830" label="[00:38:30]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610">https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610</a>  &quot;Dependency Confusion: How I Hacked Into Apple, Microsoft and Dozens of Other Companies&quot;</span></div><div class="line" id="004159"><span class="nick" style="color:#389600"><a href="#004159" label="[00:41:59]">&lt;stikonas&gt;</a></span><span class="message">pder: ok, I managed to build gawk-3.0.4 , we'll see if it's new enough...</span></div><div class="line" id="014735"><span class="nick" style="color:#6b8072"><a href="#014735" label="[01:47:35]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: thank god we are doing manual dependency management here.</span></div><div class="line" id="020445"><span class="nick" style="color:#6b8072"><a href="#020445" label="[02:04:45]">&lt;OriansJ&gt;</a></span><span class="message">but to be honest, that vulnerability wouldn't have done shit if developers followed a proper code promotion process but no, lazy devs gotta be lazy and run untested crap in production.</span></div><div class="line" id="024240"><span class="nick" style="color:#2e2a4a"><a href="#024240" label="[02:42:40]">&lt;Hagfish&gt;</a></span><span class="message">or at the very least run the build in a sandbox that can only access whitelisted resources (including DNS entries)</span></div><div class="line" id="024355"><span class="nick" style="color:#2e2a4a"><a href="#024355" label="[02:43:55]">&lt;Hagfish&gt;</a></span><span class="message">anyway, i'm excited to hear about gawk 3, and that there's some work toward perl too</span></div><div class="line" id="024436"><span class="nick" style="color:#2e2a4a"><a href="#024436" label="[02:44:36]">&lt;Hagfish&gt;</a></span><span class="message">i think perl has been difficult to make reproducible in debian (but i'm not sure of the current state)</span></div><div class="line" id="024551"><span class="nick" style="color:#2e2a4a"><a href="#024551" label="[02:45:51]">&lt;Hagfish&gt;</a></span><span class="message">it might be &quot;reproducible enough&quot; if it only changes based on the factors which that are fixed by the bootstrapping process</span></div><div class="line" id="025729"><span class="nick" style="color:#6b8072"><a href="#025729" label="[02:57:29]">&lt;OriansJ&gt;</a></span><span class="message">the question is when does the Debian team pick up the ball and bootstrap dpkg</span></div><div class="line" id="030748"><span class="nick" style="color:#80b1d3"><a href="#030748" label="[03:07:48]">&lt;pder&gt;</a></span><span class="message">stikonas: I tried removing the musl weak symbols patch and the tcc ignore duplicate symbols patches, and the tcc build fails with 4 undefined symbols including __stdio_exit_needed</span></div><div class="line" id="031852"><span class="nick" style="color:#2e2a4a"><a href="#031852" label="[03:18:52]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/docker/hub-feedback/issues/1925">https://github.com/docker/hub-feedback/issues/1925</a>  &quot;Digests on Dockerhub and those fetched by docker pull do not match&quot;</span></div><div class="line" id="031908"><span class="nick" style="color:#2e2a4a"><a href="#031908" label="[03:19:08]">&lt;Hagfish&gt;</a></span><span class="message">it does feel like the computer industry is moving backwards sometimes</span></div><div class="line" id="040259"><span class="nick" style="color:#6d2462"><a href="#040259" label="[04:02:59]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: surely guix has some kind of patches</span></div><div class="line" id="082832"><span class="nick" style="color:#234e69"><a href="#082832" label="[08:28:32]">&lt;gforce_d11977&gt;</a></span><span class="message">pder: coreutils2: the 'timeout' in CI is a real error, or just CI problem?</span></div><div class="line" id="083401"><span class="nick" style="color:#234e69"><a href="#083401" label="[08:34:01]">&lt;gforce_d11977&gt;</a></span><span class="message">question to the native speakers: is correct english 'handwritten' (which sounds german) or 'manually written'?</span></div><div class="line" id="095055"><span class="nick" style="color:#6c3d55"><a href="#095055" label="[09:50:55]">&lt;bauen1&gt;</a></span><span class="message">xkcd is way to relevant for just about anything about modern computing (<a rel="nofollow" href="https://xkcd.com/2347/">https://xkcd.com/2347/</a>) </span></div><div class="line" id="095138"><span class="nick" style="color:#6c3d55"><a href="#095138" label="[09:51:38]">&lt;bauen1&gt;</a></span><span class="message">e.g. recently apt-listchanges in debian was orphaned by its maintainer due to lack of time</span></div><div class="line" id="103054"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="105111"><span class="nick" style="color:#234e69"><a href="#105111" label="[10:51:11]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: great!</span></div><div class="line" id="111611"><span class="nick" style="color:#d9d9d9"><a href="#111611" label="[11:16:11]">&lt;gforce_de1977&gt;</a></span><span class="message">pder: can be please change that little line here, so it can be merged? <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/34">https://github.com/fosslinux/live-bootstrap/pull/34</a> </span></div><div class="line" id="111714"><span class="nick" style="color:#d9d9d9"><a href="#111714" label="[11:17:14]">&lt;gforce_de1977&gt;</a></span><span class="message">pder: it blocks the effort since 2 days 8-))))</span></div><div class="line" id="111729"><span class="nick" style="color:#389600"><a href="#111729" label="[11:17:29]">&lt;stikonas&gt;</a></span><span class="message">well, it doesn't block all the effort...</span></div><div class="line" id="111745"><span class="nick" style="color:#389600"><a href="#111745" label="[11:17:45]">&lt;stikonas&gt;</a></span><span class="message">I have prepared gawk which is independent of it</span></div><div class="line" id="111804"><span class="nick" style="color:#389600"><a href="#111804" label="[11:18:04]">&lt;stikonas&gt;</a></span><span class="message">anyway, numbering in PR#34 needs changing now (in README and run.sh)</span></div><div class="line" id="112427"><span class="nick" style="color:#d9d9d9"><a href="#112427" label="[11:24:27]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: i'am eager to cherrypick, have you pushed it yet?</span></div><div class="line" id="112558"><span class="nick" style="color:#389600"><a href="#112558" label="[11:25:58]">&lt;stikonas&gt;</a></span><span class="message">not yet, later this evening</span></div><div class="line" id="112606"><span class="nick" style="color:#389600"><a href="#112606" label="[11:26:06]">&lt;stikonas&gt;</a></span><span class="message">what are you working on?</span></div><div class="line" id="113805"><span class="nick" style="color:#6d2462"><a href="#113805" label="[11:38:05]">&lt;fossy&gt;</a></span><span class="message">I spent half an hour on CRC32 in m2-planet and thats more time than I care to for an interim solution</span></div><div class="line" id="113819"><span class="nick" style="color:#6d2462"><a href="#113819" label="[11:38:19]">&lt;fossy&gt;</a></span><span class="message">so I just adapted the Fletcher16 Wikipedia example :)</span></div><div class="line" id="113840"><span class="nick" style="color:#6d2462"><a href="#113840" label="[11:38:40]">&lt;fossy&gt;</a></span><span class="message">so ill just add a -c like then checksumming will be ready</span></div><div class="line" id="113908"><span class="nick" style="color:#6d2462"><a href="#113908" label="[11:39:08]">&lt;fossy&gt;</a></span><span class="message">I also do not care that we do have to make it represented in decimal because I dont care about impling int -&gt; char in hex</span></div><div class="line" id="114739"><span class="nick" style="color:#6d2462"><a href="#114739" label="[11:47:39]">&lt;fossy&gt;</a></span><span class="message">I mean implementing int to char (hex representation of int)</span></div><div class="line" id="120143"><span class="nick" style="color:#389600"><a href="#120143" label="[12:01:43]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: I'm not native speaker but handwritten sounds english enough for me (I live in England)</span></div><div class="line" id="120358"><span class="nick" style="color:#389600"><a href="#120358" label="[12:03:58]">&lt;stikonas&gt;</a></span><span class="message">pder: since this weak symbols stuff is causing some problem, an option would be to drop it and manually add relevant .o file from musl when linking?</span></div><div class="line" id="120546"><span class="nick" style="color:#389600"><a href="#120546" label="[12:05:46]">&lt;stikonas&gt;</a></span><span class="message">(at least if we can't reach binutils without that)</span></div><div class="line" id="120554"><span class="nick" style="color:#389600"><a href="#120554" label="[12:05:54]">&lt;stikonas&gt;</a></span><span class="message">if we can, I would just recompile everything with ar</span></div><div class="line" id="125045"><span class="nick" style="color:#d9d9d9"><a href="#125045" label="[12:50:45]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: England counts! 8-))) ok, i also heard &quot;handcrafted&quot;, is this also a valid word?</span></div><div class="line" id="125116"><span class="nick" style="color:#389600"><a href="#125116" label="[12:51:16]">&lt;stikonas&gt;</a></span><span class="message">I think so</span></div><div class="line" id="125141"><span class="nick" style="color:#389600"><a href="#125141" label="[12:51:41]">&lt;stikonas&gt;</a></span><span class="message">but yes, there are fewer compound words than in German...</span></div><div class="line" id="125208"><span class="nick" style="color:#d9d9d9"><a href="#125208" label="[12:52:08]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: at the moment i'am lazy and dont do any work (homeschooling the 2 childrens)</span></div><div class="line" id="125222"><span class="nick" style="color:#389600"><a href="#125222" label="[12:52:22]">&lt;stikonas&gt;</a></span><span class="message">well, that's fine...</span></div><div class="line" id="125237"><span class="nick" style="color:#389600"><a href="#125237" label="[12:52:37]">&lt;stikonas&gt;</a></span><span class="message">and by the way it's children :)</span></div><div class="line" id="125312"><span class="nick" style="color:#6c3d55"><a href="#125312" label="[12:53:12]">&lt;bauen1&gt;</a></span><span class="message">ß/20</span></div><div class="line" id="125341"><span class="nick" style="color:#d9d9d9"><a href="#125341" label="[12:53:41]">&lt;gforce_de1977&gt;</a></span><span class="message">children 8-) ok, typcial german mistake</span></div><div class="line" id="125450"><span class="nick" style="color:#389600"><a href="#125450" label="[12:54:50]">&lt;stikonas&gt;</a></span><span class="message">I make plenty of mistakes too...</span></div><div class="line" id="134811"><span class="nick" style="color:#6c3d55"><a href="#134811" label="[13:48:11]">&lt;bauen1&gt;</a></span><span class="message">oh boy, someone pushed some commit to tinycc:mob that breaks self-hosting</span></div><div class="line" id="134840"><span class="nick" style="color:#6c3d55"><a href="#134840" label="[13:48:40]">&lt;bauen1&gt;</a></span><span class="message">kind of tempted to fork tinycc for myunix, and add some heavy CI on top, and cherry-pick what i need</span></div><div class="line" id="134849"><span class="nick" style="color:#bc80bd"><a href="#134849" label="[13:48:49]">&lt;rain1&gt;</a></span><span class="message">oh no!</span></div><div class="line" id="134852"><span class="nick" style="color:#6c3d55"><a href="#134852" label="[13:48:52]">&lt;bauen1&gt;</a></span><span class="message">could also cleanup the mess of code-styles the code currently is ._.</span></div><div class="line" id="134912"><span class="nick" style="color:#bc80bd"><a href="#134912" label="[13:49:12]">&lt;rain1&gt;</a></span><span class="message">do you think mob wouldn't want these changes?</span></div><div class="line" id="134953"><span class="nick" style="color:#6c3d55"><a href="#134953" label="[13:49:53]">&lt;bauen1&gt;</a></span><span class="message">rain1: style only changes are usually frowned up on (by most open source projects i know)</span></div><div class="line" id="135004"><span class="nick" style="color:#6c3d55"><a href="#135004" label="[13:50:04]">&lt;bauen1&gt;</a></span><span class="message">on the other hand nobody can stop me from pushing to mob i think</span></div><div class="line" id="135107"><span class="nick" style="color:#bc80bd"><a href="#135107" label="[13:51:07]">&lt;rain1&gt;</a></span><span class="message">i suppose you could do this in a fork and ask if it's wanted, making the style uniform sounds amazing</span></div><div class="line" id="135120"><span class="nick" style="color:#6c3d55"><a href="#135120" label="[13:51:20]">&lt;bauen1&gt;</a></span><span class="message">my biggest pet peeve would be the usage of if without brackets ; yes it works and is readable until someone accidentally introduces bugs because of it</span></div><div class="line" id="135214"><span class="nick" style="color:#6c3d55"><a href="#135214" label="[13:52:14]">&lt;bauen1&gt;</a></span><span class="message">i totally understand why they don</span></div><div class="line" id="135234"><span class="nick" style="color:#6c3d55"><a href="#135234" label="[13:52:34]">&lt;bauen1&gt;</a></span><span class="message">*i totally understand why they don't want some of the changes necessary for the bootstrap version</span></div><div class="line" id="152202"><span class="nick" style="color:#80b1d3"><a href="#152202" label="[15:22:02]">&lt;pder&gt;</a></span><span class="message">gforce_de1977, stikonas, fossy: I rebased my coreutils2 branch with the fixes requested.  Sorry for the delay- been concerned about tcc+musl generating binaries that dont write all of their output</span></div><div class="line" id="152619"><span class="nick" style="color:#389600"><a href="#152619" label="[15:26:19]">&lt;stikonas&gt;</a></span><span class="message">pder: do you know how much everything is affected by that?</span></div><div class="line" id="152719"><span class="nick" style="color:#389600"><a href="#152719" label="[15:27:19]">&lt;stikonas&gt;</a></span><span class="message">e.g. for bison bootstrap it didn't affect me, but what about coreutils, do they work alright?</span></div><div class="line" id="152732"><span class="nick" style="color:#80b1d3"><a href="#152732" label="[15:27:32]">&lt;pder&gt;</a></span><span class="message">Any time you redirect output or pipe the output of a command, you may not get all of the results, I think due to the stdio exit routine not getting called</span></div><div class="line" id="152827"><span class="nick" style="color:#389600"><a href="#152827" label="[15:28:27]">&lt;stikonas&gt;</a></span><span class="message">I see...</span></div><div class="line" id="152852"><span class="nick" style="color:#80b1d3"><a href="#152852" label="[15:28:52]">&lt;pder&gt;</a></span><span class="message">mihi pointed that out yesterday, but I am not sure what the correct fix is.  Supposedly if certain symbols are linked, the exit routines should be called instead of the noop ones</span></div><div class="line" id="152854"><span class="nick" style="color:#389600"><a href="#152854" label="[15:28:54]">&lt;stikonas&gt;</a></span><span class="message">well, so far I didn't use pipes much, but potentially that might be breaking some configure scripts</span></div><div class="line" id="152921"><span class="nick" style="color:#80b1d3"><a href="#152921" label="[15:29:21]">&lt;pder&gt;</a></span><span class="message">Didnt you mention something about having to build flex using mes libc instead of musl?</span></div><div class="line" id="152944"><span class="nick" style="color:#389600"><a href="#152944" label="[15:29:44]">&lt;stikonas&gt;</a></span><span class="message">pder: that was somthing to do with alloca (and I think it was m4)</span></div><div class="line" id="152950"><span class="nick" style="color:#389600"><a href="#152950" label="[15:29:50]">&lt;stikonas&gt;</a></span><span class="message">but somehow it worked out in the ned with musl</span></div><div class="line" id="152959"><span class="nick" style="color:#389600"><a href="#152959" label="[15:29:59]">&lt;stikonas&gt;</a></span><span class="message">maybe only some versions were affected</span></div><div class="line" id="153011"><span class="nick" style="color:#389600"><a href="#153011" label="[15:30:11]">&lt;stikonas&gt;</a></span><span class="message">m4 1.4.7 works fine</span></div><div class="line" id="153036"><span class="nick" style="color:#80b1d3"><a href="#153036" label="[15:30:36]">&lt;pder&gt;</a></span><span class="message">I ran into the issue when running the perl configure script.  It tried to test the preprocessor (tcc -ar) redirecting the output to a file, but the file was incomplete</span></div><div class="line" id="153047"><span class="nick" style="color:#80b1d3"><a href="#153047" label="[15:30:47]">&lt;pder&gt;</a></span><span class="message">So I am sure we will run into this issue a lot</span></div><div class="line" id="153047"><span class="nick" style="color:#389600"><a href="#153047" label="[15:30:47]">&lt;stikonas&gt;</a></span><span class="message">I see...</span></div><div class="line" id="153054"><span class="nick" style="color:#389600"><a href="#153054" label="[15:30:54]">&lt;stikonas&gt;</a></span><span class="message">can be run autotools on miniperl?</span></div><div class="line" id="153102"><span class="nick" style="color:#389600"><a href="#153102" label="[15:31:02]">&lt;stikonas&gt;</a></span><span class="message">s/be/we/</span></div><div class="line" id="153109"><span class="nick" style="color:#389600"><a href="#153109" label="[15:31:09]">&lt;stikonas&gt;</a></span><span class="message">if yes. we can try to build binutils then</span></div><div class="line" id="153145"><span class="nick" style="color:#389600"><a href="#153145" label="[15:31:45]">&lt;stikonas&gt;</a></span><span class="message">and deal with full perl bootstrap afterwards</span></div><div class="line" id="153241"><span class="nick" style="color:#80b1d3"><a href="#153241" label="[15:32:41]">&lt;pder&gt;</a></span><span class="message">If the fix is simple in musl, I'd much prefer to have binaries properly exiting and flushing buffers</span></div><div class="line" id="153330"><span class="nick" style="color:#389600"><a href="#153330" label="[15:33:30]">&lt;stikonas&gt;</a></span><span class="message">well, potentially more things are broken</span></div><div class="line" id="153339"><span class="nick" style="color:#389600"><a href="#153339" label="[15:33:39]">&lt;stikonas&gt;</a></span><span class="message">it somewhere else wrong symbols is used</span></div><div class="line" id="153420"><span class="nick" style="color:#80b1d3"><a href="#153420" label="[15:34:20]">&lt;pder&gt;</a></span><span class="message">do you know if tcc support for weak symbols is missing or incomplete?</span></div><div class="line" id="153420"><span class="nick" style="color:#6c3d55"><a href="#153420" label="[15:34:20]">&lt;bauen1&gt;</a></span><span class="message">once you get binutils going, only make would be missing to build myunix i think</span></div><div class="line" id="153434"><span class="nick" style="color:#6c3d55"><a href="#153434" label="[15:34:34]">&lt;bauen1&gt;</a></span><span class="message">now once this exam is over in 2 days i should have a bit of time to spare to work on this again</span></div><div class="line" id="153513"><span class="nick" style="color:#389600"><a href="#153513" label="[15:35:13]">&lt;stikonas&gt;</a></span><span class="message">well, with binutils we can also build linux kernel...</span></div><div class="line" id="153516"><span class="nick" style="color:#389600"><a href="#153516" label="[15:35:16]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="153532"><span class="nick" style="color:#389600"><a href="#153532" label="[15:35:32]">&lt;stikonas&gt;</a></span><span class="message">pder: I don't know what's going wrong with tcc and weak symbols</span></div><div class="line" id="153630"><span class="nick" style="color:#80b1d3"><a href="#153630" label="[15:36:30]">&lt;pder&gt;</a></span><span class="message">take a look at src/exit/exit.c on line 9 with the comment about what functions are called on exit</span></div><div class="line" id="153636"><span class="nick" style="color:#80b1d3"><a href="#153636" label="[15:36:36]">&lt;pder&gt;</a></span><span class="message">in musl</span></div><div class="line" id="153805"><span class="nick" style="color:#389600"><a href="#153805" label="[15:38:05]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="153911"><span class="nick" style="color:#389600"><a href="#153911" label="[15:39:11]">&lt;stikonas&gt;</a></span><span class="message">when we link to __toread or __towrite</span></div><div class="line" id="171122"><span class="nick" style="color:#80b1d3"><a href="#171122" label="[17:11:22]">&lt;pder&gt;</a></span><span class="message">aha, I have found a fix, but its crude.  Let me see if I can simplify</span></div><div class="line" id="171302"><span class="nick" style="color:#389600"><a href="#171302" label="[17:13:02]">&lt;stikonas&gt;</a></span><span class="message">pder: oh nice? What did you attempt?</span></div><div class="line" id="171320"><span class="nick" style="color:#389600"><a href="#171320" label="[17:13:20]">&lt;stikonas&gt;</a></span><span class="message">patching those lines in exit.c and similar?</span></div><div class="line" id="171345"><span class="nick" style="color:#80b1d3"><a href="#171345" label="[17:13:45]">&lt;pder&gt;</a></span><span class="message">I reverted the weak symbols patch in musl, then tried to compile tcc and got 4 missing symbols</span></div><div class="line" id="171407"><span class="nick" style="color:#80b1d3"><a href="#171407" label="[17:14:07]">&lt;pder&gt;</a></span><span class="message">I renamed functions in 4 places so they would resolve and removed the weak_alias lines</span></div><div class="line" id="171414"><span class="nick" style="color:#389600"><a href="#171414" label="[17:14:14]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="171418"><span class="nick" style="color:#389600"><a href="#171418" label="[17:14:18]">&lt;stikonas&gt;</a></span><span class="message">what about other software?</span></div><div class="line" id="171428"><span class="nick" style="color:#389600"><a href="#171428" label="[17:14:28]">&lt;stikonas&gt;</a></span><span class="message">or nothing hits any other weak symbols?</span></div><div class="line" id="171450"><span class="nick" style="color:#80b1d3"><a href="#171450" label="[17:14:50]">&lt;pder&gt;</a></span><span class="message">I am not sure yet.</span></div><div class="line" id="202028"><span class="nick" style="color:#2e2a4a"><a href="#202028" label="[20:20:28]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://news.ycombinator.com/item?id=26104667">https://news.ycombinator.com/item?id=26104667</a>  &quot;Running unmodified Linux programs on Fuchsia&quot;</span></div><div class="line" id="212825"><span class="nick" style="color:#3c5b35"><a href="#212825" label="[21:28:25]">&lt;roptat&gt;</a></span><span class="message">hi! I remember from the reproducible builds summit in Paris (2018), there was some bug in Mes at that time that managed to survive through building TCC and only became visible when building GCC (or something like that)</span></div><div class="line" id="212842"><span class="nick" style="color:#3c5b35"><a href="#212842" label="[21:28:42]">&lt;roptat&gt;</a></span><span class="message">I think it was somewhere in handling strings, but can't remember exactly</span></div><div class="line" id="212856"><span class="nick" style="color:#3c5b35"><a href="#212856" label="[21:28:56]">&lt;roptat&gt;</a></span><span class="message">have we wrote anything about that at the time?</span></div><div class="line" id="212933"><span class="nick" style="color:#3c5b35"><a href="#212933" label="[21:29:33]">&lt;roptat&gt;</a></span><span class="message">or maybe hex numbers</span></div><div class="line" id="213333"><span class="nick" style="color:#3c5b35"><a href="#213333" label="[21:33:33]">&lt;roptat&gt;</a></span><span class="message">janneke, maybe? :)</span></div><div class="line" id="213534"><span class="nick" style="color:#af8d2f"><a href="#213534" label="[21:35:34]">&lt;janneke&gt;</a></span><span class="message">roptat: ah yes indeed, what was that now</span></div><div class="line" id="213616"><span class="nick" style="color:#af8d2f"><a href="#213616" label="[21:36:16]">&lt;janneke&gt;</a></span><span class="message">i seem to remember we wrote something about that, yes</span></div><div class="line" id="213858"><span class="nick" style="color:#3c5b35"><a href="#213858" label="[21:38:58]">&lt;roptat&gt;</a></span><span class="message">I plan to write a paper, on the Maven bootstrap, and I think this story could help me motivate it a bit, but it'd be best if I could add a citation (and not be the only authoritative source on that story :p)</span></div><div class="line" id="213921"><span class="nick" style="color:#389600"><a href="#213921" label="[21:39:21]">&lt;dongcarl&gt;</a></span><span class="message">janneke: Is there anything I can do to help with wip-full-source-bootstrap?</span></div><div class="line" id="213954"><span class="nick" style="color:#3c5b35"><a href="#213954" label="[21:39:54]">&lt;roptat&gt;</a></span><span class="message">like how tcc looked perfectly innocent, and worked as intended, but was actually broken since the beginning, and how hard it would have been to fix if this was an historical version of tcc that had been built in that way</span></div><div class="line" id="214016"><span class="nick" style="color:#3c5b35"><a href="#214016" label="[21:40:16]">&lt;roptat&gt;</a></span><span class="message">with only later binaries available</span></div><div class="line" id="214158"><span class="nick" style="color:#8dd3c7"><a href="#214158" label="[21:41:58]">&lt;vagrantc&gt;</a></span><span class="message">dongcarl: there was an idea floated around to attempt to build the parts that used the guile-bootstrap binaries with mes instead and document what breaks, and maybe vice-versa</span></div><div class="line" id="214220"><span class="nick" style="color:#8dd3c7"><a href="#214220" label="[21:42:20]">&lt;vagrantc&gt;</a></span><span class="message">dongcarl: because then you could just use mes and drop the guile-bootstrap binaries</span></div><div class="line" id="214312"><span class="nick" style="color:#389600"><a href="#214312" label="[21:43:12]">&lt;dongcarl&gt;</a></span><span class="message">I may be misunderstanding completely, but isn't the goal to have hex0 as the _only_ bootstrap &quot;binary&quot;?</span></div><div class="line" id="214434"><span class="nick" style="color:#8dd3c7"><a href="#214434" label="[21:44:34]">&lt;vagrantc&gt;</a></span><span class="message">yes</span></div><div class="line" id="214453"><span class="nick" style="color:#8dd3c7"><a href="#214453" label="[21:44:53]">&lt;vagrantc&gt;</a></span><span class="message">but you can build mes from hex0</span></div><div class="line" id="214520"><span class="nick" style="color:#8dd3c7"><a href="#214520" label="[21:45:20]">&lt;vagrantc&gt;</a></span><span class="message">or at least, it's a wip coming ever closer</span></div><div class="line" id="214642"><span class="nick" style="color:#389600"><a href="#214642" label="[21:46:42]">&lt;dongcarl&gt;</a></span><span class="message">Oh I see, this will shorten the bootstrap chain, is that right?</span></div><div class="line" id="214646"><span class="nick" style="color:#8dd3c7"><a href="#214646" label="[21:46:46]">&lt;vagrantc&gt;</a></span><span class="message">yes</span></div><div class="line" id="214700"><span class="nick" style="color:#389600"><a href="#214700" label="[21:47:00]">&lt;dongcarl&gt;</a></span><span class="message">Okay, apologies my brain is overloaded today</span></div><div class="line" id="214703"><span class="nick" style="color:#8dd3c7"><a href="#214703" label="[21:47:03]">&lt;vagrantc&gt;</a></span><span class="message">at least in guix, the bootstrap chain still requires the bootstrap-guile</span></div><div class="line" id="214741"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="214748"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="222837"><span class="nick" style="color:#389600"><a href="#222837" label="[22:28:37]">&lt;stikonas&gt;</a></span><span class="message">dongcarl: if you want to use hex0 as the only bootstrap binary, you should look at live-bootstrap</span></div><div class="line" id="222908"><span class="nick" style="color:#af8d2f"><a href="#222908" label="[22:29:08]">&lt;janneke&gt;</a></span><span class="message">dongcarl: actually we are currently working on wip-arm-bootstrap; the wip-full-source-bootstrap branch in guix is ready for review but &quot;waits&quot; for a mes release, which &quot;waits&quot; for arm to succeed</span></div><div class="line" id="222940"><span class="nick" style="color:#389600"><a href="#222940" label="[22:29:40]">&lt;stikonas&gt;</a></span><span class="message">dongcarl: actually, live-bootstrap still needs 2 bootstrap binaries, hex0 and kaem</span></div><div class="line" id="223000"><span class="nick" style="color:#af8d2f"><a href="#223000" label="[22:30:00]">&lt;janneke&gt;</a></span><span class="message">if we're lucky, yt will come up with a way to have global and static arrays is m2-planet; that would allow us to clean-up the wip-m2 branch in mes a bit</span></div><div class="line" id="223029"><span class="nick" style="color:#389600"><a href="#223029" label="[22:30:29]">&lt;stikonas&gt;</a></span><span class="message">that's for mes release after arm release?</span></div><div class="line" id="223133"><span class="nick" style="color:#af8d2f"><a href="#223133" label="[22:31:33]">&lt;janneke&gt;</a></span><span class="message">mes' wip-m2 branch probably doesn't build with gcc-10, we had to add quite some global pointers because m2-planet doesn't have static variables yet</span></div><div class="line" id="223152"><span class="nick" style="color:#af8d2f"><a href="#223152" label="[22:31:52]">&lt;janneke&gt;</a></span><span class="message">stikonas, yes that's the idea</span></div><div class="line" id="223220"><span class="nick" style="color:#af8d2f"><a href="#223220" label="[22:32:20]">&lt;janneke&gt;</a></span><span class="message">mes-0.23 should bring ARM, mes-0.24 (if nothing in between happens) should be full-source-bootstrap/wip-m2</span></div><div class="line" id="223345"><span class="nick" style="color:#389600"><a href="#223345" label="[22:33:45]">&lt;stikonas&gt;</a></span><span class="message">fossy, pder, gforce_de1977: gawk PR is now up <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/37">https://github.com/fosslinux/live-bootstrap/pull/37</a> </span></div><div class="line" id="223411"><span class="nick" style="color:#2e2a4a"><a href="#223411" label="[22:34:11]">*</a></span><span class="message">dongcarl reading</span></div><div class="line" id="223434"><span class="nick" style="color:#389600"><a href="#223434" label="[22:34:34]">&lt;stikonas&gt;</a></span><span class="message">janneke: by the way, in live-bootstrap we have now managed to bootstrap bison</span></div><div class="line" id="223448"><span class="nick" style="color:#80b1d3"><a href="#223448" label="[22:34:48]">&lt;pder&gt;</a></span><span class="message">stikonas: nice work</span></div><div class="line" id="223456"><span class="nick" style="color:#389600"><a href="#223456" label="[22:34:56]">&lt;stikonas&gt;</a></span><span class="message">although, it might be tricky to incorporate into guix...</span></div><div class="line" id="223528"><span class="nick" style="color:#389600"><a href="#223528" label="[22:35:28]">&lt;stikonas&gt;</a></span><span class="message">pder: well, initially gawk wasn't fully working, then I realized, I need to install some .awk files into share/awk/</span></div><div class="line" id="223613"><span class="nick" style="color:#389600"><a href="#223613" label="[22:36:13]">&lt;stikonas&gt;</a></span><span class="message">oops I missed license in one file...</span></div><div class="line" id="223621"><span class="nick" style="color:#389600"><a href="#223621" label="[22:36:21]">&lt;stikonas&gt;</a></span><span class="message">reuse linter caught me :(</span></div><div class="line" id="223726"><span class="nick" style="color:#389600"><a href="#223726" label="[22:37:26]">&lt;dongcarl&gt;</a></span><span class="message">janneke: Am I correct in understanding that even with wip-full-source-bootstrap merged, we still have to download a bootstrap guile along with hex0?</span></div><div class="line" id="223727"><span class="nick" style="color:#389600"><a href="#223727" label="[22:37:27]">&lt;stikonas&gt;</a></span><span class="message">well, that's what linters are for...</span></div><div class="line" id="223729"><span class="nick" style="color:#af8d2f"><a href="#223729" label="[22:37:29]">&lt;janneke&gt;</a></span><span class="message">stikonas, great</span></div><div class="line" id="223803"><span class="nick" style="color:#af8d2f"><a href="#223803" label="[22:38:03]">&lt;janneke&gt;</a></span><span class="message">dongcarl: yes, that's correct</span></div><div class="line" id="223829"><span class="nick" style="color:#af8d2f"><a href="#223829" label="[22:38:29]">&lt;janneke&gt;</a></span><span class="message">the &quot;excuse&quot; is that in guix, we need that anyway...</span></div><div class="line" id="223856"><span class="nick" style="color:#389600"><a href="#223856" label="[22:38:56]">&lt;stikonas&gt;</a></span><span class="message">dongcarl: and also guix uses mkdir, tar, bash and xz static binaries... Although some of that can be hacked around by pre-unpacking in advance...</span></div><div class="line" id="223916"><span class="nick" style="color:#389600"><a href="#223916" label="[22:39:16]">&lt;dongcarl&gt;</a></span><span class="message">janneke: Is there any foreseeable way around that in the future or no?</span></div><div class="line" id="223933"><span class="nick" style="color:#389600"><a href="#223933" label="[22:39:33]">&lt;stikonas&gt;</a></span><span class="message">well, eventually one can try to use mes instead of guile</span></div><div class="line" id="223950"><span class="nick" style="color:#389600"><a href="#223950" label="[22:39:50]">&lt;dongcarl&gt;</a></span><span class="message">stikonas: I see...</span></div><div class="line" id="223954"><span class="nick" style="color:#af8d2f"><a href="#223954" label="[22:39:54]">&lt;janneke&gt;</a></span><span class="message">dongcarl: the plan is to try using mes instead of bootstrap-guile, but that is going to take some effort</span></div><div class="line" id="223959"><span class="nick" style="color:#af8d2f"><a href="#223959" label="[22:39:59]">&lt;janneke&gt;</a></span><span class="message">yes</span></div><div class="line" id="224002"><span class="nick" style="color:#389600"><a href="#224002" label="[22:40:02]">&lt;stikonas&gt;</a></span><span class="message">dongcarl: but if you want to have minimal environment without scheme, definitely read through live-bootstrap</span></div><div class="line" id="224056"><span class="nick" style="color:#389600"><a href="#224056" label="[22:40:56]">&lt;dongcarl&gt;</a></span><span class="message">stikonas: Will do... It will be much more useful if it hooked up to Guix though I think...</span></div><div class="line" id="224057"><span class="nick" style="color:#389600"><a href="#224057" label="[22:40:57]">&lt;stikonas&gt;</a></span><span class="message">pder: minor thing in your PR, maybe you can backtick binaries at the end? e.g. expr -&gt; `expr`</span></div><div class="line" id="224118"><span class="nick" style="color:#389600"><a href="#224118" label="[22:41:18]">&lt;stikonas&gt;</a></span><span class="message">dongcarl: once we have toolchain, it should be possible to hook up some distros</span></div><div class="line" id="224126"><span class="nick" style="color:#389600"><a href="#224126" label="[22:41:26]">&lt;stikonas&gt;</a></span><span class="message">possibly guix too</span></div><div class="line" id="224138"><span class="nick" style="color:#389600"><a href="#224138" label="[22:41:38]">&lt;stikonas&gt;</a></span><span class="message">fossy and I were also thinking about Void and Gentoo</span></div><div class="line" id="224246"><span class="nick" style="color:#389600"><a href="#224246" label="[22:42:46]">&lt;stikonas&gt;</a></span><span class="message">dongcarl: live-bootstral is going a bit slower for now because of slightly strickter definition of &quot;source&quot;... E.g. using pregenerated bison/lex files or configure scripts is not allowed</span></div><div class="line" id="224317"><span class="nick" style="color:#389600"><a href="#224317" label="[22:43:17]">&lt;stikonas&gt;</a></span><span class="message">although, now bison is done, and we'll start working on autotools</span></div><div class="line" id="231316"><span class="nick" style="color:#3c5b35"><a href="#231316" label="[23:13:16]">&lt;roptat&gt;</a></span><span class="message">btw, do you know of any academic publication around bootstrapping efforts?</span></div><br /></div></body></html>