<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-03-03.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="012337"><span class="nick" style="color:#8dd3c7"><a href="#012337" label="[01:23:37]">&lt;stikonas&gt;</a></span><span class="message">pder: so with binutils I can drop almost all musl patches</span></div><div class="line" id="012348"><span class="nick" style="color:#8dd3c7"><a href="#012348" label="[01:23:48]">&lt;stikonas&gt;</a></span><span class="message">I guess that's good...</span></div><div class="line" id="012354"><span class="nick" style="color:#8dd3c7"><a href="#012354" label="[01:23:54]">&lt;stikonas&gt;</a></span><span class="message">I'll do that maybe tomorrow</span></div><div class="line" id="012413"><span class="nick" style="color:#8dd3c7"><a href="#012413" label="[01:24:13]">&lt;stikonas&gt;</a></span><span class="message">but all those assembly files that tcc choked upon can now just be built with GNU as</span></div><div class="line" id="012457"><span class="nick" style="color:#8dd3c7"><a href="#012457" label="[01:24:57]">&lt;stikonas&gt;</a></span><span class="message">so only set_thread_area.patch  tcc_static.patch va_list.patch are needed</span></div><div class="line" id="012521"><span class="nick" style="color:#8dd3c7"><a href="#012521" label="[01:25:21]">&lt;stikonas&gt;</a></span><span class="message">and first two patches are upstreamed in newer versions of musl/tcc mob</span></div><div class="line" id="012925"><span class="nick" style="color:#8dd3c7"><a href="#012925" label="[01:29:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/54">https://github.com/fosslinux/live-bootstrap/pull/54</a>  is now ready</span></div><div class="line" id="013837"><span class="nick" style="color:#8dd3c7"><a href="#013837" label="[01:38:37]">&lt;stikonas&gt;</a></span><span class="message">and it has a green tick now</span></div><div class="line" id="015505"><span class="nick" style="color:#8dd3c7"><a href="#015505" label="[01:55:05]">&lt;stikonas&gt;</a></span><span class="message">pder: I've pushed a branch that rebuilds musl and tcc with fewer patches <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/musl-rebuild">https://github.com/stikonas/live-bootstrap/tree/musl-rebuild</a> </span></div><div class="line" id="015528"><span class="nick" style="color:#8dd3c7"><a href="#015528" label="[01:55:28]">&lt;stikonas&gt;</a></span><span class="message">I'll test it tomorrow</span></div><div class="line" id="015541"><span class="nick" style="color:#8dd3c7"><a href="#015541" label="[01:55:41]">&lt;stikonas&gt;</a></span><span class="message">(just did some minor testing now and I think it works)</span></div><div class="line" id="015550"><span class="nick" style="color:#8dd3c7"><a href="#015550" label="[01:55:50]">&lt;stikonas&gt;</a></span><span class="message">if you want, you can try to build bash on top of that</span></div><div class="line" id="103447"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="103449"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="122330"><span class="nick" style="color:#8dd3c7"><a href="#122330" label="[12:23:30]">&lt;stikonas&gt;</a></span><span class="message">civodul: this patch <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/binutils-2.14/patches/deterministic_binutils.patch">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/binutils-2.14/patches/deterministic_binutils.patch</a>  should help with <a rel="nofollow" href="https://issues.guix.gnu.org/45962">https://issues.guix.gnu.org/45962</a> </span></div><div class="line" id="123206"><span class="nick" style="color:#2e2a4a"><a href="#123206" label="[12:32:06]">&lt;civodul&gt;</a></span><span class="message">stikonas: yay, thank you!</span></div><div class="line" id="123217"><span class="nick" style="color:#2e2a4a"><a href="#123217" label="[12:32:17]">&lt;civodul&gt;</a></span><span class="message">i'll give it a spin on core-updates</span></div><div class="line" id="123247"><span class="nick" style="color:#8dd3c7"><a href="#123247" label="[12:32:47]">&lt;stikonas&gt;</a></span><span class="message">you might need to add --enable-deterministic-archives to binutils-2.20 later in commencement.scm</span></div><div class="line" id="123251"><span class="nick" style="color:#8dd3c7"><a href="#123251" label="[12:32:51]">&lt;stikonas&gt;</a></span><span class="message">I think 2.20 already has that patch</span></div><div class="line" id="123303"><span class="nick" style="color:#8dd3c7"><a href="#123303" label="[12:33:03]">&lt;stikonas&gt;</a></span><span class="message">but at least let's see if this fixes 2.14</span></div><div class="line" id="123422"><span class="nick" style="color:#2e2a4a"><a href="#123422" label="[12:34:22]">&lt;civodul&gt;</a></span><span class="message">great</span></div><div class="line" id="134257"><span class="nick">***</span><span class="message notice">EDEF is now known as edef</span></div><div class="line" id="143711"><span class="nick" style="color:#2e2a4a"><a href="#143711" label="[14:37:11]">&lt;civodul&gt;</a></span><span class="message">stikonas: the patch was originally written by Chris Demetriou, is that correct?</span></div><div class="line" id="144243"><span class="nick" style="color:#8dd3c7"><a href="#144243" label="[14:42:43]">&lt;stikonas&gt;</a></span><span class="message">well, original patch for newer binutils</span></div><div class="line" id="144256"><span class="nick" style="color:#8dd3c7"><a href="#144256" label="[14:42:56]">&lt;stikonas&gt;</a></span><span class="message">civodul: <a rel="nofollow" href="https://github.com/hermitcore/binutils/commit/36e4dce69dd23bea9ea225">https://github.com/hermitcore/binutils/commit/36e4dce69dd23bea9ea225</a> </span></div><div class="line" id="144301"><span class="nick" style="color:#8dd3c7"><a href="#144301" label="[14:43:01]">&lt;stikonas&gt;</a></span><span class="message">so yes</span></div><div class="line" id="144324"><span class="nick" style="color:#2e2a4a"><a href="#144324" label="[14:43:24]">&lt;civodul&gt;</a></span><span class="message">ok</span></div><div class="line" id="144326"><span class="nick" style="color:#8dd3c7"><a href="#144326" label="[14:43:26]">&lt;stikonas&gt;</a></span><span class="message">I modified it a bit</span></div><div class="line" id="144343"><span class="nick" style="color:#8dd3c7"><a href="#144343" label="[14:43:43]">&lt;stikonas&gt;</a></span><span class="message">but generally followed the same steps</span></div><div class="line" id="144438"><span class="nick" style="color:#8dd3c7"><a href="#144438" label="[14:44:38]">&lt;stikonas&gt;</a></span><span class="message">has it worked for you?</span></div><div class="line" id="152325"><span class="nick" style="color:#2e2a4a"><a href="#152325" label="[15:23:25]">&lt;civodul&gt;</a></span><span class="message">stikonas: there are other issues on core-updates that need fixing first :-)</span></div><div class="line" id="152333"><span class="nick" style="color:#2e2a4a"><a href="#152333" label="[15:23:33]">&lt;civodul&gt;</a></span><span class="message">but other than that it should work</span></div><div class="line" id="152546"><span class="nick" style="color:#8dd3c7"><a href="#152546" label="[15:25:46]">&lt;stikonas&gt;</a></span><span class="message">civodul: by the way, I think in live-bootstrap we'll be able to skip gcc-2.95.3, not sure if that would be interesting in guix... I.e. we might go tcc-&gt;gcc 4</span></div><div class="line" id="152706"><span class="nick" style="color:#2e2a4a"><a href="#152706" label="[15:27:06]">&lt;civodul&gt;</a></span><span class="message">oh sure, shrinking the chain is always interesting</span></div><div class="line" id="152742"><span class="nick" style="color:#2e2a4a"><a href="#152742" label="[15:27:42]">&lt;civodul&gt;</a></span><span class="message">let me know if it works for you!</span></div><div class="line" id="152805"><span class="nick" style="color:#8dd3c7"><a href="#152805" label="[15:28:05]">&lt;stikonas&gt;</a></span><span class="message">well, it will take at least a week or so...</span></div><div class="line" id="152818"><span class="nick" style="color:#8dd3c7"><a href="#152818" label="[15:28:18]">&lt;stikonas&gt;</a></span><span class="message">although, I'm not sure if chain is smaller...</span></div><div class="line" id="152823"><span class="nick" style="color:#8dd3c7"><a href="#152823" label="[15:28:23]">&lt;stikonas&gt;</a></span><span class="message">because we need to build other stuff</span></div><div class="line" id="152836"><span class="nick" style="color:#8dd3c7"><a href="#152836" label="[15:28:36]">&lt;stikonas&gt;</a></span><span class="message">but if it has fewer old compilers, it might still be simpler to port to new architectures later</span></div><div class="line" id="152948"><span class="nick" style="color:#2e2a4a"><a href="#152948" label="[15:29:48]">&lt;civodul&gt;</a></span><span class="message">yeah, it still sounds like it could be an improvement</span></div><div class="line" id="164322"><span class="nick" style="color:#6b8072"><a href="#164322" label="[16:43:22]">&lt;pder&gt;</a></span><span class="message">stikonas: in your musl-rebuild branch, I am looking at binutils-rebuild.sh.  I think it would be clearer to just run patch manually for each of the patches we still want instead of just deleting musl_weak_symbols</span></div><div class="line" id="164345"><span class="nick" style="color:#8dd3c7"><a href="#164345" label="[16:43:45]">&lt;stikonas&gt;</a></span><span class="message">possibly...</span></div><div class="line" id="164354"><span class="nick" style="color:#6b8072"><a href="#164354" label="[16:43:54]">&lt;pder&gt;</a></span><span class="message">looking in the patches directory, I also think we dont need makefile.patch or stdio_flush_on_exit</span></div><div class="line" id="164403"><span class="nick" style="color:#8dd3c7"><a href="#164403" label="[16:44:03]">&lt;stikonas&gt;</a></span><span class="message">oh, I removed those locally</span></div><div class="line" id="164413"><span class="nick" style="color:#8dd3c7"><a href="#164413" label="[16:44:13]">&lt;stikonas&gt;</a></span><span class="message">I'll push everything in a few hours with updated chekcums</span></div><div class="line" id="164420"><span class="nick" style="color:#8dd3c7"><a href="#164420" label="[16:44:20]">&lt;stikonas&gt;</a></span><span class="message">only 3 patches are necessary</span></div><div class="line" id="164426"><span class="nick" style="color:#8dd3c7"><a href="#164426" label="[16:44:26]">&lt;stikonas&gt;</a></span><span class="message">I can also get rid of assembly patches</span></div><div class="line" id="164435"><span class="nick" style="color:#8dd3c7"><a href="#164435" label="[16:44:35]">&lt;stikonas&gt;</a></span><span class="message">(e.g. fenv.patch)</span></div><div class="line" id="164436"><span class="nick" style="color:#6b8072"><a href="#164436" label="[16:44:36]">&lt;pder&gt;</a></span><span class="message">oh ok, I think I am looking at not the latest</span></div><div class="line" id="164440"><span class="nick" style="color:#8dd3c7"><a href="#164440" label="[16:44:40]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="164446"><span class="nick" style="color:#8dd3c7"><a href="#164446" label="[16:44:46]">&lt;stikonas&gt;</a></span><span class="message">tcc still can't build those</span></div><div class="line" id="164448"><span class="nick" style="color:#8dd3c7"><a href="#164448" label="[16:44:48]">&lt;stikonas&gt;</a></span><span class="message">but we have as now</span></div><div class="line" id="164557"><span class="nick" style="color:#8dd3c7"><a href="#164557" label="[16:45:57]">&lt;stikonas&gt;</a></span><span class="message">pder: let me rebase now... I'll pushe then</span></div><div class="line" id="164628"><span class="nick" style="color:#8dd3c7"><a href="#164628" label="[16:46:28]">&lt;stikonas&gt;</a></span><span class="message">pder: should be latest now</span></div><div class="line" id="164630"><span class="nick" style="color:#8dd3c7"><a href="#164630" label="[16:46:30]">&lt;stikonas&gt;</a></span><span class="message">if you refresh</span></div><div class="line" id="164736"><span class="nick" style="color:#8dd3c7"><a href="#164736" label="[16:47:36]">&lt;stikonas&gt;</a></span><span class="message">pder: another option is to specify another patch dir and symlink wanted patches</span></div><div class="line" id="164808"><span class="nick" style="color:#8dd3c7"><a href="#164808" label="[16:48:08]">&lt;stikonas&gt;</a></span><span class="message">like patches_2</span></div><div class="line" id="164846"><span class="nick" style="color:#8dd3c7"><a href="#164846" label="[16:48:46]">&lt;stikonas&gt;</a></span><span class="message">pder: so I think gcc 4.0.4 is buildable with minimal changes but it needs newer autoconf, so need to do more perl work</span></div><div class="line" id="165140"><span class="nick" style="color:#8dd3c7"><a href="#165140" label="[16:51:40]">&lt;stikonas&gt;</a></span><span class="message">probablu 4.1.2 will also build</span></div><div class="line" id="165325"><span class="nick" style="color:#8dd3c7"><a href="#165325" label="[16:53:25]">&lt;stikonas&gt;</a></span><span class="message">hmm, no 4.1.2 probably won't work</span></div><div class="line" id="172152"><span class="nick" style="color:#80b1d3"><a href="#172152" label="[17:21:52]">&lt;Hagfish&gt;</a></span><span class="message">i don't know whether it should feel like yak-shaving or solving a sudoku, dealing with all these dependencies and the random problems they throw up</span></div><div class="line" id="172326"><span class="nick" style="color:#80b1d3"><a href="#172326" label="[17:23:26]">&lt;Hagfish&gt;</a></span><span class="message">i guess if there's an end in sight, and you can see the progress you are making, then it doesn't feel like the problem is fractal</span></div><div class="line" id="194902"><span class="nick" style="color:#6b8072"><a href="#194902" label="[19:49:02]">&lt;pder&gt;</a></span><span class="message">stikonas: I am looking at the musl-rebuild branch you recently pushed- commit b54e49f66923f44.  It appears to still be applying patches that I dont think you intend</span></div><div class="line" id="194936"><span class="nick" style="color:#8dd3c7"><a href="#194936" label="[19:49:36]">&lt;stikonas&gt;</a></span><span class="message">pder: yeah, I noticed it an hour ago... fixing</span></div><div class="line" id="194944"><span class="nick" style="color:#8dd3c7"><a href="#194944" label="[19:49:44]">&lt;stikonas&gt;</a></span><span class="message">I think I haven't committed those changes</span></div><div class="line" id="194946"><span class="nick" style="color:#8dd3c7"><a href="#194946" label="[19:49:46]">&lt;stikonas&gt;</a></span><span class="message">so need to redo</span></div><div class="line" id="195215"><span class="nick" style="color:#8dd3c7"><a href="#195215" label="[19:52:15]">&lt;stikonas&gt;</a></span><span class="message">well, should be easy, just need to rerun live-bootstrap a couple of times...</span></div><div class="line" id="211032"><span class="nick" style="color:#8dd3c7"><a href="#211032" label="[21:10:32]">&lt;stikonas&gt;</a></span><span class="message">pder: I've now pushed updated branch</span></div><div class="line" id="211038"><span class="nick" style="color:#8dd3c7"><a href="#211038" label="[21:10:38]">&lt;stikonas&gt;</a></span><span class="message">hopefully right this time</span></div><div class="line" id="211702"><span class="nick" style="color:#6b8072"><a href="#211702" label="[21:17:02]">&lt;pder&gt;</a></span><span class="message">great, thanks.  I am looking forward to seeing if those stdio flush on exit issues are resolved</span></div><div class="line" id="211852"><span class="nick" style="color:#8dd3c7"><a href="#211852" label="[21:18:52]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think they should be</span></div><div class="line" id="211859"><span class="nick" style="color:#8dd3c7"><a href="#211859" label="[21:18:59]">&lt;stikonas&gt;</a></span><span class="message">well, I didn't recompile anything else but tcc</span></div><div class="line" id="212015"><span class="nick" style="color:#8dd3c7"><a href="#212015" label="[21:20:15]">&lt;stikonas&gt;</a></span><span class="message">pder: so I've now also did some experiments (though,  I didn't record exact steps and was cheating with bison/autoconf/automake), and I was able to get quite far in gcc 4.0.4 build</span></div><div class="line" id="212036"><span class="nick" style="color:#8dd3c7"><a href="#212036" label="[21:20:36]">&lt;stikonas&gt;</a></span><span class="message">it went all the way to xgcc and then failed...</span></div><div class="line" id="212044"><span class="nick" style="color:#8dd3c7"><a href="#212044" label="[21:20:44]">&lt;stikonas&gt;</a></span><span class="message">probably didn't specify where libc is...</span></div><div class="line" id="212140"><span class="nick" style="color:#8dd3c7"><a href="#212140" label="[21:21:40]">&lt;stikonas&gt;</a></span><span class="message">but anyway, just feasibilty experiment... Didn't write anycode</span></div><div class="line" id="212153"><span class="nick" style="color:#8dd3c7"><a href="#212153" label="[21:21:53]">&lt;stikonas&gt;</a></span><span class="message">well, let's get bash in first...</span></div><div class="line" id="212201"><span class="nick" style="color:#8dd3c7"><a href="#212201" label="[21:22:01]">&lt;stikonas&gt;</a></span><span class="message">we'll probably need newer autoconf too</span></div><div class="line" id="212212"><span class="nick" style="color:#8dd3c7"><a href="#212212" label="[21:22:12]">&lt;stikonas&gt;</a></span><span class="message">and might need to rebuild stuff like gawk or sed</span></div><div class="line" id="213240"><span class="nick" style="color:#8dd3c7"><a href="#213240" label="[21:32:40]">&lt;stikonas&gt;</a></span><span class="message">pder: regarding your bash change, do we need to checksum bashbug? it's just a script basically coppied from tarball</span></div><div class="line" id="213251"><span class="nick" style="color:#8dd3c7"><a href="#213251" label="[21:32:51]">&lt;stikonas&gt;</a></span><span class="message">in similar cases with autoconf/automake we didn't do checksums</span></div><div class="line" id="213302"><span class="nick" style="color:#8dd3c7"><a href="#213302" label="[21:33:02]">&lt;stikonas&gt;</a></span><span class="message">so probably either should do all, or nothing to be consinstent</span></div><div class="line" id="213351"><span class="nick" style="color:#8dd3c7"><a href="#213351" label="[21:33:51]">&lt;stikonas&gt;</a></span><span class="message">and tcc/musl rebuild PR is here now <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/55">https://github.com/fosslinux/live-bootstrap/pull/55</a> </span></div><div class="line" id="213436"><span class="nick" style="color:#8dd3c7"><a href="#213436" label="[21:34:36]">&lt;stikonas&gt;</a></span><span class="message">actually, I can simplify .sh file by not creating /dev which should already exist</span></div><div class="line" id="214145"><span class="nick" style="color:#6b8072"><a href="#214145" label="[21:41:45]">&lt;pder&gt;</a></span><span class="message">I can remove the checksum for bashbug, so just checksum /after/bin/bash?</span></div><div class="line" id="214202"><span class="nick" style="color:#6d2462"><a href="#214202" label="[21:42:02]">&lt;stikonas[m]&gt;</a></span><span class="message">I think so</span></div><div class="line" id="214232"><span class="nick" style="color:#6d2462"><a href="#214232" label="[21:42:32]">&lt;stikonas[m]&gt;</a></span><span class="message">Anyway, it's not like we'll use bashbug...</span></div><div class="line" id="214324"><span class="nick" style="color:#6b8072"><a href="#214324" label="[21:43:24]">&lt;pder&gt;</a></span><span class="message">True</span></div><div class="line" id="214340"><span class="nick" style="color:#6b8072"><a href="#214340" label="[21:43:40]">&lt;pder&gt;</a></span><span class="message">My initial testcase of the stdio issue seems to be resolved without the patches which is good</span></div><div class="line" id="214441"><span class="nick" style="color:#234e69"><a href="#214441" label="[21:44:41]">&lt;rekado&gt;</a></span><span class="message">roptat: excellent work on the ocaml bootstrap!  This is really a substantial amount of work.</span></div><div class="line" id="214519"><span class="nick" style="color:#8dd3c7"><a href="#214519" label="[21:45:19]">&lt;stikonas&gt;</a></span><span class="message">pder: well, as expected since it was caused by picking wrong symbols</span></div><div class="line" id="214527"><span class="nick" style="color:#8dd3c7"><a href="#214527" label="[21:45:27]">&lt;stikonas&gt;</a></span><span class="message">when we hacked those weak symbols</span></div><div class="line" id="215020"><span class="nick" style="color:#6c3d55"><a href="#215020" label="[21:50:20]">&lt;fossy&gt;</a></span><span class="message">I don't feel very comfortable not checking binaries just because we don't use them, I'm pretty sure there's a part of bash that shells out to bashbug</span></div><div class="line" id="215026"><span class="nick" style="color:#d9d9d9"><a href="#215026" label="[21:50:26]">&lt;roptat&gt;</a></span><span class="message">rekado, most of the work was done by nore ;)</span></div><div class="line" id="215056"><span class="nick" style="color:#6c3d55"><a href="#215056" label="[21:50:56]">&lt;fossy&gt;</a></span><span class="message">Ooh! An ocaml bootstrap?</span></div><div class="line" id="215059"><span class="nick" style="color:#6c3d55"><a href="#215059" label="[21:50:59]">&lt;fossy&gt;</a></span><span class="message">link?</span></div><div class="line" id="215114"><span class="nick" style="color:#6c3d55"><a href="#215114" label="[21:51:14]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="215143"><span class="nick" style="color:#6c3d55"><a href="#215143" label="[21:51:43]">&lt;fossy&gt;</a></span><span class="message">stikonas: pder I forgot bashbug was a trivial script (not autogened) so nvm</span></div><div class="line" id="215214"><span class="nick" style="color:#d9d9d9"><a href="#215214" label="[21:52:14]">&lt;roptat&gt;</a></span><span class="message">fossy, <a rel="nofollow" href="https://www.freelists.org/post/bootstrappable/Announcing-the-bootstrap-of-OCaml">https://www.freelists.org/post/bootstrappable/Announcing-the-bootstrap-of-OCaml</a> </span></div><div class="line" id="215230"><span class="nick" style="color:#6c3d55"><a href="#215230" label="[21:52:30]">&lt;fossy&gt;</a></span><span class="message">I really should be subd to that ml</span></div><div class="line" id="215254"><span class="nick" style="color:#8dd3c7"><a href="#215254" label="[21:52:54]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think we should also write to that mailing list when we bootstrap gcc in live-bootstrap...</span></div><div class="line" id="215300"><span class="nick" style="color:#8dd3c7"><a href="#215300" label="[21:53:00]">&lt;stikonas&gt;</a></span><span class="message">especially if we get newer gcc than in guix</span></div><div class="line" id="215318"><span class="nick" style="color:#6c3d55"><a href="#215318" label="[21:53:18]">&lt;fossy&gt;</a></span><span class="message">oh reminds me</span></div><div class="line" id="215410"><span class="nick" style="color:#d9d9d9"><a href="#215410" label="[21:54:10]">&lt;roptat&gt;</a></span><span class="message">fossy, also, it's in guix now: <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/ocaml.scm#n108">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/ocaml.scm#n108</a> </span></div><div class="line" id="220531"><span class="nick" style="color:#6b8072"><a href="#220531" label="[22:05:31]">&lt;pder&gt;</a></span><span class="message">I think our build function would benefit from using named arguments.  Something like build checksums=pass1 script=foo.sh</span></div><div class="line" id="220709"><span class="nick" style="color:#6b8072"><a href="#220709" label="[22:07:09]">&lt;pder&gt;</a></span><span class="message">Currently if you want to override the 4th argument you have to specify values for the other 3</span></div><div class="line" id="221050"><span class="nick" style="color:#8dd3c7"><a href="#221050" label="[22:10:50]">&lt;stikonas&gt;</a></span><span class="message">pder: does bash support it?</span></div><div class="line" id="221515"><span class="nick" style="color:#234e69"><a href="#221515" label="[22:15:15]">&lt;rekado&gt;</a></span><span class="message">nore: also to you: I’m impressed with your work on the ocaml bootstrap!  I think it’s amazing.</span></div><div class="line" id="221613"><span class="nick" style="color:#234e69"><a href="#221613" label="[22:16:13]">&lt;rekado&gt;</a></span><span class="message">like civodul wrote in #guix it would be a lovely next step to turn this into a proper language for Guile, using its compiler tower.  (Not really bootstrap-related.)</span></div><div class="line" id="221615"><span class="nick" style="color:#6c3d55"><a href="#221615" label="[22:16:15]">&lt;fossy&gt;</a></span><span class="message">p</span></div><div class="line" id="221617"><span class="nick" style="color:#6c3d55"><a href="#221617" label="[22:16:17]">&lt;fossy&gt;</a></span><span class="message">oops</span></div><div class="line" id="221623"><span class="nick" style="color:#234e69"><a href="#221623" label="[22:16:23]">&lt;rekado&gt;</a></span><span class="message">p-oops?</span></div><div class="line" id="221635"><span class="nick" style="color:#6b8072"><a href="#221635" label="[22:16:35]">&lt;pder&gt;</a></span><span class="message">I havent tried it with our version of bash, but something like build() { local script checksum\n local &quot;${@}&quot; ... }</span></div><div class="line" id="221638"><span class="nick" style="color:#6c3d55"><a href="#221638" label="[22:16:38]">&lt;fossy&gt;</a></span><span class="message">pder: yeah, I am unsure if bash supports that</span></div><div class="line" id="221649"><span class="nick" style="color:#6c3d55"><a href="#221649" label="[22:16:49]">&lt;fossy&gt;</a></span><span class="message">perhaps a rearranging of the arguments might be better?</span></div><div class="line" id="221817"><span class="nick" style="color:#6b8072"><a href="#221817" label="[22:18:17]">&lt;pder&gt;</a></span><span class="message">ill play around with it, I was hoping to avoid positional arguments</span></div><div class="line" id="221925"><span class="nick" style="color:#6b8072"><a href="#221925" label="[22:19:25]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://stackoverflow.com/a/12128447">https://stackoverflow.com/a/12128447</a> </span></div><div class="line" id="222506"><span class="nick" style="color:#6b8072"><a href="#222506" label="[22:25:06]">&lt;pder&gt;</a></span><span class="message">stikonas: I pushed my bash branch which is based on musl-rebuild and things look good so far</span></div><div class="line" id="222527"><span class="nick" style="color:#8dd3c7"><a href="#222527" label="[22:25:27]">&lt;stikonas&gt;</a></span><span class="message">ok, we'll finally be able to chroot</span></div><div class="line" id="222925"><span class="nick" style="color:#8dd3c7"><a href="#222925" label="[22:29:25]">&lt;stikonas&gt;</a></span><span class="message">or on real system do something useful</span></div><div class="line" id="222933"><span class="nick" style="color:#8dd3c7"><a href="#222933" label="[22:29:33]">&lt;stikonas&gt;</a></span><span class="message">instead of sefauling</span></div><div class="line" id="223027"><span class="nick" style="color:#8dd3c7"><a href="#223027" label="[22:30:27]">&lt;stikonas&gt;</a></span><span class="message">pder: I think after &quot;Bootstrapping is complete&quot; we can try to run &quot;bash&quot;</span></div><div class="line" id="223046"><span class="nick" style="color:#8dd3c7"><a href="#223046" label="[22:30:46]">&lt;stikonas&gt;</a></span><span class="message">so in CI it will already be killed</span></div><div class="line" id="223057"><span class="nick" style="color:#8dd3c7"><a href="#223057" label="[22:30:57]">&lt;stikonas&gt;</a></span><span class="message">but if you run manually, you'll get a prompt inside qemu</span></div><div class="line" id="233148"><span class="nick" style="color:#bc80bd"><a href="#233148" label="[23:31:48]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: Bootstrapping is never complete, only abandoned for more pressing bootstrapping work.</span></div><div class="line" id="233252"><span class="nick" style="color:#bc80bd"><a href="#233252" label="[23:32:52]">&lt;OriansJ`&gt;</a></span><span class="message">As each &quot;completed&quot; bootstrap piece is just a stepping stone for greater bootstraping goals.</span></div><div class="line" id="233830"><span class="nick" style="color:#3c5b35"><a href="#233830" label="[23:38:30]">&lt;nore&gt;</a></span><span class="message">rekado: thanks!</span></div><div class="line" id="233916"><span class="nick" style="color:#af8d2f"><a href="#233916" label="[23:39:16]">&lt;mihi&gt;</a></span><span class="message">hello :) Still trying to bootstrap psyntax.scm (so I am that &quot;someone here&quot; mentioned by stikonas). From my (limited guile knowledge) testing, I got 'syntax, 'syntax-case, 'with-syntax, 'syntax-rules and 'define-syntax-rule to work. Custom ellipsis is not implemented, and neither is it fully hygienic, but should be good enough to eventually load psyntax.scm. I'm currently struggling with getting quasisyntax (unsyntax-splicing) to work.</span></div><div class="line" id="233939"><span class="nick" style="color:#af8d2f"><a href="#233939" label="[23:39:39]">&lt;mihi&gt;</a></span><span class="message">And maybe some cases I don't know even existing may be buggy.</span></div><div class="line" id="233959"><span class="nick" style="color:#af8d2f"><a href="#233959" label="[23:39:59]">&lt;mihi&gt;</a></span><span class="message">Current status is here: <a rel="nofollow" href="https://github.com/schierlm/guile-psyntax-bootstrapping/tree/wip">https://github.com/schierlm/guile-psyntax-bootstrapping/tree/wip</a> </span></div><div class="line" id="234035"><span class="nick" style="color:#af8d2f"><a href="#234035" label="[23:40:35]">&lt;mihi&gt;</a></span><span class="message">What puzzles me at the moment is to understand how line 102 in <a rel="nofollow" href="http://git.savannah.nongnu.org/cgit/guile.git/tree/module/ice-9/quasisyntax.scm#n102">http://git.savannah.nongnu.org/cgit/guile.git/tree/module/ice-9/quasisyntax.scm#n102</a>  is working...</span></div><div class="line" id="234121"><span class="nick" style="color:#af8d2f"><a href="#234121" label="[23:41:21]">&lt;mihi&gt;</a></span><span class="message">Syntax variable #'(t ...) is bound to a list of temporaries, and it is presumably picked up by the second t, while binding a new syntax variable with higher rank by the first t.</span></div><div class="line" id="234153"><span class="nick" style="color:#af8d2f"><a href="#234153" label="[23:41:53]">&lt;mihi&gt;</a></span><span class="message">But what exactly all those ellipses are doing is beyond my Scheme knowledge. Any help (or pointers who describe what these (... ...) are doing are appreciated.</span></div><div class="line" id="234206"><span class="nick" style="color:#af8d2f"><a href="#234206" label="[23:42:06]">&lt;mihi&gt;</a></span><span class="message">(I'm aware that I may be asking the wrong people here, but I'll try here first :D)</span></div><div class="line" id="234541"><span class="nick" style="color:#af8d2f"><a href="#234541" label="[23:45:41]">&lt;mihi&gt;</a></span><span class="message">another question for janneke: I see that Mes also comes with psyntax.pp, but I was unable to load it. Is it even used, or what did I miss?</span></div><br /></div></body></html>