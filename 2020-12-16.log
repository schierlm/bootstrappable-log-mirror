<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-12-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="010321"><span class="nick" style="color:#8dd3c7"><a href="#010321" label="[01:03:21]">&lt;OriansJ&gt;</a></span><span class="message">ok; that was fixed. M2-Planet for x86 is ready for your testing again pder</span></div><div class="line" id="014346"><span class="nick" style="color:#2e2a4a"><a href="#014346" label="[01:43:46]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://news.ycombinator.com/item?id=25434842">https://news.ycombinator.com/item?id=25434842</a> </span></div><div class="line" id="014414"><span class="nick" style="color:#2e2a4a"><a href="#014414" label="[01:44:14]">&lt;Hagfish&gt;</a></span><span class="message">Google have made a Rust library that has build dependencies on Perl, and Go, and a C++ toolchain</span></div><div class="line" id="014604"><span class="nick" style="color:#6b8072"><a href="#014604" label="[01:46:04]">&lt;pabs3&gt;</a></span><span class="message">theres a Rust library that uses a Python script to generate part of its Rust code, checks that generated Rust code into git and the crates.io package discards the Python script</span></div><div class="line" id="014629"><span class="nick" style="color:#6b8072"><a href="#014629" label="[01:46:29]">&lt;pabs3&gt;</a></span><span class="message">developers these days huh :)</span></div><div class="line" id="015038"><span class="nick" style="color:#80b1d3"><a href="#015038" label="[01:50:38]">&lt;nimaje&gt;</a></span><span class="message">afaiu that are dependencies of the bundled boringssl and not the rust lib, not sure what the dependencies of the rust lib are besides boringssl and rust</span></div><div class="line" id="015633"><span class="nick" style="color:#80b1d3"><a href="#015633" label="[01:56:33]">&lt;nimaje&gt;</a></span><span class="message">well, that doesn't seem to matter as it seems the only way to build that is to build the bundled boringssl with it</span></div><div class="line" id="021317"><span class="nick" style="color:#6d2462"><a href="#021317" label="[02:13:17]">&lt;siraben&gt;</a></span><span class="message">OriansJ: could you update mescc-tools-seed as well?</span></div><div class="line" id="021406"><span class="nick" style="color:#8dd3c7"><a href="#021406" label="[02:14:06]">&lt;OriansJ&gt;</a></span><span class="message">siraben: yes but I was hoping to get all of the architectures working with signed/unsigned compares first</span></div><div class="line" id="021446"><span class="nick" style="color:#6d2462"><a href="#021446" label="[02:14:46]">&lt;siraben&gt;</a></span><span class="message">I see. I forget, but this is needed for blynn-compiler to work properly again?</span></div><div class="line" id="021533"><span class="nick" style="color:#8dd3c7"><a href="#021533" label="[02:15:33]">&lt;OriansJ&gt;</a></span><span class="message">siraben: it is for pder to remove a hack from vm.c</span></div><div class="line" id="021634"><span class="nick" style="color:#8dd3c7"><a href="#021634" label="[02:16:34]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: could be worse; it could depend upon itself and be forever unbootstrappable</span></div><div class="line" id="021741"><span class="nick" style="color:#8dd3c7"><a href="#021741" label="[02:17:41]">&lt;OriansJ&gt;</a></span><span class="message">pabs3: sounds like someone took the wrong lesson from SICP.</span></div><div class="line" id="021755"><span class="nick" style="color:#6b8072"><a href="#021755" label="[02:17:55]">&lt;pabs3&gt;</a></span><span class="message">SICP?</span></div><div class="line" id="021814"><span class="nick" style="color:#6d2462"><a href="#021814" label="[02:18:14]">&lt;siraben&gt;</a></span><span class="message">Structure and Interpretation of Computer Programs</span></div><div class="line" id="021816"><span class="nick" style="color:#6d2462"><a href="#021816" label="[02:18:16]">&lt;siraben&gt;</a></span><span class="message">It's amazing</span></div><div class="line" id="021829"><span class="nick" style="color:#6d2462"><a href="#021829" label="[02:18:29]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.youtube.com/watch?v=-J_xL4IGhJA&amp;list=PLE18841CABEA24090">https://www.youtube.com/watch?v=-J_xL4IGhJA&amp;list=PLE18841CABEA24090</a> </span></div><div class="line" id="021847"><span class="nick" style="color:#8dd3c7"><a href="#021847" label="[02:18:47]">&lt;OriansJ&gt;</a></span><span class="message">siraben: one bit is the use of programs to generate programs</span></div><div class="line" id="021904"><span class="nick" style="color:#8dd3c7"><a href="#021904" label="[02:19:04]">&lt;OriansJ&gt;</a></span><span class="message">which is fine</span></div><div class="line" id="021931"><span class="nick" style="color:#8dd3c7"><a href="#021931" label="[02:19:31]">&lt;OriansJ&gt;</a></span><span class="message">the problem is hiding the program that did the generation.</span></div><div class="line" id="021944"><span class="nick" style="color:#6d2462"><a href="#021944" label="[02:19:44]">&lt;siraben&gt;</a></span><span class="message">Ah yes</span></div><div class="line" id="022009"><span class="nick" style="color:#6d2462"><a href="#022009" label="[02:20:09]">&lt;siraben&gt;</a></span><span class="message">Curiously, Ben Lynn says that the blobs in the beginning were generated by a program but I'm not sure if he shows that program</span></div><div class="line" id="022119"><span class="nick" style="color:#8dd3c7"><a href="#022119" label="[02:21:19]">&lt;OriansJ&gt;</a></span><span class="message">for example the bison functionality that gio had to solve that depended upon itself in the exact same commit; along with generated output for building, so people largely missed it but we hit it hard</span></div><div class="line" id="022159"><span class="nick" style="color:#8dd3c7"><a href="#022159" label="[02:21:59]">&lt;OriansJ&gt;</a></span><span class="message">siraben: it is why the blobs need to either be eliminated entirely or generated from something we can easily read and trust</span></div><div class="line" id="022225"><span class="nick" style="color:#6d2462"><a href="#022225" label="[02:22:25]">&lt;siraben&gt;</a></span><span class="message">RIght.</span></div><div class="line" id="022329"><span class="nick" style="color:#8dd3c7"><a href="#022329" label="[02:23:29]">&lt;OriansJ&gt;</a></span><span class="message">right now; unwinding his engineering choices to get something M2-Planet can bootstrap was been the priority but those blobs must be addressed before it goes into mescc-tools-seed</span></div><div class="line" id="022624"><span class="nick" style="color:#8dd3c7"><a href="#022624" label="[02:26:24]">&lt;OriansJ&gt;</a></span><span class="message">if there are guile primitives I need to add to mes-m2 to make it happen; I'll do the work</span></div><div class="line" id="022652"><span class="nick" style="color:#8dd3c7"><a href="#022652" label="[02:26:52]">&lt;OriansJ&gt;</a></span><span class="message">or if we need to write a C program that does the conversion; we can get that working.</span></div><div class="line" id="022736"><span class="nick" style="color:#8dd3c7"><a href="#022736" label="[02:27:36]">&lt;OriansJ&gt;</a></span><span class="message">but we need a solid plan to deal with all of the blobs;  either on a one by one basis or with one big program.</span></div><div class="line" id="022914"><span class="nick" style="color:#8dd3c7"><a href="#022914" label="[02:29:14]">&lt;OriansJ&gt;</a></span><span class="message">AMD64 support for unsigned compares is now up.</span></div><div class="line" id="023007"><span class="nick" style="color:#8dd3c7"><a href="#023007" label="[02:30:07]">&lt;OriansJ&gt;</a></span><span class="message">up next is armv7l and AArch64 and then it will be done</span></div><div class="line" id="024241"><span class="nick" style="color:#8dd3c7"><a href="#024241" label="[02:42:41]">&lt;OriansJ&gt;</a></span><span class="message">wait a second. armv7 allows big endian programs to run on little endian operating system?</span></div><div class="line" id="024244"><span class="nick" style="color:#8dd3c7"><a href="#024244" label="[02:42:44]">&lt;OriansJ&gt;</a></span><span class="message">???</span></div><div class="line" id="024303"><span class="nick" style="color:#8dd3c7"><a href="#024303" label="[02:43:03]">&lt;OriansJ&gt;</a></span><span class="message">Does it mean big endian instruction encoding or just data?</span></div><div class="line" id="024358"><span class="nick" style="color:#8dd3c7"><a href="#024358" label="[02:43:58]">&lt;OriansJ&gt;</a></span><span class="message">because if it is instruction encoding; a major clean upcould be done for armv7b</span></div><div class="line" id="025829"><span class="nick" style="color:#234e69"><a href="#025829" label="[02:58:29]">&lt;fossy&gt;</a></span><span class="message">What</span></div><div class="line" id="030135"><span class="nick" style="color:#8dd3c7"><a href="#030135" label="[03:01:35]">&lt;OriansJ&gt;</a></span><span class="message">fossy: to which?</span></div><div class="line" id="031209"><span class="nick" style="color:#8dd3c7"><a href="#031209" label="[03:12:09]">&lt;OriansJ&gt;</a></span><span class="message">armv7l unsigned compares are up and running</span></div><div class="line" id="031256"><span class="nick" style="color:#8dd3c7"><a href="#031256" label="[03:12:56]">&lt;OriansJ&gt;</a></span><span class="message">good night; hopefully either yt or deesix pick up the AArch64 piece which should be trivial</span></div><div class="line" id="035116"><span class="nick" style="color:#6c3d55"><a href="#035116" label="[03:51:16]">&lt;xentrac&gt;</a></span><span class="message">yay, congratulations!</span></div><div class="line" id="040926"><span class="nick" style="color:#234e69"><a href="#040926" label="[04:09:26]">&lt;fossy&gt;</a></span><span class="message">OriansJ: how weird</span></div><div class="line" id="040942"><span class="nick" style="color:#234e69"><a href="#040942" label="[04:09:42]">&lt;fossy&gt;</a></span><span class="message">the arm stuff</span></div><div class="line" id="040952"><span class="nick" style="color:#234e69"><a href="#040952" label="[04:09:52]">&lt;fossy&gt;</a></span><span class="message">thats why I went what</span></div><div class="line" id="053220"><span class="nick" style="color:#d9d9d9"><a href="#053220" label="[05:32:20]">&lt;pder&gt;</a></span><span class="message">OriansJ, thanks for fixing that unsigned compare issue.  I was able to revert my hack after updating x86_defs.M1, and it worked perfectly</span></div><div class="line" id="053818"><span class="nick" style="color:#d9d9d9"><a href="#053818" label="[05:38:18]">&lt;pder&gt;</a></span><span class="message">I also updated the Haskell files up to the virtually stage to eliminate the need for that script filter based on a fix that siraben made.  Those three lines needed a few tweaks in the later stages, so you may want to review my changes.</span></div><div class="line" id="055921"><span class="nick" style="color:#6d2462"><a href="#055921" label="[05:59:21]">&lt;siraben&gt;</a></span><span class="message">pder: I'll take a look as well</span></div><div class="line" id="060543"><span class="nick" style="color:#d9d9d9"><a href="#060543" label="[06:05:43]">&lt;pder&gt;</a></span><span class="message">siraben: thanks, I'm just barely understanding the Haskell syntax, so feel free to fix anything or reformat</span></div><div class="line" id="114107"><span class="nick" style="color:#6d2462"><a href="#114107" label="[11:41:07]">&lt;siraben&gt;</a></span><span class="message">pder: which branch did you push your changes to?</span></div><div class="line" id="120355"><span class="nick">***</span><span class="message notice">yt_` is now known as yt_</span></div><div class="line" id="120922"><span class="nick" style="color:#bc80bd"><a href="#120922" label="[12:09:22]">&lt;yt_&gt;</a></span><span class="message">OriansJ: fossy: in Armv7, endianness is a processor mode bit, so can be set by the OS on a per process basis.  However, it doesn't affect the instruction byte-order, which is always little-endian.</span></div><div class="line" id="121314"><span class="nick" style="color:#bc80bd"><a href="#121314" label="[12:13:14]">&lt;yt_&gt;</a></span><span class="message">deesix: OriansJ: I'll have a quick look at the unsigned comparisons for AArch64 this evening.  I did them earlier this week for MesCC so should be easy enough.</span></div><div class="line" id="133540"><span class="nick" style="color:#8dd3c7"><a href="#133540" label="[13:35:40]">&lt;OriansJ&gt;</a></span><span class="message">pder: looks good, merged</span></div><div class="line" id="133613"><span class="nick" style="color:#8dd3c7"><a href="#133613" label="[13:36:13]">&lt;OriansJ&gt;</a></span><span class="message">yt_: thank you</span></div><div class="line" id="133940"><span class="nick" style="color:#8dd3c7"><a href="#133940" label="[13:39:40]">&lt;OriansJ&gt;</a></span><span class="message">I guess that makes sense and explains why little endian dominated; supporting multiple endianess inside of a single binary is a massive pain with little benefit; as the ELF header and data would have to be big endian but all of the immediates and offsets would have to be little endian.</span></div><div class="line" id="140314"><span class="nick" style="color:#6d2462"><a href="#140314" label="[14:03:14]">&lt;siraben&gt;</a></span><span class="message">pder: hm, i need to think a bit more about how i'm changing the files, I'm not sure why it's not working past loinely</span></div><div class="line" id="150828"><span class="nick" style="color:#6d2462"><a href="#150828" label="[15:08:28]">&lt;siraben&gt;</a></span><span class="message">OriansJ: it appears the commit you merged is causing the CI to hang</span></div><div class="line" id="150832"><span class="nick" style="color:#6d2462"><a href="#150832" label="[15:08:32]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/blynn-compiler/runs/1563686577">https://github.com/oriansj/blynn-compiler/runs/1563686577</a> </span></div><div class="line" id="150836"><span class="nick" style="color:#6d2462"><a href="#150836" label="[15:08:36]">&lt;siraben&gt;</a></span><span class="message">Does it complete on your machine?</span></div><div class="line" id="151714"><span class="nick" style="color:#6d2462"><a href="#151714" label="[15:17:14]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/pder/blynn-compiler/runs/1561591341">https://github.com/pder/blynn-compiler/runs/1561591341</a> </span></div><div class="line" id="151723"><span class="nick" style="color:#6d2462"><a href="#151723" label="[15:17:23]">&lt;siraben&gt;</a></span><span class="message">It appears that it failed on pder's branch as well after 6 hours</span></div><div class="line" id="151837"><span class="nick" style="color:#6d2462"><a href="#151837" label="[15:18:37]">&lt;siraben&gt;</a></span><span class="message">I should set a timeout on the builds</span></div><div class="line" id="151908"><span class="nick" style="color:#d9d9d9"><a href="#151908" label="[15:19:08]">&lt;pder&gt;</a></span><span class="message">siraben, have you updated to the latest M2-Planet.  That should fix the hang problem building lonely or patty</span></div><div class="line" id="151928"><span class="nick" style="color:#6d2462"><a href="#151928" label="[15:19:28]">&lt;siraben&gt;</a></span><span class="message">pder: i'll bump the version of mescc-tools-seed then</span></div><div class="line" id="151948"><span class="nick" style="color:#6d2462"><a href="#151948" label="[15:19:48]">&lt;siraben&gt;</a></span><span class="message">hopefully the submodule is updated</span></div><div class="line" id="152000"><span class="nick" style="color:#6d2462"><a href="#152000" label="[15:20:00]">&lt;siraben&gt;</a></span><span class="message">ah it's still lagged behind</span></div><div class="line" id="152007"><span class="nick" style="color:#d9d9d9"><a href="#152007" label="[15:20:07]">&lt;pder&gt;</a></span><span class="message">if you bootstrap M2-Planet from mescc-tools-seed you will need to update the x86_defs.M1 file in x866</span></div><div class="line" id="152009"><span class="nick" style="color:#d9d9d9"><a href="#152009" label="[15:20:09]">&lt;pder&gt;</a></span><span class="message">x86</span></div><div class="line" id="152142"><span class="nick" style="color:#6d2462"><a href="#152142" label="[15:21:42]">&lt;siraben&gt;</a></span><span class="message">it's good time to split the CI into two jobs as well, one using mescc-tools-seed and one using m2-planet</span></div><div class="line" id="152155"><span class="nick" style="color:#6d2462"><a href="#152155" label="[15:21:55]">&lt;siraben&gt;</a></span><span class="message">s/good/probably a good</span></div><div class="line" id="152317"><span class="nick" style="color:#d9d9d9"><a href="#152317" label="[15:23:17]">&lt;pder&gt;</a></span><span class="message">siraben, how do these tests get triggered?  Is it everytime someone pushes to master?</span></div><div class="line" id="152334"><span class="nick" style="color:#6d2462"><a href="#152334" label="[15:23:34]">&lt;siraben&gt;</a></span><span class="message">pder: yes in any branch of any fork, and any PR</span></div><div class="line" id="152341"><span class="nick" style="color:#6d2462"><a href="#152341" label="[15:23:41]">&lt;siraben&gt;</a></span><span class="message">it costs nothing to me as it is free for public projects</span></div><div class="line" id="152608"><span class="nick" style="color:#6d2462"><a href="#152608" label="[15:26:08]">&lt;siraben&gt;</a></span><span class="message">the CI isn't perfect of course so I'll adjust it as we go along</span></div><div class="line" id="152628"><span class="nick" style="color:#6d2462"><a href="#152628" label="[15:26:28]">&lt;siraben&gt;</a></span><span class="message">hopefully less failures and more distributed testing (building blynn-compiler on different platforms) occurs</span></div><div class="line" id="152736"><span class="nick" style="color:#6d2462"><a href="#152736" label="[15:27:36]">&lt;siraben&gt;</a></span><span class="message">pder: I made a modest PR <a rel="nofollow" href="https://github.com/pder/blynn-compiler/pull/2">https://github.com/pder/blynn-compiler/pull/2</a> </span></div><div class="line" id="154151"><span class="nick" style="color:#6d2462"><a href="#154151" label="[15:41:51]">&lt;siraben&gt;</a></span><span class="message">OriansJ: build fixed by basing blynn-compiler off m2-planet, <a rel="nofollow" href="https://github.com/oriansj/blynn-compiler/pull/8">https://github.com/oriansj/blynn-compiler/pull/8</a> </span></div><div class="line" id="160003"><span class="nick" style="color:#d9d9d9"><a href="#160003" label="[16:00:03]">&lt;pder&gt;</a></span><span class="message">OriansJ: I updated mescc-tools-seed by updating the M2-Planet submodule and updating the x86 and AMD64_defs.M1 files <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed/pull/20">https://github.com/oriansj/mescc-tools-seed/pull/20</a> </span></div><div class="line" id="160112"><span class="nick" style="color:#d9d9d9"><a href="#160112" label="[16:01:12]">&lt;pder&gt;</a></span><span class="message">siraben: if you build from my master branch in mescc-tools-seed, the resulting M2-Planet and other tools should allow the blynn-compiler to finish without errors</span></div><div class="line" id="160221"><span class="nick" style="color:#6d2462"><a href="#160221" label="[16:02:21]">&lt;siraben&gt;</a></span><span class="message">pder: thanks, I'll try it out</span></div><div class="line" id="183915"><span class="nick" style="color:#8dd3c7"><a href="#183915" label="[18:39:15]">&lt;OriansJ&gt;</a></span><span class="message">siraben: still waiting for the AArch64 patch for M2-Planet before I make it merge the latest version of M2-Planet into mescc-tools-seed as I was going to do an M2-Planet release as it is a significant change in behavior</span></div><div class="line" id="185128"><span class="nick" style="color:#8dd3c7"><a href="#185128" label="[18:51:28]">&lt;OriansJ&gt;</a></span><span class="message">siraben: your pull request has been merged</span></div><div class="line" id="185512"><span class="nick" style="color:#6d2462"><a href="#185512" label="[18:55:12]">&lt;siraben&gt;</a></span><span class="message">OriansJ: thanks.</span></div><div class="line" id="185536"><span class="nick" style="color:#6d2462"><a href="#185536" label="[18:55:36]">&lt;siraben&gt;</a></span><span class="message">Also ensures builds longer than 10 minutes will time out</span></div><div class="line" id="185738"><span class="nick" style="color:#8dd3c7"><a href="#185738" label="[18:57:38]">&lt;OriansJ&gt;</a></span><span class="message">pder: I'll merge your pull but next time please remember to update the checksums too.</span></div><div class="line" id="190200"><span class="nick" style="color:#8dd3c7"><a href="#190200" label="[19:02:00]">&lt;OriansJ&gt;</a></span><span class="message">and pder your pull request has been merged</span></div><div class="line" id="190213"><span class="nick" style="color:#8dd3c7"><a href="#190213" label="[19:02:13]">&lt;OriansJ&gt;</a></span><span class="message">when I have more time I'll fix the AArch64 checksums too</span></div><div class="line" id="193953"><span class="nick" style="color:#d9d9d9"><a href="#193953" label="[19:39:53]">&lt;pder&gt;</a></span><span class="message">OriansJ: ok, will do.  Is that the SHA256SUMS file in each arch directory?</span></div><div class="line" id="202447"><span class="nick" style="color:#2e2a4a"><a href="#202447" label="[20:24:47]">&lt;Hagfish&gt;</a></span><span class="message">there's been so much great work happening here recently, well done everyone</span></div><div class="line" id="202509"><span class="nick" style="color:#2e2a4a"><a href="#202509" label="[20:25:09]">&lt;Hagfish&gt;</a></span><span class="message">are there any other big milestones that might happen by the end of the year (if things continue at this rate)?</span></div><div class="line" id="234450"><span class="nick" style="color:#bc80bd"><a href="#234450" label="[23:44:50]">&lt;yt_&gt;</a></span><span class="message">OriansJ: sorry about the delay, looking at AArch64 unsigned comparisons now</span></div><br /></div></body></html>