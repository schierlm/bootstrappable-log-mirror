<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-02-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="072956"><span class="nick" style="color:#389600"><a href="#072956" label="[07:29:56]">&lt;fossy&gt;</a></span><span class="message">Googulator: i can confirm the builder-hex0 patch allowed my build to get past the point where it was before</span></div><div class="line" id="073002"><span class="nick" style="color:#389600"><a href="#073002" label="[07:30:02]">&lt;fossy&gt;</a></span><span class="message">on one of my bare metal machiens</span></div><div class="line" id="073051"><span class="nick" style="color:#389600"><a href="#073051" label="[07:30:51]">&lt;fossy&gt;</a></span><span class="message">however i have another &quot;problem&quot; (kind of); builder-hex0 seems to print the content of all files to my screen while booting? i'm not sure if this is new or a change i missed or something, but we need a switch to disable it if it is</span></div><div class="line" id="073105"><span class="nick" style="color:#389600"><a href="#073105" label="[07:31:05]">&lt;fossy&gt;</a></span><span class="message">problem 1 with that: it makes srcfs creation reallllly slow on some systems because of console scrolling</span></div><div class="line" id="073126"><span class="nick" style="color:#389600"><a href="#073126" label="[07:31:26]">&lt;fossy&gt;</a></span><span class="message">problem 2: when it gets to binary files my machine starts incessently beeping because of beep ASCII code being repeatedly printed to console LOL</span></div><div class="line" id="084549"><span class="nick" style="color:#8dd3c7"><a href="#084549" label="[08:45:49]">&lt;Guest991&gt;</a></span><span class="message">HI, I did that but after turning on the bios it does some action and restarts the computer, the link has a video of what happens when I turn it on in the bios <a rel="nofollow" href="https://greenhosting.am/db/get?id=320dfce8-f0b3-4f04-be70-be873b2c168d-f12a6f83-270d-4fd2-8c18-d679623b5f18#316ccca9-8d3d-42f0-a61c-ebe9a4ad24d2-926e2ce1-e35f-4c6e-bd9d-cd085dbdb30a">https://greenhosting.am/db/get?id=320dfce8-f0b3-4f04-be70-be873b2c168d-f12a6f83-270d-4fd2-8c18-d679623b5f18#316ccca9-8d3d-42f0-a61c-ebe9a4ad24d2-926e2ce1-e35f-4c6e-bd9d-cd085dbdb30a</a> </span></div><div class="line" id="085359"><span class="nick" style="color:#2e2a4a"><a href="#085359" label="[08:53:59]">&lt;Googulator&gt;</a></span><span class="message">fossy: I didn't implement such a change, something else is likely going on</span></div><div class="line" id="091518"><span class="nick" style="color:#2e2a4a"><a href="#091518" label="[09:15:18]">&lt;Googulator&gt;</a></span><span class="message">fossy: it's most likely going wrong here: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/blob/main/builder-hex0.hex2#L2155">https://github.com/ironmeld/builder-hex0/blob/main/builder-hex0.hex2#L2155</a> </span></div><div class="line" id="091555"><span class="nick" style="color:#2e2a4a"><a href="#091555" label="[09:15:55]">&lt;Googulator&gt;</a></span><span class="message">if that write wrongly targets open file numbers &lt;=2, it will write to the screen instead of the memory FS</span></div><div class="line" id="091657"><span class="nick" style="color:#2e2a4a"><a href="#091657" label="[09:16:57]">&lt;Googulator&gt;</a></span><span class="message">BTW, yes, I am planning a feature to print file contents to the screen, but it's gonna be opt-in, and it also will specifically exclude compressed files</span></div><div class="line" id="102100"><span class="nick" style="color:#6b8072"><a href="#102100" label="[10:21:00]">&lt;oriansj&gt;</a></span><span class="message">deesix: thinking further on the live-bootstrap tarball mirror problem; we can easily setup our own server for distributing copies and IPFS/GNUnet/bittorrent can be used as a fallback. With sha256sum being used in the short term to secure the contents but we may wish to think about multi-signatures and things like sig-store and Crev.</span></div><div class="line" id="123252"><span class="nick" style="color:#389600"><a href="#123252" label="[12:32:52]">&lt;fossy&gt;</a></span><span class="message">Guest991: we discussed your problem yesterday here in this channel and there is not really a solution currently possible</span></div><div class="line" id="123302"><span class="nick" style="color:#389600"><a href="#123302" label="[12:33:02]">&lt;fossy&gt;</a></span><span class="message">to be very clear: your hardware does not currently support bare metal bootstrap</span></div><div class="line" id="123530"><span class="nick" style="color:#80b1d3"><a href="#123530" label="[12:35:30]">&lt;stikonas&gt;</a></span><span class="message">Guest991: yes, you will have to use stage0-uefi route...</span></div><div class="line" id="125015"><span class="nick" style="color:#6d2462"><a href="#125015" label="[12:50:15]">&lt;mid-kid&gt;</a></span><span class="message">Does anyone happen to know how I can figure out where gcc loads its default specs files from</span></div><div class="line" id="125049"><span class="nick" style="color:#6d2462"><a href="#125049" label="[12:50:49]">&lt;mid-kid&gt;</a></span><span class="message">Bootstrapping multilib is always a major pain</span></div><div class="line" id="134910"><span class="nick" style="color:#6b8072"><a href="#134910" label="[13:49:10]">&lt;oriansj&gt;</a></span><span class="message">mid-kid: well, the source code always tells the truth; the documentation sometimes lies and memories can be faulty.</span></div><div class="line" id="134946"><span class="nick" style="color:#6b8072"><a href="#134946" label="[13:49:46]">&lt;oriansj&gt;</a></span><span class="message">although the source code can present itself in misleading forms.</span></div><div class="line" id="135146"><span class="nick" style="color:#80b1d3"><a href="#135146" label="[13:51:46]">&lt;stikonas&gt;</a></span><span class="message">for file access usually strace'ing gives a quick answer</span></div><div class="line" id="135502"><span class="nick" style="color:#6b8072"><a href="#135502" label="[13:55:02]">&lt;oriansj&gt;</a></span><span class="message">which can usually be combined with grep -iR $filename to find where in the source it is</span></div><div class="line" id="135532"><span class="nick" style="color:#6b8072"><a href="#135532" label="[13:55:32]">&lt;oriansj&gt;</a></span><span class="message">then you can probably know which flags/environment variables may impact that</span></div><div class="line" id="145841"><span class="nick" style="color:#2e2a4a"><a href="#145841" label="[14:58:41]">&lt;Googulator&gt;</a></span><span class="message">YES! First successful build of the new kernel in qemu!</span></div><div class="line" id="150229"><span class="nick" style="color:#2e2a4a"><a href="#150229" label="[15:02:29]">&lt;Googulator&gt;</a></span><span class="message">To reproduce, use <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/commit/4d5c81d3158fa5f0a38beeeb51418962e245864f">https://github.com/Googulator/live-bootstrap/commit/4d5c81d3158fa5f0a38beeeb51418962e245864f</a>  with stage0-posix/mescc-tools-extra manually updated to the latest master and unxz's checksum corrected to 7e2fb5aafa40aa65e427deec89d95c556a950dbcd7e0e1631edcddc035de9d30 in stage0-posix/x86.answers</span></div><div class="line" id="152852"><span class="nick" style="color:#2e2a4a"><a href="#152852" label="[15:28:52]">&lt;Googulator&gt;</a></span><span class="message">Pushed as <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/442">https://github.com/fosslinux/live-bootstrap/pull/442</a>  (draft until oriansj merges <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/78">https://github.com/oriansj/stage0-posix/pull/78</a>) </span></div><div class="line" id="154315"><span class="nick" style="color:#234e69"><a href="#154315" label="[15:43:15]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; Googulator: can you update changelog too for stage0-posix</span></div><div class="line" id="154940"><span class="nick" style="color:#2e2a4a"><a href="#154940" label="[15:49:40]">&lt;Googulator&gt;</a></span><span class="message">stikonas: should we have a separate entry for &quot;Fix handling of compressed and uncompressed sizes in the aforementioned unxz program&quot; after &quot;Add a fully functional unxz program&quot;?</span></div><div class="line" id="154954"><span class="nick" style="color:#2e2a4a"><a href="#154954" label="[15:49:54]">&lt;Googulator&gt;</a></span><span class="message">That feels a little weird to me.</span></div><div class="line" id="155022"><span class="nick" style="color:#2e2a4a"><a href="#155022" label="[15:50:22]">&lt;Googulator&gt;</a></span><span class="message">(unxz is new in main / will be new in the next release of stage0-posix)</span></div><div class="line" id="155207"><span class="nick" style="color:#234e69"><a href="#155207" label="[15:52:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; OK, maybe skip it then...</span></div><div class="line" id="160235"><span class="nick" style="color:#6d2462"><a href="#160235" label="[16:02:35]">&lt;mid-kid&gt;</a></span><span class="message">oriansj: I ended up just grabbing a copy of LFS 9.0, lol</span></div><div class="line" id="160254"><span class="nick" style="color:#6d2462"><a href="#160254" label="[16:02:54]">&lt;mid-kid&gt;</a></span><span class="message">It's $(dirname $(gcc --print-libgcc-file-name))/specs</span></div><div class="line" id="160304"><span class="nick" style="color:#6d2462"><a href="#160304" label="[16:03:04]">&lt;mid-kid&gt;</a></span><span class="message">and it's additive on top of the baked-in specs</span></div><div class="line" id="160343"><span class="nick" style="color:#6d2462"><a href="#160343" label="[16:03:43]">&lt;mid-kid&gt;</a></span><span class="message">I wish this was documented somewhere before LFS 9.0 disappears from the website though</span></div><div class="line" id="165154"><span class="nick" style="color:#234e69"><a href="#165154" label="[16:51:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; mid-kid: do we need multilib to switch to 64 bits?</span></div><div class="line" id="165215"><span class="nick" style="color:#234e69"><a href="#165215" label="[16:52:15]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; Though perhaps multilib helps</span></div><div class="line" id="165227"><span class="nick" style="color:#234e69"><a href="#165227" label="[16:52:27]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; But most live-bootstrap stuff is static</span></div><div class="line" id="165310"><span class="nick" style="color:#234e69"><a href="#165310" label="[16:53:10]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; So it might just work to replace gcc with x86 to x86_64 crosscompiler</span></div><div class="line" id="170627"><span class="nick" style="color:#6d2462"><a href="#170627" label="[17:06:27]">&lt;mid-kid&gt;</a></span><span class="message">no, we don't need multilib to simply &quot;switch&quot; to 64 bits</span></div><div class="line" id="170705"><span class="nick" style="color:#6d2462"><a href="#170705" label="[17:07:05]">&lt;mid-kid&gt;</a></span><span class="message">LFS chapters 5 and 6 deal with making a cross-compiler and cross-compiling glibc and a bunch of tools which is good enough</span></div><div class="line" id="170745"><span class="nick" style="color:#6d2462"><a href="#170745" label="[17:07:45]">&lt;mid-kid&gt;</a></span><span class="message">good enough to switch to 64 bits I mean</span></div><div class="line" id="170756"><span class="nick" style="color:#6d2462"><a href="#170756" label="[17:07:56]">&lt;mid-kid&gt;</a></span><span class="message">(it works if you follow the instructions verbatim)</span></div><div class="line" id="170826"><span class="nick" style="color:#6d2462"><a href="#170826" label="[17:08:26]">&lt;mid-kid&gt;</a></span><span class="message">problem is that gentoo's default setup is multilib</span></div><div class="line" id="170839"><span class="nick" style="color:#6d2462"><a href="#170839" label="[17:08:39]">&lt;mid-kid&gt;</a></span><span class="message">and to build a multilib gcc you need glibc built as both 32-bit and 64-bit</span></div><div class="line" id="170854"><span class="nick" style="color:#6d2462"><a href="#170854" label="[17:08:54]">&lt;mid-kid&gt;</a></span><span class="message">but to build glibc as 32-bit you need a 32-bit libgcc</span></div><div class="line" id="170957"><span class="nick" style="color:#6d2462"><a href="#170957" label="[17:09:57]">&lt;mid-kid&gt;</a></span><span class="message">and to build a 32-bit libgcc you need the 32-bit glibc headers and a 32-bit gcc</span></div><div class="line" id="171211"><span class="nick" style="color:#6d2462"><a href="#171211" label="[17:12:11]">&lt;mid-kid&gt;</a></span><span class="message">and to build a 32-bit libgcc with unwind support you need a 32-bit libstdc++</span></div><div class="line" id="171227"><span class="nick" style="color:#6d2462"><a href="#171227" label="[17:12:27]">&lt;mid-kid&gt;</a></span><span class="message">s/libgcc/glibc/</span></div><div class="line" id="171250"><span class="nick" style="color:#6d2462"><a href="#171250" label="[17:12:50]">&lt;mid-kid&gt;</a></span><span class="message">Basically I've been wrestling with the build systems to see if I could manage a shortcut through this crap</span></div><div class="line" id="171356"><span class="nick" style="color:#6d2462"><a href="#171356" label="[17:13:56]">&lt;mid-kid&gt;</a></span><span class="message">I could've sworn I had hacked my way through this before without too much of an issue</span></div><div class="line" id="171421"><span class="nick" style="color:#6d2462"><a href="#171421" label="[17:14:21]">&lt;mid-kid&gt;</a></span><span class="message">s/too much of an issue/too many manual steps/</span></div><div class="line" id="171555"><span class="nick" style="color:#6d2462"><a href="#171555" label="[17:15:55]">&lt;mid-kid&gt;</a></span><span class="message">But right now the closest I can remember I have is this: <a rel="nofollow" href="https://mid-kid.root.sx/git/mid-kid/bootstrap/src/branch/master/gcc/build_cross.sh#L150-L166">https://mid-kid.root.sx/git/mid-kid/bootstrap/src/branch/master/gcc/build_cross.sh#L150-L166</a> </span></div><div class="line" id="171606"><span class="nick" style="color:#6d2462"><a href="#171606" label="[17:16:06]">&lt;mid-kid&gt;</a></span><span class="message">which is just not something I wanna mess with again right now</span></div><div class="line" id="171629"><span class="nick" style="color:#6d2462"><a href="#171629" label="[17:16:29]">&lt;mid-kid&gt;</a></span><span class="message">So instead I've been messing with leveraging portage's capabilities to build a cross-compiler</span></div><div class="line" id="171645"><span class="nick" style="color:#6d2462"><a href="#171645" label="[17:16:45]">&lt;mid-kid&gt;</a></span><span class="message">Defeating the point of using LFS as an intermediate step in the first place</span></div><div class="line" id="171647"><span class="nick" style="color:#6d2462"><a href="#171647" label="[17:16:47]">&lt;mid-kid&gt;</a></span><span class="message">But oh well</span></div><div class="line" id="171924"><span class="nick" style="color:#234e69"><a href="#171924" label="[17:19:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; If you can get portage to do that, might be easier to automate...</span></div><div class="line" id="172639"><span class="nick" style="color:#6d2462"><a href="#172639" label="[17:26:39]">&lt;mid-kid&gt;</a></span><span class="message">Yeah, I just thought the LFS instructions would be easier to mangle to also cross-compile to other arches like aarch64 instead of just x86_64.</span></div><div class="line" id="172700"><span class="nick" style="color:#6d2462"><a href="#172700" label="[17:27:00]">&lt;mid-kid&gt;</a></span><span class="message">Might be able to pull something together with just portage but eh, we'll see</span></div><div class="line" id="184343"><span class="nick" style="color:#6b8072"><a href="#184343" label="[18:43:43]">&lt;oriansj&gt;</a></span><span class="message">Googulator:  Merged</span></div><div class="line" id="184634"><span class="nick" style="color:#6b8072"><a href="#184634" label="[18:46:34]">&lt;oriansj&gt;</a></span><span class="message">mid-kid: <a rel="nofollow" href="https://www.linuxfromscratch.org/museum/lfs-museum/">https://www.linuxfromscratch.org/museum/lfs-museum/</a>  ummm</span></div><div class="line" id="184656"><span class="nick" style="color:#6d2462"><a href="#184656" label="[18:46:56]">&lt;mid-kid&gt;</a></span><span class="message">ah I didn't know, thanks</span></div><div class="line" id="185145"><span class="nick" style="color:#6d2462"><a href="#185145" label="[18:51:45]">&lt;mid-kid&gt;</a></span><span class="message">So, portage has this feature where you can pass extra flags to `make` using EXTRA_EMAKE it does so by calling &quot;make ${EXTRA_EMAKE}&quot;, relying on variable expansion to pass multiple flags. I'm trying to set EXTRA_EMAKE=&quot;TARGET-libcc1='all libsuffix=../lib64'&quot;, but it always splits at the space, so TARGET-libcc1 ends up being &quot;'all&quot;, instead of the whole thing.</span></div><div class="line" id="185201"><span class="nick" style="color:#6d2462"><a href="#185201" label="[18:52:01]">&lt;mid-kid&gt;</a></span><span class="message">Is there a way to somehow escape the space to have it be expanded by make only?</span></div><div class="line" id="185333"><span class="nick" style="color:#6d2462"><a href="#185333" label="[18:53:33]">&lt;mid-kid&gt;</a></span><span class="message">This is a bash variable inherited from the environment, idk if that matters</span></div><div class="line" id="185608"><span class="nick" style="color:#6d2462"><a href="#185608" label="[18:56:08]">&lt;mid-kid&gt;</a></span><span class="message">Apparently I can do EXTRA_EMAKE=&quot;TARGET-libcc1=all TARGET-libcc1+=libsuffix=../lib64&quot;. This feels awful :)</span></div><div class="line" id="185706"><span class="nick" style="color:#6d2462"><a href="#185706" label="[18:57:06]">&lt;mid-kid&gt;</a></span><span class="message">And it doesn't get passed during install ._.</span></div><div class="line" id="185855"><span class="nick" style="color:#6b8072"><a href="#185855" label="[18:58:55]">&lt;oriansj&gt;</a></span><span class="message">\ can be used to escape and \\ for double nested escapes</span></div><div class="line" id="185949"><span class="nick" style="color:#6d2462"><a href="#185949" label="[18:59:49]">&lt;mid-kid&gt;</a></span><span class="message">the \ is kept unfortunately</span></div><div class="line" id="185959"><span class="nick" style="color:#6d2462"><a href="#185959" label="[18:59:59]">&lt;mid-kid&gt;</a></span><span class="message">doesn't seem to work</span></div><div class="line" id="190009"><span class="nick" style="color:#6d2462"><a href="#190009" label="[19:00:09]">&lt;mid-kid&gt;</a></span><span class="message">splits at the space, ignoring the \</span></div><div class="line" id="190733"><span class="nick" style="color:#6b8072"><a href="#190733" label="[19:07:33]">&lt;oriansj&gt;</a></span><span class="message">swap the &quot; and '</span></div><div class="line" id="190947"><span class="nick" style="color:#6b8072"><a href="#190947" label="[19:09:47]">&lt;oriansj&gt;</a></span><span class="message">actually EXTRA_EMAKE='TARGET-libcc1=all libsuffix=../lib64' should be the correct thing as you want the space to be used to separate the two environmental variables</span></div><div class="line" id="190953"><span class="nick" style="color:#6d2462"><a href="#190953" label="[19:09:53]">&lt;mid-kid&gt;</a></span><span class="message">no dice either, you can try it yourself by `printf '%s\n' ${EXTRA_EMAKE}`</span></div><div class="line" id="191040"><span class="nick" style="color:#6d2462"><a href="#191040" label="[19:10:40]">&lt;mid-kid&gt;</a></span><span class="message">oriansj: I don't want to separate them, I want the contents of TARGET-libcc1 to be, verbatim &quot;all libsuffix=../lib64&quot;</span></div><div class="line" id="191051"><span class="nick" style="color:#6d2462"><a href="#191051" label="[19:10:51]">&lt;mid-kid&gt;</a></span><span class="message">so the latter variable gets passed to the subdir build</span></div><div class="line" id="191248"><span class="nick" style="color:#6d2462"><a href="#191248" label="[19:12:48]">&lt;mid-kid&gt;</a></span><span class="message">bleh, this method didn't work anyway</span></div><div class="line" id="191527"><span class="nick" style="color:#6b8072"><a href="#191527" label="[19:15:27]">&lt;oriansj&gt;</a></span><span class="message">so you want it to resolve to be the command:  make 'TARGET-libcc1=all libsuffix=../lib64' ??? I don't think the makefile is likely to have such a named target</span></div><div class="line" id="191611"><span class="nick" style="color:#6b8072"><a href="#191611" label="[19:16:11]">&lt;oriansj&gt;</a></span><span class="message">but make TARGET-libcc1=all is entirely possible and libsuffix=../lib64 would be a valid environmental variable to set</span></div><div class="line" id="191917"><span class="nick" style="color:#6b8072"><a href="#191917" label="[19:19:17]">&lt;oriansj&gt;</a></span><span class="message">and the command make all with the environmental variables TARGET-libcc1=all libsuffix=../lib64 set is also possible.</span></div><div class="line" id="192016"><span class="nick" style="color:#6b8072"><a href="#192016" label="[19:20:16]">&lt;oriansj&gt;</a></span><span class="message">^all libsuffix=^all and libsuffix=^</span></div><div class="line" id="194107"><span class="nick" style="color:#6d2462"><a href="#194107" label="[19:41:07]">&lt;mid-kid&gt;</a></span><span class="message">oriansj: the `make` command-line doesn't just accept targets, but also variable overrides</span></div><div class="line" id="194230"><span class="nick" style="color:#6d2462"><a href="#194230" label="[19:42:30]">&lt;mid-kid&gt;</a></span><span class="message">the makefile has a variable called TARGET-libcc1 which isn't inherited from the environment, that I want to replace</span></div><div class="line" id="194248"><span class="nick" style="color:#6d2462"><a href="#194248" label="[19:42:48]">&lt;mid-kid&gt;</a></span><span class="message">The ultimate goal is replacing the libsuffix variable in a subdirectory makefile</span></div><div class="line" id="194345"><span class="nick" style="color:#6d2462"><a href="#194345" label="[19:43:45]">&lt;mid-kid&gt;</a></span><span class="message">but it seems I cannot use TARGET-libcc1 for this for other reasons</span></div><div class="line" id="195934"><span class="nick" style="color:#6d2462"><a href="#195934" label="[19:59:34]">&lt;mid-kid&gt;</a></span><span class="message">What worked is something significantly worse: EXTRA_EMAKE=&quot;MAKE=make MAKE+=libsuffix=../lib64&quot;</span></div><div class="line" id="200009"><span class="nick" style="color:#6d2462"><a href="#200009" label="[20:00:09]">&lt;mid-kid&gt;</a></span><span class="message">oh well, it'll do</span></div><div class="line" id="214533"><span class="nick" style="color:#2e2a4a"><a href="#214533" label="[21:45:33]">&lt;Googulator&gt;</a></span><span class="message">fossy, stikonas: Linux 4.14 upgrade is ready for review: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/442">https://github.com/fosslinux/live-bootstrap/pull/442</a> </span></div><div class="line" id="214543"><span class="nick" style="color:#80b1d3"><a href="#214543" label="[21:45:43]">&lt;stikonas&gt;</a></span><span class="message">Googulator: yaeh, I'm already looking</span></div><div class="line" id="214646"><span class="nick" style="color:#2e2a4a"><a href="#214646" label="[21:46:46]">&lt;Googulator&gt;</a></span><span class="message">stikonas: thank you</span></div><div class="line" id="214719"><span class="nick" style="color:#2e2a4a"><a href="#214719" label="[21:47:19]">&lt;Googulator&gt;</a></span><span class="message">make sure you're reviewing the version with e24c071856f657f892b4888347a2fbdf97771a7b as the top commit, as I've made a bit of a mess with quite a few force pushes before I arrived at that version</span></div><div class="line" id="215012"><span class="nick" style="color:#80b1d3"><a href="#215012" label="[21:50:12]">&lt;stikonas&gt;</a></span><span class="message">yea, I was looking at it</span></div><div class="line" id="215016"><span class="nick" style="color:#80b1d3"><a href="#215016" label="[21:50:16]">&lt;stikonas&gt;</a></span><span class="message">looks fine</span></div><div class="line" id="215035"><span class="nick" style="color:#80b1d3"><a href="#215035" label="[21:50:35]">&lt;stikonas&gt;</a></span><span class="message">though this is kernel, so let's wait for fossy's review too</span></div><div class="line" id="215102"><span class="nick" style="color:#80b1d3"><a href="#215102" label="[21:51:02]">&lt;stikonas&gt;</a></span><span class="message">hopefully next time upgrade will be easier</span></div><div class="line" id="215109"><span class="nick" style="color:#80b1d3"><a href="#215109" label="[21:51:09]">&lt;stikonas&gt;</a></span><span class="message">but it's blocked on GCC 4.6 anyway</span></div><div class="line" id="215530"><span class="nick" style="color:#2e2a4a"><a href="#215530" label="[21:55:30]">&lt;Googulator&gt;</a></span><span class="message">even this one actually had some incompatibilities with our toolchain</span></div><div class="line" id="215550"><span class="nick" style="color:#2e2a4a"><a href="#215550" label="[21:55:50]">&lt;Googulator&gt;</a></span><span class="message">most of them I was able to patch</span></div><div class="line" id="215606"><span class="nick" style="color:#2e2a4a"><a href="#215606" label="[21:56:06]">&lt;Googulator&gt;</a></span><span class="message">but I had to disable the bfq scheduler in config, because it caused a weird link error</span></div><div class="line" id="215648"><span class="nick" style="color:#2e2a4a"><a href="#215648" label="[21:56:48]">&lt;Googulator&gt;</a></span><span class="message">(luckily cfq builds just fine, and that's what we actually use by default)</span></div><div class="line" id="215701"><span class="nick" style="color:#80b1d3"><a href="#215701" label="[21:57:01]">&lt;stikonas&gt;</a></span><span class="message">well, still I guess new binutils helped</span></div><div class="line" id="215710"><span class="nick" style="color:#80b1d3"><a href="#215710" label="[21:57:10]">&lt;stikonas&gt;</a></span><span class="message">before this upgrade we were on 2.14a...</span></div><div class="line" id="215723"><span class="nick" style="color:#80b1d3"><a href="#215723" label="[21:57:23]">&lt;stikonas&gt;</a></span><span class="message">that was significantly older...</span></div><div class="line" id="215730"><span class="nick" style="color:#2e2a4a"><a href="#215730" label="[21:57:30]">&lt;Googulator&gt;</a></span><span class="message">also, it's .336, the very last patchlevel released</span></div><div class="line" id="215732"><span class="nick" style="color:#2e2a4a"><a href="#215732" label="[21:57:32]">&lt;Googulator&gt;</a></span><span class="message">not .10</span></div><div class="line" id="215856"><span class="nick" style="color:#2e2a4a"><a href="#215856" label="[21:58:56]">&lt;Googulator&gt;</a></span><span class="message">IIRC with 4.9, a newer patchlevel was prevented by the old binutils</span></div><div class="line" id="223909"><span class="nick" style="color:#6b8072"><a href="#223909" label="[22:39:09]">&lt;oriansj&gt;</a></span><span class="message">and Googulator; thank you for letting me know about the github pull request. (I virtually never look and github refuses to email me for some stupid reason)</span></div><div class="line" id="235415"><span class="nick" style="color:#80b1d3"><a href="#235415" label="[23:54:15]">&lt;stikonas&gt;</a></span><span class="message">oriansj: could you take a look at <a rel="nofollow" href="https://github.com/oriansj/M2libc/pull/58">https://github.com/oriansj/M2libc/pull/58</a>  ?</span></div><div class="line" id="235501"><span class="nick" style="color:#80b1d3"><a href="#235501" label="[23:55:01]">&lt;stikonas&gt;</a></span><span class="message">it does not fully implement &quot;open&quot; modes but should work better than what we currently have on UEFI</span></div><br /></div></body></html>