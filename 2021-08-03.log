<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-08-03.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000115"><span class="nick" style="color:#389600"><a href="#000115" label="[00:01:15]">&lt;stikonas&gt;</a></span><span class="message">or am I only supposed ot use them with labels?</span></div><div class="line" id="000120"><span class="nick" style="color:#389600"><a href="#000120" label="[00:01:20]">&lt;stikonas&gt;</a></span><span class="message">and not numbers like 8</span></div><div class="line" id="000255"><span class="nick" style="color:#389600"><a href="#000255" label="[00:02:55]">&lt;stikonas&gt;</a></span><span class="message">which would make more sense since 8 can be encoded inside M1</span></div><div class="line" id="000329"><span class="nick" style="color:#389600"><a href="#000329" label="[00:03:29]">&lt;stikonas&gt;</a></span><span class="message">but then I'm confused why hex2 needs to know about I-type</span></div><div class="line" id="000850"><span class="nick" style="color:#389600"><a href="#000850" label="[00:08:50]">&lt;stikonas&gt;</a></span><span class="message">oh, I see...</span></div><div class="line" id="000901"><span class="nick" style="color:#389600"><a href="#000901" label="[00:09:01]">&lt;stikonas&gt;</a></span><span class="message">that's for loading label addresses in la instruction</span></div><div class="line" id="000906"><span class="nick" style="color:#389600"><a href="#000906" label="[00:09:06]">&lt;stikonas&gt;</a></span><span class="message">ok, makes sense now</span></div><div class="line" id="004917"><span class="nick" style="color:#389600"><a href="#004917" label="[00:49:17]">&lt;stikonas&gt;</a></span><span class="message">ok, kaem-minimal.M1 should be &quot;ready&quot; <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/30">https://github.com/oriansj/stage0-posix/pull/30</a> </span></div><div class="line" id="004936"><span class="nick" style="color:#389600"><a href="#004936" label="[00:49:36]">&lt;stikonas&gt;</a></span><span class="message">it's not tested yet since we don't yet have riscv64 capable M1</span></div><div class="line" id="005525"><span class="nick" style="color:#389600"><a href="#005525" label="[00:55:25]">&lt;stikonas&gt;</a></span><span class="message">so two more steps left .M1-&gt; .hex2 -</span></div><div class="line" id="005533"><span class="nick" style="color:#389600"><a href="#005533" label="[00:55:33]">&lt;stikonas&gt;</a></span><span class="message">and then to kaem-minimal.hex0</span></div><div class="line" id="014640"><span class="nick" style="color:#2e2a4a"><a href="#014640" label="[01:46:40]">&lt;NieDzejkob_&gt;</a></span><span class="message">just noticed this on lobste.rs, might be useful: <a rel="nofollow" href="https://github.com/vvaltchev/tilck">https://github.com/vvaltchev/tilck</a> </span></div><div class="line" id="023330"><span class="nick" style="color:#6b8072"><a href="#023330" label="[02:33:30]">&lt;fossy&gt;</a></span><span class="message">NieDzejkob_: this will be amazing if it is very small</span></div><div class="line" id="024302"><span class="nick" style="color:#389600"><a href="#024302" label="[02:43:02]">&lt;stikonas&gt;</a></span><span class="message">NieDzejkob_: that might indeed be useful (for POSIX bootstrap)</span></div><div class="line" id="025626"><span class="nick" style="color:#6b8072"><a href="#025626" label="[02:56:26]">&lt;fossy&gt;</a></span><span class="message">after 10 mins of tinkering (and i think we can get it smaller)</span></div><div class="line" id="025637"><span class="nick" style="color:#6b8072"><a href="#025637" label="[02:56:37]">&lt;fossy&gt;</a></span><span class="message">âžœ du -sh ./build/tilck</span></div><div class="line" id="025638"><span class="nick" style="color:#6b8072"><a href="#025638" label="[02:56:38]">&lt;fossy&gt;</a></span><span class="message">380K ./build/tilck</span></div><div class="line" id="033722"><span class="nick" style="color:#80b1d3"><a href="#033722" label="[03:37:22]">&lt;oriansj&gt;</a></span><span class="message">stikonas[m]: yeah in hex2 only labels come after !@$~%&amp;, only in M1 would numbers follow !@$~%&amp;</span></div><div class="line" id="034056"><span class="nick" style="color:#80b1d3"><a href="#034056" label="[03:40:56]">&lt;oriansj&gt;</a></span><span class="message">plasma41: that step 1 is wrong. The correct step 1 is: be a badass bootstrapper who isn't afraid to rip some shit.</span></div><div class="line" id="034241"><span class="nick" style="color:#6d2462"><a href="#034241" label="[03:42:41]">&lt;plasma41&gt;</a></span><span class="message">oriansj: Fair enough. In that case, Step 2: Grab a hairbrush rip the tangles out of that hairball.</span></div><div class="line" id="034445"><span class="nick" style="color:#80b1d3"><a href="#034445" label="[03:44:45]">&lt;oriansj&gt;</a></span><span class="message">plasma41: scissors work better</span></div><div class="line" id="034524"><span class="nick" style="color:#80b1d3"><a href="#034524" label="[03:45:24]">&lt;oriansj&gt;</a></span><span class="message">buzz cut it to stubble and just sweep up the mess left after.</span></div><div class="line" id="034542"><span class="nick" style="color:#80b1d3"><a href="#034542" label="[03:45:42]">&lt;oriansj&gt;</a></span><span class="message">it'll be ugly but it'll clear up th mess real fast.</span></div><div class="line" id="034714"><span class="nick" style="color:#6d2462"><a href="#034714" label="[03:47:14]">&lt;plasma41&gt;</a></span><span class="message">oriansj: Reminds me of the &quot;untying&quot; of the Gordian Knot with a sword.</span></div><div class="line" id="035012"><span class="nick" style="color:#80b1d3"><a href="#035012" label="[03:50:12]">&lt;oriansj&gt;</a></span><span class="message">plasma41: we don't have to play by the rules or care about preserving features. The only thing that matters is can it be properly bootstrapped and can it be used to do the next bootstrapping step. Everything else better stay out of our way.</span></div><div class="line" id="035627"><span class="nick" style="color:#80b1d3"><a href="#035627" label="[03:56:27]">&lt;oriansj&gt;</a></span><span class="message">like an EMT trying to revive a heart attack victim. Gentle isn't going to save anything at this point. Crack a rip if you need to but get that heart (bootstrap chain) beating again.</span></div><div class="line" id="035708"><span class="nick" style="color:#6d2462"><a href="#035708" label="[03:57:08]">&lt;plasma41&gt;</a></span><span class="message">Hack through that dense forest with a machete! :-D</span></div><div class="line" id="035744"><span class="nick" style="color:#80b1d3"><a href="#035744" label="[03:57:44]">&lt;oriansj&gt;</a></span><span class="message">a 400 step ugly bootstrap path beats the shit out of unbootstrappable.</span></div><div class="line" id="035858"><span class="nick" style="color:#80b1d3"><a href="#035858" label="[03:58:58]">&lt;oriansj&gt;</a></span><span class="message">we can always go back and clean up the mess leter.</span></div><div class="line" id="040421"><span class="nick" style="color:#80b1d3"><a href="#040421" label="[04:04:21]">&lt;oriansj&gt;</a></span><span class="message">every bootstrap chain buys us time.</span></div><div class="line" id="040510"><span class="nick" style="color:#80b1d3"><a href="#040510" label="[04:05:10]">&lt;oriansj&gt;</a></span><span class="message">It doesn't matter how messy and complicated, because we can just have guix or Nix do all of the work for us until someone gets some time to clean it up.</span></div><div class="line" id="042249"><span class="nick" style="color:#6b8072"><a href="#042249" label="[04:22:49]">&lt;fossy&gt;</a></span><span class="message">plasma41: where the loop in that?</span></div><div class="line" id="042255"><span class="nick" style="color:#6b8072"><a href="#042255" label="[04:22:55]">&lt;fossy&gt;</a></span><span class="message">/loops</span></div><div class="line" id="042318"><span class="nick" style="color:#234e69"><a href="#042318" label="[04:23:18]">&lt;siraben&gt;</a></span><span class="message">plasma41: lol rip kubernetes bootstrapping</span></div><div class="line" id="042345"><span class="nick" style="color:#234e69"><a href="#042345" label="[04:23:45]">&lt;siraben&gt;</a></span><span class="message">NieDzejkob_: you might be interested <a rel="nofollow" href="https://crypto.stanford.edu/~blynn/compiler/quest.html">https://crypto.stanford.edu/~blynn/compiler/quest.html</a> </span></div><div class="line" id="042609"><span class="nick" style="color:#6d2462"><a href="#042609" label="[04:26:09]">&lt;plasma41&gt;</a></span><span class="message">fossy: Ok, in fairness, the main issues with Kubernetes have more to do with the amount of overall complexity and vendored code than they do with bootstrapping.</span></div><div class="line" id="043632"><span class="nick" style="color:#6c3d55"><a href="#043632" label="[04:36:32]">*</a></span><span class="message">pabs3 sighs at Debian just accepting all that Kubernetes vendoring <a rel="nofollow" href="https://lists.debian.org/msgid-search/87sg0gvghj.fsf@melete.silentflame.com">https://lists.debian.org/msgid-search/87sg0gvghj.fsf@melete.silentflame.com</a> </span></div><div class="line" id="063532"><span class="nick" style="color:#d9d9d9"><a href="#063532" label="[06:35:32]">&lt;drakonis&gt;</a></span><span class="message">pabs3: golang is hell</span></div><div class="line" id="072955"><span class="nick" style="color:#bc80bd"><a href="#072955" label="[07:29:55]">&lt;pabs3&gt;</a></span><span class="message">I don't understand why they do vendoring, since Golang has module/dependency stuff</span></div><div class="line" id="075154"><span class="nick">***</span><span class="message notice">V__ is now known as V</span></div><div class="line" id="090610"><span class="nick" style="color:#6b8072"><a href="#090610" label="[09:06:10]">&lt;fossy&gt;</a></span><span class="message">fossy: Ok, in fairness, the main issues with Kubernetes have more to do with the amount of overall complexity and vendored code than they do with bootstrapping.</span></div><div class="line" id="090622"><span class="nick" style="color:#6b8072"><a href="#090622" label="[09:06:22]">&lt;fossy&gt;</a></span><span class="message">agreed, which is also a large problem</span></div><div class="line" id="191822"><span class="nick" style="color:#3c5b35"><a href="#191822" label="[19:18:22]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/riicchhaarrd/ocean">https://github.com/riicchhaarrd/ocean</a>  &quot; Programming language that compiles into a x86 ELF executable. &quot;</span></div><div class="line" id="191831"><span class="nick" style="color:#3c5b35"><a href="#191831" label="[19:18:31]">&lt;Hagfish&gt;</a></span><span class="message">another interesting project found on HN</span></div><div class="line" id="192521"><span class="nick" style="color:#389600"><a href="#192521" label="[19:25:21]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet is  probably way more advanced</span></div><div class="line" id="205111"><span class="nick" style="color:#389600"><a href="#205111" label="[20:51:11]">&lt;stikonas&gt;</a></span><span class="message">oriansj: found what was confusing me with hex2... I think there is a missing call to consume_token <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/pull/18">https://github.com/oriansj/mescc-tools/pull/18</a> </span></div><div class="line" id="214053"><span class="nick">***</span><span class="message notice">jackhill is now known as KM4MBG</span></div><br /></div></body></html>