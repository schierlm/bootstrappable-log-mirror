<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-07-18.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002237"><span class="nick" style="color:#389600"><a href="#002237" label="[00:22:37]">&lt;stikonas&gt;</a></span><span class="message">now I have 282 byte hex0...</span></div><div class="line" id="002252"><span class="nick" style="color:#389600"><a href="#002252" label="[00:22:52]">&lt;stikonas&gt;</a></span><span class="message">could go to 281 but not sure if that optimization worth it</span></div><div class="line" id="002259"><span class="nick" style="color:#389600"><a href="#002259" label="[00:22:59]">&lt;stikonas&gt;</a></span><span class="message">possibly not...</span></div><div class="line" id="002430"><span class="nick" style="color:#389600"><a href="#002430" label="[00:24:30]">&lt;stikonas&gt;</a></span><span class="message">right now we have 'c' - 48; return; to convert ascii code to number. Could be replaced with just 'c' + 39 and let it fall-through to the next case, saves yet another byte but maybe too complicated</span></div><div class="line" id="002528"><span class="nick" style="color:#389600"><a href="#002528" label="[00:25:28]">&lt;stikonas&gt;</a></span><span class="message">though on the other hand 'c' - 48 assumes familiarity with ascii table anyway</span></div><div class="line" id="002706"><span class="nick" style="color:#389600"><a href="#002706" label="[00:27:06]">&lt;stikonas&gt;</a></span><span class="message">going down to 280 is possible but even more obscure...</span></div><div class="line" id="005903"><span class="nick" style="color:#389600"><a href="#005903" label="[00:59:03]">&lt;stikonas&gt;</a></span><span class="message">oriansj: does this look acceptable <a rel="nofollow" href="https://paste.debian.net/1247522/">https://paste.debian.net/1247522/</a>  ?</span></div><div class="line" id="010022"><span class="nick" style="color:#389600"><a href="#010022" label="[01:00:22]">&lt;stikonas&gt;</a></span><span class="message">there are some other things that can be done but I'm not sure if we want them, so might be good to have a second opinion</span></div><div class="line" id="010242"><span class="nick" style="color:#389600"><a href="#010242" label="[01:02:42]">&lt;stikonas&gt;</a></span><span class="message">e.g. I think we can eliminate fin and fout global variables by storing those file descriptors in ecx, edx, but then we would have to push/pop them onto stack when calling Read_byte or write_byte</span></div><div class="line" id="023646"><span class="nick" style="color:#389600"><a href="#023646" label="[02:36:46]">&lt;stikonas&gt;</a></span><span class="message">oh actually esi register is completely unused, I think that could store e.g. fin</span></div><div class="line" id="023656"><span class="nick" style="color:#389600"><a href="#023656" label="[02:36:56]">&lt;stikonas&gt;</a></span><span class="message">and that alone brings hex0-seed to 271 bytes</span></div><div class="line" id="023725"><span class="nick" style="color:#389600"><a href="#023725" label="[02:37:25]">&lt;stikonas&gt;</a></span><span class="message">well, that and eax-&gt;al patch</span></div><div class="line" id="031711"><span class="nick" style="color:#389600"><a href="#031711" label="[03:17:11]">&lt;stikonas&gt;</a></span><span class="message">ok, got hex0_x86.M1 prototype to build to 264 byte hex0</span></div><div class="line" id="031724"><span class="nick" style="color:#389600"><a href="#031724" label="[03:17:24]">&lt;stikonas&gt;</a></span><span class="message">that's already 93 bytes fewer</span></div><div class="line" id="031831"><span class="nick" style="color:#389600"><a href="#031831" label="[03:18:31]">&lt;stikonas&gt;</a></span><span class="message">and code is only 180 bytes, rest is elf header</span></div><div class="line" id="034021"><span class="nick" style="color:#2e2a4a"><a href="#034021" label="[03:40:21]">&lt;Hagfish&gt;</a></span><span class="message">wow, that's really trimmed</span></div><div class="line" id="034118"><span class="nick" style="color:#2e2a4a"><a href="#034118" label="[03:41:18]">&lt;Hagfish&gt;</a></span><span class="message">in other news, i just found this article on HN: <a rel="nofollow" href="https://programming-journal.org/2023/7/1/">https://programming-journal.org/2023/7/1/</a> </span></div><div class="line" id="034128"><span class="nick" style="color:#2e2a4a"><a href="#034128" label="[03:41:28]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Guix takes a more radical approach: enabling independent verification of each step, building on reproducible builds, “bootstrappable” builds, and provenance tracking.&quot;</span></div><div class="line" id="034231"><span class="nick" style="color:#2e2a4a"><a href="#034231" label="[03:42:31]">&lt;Hagfish&gt;</a></span><span class="message">it's maybe a pity that &quot;bootstrappable&quot; still isn't accepted as a word, let alone a necessity for distros, but this extra exposure must help</span></div><div class="line" id="152739"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="153755"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="202821"><span class="nick" style="color:#6b8072"><a href="#202821" label="[20:28:21]">&lt;stikonas[m]&gt;</a></span><span class="message">And now got hex0-seed down to 254 bytes</span></div><div class="line" id="203006"><span class="nick" style="color:#6b8072"><a href="#203006" label="[20:30:06]">&lt;stikonas[m]&gt;</a></span><span class="message">There are 2 more bytes that can be trimmed, but those are slightly more obscure, so maybe 254 is good enough</span></div><div class="line" id="203026"><span class="nick" style="color:#6b8072"><a href="#203026" label="[20:30:26]">&lt;stikonas[m]&gt;</a></span><span class="message">It's already under 0x100 bytes</span></div><div class="line" id="203121"><span class="nick" style="color:#2e2a4a"><a href="#203121" label="[20:31:21]">&lt;Hagfish&gt;</a></span><span class="message">yeah, that's a nice round number to compare it to :)</span></div><div class="line" id="204724"><span class="nick" style="color:#2e2a4a"><a href="#204724" label="[20:47:24]">&lt;Hagfish&gt;</a></span><span class="message">apparently the old 80x12 punch cards weren't really designed to store arbitrary binary data, but they would be equivalent to 120 bytes per card</span></div><div class="line" id="204745"><span class="nick" style="color:#2e2a4a"><a href="#204745" label="[20:47:45]">&lt;Hagfish&gt;</a></span><span class="message">so if you wanted a good reason to golf it down to 240 bytes or less, you could give that as a justification :)</span></div><div class="line" id="204843"><span class="nick" style="color:#2e2a4a"><a href="#204843" label="[20:48:43]">&lt;Hagfish&gt;</a></span><span class="message">on the other hand, tweets can be 280 characters, so maybe that's a more meaningful comparison</span></div><div class="line" id="210834"><span class="nick" style="color:#389600"><a href="#210834" label="[21:08:34]">&lt;stikonas&gt;</a></span><span class="message">well, we don't need to print it on punch card...</span></div><div class="line" id="210842"><span class="nick" style="color:#389600"><a href="#210842" label="[21:08:42]">&lt;stikonas&gt;</a></span><span class="message">so 254 bytes will do</span></div><div class="line" id="210854"><span class="nick" style="color:#389600"><a href="#210854" label="[21:08:54]">&lt;stikonas&gt;</a></span><span class="message">and 240 bytes would be very hard to reach</span></div><div class="line" id="211223"><span class="nick" style="color:#389600"><a href="#211223" label="[21:12:23]">&lt;stikonas&gt;</a></span><span class="message">possibly reaching 240 bytes would require cutting off some features....</span></div><div class="line" id="211342"><span class="nick" style="color:#389600"><a href="#211342" label="[21:13:42]">&lt;stikonas&gt;</a></span><span class="message">i.e. only letting to use uppercase or lowercase characters, not both and only having one type of comments...</span></div><div class="line" id="211416"><span class="nick" style="color:#389600"><a href="#211416" label="[21:14:16]">&lt;stikonas&gt;</a></span><span class="message">so I don't think oriansj would want to go that route</span></div><div class="line" id="211438"><span class="nick" style="color:#389600"><a href="#211438" label="[21:14:38]">&lt;stikonas&gt;</a></span><span class="message">357 -&gt; 254 bytes was done without sacrificing any features</span></div><div class="line" id="211508"><span class="nick" style="color:#389600"><a href="#211508" label="[21:15:08]">&lt;stikonas&gt;</a></span><span class="message">well, I still need to convert it from M1 code to hex0 code</span></div><div class="line" id="211535"><span class="nick" style="color:#389600"><a href="#211535" label="[21:15:35]">&lt;stikonas&gt;</a></span><span class="message">but with such small binary it's not too bad</span></div><div class="line" id="215708"><span class="nick" style="color:#2e2a4a"><a href="#215708" label="[21:57:08]">&lt;Hagfish&gt;</a></span><span class="message">yeah, sounds like there's nothing to be gained by trimming it more, and it's surprising that so many features could be compressed even this much</span></div><div class="line" id="215843"><span class="nick" style="color:#389600"><a href="#215843" label="[21:58:43]">&lt;stikonas&gt;</a></span><span class="message">oh, it's actually 256 bytes, not 254...</span></div><div class="line" id="215913"><span class="nick" style="color:#389600"><a href="#215913" label="[21:59:13]">&lt;stikonas&gt;</a></span><span class="message">since I've used the wrong immediate in two places, need 16-bit but in x86 M0 dialect it's @ and not ! prefix</span></div><div class="line" id="215923"><span class="nick" style="color:#389600"><a href="#215923" label="[21:59:23]">&lt;stikonas&gt;</a></span><span class="message">still 256 is not bad</span></div><div class="line" id="221911"><span class="nick" style="color:#2e2a4a"><a href="#221911" label="[22:19:11]">&lt;Hagfish&gt;</a></span><span class="message">it's almost too perfect :)</span></div><div class="line" id="224206"><span class="nick" style="color:#389600"><a href="#224206" label="[22:42:06]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/pull/20">https://github.com/oriansj/bootstrap-seeds/pull/20</a> </span></div><div class="line" id="225353"><span class="nick" style="color:#2e2a4a"><a href="#225353" label="[22:53:53]">&lt;Hagfish&gt;</a></span><span class="message">a minor suggestion (or misunderstanding on my part):</span></div><div class="line" id="225357"><span class="nick" style="color:#2e2a4a"><a href="#225357" label="[22:53:57]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Where are we reading from&quot;</span></div><div class="line" id="225412"><span class="nick" style="color:#2e2a4a"><a href="#225412" label="[22:54:12]">&lt;Hagfish&gt;</a></span><span class="message">i don't think that's intended to sound like a question</span></div><div class="line" id="225428"><span class="nick" style="color:#2e2a4a"><a href="#225428" label="[22:54:28]">&lt;Hagfish&gt;</a></span><span class="message">would it be more clear worded as &quot;Where we are reading from&quot;</span></div><div class="line" id="225459"><span class="nick" style="color:#2e2a4a"><a href="#225459" label="[22:54:59]">&lt;Hagfish&gt;</a></span><span class="message">(i know that text didn't change in the PR, so sorry if it's irrelevant)</span></div><div class="line" id="225907"><span class="nick" style="color:#389600"><a href="#225907" label="[22:59:07]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's a comment from I think oriansj</span></div><div class="line" id="225926"><span class="nick" style="color:#389600"><a href="#225926" label="[22:59:26]">&lt;stikonas&gt;</a></span><span class="message">feel free to make another PR, should be easy to change it, since it's just a comment</span></div><div class="line" id="225936"><span class="nick" style="color:#389600"><a href="#225936" label="[22:59:36]">&lt;stikonas&gt;</a></span><span class="message">but probably best to have it in a separate commit</span></div><div class="line" id="225946"><span class="nick" style="color:#389600"><a href="#225946" label="[22:59:46]">&lt;stikonas&gt;</a></span><span class="message">from seed minimization</span></div><div class="line" id="231909"><span class="nick" style="color:#2e2a4a"><a href="#231909" label="[23:19:09]">&lt;Hagfish&gt;</a></span><span class="message">yeah, makes sense</span></div><br /></div></body></html>