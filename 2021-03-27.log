<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-03-27.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000000"><span class="nick" style="color:#389600"><a href="#000000" label="[00:00:00]">&lt;stikonas&gt;</a></span><span class="message">a few small problems with gcc...</span></div><div class="line" id="000007"><span class="nick" style="color:#389600"><a href="#000007" label="[00:00:07]">&lt;stikonas&gt;</a></span><span class="message">not sure why, but fairly minor</span></div><div class="line" id="000014"><span class="nick" style="color:#8dd3c7"><a href="#000014" label="[00:00:14]">&lt;fossy&gt;</a></span><span class="message">e.g.?</span></div><div class="line" id="000022"><span class="nick" style="color:#389600"><a href="#000022" label="[00:00:22]">&lt;stikonas&gt;</a></span><span class="message">config.sub is not recreated</span></div><div class="line" id="000030"><span class="nick" style="color:#8dd3c7"><a href="#000030" label="[00:00:30]">&lt;fossy&gt;</a></span><span class="message">huh</span></div><div class="line" id="000034"><span class="nick" style="color:#389600"><a href="#000034" label="[00:00:34]">&lt;stikonas&gt;</a></span><span class="message">I just copied it from /after/share/automake-1.9/config.sub</span></div><div class="line" id="000036"><span class="nick" style="color:#389600"><a href="#000036" label="[00:00:36]">&lt;stikonas&gt;</a></span><span class="message">oh well...</span></div><div class="line" id="000048"><span class="nick" style="color:#8dd3c7"><a href="#000048" label="[00:00:48]">&lt;fossy&gt;</a></span><span class="message">wait do we need to put that in the gcc: Regenerate prebuilt files also</span></div><div class="line" id="000051"><span class="nick" style="color:#389600"><a href="#000051" label="[00:00:51]">&lt;stikonas&gt;</a></span><span class="message">and sys/limits.h is missing</span></div><div class="line" id="000112"><span class="nick" style="color:#389600"><a href="#000112" label="[00:01:12]">&lt;stikonas&gt;</a></span><span class="message">not sure why it worked before, but symlink fixes that</span></div><div class="line" id="000115"><span class="nick" style="color:#389600"><a href="#000115" label="[00:01:15]">&lt;stikonas&gt;</a></span><span class="message">put what in the gcc?</span></div><div class="line" id="000122"><span class="nick" style="color:#8dd3c7"><a href="#000122" label="[00:01:22]">&lt;fossy&gt;</a></span><span class="message">is config.sub issue fixed</span></div><div class="line" id="000141"><span class="nick" style="color:#389600"><a href="#000141" label="[00:01:41]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="000146"><span class="nick" style="color:#2e2a4a"><a href="#000146" label="[00:01:46]">*</a></span><span class="message">fossy is reasonably suprised all these new autotools work on perl 5.6</span></div><div class="line" id="000147"><span class="nick" style="color:#389600"><a href="#000147" label="[00:01:47]">&lt;stikonas&gt;</a></span><span class="message">oh, into that issue</span></div><div class="line" id="000148"><span class="nick" style="color:#8dd3c7"><a href="#000148" label="[00:01:48]">&lt;fossy&gt;</a></span><span class="message">ok neat</span></div><div class="line" id="000159"><span class="nick" style="color:#389600"><a href="#000159" label="[00:01:59]">&lt;stikonas&gt;</a></span><span class="message">yeah, I need to rerun a few times to get new checksums</span></div><div class="line" id="000202"><span class="nick" style="color:#389600"><a href="#000202" label="[00:02:02]">&lt;stikonas&gt;</a></span><span class="message">but it should work</span></div><div class="line" id="000208"><span class="nick" style="color:#389600"><a href="#000208" label="[00:02:08]">&lt;stikonas&gt;</a></span><span class="message">xz a bit more work though</span></div><div class="line" id="000312"><span class="nick" style="color:#389600"><a href="#000312" label="[00:03:12]">&lt;stikonas&gt;</a></span><span class="message">so should we reinstate older bash?</span></div><div class="line" id="000327"><span class="nick" style="color:#389600"><a href="#000327" label="[00:03:27]">&lt;stikonas&gt;</a></span><span class="message">although, if it works, maybe something like 4.2 would be better</span></div><div class="line" id="000404"><span class="nick" style="color:#8dd3c7"><a href="#000404" label="[00:04:04]">&lt;fossy&gt;</a></span><span class="message">4.x was the newest avaliable working with tcc eyah?</span></div><div class="line" id="000414"><span class="nick" style="color:#389600"><a href="#000414" label="[00:04:14]">&lt;stikonas&gt;</a></span><span class="message">5.1 was working</span></div><div class="line" id="000421"><span class="nick" style="color:#389600"><a href="#000421" label="[00:04:21]">&lt;stikonas&gt;</a></span><span class="message">but some issues</span></div><div class="line" id="000426"><span class="nick" style="color:#389600"><a href="#000426" label="[00:04:26]">&lt;stikonas&gt;</a></span><span class="message">musl configure script segfaulted</span></div><div class="line" id="000433"><span class="nick" style="color:#8dd3c7"><a href="#000433" label="[00:04:33]">&lt;fossy&gt;</a></span><span class="message">oh right</span></div><div class="line" id="000437"><span class="nick" style="color:#389600"><a href="#000437" label="[00:04:37]">&lt;stikonas&gt;</a></span><span class="message">and with libtool moved earlier we now get a bit fewer warnings</span></div><div class="line" id="000437"><span class="nick" style="color:#8dd3c7"><a href="#000437" label="[00:04:37]">&lt;fossy&gt;</a></span><span class="message">we probably don't want 5.1 then</span></div><div class="line" id="000459"><span class="nick" style="color:#389600"><a href="#000459" label="[00:04:59]">&lt;stikonas&gt;</a></span><span class="message">there are still come unitialized config warnings from perl...</span></div><div class="line" id="000503"><span class="nick" style="color:#8dd3c7"><a href="#000503" label="[00:05:03]">&lt;fossy&gt;</a></span><span class="message">i wonder if we could go with 4.x ~50?</span></div><div class="line" id="000507"><span class="nick" style="color:#8dd3c7"><a href="#000507" label="[00:05:07]">&lt;fossy&gt;</a></span><span class="message">~ part 50</span></div><div class="line" id="000511"><span class="nick" style="color:#389600"><a href="#000511" label="[00:05:11]">&lt;stikonas&gt;</a></span><span class="message">probably...</span></div><div class="line" id="000524"><span class="nick" style="color:#389600"><a href="#000524" label="[00:05:24]">&lt;stikonas&gt;</a></span><span class="message">but worth rerunning musl's configure as a &quot;test case&quot;</span></div><div class="line" id="000529"><span class="nick" style="color:#389600"><a href="#000529" label="[00:05:29]">&lt;stikonas&gt;</a></span><span class="message">to see if it works well enough</span></div><div class="line" id="000613"><span class="nick" style="color:#8dd3c7"><a href="#000613" label="[00:06:13]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="000900"><span class="nick" style="color:#389600"><a href="#000900" label="[00:09:00]">&lt;stikonas&gt;</a></span><span class="message">and regarding perl, it's possible to go to 5.8 without too much trouble</span></div><div class="line" id="000905"><span class="nick" style="color:#389600"><a href="#000905" label="[00:09:05]">&lt;stikonas&gt;</a></span><span class="message">although, that's still a bit of work</span></div><div class="line" id="000913"><span class="nick" style="color:#389600"><a href="#000913" label="[00:09:13]">&lt;stikonas&gt;</a></span><span class="message">but I don't think there are any fundamental problems</span></div><div class="line" id="000921"><span class="nick" style="color:#389600"><a href="#000921" label="[00:09:21]">&lt;stikonas&gt;</a></span><span class="message">it's just that I didn't need newer perl yet</span></div><div class="line" id="001205"><span class="nick" style="color:#389600"><a href="#001205" label="[00:12:05]">&lt;stikonas&gt;</a></span><span class="message">in general it's surprising how much stuff runs on tcc</span></div><div class="line" id="001221"><span class="nick" style="color:#389600"><a href="#001221" label="[00:12:21]">&lt;stikonas&gt;</a></span><span class="message">we'll almost have a usable system built just with tcc</span></div><div class="line" id="001904"><span class="nick" style="color:#389600"><a href="#001904" label="[00:19:04]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, so do I not need to run libtoolize then in gcc build?</span></div><div class="line" id="001912"><span class="nick" style="color:#389600"><a href="#001912" label="[00:19:12]">&lt;stikonas&gt;</a></span><span class="message">if I have libtool 2.2.4?</span></div><div class="line" id="001918"><span class="nick" style="color:#389600"><a href="#001918" label="[00:19:18]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe we do</span></div><div class="line" id="001925"><span class="nick" style="color:#389600"><a href="#001925" label="[00:19:25]">&lt;stikonas&gt;</a></span><span class="message">that thing is not autoreconf'ed...</span></div><div class="line" id="001934"><span class="nick" style="color:#389600"><a href="#001934" label="[00:19:34]">&lt;stikonas&gt;</a></span><span class="message">nevermind then</span></div><div class="line" id="002028"><span class="nick" style="color:#8dd3c7"><a href="#002028" label="[00:20:28]">&lt;fossy&gt;</a></span><span class="message">stikonas: it should be autoreconfed...</span></div><div class="line" id="002031"><span class="nick" style="color:#8dd3c7"><a href="#002031" label="[00:20:31]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="002036"><span class="nick" style="color:#8dd3c7"><a href="#002036" label="[00:20:36]">&lt;fossy&gt;</a></span><span class="message">unless there are no libtool-generated files</span></div><div class="line" id="002039"><span class="nick" style="color:#389600"><a href="#002039" label="[00:20:39]">&lt;stikonas&gt;</a></span><span class="message">no, gcc top folder is special</span></div><div class="line" id="002045"><span class="nick" style="color:#8dd3c7"><a href="#002045" label="[00:20:45]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="002045"><span class="nick" style="color:#389600"><a href="#002045" label="[00:20:45]">&lt;stikonas&gt;</a></span><span class="message">it's not normal autotools</span></div><div class="line" id="002048"><span class="nick" style="color:#8dd3c7"><a href="#002048" label="[00:20:48]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="002050"><span class="nick" style="color:#389600"><a href="#002050" label="[00:20:50]">&lt;stikonas&gt;</a></span><span class="message">it needs autoconf...</span></div><div class="line" id="002054"><span class="nick" style="color:#389600"><a href="#002054" label="[00:20:54]">&lt;stikonas&gt;</a></span><span class="message">but it does not use automake</span></div><div class="line" id="002107"><span class="nick" style="color:#389600"><a href="#002107" label="[00:21:07]">&lt;stikonas&gt;</a></span><span class="message">so for gcc I'll keep libtool...</span></div><div class="line" id="002112"><span class="nick" style="color:#8dd3c7"><a href="#002112" label="[00:21:12]">&lt;fossy&gt;</a></span><span class="message">yeah ok</span></div><div class="line" id="002138"><span class="nick" style="color:#389600"><a href="#002138" label="[00:21:38]">&lt;stikonas&gt;</a></span><span class="message">oh, although, if I move libtool earlier before GCC</span></div><div class="line" id="002144"><span class="nick" style="color:#389600"><a href="#002144" label="[00:21:44]">&lt;stikonas&gt;</a></span><span class="message">I think I don't need to rebuild 1.4 after binutils</span></div><div class="line" id="002224"><span class="nick" style="color:#389600"><a href="#002224" label="[00:22:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, there is only help2man in the middle</span></div><div class="line" id="002246"><span class="nick" style="color:#389600"><a href="#002246" label="[00:22:46]">&lt;stikonas&gt;</a></span><span class="message">and it deos not use libtool</span></div><div class="line" id="091626"><span class="nick" style="color:#80b1d3"><a href="#091626" label="[09:16:26]">&lt;nimaje&gt;</a></span><span class="message">is there some graph showing how far you got? or maybe a tombstone diagram? (but I'm not sure if a tombstone diagram can show the dependencies good enought)</span></div><div class="line" id="103150"><span class="nick" style="color:#6d2462"><a href="#103150" label="[10:31:50]">&lt;stikonas[m]&gt;</a></span><span class="message">nimaje: only text, no graph</span></div><div class="line" id="104449"><span class="nick" style="color:#2e2a4a"><a href="#104449" label="[10:44:49]">*</a></span><span class="message">fossy sighs</span></div><div class="line" id="104457"><span class="nick" style="color:#8dd3c7"><a href="#104457" label="[10:44:57]">&lt;fossy&gt;</a></span><span class="message">i have decided to move on from kexec-tools for now</span></div><div class="line" id="104515"><span class="nick" style="color:#8dd3c7"><a href="#104515" label="[10:45:15]">&lt;fossy&gt;</a></span><span class="message">i'll introduce it post-binutils, that is easy - i'll push an experimental branch but not PR it</span></div><div class="line" id="104553"><span class="nick" style="color:#8dd3c7"><a href="#104553" label="[10:45:53]">&lt;fossy&gt;</a></span><span class="message">the very first part of the bootstrap needs a re-thought</span></div><div class="line" id="104557"><span class="nick" style="color:#8dd3c7"><a href="#104557" label="[10:45:57]">&lt;fossy&gt;</a></span><span class="message">but we can come back to that later.</span></div><div class="line" id="105425"><span class="nick" style="color:#6d2462"><a href="#105425" label="[10:54:25]">&lt;stikonas[m]&gt;</a></span><span class="message">Oh, can't build them without ar?</span></div><div class="line" id="112152"><span class="nick" style="color:#8dd3c7"><a href="#112152" label="[11:21:52]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: no i think tcc's assembler is really just too poor for it</span></div><div class="line" id="112202"><span class="nick" style="color:#8dd3c7"><a href="#112202" label="[11:22:02]">&lt;fossy&gt;</a></span><span class="message">the qemu is exiting on kexec -e</span></div><div class="line" id="112211"><span class="nick" style="color:#8dd3c7"><a href="#112211" label="[11:22:11]">&lt;fossy&gt;</a></span><span class="message">i think it's something to do with the purgatory binary</span></div><div class="line" id="112226"><span class="nick" style="color:#8dd3c7"><a href="#112226" label="[11:22:26]">&lt;fossy&gt;</a></span><span class="message">which is *really* hard to debug</span></div><div class="line" id="112535"><span class="nick" style="color:#389600"><a href="#112535" label="[11:25:35]">&lt;stikonas&gt;</a></span><span class="message">oh ok, so we need as...</span></div><div class="line" id="112554"><span class="nick" style="color:#8dd3c7"><a href="#112554" label="[11:25:54]">&lt;fossy&gt;</a></span><span class="message">i think so</span></div><div class="line" id="112726"><span class="nick" style="color:#389600"><a href="#112726" label="[11:27:26]">&lt;stikonas&gt;</a></span><span class="message">maybe you need to wait for OriansJ's M3</span></div><div class="line" id="112740"><span class="nick" style="color:#389600"><a href="#112740" label="[11:27:40]">&lt;stikonas&gt;</a></span><span class="message">although, I don't remember if it includes assembler</span></div><div class="line" id="112914"><span class="nick" style="color:#389600"><a href="#112914" label="[11:29:14]">&lt;stikonas&gt;</a></span><span class="message">hmm, almost done moving stuff before gcc...</span></div><div class="line" id="112919"><span class="nick" style="color:#8dd3c7"><a href="#112919" label="[11:29:19]">&lt;fossy&gt;</a></span><span class="message">cool</span></div><div class="line" id="112924"><span class="nick" style="color:#8dd3c7"><a href="#112924" label="[11:29:24]">&lt;fossy&gt;</a></span><span class="message">i looked at guile - it looks doable</span></div><div class="line" id="112924"><span class="nick" style="color:#389600"><a href="#112924" label="[11:29:24]">&lt;stikonas&gt;</a></span><span class="message">xz is left for now</span></div><div class="line" id="112939"><span class="nick" style="color:#8dd3c7"><a href="#112939" label="[11:29:39]">&lt;fossy&gt;</a></span><span class="message">i will work on it tomorrow</span></div><div class="line" id="112943"><span class="nick" style="color:#389600"><a href="#112943" label="[11:29:43]">&lt;stikonas&gt;</a></span><span class="message">either we patch it, or find the patch which fixes statics...</span></div><div class="line" id="112952"><span class="nick" style="color:#389600"><a href="#112952" label="[11:29:52]">&lt;stikonas&gt;</a></span><span class="message">(not sure if it's even just one patch)</span></div><div class="line" id="113013"><span class="nick" style="color:#389600"><a href="#113013" label="[11:30:13]">&lt;stikonas&gt;</a></span><span class="message">(I mean tcc patch from mob branch)</span></div><div class="line" id="122745"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="133736"><span class="nick" style="color:#234e69"><a href="#133736" label="[13:37:36]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: yes M3 will have a linker, assembler, a Stand-alone C preprocessor and a TCC compatible compiler (if other pieces are needed, I'll do them too)</span></div><div class="line" id="134055"><span class="nick" style="color:#234e69"><a href="#134055" label="[13:40:55]">&lt;OriansJ&gt;</a></span><span class="message">The linker should be done first (it is half-way done already <a rel="nofollow" href="https://github.com/oriansj/M3-Meteoroid">https://github.com/oriansj/M3-Meteoroid</a>)  then I'll be working on the assembler (Which should be a drop in compatible with both TCC's assembler and binutil's assembler) which should enable us to scratch off assembler/linker issues in the bootstrap</span></div><div class="line" id="134125"><span class="nick" style="color:#389600"><a href="#134125" label="[13:41:25]">&lt;stikonas&gt;</a></span><span class="message">yeah, so I think that will enable fossy to build kexec-tools earlier</span></div><div class="line" id="134318"><span class="nick" style="color:#234e69"><a href="#134318" label="[13:43:18]">&lt;OriansJ&gt;</a></span><span class="message">also if it would help I could produce a .dot file for live-bootstrap so that one can generate a pretty dependency graph for the pieces in it.</span></div><div class="line" id="134403"><span class="nick" style="color:#234e69"><a href="#134403" label="[13:44:03]">&lt;OriansJ&gt;</a></span><span class="message">as they are really easy to write: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.dot">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.dot</a> </span></div><div class="line" id="134629"><span class="nick" style="color:#389600"><a href="#134629" label="[13:46:29]">&lt;stikonas&gt;</a></span><span class="message">yeah, I've used dot a little bit before</span></div><div class="line" id="134653"><span class="nick" style="color:#389600"><a href="#134653" label="[13:46:53]">&lt;stikonas&gt;</a></span><span class="message">at least for early bootstrap it should be possible...</span></div><div class="line" id="134707"><span class="nick" style="color:#389600"><a href="#134707" label="[13:47:07]">&lt;stikonas&gt;</a></span><span class="message">later once you get to autotools it's getting tricker...</span></div><div class="line" id="134724"><span class="nick" style="color:#389600"><a href="#134724" label="[13:47:24]">&lt;stikonas&gt;</a></span><span class="message">because things depend on too many things before them</span></div><div class="line" id="135128"><span class="nick" style="color:#234e69"><a href="#135128" label="[13:51:28]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: fair but being able at a glance to know what is needed for each piece to be built might help people understand what is available when they want to upgrade a piece.</span></div><div class="line" id="135151"><span class="nick" style="color:#389600"><a href="#135151" label="[13:51:51]">&lt;stikonas&gt;</a></span><span class="message">yeah, I can try to do the bottom at least...</span></div><div class="line" id="135200"><span class="nick" style="color:#389600"><a href="#135200" label="[13:52:00]">&lt;stikonas&gt;</a></span><span class="message">we'll see how things look like there</span></div><div class="line" id="135712"><span class="nick" style="color:#234e69"><a href="#135712" label="[13:57:12]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: well the bottom would be a direct copy up until after M2-Planet after that you really made a difference ^_^</span></div><div class="line" id="140050"><span class="nick" style="color:#389600"><a href="#140050" label="[14:00:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, I wonder how should I include kaem in there...</span></div><div class="line" id="140113"><span class="nick" style="color:#389600"><a href="#140113" label="[14:01:13]">&lt;stikonas&gt;</a></span><span class="message">in principle everything at the botton uses it...</span></div><div class="line" id="140156"><span class="nick" style="color:#389600"><a href="#140156" label="[14:01:56]">&lt;stikonas&gt;</a></span><span class="message">or we ignore it...</span></div><div class="line" id="140359"><span class="nick" style="color:#6c3d55"><a href="#140359" label="[14:03:59]">&lt;bauen1&gt;</a></span><span class="message">stikonas: make kaem a dependency of everything that is build using it ?</span></div><div class="line" id="140416"><span class="nick" style="color:#6c3d55"><a href="#140416" label="[14:04:16]">&lt;bauen1&gt;</a></span><span class="message">that would be the true way imho</span></div><div class="line" id="140422"><span class="nick" style="color:#6c3d55"><a href="#140422" label="[14:04:22]">&lt;bauen1&gt;</a></span><span class="message">same deal with bash / make</span></div><div class="line" id="140437"><span class="nick" style="color:#6c3d55"><a href="#140437" label="[14:04:37]">&lt;bauen1&gt;</a></span><span class="message">(which would then have a dependency on things build using kaem)</span></div><div class="line" id="143106"><span class="nick" style="color:#389600"><a href="#143106" label="[14:31:06]">&lt;stikonas&gt;</a></span><span class="message">well, I tried to rework lower part a bit: <a rel="nofollow" href="https://stikonas.eu/files/T.pdf">https://stikonas.eu/files/T.pdf</a> </span></div><div class="line" id="143125"><span class="nick" style="color:#389600"><a href="#143125" label="[14:31:25]">&lt;stikonas&gt;</a></span><span class="message">that's for posix bootstrap...</span></div><div class="line" id="145218"><span class="nick" style="color:#234e69"><a href="#145218" label="[14:52:18]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: I think you got it rather correct</span></div><div class="line" id="145302"><span class="nick" style="color:#389600"><a href="#145302" label="[14:53:02]">&lt;stikonas&gt;</a></span><span class="message">now there will be a lot of arrows going down to catm...</span></div><div class="line" id="145319"><span class="nick" style="color:#389600"><a href="#145319" label="[14:53:19]">&lt;stikonas&gt;</a></span><span class="message">live-bootstrap uses catm as empty file creation tool</span></div><div class="line" id="145338"><span class="nick" style="color:#234e69"><a href="#145338" label="[14:53:38]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: unless we just add cat to mescc-tools-extra</span></div><div class="line" id="145349"><span class="nick" style="color:#234e69"><a href="#145349" label="[14:53:49]">&lt;OriansJ&gt;</a></span><span class="message">and &gt; to kaem</span></div><div class="line" id="145616"><span class="nick" style="color:#234e69"><a href="#145616" label="[14:56:16]">&lt;OriansJ&gt;</a></span><span class="message">also there is the C version of catm in mescc-tools</span></div><div class="line" id="145732"><span class="nick" style="color:#234e69"><a href="#145732" label="[14:57:32]">&lt;OriansJ&gt;</a></span><span class="message">(also sharing of .dot files instead of pdf files enables others to build on one's work without duplicated efforts)</span></div><div class="line" id="150323"><span class="nick" style="color:#389600"><a href="#150323" label="[15:03:23]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'll share .dot file too</span></div><div class="line" id="150332"><span class="nick" style="color:#389600"><a href="#150332" label="[15:03:32]">&lt;stikonas&gt;</a></span><span class="message">once I'm done today</span></div><div class="line" id="150342"><span class="nick" style="color:#389600"><a href="#150342" label="[15:03:42]">&lt;stikonas&gt;</a></span><span class="message">at the moment it will just cause edit conflicts</span></div><div class="line" id="150347"><span class="nick" style="color:#389600"><a href="#150347" label="[15:03:47]">&lt;stikonas&gt;</a></span><span class="message">while I'm actively modifying it</span></div><div class="line" id="150516"><span class="nick" style="color:#389600"><a href="#150516" label="[15:05:16]">&lt;stikonas&gt;</a></span><span class="message">hmm, yes, there is c version of catm...</span></div><div class="line" id="150519"><span class="nick" style="color:#389600"><a href="#150519" label="[15:05:19]">&lt;stikonas&gt;</a></span><span class="message">we can build it...</span></div><div class="line" id="150525"><span class="nick" style="color:#389600"><a href="#150525" label="[15:05:25]">&lt;stikonas&gt;</a></span><span class="message">although, it's not done right now</span></div><div class="line" id="150542"><span class="nick" style="color:#389600"><a href="#150542" label="[15:05:42]">&lt;stikonas&gt;</a></span><span class="message">but maybe I can remove those arrows...</span></div><div class="line" id="150611"><span class="nick" style="color:#389600"><a href="#150611" label="[15:06:11]">&lt;stikonas&gt;</a></span><span class="message">hmm, although, that will just move them from catm to mescc-tools...</span></div><div class="line" id="150635"><span class="nick" style="color:#389600"><a href="#150635" label="[15:06:35]">&lt;stikonas&gt;</a></span><span class="message">after tcc mescc-tools is not used anymore</span></div><div class="line" id="150738"><span class="nick" style="color:#389600"><a href="#150738" label="[15:07:38]">&lt;stikonas&gt;</a></span><span class="message">oh well, if we count kaem, then it is...</span></div><div class="line" id="153623"><span class="nick" style="color:#234e69"><a href="#153623" label="[15:36:23]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: it'll always be a changing document as we add and remove and change pieces.</span></div><div class="line" id="154001"><span class="nick" style="color:#389600"><a href="#154001" label="[15:40:01]">&lt;stikonas&gt;</a></span><span class="message">well, yes, but I'll do a bit more and then make PR to live-bootstrap repo with dot file</span></div><div class="line" id="154017"><span class="nick" style="color:#389600"><a href="#154017" label="[15:40:17]">&lt;stikonas&gt;</a></span><span class="message">I'll probably get bored of adding new nodes soon</span></div><div class="line" id="154024"><span class="nick" style="color:#389600"><a href="#154024" label="[15:40:24]">&lt;stikonas&gt;</a></span><span class="message">got to musl and tcc rebuild</span></div><div class="line" id="154038"><span class="nick" style="color:#389600"><a href="#154038" label="[15:40:38]">&lt;stikonas&gt;</a></span><span class="message">and then somebody else can take over</span></div><div class="line" id="181705"><span class="nick" style="color:#234e69"><a href="#181705" label="[18:17:05]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: sounds fair</span></div><div class="line" id="185312"><span class="nick" style="color:#389600"><a href="#185312" label="[18:53:12]">&lt;stikonas&gt;</a></span><span class="message">well, dot file is here <a rel="nofollow" href="https://stikonas.eu/files/live-bootstrap.dot">https://stikonas.eu/files/live-bootstrap.dot</a> </span></div><div class="line" id="185319"><span class="nick" style="color:#389600"><a href="#185319" label="[18:53:19]">&lt;stikonas&gt;</a></span><span class="message">it's up to bison</span></div><div class="line" id="185454"><span class="nick" style="color:#234e69"><a href="#185454" label="[18:54:54]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: thank you</span></div><div class="line" id="185456"><span class="nick" style="color:#389600"><a href="#185456" label="[18:54:56]">&lt;stikonas&gt;</a></span><span class="message">I skipped a couple of minor steps (patching mes)</span></div><div class="line" id="185511"><span class="nick" style="color:#389600"><a href="#185511" label="[18:55:11]">&lt;stikonas&gt;</a></span><span class="message">since I think those patches are upstreamed</span></div><div class="line" id="185651"><span class="nick" style="color:#389600"><a href="#185651" label="[18:56:51]">&lt;stikonas&gt;</a></span><span class="message">it's getting quite messy in dependency graph...</span></div><div class="line" id="185713"><span class="nick" style="color:#234e69"><a href="#185713" label="[18:57:13]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: I'll attempt to make it more clear</span></div><div class="line" id="185723"><span class="nick" style="color:#389600"><a href="#185723" label="[18:57:23]">&lt;stikonas&gt;</a></span><span class="message">probably a better idea for colours would be</span></div><div class="line" id="185749"><span class="nick" style="color:#389600"><a href="#185749" label="[18:57:49]">&lt;stikonas&gt;</a></span><span class="message">to maka boxes colour coded</span></div><div class="line" id="185755"><span class="nick" style="color:#389600"><a href="#185755" label="[18:57:55]">&lt;stikonas&gt;</a></span><span class="message">instead of arrows</span></div><div class="line" id="185758"><span class="nick" style="color:#389600"><a href="#185758" label="[18:57:58]">&lt;stikonas&gt;</a></span><span class="message">when something is optional</span></div><div class="line" id="190229"><span class="nick" style="color:#389600"><a href="#190229" label="[19:02:29]">&lt;stikonas&gt;</a></span><span class="message">oh, already spotted a typo</span></div><div class="line" id="190233"><span class="nick" style="color:#389600"><a href="#190233" label="[19:02:33]">&lt;stikonas&gt;</a></span><span class="message">herloom-&gt;heirloom</span></div><div class="line" id="190244"><span class="nick" style="color:#234e69"><a href="#190244" label="[19:02:44]">&lt;OriansJ&gt;</a></span><span class="message">I'll fix</span></div><div class="line" id="190610"><span class="nick" style="color:#389600"><a href="#190610" label="[19:06:10]">&lt;stikonas&gt;</a></span><span class="message">also, dependencies are mostly like in live-bootstrap, e.g. m4 is built against musl in live-bootsrap, but it's buildable with meslibc too...</span></div><div class="line" id="190641"><span class="nick" style="color:#389600"><a href="#190641" label="[19:06:41]">&lt;stikonas&gt;</a></span><span class="message">so &quot;required&quot; arrow is not always a strict dependency</span></div><div class="line" id="190751"><span class="nick" style="color:#234e69"><a href="#190751" label="[19:07:51]">&lt;OriansJ&gt;</a></span><span class="message">I'll break up the different versions and will be seperating orchestration tool dependency from build</span></div><div class="line" id="190903"><span class="nick" style="color:#389600"><a href="#190903" label="[19:09:03]">&lt;stikonas&gt;</a></span><span class="message">yeah, maybe different colour?</span></div><div class="line" id="190914"><span class="nick" style="color:#389600"><a href="#190914" label="[19:09:14]">&lt;stikonas&gt;</a></span><span class="message">although, sometimes bash is used as a dependency to create some scripts</span></div><div class="line" id="190919"><span class="nick" style="color:#389600"><a href="#190919" label="[19:09:19]">&lt;stikonas&gt;</a></span><span class="message">to create some files</span></div><div class="line" id="190924"><span class="nick" style="color:#389600"><a href="#190924" label="[19:09:24]">&lt;stikonas&gt;</a></span><span class="message">so it's not always orchestration tool</span></div><div class="line" id="191011"><span class="nick" style="color:#389600"><a href="#191011" label="[19:10:11]">&lt;stikonas&gt;</a></span><span class="message">e.g. flex and bison do that</span></div><div class="line" id="191059"><span class="nick" style="color:#234e69"><a href="#191059" label="[19:10:59]">&lt;OriansJ&gt;</a></span><span class="message">thank you for that detail</span></div><div class="line" id="191136"><span class="nick" style="color:#389600"><a href="#191136" label="[19:11:36]">&lt;stikonas&gt;</a></span><span class="message">basically I was looking at .sh and .mk files when putting dependencies</span></div><div class="line" id="191154"><span class="nick" style="color:#389600"><a href="#191154" label="[19:11:54]">&lt;stikonas&gt;</a></span><span class="message">for now with our custom makefiles it's often fairly obvious what is used</span></div><div class="line" id="191301"><span class="nick" style="color:#234e69"><a href="#191301" label="[19:13:01]">&lt;OriansJ&gt;</a></span><span class="message">I guess I have a bit of reading to do and information to encode</span></div><div class="line" id="191529"><span class="nick" style="color:#234e69"><a href="#191529" label="[19:15:29]">&lt;OriansJ&gt;</a></span><span class="message">I'm putting my working draft in talk-notes and using <a rel="nofollow" href="https://paste.debian.net/1191234/">https://paste.debian.net/1191234/</a>  as an attempt to try to make it easier to understand (Still lots more to do)</span></div><div class="line" id="191832"><span class="nick" style="color:#234e69"><a href="#191832" label="[19:18:32]">&lt;OriansJ&gt;</a></span><span class="message">I was going to drop the done and essential details and use the lines to encode what the actually relationship is (like build, library, orchestration, etc)</span></div><div class="line" id="191905"><span class="nick" style="color:#389600"><a href="#191905" label="[19:19:05]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think that's a good idea</span></div><div class="line" id="191914"><span class="nick" style="color:#389600"><a href="#191914" label="[19:19:14]">&lt;stikonas&gt;</a></span><span class="message">probably different colours too</span></div><div class="line" id="191919"><span class="nick" style="color:#389600"><a href="#191919" label="[19:19:19]">&lt;stikonas&gt;</a></span><span class="message">e.g. C library can be one colour</span></div><div class="line" id="191922"><span class="nick" style="color:#389600"><a href="#191922" label="[19:19:22]">&lt;stikonas&gt;</a></span><span class="message">compiler can be another</span></div><div class="line" id="191937"><span class="nick" style="color:#389600"><a href="#191937" label="[19:19:37]">&lt;stikonas&gt;</a></span><span class="message">archiver (tar, gz, bzip2) yet another colour</span></div><div class="line" id="192010"><span class="nick" style="color:#389600"><a href="#192010" label="[19:20:10]">&lt;stikonas&gt;</a></span><span class="message">essential vs non-essential doesn't matter as much later</span></div><div class="line" id="192038"><span class="nick" style="color:#389600"><a href="#192038" label="[19:20:38]">&lt;stikonas&gt;</a></span><span class="message">e.g. make is not essential...</span></div><div class="line" id="192359"><span class="nick" style="color:#234e69"><a href="#192359" label="[19:23:59]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: agreed. although I would put tar and compression tools under distribution</span></div><div class="line" id="192500"><span class="nick" style="color:#234e69"><a href="#192500" label="[19:25:00]">&lt;OriansJ&gt;</a></span><span class="message">and probably comment the crap out of everything along the way</span></div><div class="line" id="192643"><span class="nick" style="color:#389600"><a href="#192643" label="[19:26:43]">&lt;stikonas&gt;</a></span><span class="message">this is also useful <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="192656"><span class="nick" style="color:#389600"><a href="#192656" label="[19:26:56]">&lt;stikonas&gt;</a></span><span class="message">although, it does not encode dependencies</span></div><div class="line" id="210002"><span class="nick" style="color:#d9d9d9"><a href="#210002" label="[21:00:02]">&lt;mihi&gt;</a></span><span class="message">bauen1, if you want to output weird characters, you can always use hex. And instead of amending kaem to support &gt; and &lt;, I'd rather put it into another binary which only redirects streams and then execs the rest of the args.</span></div><div class="line" id="210114"><span class="nick" style="color:#234e69"><a href="#210114" label="[21:01:14]">&lt;OriansJ&gt;</a></span><span class="message">mihi: or just catm to create the desired file from sub-files</span></div><div class="line" id="210230"><span class="nick" style="color:#d9d9d9"><a href="#210230" label="[21:02:30]">&lt;mihi&gt;</a></span><span class="message">yeah, if the thing you want to redirect is a cat, just catm it. If you want to &quot;tee&quot; some build logs to a file, you'd better have a &quot;tee&quot; executable though :)</span></div><div class="line" id="210433"><span class="nick" style="color:#d9d9d9"><a href="#210433" label="[21:04:33]">&lt;mihi&gt;</a></span><span class="message">when the thing you want to redirect is your own tool, adding an -o parameter (like in my sha3sum) might be the better idea as well.</span></div><div class="line" id="210611"><span class="nick" style="color:#389600"><a href="#210611" label="[21:06:11]">&lt;stikonas&gt;</a></span><span class="message">well, we build tee reasonably early</span></div><div class="line" id="210648"><span class="nick" style="color:#389600"><a href="#210648" label="[21:06:48]">&lt;stikonas&gt;</a></span><span class="message">immediately after bzip2 (which is after make)</span></div><div class="line" id="210907"><span class="nick" style="color:#d9d9d9"><a href="#210907" label="[21:09:07]">&lt;mihi&gt;</a></span><span class="message">normal tee requires pipe support (in the kernel)</span></div><div class="line" id="210956"><span class="nick" style="color:#d9d9d9"><a href="#210956" label="[21:09:56]">&lt;mihi&gt;</a></span><span class="message">btw if you want a guile that does not come with any version of psyntax, you probably have to use 1.0 (the next available version on ftp.gnu.org, 1.3.4 from 1999, already has it)</span></div><div class="line" id="211124"><span class="nick" style="color:#234e69"><a href="#211124" label="[21:11:24]">&lt;OriansJ&gt;</a></span><span class="message">well it certainly lakes it more easy to figure out <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.dot">https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.dot</a>  <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.pdf">https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.pdf</a> </span></div><div class="line" id="211204"><span class="nick" style="color:#389600"><a href="#211204" label="[21:12:04]">&lt;stikonas&gt;</a></span><span class="message">yeah, definitely colours help</span></div><div class="line" id="211206"><span class="nick" style="color:#d9d9d9"><a href="#211206" label="[21:12:06]">&lt;mihi&gt;</a></span><span class="message">(this commit <a rel="nofollow" href="http://git.savannah.nongnu.org/cgit/guile.git/commit/?id=230c435383087a1e6ad60d9c98d3ec75dd2c3e49">http://git.savannah.nongnu.org/cgit/guile.git/commit/?id=230c435383087a1e6ad60d9c98d3ec75dd2c3e49</a>  from August 1997 introduced psyntax)</span></div><div class="line" id="211306"><span class="nick" style="color:#234e69"><a href="#211306" label="[21:13:06]">&lt;OriansJ&gt;</a></span><span class="message">mescc-tools certainly is a quite busy node (I might break it into pieces) as kaem is used a bit until make and bash replace it</span></div><div class="line" id="211350"><span class="nick" style="color:#8dd3c7"><a href="#211350" label="[21:13:50]">&lt;fossy&gt;</a></span><span class="message">&lt;OriansJ&gt; and &gt; to kaem</span></div><div class="line" id="211400"><span class="nick" style="color:#8dd3c7"><a href="#211400" label="[21:14:00]">&lt;fossy&gt;</a></span><span class="message">recall this must be an optional feature</span></div><div class="line" id="211411"><span class="nick" style="color:#8dd3c7"><a href="#211411" label="[21:14:11]">&lt;fossy&gt;</a></span><span class="message">to avoid kernel support for piping</span></div><div class="line" id="211443"><span class="nick" style="color:#389600"><a href="#211443" label="[21:14:43]">&lt;stikonas&gt;</a></span><span class="message">what about bash where it is used to generate files (not build orchestration?)</span></div><div class="line" id="211449"><span class="nick" style="color:#389600"><a href="#211449" label="[21:14:49]">&lt;stikonas&gt;</a></span><span class="message">I think that's both flexes and bison</span></div><div class="line" id="211453"><span class="nick" style="color:#d9d9d9"><a href="#211453" label="[21:14:53]">&lt;mihi&gt;</a></span><span class="message">fossy, why does &gt; require pipes in kernel? As long as you can pass file descriptors on exec, you should be fine?</span></div><div class="line" id="211514"><span class="nick" style="color:#389600"><a href="#211514" label="[21:15:14]">&lt;stikonas&gt;</a></span><span class="message">although, maybe it's fine to simplify diagram a bit...</span></div><div class="line" id="211541"><span class="nick" style="color:#8dd3c7"><a href="#211541" label="[21:15:41]">&lt;fossy&gt;</a></span><span class="message">mihi: hmst, you might be right</span></div><div class="line" id="211549"><span class="nick" style="color:#8dd3c7"><a href="#211549" label="[21:15:49]">&lt;fossy&gt;</a></span><span class="message">I have not thought of it that way</span></div><div class="line" id="211630"><span class="nick" style="color:#d9d9d9"><a href="#211630" label="[21:16:30]">&lt;mihi&gt;</a></span><span class="message">and if your OS does not support pipes or multitasking, you can fake them like DOS did. Redirect first command to a temp file, read second command from temp file.</span></div><div class="line" id="211640"><span class="nick" style="color:#8dd3c7"><a href="#211640" label="[21:16:40]">&lt;fossy&gt;</a></span><span class="message">mihi: how does one redirect stdout without pipes rhough</span></div><div class="line" id="211650"><span class="nick" style="color:#8dd3c7"><a href="#211650" label="[21:16:50]">&lt;fossy&gt;</a></span><span class="message">(this is not an area I know much about)</span></div><div class="line" id="211742"><span class="nick" style="color:#389600"><a href="#211742" label="[21:17:42]">&lt;stikonas&gt;</a></span><span class="message">mihi: and regarding guile, I think we don't know which versions we need...</span></div><div class="line" id="211751"><span class="nick" style="color:#389600"><a href="#211751" label="[21:17:51]">&lt;stikonas&gt;</a></span><span class="message">I don't even know which versions of autogen would work</span></div><div class="line" id="211818"><span class="nick" style="color:#d9d9d9"><a href="#211818" label="[21:18:18]">&lt;mihi&gt;</a></span><span class="message">fossy, you may want to read <a rel="nofollow" href="https://man7.org/linux/man-pages/man2/dup.2.html">https://man7.org/linux/man-pages/man2/dup.2.html</a>  (in particular dup2 syscall)</span></div><div class="line" id="211950"><span class="nick" style="color:#389600"><a href="#211950" label="[21:19:50]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: should we add more arrows to catm?</span></div><div class="line" id="212005"><span class="nick" style="color:#389600"><a href="#212005" label="[21:20:05]">&lt;stikonas&gt;</a></span><span class="message">a few nodes before coreutils use catm to create empty config.h files</span></div><div class="line" id="212108"><span class="nick" style="color:#234e69"><a href="#212108" label="[21:21:08]">&lt;OriansJ&gt;</a></span><span class="message">fossy: if we need it; it'll just be a problem to deal with in the kernel as well but if we can avoid it with something simple, probably a better plan.</span></div><div class="line" id="212153"><span class="nick" style="color:#389600"><a href="#212153" label="[21:21:53]">&lt;stikonas&gt;</a></span><span class="message">well, it's not something we need very early in the bootstrap</span></div><div class="line" id="212157"><span class="nick" style="color:#234e69"><a href="#212157" label="[21:21:57]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: probably but trying to figure out subgraphs first</span></div><div class="line" id="212203"><span class="nick" style="color:#389600"><a href="#212203" label="[21:22:03]">&lt;stikonas&gt;</a></span><span class="message">yes, we build tee really early, but we are not using it</span></div><div class="line" id="212222"><span class="nick" style="color:#389600"><a href="#212222" label="[21:22:22]">&lt;stikonas&gt;</a></span><span class="message">basically, redirection pipes and etc are only needed after bash</span></div><div class="line" id="213154"><span class="nick" style="color:#234e69"><a href="#213154" label="[21:31:54]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: This all reminds me that I probably should add M2libc and catm (C version) to stage0-posix along with incorporate live-bootstrap's mes work.</span></div><div class="line" id="213316"><span class="nick" style="color:#389600"><a href="#213316" label="[21:33:16]">&lt;stikonas&gt;</a></span><span class="message">yes, we can build C version of catm</span></div><div class="line" id="213321"><span class="nick" style="color:#389600"><a href="#213321" label="[21:33:21]">&lt;stikonas&gt;</a></span><span class="message">and M2libc</span></div><div class="line" id="213358"><span class="nick" style="color:#389600"><a href="#213358" label="[21:33:58]">&lt;stikonas&gt;</a></span><span class="message">well, at some point we should update bottom of live-bootstrap to new stage0-posix commits</span></div><div class="line" id="213408"><span class="nick" style="color:#389600"><a href="#213408" label="[21:34:08]">&lt;stikonas&gt;</a></span><span class="message">and I guess at some point newer mes too</span></div><div class="line" id="213415"><span class="nick" style="color:#389600"><a href="#213415" label="[21:34:15]">&lt;stikonas&gt;</a></span><span class="message">(possibly when 0.24 is released)</span></div><div class="line" id="213426"><span class="nick" style="color:#8dd3c7"><a href="#213426" label="[21:34:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: we need to wsit for new mes</span></div><div class="line" id="213436"><span class="nick" style="color:#8dd3c7"><a href="#213436" label="[21:34:36]">&lt;fossy&gt;</a></span><span class="message">cause of m2libc</span></div><div class="line" id="213440"><span class="nick" style="color:#8dd3c7"><a href="#213440" label="[21:34:40]">&lt;fossy&gt;</a></span><span class="message">its not compatible</span></div><div class="line" id="213527"><span class="nick" style="color:#389600"><a href="#213527" label="[21:35:27]">&lt;stikonas&gt;</a></span><span class="message">oh I see</span></div><div class="line" id="213536"><span class="nick" style="color:#389600"><a href="#213536" label="[21:35:36]">&lt;stikonas&gt;</a></span><span class="message">so it's at the same time...</span></div><div class="line" id="213610"><span class="nick" style="color:#389600"><a href="#213610" label="[21:36:10]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, I'm addeing bash 4.2.53 too</span></div><div class="line" id="213616"><span class="nick" style="color:#389600"><a href="#213616" label="[21:36:16]">&lt;stikonas&gt;</a></span><span class="message">*adding</span></div><div class="line" id="213630"><span class="nick" style="color:#389600"><a href="#213630" label="[21:36:30]">&lt;stikonas&gt;</a></span><span class="message">after automake 1.10 (and will be before xz) but xz is not moved yet</span></div><div class="line" id="213644"><span class="nick" style="color:#389600"><a href="#213644" label="[21:36:44]">&lt;stikonas&gt;</a></span><span class="message">bash 2 is not enough to build xz</span></div><div class="line" id="213826"><span class="nick" style="color:#234e69"><a href="#213826" label="[21:38:26]">&lt;OriansJ&gt;</a></span><span class="message">fossy: yeah, I've really been slacking on that M2libc work</span></div><div class="line" id="214121"><span class="nick" style="color:#d9d9d9"><a href="#214121" label="[21:41:21]">&lt;mihi&gt;</a></span><span class="message">stikonas, xzdec-min should probably be buildable using kaem :) <a rel="nofollow" href="https://github.com/schierlm/xzdec-min/">https://github.com/schierlm/xzdec-min/</a> </span></div><div class="line" id="214205"><span class="nick" style="color:#389600"><a href="#214205" label="[21:42:05]">&lt;stikonas&gt;</a></span><span class="message">possibly, but we don't really need it until we start building newer software from 2010 or so...</span></div><div class="line" id="214206"><span class="nick" style="color:#d9d9d9"><a href="#214206" label="[21:42:06]">&lt;mihi&gt;</a></span><span class="message">however, I never tried if tcc+musl can build it, but would not know why not</span></div><div class="line" id="214213"><span class="nick" style="color:#389600"><a href="#214213" label="[21:42:13]">&lt;stikonas&gt;</a></span><span class="message">also there is xz-embedded</span></div><div class="line" id="214243"><span class="nick" style="color:#389600"><a href="#214243" label="[21:42:43]">&lt;stikonas&gt;</a></span><span class="message">hmm, it might be stuck at the same place where normal xz is stuck</span></div><div class="line" id="214305"><span class="nick" style="color:#389600"><a href="#214305" label="[21:43:05]">&lt;stikonas&gt;</a></span><span class="message">I need to either patch xz to remove static keyword from arrays, or find tcc patch that adds support for them</span></div><div class="line" id="214310"><span class="nick" style="color:#234e69"><a href="#214310" label="[21:43:10]">&lt;OriansJ&gt;</a></span><span class="message">is get_machine used in live-bootstrap? (asking if I need to put it in the graph)</span></div><div class="line" id="214315"><span class="nick" style="color:#389600"><a href="#214315" label="[21:43:15]">&lt;stikonas&gt;</a></span><span class="message">(tcc from mob branch does support them)</span></div><div class="line" id="214323"><span class="nick" style="color:#389600"><a href="#214323" label="[21:43:23]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: no, I don't think so</span></div><div class="line" id="214333"><span class="nick" style="color:#389600"><a href="#214333" label="[21:43:33]">&lt;stikonas&gt;</a></span><span class="message">at least if your initial .kaem files don't use it</span></div><div class="line" id="214400"><span class="nick" style="color:#389600"><a href="#214400" label="[21:44:00]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: but we do build it</span></div><div class="line" id="214422"><span class="nick" style="color:#389600"><a href="#214422" label="[21:44:22]">&lt;stikonas&gt;</a></span><span class="message">(it's in mescc-tools-seed subdirectory)</span></div><div class="line" id="214435"><span class="nick" style="color:#389600"><a href="#214435" label="[21:44:35]">&lt;stikonas&gt;</a></span><span class="message">still an old name before renaming to stage0-posix</span></div><div class="line" id="214631"><span class="nick" style="color:#234e69"><a href="#214631" label="[21:46:31]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: I guess architecture specific code branches haven't shown up in live-bootstrap yet</span></div><div class="line" id="214642"><span class="nick" style="color:#389600"><a href="#214642" label="[21:46:42]">&lt;stikonas&gt;</a></span><span class="message">no, we don't have anything yet</span></div><div class="line" id="214712"><span class="nick" style="color:#d9d9d9"><a href="#214712" label="[21:47:12]">&lt;mihi&gt;</a></span><span class="message">how can you use get_machine from kaem without pipes or output redirection anyway?</span></div><div class="line" id="214713"><span class="nick" style="color:#389600"><a href="#214713" label="[21:47:13]">&lt;stikonas&gt;</a></span><span class="message">i386 is hardcoded...</span></div><div class="line" id="214735"><span class="nick" style="color:#389600"><a href="#214735" label="[21:47:35]">&lt;stikonas&gt;</a></span><span class="message">mihi: I guess you can't... That's why we don't use it...</span></div><div class="line" id="214755"><span class="nick" style="color:#389600"><a href="#214755" label="[21:47:55]">&lt;stikonas&gt;</a></span><span class="message">but build scripts probably need some templating...</span></div><div class="line" id="214803"><span class="nick" style="color:#389600"><a href="#214803" label="[21:48:03]">&lt;stikonas&gt;</a></span><span class="message">if we want to have other arches</span></div><div class="line" id="215000"><span class="nick" style="color:#234e69"><a href="#215000" label="[21:50:00]">&lt;OriansJ&gt;</a></span><span class="message">mihi: it is easy to have get_machine to write to a file or create environmental variables</span></div><div class="line" id="215053"><span class="nick" style="color:#234e69"><a href="#215053" label="[21:50:53]">&lt;OriansJ&gt;</a></span><span class="message">but it is ultimately a question of if we need it and if so any tweaks needed to get things working.</span></div><div class="line" id="215149"><span class="nick" style="color:#234e69"><a href="#215149" label="[21:51:49]">&lt;OriansJ&gt;</a></span><span class="message">everything I write is subject to change and improvement in the hopes of enabling others to bootstrap what they need.</span></div><div class="line" id="215205"><span class="nick" style="color:#d9d9d9"><a href="#215205" label="[21:52:05]">&lt;mihi&gt;</a></span><span class="message">I think creating envars could be tricky, but returning an appropriate exit code or outputing a template file that can be processed by e.g. M1 should be easy.</span></div><div class="line" id="215239"><span class="nick" style="color:#234e69"><a href="#215239" label="[21:52:39]">&lt;OriansJ&gt;</a></span><span class="message">mihi: we already have envars in kaem</span></div><div class="line" id="215322"><span class="nick" style="color:#234e69"><a href="#215322" label="[21:53:22]">&lt;OriansJ&gt;</a></span><span class="message">also mescc-tools-extras can have any sort of functionality you can write in C</span></div><div class="line" id="215332"><span class="nick" style="color:#234e69"><a href="#215332" label="[21:53:32]">&lt;OriansJ&gt;</a></span><span class="message">be it sed, awk, etc</span></div><div class="line" id="215349"><span class="nick" style="color:#d9d9d9"><a href="#215349" label="[21:53:49]">&lt;mihi&gt;</a></span><span class="message">I know, but AFAIK envars are only passed from parent to child and not vice versa, so usually some hacks like backticks are used to get envars the other way.</span></div><div class="line" id="215619"><span class="nick" style="color:#234e69"><a href="#215619" label="[21:56:19]">&lt;OriansJ&gt;</a></span><span class="message">we could have a flag in get_machine like: --write-env and it'll create a file for kaem to read</span></div><div class="line" id="215649"><span class="nick" style="color:#234e69"><a href="#215649" label="[21:56:49]">&lt;OriansJ&gt;</a></span><span class="message">we have options to explore when we get closer to having to solve that problem</span></div><div class="line" id="215712"><span class="nick" style="color:#234e69"><a href="#215712" label="[21:57:12]">&lt;OriansJ&gt;</a></span><span class="message">but until then it is spitball idea generation</span></div><div class="line" id="215743"><span class="nick" style="color:#234e69"><a href="#215743" label="[21:57:43]">&lt;OriansJ&gt;</a></span><span class="message">then the person who does the work gets to decide what work they prefer to solve that problem.</span></div><div class="line" id="215753"><span class="nick" style="color:#234e69"><a href="#215753" label="[21:57:53]">&lt;OriansJ&gt;</a></span><span class="message">as it has always been.</span></div><div class="line" id="221308"><span class="nick" style="color:#389600"><a href="#221308" label="[22:13:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, tcc-build bash 4.2.53 also creashes on musl's configure script...</span></div><div class="line" id="221336"><span class="nick" style="color:#389600"><a href="#221336" label="[22:13:36]">&lt;stikonas&gt;</a></span><span class="message">but so far that's the only thing where i observed crash</span></div><div class="line" id="221347"><span class="nick" style="color:#389600"><a href="#221347" label="[22:13:47]">&lt;stikonas&gt;</a></span><span class="message">e.g. gcc build does not trigger it</span></div><div class="line" id="221449"><span class="nick" style="color:#6c3d55"><a href="#221449" label="[22:14:49]">&lt;bauen1&gt;</a></span><span class="message">stikonas: tell me more about that crash :D</span></div><div class="line" id="221535"><span class="nick" style="color:#6c3d55"><a href="#221535" label="[22:15:35]">&lt;bauen1&gt;</a></span><span class="message">just because i haven't ruled out silent memory corruption or compiler bugs for my problem yet (well compiler bug seems unlikely given how it works for everyone else)</span></div><div class="line" id="221613"><span class="nick" style="color:#389600"><a href="#221613" label="[22:16:13]">&lt;stikonas&gt;</a></span><span class="message">well, running it with bash -x prints</span></div><div class="line" id="221615"><span class="nick" style="color:#389600"><a href="#221615" label="[22:16:15]">&lt;stikonas&gt;</a></span><span class="message">+ test -z ''</span></div><div class="line" id="221617"><span class="nick" style="color:#389600"><a href="#221617" label="[22:16:17]">&lt;stikonas&gt;</a></span><span class="message">Segmentation fault (core dumped)</span></div><div class="line" id="221940"><span class="nick" style="color:#389600"><a href="#221940" label="[22:19:40]">&lt;stikonas&gt;</a></span><span class="message">backtrace: <a rel="nofollow" href="https://paste.debian.net/1191259/">https://paste.debian.net/1191259/</a> </span></div><div class="line" id="222246"><span class="nick" style="color:#389600"><a href="#222246" label="[22:22:46]">&lt;stikonas&gt;</a></span><span class="message">well, we can try to use new bash with tcc and hope that we won't hit this crash (and for building new musl, we can just rebuild bash with gcc before that)</span></div><div class="line" id="222449"><span class="nick" style="color:#6c3d55"><a href="#222449" label="[22:24:49]">&lt;bauen1&gt;</a></span><span class="message">oh no, running musls configure from a manually constructed userns + chroot it exits normally</span></div><div class="line" id="222502"><span class="nick" style="color:#6c3d55"><a href="#222502" label="[22:25:02]">&lt;bauen1&gt;</a></span><span class="message">so much for easily reproducing this issue lol</span></div><div class="line" id="222521"><span class="nick" style="color:#389600"><a href="#222521" label="[22:25:21]">&lt;stikonas&gt;</a></span><span class="message">bauen1: that depends on bash version that you use</span></div><div class="line" id="222528"><span class="nick" style="color:#389600"><a href="#222528" label="[22:25:28]">&lt;stikonas&gt;</a></span><span class="message">old bash 2 works fine</span></div><div class="line" id="222545"><span class="nick" style="color:#389600"><a href="#222545" label="[22:25:45]">&lt;stikonas&gt;</a></span><span class="message">it's the new ones that crash</span></div><div class="line" id="222553"><span class="nick" style="color:#389600"><a href="#222553" label="[22:25:53]">&lt;stikonas&gt;</a></span><span class="message">but it's not a blocking problem</span></div><div class="line" id="222554"><span class="nick" style="color:#6c3d55"><a href="#222554" label="[22:25:54]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i'm not even past musl 1.1.14 lmao</span></div><div class="line" id="222606"><span class="nick" style="color:#389600"><a href="#222606" label="[22:26:06]">&lt;stikonas&gt;</a></span><span class="message">I am where musl 1.2.2 is built</span></div><div class="line" id="222629"><span class="nick" style="color:#6c3d55"><a href="#222629" label="[22:26:29]">&lt;bauen1&gt;</a></span><span class="message">for some reason musls configure script exists, supposedly with exit code 512 :D</span></div><div class="line" id="222650"><span class="nick" style="color:#6c3d55"><a href="#222650" label="[22:26:50]">&lt;bauen1&gt;</a></span><span class="message">or maybe not let me re run this (see you in 50m)</span></div><div class="line" id="223448"><span class="nick" style="color:#8dd3c7"><a href="#223448" label="[22:34:48]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm.</span></div><div class="line" id="223509"><span class="nick" style="color:#8dd3c7"><a href="#223509" label="[22:35:09]">&lt;fossy&gt;</a></span><span class="message">stikonas: can we disable test builtin</span></div><div class="line" id="223522"><span class="nick" style="color:#8dd3c7"><a href="#223522" label="[22:35:22]">&lt;fossy&gt;</a></span><span class="message">cause test is also in coreutils</span></div><div class="line" id="223612"><span class="nick" style="color:#389600"><a href="#223612" label="[22:36:12]">&lt;stikonas&gt;</a></span><span class="message">maybe we can, but for now I think I'll just reporder musl and gcc-bash</span></div><div class="line" id="223621"><span class="nick" style="color:#389600"><a href="#223621" label="[22:36:21]">&lt;stikonas&gt;</a></span><span class="message">that will solve musl configure problem</span></div><div class="line" id="223633"><span class="nick" style="color:#389600"><a href="#223633" label="[22:36:33]">&lt;stikonas&gt;</a></span><span class="message">I'm not even sure if it's test that's broken</span></div><div class="line" id="223640"><span class="nick" style="color:#389600"><a href="#223640" label="[22:36:40]">&lt;stikonas&gt;</a></span><span class="message">it might be the next statement</span></div><div class="line" id="223654"><span class="nick" style="color:#389600"><a href="#223654" label="[22:36:54]">&lt;stikonas&gt;</a></span><span class="message">well, I need newer bash for xz...</span></div><div class="line" id="223707"><span class="nick" style="color:#389600"><a href="#223707" label="[22:37:07]">&lt;stikonas&gt;</a></span><span class="message">xz was not happy with bash2</span></div><br /></div></body></html>