<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-01.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000141"><span class="nick" style="color:#389600"><a href="#000141" label="[00:01:41]">&lt;stikonas&gt;</a></span><span class="message">so far I think I did the following <a rel="nofollow" href="https://stikonas.eu/files/musl.txt">https://stikonas.eu/files/musl.txt</a> </span></div><div class="line" id="003512"><span class="nick" style="color:#2e2a4a"><a href="#003512" label="[00:35:12]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: what about IBM/360? its instruction set seems to map beautifully to hex and and runs Linux and is supported by GCC 4.7.4?</span></div><div class="line" id="003618"><span class="nick" style="color:#2e2a4a"><a href="#003618" label="[00:36:18]">&lt;OriansJ&gt;</a></span><span class="message">It is also Big Endian</span></div><div class="line" id="003741"><span class="nick" style="color:#2e2a4a"><a href="#003741" label="[00:37:41]">&lt;OriansJ&gt;</a></span><span class="message">hopefully working versions that are old enough to have the ability to toggle in a boot program and thus start a trusted boot chain.</span></div><div class="line" id="003758"><span class="nick" style="color:#2e2a4a"><a href="#003758" label="[00:37:58]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="http://bitsavers.org/pdf/ibm/360/GC20-1667-1_intro360arch.pdf">http://bitsavers.org/pdf/ibm/360/GC20-1667-1_intro360arch.pdf</a> </span></div><div class="line" id="012506"><span class="nick" style="color:#6b8072"><a href="#012506" label="[01:25:06]">&lt;deesix&gt;</a></span><span class="message">Which would be the preference for the next arch? Wirth's RISC, IBM/360, RISC-V, POWER9, PowerPC, SPARC, 6502, Z80...?</span></div><div class="line" id="014631"><span class="nick" style="color:#2e2a4a"><a href="#014631" label="[01:46:31]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well that is a hard question as all of those are likely to be supported to a degree (getting M2-Planet to fit/run in 64KB when self-hosting might be a problem or just require some complexity)</span></div><div class="line" id="014757"><span class="nick" style="color:#2e2a4a"><a href="#014757" label="[01:47:57]">&lt;OriansJ&gt;</a></span><span class="message">although part of me is pushing towards picking up the armv7l work in mescc-tools-seed first and finish it before starting another M2-Planet port.</span></div><div class="line" id="014900"><span class="nick" style="color:#2e2a4a"><a href="#014900" label="[01:49:00]">&lt;OriansJ&gt;</a></span><span class="message">but you should be done with your unification work soon (Which is a massive help btw and *THANK YOU*)</span></div><div class="line" id="015008"><span class="nick" style="color:#2e2a4a"><a href="#015008" label="[01:50:08]">&lt;OriansJ&gt;</a></span><span class="message">Would getting M2-Planet's pointer arithmetic more C compliant seem like a good idea or is there some other behavior of M2-Planet you see as more lacking?</span></div><div class="line" id="015132"><span class="nick" style="color:#2e2a4a"><a href="#015132" label="[01:51:32]">&lt;OriansJ&gt;</a></span><span class="message">as we probably want to start taking things out of known_issues.org to make M2-Planet porting easier in the long run.</span></div><div class="line" id="015450"><span class="nick" style="color:#6b8072"><a href="#015450" label="[01:54:50]">&lt;deesix&gt;</a></span><span class="message">Yes, unification (Knight apart) should be done this week, so possibilities for next work^Wfun are popping in my head :)</span></div><div class="line" id="020242"><span class="nick" style="color:#6b8072"><a href="#020242" label="[02:02:42]">&lt;deesix&gt;</a></span><span class="message">I'm not writting much M2 lately. While prototyping ANSI C parser I encounter more cases of me wanting logic short-circuit than pointer arith, but the later might be more feasible.</span></div><div class="line" id="020504"><span class="nick" style="color:#6b8072"><a href="#020504" label="[02:05:04]">&lt;deesix&gt;</a></span><span class="message">In any case, you documented the workarounds, which is great.</span></div><div class="line" id="020818"><span class="nick" style="color:#2e2a4a"><a href="#020818" label="[02:08:18]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well the short circuit would require a very ugly change but not entirely harder</span></div><div class="line" id="020826"><span class="nick" style="color:#6b8072"><a href="#020826" label="[02:08:26]">&lt;deesix&gt;</a></span><span class="message">Adding test cases to M2-Planet is another possibility. There're a few things without tests.</span></div><div class="line" id="020909"><span class="nick" style="color:#2e2a4a"><a href="#020909" label="[02:09:09]">&lt;OriansJ&gt;</a></span><span class="message">deesix: and would definitely be needed for major code changes within (and possibly find more C behavior we don't match)</span></div><div class="line" id="020941"><span class="nick" style="color:#6b8072"><a href="#020941" label="[02:09:41]">&lt;deesix&gt;</a></span><span class="message">Yes, not a minor change I recall.</span></div><div class="line" id="021259"><span class="nick" style="color:#6b8072"><a href="#021259" label="[02:12:59]">&lt;deesix&gt;</a></span><span class="message">live-bootstrap and blynn-compiler are also in my radar, but that would need a bit more time (and reading for Haskell/lambda theory) to get up to speed.</span></div><div class="line" id="021344"><span class="nick" style="color:#80b1d3"><a href="#021344" label="[02:13:44]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: I've got initial work on musl in a branch <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/musl">https://github.com/stikonas/live-bootstrap/tree/musl</a> </span></div><div class="line" id="021358"><span class="nick" style="color:#80b1d3"><a href="#021358" label="[02:13:58]">&lt;stikonas[m]&gt;</a></span><span class="message">It goes until linking now</span></div><div class="line" id="021422"><span class="nick" style="color:#80b1d3"><a href="#021422" label="[02:14:22]">&lt;stikonas[m]&gt;</a></span><span class="message">Then that &quot;tcc -ar&quot; issue...</span></div><div class="line" id="021514"><span class="nick" style="color:#80b1d3"><a href="#021514" label="[02:15:14]">&lt;stikonas[m]&gt;</a></span><span class="message">And make install will need adjusting paths...</span></div><div class="line" id="021812"><span class="nick" style="color:#2e2a4a"><a href="#021812" label="[02:18:12]">&lt;OriansJ&gt;</a></span><span class="message">deesix: all one would need to do to make M2-Planet short circuit is make &amp;&amp; and || branchy</span></div><div class="line" id="021919"><span class="nick" style="color:#2e2a4a"><a href="#021919" label="[02:19:19]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://godbolt.org/z/KsoKfr">https://godbolt.org/z/KsoKfr</a> </span></div><div class="line" id="022145"><span class="nick" style="color:#2e2a4a"><a href="#022145" label="[02:21:45]">&lt;OriansJ&gt;</a></span><span class="message">tack on a cmp; branch over the rest of the statement and act like nothing happened, otherwise all the other evaluation in M2-Planet would be identicial but a bunch more labels prefixed with _ being output</span></div><div class="line" id="022220"><span class="nick" style="color:#6b8072"><a href="#022220" label="[02:22:20]">&lt;deesix&gt;</a></span><span class="message">Yep, that was my intuition about it.</span></div><div class="line" id="022239"><span class="nick" style="color:#2e2a4a"><a href="#022239" label="[02:22:39]">&lt;OriansJ&gt;</a></span><span class="message">so ugly but not hard to add</span></div><div class="line" id="022300"><span class="nick" style="color:#2e2a4a"><a href="#022300" label="[02:23:00]">&lt;OriansJ&gt;</a></span><span class="message">impossible to do in assembly but not a problem in C</span></div><div class="line" id="040122"><span class="nick" style="color:#6d2462"><a href="#040122" label="[04:01:22]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; fossy: should we keep musl binaries in the same prefix /after?</span></div><div class="line" id="040125"><span class="nick" style="color:#6d2462"><a href="#040125" label="[04:01:25]">&lt;fossy&gt;</a></span><span class="message">Yes</span></div><div class="line" id="043403"><span class="nick" style="color:#234e69"><a href="#043403" label="[04:34:03]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap">https://github.com/stikonas/live-bootstrap</a>  that README is like reading the plot of an incredible action movie</span></div><div class="line" id="043408"><span class="nick" style="color:#234e69"><a href="#043408" label="[04:34:08]">&lt;Hagfish&gt;</a></span><span class="message">i can't wait to read more :)</span></div><div class="line" id="043441"><span class="nick" style="color:#234e69"><a href="#043441" label="[04:34:41]">&lt;Hagfish&gt;</a></span><span class="message">(i don't know if it's deliberate that the &quot;Part 23&quot; heading is bigger than the previous ones)</span></div><div class="line" id="103308"><span class="nick" style="color:#80b1d3"><a href="#103308" label="[10:33:08]">&lt;stikonas[m]&gt;</a></span><span class="message">Hagfish: typo but I'll remove flex 2.5.14 later and will build 2.6.4 using 2.5.11 after musl</span></div><div class="line" id="124935"><span class="nick">***</span><span class="message notice">pgreco_ is now known as pgreco</span></div><div class="line" id="152708"><span class="nick" style="color:#234e69"><a href="#152708" label="[15:27:08]">&lt;Hagfish&gt;</a></span><span class="message">stikonas[m]: thanks for the insight</span></div><div class="line" id="152729"><span class="nick" style="color:#234e69"><a href="#152729" label="[15:27:29]">&lt;Hagfish&gt;</a></span><span class="message">do you mind if i submit the link to Hacker News?</span></div><div class="line" id="152825"><span class="nick" style="color:#234e69"><a href="#152825" label="[15:28:25]">&lt;Hagfish&gt;</a></span><span class="message">well, i guess <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap">https://github.com/fosslinux/live-bootstrap</a>  is the more appropriate link</span></div><div class="line" id="152911"><span class="nick" style="color:#389600"><a href="#152911" label="[15:29:11]">&lt;stikonas&gt;</a></span><span class="message">well, you can submit it but it's still very much WIP. But I guess that's fine</span></div><div class="line" id="153003"><span class="nick" style="color:#234e69"><a href="#153003" label="[15:30:03]">&lt;Hagfish&gt;</a></span><span class="message">i'm thinking that EU afternoon and US morning might be a good time for it to receive some upvotes, and the repo has a good title/About</span></div><div class="line" id="153158"><span class="nick" style="color:#234e69"><a href="#153158" label="[15:31:58]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://news.ycombinator.com/item?id=25988977">https://news.ycombinator.com/item?id=25988977</a> </span></div><div class="line" id="153201"><span class="nick" style="color:#234e69"><a href="#153201" label="[15:32:01]">&lt;Hagfish&gt;</a></span><span class="message">there we go</span></div><div class="line" id="153226"><span class="nick" style="color:#6b8072"><a href="#153226" label="[15:32:26]">&lt;deesix&gt;</a></span><span class="message">upvote obsession, just don't play the game</span></div><div class="line" id="160918"><span class="nick" style="color:#6c3d55"><a href="#160918" label="[16:09:18]">&lt;bauen1&gt;</a></span><span class="message">gotta catch all of those free fake internet points</span></div><div class="line" id="161519"><span class="nick" style="color:#6c3d55"><a href="#161519" label="[16:15:19]">&lt;bauen1&gt;</a></span><span class="message">btw, just how far is live-bootstrap from gcc+linux+&quot;whatever else is essential&quot; ?</span></div><div class="line" id="162637"><span class="nick" style="color:#389600"><a href="#162637" label="[16:26:37]">&lt;stikonas&gt;</a></span><span class="message">bauen1: so need to get musl, then try to finish bison, gawk, probably need to rebuild some of our old stuff (should be able to build more coreutils). That will probably let us run ./configure scripts. Then we still need to do perl for autotools. After that it should be fairly easy (binutils and gcc)</span></div><div class="line" id="163129"><span class="nick" style="color:#389600"><a href="#163129" label="[16:31:29]">&lt;stikonas&gt;</a></span><span class="message">anyway, after autotools, things should get much simpler...</span></div><div class="line" id="163739"><span class="nick" style="color:#6c3d55"><a href="#163739" label="[16:37:39]">&lt;bauen1&gt;</a></span><span class="message">so in theory it's very simple lol</span></div><div class="line" id="163742"><span class="nick" style="color:#6c3d55"><a href="#163742" label="[16:37:42]">&lt;bauen1&gt;</a></span><span class="message">this is quite nice</span></div><div class="line" id="164245"><span class="nick" style="color:#389600"><a href="#164245" label="[16:42:45]">&lt;stikonas&gt;</a></span><span class="message">yeah, we already have quite a bit of stuff finished</span></div><div class="line" id="164319"><span class="nick" style="color:#389600"><a href="#164319" label="[16:43:19]">&lt;stikonas&gt;</a></span><span class="message">we have a shell (ancient bash but it will do)</span></div><div class="line" id="164337"><span class="nick" style="color:#389600"><a href="#164337" label="[16:43:37]">&lt;stikonas&gt;</a></span><span class="message">I'm almost done with proper C library</span></div><div class="line" id="164353"><span class="nick" style="color:#389600"><a href="#164353" label="[16:43:53]">&lt;stikonas&gt;</a></span><span class="message">and we have a reasonable C compiler (tcc)</span></div><div class="line" id="164500"><span class="nick" style="color:#389600"><a href="#164500" label="[16:45:00]">&lt;stikonas&gt;</a></span><span class="message">so we are almost entirely out of mescc land (most recent difficulties were due to mes libc)</span></div><div class="line" id="164549"><span class="nick" style="color:#389600"><a href="#164549" label="[16:45:49]">&lt;stikonas&gt;</a></span><span class="message">and musl compiles, I just have problems linking it</span></div><div class="line" id="164628"><span class="nick" style="color:#d9d9d9"><a href="#164628" label="[16:46:28]">&lt;rain1&gt;</a></span><span class="message">cool!</span></div><div class="line" id="164740"><span class="nick" style="color:#bc80bd"><a href="#164740" label="[16:47:40]">&lt;siraben&gt;</a></span><span class="message">Hagfish: upvoted, hopefully it gets to the front</span></div><div class="line" id="164907"><span class="nick" style="color:#bc80bd"><a href="#164907" label="[16:49:07]">&lt;siraben&gt;</a></span><span class="message">though I think a title like &quot;live-bootstrap: automating GCC bootstrap from a &lt;1 KB binary with initramfs&quot; might have been clearer</span></div><div class="line" id="165014"><span class="nick" style="color:#389600"><a href="#165014" label="[16:50:14]">&lt;stikonas&gt;</a></span><span class="message">it's not &lt;1KB yet...</span></div><div class="line" id="165023"><span class="nick" style="color:#389600"><a href="#165023" label="[16:50:23]">&lt;stikonas&gt;</a></span><span class="message">I think it's 1094 bytes now</span></div><div class="line" id="165128"><span class="nick" style="color:#389600"><a href="#165128" label="[16:51:28]">&lt;stikonas&gt;</a></span><span class="message">although, maybe kaem-minimal can be replaced with something smaller?</span></div><div class="line" id="165212"><span class="nick" style="color:#6c3d55"><a href="#165212" label="[16:52:12]">&lt;bauen1&gt;</a></span><span class="message">making (assembly) code smaller, doesn't necessarily make it easier to verify</span></div><div class="line" id="165216"><span class="nick" style="color:#389600"><a href="#165216" label="[16:52:16]">&lt;stikonas&gt;</a></span><span class="message">something that hardcodes how to build hex0 and kaem-minimal ?</span></div><div class="line" id="165218"><span class="nick" style="color:#6c3d55"><a href="#165218" label="[16:52:18]">&lt;bauen1&gt;</a></span><span class="message">or write from scratch</span></div><div class="line" id="165225"><span class="nick" style="color:#389600"><a href="#165225" label="[16:52:25]">&lt;stikonas&gt;</a></span><span class="message">well, that's true...</span></div><div class="line" id="165408"><span class="nick" style="color:#389600"><a href="#165408" label="[16:54:08]">&lt;stikonas&gt;</a></span><span class="message">I was just saying kaem-minimal still has a lot of features...</span></div><div class="line" id="165437"><span class="nick" style="color:#389600"><a href="#165437" label="[16:54:37]">&lt;stikonas&gt;</a></span><span class="message">but yeah, at these small sizes it's not always better to go smaller</span></div><div class="line" id="165442"><span class="nick" style="color:#6c3d55"><a href="#165442" label="[16:54:42]">&lt;bauen1&gt;</a></span><span class="message">stikonas: arguably you don't need kaem, you just need a binary that issues a few predefined commands, waits pid and finally execs kaem</span></div><div class="line" id="165501"><span class="nick" style="color:#6c3d55"><a href="#165501" label="[16:55:01]">&lt;bauen1&gt;</a></span><span class="message">no file read, just hard coded syscalls</span></div><div class="line" id="165530"><span class="nick" style="color:#389600"><a href="#165530" label="[16:55:30]">&lt;stikonas&gt;</a></span><span class="message">well, that's what I was basically saying</span></div><div class="line" id="165544"><span class="nick" style="color:#389600"><a href="#165544" label="[16:55:44]">&lt;stikonas&gt;</a></span><span class="message">you only need to issue 2 commands, build hex and build kaem</span></div><div class="line" id="165717"><span class="nick" style="color:#6c3d55"><a href="#165717" label="[16:57:17]">&lt;bauen1&gt;</a></span><span class="message">imo anything that can be hand assembled in a reasonable time span is fine (so something like &lt;6h if you have some experience and a hard code of the i386 manual)</span></div><div class="line" id="165758"><span class="nick" style="color:#6c3d55"><a href="#165758" label="[16:57:58]">&lt;bauen1&gt;</a></span><span class="message">s/hard code/paper edition/</span></div><div class="line" id="170003"><span class="nick" style="color:#3c5b35"><a href="#170003" label="[17:00:03]">&lt;xentrac&gt;</a></span><span class="message">1KB will be awesome!  not that 1094 bytes isn't</span></div><div class="line" id="170126"><span class="nick" style="color:#389600"><a href="#170126" label="[17:01:26]">&lt;stikonas&gt;</a></span><span class="message">well, it shouldn't be too hard to modify kaem to instead issue 3 hardcoded commands (hex0-seed hex0_x86.hex0 hex0, /hex0 kaem-minimal.hex0 kaem-0, kaem-0 -f kaem.run) and rip out all parsing code...</span></div><div class="line" id="170232"><span class="nick" style="color:#389600"><a href="#170232" label="[17:02:32]">&lt;stikonas&gt;</a></span><span class="message">I suspect that will take this modified &quot;kaem&quot; much closer to hex0 size</span></div><div class="line" id="170300"><span class="nick" style="color:#6c3d55"><a href="#170300" label="[17:03:00]">&lt;bauen1&gt;</a></span><span class="message">stikonas: actually, you should integrate keam and hex0 into a binary that builds hex0 and kaem minimal or something like that</span></div><div class="line" id="170316"><span class="nick" style="color:#389600"><a href="#170316" label="[17:03:16]">&lt;stikonas&gt;</a></span><span class="message">well, I thought about that too, that would save some space on elf-headers</span></div><div class="line" id="170323"><span class="nick" style="color:#389600"><a href="#170323" label="[17:03:23]">&lt;stikonas&gt;</a></span><span class="message">although, maybe less readable?</span></div><div class="line" id="170348"><span class="nick" style="color:#6c3d55"><a href="#170348" label="[17:03:48]">&lt;bauen1&gt;</a></span><span class="message">stikonas: it depends, maybe it could reduce the total amount of hex0 code, at the cost of a slightly larger seed</span></div><div class="line" id="170407"><span class="nick" style="color:#bc80bd"><a href="#170407" label="[17:04:07]">&lt;siraben&gt;</a></span><span class="message">Maybe we should get nanochess to help us, hehe</span></div><div class="line" id="170411"><span class="nick" style="color:#6c3d55"><a href="#170411" label="[17:04:11]">&lt;bauen1&gt;</a></span><span class="message">might still be worth it, since hex0 is basically a glorified binary format with comments</span></div><div class="line" id="170415"><span class="nick" style="color:#bc80bd"><a href="#170415" label="[17:04:15]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://nanochess.org/">https://nanochess.org/</a> </span></div><div class="line" id="170537"><span class="nick" style="color:#3c5b35"><a href="#170537" label="[17:05:37]">&lt;xentrac&gt;</a></span><span class="message">like, fork, exec, and wait three times in a loop?</span></div><div class="line" id="170549"><span class="nick" style="color:#6c3d55"><a href="#170549" label="[17:05:49]">&lt;bauen1&gt;</a></span><span class="message">yes</span></div><div class="line" id="170613"><span class="nick" style="color:#bc80bd"><a href="#170613" label="[17:06:13]">&lt;siraben&gt;</a></span><span class="message">He can do insane stuff in 512 bytes</span></div><div class="line" id="170648"><span class="nick" style="color:#6c3d55"><a href="#170648" label="[17:06:48]">&lt;bauen1&gt;</a></span><span class="message">xentrac: yes</span></div><div class="line" id="173213"><span class="nick" style="color:#3c5b35"><a href="#173213" label="[17:32:13]">&lt;xentrac&gt;</a></span><span class="message">probably worth mentioning that Oscar Toledo and his father, mother, and sisters have built their own OS, computers, and web browser (though I think we're talking like Netscape 3 class browser, not Firefox 70)</span></div><div class="line" id="173248"><span class="nick" style="color:#3c5b35"><a href="#173248" label="[17:32:48]">&lt;xentrac&gt;</a></span><span class="message">I assume they used precompiled compilers to do get it bootstrapped</span></div><div class="line" id="174057"><span class="nick" style="color:#6c3d55"><a href="#174057" label="[17:40:57]">&lt;bauen1&gt;</a></span><span class="message">nanochess.org is him ?</span></div><div class="line" id="174121"><span class="nick" style="color:#bc80bd"><a href="#174121" label="[17:41:21]">&lt;siraben&gt;</a></span><span class="message">bauen1: yes</span></div><div class="line" id="174123"><span class="nick" style="color:#6c3d55"><a href="#174123" label="[17:41:23]">&lt;bauen1&gt;</a></span><span class="message">huh i've heard of him bevore then, mostly from random hacker news articles</span></div><div class="line" id="174350"><span class="nick" style="color:#af8d2f"><a href="#174350" label="[17:43:50]">&lt;JeremiahOrians[m&gt;</a></span><span class="message">well he would definitely kick my ass at making the seeds smaller.</span></div><div class="line" id="174451"><span class="nick" style="color:#af8d2f"><a href="#174451" label="[17:44:51]">&lt;JeremiahOrians[m&gt;</a></span><span class="message">except for the x86 native as that has to be 512bytes exactly but his would probably do far more.</span></div><div class="line" id="190059"><span class="nick" style="color:#3c5b35"><a href="#190059" label="[19:00:59]">&lt;xentrac&gt;</a></span><span class="message">bauen1: I wrote some incomplete notes in <a rel="nofollow" href="https://dercuano.github.io/notes/bootos-notes.html">https://dercuano.github.io/notes/bootos-notes.html</a>  on his bootOS</span></div><div class="line" id="190431"><span class="nick" style="color:#3c5b35"><a href="#190431" label="[19:04:31]">&lt;xentrac&gt;</a></span><span class="message">in theory you could start with a floppy disk with those 512 bytes in its boot sector and an IBM-compatible with a keyboard and monitor, and bootstrap from there to a working system using just your brain and fingers, no further software</span></div><div class="line" id="211815"><span class="nick">***</span><span class="message notice">nimaje1 is now known as nimaje</span></div><div class="line" id="213145"><span class="nick">***</span><span class="message notice">jelly1 is now known as jelle</span></div><div class="line" id="220018"><span class="nick" style="color:#389600"><a href="#220018" label="[22:00:18]">&lt;stikonas&gt;</a></span><span class="message">fossy: somehow I'm struggling to get unified .a files with tcc...</span></div><div class="line" id="220111"><span class="nick" style="color:#389600"><a href="#220111" label="[22:01:11]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I'm trying to run  tcc -ar cf ../libc.a *.a</span></div><div class="line" id="220117"><span class="nick" style="color:#389600"><a href="#220117" label="[22:01:17]">&lt;stikonas&gt;</a></span><span class="message">tcc: ar: Unsupported Elf Class: aio.a</span></div><div class="line" id="220227"><span class="nick" style="color:#6d2462"><a href="#220227" label="[22:02:27]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh, yeah, sorry I tested it with tcc ar yesterday it dosent work</span></div><div class="line" id="220232"><span class="nick" style="color:#6d2462"><a href="#220232" label="[22:02:32]">&lt;fossy&gt;</a></span><span class="message">only with binutils ar</span></div><div class="line" id="220242"><span class="nick" style="color:#389600"><a href="#220242" label="[22:02:42]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="220255"><span class="nick" style="color:#6d2462"><a href="#220255" label="[22:02:55]">&lt;fossy&gt;</a></span><span class="message">:/</span></div><div class="line" id="220256"><span class="nick" style="color:#389600"><a href="#220256" label="[22:02:56]">&lt;stikonas&gt;</a></span><span class="message">I had some luck with cat... but I think the resulting .a is only partially working</span></div><div class="line" id="220302"><span class="nick" style="color:#389600"><a href="#220302" label="[22:03:02]">&lt;stikonas&gt;</a></span><span class="message">so not good</span></div><div class="line" id="220318"><span class="nick" style="color:#389600"><a href="#220318" label="[22:03:18]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="220319"><span class="nick" style="color:#6d2462"><a href="#220319" label="[22:03:19]">&lt;fossy&gt;</a></span><span class="message">another option is make 2-3 .as and recompile tinycc to link against all of them....</span></div><div class="line" id="220335"><span class="nick" style="color:#389600"><a href="#220335" label="[22:03:35]">&lt;stikonas&gt;</a></span><span class="message">we probably need more than 2-3...</span></div><div class="line" id="220339"><span class="nick" style="color:#389600"><a href="#220339" label="[22:03:39]">&lt;stikonas&gt;</a></span><span class="message">I think at least 5</span></div><div class="line" id="220351"><span class="nick" style="color:#6d2462"><a href="#220351" label="[22:03:51]">&lt;fossy&gt;</a></span><span class="message">hm, I see</span></div><div class="line" id="220408"><span class="nick" style="color:#389600"><a href="#220408" label="[22:04:08]">&lt;stikonas&gt;</a></span><span class="message">but that's an option...</span></div><div class="line" id="220416"><span class="nick" style="color:#389600"><a href="#220416" label="[22:04:16]">&lt;stikonas&gt;</a></span><span class="message">another option is to try to find the cause of that limit</span></div><div class="line" id="220429"><span class="nick" style="color:#389600"><a href="#220429" label="[22:04:29]">&lt;stikonas&gt;</a></span><span class="message">and probably not an option is to build binutils ar...</span></div><div class="line" id="220445"><span class="nick" style="color:#389600"><a href="#220445" label="[22:04:45]">&lt;stikonas&gt;</a></span><span class="message">it's more complicated than even bash...</span></div><div class="line" id="220525"><span class="nick" style="color:#389600"><a href="#220525" label="[22:05:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, I also tried a bit with dynamic linking, but .so file also seems broken</span></div><div class="line" id="220541"><span class="nick" style="color:#389600"><a href="#220541" label="[22:05:41]">&lt;stikonas&gt;</a></span><span class="message">i.e. compile 10 or so .a files into .so...</span></div><div class="line" id="220552"><span class="nick" style="color:#6d2462"><a href="#220552" label="[22:05:52]">&lt;fossy&gt;</a></span><span class="message">stikonas: tinycc does /not/ work with dynamic linking in our setup like at all</span></div><div class="line" id="220601"><span class="nick" style="color:#389600"><a href="#220601" label="[22:06:01]">&lt;stikonas&gt;</a></span><span class="message">fossy: that's because we are using mes libc</span></div><div class="line" id="220602"><span class="nick" style="color:#6d2462"><a href="#220602" label="[22:06:02]">&lt;fossy&gt;</a></span><span class="message">even with musl iirc</span></div><div class="line" id="220606"><span class="nick" style="color:#389600"><a href="#220606" label="[22:06:06]">&lt;stikonas&gt;</a></span><span class="message">oh?</span></div><div class="line" id="220607"><span class="nick" style="color:#389600"><a href="#220607" label="[22:06:07]">&lt;stikonas&gt;</a></span><span class="message">why not?</span></div><div class="line" id="220618"><span class="nick" style="color:#389600"><a href="#220618" label="[22:06:18]">&lt;stikonas&gt;</a></span><span class="message">I think we just need to specify elf loader</span></div><div class="line" id="220620"><span class="nick" style="color:#6d2462"><a href="#220620" label="[22:06:20]">&lt;fossy&gt;</a></span><span class="message">yeah I know about that, but I think something is broken in it as you said</span></div><div class="line" id="220634"><span class="nick" style="color:#389600"><a href="#220634" label="[22:06:34]">&lt;stikonas&gt;</a></span><span class="message">well, I just couldn't link .so file</span></div><div class="line" id="220640"><span class="nick" style="color:#389600"><a href="#220640" label="[22:06:40]">&lt;stikonas&gt;</a></span><span class="message">I can try to do it with binutils...</span></div><div class="line" id="220646"><span class="nick" style="color:#389600"><a href="#220646" label="[22:06:46]">&lt;stikonas&gt;</a></span><span class="message">and see if that .so is functional</span></div><div class="line" id="220655"><span class="nick" style="color:#6d2462"><a href="#220655" label="[22:06:55]">&lt;fossy&gt;</a></span><span class="message">cant link even with -nostdlib?</span></div><div class="line" id="220705"><span class="nick" style="color:#389600"><a href="#220705" label="[22:07:05]">&lt;stikonas&gt;</a></span><span class="message">no, linking worked fine for me</span></div><div class="line" id="220730"><span class="nick" style="color:#389600"><a href="#220730" label="[22:07:30]">&lt;stikonas&gt;</a></span><span class="message">but 1) .so was about 1/3 of expected size. Then hello world was linking against libc.so but crashed on startup</span></div><div class="line" id="220741"><span class="nick" style="color:#6d2462"><a href="#220741" label="[22:07:41]">&lt;fossy&gt;</a></span><span class="message">hmmmmm.....</span></div><div class="line" id="220752"><span class="nick" style="color:#389600"><a href="#220752" label="[22:07:52]">&lt;stikonas&gt;</a></span><span class="message">well, crash might be caused by 1/3 of expected size</span></div><div class="line" id="220757"><span class="nick" style="color:#6d2462"><a href="#220757" label="[22:07:57]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="220808"><span class="nick" style="color:#6d2462"><a href="#220808" label="[22:08:08]">&lt;fossy&gt;</a></span><span class="message">but the question is why it is crashing</span></div><div class="line" id="220815"><span class="nick" style="color:#6d2462"><a href="#220815" label="[22:08:15]">&lt;fossy&gt;</a></span><span class="message">I mean</span></div><div class="line" id="220820"><span class="nick" style="color:#6d2462"><a href="#220820" label="[22:08:20]">&lt;fossy&gt;</a></span><span class="message">why it is so small</span></div><div class="line" id="220823"><span class="nick" style="color:#389600"><a href="#220823" label="[22:08:23]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="220850"><span class="nick" style="color:#6d2462"><a href="#220850" label="[22:08:50]">&lt;fossy&gt;</a></span><span class="message">what command were u using to convert the .as to the .so</span></div><div class="line" id="220951"><span class="nick" style="color:#389600"><a href="#220951" label="[22:09:51]">&lt;stikonas&gt;</a></span><span class="message">something like -shared *.a -Wl,--whole-archive -o libc.so</span></div><div class="line" id="220956"><span class="nick" style="color:#389600"><a href="#220956" label="[22:09:56]">&lt;stikonas&gt;</a></span><span class="message">but can't reproduce it now</span></div><div class="line" id="221002"><span class="nick" style="color:#389600"><a href="#221002" label="[22:10:02]">&lt;stikonas&gt;</a></span><span class="message">maybe I used tcc-musl</span></div><div class="line" id="221112"><span class="nick" style="color:#6d2462"><a href="#221112" label="[22:11:12]">&lt;fossy&gt;</a></span><span class="message">Right</span></div><div class="line" id="221147"><span class="nick" style="color:#389600"><a href="#221147" label="[22:11:47]">&lt;stikonas&gt;</a></span><span class="message">hmm, so far the best I got was with cat</span></div><div class="line" id="221314"><span class="nick" style="color:#389600"><a href="#221314" label="[22:13:14]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://stikonas.eu/files/fix_linking.sh.txt">https://stikonas.eu/files/fix_linking.sh.txt</a> </span></div><div class="line" id="222230"><span class="nick" style="color:#389600"><a href="#222230" label="[22:22:30]">&lt;stikonas&gt;</a></span><span class="message">yeah, this doesn't work...</span></div><div class="line" id="222244"><span class="nick" style="color:#389600"><a href="#222244" label="[22:22:44]">&lt;stikonas&gt;</a></span><span class="message">cat'ing them is useless...</span></div><div class="line" id="223001"><span class="nick" style="color:#389600"><a href="#223001" label="[22:30:01]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, I can try to make some unified c files</span></div><div class="line" id="223014"><span class="nick" style="color:#389600"><a href="#223014" label="[22:30:14]">&lt;stikonas&gt;</a></span><span class="message">if we can get some smaller number of files</span></div><div class="line" id="223023"><span class="nick" style="color:#389600"><a href="#223023" label="[22:30:23]">&lt;stikonas&gt;</a></span><span class="message">that might be enough to link .a...</span></div><div class="line" id="223604"><span class="nick" style="color:#389600"><a href="#223604" label="[22:36:04]">&lt;stikonas&gt;</a></span><span class="message">although, musl has a lot of redefinitions...</span></div><div class="line" id="223718"><span class="nick" style="color:#6d2462"><a href="#223718" label="[22:37:18]">&lt;fossy&gt;</a></span><span class="message">yeah I was gonna say</span></div><div class="line" id="223724"><span class="nick" style="color:#6d2462"><a href="#223724" label="[22:37:24]">&lt;fossy&gt;</a></span><span class="message">might be harder with musl</span></div><div class="line" id="223747"><span class="nick" style="color:#6d2462"><a href="#223747" label="[22:37:47]">&lt;fossy&gt;</a></span><span class="message">cat wont work its an archive</span></div><div class="line" id="224422"><span class="nick" style="color:#389600"><a href="#224422" label="[22:44:22]">&lt;stikonas&gt;</a></span><span class="message">strange that guix didn't hit any of this in gcc...</span></div><div class="line" id="224430"><span class="nick" style="color:#389600"><a href="#224430" label="[22:44:30]">&lt;stikonas&gt;</a></span><span class="message">I would think gcc should be just as large...</span></div><div class="line" id="224701"><span class="nick" style="color:#389600"><a href="#224701" label="[22:47:01]">&lt;pder&gt;</a></span><span class="message">tcc -ar is failing when the command line is too long?</span></div><div class="line" id="225151"><span class="nick" style="color:#389600"><a href="#225151" label="[22:51:51]">&lt;stikonas&gt;</a></span><span class="message">pder: yes</span></div><div class="line" id="225207"><span class="nick" style="color:#389600"><a href="#225207" label="[22:52:07]">&lt;stikonas&gt;</a></span><span class="message">pder: I think when command line is 1024 chars or longer</span></div><div class="line" id="225214"><span class="nick" style="color:#389600"><a href="#225214" label="[22:52:14]">&lt;stikonas&gt;</a></span><span class="message">pder: but it's probably not inside tcc</span></div><div class="line" id="225231"><span class="nick" style="color:#389600"><a href="#225231" label="[22:52:31]">&lt;stikonas&gt;</a></span><span class="message">tcc only gets argc=236</span></div><div class="line" id="225234"><span class="nick" style="color:#389600"><a href="#225234" label="[22:52:34]">&lt;stikonas&gt;</a></span><span class="message">so already truncated</span></div><div class="line" id="225320"><span class="nick" style="color:#389600"><a href="#225320" label="[22:53:20]">&lt;stikonas&gt;</a></span><span class="message">and I think there are 1261 .o files in obj directory</span></div><div class="line" id="225533"><span class="nick" style="color:#389600"><a href="#225533" label="[22:55:33]">&lt;stikonas&gt;</a></span><span class="message">pder: any ideas what to do?</span></div><div class="line" id="225817"><span class="nick" style="color:#389600"><a href="#225817" label="[22:58:17]">&lt;pder&gt;</a></span><span class="message">I dont have any idea at the moment.  Would be nice to track this issue down so we can avoid workarounds</span></div><div class="line" id="225936"><span class="nick" style="color:#389600"><a href="#225936" label="[22:59:36]">&lt;stikonas&gt;</a></span><span class="message">it might be mes libc bug since argc is already smaller</span></div><div class="line" id="225942"><span class="nick" style="color:#389600"><a href="#225942" label="[22:59:42]">&lt;stikonas&gt;</a></span><span class="message">and hard to workaround that</span></div><div class="line" id="230012"><span class="nick" style="color:#389600"><a href="#230012" label="[23:00:12]">&lt;stikonas&gt;</a></span><span class="message">(since tcc will stay linked to mes libc)</span></div><div class="line" id="230025"><span class="nick" style="color:#389600"><a href="#230025" label="[23:00:25]">&lt;stikonas&gt;</a></span><span class="message">(because tcc 0.9.27 is not self-hosting)</span></div><div class="line" id="230034"><span class="nick" style="color:#389600"><a href="#230034" label="[23:00:34]">&lt;stikonas&gt;</a></span><span class="message">well, maybe we can rebuild 0.9.26 too...</span></div><div class="line" id="230059"><span class="nick" style="color:#389600"><a href="#230059" label="[23:00:59]">&lt;stikonas&gt;</a></span><span class="message">janneke: do you know anything about command line limit in mes libc?</span></div><div class="line" id="230832"><span class="nick" style="color:#8dd3c7"><a href="#230832" label="[23:08:32]">&lt;janneke&gt;</a></span><span class="message">stikonas: yeah, mes libc still has some hard coded limits</span></div><div class="line" id="230859"><span class="nick" style="color:#389600"><a href="#230859" label="[23:08:59]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="230900"><span class="nick" style="color:#8dd3c7"><a href="#230900" label="[23:09:00]">&lt;janneke&gt;</a></span><span class="message">it suffices for the guix bootstrap, though</span></div><div class="line" id="230931"><span class="nick" style="color:#389600"><a href="#230931" label="[23:09:31]">&lt;stikonas&gt;</a></span><span class="message">well, because guix doesn't try to bootstrap bison or autotools...</span></div><div class="line" id="230950"><span class="nick" style="color:#389600"><a href="#230950" label="[23:09:50]">&lt;stikonas&gt;</a></span><span class="message">just uses pregenerated bison .c files or ./configure scripts</span></div><div class="line" id="231002"><span class="nick" style="color:#8dd3c7"><a href="#231002" label="[23:10:02]">&lt;janneke&gt;</a></span><span class="message">yeah</span></div><div class="line" id="231018"><span class="nick" style="color:#8dd3c7"><a href="#231018" label="[23:10:18]">&lt;janneke&gt;</a></span><span class="message">probably easy to pick somer larger arbitrary limits</span></div><div class="line" id="231020"><span class="nick" style="color:#389600"><a href="#231020" label="[23:10:20]">&lt;stikonas&gt;</a></span><span class="message">anyway, I can try to do some experiments to confirm that is is just mes libc...</span></div><div class="line" id="231025"><span class="nick" style="color:#8dd3c7"><a href="#231025" label="[23:10:25]">&lt;janneke&gt;</a></span><span class="message">a proper fix is more work</span></div><div class="line" id="231046"><span class="nick" style="color:#389600"><a href="#231046" label="[23:10:46]">&lt;stikonas&gt;</a></span><span class="message">well, we probaby need at least a few times more</span></div><div class="line" id="232922"><span class="nick" style="color:#389600"><a href="#232922" label="[23:29:22]">&lt;stikonas&gt;</a></span><span class="message">fossy: interesting observation, so I used binutils for experimentation. Then I built tcc-musl and it is self-hosting unlike tcc-0.9.27</span></div><div class="line" id="232958"><span class="nick" style="color:#389600"><a href="#232958" label="[23:29:58]">&lt;pder&gt;</a></span><span class="message">Trying some experiments inside live-bootstrap chroot.  running /after/bin/echo 1 2 3 4 ...</span></div><div class="line" id="233012"><span class="nick" style="color:#389600"><a href="#233012" label="[23:30:12]">&lt;pder&gt;</a></span><span class="message">to see what the max value is before failure</span></div><div class="line" id="233021"><span class="nick" style="color:#389600"><a href="#233021" label="[23:30:21]">&lt;stikonas&gt;</a></span><span class="message">pder: and also tcc-musl  -ar works fine</span></div><div class="line" id="233034"><span class="nick" style="color:#389600"><a href="#233034" label="[23:30:34]">&lt;stikonas&gt;</a></span><span class="message">so it's def mes libc bug</span></div><div class="line" id="233100"><span class="nick" style="color:#389600"><a href="#233100" label="[23:31:00]">&lt;pder&gt;</a></span><span class="message">Yeah, and the behavior is not predictable</span></div><div class="line" id="233138"><span class="nick" style="color:#389600"><a href="#233138" label="[23:31:38]">&lt;stikonas&gt;</a></span><span class="message">oh, it's not always the same?</span></div><div class="line" id="233145"><span class="nick" style="color:#389600"><a href="#233145" label="[23:31:45]">&lt;stikonas&gt;</a></span><span class="message">I do get the same size with tcc-ar</span></div><div class="line" id="233147"><span class="nick" style="color:#389600"><a href="#233147" label="[23:31:47]">&lt;pder&gt;</a></span><span class="message">/after/bin/echo 1 2 3 up to 400 only prints up to 144</span></div><div class="line" id="233214"><span class="nick" style="color:#389600"><a href="#233214" label="[23:32:14]">&lt;pder&gt;</a></span><span class="message">/after/bin/echo 1 2 3 up to 200 prints up to 200</span></div><div class="line" id="233240"><span class="nick" style="color:#389600"><a href="#233240" label="[23:32:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, I can see...</span></div><div class="line" id="233249"><span class="nick" style="color:#389600"><a href="#233249" label="[23:32:49]">&lt;stikonas&gt;</a></span><span class="message">so maybe it's not 1024...</span></div><div class="line" id="233328"><span class="nick" style="color:#389600"><a href="#233328" label="[23:33:28]">&lt;pder&gt;</a></span><span class="message">and /after/bin/echo 1 2 3 up to 255 prints... nothing</span></div><div class="line" id="233347"><span class="nick" style="color:#389600"><a href="#233347" label="[23:33:47]">&lt;stikonas&gt;</a></span><span class="message">yeah, I can also see that</span></div><div class="line" id="233353"><span class="nick" style="color:#389600"><a href="#233353" label="[23:33:53]">&lt;stikonas&gt;</a></span><span class="message">you are testing with  /after/bin/echo $(seq 1 255) ?</span></div><div class="line" id="233404"><span class="nick" style="color:#389600"><a href="#233404" label="[23:34:04]">&lt;stikonas&gt;</a></span><span class="message">(where seq is busybox builtin</span></div><div class="line" id="233420"><span class="nick" style="color:#389600"><a href="#233420" label="[23:34:20]">&lt;stikonas&gt;</a></span><span class="message">254 is the last one that works</span></div><div class="line" id="233427"><span class="nick" style="color:#389600"><a href="#233427" label="[23:34:27]">&lt;pder&gt;</a></span><span class="message">I was actually generating a one line bash script from another script</span></div><div class="line" id="233433"><span class="nick" style="color:#389600"><a href="#233433" label="[23:34:33]">&lt;stikonas&gt;</a></span><span class="message">257 shows 1 again</span></div><div class="line" id="233443"><span class="nick" style="color:#389600"><a href="#233443" label="[23:34:43]">&lt;stikonas&gt;</a></span><span class="message">so there is some overflow?</span></div><div class="line" id="233445"><span class="nick" style="color:#389600"><a href="#233445" label="[23:34:45]">&lt;stikonas&gt;</a></span><span class="message">at 256</span></div><div class="line" id="233517"><span class="nick" style="color:#389600"><a href="#233517" label="[23:35:17]">&lt;stikonas&gt;</a></span><span class="message">hmm, ok, so it's actually number of arguments</span></div><div class="line" id="233523"><span class="nick" style="color:#389600"><a href="#233523" label="[23:35:23]">&lt;stikonas&gt;</a></span><span class="message">not length of command line</span></div><div class="line" id="233547"><span class="nick" style="color:#389600"><a href="#233547" label="[23:35:47]">&lt;pder&gt;</a></span><span class="message">Maybe something in mes under the exec functions</span></div><div class="line" id="233603"><span class="nick" style="color:#389600"><a href="#233603" label="[23:36:03]">&lt;stikonas&gt;</a></span><span class="message">and 1261 % 256 is 237</span></div><div class="line" id="233617"><span class="nick" style="color:#389600"><a href="#233617" label="[23:36:17]">&lt;stikonas&gt;</a></span><span class="message">so one off from argc=256 that I'm getting in tcc -ar</span></div><div class="line" id="233627"><span class="nick" style="color:#389600"><a href="#233627" label="[23:36:27]">&lt;stikonas&gt;</a></span><span class="message">so definitely this issue</span></div><div class="line" id="233700"><span class="nick" style="color:#389600"><a href="#233700" label="[23:37:00]">&lt;stikonas&gt;</a></span><span class="message">va_list is limited?</span></div><div class="line" id="233703"><span class="nick" style="color:#389600"><a href="#233703" label="[23:37:03]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="233826"><span class="nick" style="color:#389600"><a href="#233826" label="[23:38:26]">&lt;stikonas&gt;</a></span><span class="message">pder: if we can't figure this out, I think workaround would be to build individual folders as individual libs instead of libc.a, build tcc against it with extra -l flags and then rebuild tcc and musl properly</span></div><div class="line" id="233842"><span class="nick" style="color:#389600"><a href="#233842" label="[23:38:42]">&lt;stikonas&gt;</a></span><span class="message">doable, but messy :(</span></div><div class="line" id="234004"><span class="nick" style="color:#389600"><a href="#234004" label="[23:40:04]">&lt;pder&gt;</a></span><span class="message">I'll take a look later this evening.</span></div><br /></div></body></html>