<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-05-06.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000030"><span class="nick" style="color:#8dd3c7"><a href="#000030" label="[00:00:30]">&lt;oriansj&gt;</a></span><span class="message">but that can be worked around by not invoking blood-elf with the -g flag</span></div><div class="line" id="000405"><span class="nick" style="color:#2e2a4a"><a href="#000405" label="[00:04:05]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: are you saying that mes.git/INSTALL is incorrect about the prerequisites?</span></div><div class="line" id="000507"><span class="nick" style="color:#6b8072"><a href="#000507" label="[00:05:07]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: I saw that error (cell_symbol_record_type) an hour ago but probably due to different cause</span></div><div class="line" id="000520"><span class="nick" style="color:#6b8072"><a href="#000520" label="[00:05:20]">&lt;stikonas&gt;</a></span><span class="message">(I was building with kaem and globals.c was missing)</span></div><div class="line" id="000736"><span class="nick" style="color:#8dd3c7"><a href="#000736" label="[00:07:36]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: yes it is clearly wrong as you don't need two different C compilers to build a single C program</span></div><div class="line" id="000759"><span class="nick" style="color:#8dd3c7"><a href="#000759" label="[00:07:59]">&lt;oriansj&gt;</a></span><span class="message">as if you notice next to M2-Planet it says optional</span></div><div class="line" id="000804"><span class="nick" style="color:#2e2a4a"><a href="#000804" label="[00:08:04]">&lt;vagrantc&gt;</a></span><span class="message">oriansj: well, it fails to build when i remove mescc-tools from the build-depends for the debian packaging</span></div><div class="line" id="000822"><span class="nick" style="color:#2e2a4a"><a href="#000822" label="[00:08:22]">&lt;vagrantc&gt;</a></span><span class="message">so, the way it is written, it is required somehow</span></div><div class="line" id="000831"><span class="nick" style="color:#8dd3c7"><a href="#000831" label="[00:08:31]">&lt;oriansj&gt;</a></span><span class="message">well yes, it needs mescc-tools to actually build anything</span></div><div class="line" id="000840"><span class="nick" style="color:#2e2a4a"><a href="#000840" label="[00:08:40]">&lt;vagrantc&gt;</a></span><span class="message">the nuance is lost on me</span></div><div class="line" id="000852"><span class="nick" style="color:#8dd3c7"><a href="#000852" label="[00:08:52]">&lt;oriansj&gt;</a></span><span class="message">it builds itself right?</span></div><div class="line" id="000905"><span class="nick" style="color:#8dd3c7"><a href="#000905" label="[00:09:05]">&lt;oriansj&gt;</a></span><span class="message">so it needs mescc-tools to build anything (including itself)</span></div><div class="line" id="000928"><span class="nick" style="color:#2e2a4a"><a href="#000928" label="[00:09:28]">&lt;vagrantc&gt;</a></span><span class="message">configure fails</span></div><div class="line" id="000939"><span class="nick" style="color:#2e2a4a"><a href="#000939" label="[00:09:39]">&lt;vagrantc&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1240056/">https://paste.debian.net/1240056/</a> </span></div><div class="line" id="000941"><span class="nick" style="color:#2e2a4a"><a href="#000941" label="[00:09:41]">&lt;vagrantc&gt;</a></span><span class="message">oops</span></div><div class="line" id="000952"><span class="nick" style="color:#2e2a4a"><a href="#000952" label="[00:09:52]">&lt;vagrantc&gt;</a></span><span class="message">Missing dependencies: blood-elf M1 hex2</span></div><div class="line" id="001015"><span class="nick" style="color:#2e2a4a"><a href="#001015" label="[00:10:15]">&lt;vagrantc&gt;</a></span><span class="message">probably the test suite will also need them</span></div><div class="line" id="001102"><span class="nick" style="color:#2e2a4a"><a href="#001102" label="[00:11:02]">&lt;vagrantc&gt;</a></span><span class="message">from my perspective, maybe there's some way to build it without, but ... it is clearly needed to build them using standard processes</span></div><div class="line" id="001135"><span class="nick" style="color:#8dd3c7"><a href="#001135" label="[00:11:35]">&lt;oriansj&gt;</a></span><span class="message">there is absolutely no way for mescc to successfully pass its tests without mescc-tools</span></div><div class="line" id="001137"><span class="nick" style="color:#6b8072"><a href="#001137" label="[00:11:37]">&lt;stikonas&gt;</a></span><span class="message">well, blood-elf, M1 and hex2 are needed for M2-Planet -&gt; mes build</span></div><div class="line" id="001154"><span class="nick" style="color:#6b8072"><a href="#001154" label="[00:11:54]">&lt;stikonas&gt;</a></span><span class="message">and also mescc uses it to build aything</span></div><div class="line" id="001214"><span class="nick" style="color:#8dd3c7"><a href="#001214" label="[00:12:14]">&lt;oriansj&gt;</a></span><span class="message">mescc-tools is a hard dependency for both M2-Planet and mescc</span></div><div class="line" id="001250"><span class="nick" style="color:#8dd3c7"><a href="#001250" label="[00:12:50]">&lt;oriansj&gt;</a></span><span class="message">M2-Planet can kinda work around alternates but mescc-tools are hard-coded in mescc</span></div><div class="line" id="001312"><span class="nick" style="color:#8dd3c7"><a href="#001312" label="[00:13:12]">&lt;oriansj&gt;</a></span><span class="message">and the posted error message is a straight hex2 error</span></div><div class="line" id="001419"><span class="nick" style="color:#8dd3c7"><a href="#001419" label="[00:14:19]">&lt;oriansj&gt;</a></span><span class="message">in that folder where it failed I would do grep -R cell_symbol_record_type and you'll find exactly what .o file contains the issue we can then trace</span></div><div class="line" id="001433"><span class="nick" style="color:#6b8072"><a href="#001433" label="[00:14:33]">&lt;stikonas&gt;</a></span><span class="message">is m2.c missing from that build line?</span></div><div class="line" id="001506"><span class="nick" style="color:#6b8072"><a href="#001506" label="[00:15:06]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/src/m2.c">https://git.savannah.gnu.org/cgit/mes.git/tree/src/m2.c</a> </span></div><div class="line" id="001531"><span class="nick" style="color:#6b8072"><a href="#001531" label="[00:15:31]">&lt;stikonas&gt;</a></span><span class="message">or maybe it's not necessary for mescc build</span></div><div class="line" id="002128"><span class="nick" style="color:#2e2a4a"><a href="#002128" label="[00:21:28]">&lt;vagrantc&gt;</a></span><span class="message">I think it's in mescc-lib ... these are the matching .o files in there <a rel="nofollow" href="https://paste.debian.net/1240058/">https://paste.debian.net/1240058/</a> </span></div><div class="line" id="002348"><span class="nick" style="color:#2e2a4a"><a href="#002348" label="[00:23:48]">&lt;vagrantc&gt;</a></span><span class="message">oh, there are also some .o files in the top-level directory that match ... but just as binaries</span></div><div class="line" id="002404"><span class="nick" style="color:#2e2a4a"><a href="#002404" label="[00:24:04]">&lt;vagrantc&gt;</a></span><span class="message">grep: ./builtins.o: binary file matches</span></div><div class="line" id="003332"><span class="nick" style="color:#8dd3c7"><a href="#003332" label="[00:33:32]">&lt;oriansj&gt;</a></span><span class="message">looking at your paste the conclusion is mescc failed to include any file where the label :cell_symbol_record_type is defined</span></div><div class="line" id="003356"><span class="nick" style="color:#8dd3c7"><a href="#003356" label="[00:33:56]">&lt;oriansj&gt;</a></span><span class="message">which looks like a mescc bug</span></div><div class="line" id="010040"><span class="nick" style="color:#6b8072"><a href="#010040" label="[01:00:40]">&lt;stikonas&gt;</a></span><span class="message">fossy: I've updated my PR, do you want to re-review it or should I push it?</span></div><div class="line" id="044614"><span class="nick" style="color:#80b1d3"><a href="#044614" label="[04:46:14]">&lt;littlebobeep&gt;</a></span><span class="message">oriansj: Can you explain a bit about what you were talking about a kernel built with M2-Planet?  Would this be used for a bare metal bootstrap with stage0?</span></div><div class="line" id="045943"><span class="nick" style="color:#6d2462"><a href="#045943" label="[04:59:43]">&lt;achaninja&gt;</a></span><span class="message">Does anyone know why live-bootstrap builds tcc twice?</span></div><div class="line" id="045950"><span class="nick" style="color:#6d2462"><a href="#045950" label="[04:59:50]">&lt;achaninja&gt;</a></span><span class="message">is the first one not complete enough?</span></div><div class="line" id="050018"><span class="nick" style="color:#6d2462"><a href="#050018" label="[05:00:18]">&lt;achaninja&gt;</a></span><span class="message">i.e. it builds patched 26 then  27</span></div><div class="line" id="065713"><span class="nick" style="color:#234e69"><a href="#065713" label="[06:57:13]">&lt;Hagfish&gt;</a></span><span class="message">achaninja: the answers might be here, if that's not where you're already looking: <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/blob/master/parts.rst#5tinycc-0926">https://github.com/stikonas/live-bootstrap/blob/master/parts.rst#5tinycc-0926</a> </span></div><div class="line" id="065727"><span class="nick" style="color:#234e69"><a href="#065727" label="[06:57:27]">&lt;Hagfish&gt;</a></span><span class="message">&quot;First, we compile janneke’s fork of tcc 0.9.26 using mescc, containing 27 patches to make it operate well in the bootstrap environment and make it compilable using mescc.&quot;</span></div><div class="line" id="065753"><span class="nick" style="color:#234e69"><a href="#065753" label="[06:57:53]">&lt;Hagfish&gt;</a></span><span class="message">i don't know if those patches could be ported forwards to 0.9.27</span></div><div class="line" id="065856"><span class="nick" style="color:#6d2462"><a href="#065856" label="[06:58:56]">&lt;achaninja&gt;</a></span><span class="message">yeah I also dunno if 0.9.27 has something particularly important</span></div><div class="line" id="065858"><span class="nick" style="color:#6d2462"><a href="#065858" label="[06:58:58]">&lt;achaninja&gt;</a></span><span class="message">like a bug fix</span></div><div class="line" id="065916"><span class="nick" style="color:#234e69"><a href="#065916" label="[06:59:16]">&lt;Hagfish&gt;</a></span><span class="message">oh, you're thinking the whole process could stick with .26?</span></div><div class="line" id="065942"><span class="nick" style="color:#234e69"><a href="#065942" label="[06:59:42]">&lt;Hagfish&gt;</a></span><span class="message">yeah, i don't know if anything later in the chain requires something .27 specific</span></div><div class="line" id="103300"><span class="nick" style="color:#6b8072"><a href="#103300" label="[10:33:00]">&lt;stikonas&gt;</a></span><span class="message">achaninja: tcc is rebuild multiple times because original is either buggy or missing features</span></div><div class="line" id="103321"><span class="nick" style="color:#6b8072"><a href="#103321" label="[10:33:21]">&lt;stikonas&gt;</a></span><span class="message">mescc-&gt;tcc 0.9.26 step involves building tcc 6 times</span></div><div class="line" id="103349"><span class="nick" style="color:#6b8072"><a href="#103349" label="[10:33:49]">&lt;stikonas&gt;</a></span><span class="message">then after musl live-bootstrap rebuilds tcc twice (second rebuild is much less buggy)</span></div><div class="line" id="103429"><span class="nick" style="color:#6b8072"><a href="#103429" label="[10:34:29]">&lt;stikonas&gt;</a></span><span class="message">anyway, you can always remove some step and see what breaks</span></div><div class="line" id="103558"><span class="nick" style="color:#6b8072"><a href="#103558" label="[10:35:58]">&lt;stikonas&gt;</a></span><span class="message">amd we definitely need 0.9.27 in the chain</span></div><div class="line" id="103610"><span class="nick" style="color:#6b8072"><a href="#103610" label="[10:36:10]">&lt;stikonas&gt;</a></span><span class="message">and fairly early</span></div><div class="line" id="103626"><span class="nick" style="color:#6b8072"><a href="#103626" label="[10:36:26]">&lt;stikonas&gt;</a></span><span class="message">neither gcc nor even musl (much earlier) can't be built with tcc 0.9.26</span></div><div class="line" id="124452"><span class="nick" style="color:#80b1d3"><a href="#124452" label="[12:44:52]">&lt;littlebobeep&gt;</a></span><span class="message">stikonas: wow that's complex... 6 recompilations of tcc?  How do we determine these are all reproducable?</span></div><div class="line" id="124513"><span class="nick" style="color:#6b8072"><a href="#124513" label="[12:45:13]">&lt;stikonas&gt;</a></span><span class="message">littlebobeep: everything in live-bootstrap is reproducible</span></div><div class="line" id="124525"><span class="nick" style="color:#6b8072"><a href="#124525" label="[12:45:25]">&lt;stikonas&gt;</a></span><span class="message">everything is checked against an earlier recorded hash</span></div><div class="line" id="124548"><span class="nick" style="color:#80b1d3"><a href="#124548" label="[12:45:48]">&lt;littlebobeep&gt;</a></span><span class="message">earlier recorded how?</span></div><div class="line" id="124601"><span class="nick" style="color:#6b8072"><a href="#124601" label="[12:46:01]">&lt;stikonas&gt;</a></span><span class="message">well, you run it once, record checksums and commit them to the repo</span></div><div class="line" id="124611"><span class="nick" style="color:#6b8072"><a href="#124611" label="[12:46:11]">&lt;stikonas&gt;</a></span><span class="message">those checksums are then checked when live-bootstrap runs</span></div><div class="line" id="124651"><span class="nick" style="color:#6b8072"><a href="#124651" label="[12:46:51]">&lt;stikonas&gt;</a></span><span class="message">most checksums are here: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/SHA256SUMS.pkgs">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/SHA256SUMS.pkgs</a>  but some early ones (before bash is built are in other files)</span></div><div class="line" id="124658"><span class="nick" style="color:#80b1d3"><a href="#124658" label="[12:46:58]">&lt;littlebobeep&gt;</a></span><span class="message">how do you checksum when you don't have a checksum utility compiled?</span></div><div class="line" id="124707"><span class="nick" style="color:#6b8072"><a href="#124707" label="[12:47:07]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/tcc-0.9.26/checksums">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/tcc-0.9.26/checksums</a> </span></div><div class="line" id="124725"><span class="nick" style="color:#6b8072"><a href="#124725" label="[12:47:25]">&lt;stikonas&gt;</a></span><span class="message">littlebobeep: stage0-posix already has sha256sum utility</span></div><div class="line" id="124732"><span class="nick" style="color:#6b8072"><a href="#124732" label="[12:47:32]">&lt;stikonas&gt;</a></span><span class="message">so that's not an issue for live-bootstrap</span></div><div class="line" id="124807"><span class="nick" style="color:#80b1d3"><a href="#124807" label="[12:48:07]">&lt;littlebobeep&gt;</a></span><span class="message">What is .links file?</span></div><div class="line" id="124840"><span class="nick" style="color:#80b1d3"><a href="#124840" label="[12:48:40]">&lt;littlebobeep&gt;</a></span><span class="message">But where did the sha256sum binary come from?</span></div><div class="line" id="124901"><span class="nick" style="color:#6b8072"><a href="#124901" label="[12:49:01]">&lt;stikonas&gt;</a></span><span class="message">.links is a list of symlinks that we create for that package, most are empty</span></div><div class="line" id="124910"><span class="nick" style="color:#80b1d3"><a href="#124910" label="[12:49:10]">&lt;littlebobeep&gt;</a></span><span class="message">and how do you do this for bare metal bootstrap?</span></div><div class="line" id="124923"><span class="nick" style="color:#6b8072"><a href="#124923" label="[12:49:23]">&lt;stikonas&gt;</a></span><span class="message">littlebobeep: we have a few, first one comes from stage0-posix, then later from coreutils</span></div><div class="line" id="124951"><span class="nick" style="color:#6b8072"><a href="#124951" label="[12:49:51]">&lt;stikonas&gt;</a></span><span class="message">you can write sha256sum for baremetal bootstrap too</span></div><div class="line" id="124954"><span class="nick" style="color:#80b1d3"><a href="#124954" label="[12:49:54]">&lt;littlebobeep&gt;</a></span><span class="message">when you say &quot;comes from stage0-posix&quot; what toolchain compiled this inital sha256sum and when is it first used?</span></div><div class="line" id="125001"><span class="nick" style="color:#6b8072"><a href="#125001" label="[12:50:01]">&lt;stikonas&gt;</a></span><span class="message">M2-Planet</span></div><div class="line" id="125023"><span class="nick" style="color:#6b8072"><a href="#125023" label="[12:50:23]">&lt;stikonas&gt;</a></span><span class="message">it's used at the end of stage0-posix to check all binaries of stage0-posix</span></div><div class="line" id="125103"><span class="nick" style="color:#6b8072"><a href="#125103" label="[12:51:03]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-x86/blob/f70bf49424a97e2ebe7457e59c8be1a8c770299e/kaem.run#L45">https://github.com/oriansj/stage0-posix-x86/blob/f70bf49424a97e2ebe7457e59c8be1a8c770299e/kaem.run#L45</a> </span></div><div class="line" id="125109"><span class="nick" style="color:#80b1d3"><a href="#125109" label="[12:51:09]">&lt;littlebobeep&gt;</a></span><span class="message">Well <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/blob/master/parts.rst">https://github.com/stikonas/live-bootstrap/blob/master/parts.rst</a>  indicated 14 things are built at least before sha256sum</span></div><div class="line" id="125122"><span class="nick" style="color:#6b8072"><a href="#125122" label="[12:51:22]">&lt;stikonas&gt;</a></span><span class="message">littlebobeep: that's sha256sum from coreutils</span></div><div class="line" id="125155"><span class="nick" style="color:#6b8072"><a href="#125155" label="[12:51:55]">&lt;stikonas&gt;</a></span><span class="message">sha256sum from stage0-posix is slightly more limited (supports up to 2MiB binaries) and slower</span></div><div class="line" id="125209"><span class="nick" style="color:#6b8072"><a href="#125209" label="[12:52:09]">&lt;stikonas&gt;</a></span><span class="message">littlebobeep: <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/blob/master/sha256sum.c">https://github.com/oriansj/mescc-tools-extra/blob/master/sha256sum.c</a> </span></div><div class="line" id="125234"><span class="nick" style="color:#80b1d3"><a href="#125234" label="[12:52:34]">&lt;littlebobeep&gt;</a></span><span class="message">No I am talking about the 14+ things before the sha256sum from mescc-tools</span></div><div class="line" id="125248"><span class="nick" style="color:#80b1d3"><a href="#125248" label="[12:52:48]">&lt;littlebobeep&gt;</a></span><span class="message">coreutils happens later</span></div><div class="line" id="125252"><span class="nick" style="color:#6b8072"><a href="#125252" label="[12:52:52]">&lt;stikonas&gt;</a></span><span class="message">well, we only check sha256sum after sha256sum is built</span></div><div class="line" id="125303"><span class="nick" style="color:#80b1d3"><a href="#125303" label="[12:53:03]">&lt;littlebobeep&gt;</a></span><span class="message">yes</span></div><div class="line" id="125318"><span class="nick" style="color:#6b8072"><a href="#125318" label="[12:53:18]">&lt;stikonas&gt;</a></span><span class="message">well, it's just a consistency check</span></div><div class="line" id="125413"><span class="nick" style="color:#6b8072"><a href="#125413" label="[12:54:13]">&lt;stikonas&gt;</a></span><span class="message">not really a proof</span></div><div class="line" id="125424"><span class="nick" style="color:#6b8072"><a href="#125424" label="[12:54:24]">&lt;stikonas&gt;</a></span><span class="message">you can't prove consistency from within the system, you need to do it externally</span></div><div class="line" id="125733"><span class="nick" style="color:#6b8072"><a href="#125733" label="[12:57:33]">&lt;stikonas&gt;</a></span><span class="message">to prove that sha256sum is not malicious you would have to check stage0-posix sourcecode as well as inspect bootstrap binaries</span></div><div class="line" id="132016"><span class="nick">***</span><span class="message notice">furrymcg1e is now known as furrymcgee</span></div><div class="line" id="143052"><span class="nick" style="color:#6c3d55"><a href="#143052" label="[14:30:52]">&lt;fossy&gt;</a></span><span class="message">stikonas: merged, what was the workaround? was it the removal of mes/m2.c?</span></div><div class="line" id="143110"><span class="nick" style="color:#6b8072"><a href="#143110" label="[14:31:10]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, I've readded mescc-&gt;mes step</span></div><div class="line" id="143140"><span class="nick" style="color:#6b8072"><a href="#143140" label="[14:31:40]">&lt;stikonas&gt;</a></span><span class="message">I guess it's less buggy than mes-m2 that was compiled with M2-Planet</span></div><div class="line" id="143212"><span class="nick" style="color:#6b8072"><a href="#143212" label="[14:32:12]">&lt;stikonas&gt;</a></span><span class="message">I removed m2.c just because it's not necessary when compiler is mescc</span></div><div class="line" id="143232"><span class="nick" style="color:#6c3d55"><a href="#143232" label="[14:32:32]">&lt;fossy&gt;</a></span><span class="message">oh, i see</span></div><div class="line" id="143237"><span class="nick" style="color:#6c3d55"><a href="#143237" label="[14:32:37]">&lt;fossy&gt;</a></span><span class="message">very odd though...</span></div><div class="line" id="143401"><span class="nick" style="color:#6b8072"><a href="#143401" label="[14:34:01]">&lt;stikonas&gt;</a></span><span class="message">yes, I don't see why your changes caused it</span></div><div class="line" id="143415"><span class="nick" style="color:#6b8072"><a href="#143415" label="[14:34:15]">&lt;stikonas&gt;</a></span><span class="message">but well, mes is faster and less buggy than mes-m2, so probably fine to build it</span></div><div class="line" id="143421"><span class="nick" style="color:#6b8072"><a href="#143421" label="[14:34:21]">&lt;stikonas&gt;</a></span><span class="message">though it takes a bit longer in total</span></div><div class="line" id="143437"><span class="nick" style="color:#6c3d55"><a href="#143437" label="[14:34:37]">&lt;fossy&gt;</a></span><span class="message">yeah, not the end of the world thoguh</span></div><div class="line" id="150748"><span class="nick" style="color:#d9d9d9"><a href="#150748" label="[15:07:48]">&lt;muurkha&gt;</a></span><span class="message">hmm, what was the first version of GCC that has parts written in C++?</span></div><div class="line" id="151018"><span class="nick" style="color:#6c3d55"><a href="#151018" label="[15:10:18]">&lt;fossy&gt;</a></span><span class="message">4.9.4 iirc</span></div><div class="line" id="151029"><span class="nick" style="color:#6c3d55"><a href="#151029" label="[15:10:29]">&lt;fossy&gt;</a></span><span class="message">or maybe that was the last one without</span></div><div class="line" id="151042"><span class="nick" style="color:#d9d9d9"><a href="#151042" label="[15:10:42]">&lt;muurkha&gt;</a></span><span class="message">I just found <a rel="nofollow" href="https://lwn.net/Articles/542457/">https://lwn.net/Articles/542457/</a> </span></div><div class="line" id="151051"><span class="nick" style="color:#d9d9d9"><a href="#151051" label="[15:10:51]">&lt;muurkha&gt;</a></span><span class="message">which suggests sometime in the 02010-02013 time period</span></div><div class="line" id="151238"><span class="nick" style="color:#6c3d55"><a href="#151238" label="[15:12:38]">&lt;fossy&gt;</a></span><span class="message">oriansj: i was trying to run stage0-posix on tilck (smaller linux-compatible-ish kernel) but stage0-posix binaries do not execute properly -- <a rel="nofollow" href="https://github.com/vvaltchev/tilck/blob/master/kernel/elf.c#L143">https://github.com/vvaltchev/tilck/blob/master/kernel/elf.c#L143</a>  they get caught by this trap. i'm not familiar enough with the elf format to understand this exactly; what is going on here, and how can we rectify them to make the two compatible?</span></div><div class="line" id="151855"><span class="nick" style="color:#6b8072"><a href="#151855" label="[15:18:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: all binaries or just hex binaries before blood-elf?</span></div><div class="line" id="153712"><span class="nick" style="color:#6c3d55"><a href="#153712" label="[15:37:12]">&lt;fossy&gt;</a></span><span class="message">stikonas: all binaries</span></div><div class="line" id="153728"><span class="nick" style="color:#6c3d55"><a href="#153728" label="[15:37:28]">&lt;fossy&gt;</a></span><span class="message">kaem-optional-seed didn't work so i tried final kaem from M2-Planet. same error</span></div><div class="line" id="153734"><span class="nick" style="color:#6b8072"><a href="#153734" label="[15:37:34]">&lt;stikonas&gt;</a></span><span class="message">and mescc binaries?</span></div><div class="line" id="153736"><span class="nick" style="color:#6b8072"><a href="#153736" label="[15:37:36]">&lt;stikonas&gt;</a></span><span class="message">tcc?</span></div><div class="line" id="153744"><span class="nick" style="color:#6c3d55"><a href="#153744" label="[15:37:44]">&lt;fossy&gt;</a></span><span class="message">haven't tried those yet, but tcc is said to work in the readme</span></div><div class="line" id="153806"><span class="nick" style="color:#6c3d55"><a href="#153806" label="[15:38:06]">&lt;fossy&gt;</a></span><span class="message">mescc uses M1/hex2 under the hood iirc, so i would imagine it has the same issues</span></div><div class="line" id="153814"><span class="nick" style="color:#6b8072"><a href="#153814" label="[15:38:14]">&lt;stikonas&gt;</a></span><span class="message">I suggest trying, so that we know exactly when it starts working</span></div><div class="line" id="153825"><span class="nick" style="color:#6b8072"><a href="#153825" label="[15:38:25]">&lt;stikonas&gt;</a></span><span class="message">well, it depends on what header hex2 attaches</span></div><div class="line" id="153940"><span class="nick" style="color:#6c3d55"><a href="#153940" label="[15:39:40]">&lt;fossy&gt;</a></span><span class="message">it seems to be some behaviour that is slightly out of spec but linux kernel does not care about</span></div><div class="line" id="153957"><span class="nick" style="color:#6c3d55"><a href="#153957" label="[15:39:57]">&lt;fossy&gt;</a></span><span class="message">or tilck requires behaviour subset of spec</span></div><div class="line" id="154455"><span class="nick" style="color:#6b8072"><a href="#154455" label="[15:44:55]">&lt;stikonas&gt;</a></span><span class="message">probably, but hard to say what exactly</span></div><div class="line" id="154509"><span class="nick" style="color:#6b8072"><a href="#154509" label="[15:45:09]">&lt;stikonas&gt;</a></span><span class="message">at least none of the binutils complain about that format eithre</span></div><div class="line" id="212845"><span class="nick" style="color:#8dd3c7"><a href="#212845" label="[21:28:45]">&lt;oriansj&gt;</a></span><span class="message">littlebobeep: yes building a kernel with bare-metal M2-Planet would be for solving the POSIX bootstrapping problem</span></div><div class="line" id="212919"><span class="nick" style="color:#8dd3c7"><a href="#212919" label="[21:29:19]">&lt;oriansj&gt;</a></span><span class="message">fossy: well fortunately it is easy to figure that out if you are willing to do some tests for me</span></div><div class="line" id="213419"><span class="nick" style="color:#8dd3c7"><a href="#213419" label="[21:34:19]">&lt;oriansj&gt;</a></span><span class="message">using the following hex2 file: <a rel="nofollow" href="https://paste.debian.net/1240127/">https://paste.debian.net/1240127/</a>  and build with the following command: hex2 --architecture x86 --little-endian -f foo --base-address 0x08048000 -o bar</span></div><div class="line" id="213459"><span class="nick" style="color:#8dd3c7"><a href="#213459" label="[21:34:59]">&lt;oriansj&gt;</a></span><span class="message">expected behavior is to return 42 and nothing else</span></div><div class="line" id="213640"><span class="nick" style="color:#8dd3c7"><a href="#213640" label="[21:36:40]">&lt;oriansj&gt;</a></span><span class="message">and perhaps have what compiler they do have running on that host build return 42 and share the xeh results of that file for us to figure out what possible differences there are</span></div><div class="line" id="222819"><span class="nick" style="color:#2e2a4a"><a href="#222819" label="[22:28:19]">&lt;vagrantc&gt;</a></span><span class="message">janneke: trying out your mes patch, thanks!</span></div><div class="line" id="225717"><span class="nick" style="color:#bc80bd"><a href="#225717" label="[22:57:17]">&lt;mihi&gt;</a></span><span class="message">fossy: I would try to replace the ph_vadddr in line 35 of oriansj's paste by 00 10 00 00 (4096 in little endian) and try if it helps. If not, probably you need to pad the section (i. e the part from ELF_base to ELF_end) so that it is 4KB in size.</span></div><div class="line" id="225918"><span class="nick" style="color:#bc80bd"><a href="#225918" label="[22:59:18]">&lt;mihi&gt;</a></span><span class="message">btw janneke, oriansj, congrats for the new releases :)</span></div><div class="line" id="230217"><span class="nick" style="color:#bc80bd"><a href="#230217" label="[23:02:17]">&lt;mihi&gt;</a></span><span class="message">As far as I know, M1 does not support anything like the DUP directive, so if the sections really need to be padded to multiples of 4KB, probably a postprocessing tool similar to blood-elf would be required.</span></div><div class="line" id="230344"><span class="nick" style="color:#2e2a4a"><a href="#230344" label="[23:03:44]">&lt;vagrantc&gt;</a></span><span class="message">janneke: and the patch works for me! yay!</span></div><div class="line" id="230346"><span class="nick" style="color:#3c5b35"><a href="#230346" label="[23:03:46]">*</a></span><span class="message">vagrantc dances</span></div><div class="line" id="231156"><span class="nick" style="color:#af8d2f"><a href="#231156" label="[23:11:56]">&lt;janneke&gt;</a></span><span class="message">vagrantc: good</span></div><div class="line" id="231209"><span class="nick" style="color:#af8d2f"><a href="#231209" label="[23:12:09]">&lt;janneke&gt;</a></span><span class="message">it's kind-of ugly, but i wanted a simple fix</span></div><div class="line" id="231223"><span class="nick" style="color:#af8d2f"><a href="#231223" label="[23:12:23]">&lt;janneke&gt;</a></span><span class="message">mihi: thanks!</span></div><div class="line" id="231303"><span class="nick" style="color:#af8d2f"><a href="#231303" label="[23:13:03]">&lt;janneke&gt;</a></span><span class="message">vagrantc: note that on x86, gcc is optional if you have m2-planet ;)</span></div><div class="line" id="231326"><span class="nick" style="color:#2e2a4a"><a href="#231326" label="[23:13:26]">&lt;vagrantc&gt;</a></span><span class="message">janneke: don't have m2-planet in Debian yet, and got a little lost trying to figure out how to actually package it :)</span></div><div class="line" id="231353"><span class="nick" style="color:#2e2a4a"><a href="#231353" label="[23:13:53]">&lt;vagrantc&gt;</a></span><span class="message">and, well, gcc is assumed to be available for Debian packages...</span></div><div class="line" id="231426"><span class="nick" style="color:#2e2a4a"><a href="#231426" label="[23:14:26]">&lt;vagrantc&gt;</a></span><span class="message">so i can't not have it, more-or-less ... someday, in the distant future, perhaps coding from another star system, debian might actually be bootstrappable and that assumption could be dropped :)</span></div><div class="line" id="231513"><span class="nick" style="color:#2e2a4a"><a href="#231513" label="[23:15:13]">&lt;vagrantc&gt;</a></span><span class="message">this is where i'm &quot;jealous&quot; of guix :)</span></div><div class="line" id="231828"><span class="nick" style="color:#2e2a4a"><a href="#231828" label="[23:18:28]">&lt;vagrantc&gt;</a></span><span class="message">even though for a long time guix had a largish bootstrap seed, it actually kept track of what the exact seed was, and could systematically work to replace it piece by piece</span></div><div class="line" id="234614"><span class="nick" style="color:#6c3d55"><a href="#234614" label="[23:46:14]">&lt;fossy&gt;</a></span><span class="message">oriansj, mihi: thanks for the pointers, i changed ph_align in oriansj's paste to 00 10 00 00 and that made that run</span></div><div class="line" id="234616"><span class="nick" style="color:#389600"><a href="#234616" label="[23:46:16]">&lt;bauen1&gt;</a></span><span class="message">vagrantc: i've played a bit with compiling dpkg, and i will probably try to modify the &quot;core&quot; (build-essential, Essential: yes) packages to form a non cyclic dependency path based on some packages derived from live-bootstrap</span></div><div class="line" id="234626"><span class="nick" style="color:#6c3d55"><a href="#234626" label="[23:46:26]">&lt;fossy&gt;</a></span><span class="message">now, let's try kaem and hex0</span></div><div class="line" id="234633"><span class="nick" style="color:#389600"><a href="#234633" label="[23:46:33]">&lt;bauen1&gt;</a></span><span class="message">as in compiling dpkg, debhelper from live-bootstrap</span></div><div class="line" id="234646"><span class="nick" style="color:#2e2a4a"><a href="#234646" label="[23:46:46]">&lt;vagrantc&gt;</a></span><span class="message">bauen1: ah, very interested</span></div><div class="line" id="234732"><span class="nick" style="color:#2e2a4a"><a href="#234732" label="[23:47:32]">&lt;vagrantc&gt;</a></span><span class="message">though i was more talking about moving debian to actually someday bootstrap itself from a known set of packages</span></div><div class="line" id="234748"><span class="nick" style="color:#2e2a4a"><a href="#234748" label="[23:47:48]">&lt;vagrantc&gt;</a></span><span class="message">but very interesting to take little steps first to get there :)</span></div><div class="line" id="234808"><span class="nick" style="color:#389600"><a href="#234808" label="[23:48:08]">&lt;bauen1&gt;</a></span><span class="message">vagrantc: there is actually little problem compiling dpkg, debhelper, dh-autoreconf, dh-strip-nondeterminisim, tar</span></div><div class="line" id="234810"><span class="nick" style="color:#2e2a4a"><a href="#234810" label="[23:48:10]">&lt;vagrantc&gt;</a></span><span class="message">ideally a source-only bootstrap...</span></div><div class="line" id="234830"><span class="nick" style="color:#2e2a4a"><a href="#234830" label="[23:48:30]">&lt;vagrantc&gt;</a></span><span class="message">but, debian. moves. slowly.</span></div><div class="line" id="234929"><span class="nick" style="color:#bc80bd"><a href="#234929" label="[23:49:29]">&lt;mihi&gt;</a></span><span class="message">Only thing that grows fast in Debian is SCC #1 on <a rel="nofollow" href="https://bootstrap.debian.net/botch-native/amd64/stats.html">https://bootstrap.debian.net/botch-native/amd64/stats.html</a>  (already 2686 source packages) :P</span></div><div class="line" id="235040"><span class="nick" style="color:#bc80bd"><a href="#235040" label="[23:50:40]">&lt;mihi&gt;</a></span><span class="message">but yes, I agree, better to start somewhere simple instead of looking at the big problems first...</span></div><div class="line" id="235421"><span class="nick" style="color:#af8d2f"><a href="#235421" label="[23:54:21]">&lt;janneke&gt;</a></span><span class="message">vagrantc: no worries...but i figured it was nice to know</span></div><div class="line" id="235515"><span class="nick" style="color:#2e2a4a"><a href="#235515" label="[23:55:15]">&lt;vagrantc&gt;</a></span><span class="message">janneke: indeed, it's great to have multiple options :)</span></div><br /></div></body></html>