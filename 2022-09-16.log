<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-09-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000104"><span class="nick" style="color:#389600"><a href="#000104" label="[00:01:04]">&lt;oriansj&gt;</a></span><span class="message">I guess I could make M2libc more standards compatible by having errno and actually setting it</span></div><div class="line" id="000229"><span class="nick" style="color:#8dd3c7"><a href="#000229" label="[00:02:29]">&lt;muurkha&gt;</a></span><span class="message">errno can be pretty handy for debugging</span></div><div class="line" id="000301"><span class="nick" style="color:#2e2a4a"><a href="#000301" label="[00:03:01]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: it would be easier to just map any negative eax to -1 in the assembly</span></div><div class="line" id="000325"><span class="nick" style="color:#2e2a4a"><a href="#000325" label="[00:03:25]">&lt;rickmasters&gt;</a></span><span class="message">i'm not against errno but it appears we've been working without it</span></div><div class="line" id="000412"><span class="nick" style="color:#6b8072"><a href="#000412" label="[00:04:12]">&lt;stikonas&gt;</a></span><span class="message">but it we do it in C code then it works for all arches rather than having to code it n times</span></div><div class="line" id="000439"><span class="nick" style="color:#389600"><a href="#000439" label="[00:04:39]">&lt;oriansj&gt;</a></span><span class="message">well right now we don't have a fcntl.c</span></div><div class="line" id="000506"><span class="nick" style="color:#389600"><a href="#000506" label="[00:05:06]">&lt;oriansj&gt;</a></span><span class="message">and fcntl.h just loads the $arch/linux/fcntl.c</span></div><div class="line" id="000553"><span class="nick" style="color:#6b8072"><a href="#000553" label="[00:05:53]">&lt;stikonas&gt;</a></span><span class="message">and I'm still busy updating kaem-minimal for uefi...</span></div><div class="line" id="000553"><span class="nick" style="color:#2e2a4a"><a href="#000553" label="[00:05:53]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: the implementations of open are all arch-specific right now</span></div><div class="line" id="000555"><span class="nick" style="color:#389600"><a href="#000555" label="[00:05:55]">&lt;oriansj&gt;</a></span><span class="message">so if I just make a fcntl.c, I can do open in the .c and the $arch/linux/fcntl.c can be converted to using _open</span></div><div class="line" id="000608"><span class="nick" style="color:#6b8072"><a href="#000608" label="[00:06:08]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: oh ok</span></div><div class="line" id="000734"><span class="nick" style="color:#389600"><a href="#000734" label="[00:07:34]">&lt;oriansj&gt;</a></span><span class="message">yeah, $arch/linux/fcntl.c is just basically a collection of asm() blocks inside of functions with the desired names</span></div><div class="line" id="000816"><span class="nick" style="color:#2e2a4a"><a href="#000816" label="[00:08:16]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: integrating open with C in a arch independent way exceeds my knowledge</span></div><div class="line" id="000838"><span class="nick" style="color:#389600"><a href="#000838" label="[00:08:38]">&lt;oriansj&gt;</a></span><span class="message">I can handle that</span></div><div class="line" id="001222"><span class="nick" style="color:#389600"><a href="#001222" label="[00:12:22]">&lt;oriansj&gt;</a></span><span class="message">have to change a couple M2-Planet -f bits but it'll work without much change</span></div><div class="line" id="001854"><span class="nick" style="color:#2e2a4a"><a href="#001854" label="[00:18:54]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: so would you make an arch independent open that calls arch-specific _open and then handles return values?</span></div><div class="line" id="002226"><span class="nick" style="color:#389600"><a href="#002226" label="[00:22:26]">&lt;oriansj&gt;</a></span><span class="message">yes and sets a global errno variable</span></div><div class="line" id="002430"><span class="nick" style="color:#389600"><a href="#002430" label="[00:24:30]">&lt;oriansj&gt;</a></span><span class="message">which I guess I can define in the fcntl.c file until we plan on doing a more proper errno.h library</span></div><div class="line" id="002918"><span class="nick" style="color:#8dd3c7"><a href="#002918" label="[00:29:18]">&lt;muurkha&gt;</a></span><span class="message">IIRC the Linux syscall interface pretty much works that way too; system calls return negative (negated) errno values on error, and libc takes care of testing that and storing the (absolute) error number into (typically thread-local) errno</span></div><div class="line" id="010427"><span class="nick" style="color:#389600"><a href="#010427" label="[01:04:27]">&lt;oriansj&gt;</a></span><span class="message">and M2libc updated</span></div><div class="line" id="010936"><span class="nick" style="color:#2e2a4a"><a href="#010936" label="[01:09:36]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: thanks!</span></div><div class="line" id="011200"><span class="nick" style="color:#389600"><a href="#011200" label="[01:12:00]">&lt;oriansj&gt;</a></span><span class="message">(i'll be updating stage0-posix shortly)</span></div><div class="line" id="011304"><span class="nick" style="color:#2e2a4a"><a href="#011304" label="[01:13:04]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: do you need to remove open from &lt;arch&gt;/linux/boostrap.c?</span></div><div class="line" id="011537"><span class="nick" style="color:#389600"><a href="#011537" label="[01:15:37]">&lt;oriansj&gt;</a></span><span class="message">I converted it to _open</span></div><div class="line" id="011754"><span class="nick" style="color:#2e2a4a"><a href="#011754" label="[01:17:54]">&lt;rickmasters&gt;</a></span><span class="message">yes, but open is now in M2libc/fcntl.c and also still in &lt;arch&gt;/linux/bootstrap.c</span></div><div class="line" id="011854"><span class="nick" style="color:#389600"><a href="#011854" label="[01:18:54]">&lt;oriansj&gt;</a></span><span class="message">one never uses fcntl.c and &lt;arch&gt;/linux/bootstrap.c at the same time</span></div><div class="line" id="011915"><span class="nick" style="color:#389600"><a href="#011915" label="[01:19:15]">&lt;oriansj&gt;</a></span><span class="message">as it is to solve the lack of octal support in cc_*</span></div><div class="line" id="012627"><span class="nick" style="color:#2e2a4a"><a href="#012627" label="[01:26:27]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: ok</span></div><div class="line" id="012747"><span class="nick" style="color:#2e2a4a"><a href="#012747" label="[01:27:47]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: live-bootstrap errors out on automake-1.11.2: configure: error: Autoconf 2.62 or better is required.</span></div><div class="line" id="013250"><span class="nick" style="color:#6b8072"><a href="#013250" label="[01:32:50]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: that might be fixed by updating submodules</span></div><div class="line" id="013333"><span class="nick" style="color:#6b8072"><a href="#013333" label="[01:33:33]">&lt;stikonas&gt;</a></span><span class="message">a few months ago I've reworked autotools, so now they are always versioned</span></div><div class="line" id="013414"><span class="nick" style="color:#6b8072"><a href="#013414" label="[01:34:14]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: I assume this is with linux and not builder-hex0</span></div><div class="line" id="013424"><span class="nick" style="color:#2e2a4a"><a href="#013424" label="[01:34:24]">&lt;rickmasters&gt;</a></span><span class="message">I had done git submodule update --init --recursive, right after clone</span></div><div class="line" id="013424"><span class="nick" style="color:#6b8072"><a href="#013424" label="[01:34:24]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="013424"><span class="nick" style="color:#2e2a4a"><a href="#013424" label="[01:34:24]">&lt;rickmasters&gt;</a></span><span class="message">yes linux</span></div><div class="line" id="013435"><span class="nick" style="color:#6b8072"><a href="#013435" label="[01:34:35]">&lt;stikonas&gt;</a></span><span class="message">maybe some race condition</span></div><div class="line" id="013524"><span class="nick" style="color:#6b8072"><a href="#013524" label="[01:35:24]">&lt;stikonas&gt;</a></span><span class="message">automake 1.11.2 is definitely built after autoconf 2.64</span></div><div class="line" id="013604"><span class="nick" style="color:#2e2a4a"><a href="#013604" label="[01:36:04]">&lt;rickmasters&gt;</a></span><span class="message">i'm running from a fork from today, i'll try the main repo. will take a while...</span></div><div class="line" id="013703"><span class="nick" style="color:#6b8072"><a href="#013703" label="[01:37:03]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: any idea which step?</span></div><div class="line" id="013706"><span class="nick" style="color:#6b8072"><a href="#013706" label="[01:37:06]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysc/automake-1.11.2/automake-1.11.2.sh">https://github.com/fosslinux/live-bootstrap/blob/master/sysc/automake-1.11.2/automake-1.11.2.sh</a> </span></div><div class="line" id="013709"><span class="nick" style="color:#6b8072"><a href="#013709" label="[01:37:09]">&lt;stikonas&gt;</a></span><span class="message">is it main configure?</span></div><div class="line" id="013719"><span class="nick" style="color:#6b8072"><a href="#013719" label="[01:37:19]">&lt;stikonas&gt;</a></span><span class="message">sometimes make step also reruns configure</span></div><div class="line" id="013834"><span class="nick" style="color:#2e2a4a"><a href="#013834" label="[01:38:34]">&lt;rickmasters&gt;</a></span><span class="message">i think its the second configure</span></div><div class="line" id="013842"><span class="nick" style="color:#2e2a4a"><a href="#013842" label="[01:38:42]">&lt;rickmasters&gt;</a></span><span class="message">its ten checks after: running CONFIG_SHELL=/bin/sh /bin/sh ./configure --prefix=/usr --no-create --no-recursion</span></div><div class="line" id="013935"><span class="nick" style="color:#6b8072"><a href="#013935" label="[01:39:35]">&lt;stikonas&gt;</a></span><span class="message">well, I've just successfully finished running live-bootstrap</span></div><div class="line" id="013947"><span class="nick" style="color:#6b8072"><a href="#013947" label="[01:39:47]">&lt;stikonas&gt;</a></span><span class="message">though in ./rootfs.py -bw mode (rootless)</span></div><div class="line" id="014150"><span class="nick" style="color:#2e2a4a"><a href="#014150" label="[01:41:50]">&lt;rickmasters&gt;</a></span><span class="message">it's strange, it appears it is actually running autoconf-2.64</span></div><div class="line" id="014208"><span class="nick" style="color:#2e2a4a"><a href="#014208" label="[01:42:08]">&lt;rickmasters&gt;</a></span><span class="message">automake-1.11.2: compiling source.</span></div><div class="line" id="014210"><span class="nick" style="color:#2e2a4a"><a href="#014210" label="[01:42:10]">&lt;rickmasters&gt;</a></span><span class="message">CDPATH=&quot;${ZSH_VERSION+.}:&quot; &amp;&amp; cd . &amp;&amp; autoconf-2.64</span></div><div class="line" id="014232"><span class="nick" style="color:#2e2a4a"><a href="#014232" label="[01:42:32]">&lt;rickmasters&gt;</a></span><span class="message">then: /bin/sh ./config.status --recheck</span></div><div class="line" id="014312"><span class="nick" style="color:#2e2a4a"><a href="#014312" label="[01:43:12]">&lt;rickmasters&gt;</a></span><span class="message">running CONFIG_SHELL=/bin/sh /bin/sh ./configure --prefix=/usr --no-create --no-recursion</span></div><div class="line" id="014624"><span class="nick" style="color:#6b8072"><a href="#014624" label="[01:46:24]">&lt;stikonas&gt;</a></span><span class="message">hmm, if you are still in that system</span></div><div class="line" id="014641"><span class="nick" style="color:#6b8072"><a href="#014641" label="[01:46:41]">&lt;stikonas&gt;</a></span><span class="message">you can try to run that make command and see if it is reproducible</span></div><div class="line" id="014744"><span class="nick" style="color:#2e2a4a"><a href="#014744" label="[01:47:44]">&lt;rickmasters&gt;</a></span><span class="message">sorry, I already restarted it but I'll check that when I come back from dinner</span></div><div class="line" id="023444"><span class="nick" style="color:#389600"><a href="#023444" label="[02:34:44]">&lt;oriansj&gt;</a></span><span class="message">wow, #warning support wasn't commited yet &gt;.&lt;</span></div><div class="line" id="023501"><span class="nick" style="color:#389600"><a href="#023501" label="[02:35:01]">&lt;oriansj&gt;</a></span><span class="message">well free C features today too I guess</span></div><div class="line" id="032117"><span class="nick" style="color:#389600"><a href="#032117" label="[03:21:17]">&lt;oriansj&gt;</a></span><span class="message">well looks like <a rel="nofollow" href="https://savannah.gnu.org/">https://savannah.gnu.org/</a>  is down</span></div><div class="line" id="032228"><span class="nick" style="color:#6d2462"><a href="#032228" label="[03:22:28]">&lt;pabs3&gt;</a></span><span class="message">wget eventually connects, so probably just loaded</span></div><div class="line" id="032303"><span class="nick" style="color:#389600"><a href="#032303" label="[03:23:03]">&lt;oriansj&gt;</a></span><span class="message">git however is timing out</span></div><div class="line" id="032342"><span class="nick" style="color:#234e69"><a href="#032342" label="[03:23:42]">*</a></span><span class="message">pabs3 poked on #savannah</span></div><div class="line" id="035535"><span class="nick" style="color:#2e2a4a"><a href="#035535" label="[03:55:35]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: same error on new build and running make reproduces it</span></div><div class="line" id="040046"><span class="nick" style="color:#2e2a4a"><a href="#040046" label="[04:00:46]">&lt;rickmasters&gt;</a></span><span class="message">autoconf-2.64 exists but running autoconf is command not found</span></div><div class="line" id="042737"><span class="nick" style="color:#6c3d55"><a href="#042737" label="[04:27:37]">&lt;fossy&gt;</a></span><span class="message">hmm, i wonder if we could drop /usr/lib/musl entirely, i think the original reasoning was seperation from mes libc, but it doesn't really matter since we compile everything statically, and by the time anyone actually cares about there being junk in /usr/lib, it's all gone..</span></div><div class="line" id="075208"><span class="nick" style="color:#d9d9d9"><a href="#075208" label="[07:52:08]">&lt;doras&gt;</a></span><span class="message">fossy: I'm actually working on a few PRs that will end in using /usr/lib/musl/i386-linux-musl.</span></div><div class="line" id="075320"><span class="nick" style="color:#d9d9d9"><a href="#075320" label="[07:53:20]">&lt;doras&gt;</a></span><span class="message">Regardless of the functional reason for this (some projects like cpython expect libraries to be in either `/lib` or `/lib/&lt;triplet&gt;`), I personally like the explicit nature of this naming convention.</span></div><div class="line" id="085245"><span class="nick" style="color:#d9d9d9"><a href="#085245" label="[08:52:45]">&lt;doras&gt;</a></span><span class="message">stikonas, rickmasters: there's some sort of issue (race condition?) in live-bootstrap at the moment when building automake-1.11.2. I get the failure you mentioned as well around ~30% of the time in the bwrap bootstrap mode, and around 5% of the times in the qemu bootstrap mode.</span></div><div class="line" id="085302"><span class="nick" style="color:#d9d9d9"><a href="#085302" label="[08:53:02]">&lt;doras&gt;</a></span><span class="message">I haven't got around looking at what's causing it, but it's indeed quite annoying.</span></div><div class="line" id="085558"><span class="nick" style="color:#d9d9d9"><a href="#085558" label="[08:55:58]">&lt;doras&gt;</a></span><span class="message">The issue seems to start with &quot;./config.status --recheck&quot; being triggered during the compilation. For some reason it doesn't always occur.</span></div><div class="line" id="085843"><span class="nick" style="color:#d9d9d9"><a href="#085843" label="[08:58:43]">&lt;doras&gt;</a></span><span class="message">For reference, this is how a successful compilation starts: <a rel="nofollow" href="https://gitlab.gnome.org/-/snippets/4155/raw/main/automake-1.11.2-build.log">https://gitlab.gnome.org/-/snippets/4155/raw/main/automake-1.11.2-build.log</a> </span></div><div class="line" id="085914"><span class="nick" style="color:#d9d9d9"><a href="#085914" label="[08:59:14]">&lt;doras&gt;</a></span><span class="message">No &quot;CDPATH=&quot;${ZSH_VERSION+.}:&quot; &amp;&amp; cd . &amp;&amp; autoconf-2.64&quot; nor &quot;./config.status --recheck&quot;.</span></div><div class="line" id="090805"><span class="nick" style="color:#d9d9d9"><a href="#090805" label="[09:08:05]">&lt;doras&gt;</a></span><span class="message">I updated the snippet to include the entire build output.</span></div><div class="line" id="092704"><span class="nick" style="color:#d9d9d9"><a href="#092704" label="[09:27:04]">&lt;doras&gt;</a></span><span class="message">stikonas: unsurprisingly, not exporting the variables did result in some package hash changes, and also in a removal of at least one workaround we previously needed.</span></div><div class="line" id="092828"><span class="nick" style="color:#d9d9d9"><a href="#092828" label="[09:28:28]">&lt;doras&gt;</a></span><span class="message">I'll need to run diffoscope to figure out what changed exactly and whether any of these changes are undesirable.</span></div><div class="line" id="100251"><span class="nick" style="color:#2e2a4a"><a href="#100251" label="[10:02:51]">&lt;rickmasters&gt;</a></span><span class="message">doras: thanks, that's very helpful info</span></div><div class="line" id="103254"><span class="nick" style="color:#6c3d55"><a href="#103254" label="[10:32:54]">&lt;fossy&gt;</a></span><span class="message">doras: i like the triplet, i think, however i think the /musl is unnessecarily descriptive. there isn't anything to really make explicit and it's non-standard</span></div><div class="line" id="103531"><span class="nick" style="color:#6c3d55"><a href="#103531" label="[10:35:31]">&lt;fossy&gt;</a></span><span class="message">doras, rickmasters: do either of you have a log of a failed automake 1.11.2 build? i have never seen this issue</span></div><div class="line" id="104508"><span class="nick" style="color:#bc80bd"><a href="#104508" label="[10:45:08]">&lt;stikonas[m]&gt;</a></span><span class="message">I have not seen it either</span></div><div class="line" id="113529"><span class="nick" style="color:#d9d9d9"><a href="#113529" label="[11:35:29]">&lt;doras&gt;</a></span><span class="message">fossy: sorry, I mistyped above. I meant that I'm working towards having `/usr/lib/i386-linux-musl`.</span></div><div class="line" id="113630"><span class="nick" style="color:#d9d9d9"><a href="#113630" label="[11:36:30]">&lt;doras&gt;</a></span><span class="message">fossy: I bet I'll see this failure soon enough. I'll share the log when I do.</span></div><div class="line" id="120129"><span class="nick" style="color:#d9d9d9"><a href="#120129" label="[12:01:29]">&lt;doras&gt;</a></span><span class="message">stikonas: removing the environment variable export seems to be a net win. It solved a few issues and exposed a few others.</span></div><div class="line" id="120152"><span class="nick" style="color:#6b8072"><a href="#120152" label="[12:01:52]">&lt;stikonas&gt;</a></span><span class="message">doras: ok, that's good</span></div><div class="line" id="120208"><span class="nick" style="color:#6b8072"><a href="#120208" label="[12:02:08]">&lt;stikonas&gt;</a></span><span class="message">what are the solved issues?</span></div><div class="line" id="120417"><span class="nick" style="color:#d9d9d9"><a href="#120417" label="[12:04:17]">&lt;doras&gt;</a></span><span class="message">stikonas: it removed a bunch of files that we currently package that were never supposed to be installed/packaged. Build time files.</span></div><div class="line" id="120435"><span class="nick" style="color:#6b8072"><a href="#120435" label="[12:04:35]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="120439"><span class="nick" style="color:#d9d9d9"><a href="#120439" label="[12:04:39]">&lt;doras&gt;</a></span><span class="message">And allowed to remove workarounds that we had to delete some of those in some packages.</span></div><div class="line" id="120549"><span class="nick" style="color:#6b8072"><a href="#120549" label="[12:05:49]">&lt;stikonas&gt;</a></span><span class="message">yeah, I remember we occasionally had some weirdness with that</span></div><div class="line" id="120613"><span class="nick" style="color:#d9d9d9"><a href="#120613" label="[12:06:13]">&lt;doras&gt;</a></span><span class="message">I bet there are more workarounds that I didn't find that are no longer necessary.</span></div><div class="line" id="135751"><span class="nick" style="color:#6c3d55"><a href="#135751" label="[13:57:51]">&lt;fossy&gt;</a></span><span class="message">doras: oh, that makes much more sense! sounds good</span></div><div class="line" id="144515"><span class="nick" style="color:#6b8072"><a href="#144515" label="[14:45:15]">&lt;stikonas&gt;</a></span><span class="message">ran automake 1.11.2 a few times, still no error...</span></div><div class="line" id="144540"><span class="nick" style="color:#6b8072"><a href="#144540" label="[14:45:40]">&lt;stikonas&gt;</a></span><span class="message">I think people who can reproduce it (so not fossy or me) will have easier time debugging and fixing it</span></div><div class="line" id="145353"><span class="nick" style="color:#3c5b35"><a href="#145353" label="[14:53:53]">&lt;Hagfish&gt;</a></span><span class="message">thanks for your dedication.  non-reproducible bugs are maybe even worse than non-reproducible builds :)</span></div><div class="line" id="145734"><span class="nick" style="color:#6b8072"><a href="#145734" label="[14:57:34]">&lt;stikonas&gt;</a></span><span class="message">oh they are not that uncommon</span></div><div class="line" id="145740"><span class="nick" style="color:#6b8072"><a href="#145740" label="[14:57:40]">&lt;stikonas&gt;</a></span><span class="message">we had plenty of them in live-bootstrap</span></div><div class="line" id="145753"><span class="nick" style="color:#6b8072"><a href="#145753" label="[14:57:53]">&lt;stikonas&gt;</a></span><span class="message">sometimes they were indicator of pregenerated files</span></div><div class="line" id="150608"><span class="nick" style="color:#3c5b35"><a href="#150608" label="[15:06:08]">&lt;Hagfish&gt;</a></span><span class="message">oh, if they lead to discovering pregenerated files then maybe we can forgive such bugs</span></div><div class="line" id="154119"><span class="nick" style="color:#2e2a4a"><a href="#154119" label="[15:41:19]">&lt;rickmasters&gt;</a></span><span class="message">fossy, stikonas: Log of the automake build failure: <a rel="nofollow" href="https://gist.github.com/rick-masters/49c2be35a2165634698a50ee65d4ed6a#file-automake-log">https://gist.github.com/rick-masters/49c2be35a2165634698a50ee65d4ed6a#file-automake-log</a> </span></div><div class="line" id="154619"><span class="nick" style="color:#6b8072"><a href="#154619" label="[15:46:19]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: try to run make again there, see if it's not in bad state</span></div><div class="line" id="154628"><span class="nick" style="color:#6b8072"><a href="#154628" label="[15:46:28]">&lt;stikonas&gt;</a></span><span class="message">and reproducible</span></div><div class="line" id="154710"><span class="nick" style="color:#6b8072"><a href="#154710" label="[15:47:10]">&lt;stikonas&gt;</a></span><span class="message">if it is, then see if adding AUTOCONF=autoconf-2.64 helps</span></div><div class="line" id="160356"><span class="nick" style="color:#2e2a4a"><a href="#160356" label="[16:03:56]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: running make again fails with the same output, starting with /bin/sh ./config.status --recheck</span></div><div class="line" id="160543"><span class="nick" style="color:#2e2a4a"><a href="#160543" label="[16:05:43]">&lt;rickmasters&gt;</a></span><span class="message">running AUTOCONF=autoconf-2.64 make fails later with a complaint about makeinfo: command not found</span></div><div class="line" id="161353"><span class="nick" style="color:#d9d9d9"><a href="#161353" label="[16:13:53]">&lt;doras&gt;</a></span><span class="message">rickmasters: the last one is expected. Use &quot;MAKEINFO=true&quot; too.</span></div><div class="line" id="161429"><span class="nick" style="color:#d9d9d9"><a href="#161429" label="[16:14:29]">&lt;doras&gt;</a></span><span class="message">(as done in sysc/automake-1.11.2/automake-1.11.2.sh)</span></div><div class="line" id="161547"><span class="nick" style="color:#2e2a4a"><a href="#161547" label="[16:15:47]">&lt;rickmasters&gt;</a></span><span class="message">yeah, I tried that already but unfortunately my build is in a strange state now</span></div><div class="line" id="161651"><span class="nick" style="color:#2e2a4a"><a href="#161651" label="[16:16:51]">&lt;rickmasters&gt;</a></span><span class="message">i saved the build directory with tar so I could try more aggressive commands, but when I restored it, it wasn't restored to the same state</span></div><div class="line" id="161745"><span class="nick" style="color:#2e2a4a"><a href="#161745" label="[16:17:45]">&lt;rickmasters&gt;</a></span><span class="message">seems like tar changed something but I'm not sure, I may have to start over</span></div><div class="line" id="161843"><span class="nick" style="color:#2e2a4a"><a href="#161843" label="[16:18:43]">&lt;rickmasters&gt;</a></span><span class="message">looks like tar did not save the file aclocal, I think</span></div><div class="line" id="170057"><span class="nick" style="color:#6b8072"><a href="#170057" label="[17:00:57]">&lt;stikonas&gt;</a></span><span class="message">anyway, it looks like adding AUTOCONF=autoconf-2.64 before make should fix the problem</span></div><div class="line" id="171020"><span class="nick" style="color:#2e2a4a"><a href="#171020" label="[17:10:20]">&lt;rickmasters&gt;</a></span><span class="message">I started over and it failed again. I'm 3 for 3. Takes 43 minutes.</span></div><div class="line" id="171215"><span class="nick" style="color:#d9d9d9"><a href="#171215" label="[17:12:15]">&lt;doras&gt;</a></span><span class="message">I only ever had it fail two times in a row. I guess your system reproduces it even more often than mine :)</span></div><div class="line" id="171217"><span class="nick" style="color:#2e2a4a"><a href="#171217" label="[17:12:17]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: so, are we thinking this is the command to restart?: AUTOCONF=autoconf-2.64 make MAKEINFO=true</span></div><div class="line" id="171308"><span class="nick" style="color:#2e2a4a"><a href="#171308" label="[17:13:08]">&lt;rickmasters&gt;</a></span><span class="message">if that works, its an interesting data point, but the root cause is still a mystery...</span></div><div class="line" id="172033"><span class="nick" style="color:#6b8072"><a href="#172033" label="[17:20:33]">&lt;stikonas&gt;</a></span><span class="message">most likely triggered by some differences in timestamps</span></div><div class="line" id="172041"><span class="nick" style="color:#6b8072"><a href="#172041" label="[17:20:41]">&lt;stikonas&gt;</a></span><span class="message">and some make rules are triggered only sometimes</span></div><div class="line" id="172624"><span class="nick" style="color:#389600"><a href="#172624" label="[17:26:24]">&lt;oriansj&gt;</a></span><span class="message">non-deterministic behavior when not using /dev/random or /dev/urandom should just be a bug</span></div><div class="line" id="172953"><span class="nick" style="color:#8dd3c7"><a href="#172953" label="[17:29:53]">&lt;muurkha&gt;</a></span><span class="message">that is, invoking time() or gettimeofday() or examining atime, ctime, or mtime should be a bug?</span></div><div class="line" id="173009"><span class="nick" style="color:#8dd3c7"><a href="#173009" label="[17:30:09]">&lt;muurkha&gt;</a></span><span class="message">well, I guess there are other ways to get non-deterministic behavior, so that is not an exhaustive list</span></div><div class="line" id="173052"><span class="nick" style="color:#6b8072"><a href="#173052" label="[17:30:52]">&lt;stikonas&gt;</a></span><span class="message">yes, you can't avoid things like stuff takes different time to execute</span></div><div class="line" id="173114"><span class="nick" style="color:#6b8072"><a href="#173114" label="[17:31:14]">&lt;stikonas&gt;</a></span><span class="message">and make is definitely using timestamps</span></div><div class="line" id="173205"><span class="nick" style="color:#8dd3c7"><a href="#173205" label="[17:32:05]">&lt;muurkha&gt;</a></span><span class="message">some implementations of redo use secure hashes instead of timestamps</span></div><div class="line" id="173239"><span class="nick" style="color:#8dd3c7"><a href="#173239" label="[17:32:39]">&lt;muurkha&gt;</a></span><span class="message">nondeterministic execution time doesn't have to result in nondeterministic execution results</span></div><div class="line" id="173330"><span class="nick" style="color:#6b8072"><a href="#173330" label="[17:33:30]">&lt;stikonas&gt;</a></span><span class="message">yes, but nondeterministic execution time results in nondeterministic timestamps</span></div><div class="line" id="173512"><span class="nick" style="color:#6b8072"><a href="#173512" label="[17:35:12]">&lt;stikonas&gt;</a></span><span class="message">mostly observed in autotools projects though....</span></div><div class="line" id="173524"><span class="nick" style="color:#6b8072"><a href="#173524" label="[17:35:24]">&lt;stikonas&gt;</a></span><span class="message">and especially autotools itself</span></div><div class="line" id="173917"><span class="nick" style="color:#d9d9d9"><a href="#173917" label="[17:39:17]">&lt;doras&gt;</a></span><span class="message">And nondeterministic timestamps apparently result in nondeterministic build failures :)</span></div><div class="line" id="174012"><span class="nick" style="color:#af8d2f"><a href="#174012" label="[17:40:12]">&lt;aggi&gt;</a></span><span class="message">it's confusing too, autoconf/automake versions are not backwards compatible</span></div><div class="line" id="174022"><span class="nick" style="color:#d9d9d9"><a href="#174022" label="[17:40:22]">&lt;doras&gt;</a></span><span class="message">I actually have a commit that adds `AUTOCONF=autoconf-2.64` to the `make` command to work around the issue, but since it felt mostly like a work around I didn't test it thoroughly.</span></div><div class="line" id="174039"><span class="nick" style="color:#d9d9d9"><a href="#174039" label="[17:40:39]">&lt;doras&gt;</a></span><span class="message">like a workaround*</span></div><div class="line" id="174053"><span class="nick" style="color:#af8d2f"><a href="#174053" label="[17:40:53]">&lt;aggi&gt;</a></span><span class="message">had encountered various weird side-effects, and concluded, away with it, no more GNU-buildsystem and GNU-toolchain</span></div><div class="line" id="174136"><span class="nick" style="color:#af8d2f"><a href="#174136" label="[17:41:36]">&lt;aggi&gt;</a></span><span class="message">scraped various old ebuilds from the gentoo archives, didn't expect an autoreconf -if caused that much trouble</span></div><div class="line" id="174206"><span class="nick" style="color:#af8d2f"><a href="#174206" label="[17:42:06]">&lt;aggi&gt;</a></span><span class="message">furthermore, the logfiles often, do not reveal precisely what's broken and when and why, with libtool involved etc.</span></div><div class="line" id="174242"><span class="nick" style="color:#af8d2f"><a href="#174242" label="[17:42:42]">&lt;aggi&gt;</a></span><span class="message">toybox doesn't need any autoconf/automake, suckless components don't need it</span></div><div class="line" id="174359"><span class="nick" style="color:#8dd3c7"><a href="#174359" label="[17:43:59]">&lt;muurkha&gt;</a></span><span class="message">autoconf is probably a lot less important now than it was 30 years ago when I started using it</span></div><div class="line" id="174436"><span class="nick" style="color:#af8d2f"><a href="#174436" label="[17:44:36]">&lt;aggi&gt;</a></span><span class="message">how so? gnu-toolchain (gcc/binutils) does need it</span></div><div class="line" id="174514"><span class="nick" style="color:#8dd3c7"><a href="#174514" label="[17:45:14]">&lt;muurkha&gt;</a></span><span class="message">in 01991-01992 I would frequently use, in the same day, two or more of SunOS 4, MS-DOS, VAX VMS, Solaris (SunOS 5), Ultrix, AIX, IRIX, Linux, and BSDI BSD/OS</span></div><div class="line" id="174539"><span class="nick" style="color:#af8d2f"><a href="#174539" label="[17:45:39]">&lt;aggi&gt;</a></span><span class="message">and i mean, the patchset required, to rollback to gcc47 with gentoo... and see autoreconf -if succeed...</span></div><div class="line" id="174617"><span class="nick" style="color:#8dd3c7"><a href="#174617" label="[17:46:17]">&lt;muurkha&gt;</a></span><span class="message">the problem autoconf solves was that if the program's author was using SunOS 4 and you were using Solaris (much less IRIX) you would generally have to hack the source for a while to get it to compile</span></div><div class="line" id="174628"><span class="nick" style="color:#af8d2f"><a href="#174628" label="[17:46:28]">&lt;aggi&gt;</a></span><span class="message">that's why, i don't accept any GNU-toolchain/build-system with my cross-compile/bootstrapping setup anymore</span></div><div class="line" id="174646"><span class="nick" style="color:#2e2a4a"><a href="#174646" label="[17:46:46]">&lt;rickmasters&gt;</a></span><span class="message">sitkonas: I suspect it is timestamp related as well. Older file systems only have 1 second precision. I'm runnning on a 4Ghz machine.</span></div><div class="line" id="174659"><span class="nick" style="color:#af8d2f"><a href="#174659" label="[17:46:59]">&lt;aggi&gt;</a></span><span class="message">tcc-toolchain integration, still is, incomplete, guess why? GNU.</span></div><div class="line" id="174747"><span class="nick" style="color:#2e2a4a"><a href="#174747" label="[17:47:47]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: if make decides to re-run configure, it won't have all the env vars set for configure, in automake-1.11.2.sh</span></div><div class="line" id="174802"><span class="nick" style="color:#af8d2f"><a href="#174802" label="[17:48:02]">&lt;aggi&gt;</a></span><span class="message">muurkha: with autotools, the cure is worse than the problem solved with it, nowadays.</span></div><div class="line" id="174803"><span class="nick" style="color:#6b8072"><a href="#174803" label="[17:48:03]">&lt;stikonas&gt;</a></span><span class="message">yes, that I understand</span></div><div class="line" id="174810"><span class="nick" style="color:#8dd3c7"><a href="#174810" label="[17:48:10]">&lt;muurkha&gt;</a></span><span class="message">nowadays basically only GNU/Linux, interchangeable *BSDs, and occasionally Cygwin are relevant platforms, and old machines with outdated OSes are much less common, so automating away that porting effort is much less important</span></div><div class="line" id="174825"><span class="nick" style="color:#8dd3c7"><a href="#174825" label="[17:48:25]">&lt;muurkha&gt;</a></span><span class="message">so that's the sense in which I mean that autoconf is a lot less important</span></div><div class="line" id="174829"><span class="nick" style="color:#6b8072"><a href="#174829" label="[17:48:29]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: but alternative would be exporting them and that woud propagate...</span></div><div class="line" id="174840"><span class="nick" style="color:#6b8072"><a href="#174840" label="[17:48:40]">&lt;stikonas&gt;</a></span><span class="message">I don't think doras would like that...</span></div><div class="line" id="174840"><span class="nick" style="color:#8dd3c7"><a href="#174840" label="[17:48:40]">&lt;muurkha&gt;</a></span><span class="message">arguably the cure was *always* worse than the disease ;)</span></div><div class="line" id="174924"><span class="nick" style="color:#8dd3c7"><a href="#174924" label="[17:49:24]">&lt;muurkha&gt;</a></span><span class="message">oh I should have mentioned MacOS, iOS, Android, and Win64, which I guess are things that a lot of people do want stuff to compile on</span></div><div class="line" id="174938"><span class="nick" style="color:#2e2a4a"><a href="#174938" label="[17:49:38]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: i think you prefix the same env vars to make MAKEINFO=true as are prefixed to the configure command in automake-1.11.2.sh</span></div><div class="line" id="174941"><span class="nick" style="color:#8dd3c7"><a href="#174941" label="[17:49:41]">&lt;muurkha&gt;</a></span><span class="message">but autoconf doesn't actually help much with Android or Win64 (as opposed to WSL)</span></div><div class="line" id="175003"><span class="nick" style="color:#6b8072"><a href="#175003" label="[17:50:03]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: yes, that we can obviously do</span></div><div class="line" id="175052"><span class="nick" style="color:#2e2a4a"><a href="#175052" label="[17:50:52]">&lt;rickmasters&gt;</a></span><span class="message">i can test that.</span></div><div class="line" id="175114"><span class="nick" style="color:#2e2a4a"><a href="#175114" label="[17:51:14]">&lt;rickmasters&gt;</a></span><span class="message">i've only found sed to perform the edit, but that should work</span></div><div class="line" id="175119"><span class="nick" style="color:#6b8072"><a href="#175119" label="[17:51:19]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: I was just saying that we can't export it once at the beginning of the build script. That would require export and ideally then you would want to build each script in its own subshell. But subshells are a bit broken in early bash</span></div><div class="line" id="175133"><span class="nick" style="color:#6b8072"><a href="#175133" label="[17:51:33]">&lt;stikonas&gt;</a></span><span class="message">yeah, we don't have editors...</span></div><div class="line" id="175232"><span class="nick" style="color:#2e2a4a"><a href="#175232" label="[17:52:32]">&lt;rickmasters&gt;</a></span><span class="message">right, no export. the vars are there for configure so whats good for the goose is good for the gander</span></div><div class="line" id="175958"><span class="nick" style="color:#2e2a4a"><a href="#175958" label="[17:59:58]">&lt;rickmasters&gt;</a></span><span class="message">test started</span></div><div class="line" id="180131"><span class="nick" style="color:#2e2a4a"><a href="#180131" label="[18:01:31]">&lt;rickmasters&gt;</a></span><span class="message">also: running the command manually seems to have worked!</span></div><div class="line" id="180215"><span class="nick" style="color:#2e2a4a"><a href="#180215" label="[18:02:15]">&lt;rickmasters&gt;</a></span><span class="message">AUTORECONF=autoreconf-2.64 AUTOM4TE=autom4te-2.64 AUTOHEADER=autoheader-2.64 AUTOCONF=autoconf-2.64 make MAKEINFO=true</span></div><div class="line" id="180852"><span class="nick" style="color:#2e2a4a"><a href="#180852" label="[18:08:52]">&lt;rickmasters&gt;</a></span><span class="message">I need to step away for an hour or so but I'll report back later with results of testing a full build</span></div><div class="line" id="192551"><span class="nick" style="color:#2e2a4a"><a href="#192551" label="[19:25:51]">&lt;rickmasters&gt;</a></span><span class="message">The automake build succeeded on the full build, which is still running. I'll create a PR with that fix.</span></div><div class="line" id="193057"><span class="nick" style="color:#6b8072"><a href="#193057" label="[19:30:57]">&lt;stikonas&gt;</a></span><span class="message">doras: actually, I've noticed that all new builds after musl are now dynamic</span></div><div class="line" id="193201"><span class="nick" style="color:#6b8072"><a href="#193201" label="[19:32:01]">&lt;stikonas&gt;</a></span><span class="message">I think fossy would like to only use dynamic linking where it is strictly necessary</span></div><div class="line" id="193231"><span class="nick" style="color:#d9d9d9"><a href="#193231" label="[19:32:31]">&lt;doras&gt;</a></span><span class="message">stikonas @stikonas:libera.chat: perhaps we're missing --disable-shared in some packages?</span></div><div class="line" id="193301"><span class="nick" style="color:#6b8072"><a href="#193301" label="[19:33:01]">&lt;stikonas&gt;</a></span><span class="message">yes, I think all binaries after musl</span></div><div class="line" id="193317"><span class="nick" style="color:#6b8072"><a href="#193317" label="[19:33:17]">&lt;stikonas&gt;</a></span><span class="message">well, for libraries I think we can build both .a and .so</span></div><div class="line" id="200056"><span class="nick" style="color:#6b8072"><a href="#200056" label="[20:00:56]">&lt;stikonas&gt;</a></span><span class="message">doras: I'm now trying with the new package that I added (CFLAGS=&quot;-static&quot; seems to help)</span></div><div class="line" id="200205"><span class="nick" style="color:#6b8072"><a href="#200205" label="[20:02:05]">&lt;stikonas&gt;</a></span><span class="message">so I think the same would work with others, I can probably fix it...</span></div><div class="line" id="211340"><span class="nick" style="color:#389600"><a href="#211340" label="[21:13:40]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well with tools like cmake, I see even less reason for autotools to be used outside of a few niche environments like Z/OS which are still around and kicking.</span></div><div class="line" id="211441"><span class="nick" style="color:#389600"><a href="#211441" label="[21:14:41]">&lt;oriansj&gt;</a></span><span class="message">although I doubt I can afford to do a stage0-Z/OS port given the current IBM license bit</span></div><div class="line" id="211512"><span class="nick" style="color:#389600"><a href="#211512" label="[21:15:12]">&lt;vancz&gt;</a></span><span class="message">out of context question; can kaem set environment variables</span></div><div class="line" id="211602"><span class="nick" style="color:#389600"><a href="#211602" label="[21:16:02]">&lt;oriansj&gt;</a></span><span class="message">vancz: kaem-optional-seed =&gt; No; kaem =&gt; yes</span></div><div class="line" id="211619"><span class="nick" style="color:#389600"><a href="#211619" label="[21:16:19]">&lt;vancz&gt;</a></span><span class="message">aha</span></div><div class="line" id="211700"><span class="nick" style="color:#8dd3c7"><a href="#211700" label="[21:17:00]">&lt;muurkha&gt;</a></span><span class="message">oriansj: yeah, agreed.  and I'm not sure autotools really helps much with zOS</span></div><div class="line" id="211911"><span class="nick" style="color:#389600"><a href="#211911" label="[21:19:11]">&lt;vancz&gt;</a></span><span class="message">oriansj: context is I'm wondering why this was done but I don't expect you to know <a rel="nofollow" href="https://github.com/ngi-nix/mes/blob/4a787cdade16b01f705649dbb0c48c9c47e89247/stage5/mes-m2.nix#L61">https://github.com/ngi-nix/mes/blob/4a787cdade16b01f705649dbb0c48c9c47e89247/stage5/mes-m2.nix#L61</a> </span></div><div class="line" id="212039"><span class="nick" style="color:#389600"><a href="#212039" label="[21:20:39]">&lt;oriansj&gt;</a></span><span class="message">muurkha: actually most programs running on a Z/OS system these days are POSIX binaries using the POSIX subsystem (which has a boatload of old unix vulnerabilities)</span></div><div class="line" id="212104"><span class="nick" style="color:#389600"><a href="#212104" label="[21:21:04]">&lt;vancz&gt;</a></span><span class="message">I guess environment manipulation may be difficult in general in this context?</span></div><div class="line" id="212115"><span class="nick" style="color:#389600"><a href="#212115" label="[21:21:15]">&lt;oriansj&gt;</a></span><span class="message">vancz: I get a 404 error with that link</span></div><div class="line" id="212122"><span class="nick" style="color:#389600"><a href="#212122" label="[21:21:22]">&lt;vancz&gt;</a></span><span class="message">Oh oops</span></div><div class="line" id="212203"><span class="nick" style="color:#389600"><a href="#212203" label="[21:22:03]">&lt;vancz&gt;</a></span><span class="message">I dont think I can change that right now</span></div><div class="line" id="212253"><span class="nick" style="color:#389600"><a href="#212253" label="[21:22:53]">&lt;vancz&gt;</a></span><span class="message">oriansj: from line 50 <a rel="nofollow" href="https://bpa.st/2D2Q">https://bpa.st/2D2Q</a> </span></div><div class="line" id="212325"><span class="nick" style="color:#389600"><a href="#212325" label="[21:23:25]">&lt;oriansj&gt;</a></span><span class="message">vancz: not really; in fact you just need to do: <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-x86/blob/master/kaem.run#L23">https://github.com/oriansj/stage0-posix-x86/blob/master/kaem.run#L23</a> </span></div><div class="line" id="212446"><span class="nick" style="color:#389600"><a href="#212446" label="[21:24:46]">&lt;vancz&gt;</a></span><span class="message">hm ok, giess I'll ask</span></div><div class="line" id="212453"><span class="nick" style="color:#389600"><a href="#212453" label="[21:24:53]">&lt;vancz&gt;</a></span><span class="message">*guess I'll ask the author</span></div><div class="line" id="212532"><span class="nick" style="color:#389600"><a href="#212532" label="[21:25:32]">&lt;oriansj&gt;</a></span><span class="message">vancz: looks like the author was having a real hard time trying to make mes.c and basically dumped the mes-m2 block in</span></div><div class="line" id="213629"><span class="nick" style="color:#6b8072"><a href="#213629" label="[21:36:29]">&lt;stikonas&gt;</a></span><span class="message">maybe mes is not the easiest thing to build, we now have plenty of examples now how to build it...</span></div><div class="line" id="213725"><span class="nick" style="color:#6b8072"><a href="#213725" label="[21:37:25]">&lt;stikonas&gt;</a></span><span class="message">s/we/but we/</span></div><div class="line" id="215221"><span class="nick" style="color:#389600"><a href="#215221" label="[21:52:21]">&lt;oriansj&gt;</a></span><span class="message">and M2-Planet is far from the easiest C compiler to work with.</span></div><div class="line" id="215300"><span class="nick" style="color:#389600"><a href="#215300" label="[21:53:00]">&lt;oriansj&gt;</a></span><span class="message">and i still never put enough time into making M2libc Mes.c compatible enough</span></div><div class="line" id="215418"><span class="nick" style="color:#389600"><a href="#215418" label="[21:54:18]">&lt;oriansj&gt;</a></span><span class="message">as there isn't a big gap between M2libc and meslibc in terms of functionality (needed to build mes.c)</span></div><div class="line" id="220229"><span class="nick" style="color:#6b8072"><a href="#220229" label="[22:02:29]">&lt;stikonas&gt;</a></span><span class="message">yeah, it would be easier if M2libc + M2-Planet could build mes.c</span></div><div class="line" id="220324"><span class="nick" style="color:#6b8072"><a href="#220324" label="[22:03:24]">&lt;stikonas&gt;</a></span><span class="message">since now we need to basically port part of meslibc to M2-Planet anyway</span></div><div class="line" id="220342"><span class="nick" style="color:#6b8072"><a href="#220342" label="[22:03:42]">&lt;stikonas&gt;</a></span><span class="message">so need to write another libc entry point, etc...</span></div><div class="line" id="220538"><span class="nick" style="color:#389600"><a href="#220538" label="[22:05:38]">&lt;oriansj&gt;</a></span><span class="message">I really should just kill a weekend and knock that out</span></div><div class="line" id="220617"><span class="nick" style="color:#d9d9d9"><a href="#220617" label="[22:06:17]">&lt;doras&gt;</a></span><span class="message">stikonas: I'm checking whether the addition of --libdir to dhcpcd somehow broke the `qemu` bootstrap. I keep getting &quot;Timeout reached for internet to become accessible&quot;.</span></div><div class="line" id="220632"><span class="nick" style="color:#d9d9d9"><a href="#220632" label="[22:06:32]">&lt;doras&gt;</a></span><span class="message">Just a heads up if you run into a similar issue.</span></div><div class="line" id="220655"><span class="nick" style="color:#6b8072"><a href="#220655" label="[22:06:55]">&lt;stikonas&gt;</a></span><span class="message">sure, so far I haven't seen it</span></div><div class="line" id="220700"><span class="nick" style="color:#8dd3c7"><a href="#220700" label="[22:07:00]">&lt;muurkha&gt;</a></span><span class="message">oriansj: that'd be super cool!</span></div><div class="line" id="220757"><span class="nick" style="color:#6b8072"><a href="#220757" label="[22:07:57]">&lt;stikonas&gt;</a></span><span class="message">it would be even nicer if we could just have one libc but that's probably wishing too much</span></div><div class="line" id="220921"><span class="nick" style="color:#389600"><a href="#220921" label="[22:09:21]">&lt;oriansj&gt;</a></span><span class="message">muurkha: although the fact that gcc fails to build with simple.sh in the latest commit of mes concerns me</span></div><div class="line" id="220937"><span class="nick" style="color:#389600"><a href="#220937" label="[22:09:37]">&lt;oriansj&gt;</a></span><span class="message">gcc (GCC) 12.1.0 for reference by the sway</span></div><div class="line" id="220944"><span class="nick" style="color:#389600"><a href="#220944" label="[22:09:44]">&lt;oriansj&gt;</a></span><span class="message">^sway^way^</span></div><div class="line" id="221040"><span class="nick" style="color:#389600"><a href="#221040" label="[22:10:40]">&lt;oriansj&gt;</a></span><span class="message">but I probably should just use the mes-m2 version in live-bootstrap because that will work and is a fixed target</span></div><div class="line" id="221623"><span class="nick" style="color:#d9d9d9"><a href="#221623" label="[22:16:23]">&lt;doras&gt;</a></span><span class="message">stikonas: I'm testing without --external-sources, are you?</span></div><div class="line" id="221749"><span class="nick" style="color:#d9d9d9"><a href="#221749" label="[22:17:49]">&lt;doras&gt;</a></span><span class="message">I usually use --external-sources, so it's possible that this issue was introduced even earlier.</span></div><div class="line" id="222308"><span class="nick" style="color:#6b8072"><a href="#222308" label="[22:23:08]">&lt;stikonas&gt;</a></span><span class="message">doras: I tried both today</span></div><div class="line" id="222325"><span class="nick" style="color:#6b8072"><a href="#222325" label="[22:23:25]">&lt;stikonas&gt;</a></span><span class="message">speaking of --external-sources, I like to run with it too</span></div><div class="line" id="222337"><span class="nick" style="color:#6b8072"><a href="#222337" label="[22:23:37]">&lt;stikonas&gt;</a></span><span class="message">maybe it should be default...</span></div><div class="line" id="222337"><span class="nick" style="color:#6b8072"><a href="#222337" label="[22:23:37]">&lt;stikonas&gt;</a></span><span class="message">fossy, what do you think?</span></div><div class="line" id="222408"><span class="nick" style="color:#6b8072"><a href="#222408" label="[22:24:08]">&lt;stikonas&gt;</a></span><span class="message">though I don't really like external sources name either</span></div><div class="line" id="222412"><span class="nick" style="color:#6b8072"><a href="#222412" label="[22:24:12]">&lt;stikonas&gt;</a></span><span class="message">it's not very descriptive</span></div><div class="line" id="222418"><span class="nick" style="color:#d9d9d9"><a href="#222418" label="[22:24:18]">&lt;doras&gt;</a></span><span class="message">stikonas: do you remember on top of which commit? I want to test a good one to see that the failure isn't some strange internet connectivity issue.</span></div><div class="line" id="222430"><span class="nick" style="color:#6b8072"><a href="#222430" label="[22:24:30]">&lt;stikonas&gt;</a></span><span class="message">doras: on top of current master</span></div><div class="line" id="222442"><span class="nick" style="color:#d9d9d9"><a href="#222442" label="[22:24:42]">&lt;doras&gt;</a></span><span class="message">Oh.</span></div><div class="line" id="222443"><span class="nick" style="color:#6b8072"><a href="#222443" label="[22:24:43]">&lt;stikonas&gt;</a></span><span class="message">so with all PRs merged in</span></div><div class="line" id="222453"><span class="nick" style="color:#6b8072"><a href="#222453" label="[22:24:53]">&lt;stikonas&gt;</a></span><span class="message">(I'm trying to add another package)</span></div><div class="line" id="222458"><span class="nick" style="color:#d9d9d9"><a href="#222458" label="[22:24:58]">&lt;doras&gt;</a></span><span class="message">Then something is definitely off here...</span></div><div class="line" id="222646"><span class="nick" style="color:#d9d9d9"><a href="#222646" label="[22:26:46]">&lt;doras&gt;</a></span><span class="message">Ah</span></div><div class="line" id="222654"><span class="nick" style="color:#d9d9d9"><a href="#222654" label="[22:26:54]">&lt;doras&gt;</a></span><span class="message">I think I have a DNS issue</span></div><div class="line" id="222913"><span class="nick" style="color:#d9d9d9"><a href="#222913" label="[22:29:13]">&lt;doras&gt;</a></span><span class="message">The IP address of example.com can't be resolved, and apparently this is the domain we probe in live-bootstrap to detect internet connectivity.</span></div><div class="line" id="223220"><span class="nick" style="color:#6b8072"><a href="#223220" label="[22:32:20]">&lt;stikonas&gt;</a></span><span class="message">doras: is that just your DNS server?</span></div><div class="line" id="223241"><span class="nick" style="color:#6b8072"><a href="#223241" label="[22:32:41]">&lt;stikonas&gt;</a></span><span class="message">what about some other one e.g. dig @8.8.8.8 example.com</span></div><div class="line" id="223347"><span class="nick" style="color:#d9d9d9"><a href="#223347" label="[22:33:47]">&lt;doras&gt;</a></span><span class="message">stikonas: `systemctl restart systemd-resolved.service` solved it :\</span></div><div class="line" id="223406"><span class="nick" style="color:#6b8072"><a href="#223406" label="[22:34:06]">&lt;stikonas&gt;</a></span><span class="message">ok, so something local</span></div><div class="line" id="223440"><span class="nick" style="color:#d9d9d9"><a href="#223440" label="[22:34:40]">&lt;doras&gt;</a></span><span class="message">Yes... a bug, it would seem.</span></div><div class="line" id="223452"><span class="nick" style="color:#8dd3c7"><a href="#223452" label="[22:34:52]">&lt;muurkha&gt;</a></span><span class="message">ugh</span></div><div class="line" id="224216"><span class="nick" style="color:#389600"><a href="#224216" label="[22:42:16]">&lt;vancz&gt;</a></span><span class="message">oriansj: so I apparently the complexity of the file I linked is supposed to come from the fact that if we want to use mes/etc to bootstrap , we cant use the nixpkgs stdenv</span></div><div class="line" id="224350"><span class="nick" style="color:#389600"><a href="#224350" label="[22:43:50]">&lt;vancz&gt;</a></span><span class="message">now, I cant stop thinking that there has to be a way to do this without duplicating a bunch of code from upstream (?) or replicating a bunch of stuff that live-bootstrap does, because it wont be maintained well, if at all</span></div><div class="line" id="224450"><span class="nick" style="color:#389600"><a href="#224450" label="[22:44:50]">&lt;vancz&gt;</a></span><span class="message">I cant figure out how to pose the question well, but the bottom line is - isnt there a way for your project, that has all the knowhow to actually write these bootstrap processes, to maintain such scripts</span></div><div class="line" id="224504"><span class="nick" style="color:#389600"><a href="#224504" label="[22:45:04]">&lt;vancz&gt;</a></span><span class="message">or is that already a thing and we're really missing something here</span></div><div class="line" id="224511"><span class="nick" style="color:#6b8072"><a href="#224511" label="[22:45:11]">&lt;stikonas&gt;</a></span><span class="message">well, given that live-bootstrap does not duplicate bunch of code from upstream, I think it must be possible for other projects to avoid duplication too</span></div><div class="line" id="224540"><span class="nick" style="color:#6b8072"><a href="#224540" label="[22:45:40]">&lt;stikonas&gt;</a></span><span class="message">as long as they can unpack some files into certain directories and run a single command</span></div><div class="line" id="224553"><span class="nick" style="color:#389600"><a href="#224553" label="[22:45:53]">&lt;vancz&gt;</a></span><span class="message">I mean, it looks to me like live-bootstrap has all these kaem scripts that actually do the compilations and such</span></div><div class="line" id="224559"><span class="nick" style="color:#6b8072"><a href="#224559" label="[22:45:59]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="224641"><span class="nick" style="color:#389600"><a href="#224641" label="[22:46:41]">&lt;vancz&gt;</a></span><span class="message">so is there / is live-bootstrap the canonical implementation of how to bootstrap an environment?</span></div><div class="line" id="224655"><span class="nick" style="color:#389600"><a href="#224655" label="[22:46:55]">&lt;oriansj&gt;</a></span><span class="message">and there has to be a 1:1 translation between kaem and nix</span></div><div class="line" id="224717"><span class="nick" style="color:#6b8072"><a href="#224717" label="[22:47:17]">&lt;stikonas&gt;</a></span><span class="message">live-bootstrap is not canonical implementation, just one attempt at it</span></div><div class="line" id="224725"><span class="nick" style="color:#389600"><a href="#224725" label="[22:47:25]">&lt;oriansj&gt;</a></span><span class="message">vancz: right now it is the only pure implementation of bootstrapping an environment</span></div><div class="line" id="224726"><span class="nick" style="color:#389600"><a href="#224726" label="[22:47:26]">&lt;vancz&gt;</a></span><span class="message">is there anything like a canonical implementation?</span></div><div class="line" id="224728"><span class="nick" style="color:#389600"><a href="#224728" label="[22:47:28]">&lt;vancz&gt;</a></span><span class="message">oriansj: ok</span></div><div class="line" id="224737"><span class="nick" style="color:#6b8072"><a href="#224737" label="[22:47:37]">&lt;stikonas&gt;</a></span><span class="message">yes, it is the only one...</span></div><div class="line" id="224745"><span class="nick" style="color:#389600"><a href="#224745" label="[22:47:45]">&lt;vancz&gt;</a></span><span class="message"> I'm trying to figure out how to avoid writing our own</span></div><div class="line" id="224749"><span class="nick" style="color:#6b8072"><a href="#224749" label="[22:47:49]">&lt;stikonas&gt;</a></span><span class="message">at least the only one working</span></div><div class="line" id="224756"><span class="nick" style="color:#389600"><a href="#224756" label="[22:47:56]">&lt;oriansj&gt;</a></span><span class="message">but not the only one (for example the guix bootstrap is another)</span></div><div class="line" id="224822"><span class="nick" style="color:#389600"><a href="#224822" label="[22:48:22]">&lt;oriansj&gt;</a></span><span class="message">but guix allows pregenerated files and has the guile binary blob in its root</span></div><div class="line" id="224827"><span class="nick" style="color:#6b8072"><a href="#224827" label="[22:48:27]">&lt;stikonas&gt;</a></span><span class="message">well, guix bootstrap is another bootstrap but starting from different starting point</span></div><div class="line" id="224952"><span class="nick" style="color:#389600"><a href="#224952" label="[22:49:52]">&lt;vancz&gt;</a></span><span class="message">oriansj: e.g, I think you linked me this as a reference <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes-0.24/mes-0.24.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes-0.24/mes-0.24.kaem</a>  - it would be nice if we didnt need to write something that does the same thing ourselves</span></div><div class="line" id="225009"><span class="nick" style="color:#6b8072"><a href="#225009" label="[22:50:09]">&lt;stikonas&gt;</a></span><span class="message">vancz: feel free to refactor this a bit</span></div><div class="line" id="225031"><span class="nick" style="color:#389600"><a href="#225031" label="[22:50:31]">&lt;vancz&gt;</a></span><span class="message">Im mostly acting elephant in chinashop</span></div><div class="line" id="225038"><span class="nick" style="color:#6b8072"><a href="#225038" label="[22:50:38]">&lt;stikonas&gt;</a></span><span class="message">split out the reusable stuff from live-bootstrap specific stuff (unpacking, etc)</span></div><div class="line" id="225049"><span class="nick" style="color:#389600"><a href="#225049" label="[22:50:49]">&lt;oriansj&gt;</a></span><span class="message">there is also: <a rel="nofollow" href="https://github.com/t184256/bootstrap-from-tcc">https://github.com/t184256/bootstrap-from-tcc</a>  <a rel="nofollow" href="https://github.com/schierlm/FullSourceBootstrapFromGit/">https://github.com/schierlm/FullSourceBootstrapFromGit/</a> </span></div><div class="line" id="225102"><span class="nick" style="color:#389600"><a href="#225102" label="[22:51:02]">&lt;oriansj&gt;</a></span><span class="message">and probably more I don't know about</span></div><div class="line" id="225107"><span class="nick" style="color:#6b8072"><a href="#225107" label="[22:51:07]">&lt;stikonas&gt;</a></span><span class="message">oh yes, mihi was also playing with it</span></div><div class="line" id="225127"><span class="nick" style="color:#6b8072"><a href="#225127" label="[22:51:27]">&lt;stikonas&gt;</a></span><span class="message">I think it was mihi that wanted to refactor mes build script in live-bootstrap to make it more reusable</span></div><div class="line" id="225144"><span class="nick" style="color:#6b8072"><a href="#225144" label="[22:51:44]">&lt;stikonas&gt;</a></span><span class="message">though I guess mihi didn't find time for that</span></div><div class="line" id="225144"><span class="nick" style="color:#6b8072"><a href="#225144" label="[22:51:44]">&lt;stikonas&gt;</a></span><span class="message">but on the other hand we got autogen bootstrap</span></div><div class="line" id="225150"><span class="nick" style="color:#6b8072"><a href="#225150" label="[22:51:50]">&lt;stikonas&gt;</a></span><span class="message">(which I still need to finish checking)</span></div><div class="line" id="225151"><span class="nick" style="color:#389600"><a href="#225151" label="[22:51:51]">&lt;oriansj&gt;</a></span><span class="message">and a guile bootstrap</span></div><div class="line" id="225200"><span class="nick" style="color:#6b8072"><a href="#225200" label="[22:52:00]">&lt;stikonas&gt;</a></span><span class="message">yes, guile bootstrap too, though that is earlier</span></div><div class="line" id="225225"><span class="nick" style="color:#389600"><a href="#225225" label="[22:52:25]">&lt;vancz&gt;</a></span><span class="message">this whole stack seems rather involved so it just seems to me like its going to take a long time for someone not deep into it to figure it out</span></div><div class="line" id="225243"><span class="nick" style="color:#389600"><a href="#225243" label="[22:52:43]">&lt;oriansj&gt;</a></span><span class="message">but unfinished projects are kind of natural while exploring the solution space</span></div><div class="line" id="225243"><span class="nick" style="color:#389600"><a href="#225243" label="[22:52:43]">&lt;vancz&gt;</a></span><span class="message">(and end up getting neck deep in it in the process)</span></div><div class="line" id="225248"><span class="nick" style="color:#6b8072"><a href="#225248" label="[22:52:48]">&lt;stikonas&gt;</a></span><span class="message">vancz: most of the things are fairly simple</span></div><div class="line" id="225252"><span class="nick" style="color:#6b8072"><a href="#225252" label="[22:52:52]">&lt;stikonas&gt;</a></span><span class="message">especially live-bootstrap</span></div><div class="line" id="225310"><span class="nick" style="color:#6b8072"><a href="#225310" label="[22:53:10]">&lt;stikonas&gt;</a></span><span class="message">it's mostly just a bit of scripting</span></div><div class="line" id="225310"><span class="nick" style="color:#389600"><a href="#225310" label="[22:53:10]">&lt;vancz&gt;</a></span><span class="message">ok</span></div><div class="line" id="225321"><span class="nick" style="color:#389600"><a href="#225321" label="[22:53:21]">&lt;oriansj&gt;</a></span><span class="message">vancz: you don't have to figure it out, you can talk to us and we will help you understand</span></div><div class="line" id="225322"><span class="nick" style="color:#389600"><a href="#225322" label="[22:53:22]">&lt;vancz&gt;</a></span><span class="message">my experience so far has mostly been &quot;m2planet is sensitive with the header / c files&quot;</span></div><div class="line" id="225323"><span class="nick" style="color:#6b8072"><a href="#225323" label="[22:53:23]">&lt;stikonas&gt;</a></span><span class="message">stage0 stuff might be slightly more involved, as it requires assembly</span></div><div class="line" id="225406"><span class="nick" style="color:#389600"><a href="#225406" label="[22:54:06]">&lt;vancz&gt;</a></span><span class="message">thoguh that can arguably be user error, but the issue is more: &quot;ok i need to figure out all these h and c files i need to pass to the compiler&quot;</span></div><div class="line" id="225412"><span class="nick" style="color:#6b8072"><a href="#225412" label="[22:54:12]">&lt;stikonas&gt;</a></span><span class="message">we do have M2-Mesoplanet now too which is a bit smarter with header / c files</span></div><div class="line" id="225420"><span class="nick" style="color:#6b8072"><a href="#225420" label="[22:54:20]">&lt;stikonas&gt;</a></span><span class="message">but I don't think anybody have tried to use it for mes</span></div><div class="line" id="225444"><span class="nick" style="color:#389600"><a href="#225444" label="[22:54:44]">&lt;vancz&gt;</a></span><span class="message">I keep telling my peeps to come here and talk to yall but *shrug*</span></div><div class="line" id="225445"><span class="nick" style="color:#389600"><a href="#225445" label="[22:54:45]">&lt;oriansj&gt;</a></span><span class="message">well that is because M2-mesoplanet doesn't work with meslibc and M2libc isn't up to speed yet</span></div><div class="line" id="225506"><span class="nick" style="color:#389600"><a href="#225506" label="[22:55:06]">&lt;vancz&gt;</a></span><span class="message">I'm just trying to figure out how I can make this whole thing easier to get through (for them) because I don't have any extra capacity</span></div><div class="line" id="225508"><span class="nick" style="color:#389600"><a href="#225508" label="[22:55:08]">&lt;oriansj&gt;</a></span><span class="message">but i guess I really should just get off my arse and solve that one once and for all</span></div><div class="line" id="225515"><span class="nick" style="color:#389600"><a href="#225515" label="[22:55:15]">&lt;vancz&gt;</a></span><span class="message">I hop in with helping debug sometimes</span></div><div class="line" id="225627"><span class="nick" style="color:#389600"><a href="#225627" label="[22:56:27]">&lt;oriansj&gt;</a></span><span class="message">vancz: we all do what we can, and sometimes even the smallest bit of help really matters some days</span></div><div class="line" id="225702"><span class="nick" style="color:#6b8072"><a href="#225702" label="[22:57:02]">&lt;stikonas&gt;</a></span><span class="message">vancz: see how M2-Mesoplanet compile command is much simpler <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/blob/e1e501c4a9811242b8c2c09709834924389f248c/mescc-tools-extra.kaem#L29">https://github.com/oriansj/mescc-tools-extra/blob/e1e501c4a9811242b8c2c09709834924389f248c/mescc-tools-extra.kaem#L29</a> </span></div><div class="line" id="225709"><span class="nick" style="color:#389600"><a href="#225709" label="[22:57:09]">&lt;oriansj&gt;</a></span><span class="message">or saying, this failed and some information for others to figure it out is very useful</span></div><div class="line" id="231840"><span class="nick" style="color:#389600"><a href="#231840" label="[23:18:40]">&lt;oriansj&gt;</a></span><span class="message">the first step is always get the program into a state which GCC can build the program in a single command</span></div><div class="line" id="231900"><span class="nick" style="color:#389600"><a href="#231900" label="[23:19:00]">&lt;oriansj&gt;</a></span><span class="message">after that M2-Planet conversion becomes a great deal simpler</span></div><div class="line" id="231948"><span class="nick" style="color:#6b8072"><a href="#231948" label="[23:19:48]">&lt;stikonas&gt;</a></span><span class="message">and it is much simpler than C-&gt; hex0 conversion</span></div><div class="line" id="232208"><span class="nick" style="color:#389600"><a href="#232208" label="[23:22:08]">&lt;oriansj&gt;</a></span><span class="message">stikonas: hopefully you mean C-&gt;asm-&gt;hex0</span></div><div class="line" id="232250"><span class="nick" style="color:#389600"><a href="#232250" label="[23:22:50]">&lt;oriansj&gt;</a></span><span class="message">because there is no way I could make that leap, without first working out the assembly in a reasonable assembly language first</span></div><div class="line" id="232749"><span class="nick" style="color:#6b8072"><a href="#232749" label="[23:27:49]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'm now usually doing C-&gt;asm (GAS/NASM syntax) -&gt; M1 -&gt; hex2 -&gt; hex0</span></div><div class="line" id="232802"><span class="nick" style="color:#6b8072"><a href="#232802" label="[23:28:02]">&lt;stikonas&gt;</a></span><span class="message">so all tiny steps...</span></div><br /></div></body></html>