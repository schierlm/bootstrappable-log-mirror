<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-01-06.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="004736"><span class="nick" style="color:#8dd3c7"><a href="#004736" label="[00:47:36]">&lt;fossy&gt;</a></span><span class="message">ok i've got past that hurdle</span></div><div class="line" id="004745"><span class="nick" style="color:#8dd3c7"><a href="#004745" label="[00:47:45]">&lt;fossy&gt;</a></span><span class="message">i'm still very unsure why it was happening</span></div><div class="line" id="010136"><span class="nick" style="color:#8dd3c7"><a href="#010136" label="[01:01:36]">&lt;fossy&gt;</a></span><span class="message">hooray, we have a semi-working mes-tcc!!!</span></div><div class="line" id="012535"><span class="nick" style="color:#2e2a4a"><a href="#012535" label="[01:25:35]">&lt;oriansj&gt;</a></span><span class="message">fossy: good, I look forward to seeing your work ^_^</span></div><div class="line" id="024520"><span class="nick" style="color:#2e2a4a"><a href="#024520" label="[02:45:20]">&lt;oriansj&gt;</a></span><span class="message">janneke: I am importing your BOOTSTRAP notes into bootstrappable.org (please correct any errors that I made)</span></div><div class="line" id="024601"><span class="nick" style="color:#2e2a4a"><a href="#024601" label="[02:46:01]">&lt;oriansj&gt;</a></span><span class="message">Also by finishing slow-utils, we wil be able to pull mescc-tools entirely out of the scheme only bootstrap</span></div><div class="line" id="024635"><span class="nick" style="color:#2e2a4a"><a href="#024635" label="[02:46:35]">&lt;oriansj&gt;</a></span><span class="message">I'll aim to finish it tomorrow for you</span></div><div class="line" id="024716"><span class="nick" style="color:#2e2a4a"><a href="#024716" label="[02:47:16]">&lt;oriansj&gt;</a></span><span class="message">(as you only needed hex2, blood-elf and M1; of which hex2 and blood-elf are already done)</span></div><div class="line" id="024752"><span class="nick" style="color:#8dd3c7"><a href="#024752" label="[02:47:52]">&lt;fossy&gt;</a></span><span class="message">oriansj: i assume slow-utils is written in scheme</span></div><div class="line" id="024816"><span class="nick" style="color:#2e2a4a"><a href="#024816" label="[02:48:16]">&lt;oriansj&gt;</a></span><span class="message">fossy: yep <a rel="nofollow" href="https://github.com/oriansj/slow-utils">https://github.com/oriansj/slow-utils</a> </span></div><div class="line" id="024854"><span class="nick" style="color:#2e2a4a"><a href="#024854" label="[02:48:54]">&lt;oriansj&gt;</a></span><span class="message">The only part of it that mes-m2 doesn't already support is the modules bit</span></div><div class="line" id="024922"><span class="nick" style="color:#8dd3c7"><a href="#024922" label="[02:49:22]">&lt;fossy&gt;</a></span><span class="message">cool</span></div><div class="line" id="024926"><span class="nick" style="color:#2e2a4a"><a href="#024926" label="[02:49:26]">&lt;oriansj&gt;</a></span><span class="message">and I probably could pull that out pretty easily too</span></div><div class="line" id="024943"><span class="nick" style="color:#8dd3c7"><a href="#024943" label="[02:49:43]">&lt;fossy&gt;</a></span><span class="message">i see, that enables the scheme bootstrap</span></div><div class="line" id="024945"><span class="nick" style="color:#8dd3c7"><a href="#024945" label="[02:49:45]">&lt;fossy&gt;</a></span><span class="message">nice</span></div><div class="line" id="025002"><span class="nick" style="color:#2e2a4a"><a href="#025002" label="[02:50:02]">&lt;oriansj&gt;</a></span><span class="message">as I only used (use-modules (srfi srfi-9)) which is Needed to support record type</span></div><div class="line" id="025006"><span class="nick" style="color:#8dd3c7"><a href="#025006" label="[02:50:06]">&lt;fossy&gt;</a></span><span class="message">i assume slow-utils is irrelevant for a 357-byte bootstrap?</span></div><div class="line" id="025025"><span class="nick" style="color:#2e2a4a"><a href="#025025" label="[02:50:25]">&lt;oriansj&gt;</a></span><span class="message">fossy: it is for after mes-m2 is done</span></div><div class="line" id="025035"><span class="nick" style="color:#8dd3c7"><a href="#025035" label="[02:50:35]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="025038"><span class="nick" style="color:#8dd3c7"><a href="#025038" label="[02:50:38]">&lt;fossy&gt;</a></span><span class="message">coolio</span></div><div class="line" id="025106"><span class="nick" style="color:#2e2a4a"><a href="#025106" label="[02:51:06]">&lt;oriansj&gt;</a></span><span class="message">if you notice: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf</a> </span></div><div class="line" id="025146"><span class="nick" style="color:#2e2a4a"><a href="#025146" label="[02:51:46]">&lt;oriansj&gt;</a></span><span class="message">basically: the current scheme map should be the mes-m2 part and above being done (but use guile instead of mes-m2)</span></div><div class="line" id="025157"><span class="nick" style="color:#8dd3c7"><a href="#025157" label="[02:51:57]">&lt;fossy&gt;</a></span><span class="message">I was looking at that</span></div><div class="line" id="025433"><span class="nick" style="color:#2e2a4a"><a href="#025433" label="[02:54:33]">&lt;oriansj&gt;</a></span><span class="message">which reminds me: gio if you so choose to do so and say put a copy of <a rel="nofollow" href="https://github.com/oriansj/talk-notes">https://github.com/oriansj/talk-notes</a>  with your gitlab (or other hosting location) with your asmc and nbs info added to it's bootstrappable.org; I would love a link ^_^</span></div><div class="line" id="025529"><span class="nick" style="color:#2e2a4a"><a href="#025529" label="[02:55:29]">&lt;oriansj&gt;</a></span><span class="message">currently instead of slow-utils, it is mescc-tools</span></div><div class="line" id="025549"><span class="nick" style="color:#2e2a4a"><a href="#025549" label="[02:55:49]">&lt;oriansj&gt;</a></span><span class="message">which is just the C versions of the exact same functionality</span></div><div class="line" id="030057"><span class="nick" style="color:#2e2a4a"><a href="#030057" label="[03:00:57]">&lt;oriansj&gt;</a></span><span class="message">I know for absolute certain that the steps at and below mes-m2 are absolutely correct (the ones above usually change when janneke makes good progress in MesCC and only he can say for certain if they are absolutely correct or what I need to change to make it accurate again)</span></div><div class="line" id="031919"><span class="nick" style="color:#8dd3c7"><a href="#031919" label="[03:19:19]">&lt;fossy&gt;</a></span><span class="message">oh gosh</span></div><div class="line" id="031928"><span class="nick" style="color:#8dd3c7"><a href="#031928" label="[03:19:28]">&lt;fossy&gt;</a></span><span class="message">not having -C for mescc makes everything like 2x slower</span></div><div class="line" id="031930"><span class="nick" style="color:#8dd3c7"><a href="#031930" label="[03:19:30]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="054704"><span class="nick" style="color:#8dd3c7"><a href="#054704" label="[05:47:04]">&lt;fossy&gt;</a></span><span class="message">ugh</span></div><div class="line" id="054708"><span class="nick" style="color:#8dd3c7"><a href="#054708" label="[05:47:08]">&lt;fossy&gt;</a></span><span class="message">the tcc /was/ working</span></div><div class="line" id="054714"><span class="nick" style="color:#8dd3c7"><a href="#054714" label="[05:47:14]">&lt;fossy&gt;</a></span><span class="message">then i tried to make it reproducible properly</span></div><div class="line" id="054744"><span class="nick" style="color:#8dd3c7"><a href="#054744" label="[05:47:44]">&lt;fossy&gt;</a></span><span class="message">and now when i build it the proper way without anything from /usr/local it segfaults</span></div><div class="line" id="054752"><span class="nick" style="color:#8dd3c7"><a href="#054752" label="[05:47:52]">&lt;fossy&gt;</a></span><span class="message">where would i start with debugging this segfalt</span></div><div class="line" id="055301"><span class="nick" style="color:#6b8072"><a href="#055301" label="[05:53:01]">&lt;xentrac&gt;</a></span><span class="message">are you familiar with debugging segfaults in general?</span></div><div class="line" id="055757"><span class="nick" style="color:#8dd3c7"><a href="#055757" label="[05:57:57]">&lt;fossy&gt;</a></span><span class="message">nup</span></div><div class="line" id="055804"><span class="nick" style="color:#8dd3c7"><a href="#055804" label="[05:58:04]">&lt;fossy&gt;</a></span><span class="message">I would start with gdb</span></div><div class="line" id="055828"><span class="nick" style="color:#8dd3c7"><a href="#055828" label="[05:58:28]">&lt;fossy&gt;</a></span><span class="message">but even with -g it dosent want to give me debugging symbols :x</span></div><div class="line" id="055843"><span class="nick" style="color:#8dd3c7"><a href="#055843" label="[05:58:43]">&lt;fossy&gt;</a></span><span class="message">(compiled with -g)</span></div><div class="line" id="055943"><span class="nick" style="color:#6b8072"><a href="#055943" label="[05:59:43]">&lt;xentrac&gt;</a></span><span class="message">you can run gdb without debugging symbols</span></div><div class="line" id="060002"><span class="nick" style="color:#6b8072"><a href="#060002" label="[06:00:02]">&lt;xentrac&gt;</a></span><span class="message">have you gotten it to segfault under GDB yet?  (or, do you have a core file?)</span></div><div class="line" id="060908"><span class="nick" style="color:#8dd3c7"><a href="#060908" label="[06:09:08]">&lt;fossy&gt;</a></span><span class="message">ok, i'm a real noob here</span></div><div class="line" id="060913"><span class="nick" style="color:#8dd3c7"><a href="#060913" label="[06:09:13]">&lt;fossy&gt;</a></span><span class="message">what's a core file</span></div><div class="line" id="060944"><span class="nick" style="color:#8dd3c7"><a href="#060944" label="[06:09:44]">&lt;fossy&gt;</a></span><span class="message">oh is that a core dump</span></div><div class="line" id="061002"><span class="nick" style="color:#8dd3c7"><a href="#061002" label="[06:10:02]">&lt;fossy&gt;</a></span><span class="message">xentrac: i'll go and do some research and come back with something.</span></div><div class="line" id="061015"><span class="nick" style="color:#8dd3c7"><a href="#061015" label="[06:10:15]">&lt;fossy&gt;</a></span><span class="message">because i don't have a clue how to do core files and the like</span></div><div class="line" id="061023"><span class="nick" style="color:#8dd3c7"><a href="#061023" label="[06:10:23]">&lt;fossy&gt;</a></span><span class="message">reading this and trying some things out (<a rel="nofollow" href="https://jvns.ca/blog/2018/04/28/debugging-a-segfault-on-linux/">https://jvns.ca/blog/2018/04/28/debugging-a-segfault-on-linux/</a>) </span></div><div class="line" id="062336"><span class="nick" style="color:#6b8072"><a href="#062336" label="[06:23:36]">&lt;xentrac&gt;</a></span><span class="message">yes, a core dump is a core file</span></div><div class="line" id="062356"><span class="nick" style="color:#6b8072"><a href="#062356" label="[06:23:56]">&lt;xentrac&gt;</a></span><span class="message">julia is dependable!</span></div><div class="line" id="062432"><span class="nick" style="color:#6b8072"><a href="#062432" label="[06:24:32]">&lt;xentrac&gt;</a></span><span class="message">I didn't know valgrind could give you a stack trace; that is useful</span></div><div class="line" id="072446"><span class="nick" style="color:#8dd3c7"><a href="#072446" label="[07:24:46]">&lt;fossy&gt;</a></span><span class="message">oh, crap</span></div><div class="line" id="080301"><span class="nick" style="color:#8dd3c7"><a href="#080301" label="[08:03:01]">&lt;fossy&gt;</a></span><span class="message">oh wtf</span></div><div class="line" id="080317"><span class="nick" style="color:#8dd3c7"><a href="#080317" label="[08:03:17]">&lt;fossy&gt;</a></span><span class="message">ok so i had somehow got my bin/mes in a very strange state that made segfaulting binaries</span></div><div class="line" id="080329"><span class="nick" style="color:#8dd3c7"><a href="#080329" label="[08:03:29]">&lt;fossy&gt;</a></span><span class="message">so i just went back to step 0 with mes-seed and build back up</span></div><div class="line" id="080337"><span class="nick" style="color:#80b1d3"><a href="#080337" label="[08:03:37]">*</a></span><span class="message">fossy hopes i get a tinycc compile working now</span></div><div class="line" id="121505"><span class="nick" style="color:#6d2462"><a href="#121505" label="[12:15:05]">&lt;janneke&gt;</a></span><span class="message">fossy: &quot;it worked before&quot; is where i have been so many times, esp. with cross-builds</span></div><div class="line" id="121532"><span class="nick" style="color:#6d2462"><a href="#121532" label="[12:15:32]">&lt;janneke&gt;</a></span><span class="message">it's a big reason for me to only want to build such things in guix</span></div><div class="line" id="121919"><span class="nick" style="color:#2e2a4a"><a href="#121919" label="[12:19:19]">&lt;oriansj&gt;</a></span><span class="message">janneke: and a big reason why I made all stage0 pieces zero knowledge builds. (nothing about the host system or environment change the output in any way)</span></div><div class="line" id="122618"><span class="nick" style="color:#6d2462"><a href="#122618" label="[12:26:18]">&lt;janneke&gt;</a></span><span class="message">smart</span></div><div class="line" id="122850"><span class="nick" style="color:#2e2a4a"><a href="#122850" label="[12:28:50]">&lt;oriansj&gt;</a></span><span class="message">I like to think of it as the lazy solution</span></div><div class="line" id="122937"><span class="nick" style="color:#2e2a4a"><a href="#122937" label="[12:29:37]">&lt;oriansj&gt;</a></span><span class="message">Less work to build, less work to cross-build and less things to cause me the developer issues</span></div><div class="line" id="130054"><span class="nick" style="color:#6d2462"><a href="#130054" label="[13:00:54]">&lt;janneke&gt;</a></span><span class="message">yes, i am not saying that i won't work on non-guix implementations, i just would not want to do my first/only implementation in an fluid environment</span></div><div class="line" id="162323"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="162634"><span class="nick" style="color:#234e69"><a href="#162634" label="[16:26:34]">&lt;civodul&gt;</a></span><span class="message">hey there!</span></div><div class="line" id="162639"><span class="nick" style="color:#234e69"><a href="#162639" label="[16:26:39]">&lt;civodul&gt;</a></span><span class="message">to whom it may concern: <a rel="nofollow" href="https://github.com/guillep/PharoBootstrap">https://github.com/guillep/PharoBootstrap</a> </span></div><div class="line" id="162642"><span class="nick" style="color:#234e69"><a href="#162642" label="[16:26:42]">&lt;civodul&gt;</a></span><span class="message">:-)</span></div><div class="line" id="191528"><span class="nick" style="color:#6c3d55"><a href="#191528" label="[19:15:28]">&lt;gio&gt;</a></span><span class="message">oriansj: I added links to Boostrappable project and to your collection of talks here: <a rel="nofollow" href="https://gitlab.com/giomasce/asmc">https://gitlab.com/giomasce/asmc</a>  and <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/.">https://gitlab.com/giomasce/nbs/.</a>  Is that ok?</span></div><div class="line" id="195715"><span class="nick" style="color:#6b8072"><a href="#195715" label="[19:57:15]">&lt;xentrac&gt;</a></span><span class="message">this is an interesting bootstrapping project: <a rel="nofollow" href="https://slawekk.wordpress.com/2019/11/10/lean-and-metamath-zero/">https://slawekk.wordpress.com/2019/11/10/lean-and-metamath-zero/</a> </span></div><div class="line" id="195803"><span class="nick" style="color:#6b8072"><a href="#195803" label="[19:58:03]">&lt;xentrac&gt;</a></span><span class="message">a different approach to verifying binaries</span></div><div class="line" id="204944"><span class="nick" style="color:#8dd3c7"><a href="#204944" label="[20:49:44]">&lt;fossy&gt;</a></span><span class="message">janneke: unfortunately the whole point of this project is trying to get it to always Just Work in a fluid environment with no external dependencies</span></div><div class="line" id="205323"><span class="nick" style="color:#6d2462"><a href="#205323" label="[20:53:23]">&lt;janneke&gt;</a></span><span class="message">fossy: how is that unfortunate?</span></div><div class="line" id="205401"><span class="nick" style="color:#8dd3c7"><a href="#205401" label="[20:54:01]">&lt;fossy&gt;</a></span><span class="message">well its difficult to make sure it works everywhere, with no external dependencies</span></div><div class="line" id="205410"><span class="nick" style="color:#8dd3c7"><a href="#205410" label="[20:54:10]">&lt;fossy&gt;</a></span><span class="message">just when I've got it working on my machine</span></div><div class="line" id="205438"><span class="nick" style="color:#8dd3c7"><a href="#205438" label="[20:54:38]">&lt;fossy&gt;</a></span><span class="message">I try it somewherre else and find just that one external dependency that crawled in</span></div><div class="line" id="205505"><span class="nick" style="color:#8dd3c7"><a href="#205505" label="[20:55:05]">&lt;fossy&gt;</a></span><span class="message">and then often its a lot of debugging to fix</span></div><div class="line" id="210021"><span class="nick" style="color:#6b8072"><a href="#210021" label="[21:00:21]">&lt;xentrac&gt;</a></span><span class="message"> <a rel="nofollow" href="http://us.metamath.org/mpeuni/a2d.html">http://us.metamath.org/mpeuni/a2d.html</a> </span></div><div class="line" id="210023"><span class="nick" style="color:#6b8072"><a href="#210023" label="[21:00:23]">&lt;xentrac&gt;</a></span><span class="message">oops</span></div><div class="line" id="210025"><span class="nick" style="color:#6b8072"><a href="#210025" label="[21:00:25]">&lt;xentrac&gt;</a></span><span class="message">sorry</span></div><div class="line" id="210046"><span class="nick" style="color:#6b8072"><a href="#210046" label="[21:00:46]">&lt;xentrac&gt;</a></span><span class="message">I was looking at &lt;<a rel="nofollow" href="https://en.wikipedia.org/wiki/What_the_Tortoise_Said_to_Achilles">https://en.wikipedia.org/wiki/What_the_Tortoise_Said_to_Achilles</a>&gt;  with relation to &quot;no external dependencies&quot;</span></div><div class="line" id="210239"><span class="nick" style="color:#6d2462"><a href="#210239" label="[21:02:39]">&lt;janneke&gt;</a></span><span class="message">fossy: i don't think the whole point of bootstrappable is to make it work everywhere</span></div><div class="line" id="210257"><span class="nick" style="color:#6d2462"><a href="#210257" label="[21:02:57]">&lt;janneke&gt;</a></span><span class="message">i think the whole point is to eliminate the trusted computing base</span></div><div class="line" id="210307"><span class="nick" style="color:#6d2462"><a href="#210307" label="[21:03:07]">&lt;janneke&gt;</a></span><span class="message">and be reasonably certain we did so</span></div><div class="line" id="210332"><span class="nick" style="color:#6d2462"><a href="#210332" label="[21:03:32]">&lt;janneke&gt;</a></span><span class="message">it would be nice if most people would be able to reproduce it, and use it</span></div><div class="line" id="210348"><span class="nick" style="color:#6d2462"><a href="#210348" label="[21:03:48]">&lt;janneke&gt;</a></span><span class="message">and it would be nice if it would not break down when you change a tiny thing</span></div><div class="line" id="210509"><span class="nick" style="color:#6d2462"><a href="#210509" label="[21:05:09]">&lt;janneke&gt;</a></span><span class="message">but running a bootstrap in a &quot;dirty&quot; or uncontrolled environment is a bad idea when you want to have the guarantee that you are considering all dependencies when building a software</span></div><div class="line" id="211004"><span class="nick" style="color:#6d2462"><a href="#211004" label="[21:10:04]">&lt;janneke&gt;</a></span><span class="message">but that's just my idea, bootstrappable can be something else to everyone</span></div><div class="line" id="211933"><span class="nick" style="color:#8dd3c7"><a href="#211933" label="[21:19:33]">&lt;fossy&gt;</a></span><span class="message">janneke: well that is a reasonable point</span></div><div class="line" id="211946"><span class="nick" style="color:#8dd3c7"><a href="#211946" label="[21:19:46]">&lt;fossy&gt;</a></span><span class="message">eventually my idea would be for this to run in an initramfs</span></div><div class="line" id="212021"><span class="nick" style="color:#8dd3c7"><a href="#212021" label="[21:20:21]">&lt;fossy&gt;</a></span><span class="message">and that would elimate the &quot;has to work everywhere&quot; issue and also elimates the finding of external dependencies problem</span></div><div class="line" id="212043"><span class="nick" style="color:#8dd3c7"><a href="#212043" label="[21:20:43]">&lt;fossy&gt;</a></span><span class="message">maybe i might backtrack and make this initramfs /first/ and then continue development with the initramfs</span></div><div class="line" id="212254"><span class="nick" style="color:#6d2462"><a href="#212254" label="[21:22:54]">&lt;janneke&gt;</a></span><span class="message">yes, well i'm just saying that adding noise is going to cause pain, esp. when doing something like cross building, which is similar to what we are doing</span></div><div class="line" id="212320"><span class="nick" style="color:#6d2462"><a href="#212320" label="[21:23:20]">&lt;janneke&gt;</a></span><span class="message">until we have built glibc, there are the mes c library include headers, there is the mes c library</span></div><div class="line" id="212405"><span class="nick" style="color:#6d2462"><a href="#212405" label="[21:24:05]">&lt;janneke&gt;</a></span><span class="message">it is very probable that somewhere in the build systems of the packages that lead up to building those, you find hardcoded /usr/include of something</span></div><div class="line" id="212427"><span class="nick" style="color:#6d2462"><a href="#212427" label="[21:24:27]">&lt;janneke&gt;</a></span><span class="message">that may work, but it may give unexpected results</span></div><div class="line" id="214333"><span class="nick" style="color:#d9d9d9"><a href="#214333" label="[21:43:33]">&lt;dddddd&gt;</a></span><span class="message">wow! ugly commits in the talks repo. Bots commiting? What can go wrong? (;</span></div><div class="line" id="214947"><span class="nick" style="color:#8dd3c7"><a href="#214947" label="[21:49:47]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><br /></div></body></html>