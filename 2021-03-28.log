<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-03-28.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002349"><span class="nick" style="color:#8dd3c7"><a href="#002349" label="[00:23:49]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, I think I found tcc patch to deal with static inside []</span></div><div class="line" id="002355"><span class="nick" style="color:#8dd3c7"><a href="#002355" label="[00:23:55]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://repo.or.cz/tinycc.git/commit/ef668aae1ee2b8bc904c50a13bf58df613b2f0b0">https://repo.or.cz/tinycc.git/commit/ef668aae1ee2b8bc904c50a13bf58df613b2f0b0</a> </span></div><div class="line" id="030837"><span class="nick" style="color:#2e2a4a"><a href="#030837" label="[03:08:37]">&lt;OriansJ&gt;</a></span><span class="message">up to step 39 has been documented.</span></div><div class="line" id="031017"><span class="nick" style="color:#2e2a4a"><a href="#031017" label="[03:10:17]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.dot">https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.dot</a>  ( and for those without graphiz installed <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.pdf">https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.pdf</a>  )</span></div><div class="line" id="032103"><span class="nick" style="color:#6b8072"><a href="#032103" label="[03:21:03]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: oh, nice</span></div><div class="line" id="032107"><span class="nick" style="color:#6b8072"><a href="#032107" label="[03:21:07]">&lt;fossy&gt;</a></span><span class="message">feel free to add to tcc-patched</span></div><div class="line" id="034559"><span class="nick" style="color:#80b1d3"><a href="#034559" label="[03:45:59]">&lt;Hagfish&gt;</a></span><span class="message">a work of art!</span></div><div class="line" id="034621"><span class="nick" style="color:#80b1d3"><a href="#034621" label="[03:46:21]">&lt;Hagfish&gt;</a></span><span class="message">OriansJ: you should sell the NFT of that ;)</span></div><div class="line" id="034732"><span class="nick" style="color:#80b1d3"><a href="#034732" label="[03:47:32]">&lt;Hagfish&gt;</a></span><span class="message">seriously though, did you have any more inspiration about picking subgraphs of it?</span></div><div class="line" id="034938"><span class="nick" style="color:#80b1d3"><a href="#034938" label="[03:49:38]">&lt;Hagfish&gt;</a></span><span class="message">maybe you could use coloured background regions to represent the &quot;build environment&quot; that a build occurs on (if that can be meaningfully separated from the idea of a dependency)</span></div><div class="line" id="035003"><span class="nick" style="color:#2e2a4a"><a href="#035003" label="[03:50:03]">&lt;OriansJ&gt;</a></span><span class="message">Hagfish: yes however I'm keeping it simple until I get all the steps documented.</span></div><div class="line" id="035009"><span class="nick" style="color:#80b1d3"><a href="#035009" label="[03:50:09]">&lt;Hagfish&gt;</a></span><span class="message">good thinking</span></div><div class="line" id="035017"><span class="nick" style="color:#80b1d3"><a href="#035017" label="[03:50:17]">&lt;Hagfish&gt;</a></span><span class="message">i look forward to seeing what you come up with next</span></div><div class="line" id="035421"><span class="nick" style="color:#2e2a4a"><a href="#035421" label="[03:54:21]">&lt;OriansJ&gt;</a></span><span class="message">up next is the next autotools/autoconf cluster</span></div><div class="line" id="043214"><span class="nick" style="color:#2e2a4a"><a href="#043214" label="[04:32:14]">&lt;OriansJ&gt;</a></span><span class="message">at this point I am probably missing dependencies and have a few false dependencies but I am close enough to being done that, I'll fix it later unless someone beats me to it.</span></div><div class="line" id="044012"><span class="nick" style="color:#2e2a4a"><a href="#044012" label="[04:40:12]">&lt;OriansJ&gt;</a></span><span class="message">and finally all 66 steps are recorded (with some possible errors but should be easy to fix)</span></div><div class="line" id="044223"><span class="nick" style="color:#2e2a4a"><a href="#044223" label="[04:42:23]">&lt;OriansJ&gt;</a></span><span class="message">darn near 1/2 the graph is just dealing with autoconf and automake</span></div><div class="line" id="044715"><span class="nick" style="color:#2e2a4a"><a href="#044715" label="[04:47:15]">&lt;OriansJ&gt;</a></span><span class="message">Something tells me when I get M3 working, that graph is going to be ripped down into something much smaller.</span></div><div class="line" id="045252"><span class="nick" style="color:#80b1d3"><a href="#045252" label="[04:52:52]">&lt;Hagfish&gt;</a></span><span class="message">66 steps, like the books of the bible</span></div><div class="line" id="045312"><span class="nick" style="color:#80b1d3"><a href="#045312" label="[04:53:12]">&lt;Hagfish&gt;</a></span><span class="message">but yeah, M3 will have an interesting effect on that graph</span></div><div class="line" id="050558"><span class="nick" style="color:#2e2a4a"><a href="#050558" label="[05:05:58]">&lt;OriansJ&gt;</a></span><span class="message">stikonas[m]: sorry for the delay (I have merged your pull request)</span></div><div class="line" id="120705"><span class="nick" style="color:#8dd3c7"><a href="#120705" label="[12:07:05]">&lt;stikonas&gt;</a></span><span class="message">ok, xz builds fine with patched tcc</span></div><div class="line" id="120721"><span class="nick" style="color:#8dd3c7"><a href="#120721" label="[12:07:21]">&lt;stikonas&gt;</a></span><span class="message">(that patch was useful anyway, since it allows to drop musl patch)</span></div><div class="line" id="121452"><span class="nick" style="color:#6d2462"><a href="#121452" label="[12:14:52]">&lt;bauen1&gt;</a></span><span class="message">I've also wondered if (maybe once you have stow) it would make sense to build components in their own chroot ? that would require some copying or bind mounts and /sbin/chroot but then you have a clear list of dependencies not just &quot;everything so far&quot;</span></div><div class="line" id="121739"><span class="nick" style="color:#8dd3c7"><a href="#121739" label="[12:17:39]">&lt;stikonas&gt;</a></span><span class="message">bauen1: yeah, possibly...</span></div><div class="line" id="121851"><span class="nick" style="color:#8dd3c7"><a href="#121851" label="[12:18:51]">&lt;stikonas&gt;</a></span><span class="message">chroot is probably easy to add to 2nd build of coreutils</span></div><div class="line" id="121905"><span class="nick" style="color:#8dd3c7"><a href="#121905" label="[12:19:05]">&lt;stikonas&gt;</a></span><span class="message">(the one that is built with musl rather than meslibc)</span></div><div class="line" id="121918"><span class="nick" style="color:#6d2462"><a href="#121918" label="[12:19:18]">&lt;bauen1&gt;</a></span><span class="message">that would also put additional requirements into the kernel, but from my experience building a proper vfs (with mount support) should make adding chroot support comparatively easy</span></div><div class="line" id="121934"><span class="nick" style="color:#6d2462"><a href="#121934" label="[12:19:34]">&lt;bauen1&gt;</a></span><span class="message">and you can always copy everything over (but at some point memory will become an issue if you continue down that road)</span></div><div class="line" id="122000"><span class="nick" style="color:#8dd3c7"><a href="#122000" label="[12:20:00]">&lt;stikonas&gt;</a></span><span class="message">yeah, we are already using a fair bit of memory</span></div><div class="line" id="122013"><span class="nick" style="color:#8dd3c7"><a href="#122013" label="[12:20:13]">&lt;stikonas&gt;</a></span><span class="message">we can reclaim some though</span></div><div class="line" id="122019"><span class="nick" style="color:#8dd3c7"><a href="#122019" label="[12:20:19]">&lt;stikonas&gt;</a></span><span class="message">by cleaning build directories</span></div><div class="line" id="122046"><span class="nick" style="color:#8dd3c7"><a href="#122046" label="[12:20:46]">&lt;stikonas&gt;</a></span><span class="message">also by not doing debug builds...</span></div><div class="line" id="122053"><span class="nick" style="color:#6d2462"><a href="#122053" label="[12:20:53]">&lt;bauen1&gt;</a></span><span class="message">combine that with stow and basically have a package manager with manual dependency resolution lol</span></div><div class="line" id="122103"><span class="nick" style="color:#6d2462"><a href="#122103" label="[12:21:03]">&lt;bauen1&gt;</a></span><span class="message">*and you</span></div><div class="line" id="122126"><span class="nick" style="color:#6d2462"><a href="#122126" label="[12:21:26]">&lt;bauen1&gt;</a></span><span class="message">is there a way i can rerun rootfs and have it restart at the last failed step ?</span></div><div class="line" id="122142"><span class="nick" style="color:#8dd3c7"><a href="#122142" label="[12:21:42]">&lt;stikonas&gt;</a></span><span class="message">bauen1: not at the moment</span></div><div class="line" id="122144"><span class="nick" style="color:#6d2462"><a href="#122144" label="[12:21:44]">&lt;bauen1&gt;</a></span><span class="message">or at least skip the part before &quot;after&quot; ?</span></div><div class="line" id="122153"><span class="nick" style="color:#8dd3c7"><a href="#122153" label="[12:21:53]">&lt;stikonas&gt;</a></span><span class="message">there is a way to skip that part though</span></div><div class="line" id="122203"><span class="nick" style="color:#8dd3c7"><a href="#122203" label="[12:22:03]">&lt;stikonas&gt;</a></span><span class="message">you have to cherry-pick pder/overlay commit</span></div><div class="line" id="122239"><span class="nick" style="color:#8dd3c7"><a href="#122239" label="[12:22:39]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/pder/live-bootstrap/tree/overlay">https://github.com/pder/live-bootstrap/tree/overlay</a> </span></div><div class="line" id="122258"><span class="nick" style="color:#8dd3c7"><a href="#122258" label="[12:22:58]">&lt;stikonas&gt;</a></span><span class="message">it basically starts with tcc</span></div><div class="line" id="122410"><span class="nick" style="color:#8dd3c7"><a href="#122410" label="[12:24:10]">&lt;stikonas&gt;</a></span><span class="message">and if step fails, I often chroot inside and do some manual runs of that step</span></div><div class="line" id="122435"><span class="nick" style="color:#8dd3c7"><a href="#122435" label="[12:24:35]">&lt;stikonas&gt;</a></span><span class="message">something like bash -c 'set -e; export PREFIX=/after; . helpers.sh; build ...'</span></div><div class="line" id="122508"><span class="nick" style="color:#6d2462"><a href="#122508" label="[12:25:08]">&lt;bauen1&gt;</a></span><span class="message">yes that's what i'm trying to do with musls configure</span></div><div class="line" id="122520"><span class="nick" style="color:#6d2462"><a href="#122520" label="[12:25:20]">&lt;bauen1&gt;</a></span><span class="message">but it seems to succeed even if the step inside run.sh fails :D</span></div><div class="line" id="122655"><span class="nick" style="color:#6d2462"><a href="#122655" label="[12:26:55]">&lt;bauen1&gt;</a></span><span class="message">maybe i had my chroot setup in a slightly different way</span></div><div class="line" id="122731"><span class="nick" style="color:#8dd3c7"><a href="#122731" label="[12:27:31]">&lt;stikonas&gt;</a></span><span class="message">is that with user ns?</span></div><div class="line" id="122748"><span class="nick" style="color:#6d2462"><a href="#122748" label="[12:27:48]">&lt;bauen1&gt;</a></span><span class="message">yes</span></div><div class="line" id="122759"><span class="nick" style="color:#6d2462"><a href="#122759" label="[12:27:59]">&lt;bauen1&gt;</a></span><span class="message">i should try qemu or normal chroot probably</span></div><div class="line" id="122812"><span class="nick" style="color:#8dd3c7"><a href="#122812" label="[12:28:12]">&lt;stikonas&gt;</a></span><span class="message">well, that will work</span></div><div class="line" id="122825"><span class="nick" style="color:#8dd3c7"><a href="#122825" label="[12:28:25]">&lt;stikonas&gt;</a></span><span class="message">at least if you use 64 bit kernel</span></div><div class="line" id="122844"><span class="nick" style="color:#8dd3c7"><a href="#122844" label="[12:28:44]">&lt;stikonas&gt;</a></span><span class="message">at some point it would be good to check if hashes match with 32 bit kernel</span></div><div class="line" id="122926"><span class="nick" style="color:#6d2462"><a href="#122926" label="[12:29:26]">&lt;bauen1&gt;</a></span><span class="message">does rootfs.sh currently target i386 or x86_64 ?</span></div><div class="line" id="123014"><span class="nick" style="color:#8dd3c7"><a href="#123014" label="[12:30:14]">&lt;stikonas&gt;</a></span><span class="message">i386</span></div><div class="line" id="123033"><span class="nick" style="color:#8dd3c7"><a href="#123033" label="[12:30:33]">&lt;stikonas&gt;</a></span><span class="message">but we test on 64 bit kernels...</span></div><div class="line" id="123047"><span class="nick" style="color:#8dd3c7"><a href="#123047" label="[12:30:47]">&lt;stikonas&gt;</a></span><span class="message">well, it shouldn't matter until at least autotools</span></div><div class="line" id="123053"><span class="nick" style="color:#6d2462"><a href="#123053" label="[12:30:53]">&lt;bauen1&gt;</a></span><span class="message">that's basically my setup</span></div><div class="line" id="123103"><span class="nick" style="color:#6d2462"><a href="#123103" label="[12:31:03]">&lt;bauen1&gt;</a></span><span class="message">does the chroot require /proc or /sys ?</span></div><div class="line" id="123111"><span class="nick" style="color:#8dd3c7"><a href="#123111" label="[12:31:11]">&lt;stikonas&gt;</a></span><span class="message">there with configure I tend to specify --build=i386-unknown-linux-gnu but it's possible that I missed it somewhere</span></div><div class="line" id="123119"><span class="nick" style="color:#8dd3c7"><a href="#123119" label="[12:31:19]">&lt;stikonas&gt;</a></span><span class="message">bauen1: no, it does not</span></div><div class="line" id="123139"><span class="nick" style="color:#8dd3c7"><a href="#123139" label="[12:31:39]">&lt;stikonas&gt;</a></span><span class="message">bauen1: well, &quot;./rootfs chroot&quot; can set up correct chroot</span></div><div class="line" id="123155"><span class="nick" style="color:#8dd3c7"><a href="#123155" label="[12:31:55]">&lt;stikonas&gt;</a></span><span class="message">there isn't even /proc or /sys folder inside there</span></div><div class="line" id="123208"><span class="nick" style="color:#8dd3c7"><a href="#123208" label="[12:32:08]">&lt;stikonas&gt;</a></span><span class="message">even /dev is missing, but we mkdir /dev just before musl</span></div><div class="line" id="123233"><span class="nick" style="color:#6d2462"><a href="#123233" label="[12:32:33]">&lt;bauen1&gt;</a></span><span class="message">right, currently i do that before even reaching musl because you can't mknod inside a user ns</span></div><div class="line" id="123242"><span class="nick" style="color:#6d2462"><a href="#123242" label="[12:32:42]">&lt;bauen1&gt;</a></span><span class="message">so that could be part of my issue</span></div><div class="line" id="123305"><span class="nick" style="color:#6d2462"><a href="#123305" label="[12:33:05]">&lt;bauen1&gt;</a></span><span class="message">also doesn't the chroot &quot;leak&quot; the hosts PATH ?</span></div><div class="line" id="123313"><span class="nick" style="color:#8dd3c7"><a href="#123313" label="[12:33:13]">&lt;stikonas&gt;</a></span><span class="message">I don't think musl actually needs /dev/null</span></div><div class="line" id="123327"><span class="nick" style="color:#8dd3c7"><a href="#123327" label="[12:33:27]">&lt;stikonas&gt;</a></span><span class="message">it only fails configure step if /dev is missing altogether</span></div><div class="line" id="123335"><span class="nick" style="color:#8dd3c7"><a href="#123335" label="[12:33:35]">&lt;stikonas&gt;</a></span><span class="message">bauen1: no, it shouldn't leak</span></div><div class="line" id="123354"><span class="nick" style="color:#6d2462"><a href="#123354" label="[12:33:54]">&lt;bauen1&gt;</a></span><span class="message">it does pipe /dev/null into temporary files to create them</span></div><div class="line" id="123406"><span class="nick" style="color:#8dd3c7"><a href="#123406" label="[12:34:06]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="123413"><span class="nick" style="color:#8dd3c7"><a href="#123413" label="[12:34:13]">&lt;stikonas&gt;</a></span><span class="message">so that fails if /dev is missing</span></div><div class="line" id="123548"><span class="nick" style="color:#6d2462"><a href="#123548" label="[12:35:48]">&lt;bauen1&gt;</a></span><span class="message">it's probably gonna be something really simple and stupid</span></div><div class="line" id="124709"><span class="nick" style="color:#8dd3c7"><a href="#124709" label="[12:47:09]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, xz should be ready for review <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/77">https://github.com/fosslinux/live-bootstrap/pull/77</a> </span></div><div class="line" id="132324"><span class="nick" style="color:#6d2462"><a href="#132324" label="[13:23:24]">&lt;bauen1&gt;</a></span><span class="message">and i think musl 1.1.24 just worked</span></div><div class="line" id="132338"><span class="nick" style="color:#6d2462"><a href="#132338" label="[13:23:38]">&lt;bauen1&gt;</a></span><span class="message">wtf</span></div><div class="line" id="132418"><span class="nick" style="color:#6d2462"><a href="#132418" label="[13:24:18]">&lt;bauen1&gt;</a></span><span class="message">OriansJ: perhaps you could also make an svg of the .dot graph available, that is better if you want to zoom in</span></div><div class="line" id="132913"><span class="nick" style="color:#6d2462"><a href="#132913" label="[13:29:13]">&lt;bauen1&gt;</a></span><span class="message">or not</span></div><div class="line" id="133406"><span class="nick" style="color:#6d2462"><a href="#133406" label="[13:34:06]">&lt;bauen1&gt;</a></span><span class="message">i think it's actually failing `build musl-1.1.24 binutils-rebuild.sh checksums/pass3 patches-pass3`</span></div><div class="line" id="133433"><span class="nick" style="color:#6d2462"><a href="#133433" label="[13:34:33]">&lt;bauen1&gt;</a></span><span class="message">but running that step from my manual chroot compiles successfully ._.</span></div><div class="line" id="140043"><span class="nick" style="color:#2e2a4a"><a href="#140043" label="[14:00:43]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.svg">https://github.com/oriansj/talk-notes/blob/master/live-bootstrap.svg</a> </span></div><div class="line" id="140150"><span class="nick" style="color:#6d2462"><a href="#140150" label="[14:01:50]">&lt;bauen1&gt;</a></span><span class="message">huh doesn't look like github likes svgs ? <a rel="nofollow" href="https://raw.githubusercontent.com/oriansj/talk-notes/master/live-bootstrap.svg">https://raw.githubusercontent.com/oriansj/talk-notes/master/live-bootstrap.svg</a>  gives me xml errors ...</span></div><div class="line" id="140156"><span class="nick" style="color:#6d2462"><a href="#140156" label="[14:01:56]">&lt;bauen1&gt;</a></span><span class="message">in any case i also have it locally so no big issue</span></div><div class="line" id="140310"><span class="nick" style="color:#2e2a4a"><a href="#140310" label="[14:03:10]">&lt;OriansJ&gt;</a></span><span class="message">built with: cat live-bootstrap.dot | dot -Tsvgz &gt;| live-bootstrap.svg</span></div><div class="line" id="140407"><span class="nick" style="color:#2e2a4a"><a href="#140407" label="[14:04:07]">&lt;OriansJ&gt;</a></span><span class="message">sxiv doesn't like it either but mirage does</span></div><div class="line" id="140410"><span class="nick" style="color:#234e69"><a href="#140410" label="[14:04:10]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: bauen1: /proc or /sys is not needed, see ./rootfs.sh minikernel</span></div><div class="line" id="140536"><span class="nick" style="color:#8dd3c7"><a href="#140536" label="[14:05:36]">&lt;stikonas&gt;</a></span><span class="message">even locally, somehow I find it easier to zoom into PDFs with pdf viewer than into svg with image viewers</span></div><div class="line" id="140630"><span class="nick" style="color:#234e69"><a href="#140630" label="[14:06:30]">&lt;gforce_de1977&gt;</a></span><span class="message">at the very moment live-bootstrap fails for me: <a rel="nofollow" href="http://intercity-vpn.de/live-bootstrap-3bf5d4152d4d59ee4d420381d2c7d03fda8db339.txt">http://intercity-vpn.de/live-bootstrap-3bf5d4152d4d59ee4d420381d2c7d03fda8db339.txt</a> </span></div><div class="line" id="140641"><span class="nick" style="color:#8dd3c7"><a href="#140641" label="[14:06:41]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: by the way, all perl's are miniperl up to 5.005</span></div><div class="line" id="140645"><span class="nick" style="color:#234e69"><a href="#140645" label="[14:06:45]">&lt;gforce_de1977&gt;</a></span><span class="message">but i will investigate deeper, maybe again a RAM issue</span></div><div class="line" id="140709"><span class="nick" style="color:#8dd3c7"><a href="#140709" label="[14:07:09]">&lt;stikonas&gt;</a></span><span class="message">In 5.6 I started statically building some modules (I think not all, only those that are needed by automake)</span></div><div class="line" id="140717"><span class="nick" style="color:#234e69"><a href="#140717" label="[14:07:17]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: you can zoom into SVG with every browser?</span></div><div class="line" id="140733"><span class="nick" style="color:#8dd3c7"><a href="#140733" label="[14:07:33]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe I didn't try browsers, just normal image viewers</span></div><div class="line" id="140749"><span class="nick" style="color:#8dd3c7"><a href="#140749" label="[14:07:49]">&lt;stikonas&gt;</a></span><span class="message">and okular with pdf worked better for me...</span></div><div class="line" id="140802"><span class="nick" style="color:#2e2a4a"><a href="#140802" label="[14:08:02]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: thank you, I'll update accordingly</span></div><div class="line" id="140822"><span class="nick" style="color:#8dd3c7"><a href="#140822" label="[14:08:22]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: yeah, it might be lack of space...</span></div><div class="line" id="140906"><span class="nick" style="color:#8dd3c7"><a href="#140906" label="[14:09:06]">&lt;stikonas&gt;</a></span><span class="message">I just didn't bother with perl modules until we actually needed them</span></div><div class="line" id="140921"><span class="nick" style="color:#8dd3c7"><a href="#140921" label="[14:09:21]">&lt;stikonas&gt;</a></span><span class="message">they are not too hard to build, but still makefile is significantly longer</span></div><div class="line" id="141026"><span class="nick" style="color:#8dd3c7"><a href="#141026" label="[14:10:26]">&lt;stikonas&gt;</a></span><span class="message">also, I'm not sure we actually use coreutils 6.10 that much...</span></div><div class="line" id="141033"><span class="nick" style="color:#8dd3c7"><a href="#141033" label="[14:10:33]">&lt;stikonas&gt;</a></span><span class="message">it's mostly 5.0</span></div><div class="line" id="141115"><span class="nick" style="color:#8dd3c7"><a href="#141115" label="[14:11:15]">&lt;stikonas&gt;</a></span><span class="message">coreutils 6 only has very few things built, sha256sum, date and mktemp</span></div><div class="line" id="141209"><span class="nick" style="color:#8dd3c7"><a href="#141209" label="[14:12:09]">&lt;stikonas&gt;</a></span><span class="message">mktemp is probably used during building of bash...</span></div><div class="line" id="141239"><span class="nick" style="color:#8dd3c7"><a href="#141239" label="[14:12:39]">&lt;stikonas&gt;</a></span><span class="message">date is probably not used, otherwise it would see build hashes change</span></div><div class="line" id="141332"><span class="nick" style="color:#8dd3c7"><a href="#141332" label="[14:13:32]">&lt;stikonas&gt;</a></span><span class="message">flex 2.5.11 also has bootstrap stage if I recall correctly</span></div><div class="line" id="141424"><span class="nick" style="color:#8dd3c7"><a href="#141424" label="[14:14:24]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: any reason for bash to be in eliptic box?</span></div><div class="line" id="141434"><span class="nick" style="color:#8dd3c7"><a href="#141434" label="[14:14:34]">&lt;stikonas&gt;</a></span><span class="message">instead of rectangular?</span></div><div class="line" id="141518"><span class="nick" style="color:#8dd3c7"><a href="#141518" label="[14:15:18]">&lt;stikonas&gt;</a></span><span class="message">in general that live-bootstrap.dot is now fairly accurate</span></div><div class="line" id="141656"><span class="nick" style="color:#8dd3c7"><a href="#141656" label="[14:16:56]">&lt;stikonas&gt;</a></span><span class="message">oh, a few definitely unnecessary dependencies</span></div><div class="line" id="141724"><span class="nick" style="color:#8dd3c7"><a href="#141724" label="[14:17:24]">&lt;stikonas&gt;</a></span><span class="message">musl 1.1.24 (binutils self-host) and tcc-0.9.27 (musl self-host) don't use autoconf 2.13</span></div><div class="line" id="141839"><span class="nick" style="color:#8dd3c7"><a href="#141839" label="[14:18:39]">&lt;stikonas&gt;</a></span><span class="message">binutils 2.14 needs both autoconf 2.13 and 2.12</span></div><div class="line" id="142015"><span class="nick" style="color:#8dd3c7"><a href="#142015" label="[14:20:15]">&lt;stikonas&gt;</a></span><span class="message">anyway, accurate dependencies later in the bootsrap are probably too complicated to plot</span></div><div class="line" id="144720"><span class="nick" style="color:#2e2a4a"><a href="#144720" label="[14:47:20]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: probably because I forgot to give it a box</span></div><div class="line" id="144824"><span class="nick" style="color:#2e2a4a"><a href="#144824" label="[14:48:24]">&lt;OriansJ&gt;</a></span><span class="message">but accurate dependencies in the later bootstrap are just a question of taking the time to trace them out</span></div><div class="line" id="144857"><span class="nick" style="color:#6d2462"><a href="#144857" label="[14:48:57]">&lt;bauen1&gt;</a></span><span class="message">OriansJ: or building things in chroots then you know exactly what you need</span></div><div class="line" id="144920"><span class="nick" style="color:#8dd3c7"><a href="#144920" label="[14:49:20]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's true, but it might still look too complicated in the plot</span></div><div class="line" id="144935"><span class="nick" style="color:#6d2462"><a href="#144935" label="[14:49:35]">&lt;bauen1&gt;</a></span><span class="message">oh ffs</span></div><div class="line" id="144936"><span class="nick" style="color:#8dd3c7"><a href="#144936" label="[14:49:36]">&lt;stikonas&gt;</a></span><span class="message">if everything depends on 30 things</span></div><div class="line" id="144953"><span class="nick" style="color:#6d2462"><a href="#144953" label="[14:49:53]">&lt;bauen1&gt;</a></span><span class="message">it took **too long** for me to release that not musl-1.1.24.sh is failing but binutils-rebuild.sh</span></div><div class="line" id="145004"><span class="nick" style="color:#8dd3c7"><a href="#145004" label="[14:50:04]">&lt;stikonas&gt;</a></span><span class="message">oh, that's tcc :D</span></div><div class="line" id="145021"><span class="nick" style="color:#8dd3c7"><a href="#145021" label="[14:50:21]">&lt;stikonas&gt;</a></span><span class="message">and maybe build script is a bit confusingly named</span></div><div class="line" id="145226"><span class="nick" style="color:#6d2462"><a href="#145226" label="[14:52:26]">&lt;bauen1&gt;</a></span><span class="message">yes, just slightly</span></div><div class="line" id="145253"><span class="nick" style="color:#6d2462"><a href="#145253" label="[14:52:53]">&lt;bauen1&gt;</a></span><span class="message">stikonas: but with a chroot it becomes much easier to figure out what depends on what, though direct and indirect dependencies will overlap</span></div><div class="line" id="145323"><span class="nick" style="color:#8dd3c7"><a href="#145323" label="[14:53:23]">&lt;stikonas&gt;</a></span><span class="message">we don't have many indirect dependencies...</span></div><div class="line" id="145334"><span class="nick" style="color:#8dd3c7"><a href="#145334" label="[14:53:34]">&lt;stikonas&gt;</a></span><span class="message">for now everything is built statically</span></div><div class="line" id="145348"><span class="nick" style="color:#8dd3c7"><a href="#145348" label="[14:53:48]">&lt;stikonas&gt;</a></span><span class="message">(just because we can't build libc.so)</span></div><div class="line" id="145350"><span class="nick" style="color:#6d2462"><a href="#145350" label="[14:53:50]">&lt;bauen1&gt;</a></span><span class="message">then things are even easier</span></div><div class="line" id="145424"><span class="nick" style="color:#8dd3c7"><a href="#145424" label="[14:54:24]">&lt;stikonas&gt;</a></span><span class="message">probably perl is the most common indirect dependency (due to autotools)</span></div><div class="line" id="145824"><span class="nick" style="color:#2e2a4a"><a href="#145824" label="[14:58:24]">&lt;OriansJ&gt;</a></span><span class="message">clarity through bruteforce is sometimes the best approach.</span></div><div class="line" id="145854"><span class="nick" style="color:#234e69"><a href="#145854" label="[14:58:54]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: i'am sorry, i have double checked, that we have a 32bit kernel + host and 4G RAM, but 'automake-1.6.3' still fails: <a rel="nofollow" href="http://intercity-vpn.de/live-bootstrap-3bf5d4152d4d59ee4d420381d2c7d03fda8db339.txt">http://intercity-vpn.de/live-bootstrap-3bf5d4152d4d59ee4d420381d2c7d03fda8db339.txt</a> </span></div><div class="line" id="145944"><span class="nick" style="color:#8dd3c7"><a href="#145944" label="[14:59:44]">&lt;stikonas&gt;</a></span><span class="message">let's see, that's automake stage1.sh</span></div><div class="line" id="150005"><span class="nick" style="color:#234e69"><a href="#150005" label="[15:00:05]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: i do another build now on qemu with 486 cpu enforced and another kernel and will report</span></div><div class="line" id="150016"><span class="nick" style="color:#8dd3c7"><a href="#150016" label="[15:00:16]">&lt;stikonas&gt;</a></span><span class="message">we are removing pre-generated files from tarball in that step</span></div><div class="line" id="150024"><span class="nick" style="color:#8dd3c7"><a href="#150024" label="[15:00:24]">&lt;stikonas&gt;</a></span><span class="message">I don't see why would it not work for you...</span></div><div class="line" id="150033"><span class="nick" style="color:#8dd3c7"><a href="#150033" label="[15:00:33]">&lt;stikonas&gt;</a></span><span class="message">unless some how it was not unpacked properly</span></div><div class="line" id="150036"><span class="nick" style="color:#234e69"><a href="#150036" label="[15:00:36]">&lt;gforce_de1977&gt;</a></span><span class="message">i will debug that and report</span></div><div class="line" id="150111"><span class="nick" style="color:#8dd3c7"><a href="#150111" label="[15:01:11]">&lt;stikonas&gt;</a></span><span class="message">try rerunning once...</span></div><div class="line" id="151256"><span class="nick" style="color:#6d2462"><a href="#151256" label="[15:12:56]">&lt;bauen1&gt;</a></span><span class="message">so while i'm waiting, would the following be useful: a &quot;upkg&quot; utility that is both a rudimentary package manager and chroot build tool ? it maintains the symlinks in / and a /upkg directory using stow and can be used to build more &quot;packages&quot; in a chroot when given a list of packages (with specified version), a source tree and a build script ?</span></div><div class="line" id="151334"><span class="nick" style="color:#6d2462"><a href="#151334" label="[15:13:34]">&lt;bauen1&gt;</a></span><span class="message">that would require chroot support from the kernel, and maybe bind mounts</span></div><div class="line" id="151402"><span class="nick" style="color:#6d2462"><a href="#151402" label="[15:14:02]">&lt;bauen1&gt;</a></span><span class="message">in theory it could also be used to skip various steps in the bootstrap during development more easily</span></div><div class="line" id="151446"><span class="nick" style="color:#8dd3c7"><a href="#151446" label="[15:14:46]">&lt;stikonas&gt;</a></span><span class="message">well, I guess you can try and see if it works</span></div><div class="line" id="151532"><span class="nick" style="color:#6d2462"><a href="#151532" label="[15:15:32]">&lt;bauen1&gt;</a></span><span class="message">true, getting live-bootstrap to work for me is a bit of a requirement lol</span></div><div class="line" id="151551"><span class="nick" style="color:#8dd3c7"><a href="#151551" label="[15:15:51]">&lt;stikonas&gt;</a></span><span class="message">where is it's repo?</span></div><div class="line" id="151617"><span class="nick" style="color:#6d2462"><a href="#151617" label="[15:16:17]">&lt;bauen1&gt;</a></span><span class="message">stikonas: it's not yet written</span></div><div class="line" id="151619"><span class="nick" style="color:#8dd3c7"><a href="#151619" label="[15:16:19]">&lt;stikonas&gt;</a></span><span class="message">so what failed in binutils-rebuild.sh? is that still with user-ns</span></div><div class="line" id="151621"><span class="nick" style="color:#8dd3c7"><a href="#151621" label="[15:16:21]">&lt;stikonas&gt;</a></span><span class="message">oh, I see...</span></div><div class="line" id="151640"><span class="nick" style="color:#6d2462"><a href="#151640" label="[15:16:40]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i'm not sure it could just be the line that tests / removes /dev/null i'm waiting for the build right now</span></div><div class="line" id="151642"><span class="nick" style="color:#8dd3c7"><a href="#151642" label="[15:16:42]">&lt;stikonas&gt;</a></span><span class="message">I thought maybe there is something...</span></div><div class="line" id="151713"><span class="nick" style="color:#8dd3c7"><a href="#151713" label="[15:17:13]">&lt;stikonas&gt;</a></span><span class="message">well, nobody tried running live-bootstrap without root before</span></div><div class="line" id="151730"><span class="nick" style="color:#8dd3c7"><a href="#151730" label="[15:17:30]">&lt;stikonas&gt;</a></span><span class="message">only in qemu or full chroot...</span></div><div class="line" id="151746"><span class="nick" style="color:#8dd3c7"><a href="#151746" label="[15:17:46]">&lt;stikonas&gt;</a></span><span class="message">I guess running it in rootless podman would hit the same problems that you see</span></div><div class="line" id="151918"><span class="nick" style="color:#2e2a4a"><a href="#151918" label="[15:19:18]">&lt;OriansJ&gt;</a></span><span class="message">sourceforge is not returning heirloom-devtools-070527.tar.bz2</span></div><div class="line" id="152110"><span class="nick" style="color:#8dd3c7"><a href="#152110" label="[15:21:10]">&lt;stikonas&gt;</a></span><span class="message">hmm, occasionally  that happens...</span></div><div class="line" id="152116"><span class="nick" style="color:#8dd3c7"><a href="#152116" label="[15:21:16]">&lt;stikonas&gt;</a></span><span class="message">maybe we should think about mirrors...</span></div><div class="line" id="152120"><span class="nick" style="color:#8dd3c7"><a href="#152120" label="[15:21:20]">&lt;stikonas&gt;</a></span><span class="message">I have a copy locally</span></div><div class="line" id="152125"><span class="nick" style="color:#8dd3c7"><a href="#152125" label="[15:21:25]">&lt;stikonas&gt;</a></span><span class="message">I can make them available</span></div><div class="line" id="152209"><span class="nick" style="color:#8dd3c7"><a href="#152209" label="[15:22:09]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: <a rel="nofollow" href="https://stikonas.eu/files/bootstrap/">https://stikonas.eu/files/bootstrap/</a> </span></div><div class="line" id="152329"><span class="nick" style="color:#6d2462"><a href="#152329" label="[15:23:29]">&lt;bauen1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://archive.softwareheritage.org/browse/content/c283431474fa714e1176897f4ec221d4aee6407b/">https://archive.softwareheritage.org/browse/content/c283431474fa714e1176897f4ec221d4aee6407b/</a>  should also be it</span></div><div class="line" id="152549"><span class="nick" style="color:#2e2a4a"><a href="#152549" label="[15:25:49]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: thank you but I agree with bauen1 that using software heritage as a fallback mirror if the checksums fail seem like a good idea.</span></div><div class="line" id="152612"><span class="nick" style="color:#6d2462"><a href="#152612" label="[15:26:12]">&lt;bauen1&gt;</a></span><span class="message">they also have an api <a rel="nofollow" href="https://archive.softwareheritage.org/api/1/content/sha256:9f233d8b78e4351fe9dd2d50d83958a0e5af36f54e9818521458a08e058691ba/">https://archive.softwareheritage.org/api/1/content/sha256:9f233d8b78e4351fe9dd2d50d83958a0e5af36f54e9818521458a08e058691ba/</a> </span></div><div class="line" id="152632"><span class="nick" style="color:#6d2462"><a href="#152632" label="[15:26:32]">&lt;bauen1&gt;</a></span><span class="message">OriansJ: i'm not sure if they particularely like that idea, might be worth asking first</span></div><div class="line" id="152648"><span class="nick" style="color:#6d2462"><a href="#152648" label="[15:26:48]">&lt;bauen1&gt;</a></span><span class="message">direct download link would then be <a rel="nofollow" href="https://archive.softwareheritage.org/api/1/content/sha256:9f233d8b78e4351fe9dd2d50d83958a0e5af36f54e9818521458a08e058691ba/raw/">https://archive.softwareheritage.org/api/1/content/sha256:9f233d8b78e4351fe9dd2d50d83958a0e5af36f54e9818521458a08e058691ba/raw/</a> </span></div><div class="line" id="152705"><span class="nick" style="color:#2e2a4a"><a href="#152705" label="[15:27:05]">&lt;OriansJ&gt;</a></span><span class="message">That way if someone finds something in the download, we can't be blamed because it isn't something we are hosting.</span></div><div class="line" id="153240"><span class="nick" style="color:#2e2a4a"><a href="#153240" label="[15:32:40]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: well doing it that way is certainly an option (I know guix was thinking of doing something similiar themselves a while ago)</span></div><div class="line" id="154814"><span class="nick" style="color:#2e2a4a"><a href="#154814" label="[15:48:14]">&lt;OriansJ&gt;</a></span><span class="message">hmm 498M for everything downloaded (98.2MB for just the downloaded tars; I'm betting IPFS, torrents and other distribution channels are also options</span></div><div class="line" id="155951"><span class="nick" style="color:#6d2462"><a href="#155951" label="[15:59:51]">&lt;bauen1&gt;</a></span><span class="message">so i've figured out that it gets up to the musl rebuild after binutils steps successfully, so next rebuild</span></div><div class="line" id="161651"><span class="nick" style="color:#8dd3c7"><a href="#161651" label="[16:16:51]">&lt;stikonas&gt;</a></span><span class="message">well, at this stage for distribution we need something where we can easily change the list of downloads</span></div><div class="line" id="172626"><span class="nick" style="color:#8dd3c7"><a href="#172626" label="[17:26:26]">&lt;stikonas&gt;</a></span><span class="message">oops, I managed to build  xz with tcc but it segfaults</span></div><div class="line" id="174003"><span class="nick" style="color:#8dd3c7"><a href="#174003" label="[17:40:03]">&lt;stikonas&gt;</a></span><span class="message">hopefully fixable by tweaking configure options</span></div><div class="line" id="184500"><span class="nick" style="color:#234e69"><a href="#184500" label="[18:45:00]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: i'am stuck somehow with debugging: i have an interactive BASH session and can run e.g.</span></div><div class="line" id="184519"><span class="nick" style="color:#234e69"><a href="#184519" label="[18:45:19]">&lt;gforce_de1977&gt;</a></span><span class="message">cd after &amp;&amp; . ./helpers</span></div><div class="line" id="184530"><span class="nick" style="color:#234e69"><a href="#184530" label="[18:45:30]">&lt;gforce_de1977&gt;</a></span><span class="message">build automake-1.6.3 stage1.sh</span></div><div class="line" id="184600"><span class="nick" style="color:#8dd3c7"><a href="#184600" label="[18:46:00]">&lt;stikonas&gt;</a></span><span class="message">and it's fails?</span></div><div class="line" id="184606"><span class="nick" style="color:#8dd3c7"><a href="#184606" label="[18:46:06]">&lt;stikonas&gt;</a></span><span class="message">*it</span></div><div class="line" id="184643"><span class="nick" style="color:#234e69"><a href="#184643" label="[18:46:43]">&lt;gforce_de1977&gt;</a></span><span class="message">but the error is...another?</span></div><div class="line" id="184644"><span class="nick" style="color:#234e69"><a href="#184644" label="[18:46:44]">&lt;gforce_de1977&gt;</a></span><span class="message">+ make -f Makefile</span></div><div class="line" id="184645"><span class="nick" style="color:#234e69"><a href="#184645" label="[18:46:45]">&lt;gforce_de1977&gt;</a></span><span class="message">make: Makefile: error 02</span></div><div class="line" id="184645"><span class="nick" style="color:#234e69"><a href="#184645" label="[18:46:45]">&lt;gforce_de1977&gt;</a></span><span class="message">make: *** No rule to make target `Makefile'.  Stop.</span></div><div class="line" id="184655"><span class="nick" style="color:#234e69"><a href="#184655" label="[18:46:55]">&lt;gforce_de1977&gt;</a></span><span class="message">please wait, will share copy/paste</span></div><div class="line" id="184752"><span class="nick" style="color:#8dd3c7"><a href="#184752" label="[18:47:52]">&lt;stikonas&gt;</a></span><span class="message">are you running it with bash or busybox?</span></div><div class="line" id="184842"><span class="nick" style="color:#234e69"><a href="#184842" label="[18:48:42]">&lt;gforce_de1977&gt;</a></span><span class="message">bash</span></div><div class="line" id="184844"><span class="nick" style="color:#234e69"><a href="#184844" label="[18:48:44]">&lt;gforce_de1977&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1191381/">https://paste.debian.net/1191381/</a> </span></div><div class="line" id="185013"><span class="nick" style="color:#8dd3c7"><a href="#185013" label="[18:50:13]">&lt;stikonas&gt;</a></span><span class="message">that's probably busybox</span></div><div class="line" id="185029"><span class="nick" style="color:#8dd3c7"><a href="#185029" label="[18:50:29]">&lt;stikonas&gt;</a></span><span class="message">+ default_src_compile</span></div><div class="line" id="185034"><span class="nick" style="color:#8dd3c7"><a href="#185034" label="[18:50:34]">&lt;stikonas&gt;</a></span><span class="message">it shouldn't run that function</span></div><div class="line" id="185044"><span class="nick" style="color:#8dd3c7"><a href="#185044" label="[18:50:44]">&lt;stikonas&gt;</a></span><span class="message">there is src_compile function defined in stage1.sh</span></div><div class="line" id="185101"><span class="nick" style="color:#234e69"><a href="#185101" label="[18:51:01]">&lt;gforce_de1977&gt;</a></span><span class="message">yeah.../after/bin/bash = 347208 bytes and when running it it just says &quot;exit&quot;</span></div><div class="line" id="185128"><span class="nick" style="color:#234e69"><a href="#185128" label="[18:51:28]">&lt;gforce_de1977&gt;</a></span><span class="message">dumb question: why do we use bashisms? the script really should be posix</span></div><div class="line" id="185151"><span class="nick" style="color:#8dd3c7"><a href="#185151" label="[18:51:51]">&lt;stikonas&gt;</a></span><span class="message">we only have bash shell there</span></div><div class="line" id="185155"><span class="nick" style="color:#8dd3c7"><a href="#185155" label="[18:51:55]">&lt;stikonas&gt;</a></span><span class="message">but you didn't start bash</span></div><div class="line" id="185157"><span class="nick" style="color:#234e69"><a href="#185157" label="[18:51:57]">&lt;gforce_de1977&gt;</a></span><span class="message">do you have an idea why it says 'exit'?</span></div><div class="line" id="185206"><span class="nick" style="color:#8dd3c7"><a href="#185206" label="[18:52:06]">&lt;stikonas&gt;</a></span><span class="message">because we don't have interactive bash at that stage yet</span></div><div class="line" id="185212"><span class="nick" style="color:#234e69"><a href="#185212" label="[18:52:12]">&lt;gforce_de1977&gt;</a></span><span class="message">ah!</span></div><div class="line" id="185225"><span class="nick" style="color:#8dd3c7"><a href="#185225" label="[18:52:25]">&lt;stikonas&gt;</a></span><span class="message">first bash is compiled against meslibc and so can't have libreadline</span></div><div class="line" id="185233"><span class="nick" style="color:#234e69"><a href="#185233" label="[18:52:33]">&lt;gforce_de1977&gt;</a></span><span class="message">ok...arrggggg! 8-) ok, will include my own static bash5.1</span></div><div class="line" id="185235"><span class="nick" style="color:#8dd3c7"><a href="#185235" label="[18:52:35]">&lt;stikonas&gt;</a></span><span class="message">libreadline needs more advanced libc</span></div><div class="line" id="185244"><span class="nick" style="color:#8dd3c7"><a href="#185244" label="[18:52:44]">&lt;stikonas&gt;</a></span><span class="message">just run it non-interactively</span></div><div class="line" id="185311"><span class="nick" style="color:#8dd3c7"><a href="#185311" label="[18:53:11]">&lt;stikonas&gt;</a></span><span class="message">bash -c 'export PREFIX=/after; set -e; . helpers.sh; build automake-1.6.3 stage1.sh'</span></div><div class="line" id="185312"><span class="nick" style="color:#234e69"><a href="#185312" label="[18:53:12]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, so /after/bin/bash -c &quot;my command&quot; ???</span></div><div class="line" id="185315"><span class="nick" style="color:#8dd3c7"><a href="#185315" label="[18:53:15]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="185317"><span class="nick" style="color:#234e69"><a href="#185317" label="[18:53:17]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, thanks</span></div><div class="line" id="185446"><span class="nick" style="color:#234e69"><a href="#185446" label="[18:54:46]">&lt;gforce_de1977&gt;</a></span><span class="message">here is the same with bash: <a rel="nofollow" href="https://paste.debian.net/1191382/">https://paste.debian.net/1191382/</a> </span></div><div class="line" id="185543"><span class="nick" style="color:#8dd3c7"><a href="#185543" label="[18:55:43]">&lt;stikonas&gt;</a></span><span class="message">strange...</span></div><div class="line" id="185558"><span class="nick" style="color:#234e69"><a href="#185558" label="[18:55:58]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, when running without -e it seems to work:</span></div><div class="line" id="185600"><span class="nick" style="color:#234e69"><a href="#185600" label="[18:56:00]">&lt;gforce_de1977&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1191383/">https://paste.debian.net/1191383/</a> </span></div><div class="line" id="185607"><span class="nick" style="color:#8dd3c7"><a href="#185607" label="[18:56:07]">&lt;stikonas&gt;</a></span><span class="message">without -e it ignores errors...</span></div><div class="line" id="185612"><span class="nick" style="color:#8dd3c7"><a href="#185612" label="[18:56:12]">&lt;stikonas&gt;</a></span><span class="message">I don't think we should run it like that</span></div><div class="line" id="185621"><span class="nick" style="color:#8dd3c7"><a href="#185621" label="[18:56:21]">&lt;stikonas&gt;</a></span><span class="message">you should check why those files are missing</span></div><div class="line" id="185627"><span class="nick" style="color:#8dd3c7"><a href="#185627" label="[18:56:27]">&lt;stikonas&gt;</a></span><span class="message">are they not in your tarball</span></div><div class="line" id="185633"><span class="nick" style="color:#8dd3c7"><a href="#185633" label="[18:56:33]">&lt;stikonas&gt;</a></span><span class="message">or ar they not there after unpacking</span></div><div class="line" id="185700"><span class="nick" style="color:#234e69"><a href="#185700" label="[18:57:00]">&lt;gforce_de1977&gt;</a></span><span class="message">good question, will check and report (~30mins, have to do family stuff)</span></div><div class="line" id="185747"><span class="nick" style="color:#8dd3c7"><a href="#185747" label="[18:57:47]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'll be away to</span></div><div class="line" id="185749"><span class="nick" style="color:#8dd3c7"><a href="#185749" label="[18:57:49]">&lt;stikonas&gt;</a></span><span class="message">too</span></div><div class="line" id="185858"><span class="nick" style="color:#6d2462"><a href="#185858" label="[18:58:58]">&lt;bauen1&gt;</a></span><span class="message">what's the easiest way to create a patch for a source tree ?</span></div><div class="line" id="190720"><span class="nick" style="color:#6d2462"><a href="#190720" label="[19:07:20]">&lt;bauen1&gt;</a></span><span class="message">or rather, is there a better way than git init, git add ., git commit, git format-patch ?</span></div><div class="line" id="191440"><span class="nick" style="color:#6d2462"><a href="#191440" label="[19:14:40]">&lt;bauen1&gt;</a></span><span class="message">also i just found a shiny (incomplete ?) list of files generated by autotools <a rel="nofollow" href="https://www.gnu.org/software/automake/faq/autotools-faq.html#Which-files-are-hand_002dwritten-and-which-generated-_0028and-how_0029_003f">https://www.gnu.org/software/automake/faq/autotools-faq.html#Which-files-are-hand_002dwritten-and-which-generated-_0028and-how_0029_003f</a> </span></div><div class="line" id="192557"><span class="nick" style="color:#6d2462"><a href="#192557" label="[19:25:57]">&lt;bauen1&gt;</a></span><span class="message">oh amazing gnu stow is basically one perl file with autotools used to generate documentation and replace a massive 3 macros inside stow.in before installing it lol</span></div><div class="line" id="192823"><span class="nick" style="color:#234e69"><a href="#192823" label="[19:28:23]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: here is *my* automake-1.6.3: <a rel="nofollow" href="https://paste.debian.net/1191393/">https://paste.debian.net/1191393/</a> </span></div><div class="line" id="192838"><span class="nick" style="color:#234e69"><a href="#192838" label="[19:28:38]">&lt;gforce_de1977&gt;</a></span><span class="message">does it differs from your?</span></div><div class="line" id="192927"><span class="nick" style="color:#234e69"><a href="#192927" label="[19:29:27]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: why are you using asterisks when deleting? why not just the real full path?</span></div><div class="line" id="194940"><span class="nick" style="color:#234e69"><a href="#194940" label="[19:49:40]">&lt;gforce_de1977&gt;</a></span><span class="message">which files do you want to catch with: */Makefile.in */*/Makefile.in</span></div><div class="line" id="195047"><span class="nick" style="color:#234e69"><a href="#195047" label="[19:50:47]">&lt;gforce_de1977&gt;</a></span><span class="message">is it: lib/Makefile.in tests/Makefile.in lib/Automake/Makefile.in lib/am/Makefile.in ?</span></div><div class="line" id="195240"><span class="nick" style="color:#6d2462"><a href="#195240" label="[19:52:40]">&lt;bauen1&gt;</a></span><span class="message">so building the newest gnu stow is dead simple, 3 sed statements + install commands ; but it uses Getopt::Long GetOptionsFromArray which is from 2007 <a rel="nofollow" href="https://github.com/Perl/perl5/commit/8de02997ac38b64dd5d3d654b85f7d29a1fc56af">https://github.com/Perl/perl5/commit/8de02997ac38b64dd5d3d654b85f7d29a1fc56af</a>  so just 4 years after perl 5.6.2 was released</span></div><div class="line" id="200241"><span class="nick" style="color:#6d2462"><a href="#200241" label="[20:02:41]">&lt;bauen1&gt;</a></span><span class="message">but version 2.2.2 should work and doesn't miss too many important things, let me try that</span></div><div class="line" id="201657"><span class="nick" style="color:#8dd3c7"><a href="#201657" label="[20:16:57]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: all of these</span></div><div class="line" id="201706"><span class="nick" style="color:#8dd3c7"><a href="#201706" label="[20:17:06]">&lt;stikonas&gt;</a></span><span class="message">all Makefile.in's</span></div><div class="line" id="202253"><span class="nick" style="color:#234e69"><a href="#202253" label="[20:22:53]">&lt;gforce_de1977&gt;</a></span><span class="message">ok, tomorrow i will tinker why these are missing after untar</span></div><div class="line" id="202445"><span class="nick" style="color:#234e69"><a href="#202445" label="[20:24:45]">&lt;gforce_de1977&gt;</a></span><span class="message">(maybe the globbing just does not work)</span></div><div class="line" id="202534"><span class="nick" style="color:#234e69"><a href="#202534" label="[20:25:34]">&lt;gforce_de1977&gt;</a></span><span class="message">bauen1: yes, git format-patch is the easiest way</span></div><div class="line" id="212813"><span class="nick" style="color:#6d2462"><a href="#212813" label="[21:28:13]">&lt;bauen1&gt;</a></span><span class="message">so now that i have `user namespaces` instead of `sudo` working, would it be ok to PR that to completely replace to usage of sudo ?</span></div><div class="line" id="212857"><span class="nick" style="color:#6d2462"><a href="#212857" label="[21:28:57]">&lt;bauen1&gt;</a></span><span class="message">it requires unprivileged users to have access user namespaces but i think most major distributions have enabled it by default (debian will switch the default to enabled for the 11 release), maybe arch has yet to do that</span></div><div class="line" id="213724"><span class="nick" style="color:#8dd3c7"><a href="#213724" label="[21:37:24]">&lt;stikonas&gt;</a></span><span class="message">but how does it affect qemu?</span></div><div class="line" id="213732"><span class="nick" style="color:#6d2462"><a href="#213732" label="[21:37:32]">&lt;bauen1&gt;</a></span><span class="message">hm, right</span></div><div class="line" id="213733"><span class="nick" style="color:#8dd3c7"><a href="#213733" label="[21:37:33]">&lt;stikonas&gt;</a></span><span class="message">don't you have to pre-create device node with user namespaces</span></div><div class="line" id="213758"><span class="nick" style="color:#8dd3c7"><a href="#213758" label="[21:37:58]">&lt;stikonas&gt;</a></span><span class="message">and also baremetal</span></div><div class="line" id="213801"><span class="nick" style="color:#8dd3c7"><a href="#213801" label="[21:38:01]">&lt;stikonas&gt;</a></span><span class="message">which is the more important case</span></div><div class="line" id="213817"><span class="nick" style="color:#8dd3c7"><a href="#213817" label="[21:38:17]">&lt;stikonas&gt;</a></span><span class="message">if those cases keep working,  I guess that's fine</span></div><div class="line" id="213828"><span class="nick" style="color:#6d2462"><a href="#213828" label="[21:38:28]">&lt;bauen1&gt;</a></span><span class="message">for baremetal linux could be made to auto mount /dev as devtmpfs ?</span></div><div class="line" id="213836"><span class="nick" style="color:#6d2462"><a href="#213836" label="[21:38:36]">&lt;bauen1&gt;</a></span><span class="message">but yeah i suppose it might break those</span></div><div class="line" id="213852"><span class="nick" style="color:#6d2462"><a href="#213852" label="[21:38:52]">&lt;bauen1&gt;</a></span><span class="message">i'll do a bit more testing</span></div><div class="line" id="214415"><span class="nick" style="color:#8dd3c7"><a href="#214415" label="[21:44:15]">&lt;stikonas&gt;</a></span><span class="message">how can we make it automount?</span></div><div class="line" id="214443"><span class="nick" style="color:#8dd3c7"><a href="#214443" label="[21:44:43]">&lt;stikonas&gt;</a></span><span class="message">I thought it has to be mounted manually... hmm</span></div><div class="line" id="215213"><span class="nick" style="color:#6d2462"><a href="#215213" label="[21:52:13]">&lt;bauen1&gt;</a></span><span class="message">stikonas: DEVTMPFS_MOUNT</span></div><div class="line" id="215246"><span class="nick" style="color:#8dd3c7"><a href="#215246" label="[21:52:46]">&lt;stikonas&gt;</a></span><span class="message">hmm, I guess depends on when we can use too</span></div><div class="line" id="215251"><span class="nick" style="color:#8dd3c7"><a href="#215251" label="[21:52:51]">&lt;stikonas&gt;</a></span><span class="message">bootstrap kernel might not have it</span></div><div class="line" id="215320"><span class="nick" style="color:#8dd3c7"><a href="#215320" label="[21:53:20]">&lt;stikonas&gt;</a></span><span class="message">and actually, I'm not sure how well this would work</span></div><div class="line" id="215326"><span class="nick" style="color:#8dd3c7"><a href="#215326" label="[21:53:26]">&lt;stikonas&gt;</a></span><span class="message">because we don't mount rootfs</span></div><div class="line" id="215333"><span class="nick" style="color:#8dd3c7"><a href="#215333" label="[21:53:33]">&lt;stikonas&gt;</a></span><span class="message">&quot;Automount devtmpfs at /dev, after the kernel mounted the rootfs&quot;</span></div><div class="line" id="215341"><span class="nick" style="color:#6d2462"><a href="#215341" label="[21:53:41]">&lt;bauen1&gt;</a></span><span class="message">stikonas: rootfs is special in the kernel sense</span></div><div class="line" id="215350"><span class="nick" style="color:#8dd3c7"><a href="#215350" label="[21:53:50]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="215354"><span class="nick" style="color:#6d2462"><a href="#215354" label="[21:53:54]">&lt;bauen1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.kernel.org/doc/html/latest/filesystems/ramfs-rootfs-initramfs.html">https://www.kernel.org/doc/html/latest/filesystems/ramfs-rootfs-initramfs.html</a> </span></div><div class="line" id="215401"><span class="nick" style="color:#6d2462"><a href="#215401" label="[21:54:01]">&lt;bauen1&gt;</a></span><span class="message">but yeah bare metal is fragile</span></div><div class="line" id="215408"><span class="nick" style="color:#6d2462"><a href="#215408" label="[21:54:08]">&lt;bauen1&gt;</a></span><span class="message">we might not even have a linux as kernel :D</span></div><div class="line" id="215414"><span class="nick" style="color:#8dd3c7"><a href="#215414" label="[21:54:14]">&lt;stikonas&gt;</a></span><span class="message">This option does not affect initramfs based booting, here the devtmpfs filesystem always needs to be mounted manually after the rootfs is mounted.</span></div><div class="line" id="215428"><span class="nick" style="color:#8dd3c7"><a href="#215428" label="[21:54:28]">&lt;stikonas&gt;</a></span><span class="message">so my reading is that it won't work</span></div><div class="line" id="215439"><span class="nick" style="color:#6d2462"><a href="#215439" label="[21:54:39]">&lt;bauen1&gt;</a></span><span class="message">oh so i didn't read far enough</span></div><div class="line" id="215536"><span class="nick" style="color:#8dd3c7"><a href="#215536" label="[21:55:36]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'm not opposed to replace sudo...</span></div><div class="line" id="215550"><span class="nick" style="color:#8dd3c7"><a href="#215550" label="[21:55:50]">&lt;stikonas&gt;</a></span><span class="message">just need to make sure it doesn't break other stuff</span></div><br /></div></body></html>