<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-08-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000014"><span class="nick" style="color:#8dd3c7"><a href="#000014" label="[00:00:14]">&lt;stikonas&gt;</a></span><span class="message">oh, actually maybe not, maybe it's just base address there...</span></div><div class="line" id="000021"><span class="nick" style="color:#8dd3c7"><a href="#000021" label="[00:00:21]">&lt;stikonas&gt;</a></span><span class="message">while it should be pointing to _start</span></div><div class="line" id="000125"><span class="nick" style="color:#2e2a4a"><a href="#000125" label="[00:01:25]">&lt;oriansj&gt;</a></span><span class="message">stikonas: it got the calculation correct assuming your first executed instruction was after :_start</span></div><div class="line" id="000145"><span class="nick" style="color:#8dd3c7"><a href="#000145" label="[00:01:45]">&lt;stikonas&gt;</a></span><span class="message">oh yes, that's that 78</span></div><div class="line" id="000152"><span class="nick" style="color:#8dd3c7"><a href="#000152" label="[00:01:52]">&lt;stikonas&gt;</a></span><span class="message">0x78 is the size of header</span></div><div class="line" id="000209"><span class="nick" style="color:#8dd3c7"><a href="#000209" label="[00:02:09]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's right, I remember checking that size</span></div><div class="line" id="000218"><span class="nick" style="color:#8dd3c7"><a href="#000218" label="[00:02:18]">&lt;stikonas&gt;</a></span><span class="message">then I guess TODO can be removed...</span></div><div class="line" id="000319"><span class="nick" style="color:#2e2a4a"><a href="#000319" label="[00:03:19]">&lt;oriansj&gt;</a></span><span class="message">the TODO was to check if RISC-V made a deviation from the ELF standard like PowerPC did and put the address of where the e_entry address was stored instead.</span></div><div class="line" id="000340"><span class="nick" style="color:#2e2a4a"><a href="#000340" label="[00:03:40]">&lt;oriansj&gt;</a></span><span class="message">as that was an open question before hex0 got working.</span></div><div class="line" id="000359"><span class="nick" style="color:#2e2a4a"><a href="#000359" label="[00:03:59]">&lt;oriansj&gt;</a></span><span class="message">and by the looks of it the answer is no</span></div><div class="line" id="000446"><span class="nick" style="color:#2e2a4a"><a href="#000446" label="[00:04:46]">&lt;oriansj&gt;</a></span><span class="message">so absolutely yes the TODO comment can be removed</span></div><div class="line" id="001125"><span class="nick" style="color:#8dd3c7"><a href="#001125" label="[00:11:25]">&lt;stikonas&gt;</a></span><span class="message">ok, that's for stage0-posix <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/38">https://github.com/oriansj/stage0-posix/pull/38</a> </span></div><div class="line" id="001140"><span class="nick" style="color:#8dd3c7"><a href="#001140" label="[00:11:40]">&lt;stikonas&gt;</a></span><span class="message">at some point I should replace Development/*.hex2 headers with proper one with labels...</span></div><div class="line" id="001153"><span class="nick" style="color:#2e2a4a"><a href="#001153" label="[00:11:53]">&lt;oriansj&gt;</a></span><span class="message">although the ELF documentation says p_filesz and p_memsz &quot;May be 0.&quot; what it doesn't say that means it *WILL NOT* be loaded into memory at all and Linux will be more than happy to truncate your shit.</span></div><div class="line" id="001341"><span class="nick" style="color:#2e2a4a"><a href="#001341" label="[00:13:41]">&lt;oriansj&gt;</a></span><span class="message">stage0-posix merged</span></div><div class="line" id="001409"><span class="nick" style="color:#8dd3c7"><a href="#001409" label="[00:14:09]">&lt;stikonas&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="001437"><span class="nick" style="color:#2e2a4a"><a href="#001437" label="[00:14:37]">&lt;oriansj&gt;</a></span><span class="message">well ideally you would just have a standard elf.hex2 which all M1 and hex2 files use so that you don't have to keep manually tweaking ELF headers</span></div><div class="line" id="001531"><span class="nick" style="color:#8dd3c7"><a href="#001531" label="[00:15:31]">&lt;stikonas&gt;</a></span><span class="message">well, yes...</span></div><div class="line" id="001535"><span class="nick" style="color:#2e2a4a"><a href="#001535" label="[00:15:35]">&lt;oriansj&gt;</a></span><span class="message">in theory hex2.hex1 should be the last file you write that would have a hand written elf healder</span></div><div class="line" id="001547"><span class="nick" style="color:#2e2a4a"><a href="#001547" label="[00:15:47]">&lt;oriansj&gt;</a></span><span class="message">(not counting the undone catm of course)</span></div><div class="line" id="001606"><span class="nick" style="color:#8dd3c7"><a href="#001606" label="[00:16:06]">&lt;stikonas&gt;</a></span><span class="message">well, we can do catm earlier</span></div><div class="line" id="001622"><span class="nick" style="color:#8dd3c7"><a href="#001622" label="[00:16:22]">&lt;stikonas&gt;</a></span><span class="message">although, I guess it's first used to prepend the header</span></div><div class="line" id="001635"><span class="nick" style="color:#2e2a4a"><a href="#001635" label="[00:16:35]">&lt;oriansj&gt;</a></span><span class="message">which will allow you to combine that standard ELF header with M1 outputs and hand written hex2 files</span></div><div class="line" id="001700"><span class="nick" style="color:#8dd3c7"><a href="#001700" label="[00:17:00]">&lt;stikonas&gt;</a></span><span class="message">by the way, what is '^' in hex2_word.c?</span></div><div class="line" id="001704"><span class="nick" style="color:#8dd3c7"><a href="#001704" label="[00:17:04]">&lt;stikonas&gt;</a></span><span class="message">it's just ignored for some reason</span></div><div class="line" id="001745"><span class="nick" style="color:#2e2a4a"><a href="#001745" label="[00:17:45]">&lt;oriansj&gt;</a></span><span class="message">stikonas: it is needed for AArch64 to indicate to use the aligned or non-aligned offset calculation</span></div><div class="line" id="001923"><span class="nick" style="color:#2e2a4a"><a href="#001923" label="[00:19:23]">&lt;oriansj&gt;</a></span><span class="message">correction ARMv7L <a rel="nofollow" href="https://github.com/moneytech/mescc-tools/blob/master/hex2_linker.c#L242">https://github.com/moneytech/mescc-tools/blob/master/hex2_linker.c#L242</a> </span></div><div class="line" id="002034"><span class="nick" style="color:#8dd3c7"><a href="#002034" label="[00:20:34]">&lt;stikonas&gt;</a></span><span class="message">and %ELF_end&gt;ELF_base means that if end of file is not aligned to word(?) size then zeros are added</span></div><div class="line" id="002113"><span class="nick" style="color:#2e2a4a"><a href="#002113" label="[00:21:13]">&lt;oriansj&gt;</a></span><span class="message">so it could be used in RISC-V in the fashion of ^~label ^!label ^@label ^$label ^%label ^&amp;label</span></div><div class="line" id="002211"><span class="nick" style="color:#2e2a4a"><a href="#002211" label="[00:22:11]">&lt;oriansj&gt;</a></span><span class="message">stikonas: no %ELF_end&gt;ELF_base means the number of bytes of size the elf header is (changes if you add in the segment header in too)</span></div><div class="line" id="002245"><span class="nick" style="color:#2e2a4a"><a href="#002245" label="[00:22:45]">&lt;oriansj&gt;</a></span><span class="message">^~label would be the number of words between the instruction and the label</span></div><div class="line" id="002448"><span class="nick" style="color:#2e2a4a"><a href="#002448" label="[00:24:48]">&lt;oriansj&gt;</a></span><span class="message">think of ^ as just toggle the Aligned variable to on and later when I deal with the pointer do something different</span></div><div class="line" id="002508"><span class="nick" style="color:#2e2a4a"><a href="#002508" label="[00:25:08]">&lt;oriansj&gt;</a></span><span class="message">because the Aligned variable is set to true</span></div><div class="line" id="002704"><span class="nick" style="color:#2e2a4a"><a href="#002704" label="[00:27:04]">&lt;oriansj&gt;</a></span><span class="message">there is a big difference between &lt; ^ and &gt;</span></div><div class="line" id="002819"><span class="nick" style="color:#8dd3c7"><a href="#002819" label="[00:28:19]">&lt;stikonas&gt;</a></span><span class="message">Oh, I was thinking about &lt;...</span></div><div class="line" id="002824"><span class="nick" style="color:#8dd3c7"><a href="#002824" label="[00:28:24]">&lt;stikonas&gt;</a></span><span class="message">somehow misread &gt; as &lt; in header...</span></div><div class="line" id="002829"><span class="nick" style="color:#2e2a4a"><a href="#002829" label="[00:28:29]">&lt;oriansj&gt;</a></span><span class="message">&lt; means pad to word alignment (probably very useful for RISC-V), ^ means next pointer needs to be the special word aligned form (or honestly any special behavior your want for your architecture) and &gt; is for calculating the number of bytes differences between the addresses of any two labels</span></div><div class="line" id="002853"><span class="nick" style="color:#2e2a4a"><a href="#002853" label="[00:28:53]">&lt;oriansj&gt;</a></span><span class="message">easy mistake to make</span></div><div class="line" id="002857"><span class="nick" style="color:#8dd3c7"><a href="#002857" label="[00:28:57]">&lt;stikonas&gt;</a></span><span class="message">ok, it makes sense now</span></div><div class="line" id="002910"><span class="nick" style="color:#8dd3c7"><a href="#002910" label="[00:29:10]">&lt;stikonas&gt;</a></span><span class="message">well, I had them in different tabs...</span></div><div class="line" id="002914"><span class="nick" style="color:#8dd3c7"><a href="#002914" label="[00:29:14]">&lt;stikonas&gt;</a></span><span class="message">in my text editor</span></div><div class="line" id="003006"><span class="nick" style="color:#2e2a4a"><a href="#003006" label="[00:30:06]">&lt;oriansj&gt;</a></span><span class="message">mescc-tools is a subtle assembly language for dealing with all the ugly architecture specific behavior needed for bootstrapping.</span></div><div class="line" id="003025"><span class="nick" style="color:#8dd3c7"><a href="#003025" label="[00:30:25]">&lt;stikonas&gt;</a></span><span class="message">yeah, and even then for risc-v we had to invent more...</span></div><div class="line" id="003028"><span class="nick" style="color:#8dd3c7"><a href="#003028" label="[00:30:28]">&lt;stikonas&gt;</a></span><span class="message">that . thing</span></div><div class="line" id="003039"><span class="nick" style="color:#8dd3c7"><a href="#003039" label="[00:30:39]">&lt;stikonas&gt;</a></span><span class="message">but with . I think the whole thing is quite flexible</span></div><div class="line" id="003209"><span class="nick" style="color:#2e2a4a"><a href="#003209" label="[00:32:09]">&lt;oriansj&gt;</a></span><span class="message">it needs to be to put up with the crazy shit instruction set developers seem to shove into their crap</span></div><div class="line" id="005009"><span class="nick" style="color:#2e2a4a"><a href="#005009" label="[00:50:09]">&lt;oriansj&gt;</a></span><span class="message">one might even say M1 and hex2 have had a rather extensive evolution path, to a degree which was honestly unimaginable when I first began.</span></div><div class="line" id="005136"><span class="nick" style="color:#2e2a4a"><a href="#005136" label="[00:51:36]">&lt;oriansj&gt;</a></span><span class="message">yet here we are and I am excited to see what enhancements are discovered over the next 5 years.</span></div><div class="line" id="023344"><span class="nick" style="color:#8dd3c7"><a href="#023344" label="[02:33:44]">&lt;stikonas&gt;</a></span><span class="message">ok, catm is done too <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/39">https://github.com/oriansj/stage0-posix/pull/39</a> </span></div><div class="line" id="023551"><span class="nick" style="color:#8dd3c7"><a href="#023551" label="[02:35:51]">&lt;stikonas&gt;</a></span><span class="message">and it's actually smaller than AMD64 version</span></div><div class="line" id="024747"><span class="nick" style="color:#2e2a4a"><a href="#024747" label="[02:47:47]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged</span></div><div class="line" id="100916"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o janneke_</span></div><div class="line" id="134412"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o janneke</span></div><div class="line" id="145752"><span class="nick" style="color:#8dd3c7"><a href="#145752" label="[14:57:52]">&lt;stikonas&gt;</a></span><span class="message">argh, I accidentally committed catm.hex2 for riscv... Will remove it later...</span></div><div class="line" id="145803"><span class="nick" style="color:#8dd3c7"><a href="#145803" label="[14:58:03]">&lt;stikonas&gt;</a></span><span class="message">that one was just testing .M1 file</span></div><div class="line" id="151928"><span class="nick" style="color:#8dd3c7"><a href="#151928" label="[15:19:28]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/pull/40">https://github.com/oriansj/stage0-posix/pull/40</a> </span></div><div class="line" id="155341"><span class="nick" style="color:#2e2a4a"><a href="#155341" label="[15:53:41]">&lt;oriansj&gt;</a></span><span class="message">stikonas: e_entry generally is &amp;_start or &amp;start so that you can put the :start or :_start anywhere in your assembly program you want and it will still be the first instructions executed.</span></div><div class="line" id="155924"><span class="nick" style="color:#8dd3c7"><a href="#155924" label="[15:59:24]">&lt;stikonas&gt;</a></span><span class="message">oriansj: oh you mean instead of ELF_text ?</span></div><div class="line" id="155957"><span class="nick" style="color:#8dd3c7"><a href="#155957" label="[15:59:57]">&lt;stikonas&gt;</a></span><span class="message">that was what other arches were doing...</span></div><div class="line" id="160006"><span class="nick" style="color:#8dd3c7"><a href="#160006" label="[16:00:06]">&lt;stikonas&gt;</a></span><span class="message">with &amp;ELF_text in e_entry</span></div><div class="line" id="160100"><span class="nick" style="color:#8dd3c7"><a href="#160100" label="[16:01:00]">&lt;stikonas&gt;</a></span><span class="message">I can replace that with &amp;_start ...</span></div><div class="line" id="161129"><span class="nick" style="color:#8dd3c7"><a href="#161129" label="[16:11:29]">&lt;stikonas&gt;</a></span><span class="message">oriansj: ok, pushed another commit to PR</span></div><div class="line" id="161138"><span class="nick" style="color:#8dd3c7"><a href="#161138" label="[16:11:38]">&lt;stikonas&gt;</a></span><span class="message">if I understood your intention correctly...</span></div><div class="line" id="163922"><span class="nick" style="color:#2e2a4a"><a href="#163922" label="[16:39:22]">&lt;oriansj&gt;</a></span><span class="message">stikonas: you are right is exactly what the other architectures are doing. I really should fix that in M2libc as it is incorrect behavior if someone doesn't put :_start first right after the ELF header</span></div><div class="line" id="164008"><span class="nick" style="color:#2e2a4a"><a href="#164008" label="[16:40:08]">&lt;oriansj&gt;</a></span><span class="message">guess it dropped off my radar by accident. it is a real potential bug for ELF headers</span></div><div class="line" id="164036"><span class="nick" style="color:#8dd3c7"><a href="#164036" label="[16:40:36]">&lt;stikonas&gt;</a></span><span class="message">well, riscv is now fixed then...</span></div><div class="line" id="164255"><span class="nick" style="color:#2e2a4a"><a href="#164255" label="[16:42:55]">&lt;oriansj&gt;</a></span><span class="message">thank you for helping me to remember to fix that</span></div><div class="line" id="164419"><span class="nick" style="color:#2e2a4a"><a href="#164419" label="[16:44:19]">&lt;oriansj&gt;</a></span><span class="message">We standardized on _start for M2libc to match wath binutils uses</span></div><div class="line" id="164620"><span class="nick" style="color:#8dd3c7"><a href="#164620" label="[16:46:20]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think I waw _start before too in various places</span></div><div class="line" id="164630"><span class="nick" style="color:#8dd3c7"><a href="#164630" label="[16:46:30]">&lt;stikonas&gt;</a></span><span class="message">that's why I picked _start rather than start</span></div><div class="line" id="164931"><span class="nick" style="color:#2e2a4a"><a href="#164931" label="[16:49:31]">&lt;oriansj&gt;</a></span><span class="message">and fixed M2libc (now to fix mescc-tools examples as well)</span></div><div class="line" id="172906"><span class="nick" style="color:#2e2a4a"><a href="#172906" label="[17:29:06]">&lt;oriansj&gt;</a></span><span class="message">ok mescc-tools fixed. Now to clear out the issue in stage0-posix</span></div><div class="line" id="174031"><span class="nick" style="color:#2e2a4a"><a href="#174031" label="[17:40:31]">&lt;oriansj&gt;</a></span><span class="message">(the AArch64 updates always take so long to validate)</span></div><div class="line" id="174044"><span class="nick" style="color:#8dd3c7"><a href="#174044" label="[17:40:44]">&lt;stikonas&gt;</a></span><span class="message">due to qemu?</span></div><div class="line" id="174118"><span class="nick" style="color:#2e2a4a"><a href="#174118" label="[17:41:18]">&lt;oriansj&gt;</a></span><span class="message">and single byte writes on a MicroSD card</span></div><div class="line" id="174209"><span class="nick" style="color:#8dd3c7"><a href="#174209" label="[17:42:09]">&lt;stikonas&gt;</a></span><span class="message">oh you are testing it on microsd?</span></div><div class="line" id="174210"><span class="nick" style="color:#2e2a4a"><a href="#174210" label="[17:42:10]">&lt;oriansj&gt;</a></span><span class="message">the speed diffference between assembly hex2 and M2-Planet compiled hex2 is like night and day.</span></div><div class="line" id="174235"><span class="nick" style="color:#2e2a4a"><a href="#174235" label="[17:42:35]">&lt;oriansj&gt;</a></span><span class="message">stikonas: raspberryPI with microsd card</span></div><div class="line" id="174239"><span class="nick" style="color:#8dd3c7"><a href="#174239" label="[17:42:39]">&lt;stikonas&gt;</a></span><span class="message">well, yes, assembly programs write one byte at a time</span></div><div class="line" id="174241"><span class="nick" style="color:#8dd3c7"><a href="#174241" label="[17:42:41]">&lt;stikonas&gt;</a></span><span class="message">oh I see...</span></div><div class="line" id="174254"><span class="nick" style="color:#8dd3c7"><a href="#174254" label="[17:42:54]">&lt;stikonas&gt;</a></span><span class="message">well, for risc-v I was only working on qemu...</span></div><div class="line" id="174305"><span class="nick" style="color:#8dd3c7"><a href="#174305" label="[17:43:05]">&lt;stikonas&gt;</a></span><span class="message">since I don't have any hardware...</span></div><div class="line" id="174328"><span class="nick" style="color:#8dd3c7"><a href="#174328" label="[17:43:28]">&lt;stikonas&gt;</a></span><span class="message">unless you count my solder iron (and that is riscv-32 not riscv-64)</span></div><div class="line" id="174328"><span class="nick" style="color:#2e2a4a"><a href="#174328" label="[17:43:28]">&lt;oriansj&gt;</a></span><span class="message">stikonas: you probably would qualify for hardware through their development program</span></div><div class="line" id="174351"><span class="nick" style="color:#8dd3c7"><a href="#174351" label="[17:43:51]">&lt;stikonas&gt;</a></span><span class="message">well, maybe at some point I'll buy some SoC...</span></div><div class="line" id="174418"><span class="nick" style="color:#2e2a4a"><a href="#174418" label="[17:44:18]">&lt;oriansj&gt;</a></span><span class="message">I have one of the first batch RISC-V boards they ever sold on CrowdSupply if you want it.</span></div><div class="line" id="174445"><span class="nick" style="color:#8dd3c7"><a href="#174445" label="[17:44:45]">&lt;stikonas&gt;</a></span><span class="message">that's fine... I'll just buy at some point</span></div><div class="line" id="174515"><span class="nick" style="color:#8dd3c7"><a href="#174515" label="[17:45:15]">&lt;stikonas&gt;</a></span><span class="message">soon I think there will be quite a few more boards on the market</span></div><div class="line" id="174527"><span class="nick" style="color:#2e2a4a"><a href="#174527" label="[17:45:27]">&lt;oriansj&gt;</a></span><span class="message">hopefully with ECC</span></div><div class="line" id="174544"><span class="nick" style="color:#8dd3c7"><a href="#174544" label="[17:45:44]">&lt;stikonas&gt;</a></span><span class="message">that's harder to tell</span></div><div class="line" id="174557"><span class="nick" style="color:#8dd3c7"><a href="#174557" label="[17:45:57]">&lt;stikonas&gt;</a></span><span class="message">they put ECC mostly into server boards...</span></div><div class="line" id="174614"><span class="nick" style="color:#2e2a4a"><a href="#174614" label="[17:46:14]">&lt;oriansj&gt;</a></span><span class="message">or desktops (AMD boards these days)</span></div><div class="line" id="174640"><span class="nick" style="color:#2e2a4a"><a href="#174640" label="[17:46:40]">&lt;oriansj&gt;</a></span><span class="message"> or workstations (Intel xeons in CAD systems sort of thing)</span></div><div class="line" id="174723"><span class="nick" style="color:#8dd3c7"><a href="#174723" label="[17:47:23]">&lt;stikonas&gt;</a></span><span class="message">yeah, we have ECC at work...</span></div><div class="line" id="174834"><span class="nick" style="color:#2e2a4a"><a href="#174834" label="[17:48:34]">&lt;oriansj&gt;</a></span><span class="message">I straight up refuse to buy any more hardware with more than 8GB of RAM that doesn't have ECC working.</span></div><div class="line" id="174903"><span class="nick" style="color:#6b8072"><a href="#174903" label="[17:49:03]">&lt;siraben&gt;</a></span><span class="message">how can you know if ECC is on</span></div><div class="line" id="174910"><span class="nick" style="color:#2e2a4a"><a href="#174910" label="[17:49:10]">&lt;oriansj&gt;</a></span><span class="message">I'd rather have 4GB of ECC than 8GB of maybe it might not corrupt your shit RAM.</span></div><div class="line" id="174952"><span class="nick" style="color:#2e2a4a"><a href="#174952" label="[17:49:52]">&lt;oriansj&gt;</a></span><span class="message">siraben: well first to know the details of your memory sudo dmidecode --type memory</span></div><div class="line" id="175015"><span class="nick" style="color:#2e2a4a"><a href="#175015" label="[17:50:15]">&lt;oriansj&gt;</a></span><span class="message">To get kernel-detected PCI and ECC RAM errors:</span></div><div class="line" id="175016"><span class="nick" style="color:#2e2a4a"><a href="#175016" label="[17:50:16]">&lt;oriansj&gt;</a></span><span class="message">edac-util</span></div><div class="line" id="175304"><span class="nick" style="color:#6b8072"><a href="#175304" label="[17:53:04]">&lt;siraben&gt;</a></span><span class="message">also new timezone if anyone needs to ping me; central US time</span></div><div class="line" id="175321"><span class="nick" style="color:#2e2a4a"><a href="#175321" label="[17:53:21]">&lt;oriansj&gt;</a></span><span class="message">siraben: moved for work?</span></div><div class="line" id="175327"><span class="nick" style="color:#6b8072"><a href="#175327" label="[17:53:27]">&lt;siraben&gt;</a></span><span class="message">uni</span></div><div class="line" id="175347"><span class="nick" style="color:#8dd3c7"><a href="#175347" label="[17:53:47]">&lt;stikonas&gt;</a></span><span class="message">back for in-person teaching I guess</span></div><div class="line" id="175351"><span class="nick" style="color:#6b8072"><a href="#175351" label="[17:53:51]">&lt;siraben&gt;</a></span><span class="message">what package provides dmidecode?</span></div><div class="line" id="175410"><span class="nick" style="color:#6b8072"><a href="#175410" label="[17:54:10]">&lt;siraben&gt;</a></span><span class="message">stikonas: yeah, but masks are required again due to delta</span></div><div class="line" id="175438"><span class="nick" style="color:#2e2a4a"><a href="#175438" label="[17:54:38]">&lt;oriansj&gt;</a></span><span class="message">well on guix and debian it would be the package called dmidecode</span></div><div class="line" id="175439"><span class="nick" style="color:#8dd3c7"><a href="#175439" label="[17:54:39]">&lt;stikonas&gt;</a></span><span class="message">well, here masks are no longer &quot;required&quot; but most people still use them</span></div><div class="line" id="175500"><span class="nick" style="color:#6b8072"><a href="#175500" label="[17:55:00]">&lt;siraben&gt;</a></span><span class="message">nashville is iffy with masks</span></div><div class="line" id="175506"><span class="nick" style="color:#6b8072"><a href="#175506" label="[17:55:06]">&lt;siraben&gt;</a></span><span class="message">especially with out of state tourists</span></div><div class="line" id="175552"><span class="nick" style="color:#8dd3c7"><a href="#175552" label="[17:55:52]">&lt;stikonas&gt;</a></span><span class="message">in UK basically the only restrictions are when you cross border (needs those expensive PCR tests)</span></div><div class="line" id="175606"><span class="nick" style="color:#2e2a4a"><a href="#175606" label="[17:56:06]">&lt;oriansj&gt;</a></span><span class="message">well nashville is a bit RED in regards to these sorts of things.</span></div><div class="line" id="175726"><span class="nick" style="color:#6b8072"><a href="#175726" label="[17:57:26]">&lt;siraben&gt;</a></span><span class="message">RED?</span></div><div class="line" id="175737"><span class="nick" style="color:#8dd3c7"><a href="#175737" label="[17:57:37]">&lt;stikonas&gt;</a></span><span class="message">republican?</span></div><div class="line" id="175801"><span class="nick" style="color:#6b8072"><a href="#175801" label="[17:58:01]">&lt;siraben&gt;</a></span><span class="message">nashville technically votes left every season</span></div><div class="line" id="175810"><span class="nick" style="color:#6b8072"><a href="#175810" label="[17:58:10]">&lt;siraben&gt;</a></span><span class="message">but it is a blue county in a sea of red</span></div><div class="line" id="175914"><span class="nick" style="color:#8dd3c7"><a href="#175914" label="[17:59:14]">&lt;stikonas&gt;</a></span><span class="message">in UK tories (right) are blue and labour (left) are red, so colours are swapped, but there are more parties here despite first past the post system</span></div><div class="line" id="180003"><span class="nick" style="color:#2e2a4a"><a href="#180003" label="[18:00:03]">&lt;oriansj&gt;</a></span><span class="message">RET***D Extremely Dangerous (plague carriers)</span></div><div class="line" id="180105"><span class="nick" style="color:#6b8072"><a href="#180105" label="[18:01:05]">&lt;siraben&gt;</a></span><span class="message">Ah.</span></div><div class="line" id="180137"><span class="nick" style="color:#6b8072"><a href="#180137" label="[18:01:37]">&lt;siraben&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.politico.com/news/magazine/2020/03/19/coronavirus-effect-economy-life-society-analysis-covid-135579">https://www.politico.com/news/magazine/2020/03/19/coronavirus-effect-economy-life-society-analysis-covid-135579</a> </span></div><div class="line" id="180141"><span class="nick" style="color:#6b8072"><a href="#180141" label="[18:01:41]">&lt;siraben&gt;</a></span><span class="message">amazing how utterly wrong this turned out</span></div><div class="line" id="180325"><span class="nick" style="color:#2e2a4a"><a href="#180325" label="[18:03:25]">&lt;oriansj&gt;</a></span><span class="message">well I was in the group that did the simple math of if everyone does basic PPE for 4 weeks virus has no potential hosts =&gt; problem done.</span></div><div class="line" id="180333"><span class="nick" style="color:#2e2a4a"><a href="#180333" label="[18:03:33]">&lt;oriansj&gt;</a></span><span class="message">like SARS</span></div><div class="line" id="180407"><span class="nick" style="color:#2e2a4a"><a href="#180407" label="[18:04:07]">&lt;oriansj&gt;</a></span><span class="message">but no, it became a political football and now there are people dying in hospitals claiming it is all a hoax</span></div><div class="line" id="180702"><span class="nick" style="color:#8dd3c7"><a href="#180702" label="[18:07:02]">&lt;stikonas&gt;</a></span><span class="message">well, somehow nobody was able to manufacture PPE at the beginning, so there was a bit of shortage</span></div><div class="line" id="180810"><span class="nick" style="color:#8dd3c7"><a href="#180810" label="[18:08:10]">&lt;stikonas&gt;</a></span><span class="message">but yes, PPE is probably even more effective than vaccine (which is already quite effective), those N99 PPE can catch almost all particles.</span></div><div class="line" id="180852"><span class="nick" style="color:#6b8072"><a href="#180852" label="[18:08:52]">&lt;siraben&gt;</a></span><span class="message">the fact that the virus wasn't deadly enough allowed misinformation to spread like fire</span></div><div class="line" id="180855"><span class="nick" style="color:#2e2a4a"><a href="#180855" label="[18:08:55]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I have OCD and was stocked prior to COVID hitting the US. (a bit overstocked due the birth of my child around that time)</span></div><div class="line" id="180905"><span class="nick" style="color:#6b8072"><a href="#180905" label="[18:09:05]">&lt;siraben&gt;</a></span><span class="message">wasn't SARS a two-digit mortality rate?</span></div><div class="line" id="181107"><span class="nick" style="color:#8dd3c7"><a href="#181107" label="[18:11:07]">&lt;stikonas&gt;</a></span><span class="message">well, I had my diy dust mask...</span></div><div class="line" id="181114"><span class="nick" style="color:#8dd3c7"><a href="#181114" label="[18:11:14]">&lt;stikonas&gt;</a></span><span class="message">siraben: yeah, but it's a similar virus</span></div><div class="line" id="181153"><span class="nick" style="color:#8dd3c7"><a href="#181153" label="[18:11:53]">&lt;stikonas&gt;</a></span><span class="message">anyway, it was easier to detect it because it was only transmissible after you had symptoms</span></div><div class="line" id="181226"><span class="nick" style="color:#8dd3c7"><a href="#181226" label="[18:12:26]">&lt;stikonas&gt;</a></span><span class="message">and there was also MERS virus after SARS, but that had fairly low R number and couldn't spread easily</span></div><div class="line" id="181440"><span class="nick" style="color:#6b8072"><a href="#181440" label="[18:14:40]">&lt;siraben&gt;</a></span><span class="message">it's been eye-opening how unnecessary being in-person is for certain activities</span></div><div class="line" id="181454"><span class="nick" style="color:#6b8072"><a href="#181454" label="[18:14:54]">&lt;siraben&gt;</a></span><span class="message">and necessary at the same time</span></div><div class="line" id="182703"><span class="nick" style="color:#2e2a4a"><a href="#182703" label="[18:27:03]">&lt;oriansj&gt;</a></span><span class="message">My response when the shortages appeared was to make gift baskets with 40 N95s and a liter of hand sanitizer and give out to my 10 closest neighbors. Figured it would up my survival odds if shit went sideways.</span></div><div class="line" id="182937"><span class="nick" style="color:#2e2a4a"><a href="#182937" label="[18:29:37]">&lt;oriansj&gt;</a></span><span class="message">the only thing I really missed out in 2020 was the annual picnic+BBQ I throw to share the veggies and truit that is harvested in my garden.</span></div><div class="line" id="183328"><span class="nick" style="color:#8dd3c7"><a href="#183328" label="[18:33:28]">&lt;stikonas&gt;</a></span><span class="message">oriansj: wouldn't your Aarch64 test run much faster if you allocate a small tmpfs for it?</span></div><div class="line" id="183339"><span class="nick" style="color:#8dd3c7"><a href="#183339" label="[18:33:39]">&lt;stikonas&gt;</a></span><span class="message">then at least sdcard overhead will be gone</span></div><div class="line" id="183536"><span class="nick" style="color:#2e2a4a"><a href="#183536" label="[18:35:36]">&lt;oriansj&gt;</a></span><span class="message">stikonas: actually I tested that just last week and the results were far less impressive than hoped. It was only a 10% speed increase. I'm guessing the big performance bottle neck is in the simulated syscalls (which M2libc does very few of)</span></div><div class="line" id="183615"><span class="nick" style="color:#8dd3c7"><a href="#183615" label="[18:36:15]">&lt;stikonas&gt;</a></span><span class="message">on my rockpro64 it takes maybe a minute or two to run the whole thing</span></div><div class="line" id="183721"><span class="nick" style="color:#2e2a4a"><a href="#183721" label="[18:37:21]">&lt;oriansj&gt;</a></span><span class="message">stikonas: probably better virtualization performance too</span></div><div class="line" id="183731"><span class="nick" style="color:#8dd3c7"><a href="#183731" label="[18:37:31]">&lt;stikonas&gt;</a></span><span class="message">well, that's native there</span></div><div class="line" id="183735"><span class="nick" style="color:#8dd3c7"><a href="#183735" label="[18:37:35]">&lt;stikonas&gt;</a></span><span class="message">it's aarch64 hardware</span></div><div class="line" id="183744"><span class="nick" style="color:#2e2a4a"><a href="#183744" label="[18:37:44]">&lt;oriansj&gt;</a></span><span class="message">that certainly would do it.</span></div><div class="line" id="183827"><span class="nick" style="color:#8dd3c7"><a href="#183827" label="[18:38:27]">&lt;stikonas&gt;</a></span><span class="message">I guess qemu would be slower there...</span></div><div class="line" id="184125"><span class="nick" style="color:#2e2a4a"><a href="#184125" label="[18:41:25]">&lt;oriansj&gt;</a></span><span class="message">on my x200 laptop it takes 29seconds</span></div><div class="line" id="184220"><span class="nick" style="color:#2e2a4a"><a href="#184220" label="[18:42:20]">&lt;oriansj&gt;</a></span><span class="message">(Taurinus X200 because buying libreboot laptops is why harder than it should be)</span></div><div class="line" id="184606"><span class="nick" style="color:#2e2a4a"><a href="#184606" label="[18:46:06]">&lt;oriansj&gt;</a></span><span class="message">janneke: haven't heard anything from you for a while. How goes the RISC-V porting of MesCC?</span></div><div class="line" id="184946"><span class="nick" style="color:#8dd3c7"><a href="#184946" label="[18:49:46]">&lt;stikonas&gt;</a></span><span class="message">I guess I should push at least non-debug elf header to m2libc</span></div><div class="line" id="185020"><span class="nick" style="color:#8dd3c7"><a href="#185020" label="[18:50:20]">&lt;stikonas&gt;</a></span><span class="message">hmm, no, they are not in m2libc</span></div><div class="line" id="185031"><span class="nick" style="color:#8dd3c7"><a href="#185031" label="[18:50:31]">&lt;stikonas&gt;</a></span><span class="message">oh, that's mescc-tools</span></div><div class="line" id="185743"><span class="nick" style="color:#2e2a4a"><a href="#185743" label="[18:57:43]">&lt;oriansj&gt;</a></span><span class="message">stikonas: mescc-tools has sample ELF-Headers to help people doing new ports to be able to make some simple tests for M1 and hex2 to work out issues before they do more serious work in hex2 or M1</span></div><div class="line" id="185811"><span class="nick" style="color:#2e2a4a"><a href="#185811" label="[18:58:11]">&lt;oriansj&gt;</a></span><span class="message">M2libc is where the ELF headers that M2-Planet uses when it does builds</span></div><div class="line" id="185935"><span class="nick" style="color:#8dd3c7"><a href="#185935" label="[18:59:35]">&lt;stikonas&gt;</a></span><span class="message">oh ok, I see</span></div><div class="line" id="185938"><span class="nick" style="color:#2e2a4a"><a href="#185938" label="[18:59:38]">&lt;oriansj&gt;</a></span><span class="message">although I problably eliminate the mescc-tools ELF-headers and switch to using the M2libc ELF headers instead.</span></div><div class="line" id="185956"><span class="nick" style="color:#8dd3c7"><a href="#185956" label="[18:59:56]">&lt;stikonas&gt;</a></span><span class="message">yeah, fewer duplicate files would be better</span></div><div class="line" id="190014"><span class="nick" style="color:#2e2a4a"><a href="#190014" label="[19:00:14]">&lt;oriansj&gt;</a></span><span class="message">So put your ELF-headers in M2libc and I'll just update mescc-tool's M2libc submodule</span></div><div class="line" id="190029"><span class="nick" style="color:#8dd3c7"><a href="#190029" label="[19:00:29]">&lt;stikonas&gt;</a></span><span class="message">well, so far I only tested non-debug header...</span></div><div class="line" id="190039"><span class="nick" style="color:#8dd3c7"><a href="#190039" label="[19:00:39]">&lt;stikonas&gt;</a></span><span class="message">so I'll do that one first</span></div><div class="line" id="190057"><span class="nick" style="color:#8dd3c7"><a href="#190057" label="[19:00:57]">&lt;stikonas&gt;</a></span><span class="message">on and I'll update M1 defs file a bit...</span></div><div class="line" id="190114"><span class="nick" style="color:#8dd3c7"><a href="#190114" label="[19:01:14]">&lt;stikonas&gt;</a></span><span class="message">it's good to have RS2_X aliases for bit shifting...</span></div><div class="line" id="190156"><span class="nick" style="color:#8dd3c7"><a href="#190156" label="[19:01:56]">&lt;stikonas&gt;</a></span><span class="message">because shift amount is in place of second source register</span></div><div class="line" id="190420"><span class="nick" style="color:#2e2a4a"><a href="#190420" label="[19:04:20]">&lt;oriansj&gt;</a></span><span class="message">stikonas: unless we tweak M1 to just have a single dedicated to that special immediate case</span></div><div class="line" id="190443"><span class="nick" style="color:#8dd3c7"><a href="#190443" label="[19:04:43]">&lt;stikonas&gt;</a></span><span class="message">well, if we can achieve something with defines, I think it's fine</span></div><div class="line" id="190453"><span class="nick" style="color:#8dd3c7"><a href="#190453" label="[19:04:53]">&lt;stikonas&gt;</a></span><span class="message">simpler than adding more code to M1</span></div><div class="line" id="190528"><span class="nick" style="color:#8dd3c7"><a href="#190528" label="[19:05:28]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/M2libc/pull/2">https://github.com/oriansj/M2libc/pull/2</a> </span></div><div class="line" id="190551"><span class="nick" style="color:#8dd3c7"><a href="#190551" label="[19:05:51]">&lt;stikonas&gt;</a></span><span class="message">e.g. if you are shifting by 17, you just issue RS2_X17</span></div><div class="line" id="190701"><span class="nick" style="color:#2e2a4a"><a href="#190701" label="[19:07:01]">&lt;oriansj&gt;</a></span><span class="message">which instruction format is the bitshifts?</span></div><div class="line" id="190734"><span class="nick" style="color:#8dd3c7"><a href="#190734" label="[19:07:34]">&lt;stikonas&gt;</a></span><span class="message">it's R-type</span></div><div class="line" id="190801"><span class="nick" style="color:#8dd3c7"><a href="#190801" label="[19:08:01]">&lt;stikonas&gt;</a></span><span class="message">but the shift amount is used instead of second source register</span></div><div class="line" id="190819"><span class="nick" style="color:#8dd3c7"><a href="#190819" label="[19:08:19]">&lt;stikonas&gt;</a></span><span class="message">well, maybe can use a shorter string than RS2_X...</span></div><div class="line" id="190829"><span class="nick" style="color:#8dd3c7"><a href="#190829" label="[19:08:29]">&lt;stikonas&gt;</a></span><span class="message">possibly one character string</span></div><div class="line" id="190833"><span class="nick" style="color:#2e2a4a"><a href="#190833" label="[19:08:33]">&lt;oriansj&gt;</a></span><span class="message">like $5</span></div><div class="line" id="190845"><span class="nick" style="color:#8dd3c7"><a href="#190845" label="[19:08:45]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="190901"><span class="nick" style="color:#2e2a4a"><a href="#190901" label="[19:09:01]">&lt;oriansj&gt;</a></span><span class="message">just a 3 line add in M1</span></div><div class="line" id="190908"><span class="nick" style="color:#8dd3c7"><a href="#190908" label="[19:09:08]">&lt;stikonas&gt;</a></span><span class="message">but $ is used for labels... with J-type</span></div><div class="line" id="191011"><span class="nick" style="color:#2e2a4a"><a href="#191011" label="[19:10:11]">&lt;oriansj&gt;</a></span><span class="message">stikonas: !@$~%&amp; followed by a number in M1 just become a block passed to hex2</span></div><div class="line" id="191046"><span class="nick" style="color:#2e2a4a"><a href="#191046" label="[19:10:46]">&lt;oriansj&gt;</a></span><span class="message">so $5 could very easily just become just R format in express_word</span></div><div class="line" id="191127"><span class="nick" style="color:#8dd3c7"><a href="#191127" label="[19:11:27]">&lt;stikonas&gt;</a></span><span class="message">well, yes, that would work, I was just thinking  it's a bit confusing to have same char for 2 different types</span></div><div class="line" id="191136"><span class="nick" style="color:#8dd3c7"><a href="#191136" label="[19:11:36]">&lt;stikonas&gt;</a></span><span class="message">technically we can use it</span></div><div class="line" id="191147"><span class="nick" style="color:#2e2a4a"><a href="#191147" label="[19:11:47]">&lt;oriansj&gt;</a></span><span class="message">that is why hex2 might support numbers for labels but M1 makes such input impossible</span></div><div class="line" id="191225"><span class="nick" style="color:#8dd3c7"><a href="#191225" label="[19:12:25]">&lt;stikonas&gt;</a></span><span class="message">I see</span></div><div class="line" id="191325"><span class="nick" style="color:#2e2a4a"><a href="#191325" label="[19:13:25]">&lt;oriansj&gt;</a></span><span class="message">but you are right it might be confusing</span></div><div class="line" id="191454"><span class="nick" style="color:#2e2a4a"><a href="#191454" label="[19:14:54]">&lt;oriansj&gt;</a></span><span class="message">we could do .5</span></div><div class="line" id="191511"><span class="nick" style="color:#2e2a4a"><a href="#191511" label="[19:15:11]">&lt;oriansj&gt;</a></span><span class="message">or &gt;5</span></div><div class="line" id="191751"><span class="nick" style="color:#8dd3c7"><a href="#191751" label="[19:17:51]">&lt;stikonas&gt;</a></span><span class="message">hmm, .5 might be interesting</span></div><div class="line" id="191801"><span class="nick" style="color:#8dd3c7"><a href="#191801" label="[19:18:01]">&lt;stikonas&gt;</a></span><span class="message">that would basically generate the same thing for hex2...</span></div><div class="line" id="191811"><span class="nick" style="color:#8dd3c7"><a href="#191811" label="[19:18:11]">&lt;stikonas&gt;</a></span><span class="message">(up to shift)</span></div><div class="line" id="191813"><span class="nick" style="color:#8dd3c7"><a href="#191813" label="[19:18:13]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="191835"><span class="nick" style="color:#8dd3c7"><a href="#191835" label="[19:18:35]">&lt;stikonas&gt;</a></span><span class="message">so .5 becomes .00005000</span></div><div class="line" id="191839"><span class="nick" style="color:#8dd3c7"><a href="#191839" label="[19:18:39]">&lt;stikonas&gt;</a></span><span class="message">in hex2</span></div><div class="line" id="191843"><span class="nick" style="color:#2e2a4a"><a href="#191843" label="[19:18:43]">&lt;oriansj&gt;</a></span><span class="message"> well .5 would expand in M1 into something like .00005000</span></div><div class="line" id="191904"><span class="nick" style="color:#2e2a4a"><a href="#191904" label="[19:19:04]">&lt;oriansj&gt;</a></span><span class="message">and then hex2 would just deal with the .00005000 input</span></div><div class="line" id="193817"><span class="nick" style="color:#2e2a4a"><a href="#193817" label="[19:38:17]">&lt;oriansj&gt;</a></span><span class="message">but that is something for you to decide if that is what you want stikonas</span></div><div class="line" id="193902"><span class="nick" style="color:#2e2a4a"><a href="#193902" label="[19:39:02]">&lt;oriansj&gt;</a></span><span class="message">and feel free to pick any of the following characters: !$&amp;. for this format inclusion</span></div><div class="line" id="194016"><span class="nick" style="color:#8dd3c7"><a href="#194016" label="[19:40:16]">&lt;stikonas&gt;</a></span><span class="message">well, we can see that later...</span></div><div class="line" id="194041"><span class="nick" style="color:#8dd3c7"><a href="#194041" label="[19:40:41]">&lt;stikonas&gt;</a></span><span class="message">I'll have to loook a bit at cc_*</span></div><div class="line" id="233712"><span class="nick" style="color:#80b1d3"><a href="#233712" label="[23:37:12]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; fossy: anything else in config.log?</span></div><div class="line" id="233729"><span class="nick" style="color:#80b1d3"><a href="#233729" label="[23:37:29]">&lt;fossy&gt;</a></span><span class="message">Yeah, __gmpz_init not defimed</span></div><div class="line" id="233735"><span class="nick" style="color:#8dd3c7"><a href="#233735" label="[23:37:35]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="233744"><span class="nick" style="color:#80b1d3"><a href="#233744" label="[23:37:44]">&lt;fossy&gt;</a></span><span class="message">grepping for that in /usr/lib and in strings shows nothing</span></div><div class="line" id="233752"><span class="nick" style="color:#80b1d3"><a href="#233752" label="[23:37:52]">&lt;fossy&gt;</a></span><span class="message">and libgmp.a is super small</span></div><div class="line" id="233800"><span class="nick" style="color:#80b1d3"><a href="#233800" label="[23:38:00]">&lt;fossy&gt;</a></span><span class="message">like 6kb</span></div><div class="line" id="233806"><span class="nick" style="color:#80b1d3"><a href="#233806" label="[23:38:06]">&lt;fossy&gt;</a></span><span class="message">which is wrong I think</span></div><div class="line" id="233819"><span class="nick" style="color:#8dd3c7"><a href="#233819" label="[23:38:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think it should be bigger</span></div><div class="line" id="233826"><span class="nick" style="color:#8dd3c7"><a href="#233826" label="[23:38:26]">&lt;stikonas&gt;</a></span><span class="message">gmp is a fairly big piece</span></div><div class="line" id="233844"><span class="nick" style="color:#80b1d3"><a href="#233844" label="[23:38:44]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="233905"><span class="nick" style="color:#8dd3c7"><a href="#233905" label="[23:39:05]">&lt;stikonas&gt;</a></span><span class="message">I expect at least half a megabyte</span></div><div class="line" id="233908"><span class="nick" style="color:#80b1d3"><a href="#233908" label="[23:39:08]">&lt;fossy&gt;</a></span><span class="message">im looking at gmp build files now</span></div><div class="line" id="233924"><span class="nick" style="color:#8dd3c7"><a href="#233924" label="[23:39:24]">&lt;stikonas&gt;</a></span><span class="message">are you changing prefix too at the same time?</span></div><div class="line" id="233931"><span class="nick" style="color:#8dd3c7"><a href="#233931" label="[23:39:31]">&lt;stikonas&gt;</a></span><span class="message">maybe that broke things rather than kernel</span></div><div class="line" id="234028"><span class="nick" style="color:#80b1d3"><a href="#234028" label="[23:40:28]">&lt;fossy&gt;</a></span><span class="message">yeah I am, I think that is pretty likely.</span></div><div class="line" id="234037"><span class="nick" style="color:#80b1d3"><a href="#234037" label="[23:40:37]">&lt;fossy&gt;</a></span><span class="message">Im trying in chroot to rule it out</span></div><br /></div></body></html>