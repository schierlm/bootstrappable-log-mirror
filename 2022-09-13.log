<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-09-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="023216"><span class="nick" style="color:#8dd3c7"><a href="#023216" label="[02:32:16]">&lt;oriansj&gt;</a></span><span class="message">God is sitting in Heaven when a scientist says to Him, &quot;Lord, we don't need you anymore. Science has finally figured out a way to create. In other words, we can now do what you did in the 'beginning'. &quot;Oh, is that so? Tell me...&quot; replies God. &quot;Well&quot;, says the scientist, &quot;we can take dirt and form it into the likeness of you and breathe life into it, thus creating man.&quot; &quot;Well, that's interesting. Show Me.&quot; So the scientist bends down to</span></div><div class="line" id="023217"><span class="nick" style="color:#8dd3c7"><a href="#023217" label="[02:32:17]">&lt;oriansj&gt;</a></span><span class="message">the ground and starts to mold the soil. &quot;Oh, no, no, no...&quot;, interrupts God. &quot;Get your own dirt.&quot;</span></div><div class="line" id="023415"><span class="nick" style="color:#2e2a4a"><a href="#023415" label="[02:34:15]">&lt;muurkha&gt;</a></span><span class="message">working on it</span></div><div class="line" id="023440"><span class="nick" style="color:#2e2a4a"><a href="#023440" label="[02:34:40]">&lt;muurkha&gt;</a></span><span class="message">oh, that's the DeRemer joke?</span></div><div class="line" id="023545"><span class="nick" style="color:#2e2a4a"><a href="#023545" label="[02:35:45]">&lt;muurkha&gt;</a></span><span class="message">I wrote a stupid text editor today: <a rel="nofollow" href="http://canonical.org/~kragen/sw/dev3/edumb.py">http://canonical.org/~kragen/sw/dev3/edumb.py</a> </span></div><div class="line" id="023626"><span class="nick" style="color:#2e2a4a"><a href="#023626" label="[02:36:26]">&lt;muurkha&gt;</a></span><span class="message">it's usable enough that I used it to add a couple of features to itself just now</span></div><div class="line" id="023725"><span class="nick" style="color:#2e2a4a"><a href="#023725" label="[02:37:25]">&lt;muurkha&gt;</a></span><span class="message">more usable than I thought it would be at this stage, but that's not saying much</span></div><div class="line" id="023801"><span class="nick" style="color:#2e2a4a"><a href="#023801" label="[02:38:01]">&lt;muurkha&gt;</a></span><span class="message">leah neukirchen pointed out that it probably would run in MicroPython with a little bit of work</span></div><div class="line" id="024114"><span class="nick" style="color:#2e2a4a"><a href="#024114" label="[02:41:14]">&lt;muurkha&gt;</a></span><span class="message">it's about 5/8 of the size of Anthony Howe's &quot;Ant's Editor&quot;, which is written in C</span></div><div class="line" id="024154"><span class="nick" style="color:#2e2a4a"><a href="#024154" label="[02:41:54]">&lt;muurkha&gt;</a></span><span class="message">and maybe a bit less usable</span></div><div class="line" id="024455"><span class="nick" style="color:#8dd3c7"><a href="#024455" label="[02:44:55]">&lt;oriansj&gt;</a></span><span class="message">well usable is a vague term</span></div><div class="line" id="024556"><span class="nick" style="color:#8dd3c7"><a href="#024556" label="[02:45:56]">&lt;oriansj&gt;</a></span><span class="message">as even SET is &quot;usable&quot; in the aweful sense</span></div><div class="line" id="024618"><span class="nick" style="color:#8dd3c7"><a href="#024618" label="[02:46:18]">&lt;oriansj&gt;</a></span><span class="message">but I guess it encourages short lines</span></div><div class="line" id="024721"><span class="nick" style="color:#8dd3c7"><a href="#024721" label="[02:47:21]">&lt;oriansj&gt;</a></span><span class="message">especially when every edit requires you to write the line from scratch</span></div><div class="line" id="024951"><span class="nick" style="color:#6b8072"><a href="#024951" label="[02:49:51]">&lt;blockhead&gt;</a></span><span class="message">everyone should write a text editor.  fun, learn stuff, and it feels great when you get it working</span></div><div class="line" id="025204"><span class="nick" style="color:#2e2a4a"><a href="#025204" label="[02:52:04]">&lt;muurkha&gt;</a></span><span class="message">yeah, edumb is definitely more usable than that :)</span></div><div class="line" id="025251"><span class="nick" style="color:#2e2a4a"><a href="#025251" label="[02:52:51]">&lt;muurkha&gt;</a></span><span class="message">it has infinite undo and incremental search forward and backward</span></div><div class="line" id="025259"><span class="nick" style="color:#2e2a4a"><a href="#025259" label="[02:52:59]">&lt;muurkha&gt;</a></span><span class="message">assuming you have infinite memory anyway</span></div><div class="line" id="031552"><span class="nick" style="color:#8dd3c7"><a href="#031552" label="[03:15:52]">&lt;oriansj&gt;</a></span><span class="message">well SET was designed to edit paper tapes and work in 512bytes of memory on a 12bit processor</span></div><div class="line" id="031705"><span class="nick" style="color:#8dd3c7"><a href="#031705" label="[03:17:05]">&lt;oriansj&gt;</a></span><span class="message">although a later version supported editing of single words and moving forward and backward one word at a time.</span></div><div class="line" id="101355"><span class="nick" style="color:#80b1d3"><a href="#101355" label="[10:13:55]">&lt;fossy&gt;</a></span><span class="message">hey doras, stikonas, regarding static/dynamic linking, i'm happy for dynamic linking to be avaliable as an option - particularly for post-bootstrap use (distros, etc). i'm not particularly convinced on using it for live-bootstrap itself however -- its much nicer to be able to manipulate the binaries into whatever &quot;shape&quot; you want after the bootstrap is complete</span></div><div class="line" id="101424"><span class="nick" style="color:#80b1d3"><a href="#101424" label="[10:14:24]">&lt;fossy&gt;</a></span><span class="message">if they're dynamic any process after the bootstrap has to keep around a lot of baggage for a little while</span></div><div class="line" id="102916"><span class="nick" style="color:#6d2462"><a href="#102916" label="[10:29:16]">&lt;aggi&gt;</a></span><span class="message">fyi, just made a decision this morning, to roll-back to linux-2.4(2.6) with tcc-toolchain</span></div><div class="line" id="102951"><span class="nick" style="color:#6d2462"><a href="#102951" label="[10:29:51]">&lt;aggi&gt;</a></span><span class="message">i'll keep the frozen/archived gcc47 c-only toolchain system profile of cause</span></div><div class="line" id="103059"><span class="nick" style="color:#6d2462"><a href="#103059" label="[10:30:59]">&lt;aggi&gt;</a></span><span class="message">however, although almost everything from the gcc47 profile too passed with tcc-toolchain, with mes-libc a rebuild from scratch is unavoidable</span></div><div class="line" id="103137"><span class="nick" style="color:#6d2462"><a href="#103137" label="[10:31:37]">&lt;aggi&gt;</a></span><span class="message">pushing forward beyond gcc47 is futile, as far as the acceptance criteria of mine are concerned</span></div><div class="line" id="103202"><span class="nick" style="color:#6d2462"><a href="#103202" label="[10:32:02]">&lt;aggi&gt;</a></span><span class="message">and then, why not, roll-back linux kernel to something which is known to be supported with tcc-toolchain, linux-2.4/x86?</span></div><div class="line" id="103239"><span class="nick" style="color:#6d2462"><a href="#103239" label="[10:32:39]">&lt;aggi&gt;</a></span><span class="message">problem solved, i keep the gcc47/linux-5.10 profile archived/frozen, and with tcc-toolchain just roll-back another 10years</span></div><div class="line" id="103336"><span class="nick" style="color:#6d2462"><a href="#103336" label="[10:33:36]">&lt;aggi&gt;</a></span><span class="message">let's see how far i can proceed with mes-libc/tcc-toolchain/linux-2.4(2.6)/toybox-userspace</span></div><div class="line" id="103448"><span class="nick" style="color:#6d2462"><a href="#103448" label="[10:34:48]">&lt;aggi&gt;</a></span><span class="message">i did refrain from x86 as a priority, due to the closed-source hardware nature of it; however ao486 at least does provide a proof-of-concept open-hardware is available with x86</span></div><div class="line" id="103503"><span class="nick" style="color:#6d2462"><a href="#103503" label="[10:35:03]">&lt;aggi&gt;</a></span><span class="message">and this isn't that much better or worse than any ARM/RISC-V whatever anyway</span></div><div class="line" id="103745"><span class="nick" style="color:#6d2462"><a href="#103745" label="[10:37:45]">&lt;aggi&gt;</a></span><span class="message">chances are, a self-hosting/bootstrappable system is possible with linux-2.4(x86)/tcc-toolchain/toybox</span></div><div class="line" id="103819"><span class="nick" style="color:#6d2462"><a href="#103819" label="[10:38:19]">&lt;aggi&gt;</a></span><span class="message">too, linux-kernel build was already verified with kernel-2.4, hence this spares me alot of effort to repair kernel-5.10 i currently blocked at (C11 trouble)</span></div><div class="line" id="103844"><span class="nick" style="color:#6d2462"><a href="#103844" label="[10:38:44]">&lt;aggi&gt;</a></span><span class="message">tcc-toolchain is known to support linux-2.4/x86</span></div><div class="line" id="103905"><span class="nick" style="color:#6d2462"><a href="#103905" label="[10:39:05]">&lt;aggi&gt;</a></span><span class="message">furthermore, on x86 the blocker at uboot-loader (python3/libffi not passing with tcc-toolchain) is void</span></div><div class="line" id="103941"><span class="nick" style="color:#6d2462"><a href="#103941" label="[10:39:41]">&lt;aggi&gt;</a></span><span class="message">and, the firmware situation, as a proof-of-concept, with an ao486 SoC isn't that bad either (some bochs/seabios)</span></div><div class="line" id="104329"><span class="nick" style="color:#234e69"><a href="#104329" label="[10:43:29]">&lt;Hagfish&gt;</a></span><span class="message">great point about the ao486, aggi</span></div><div class="line" id="104334"><span class="nick" style="color:#234e69"><a href="#104334" label="[10:43:34]">&lt;Hagfish&gt;</a></span><span class="message">i hadn't heard of that, thank you</span></div><div class="line" id="104521"><span class="nick" style="color:#6d2462"><a href="#104521" label="[10:45:21]">&lt;aggi&gt;</a></span><span class="message">ao486 and x86 in general got many problems, however, any ARM/RISC-V/whatever, in practice, aren't any better or worse</span></div><div class="line" id="104540"><span class="nick" style="color:#6d2462"><a href="#104540" label="[10:45:40]">&lt;aggi&gt;</a></span><span class="message">regardless of what the marketing spam mills from sillicon valley excrete</span></div><div class="line" id="104620"><span class="nick" style="color:#6d2462"><a href="#104620" label="[10:46:20]">&lt;aggi&gt;</a></span><span class="message">and x86/linux-2.4(2.6) got another huge advantage: stability, known to compile with tcc-toolchain</span></div><div class="line" id="104659"><span class="nick" style="color:#6d2462"><a href="#104659" label="[10:46:59]">&lt;aggi&gt;</a></span><span class="message">i had that many issues with linux 4.4/5.10 etc. and various aarch32/64 systems, i am not willing to waste my time with this</span></div><div class="line" id="104741"><span class="nick" style="color:#6d2462"><a href="#104741" label="[10:47:41]">&lt;aggi&gt;</a></span><span class="message">anyway, to verify this approach, this is the next milestone: mes-libc+toybox</span></div><div class="line" id="104800"><span class="nick" style="color:#6d2462"><a href="#104800" label="[10:48:00]">&lt;aggi&gt;</a></span><span class="message">compiled/linked with tcc-toolchain _only_; no gcc, no binutils, no autotools, none of this</span></div><div class="line" id="104827"><span class="nick" style="color:#6d2462"><a href="#104827" label="[10:48:27]">&lt;aggi&gt;</a></span><span class="message">and somehow retain a self-hosting system which can bootstrap/compile itself; i think it is possible</span></div><div class="line" id="104846"><span class="nick" style="color:#6d2462"><a href="#104846" label="[10:48:46]">&lt;aggi&gt;</a></span><span class="message">if, mes-libc/toybox etc pass with tcc-toolchain, and if linux-kernel pass with tcc-toolchain</span></div><div class="line" id="104900"><span class="nick" style="color:#6d2462"><a href="#104900" label="[10:49:00]">&lt;aggi&gt;</a></span><span class="message">and for this, i am willing, to roll-back to linux-2.4</span></div><div class="line" id="105718"><span class="nick" style="color:#234e69"><a href="#105718" label="[10:57:18]">&lt;Hagfish&gt;</a></span><span class="message">yeah, i think those are valid and achievable goals</span></div><div class="line" id="105746"><span class="nick" style="color:#234e69"><a href="#105746" label="[10:57:46]">&lt;Hagfish&gt;</a></span><span class="message">you don't want to do too many epic impossible things at once, or you'll not leave any challenges for future generations :)</span></div><div class="line" id="142504"><span class="nick" style="color:#6c3d55"><a href="#142504" label="[14:25:04]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy, doras: maybe then it makes sense to postpone dynamic linking until after newer GCC (10 or so). Then we don't need any patches</span></div><div class="line" id="142631"><span class="nick" style="color:#6c3d55"><a href="#142631" label="[14:26:31]">&lt;stikonas[m]&gt;</a></span><span class="message">Though if autogen is going to be bootstrapped by mihi, I would prefer to put newer GCC after autogen</span></div><div class="line" id="142712"><span class="nick" style="color:#6c3d55"><a href="#142712" label="[14:27:12]">&lt;stikonas[m]&gt;</a></span><span class="message">And maybe even do newer binutils after autogen</span></div><div class="line" id="143404"><span class="nick" style="color:#80b1d3"><a href="#143404" label="[14:34:04]">&lt;fossy&gt;</a></span><span class="message">yep, autogen really should go as early as possible if autogen can be bootstraped</span></div><div class="line" id="143415"><span class="nick" style="color:#80b1d3"><a href="#143415" label="[14:34:15]">&lt;fossy&gt;</a></span><span class="message">rather impressive mihi is working on it as well, it's an absolute mess</span></div><div class="line" id="143838"><span class="nick" style="color:#6c3d55"><a href="#143838" label="[14:38:38]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, it has to go after guile</span></div><div class="line" id="143847"><span class="nick" style="color:#6c3d55"><a href="#143847" label="[14:38:47]">&lt;stikonas[m]&gt;</a></span><span class="message">Which needs g++</span></div><div class="line" id="143900"><span class="nick" style="color:#6c3d55"><a href="#143900" label="[14:39:00]">&lt;stikonas[m]&gt;</a></span><span class="message">So either after gcc 4.7.4</span></div><div class="line" id="143923"><span class="nick" style="color:#6c3d55"><a href="#143923" label="[14:39:23]">&lt;stikonas[m]&gt;</a></span><span class="message">Or we need to add g++ to 4.0.4 but I think former is ok</span></div><div class="line" id="144004"><span class="nick" style="color:#6c3d55"><a href="#144004" label="[14:40:04]">&lt;stikonas[m]&gt;</a></span><span class="message">And yes, I agree that it is rather impressive</span></div><div class="line" id="145433"><span class="nick" style="color:#2e2a4a"><a href="#145433" label="[14:54:33]">&lt;muurkha&gt;</a></span><span class="message">well, I suppose that edumb wouldn't be very usable in 512 bytes of memory :)</span></div><div class="line" id="181457"><span class="nick" style="color:#d9d9d9"><a href="#181457" label="[18:14:57]">&lt;doras&gt;</a></span><span class="message">stikonas: I guess we can always drop the patches if/when we decide to remove support for dynamic linking in that stage of the bootstrap. It would be a shame to postpone this feature until we get a newer GCC going.</span></div><div class="line" id="181903"><span class="nick" style="color:#bc80bd"><a href="#181903" label="[18:19:03]">&lt;mihi&gt;</a></span><span class="message">I've eliminated the remaining generated files from <a rel="nofollow" href="https://github.com/schierlm/gnu-autogen-bootstrapping">https://github.com/schierlm/gnu-autogen-bootstrapping</a>  and did not find any more ones during the process. Yet before announcing it to be completed, I'd love if anyone of you could double-check if I missed some obvious generated files. Tarball mode is also there now, but it needs a bunch of files from the git repository as well as they are not</span></div><div class="line" id="181903"><span class="nick" style="color:#bc80bd"><a href="#181903" label="[18:19:03]">&lt;mihi&gt;</a></span><span class="message">included in the tarball.</span></div><div class="line" id="181934"><span class="nick" style="color:#bc80bd"><a href="#181934" label="[18:19:34]">&lt;mihi&gt;</a></span><span class="message">(I also removed the wip branch and squashed it to become the new main branch)</span></div><div class="line" id="182458"><span class="nick" style="color:#6c3d55"><a href="#182458" label="[18:24:58]">&lt;stikonas[m]&gt;</a></span><span class="message">doras: no need to postpone, we can merge them soon and later move dynamic support after newer GCC</span></div><div class="line" id="182550"><span class="nick" style="color:#6c3d55"><a href="#182550" label="[18:25:50]">&lt;stikonas[m]&gt;</a></span><span class="message">mihi: I can take a look later today</span></div><div class="line" id="184927"><span class="nick" style="color:#d9d9d9"><a href="#184927" label="[18:49:27]">&lt;doras&gt;</a></span><span class="message">stikonas: sure. I'm doing a final round of bootstraps for both PRs after handling the review comments.</span></div><div class="line" id="224023"><span class="nick" style="color:#3c5b35"><a href="#224023" label="[22:40:23]">&lt;stikonas&gt;</a></span><span class="message">any ideas what might be going wrong with linking against guile here: <a rel="nofollow" href="https://stikonas.eu/files/bootstrap/log.txt">https://stikonas.eu/files/bootstrap/log.txt</a> </span></div><div class="line" id="224045"><span class="nick" style="color:#3c5b35"><a href="#224045" label="[22:40:45]">&lt;stikonas&gt;</a></span><span class="message">is guile itself improperly linked?</span></div><div class="line" id="224950"><span class="nick" style="color:#3c5b35"><a href="#224950" label="[22:49:50]">&lt;stikonas&gt;</a></span><span class="message">readelf -a does contain     45: 00000000     0 NOTYPE  GLOBAL DEFAULT  UND u8_check</span></div><div class="line" id="225454"><span class="nick" style="color:#3c5b35"><a href="#225454" label="[22:54:54]">&lt;stikonas&gt;</a></span><span class="message">oh, that was because I was missing --static in pkg-config flags</span></div><div class="line" id="230109"><span class="nick" style="color:#3c5b35"><a href="#230109" label="[23:01:09]">&lt;stikonas&gt;</a></span><span class="message">mihi: <a rel="nofollow" href="https://github.com/schierlm/gnu-autogen-bootstrapping/pull/1">https://github.com/schierlm/gnu-autogen-bootstrapping/pull/1</a> </span></div><div class="line" id="230135"><span class="nick" style="color:#3c5b35"><a href="#230135" label="[23:01:35]">&lt;stikonas&gt;</a></span><span class="message">I still have some failures but I did get to stage1 autogen binary</span></div><div class="line" id="230527"><span class="nick" style="color:#3c5b35"><a href="#230527" label="[23:05:27]">&lt;stikonas&gt;</a></span><span class="message">mihi: so I'm getting this: <a rel="nofollow" href="https://paste.debian.net/1253777/">https://paste.debian.net/1253777/</a> </span></div><div class="line" id="231916"><span class="nick" style="color:#3c5b35"><a href="#231916" label="[23:19:16]">&lt;stikonas&gt;</a></span><span class="message">fossy, mihi: the good news is that stage1 autogen is already enough to bootstrap gcc's Makefile.in</span></div><div class="line" id="231956"><span class="nick" style="color:#3c5b35"><a href="#231956" label="[23:19:56]">&lt;stikonas&gt;</a></span><span class="message">even if I still have some issues with further autogen bootstrap steps</span></div><div class="line" id="232056"><span class="nick" style="color:#3c5b35"><a href="#232056" label="[23:20:56]">&lt;stikonas&gt;</a></span><span class="message">mihi: any ideas about <a rel="nofollow" href="https://paste.debian.net/1253777/">https://paste.debian.net/1253777/</a>  ?</span></div><div class="line" id="232145"><span class="nick" style="color:#bc80bd"><a href="#232145" label="[23:21:45]">&lt;mihi&gt;</a></span><span class="message">stikonas, about your mk-opt-table-error: Do you have a chance to look at the generated autogen input file? It is built with sed from the script and some long egrep command, and I am not 100% sure that old sed/egrep will build that properly.</span></div><div class="line" id="232210"><span class="nick" style="color:#3c5b35"><a href="#232210" label="[23:22:10]">&lt;stikonas&gt;</a></span><span class="message">mihi: I can take a look, but might be tomorrow</span></div><div class="line" id="232218"><span class="nick" style="color:#3c5b35"><a href="#232218" label="[23:22:18]">&lt;stikonas&gt;</a></span><span class="message">I've exited that live-bootstrap session...</span></div><div class="line" id="232218"><span class="nick" style="color:#bc80bd"><a href="#232218" label="[23:22:18]">&lt;mihi&gt;</a></span><span class="message">i.e. /tmp/cm-opt-FeuBjz</span></div><div class="line" id="232227"><span class="nick" style="color:#3c5b35"><a href="#232227" label="[23:22:27]">&lt;stikonas&gt;</a></span><span class="message">well, I can try to launch another one</span></div><div class="line" id="232229"><span class="nick" style="color:#3c5b35"><a href="#232229" label="[23:22:29]">&lt;stikonas&gt;</a></span><span class="message">but it takes 2h</span></div><div class="line" id="232307"><span class="nick" style="color:#bc80bd"><a href="#232307" label="[23:23:07]">&lt;mihi&gt;</a></span><span class="message">Another idea might be to run the same file through a statically linked non-bootstrapped autogen, the original defparse has &quot;slightly&quot; better error reporting than the bootstrapped stage1.</span></div><div class="line" id="232307"><span class="nick" style="color:#3c5b35"><a href="#232307" label="[23:23:07]">&lt;stikonas&gt;</a></span><span class="message">I started it, hopefully it finishes before I go to bed</span></div><div class="line" id="232331"><span class="nick" style="color:#3c5b35"><a href="#232331" label="[23:23:31]">&lt;stikonas&gt;</a></span><span class="message">hmm, true, I can do that</span></div><div class="line" id="232348"><span class="nick" style="color:#3c5b35"><a href="#232348" label="[23:23:48]">&lt;stikonas&gt;</a></span><span class="message">mihi: and how do you think we should deal with pkg-config flags?</span></div><div class="line" id="232352"><span class="nick" style="color:#bc80bd"><a href="#232352" label="[23:23:52]">&lt;mihi&gt;</a></span><span class="message">but my assumption is that when you look at the file, something is already messed up so far that it is no valid Autogen file any more.</span></div><div class="line" id="232401"><span class="nick" style="color:#3c5b35"><a href="#232401" label="[23:24:01]">&lt;stikonas&gt;</a></span><span class="message">could be...</span></div><div class="line" id="232426"><span class="nick" style="color:#bc80bd"><a href="#232426" label="[23:24:26]">&lt;mihi&gt;</a></span><span class="message">to be honest, I don't have experience with pkg-config and the flags I used were mainly trial and error (tested on Linux and cygwin)</span></div><div class="line" id="232426"><span class="nick" style="color:#3c5b35"><a href="#232426" label="[23:24:26]">&lt;stikonas&gt;</a></span><span class="message">mihi: I guess we want to support both statically and dynamically linked guile?</span></div><div class="line" id="232435"><span class="nick" style="color:#3c5b35"><a href="#232435" label="[23:24:35]">&lt;stikonas&gt;</a></span><span class="message">well, I don't have much experience either</span></div><div class="line" id="232451"><span class="nick" style="color:#3c5b35"><a href="#232451" label="[23:24:51]">&lt;stikonas&gt;</a></span><span class="message">but it seems like your flags only work if guile is build dynamically</span></div><div class="line" id="232514"><span class="nick" style="color:#bc80bd"><a href="#232514" label="[23:25:14]">&lt;mihi&gt;</a></span><span class="message">I'd like it to work with stock debian packages (guile-2.2 and guile-3.0), and of course in live-bootstrap.</span></div><div class="line" id="232532"><span class="nick" style="color:#bc80bd"><a href="#232532" label="[23:25:32]">&lt;mihi&gt;</a></span><span class="message">feel free to introduce one or two more shell variables for that :)</span></div><div class="line" id="232540"><span class="nick" style="color:#3c5b35"><a href="#232540" label="[23:25:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, we can do either that</span></div><div class="line" id="232603"><span class="nick" style="color:#3c5b35"><a href="#232603" label="[23:26:03]">&lt;stikonas&gt;</a></span><span class="message">or try to check if static build works, if not try dynamic</span></div><div class="line" id="232621"><span class="nick" style="color:#3c5b35"><a href="#232621" label="[23:26:21]">&lt;stikonas&gt;</a></span><span class="message">though I might need to setup some other build environment for that</span></div><div class="line" id="232629"><span class="nick" style="color:#3c5b35"><a href="#232629" label="[23:26:29]">&lt;stikonas&gt;</a></span><span class="message">right now I don't have guile-3.0 on my system (only guile-2.2)</span></div><div class="line" id="232638"><span class="nick" style="color:#3c5b35"><a href="#232638" label="[23:26:38]">&lt;stikonas&gt;</a></span><span class="message">and live-bootstrap does not yet support dynamic linking</span></div><div class="line" id="232646"><span class="nick" style="color:#3c5b35"><a href="#232646" label="[23:26:46]">&lt;stikonas&gt;</a></span><span class="message">though doras is working on it</span></div><div class="line" id="232720"><span class="nick" style="color:#3c5b35"><a href="#232720" label="[23:27:20]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll still have to check for pregenerated files...</span></div><div class="line" id="232729"><span class="nick" style="color:#3c5b35"><a href="#232729" label="[23:27:29]">&lt;stikonas&gt;</a></span><span class="message">today I was mostly trying to get it running in live-bootstrap</span></div><div class="line" id="232737"><span class="nick" style="color:#bc80bd"><a href="#232737" label="[23:27:37]">&lt;mihi&gt;</a></span><span class="message">at which point is the linkage failing? already when you are building the getGuileVersion binary (which only needs header files)?</span></div><div class="line" id="232751"><span class="nick" style="color:#bc80bd"><a href="#232751" label="[23:27:51]">&lt;mihi&gt;</a></span><span class="message">or later when linking &quot;the real thing&quot;?</span></div><div class="line" id="232814"><span class="nick" style="color:#bc80bd"><a href="#232814" label="[23:28:14]">&lt;mihi&gt;</a></span><span class="message">if the latter, it may be a good idea to try with a smaller binary first (similar to how Autoconf works).</span></div><div class="line" id="232852"><span class="nick" style="color:#bc80bd"><a href="#232852" label="[23:28:52]">&lt;mihi&gt;</a></span><span class="message">but I think, shell variables should also work fine.</span></div><div class="line" id="233016"><span class="nick" style="color:#3c5b35"><a href="#233016" label="[23:30:16]">&lt;stikonas&gt;</a></span><span class="message">mihi: no, when I'm linking autogen (that last gcc command)</span></div><div class="line" id="233045"><span class="nick" style="color:#bc80bd"><a href="#233045" label="[23:30:45]">&lt;mihi&gt;</a></span><span class="message">I probably won't be awake in 2h anyway, so if you prefer me to do some live debugging, we'd have to do that tomorrow evening.</span></div><div class="line" id="233058"><span class="nick" style="color:#bc80bd"><a href="#233058" label="[23:30:58]">&lt;mihi&gt;</a></span><span class="message">otherwise if you just want to poke at it, feel free to do so :)</span></div><div class="line" id="233105"><span class="nick" style="color:#3c5b35"><a href="#233105" label="[23:31:05]">&lt;stikonas&gt;</a></span><span class="message">ok, let's do tomorrow evening, I can try to poke a bit</span></div><div class="line" id="233126"><span class="nick" style="color:#3c5b35"><a href="#233126" label="[23:31:26]">&lt;stikonas&gt;</a></span><span class="message">as for flags, my temporary workaround was $(pkg-config guile-3.0 --libs) -&gt; $(pkg-config guile-3.0 --libs --static)</span></div><div class="line" id="233149"><span class="nick" style="color:#3c5b35"><a href="#233149" label="[23:31:49]">&lt;stikonas&gt;</a></span><span class="message">but I think that will break bootstrap if there is no guile with static-libs</span></div><div class="line" id="233155"><span class="nick" style="color:#3c5b35"><a href="#233155" label="[23:31:55]">&lt;stikonas&gt;</a></span><span class="message">which is probably the case on debian</span></div><div class="line" id="233225"><span class="nick" style="color:#3c5b35"><a href="#233225" label="[23:32:25]">&lt;stikonas&gt;</a></span><span class="message">anyway, that's solvable issue and shouldn't be too hard</span></div><div class="line" id="233254"><span class="nick" style="color:#bc80bd"><a href="#233254" label="[23:32:54]">&lt;mihi&gt;</a></span><span class="message">if you want to have a look at the code, the script that breaks is <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/autogen.git/tree/add-on/char-mapper/mk-opt-table.sh?h=v5.18.16#n74">https://git.savannah.gnu.org/cgit/autogen.git/tree/add-on/char-mapper/mk-opt-table.sh?h=v5.18.16#n74</a> </span></div><div class="line" id="233330"><span class="nick" style="color:#bc80bd"><a href="#233330" label="[23:33:30]">&lt;mihi&gt;</a></span><span class="message">and a few lines above is the sed command that builds the temp file, from parts of the script starting at line 131</span></div><div class="line" id="233341"><span class="nick" style="color:#3c5b35"><a href="#233341" label="[23:33:41]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll see if I find some time...</span></div><div class="line" id="233358"><span class="nick" style="color:#3c5b35"><a href="#233358" label="[23:33:58]">&lt;stikonas&gt;</a></span><span class="message">and at some point later I still need to backport fixes to bootstrap-tarball.sh script...</span></div><div class="line" id="233430"><span class="nick" style="color:#bc80bd"><a href="#233430" label="[23:34:30]">&lt;mihi&gt;</a></span><span class="message">if you don't find time, no big deal, bootstrapping can wait :)</span></div><div class="line" id="233445"><span class="nick" style="color:#3c5b35"><a href="#233445" label="[23:34:45]">&lt;stikonas&gt;</a></span><span class="message">yeah, in any case, impressive work as always</span></div><div class="line" id="233454"><span class="nick" style="color:#3c5b35"><a href="#233454" label="[23:34:54]">&lt;stikonas&gt;</a></span><span class="message">first guile, now autogen :)</span></div><div class="line" id="233501"><span class="nick" style="color:#bc80bd"><a href="#233501" label="[23:35:01]">&lt;mihi&gt;</a></span><span class="message">your PR succeeded on the GitHub workers, merged :)</span></div><div class="line" id="233608"><span class="nick" style="color:#3c5b35"><a href="#233608" label="[23:36:08]">&lt;stikonas&gt;</a></span><span class="message">well, HAVE_UINTMAX_T was the only slightly risky change, the others were quite safe</span></div><div class="line" id="233610"><span class="nick" style="color:#bc80bd"><a href="#233610" label="[23:36:10]">&lt;mihi&gt;</a></span><span class="message">where Guile was more about thinking how, then the actual implementation was done rather fast. Autogen was more like lots of small hurdles and lots of trial&amp;error until I got to the point where stage1 autogen could actually bootstrap the whole thing.</span></div><div class="line" id="233638"><span class="nick" style="color:#3c5b35"><a href="#233638" label="[23:36:38]">&lt;stikonas&gt;</a></span><span class="message">in any case, stage1 autogen is good enough for gcc</span></div><div class="line" id="233649"><span class="nick" style="color:#bc80bd"><a href="#233649" label="[23:36:49]">&lt;mihi&gt;</a></span><span class="message">at least the version you are currently bootstrapping :)</span></div><div class="line" id="233700"><span class="nick" style="color:#3c5b35"><a href="#233700" label="[23:37:00]">&lt;stikonas&gt;</a></span><span class="message">yeah, I only tried gcc 4.7.4...</span></div><div class="line" id="233705"><span class="nick" style="color:#3c5b35"><a href="#233705" label="[23:37:05]">&lt;stikonas&gt;</a></span><span class="message">which is already built with workarounds</span></div><div class="line" id="233715"><span class="nick" style="color:#3c5b35"><a href="#233715" label="[23:37:15]">&lt;stikonas&gt;</a></span><span class="message">anyway, we'll figure out the rest</span></div><div class="line" id="233720"><span class="nick" style="color:#bc80bd"><a href="#233720" label="[23:37:20]">&lt;mihi&gt;</a></span><span class="message">and in case it is really some sed/egrep issue, maybe you later have more recent versions of it and it can bootstrap the whole thing.</span></div><div class="line" id="233721"><span class="nick" style="color:#3c5b35"><a href="#233721" label="[23:37:21]">&lt;stikonas&gt;</a></span><span class="message">and hopefully build full autogen</span></div><div class="line" id="233740"><span class="nick" style="color:#bc80bd"><a href="#233740" label="[23:37:40]">&lt;mihi&gt;</a></span><span class="message">or patch the scripts, of course :)</span></div><div class="line" id="233740"><span class="nick" style="color:#3c5b35"><a href="#233740" label="[23:37:40]">&lt;stikonas&gt;</a></span><span class="message">yes, it might be sed or egrep bug...</span></div><div class="line" id="233757"><span class="nick" style="color:#3c5b35"><a href="#233757" label="[23:37:57]">&lt;stikonas&gt;</a></span><span class="message">might need to build newer version</span></div><div class="line" id="233810"><span class="nick" style="color:#3c5b35"><a href="#233810" label="[23:38:10]">&lt;stikonas&gt;</a></span><span class="message">though at least they are now build with musl and not meslibc, so far less buggy</span></div><div class="line" id="233813"><span class="nick" style="color:#bc80bd"><a href="#233813" label="[23:38:13]">&lt;mihi&gt;</a></span><span class="message">maybe run the bootstrap on your machine (outside live-bootstrap) to that point so you have a file to compare to :)</span></div><div class="line" id="233829"><span class="nick" style="color:#3c5b35"><a href="#233829" label="[23:38:29]">&lt;stikonas&gt;</a></span><span class="message">I can, though I need to install guile-3.0</span></div><div class="line" id="233854"><span class="nick" style="color:#bc80bd"><a href="#233854" label="[23:38:54]">&lt;mihi&gt;</a></span><span class="message">guile-2.2 should work as well if you change the pkg-config calls</span></div><div class="line" id="233858"><span class="nick" style="color:#3c5b35"><a href="#233858" label="[23:38:58]">&lt;stikonas&gt;</a></span><span class="message">otherrwise I get ../../../getGuileVersion.c:13:10: fatal error: libguile/version.h: File does not exist</span></div><div class="line" id="233859"><span class="nick" style="color:#3c5b35"><a href="#233859" label="[23:38:59]">&lt;stikonas&gt;</a></span><span class="message">gmm</span></div><div class="line" id="233905"><span class="nick" style="color:#3c5b35"><a href="#233905" label="[23:39:05]">&lt;stikonas&gt;</a></span><span class="message">maybe some Gentoo env issue</span></div><div class="line" id="233923"><span class="nick" style="color:#bc80bd"><a href="#233923" label="[23:39:23]">&lt;mihi&gt;</a></span><span class="message">maybe, I only tested it on Debian derivatives so far.</span></div><div class="line" id="233939"><span class="nick" style="color:#3c5b35"><a href="#233939" label="[23:39:39]">&lt;stikonas&gt;</a></span><span class="message">well, I could try to see what's going wrong on Gentoo too</span></div><div class="line" id="233957"><span class="nick" style="color:#3c5b35"><a href="#233957" label="[23:39:57]">&lt;stikonas&gt;</a></span><span class="message">though again, might have to wait a bit</span></div><div class="line" id="234030"><span class="nick" style="color:#bc80bd"><a href="#234030" label="[23:40:30]">&lt;mihi&gt;</a></span><span class="message">&quot;pkg-config guile-3.0 --cflags&quot; and/or &quot;pkg-config guile-2.0 --cflags&quot; work for you and include the includepath?</span></div><div class="line" id="234112"><span class="nick" style="color:#bc80bd"><a href="#234112" label="[23:41:12]">&lt;mihi&gt;</a></span><span class="message">anyway, see you all tomorrow :)</span></div><div class="line" id="234115"><span class="nick" style="color:#3c5b35"><a href="#234115" label="[23:41:15]">&lt;stikonas&gt;</a></span><span class="message">I think $(pkg-config guile-3.0 --cflags)</span></div><div class="line" id="234121"><span class="nick" style="color:#3c5b35"><a href="#234121" label="[23:41:21]">&lt;stikonas&gt;</a></span><span class="message">is not able to find guile-2.2</span></div><div class="line" id="234153"><span class="nick" style="color:#3c5b35"><a href="#234153" label="[23:41:53]">&lt;stikonas&gt;</a></span><span class="message">pkg-config guile-2.2 --cflags works</span></div><div class="line" id="234155"><span class="nick" style="color:#bc80bd"><a href="#234155" label="[23:41:55]">&lt;mihi&gt;</a></span><span class="message">yeah, that may be. So time for another shell variable :)</span></div><div class="line" id="234228"><span class="nick" style="color:#3c5b35"><a href="#234228" label="[23:42:28]">&lt;stikonas&gt;</a></span><span class="message">ok, see you tomorrow</span></div><div class="line" id="235333"><span class="nick" style="color:#8dd3c7"><a href="#235333" label="[23:53:33]">&lt;oriansj&gt;</a></span><span class="message">although going through my old emails to pick out the bootstrappable mailing list, there are a few good emails that weren't sent to any lists that might be useful historical perspective</span></div><br /></div></body></html>