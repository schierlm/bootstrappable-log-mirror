<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-11-09.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="003124"><span class="nick" style="color:#8dd3c7"><a href="#003124" label="[00:31:24]">&lt;oriansj&gt;</a></span><span class="message">stikonas: good news, no new crashes in 22 hours of fuzzing</span></div><div class="line" id="003924"><span class="nick" style="color:#2e2a4a"><a href="#003924" label="[00:39:24]">&lt;Hagfish&gt;</a></span><span class="message">nice</span></div><div class="line" id="003946"><span class="nick" style="color:#2e2a4a"><a href="#003946" label="[00:39:46]">&lt;Hagfish&gt;</a></span><span class="message">also, i've just found out about PackagingCon</span></div><div class="line" id="003951"><span class="nick" style="color:#2e2a4a"><a href="#003951" label="[00:39:51]">&lt;Hagfish&gt;</a></span><span class="message">have others heard of it?</span></div><div class="line" id="003954"><span class="nick" style="color:#2e2a4a"><a href="#003954" label="[00:39:54]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://pretalx.com/packagingcon-2021/schedule/nojs">https://pretalx.com/packagingcon-2021/schedule/nojs</a> </span></div><div class="line" id="004008"><span class="nick" style="color:#2e2a4a"><a href="#004008" label="[00:40:08]">&lt;Hagfish&gt;</a></span><span class="message">some really interesting talks, by the looks of things</span></div><div class="line" id="004033"><span class="nick" style="color:#2e2a4a"><a href="#004033" label="[00:40:33]">&lt;Hagfish&gt;</a></span><span class="message">&quot;Trustix, our reference implementation of a new concept we like to call &quot;build transparency&quot;, solves this in an entirely different, decentralized manner.&quot;</span></div><div class="line" id="004345"><span class="nick" style="color:#2e2a4a"><a href="#004345" label="[00:43:45]">&lt;Hagfish&gt;</a></span><span class="message">21:45 2min Stage0 bootstrapping trust</span></div><div class="line" id="004348"><span class="nick" style="color:#2e2a4a"><a href="#004348" label="[00:43:48]">&lt;Hagfish&gt;</a></span><span class="message">oh...</span></div><div class="line" id="004350"><span class="nick" style="color:#2e2a4a"><a href="#004350" label="[00:43:50]">&lt;Hagfish&gt;</a></span><span class="message">:P</span></div><div class="line" id="004847"><span class="nick" style="color:#8dd3c7"><a href="#004847" label="[00:48:47]">&lt;oriansj&gt;</a></span><span class="message">they just emailed me about it</span></div><div class="line" id="005144"><span class="nick" style="color:#8dd3c7"><a href="#005144" label="[00:51:44]">&lt;oriansj&gt;</a></span><span class="message">my first public talk about my stage0 work</span></div><div class="line" id="005209"><span class="nick" style="color:#8dd3c7"><a href="#005209" label="[00:52:09]">&lt;oriansj&gt;</a></span><span class="message">super excited about it</span></div><div class="line" id="005452"><span class="nick" style="color:#8dd3c7"><a href="#005452" label="[00:54:52]">&lt;oriansj&gt;</a></span><span class="message">even if they only consider it a minor filler talk that they don't promise any time to it</span></div><div class="line" id="010220"><span class="nick" style="color:#8dd3c7"><a href="#010220" label="[01:02:20]">&lt;oriansj&gt;</a></span><span class="message">but I'll try to get the core details out</span></div><div class="line" id="010454"><span class="nick" style="color:#8dd3c7"><a href="#010454" label="[01:04:54]">&lt;oriansj&gt;</a></span><span class="message">they have asked me to login by 21:15 UTC and wait for an open slot</span></div><div class="line" id="011517"><span class="nick" style="color:#2e2a4a"><a href="#011517" label="[01:15:17]">&lt;Hagfish&gt;</a></span><span class="message">presumably people can follow up with you after the talk to learn more?</span></div><div class="line" id="013942"><span class="nick" style="color:#6b8072"><a href="#013942" label="[01:39:42]">&lt;stikonas&gt;</a></span><span class="message">oriansj: nice regarding no crashes</span></div><div class="line" id="014046"><span class="nick" style="color:#6b8072"><a href="#014046" label="[01:40:46]">&lt;stikonas&gt;</a></span><span class="message">and also talk can help spread the word</span></div><div class="line" id="021213"><span class="nick" style="color:#8dd3c7"><a href="#021213" label="[02:12:13]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: hopefully.</span></div><div class="line" id="021238"><span class="nick" style="color:#8dd3c7"><a href="#021238" label="[02:12:38]">&lt;oriansj&gt;</a></span><span class="message">not that it is that hard to get in touch with me for a conversation</span></div><div class="line" id="021324"><span class="nick" style="color:#8dd3c7"><a href="#021324" label="[02:13:24]">&lt;oriansj&gt;</a></span><span class="message">as I am on matrix, signal, email and IRC</span></div><div class="line" id="021409"><span class="nick" style="color:#8dd3c7"><a href="#021409" label="[02:14:09]">&lt;oriansj&gt;</a></span><span class="message">and I take personal phone calls from people I like</span></div><div class="line" id="024421"><span class="nick" style="color:#6b8072"><a href="#024421" label="[02:44:21]">&lt;stikonas&gt;</a></span><span class="message">hmm, I think pointer dereference is now working in M2-Planet. But I should write some tests first...</span></div><div class="line" id="033027"><span class="nick" style="color:#6b8072"><a href="#033027" label="[03:30:27]">&lt;stikonas&gt;</a></span><span class="message">ok, actually case of &quot;*b = *a;&quot; is still not working. This one needs to copy all struct data...</span></div><div class="line" id="034028"><span class="nick" style="color:#6b8072"><a href="#034028" label="[03:40:28]">&lt;stikonas&gt;</a></span><span class="message">although M2-Planet also can't just copy one struct into another with simple assignment... In fact we only use pointers to structs</span></div><div class="line" id="090014"><span class="nick">***</span><span class="message notice">Ugochimobi61 is now known as Ugochimobi[m]</span></div><div class="line" id="091853"><span class="nick">***</span><span class="message notice">Ugochimobi77 is now known as Joseph</span></div><div class="line" id="135603"><span class="nick" style="color:#80b1d3"><a href="#135603" label="[13:56:03]">&lt;gbrlwck&gt;</a></span><span class="message">stikonas: where did you find the encodings (as used in riscv64_defs.M1)?  i figure i'd have to add floating point operators to make mescc work with floats</span></div><div class="line" id="135734"><span class="nick" style="color:#6b8072"><a href="#135734" label="[13:57:34]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: I calculated them</span></div><div class="line" id="135809"><span class="nick" style="color:#6b8072"><a href="#135809" label="[13:58:09]">&lt;stikonas&gt;</a></span><span class="message">gbrlwck: if you go to <a rel="nofollow" href="https://riscv.org/wp-content/uploads/2019/06/riscv-spec.pdf">https://riscv.org/wp-content/uploads/2019/06/riscv-spec.pdf</a> </span></div><div class="line" id="135853"><span class="nick" style="color:#6b8072"><a href="#135853" label="[13:58:53]">&lt;stikonas&gt;</a></span><span class="message">there is a table on pages 130-131</span></div><div class="line" id="135927"><span class="nick" style="color:#6b8072"><a href="#135927" label="[13:59:27]">&lt;stikonas&gt;</a></span><span class="message">(floats are on further pages)</span></div><div class="line" id="135944"><span class="nick" style="color:#6b8072"><a href="#135944" label="[13:59:44]">&lt;stikonas&gt;</a></span><span class="message">so for earch opcode convert that binary into hex</span></div><div class="line" id="135956"><span class="nick" style="color:#80b1d3"><a href="#135956" label="[13:59:56]">&lt;gbrlwck&gt;</a></span><span class="message">:)</span></div><div class="line" id="135958"><span class="nick" style="color:#80b1d3"><a href="#135958" label="[13:59:58]">&lt;gbrlwck&gt;</a></span><span class="message">ok, thanks</span></div><div class="line" id="140014"><span class="nick" style="color:#6b8072"><a href="#140014" label="[14:00:14]">&lt;stikonas&gt;</a></span><span class="message">keep in mind that bit 0 is on the right there</span></div><div class="line" id="140031"><span class="nick" style="color:#6b8072"><a href="#140031" label="[14:00:31]">&lt;stikonas&gt;</a></span><span class="message">best to recheck one of my opcodes before you do new ones</span></div><div class="line" id="140105"><span class="nick" style="color:#6b8072"><a href="#140105" label="[14:01:05]">&lt;stikonas&gt;</a></span><span class="message">and set rs1=rs2=rd=00000</span></div><div class="line" id="140134"><span class="nick" style="color:#6b8072"><a href="#140134" label="[14:01:34]">&lt;stikonas&gt;</a></span><span class="message">it's a fairly easy calculation</span></div><div class="line" id="140135"><span class="nick" style="color:#6b8072"><a href="#140135" label="[14:01:35]">&lt;stikonas&gt;</a></span><span class="message">basically just binary into base 16</span></div><div class="line" id="140141"><span class="nick" style="color:#6b8072"><a href="#140141" label="[14:01:41]">&lt;stikonas&gt;</a></span><span class="message">which you can do even without a calculator</span></div><div class="line" id="172305"><span class="nick">***</span><span class="message notice">Ugochimobi95 is now known as Ugochimobi[m]</span></div><div class="line" id="180227"><span class="nick" style="color:#80b1d3"><a href="#180227" label="[18:02:27]">&lt;gbrlwck&gt;</a></span><span class="message">ekaitz: what (guix) environment do i need to run pysc-v?</span></div><div class="line" id="180307"><span class="nick" style="color:#6d2462"><a href="#180307" label="[18:03:07]">&lt;ekaitz&gt;</a></span><span class="message">it's plain python with no extra libs afaik</span></div><div class="line" id="180345"><span class="nick" style="color:#6d2462"><a href="#180345" label="[18:03:45]">&lt;ekaitz&gt;</a></span><span class="message">but it's VERY uncomplete software, you might only use it for a couple of things like assembling instructions or so</span></div><div class="line" id="180640"><span class="nick" style="color:#6b8072"><a href="#180640" label="[18:06:40]">&lt;stikonas&gt;</a></span><span class="message">well, for hex* stuff on risc-v I ended up manually assembling</span></div><div class="line" id="180737"><span class="nick" style="color:#6b8072"><a href="#180737" label="[18:07:37]">&lt;stikonas&gt;</a></span><span class="message">first wrote GAS prototype, converted it to M1, then replaced macros with hex numbers and where necessary calculated jump offsets</span></div><div class="line" id="181941"><span class="nick" style="color:#80b1d3"><a href="#181941" label="[18:19:41]">&lt;gbrlwck&gt;</a></span><span class="message">ekaitz: when i try to run it i get &quot;NameError: name 'fetch_instruction' is not defined&quot;; when i `ack` for that string i only get one hit (the call raising this error)</span></div><div class="line" id="182001"><span class="nick" style="color:#6d2462"><a href="#182001" label="[18:20:01]">&lt;ekaitz&gt;</a></span><span class="message">oh shit, it's probably everything broken</span></div><div class="line" id="182005"><span class="nick" style="color:#80b1d3"><a href="#182005" label="[18:20:05]">&lt;gbrlwck&gt;</a></span><span class="message">i thought i might be able to double check my calculations, but i'm already doing it by hand</span></div><div class="line" id="182103"><span class="nick" style="color:#6d2462"><a href="#182103" label="[18:21:03]">&lt;ekaitz&gt;</a></span><span class="message">alright no, the thing is pysc-v basically doesn't really work</span></div><div class="line" id="182148"><span class="nick" style="color:#80b1d3"><a href="#182148" label="[18:21:48]">&lt;gbrlwck&gt;</a></span><span class="message">d4426ef seems to work, though (at least there's no error)</span></div><div class="line" id="182204"><span class="nick" style="color:#80b1d3"><a href="#182204" label="[18:22:04]">&lt;gbrlwck&gt;</a></span><span class="message">ekaitz: bummer</span></div><div class="line" id="182221"><span class="nick" style="color:#6d2462"><a href="#182221" label="[18:22:21]">&lt;ekaitz&gt;</a></span><span class="message">let me show you</span></div><div class="line" id="182241"><span class="nick" style="color:#6d2462"><a href="#182241" label="[18:22:41]">&lt;ekaitz&gt;</a></span><span class="message">there is a file called baseassembler</span></div><div class="line" id="182248"><span class="nick" style="color:#6d2462"><a href="#182248" label="[18:22:48]">&lt;ekaitz&gt;</a></span><span class="message">that's the one you can use</span></div><div class="line" id="182318"><span class="nick" style="color:#6d2462"><a href="#182318" label="[18:23:18]">&lt;ekaitz&gt;</a></span><span class="message">you can generate instructions like addi(&quot;a0&quot;, &quot;a1&quot;, 12)</span></div><div class="line" id="182327"><span class="nick" style="color:#6d2462"><a href="#182327" label="[18:23:27]">&lt;ekaitz&gt;</a></span><span class="message">and assemble them</span></div><div class="line" id="182355"><span class="nick" style="color:#6d2462"><a href="#182355" label="[18:23:55]">&lt;ekaitz&gt;</a></span><span class="message">the best way to do it is to run a python shell and load the file using an import and do the whole thing interactively</span></div><div class="line" id="182419"><span class="nick" style="color:#6d2462"><a href="#182419" label="[18:24:19]">&lt;ekaitz&gt;</a></span><span class="message">I wanted to spend more time on the project and I almost wrote a parser and stuff but never finished so this is what I got at the moment</span></div><div class="line" id="183131"><span class="nick" style="color:#6d2462"><a href="#183131" label="[18:31:31]">&lt;ekaitz&gt;</a></span><span class="message">btw gbrlwck commits are welcome hehe</span></div><div class="line" id="183200"><span class="nick" style="color:#80b1d3"><a href="#183200" label="[18:32:00]">&lt;gbrlwck&gt;</a></span><span class="message">:)</span></div><div class="line" id="183414"><span class="nick" style="color:#6d2462"><a href="#183414" label="[18:34:14]">&lt;ekaitz&gt;</a></span><span class="message">basically the project is nothing but the instruction set description in python classes</span></div><div class="line" id="183458"><span class="nick" style="color:#6d2462"><a href="#183458" label="[18:34:58]">&lt;ekaitz&gt;</a></span><span class="message">it's probably going to stay like that for a while :) but it's useful to hand assemble instructions</span></div><div class="line" id="183515"><span class="nick" style="color:#6d2462"><a href="#183515" label="[18:35:15]">&lt;ekaitz&gt;</a></span><span class="message">fiddling with bits by hand is boring and error-prone</span></div><div class="line" id="183706"><span class="nick" style="color:#234e69"><a href="#183706" label="[18:37:06]">&lt;muurkha&gt;</a></span><span class="message">I like it</span></div><div class="line" id="183756"><span class="nick" style="color:#80b1d3"><a href="#183756" label="[18:37:56]">&lt;gbrlwck&gt;</a></span><span class="message">bit fiddling or pysc-v?</span></div><div class="line" id="184041"><span class="nick" style="color:#6b8072"><a href="#184041" label="[18:40:41]">&lt;stikonas&gt;</a></span><span class="message">well, error-prone depends on how you do it</span></div><div class="line" id="184115"><span class="nick" style="color:#6b8072"><a href="#184115" label="[18:41:15]">&lt;stikonas&gt;</a></span><span class="message">directly trying to assemble it is error-prone</span></div><div class="line" id="184128"><span class="nick" style="color:#6b8072"><a href="#184128" label="[18:41:28]">&lt;stikonas&gt;</a></span><span class="message">but doing it in systematically in stages helps a lot</span></div><div class="line" id="184201"><span class="nick" style="color:#6b8072"><a href="#184201" label="[18:42:01]">&lt;stikonas&gt;</a></span><span class="message">e.g. M1-&gt;hex2 is mostly just copy/paste replacing macros with hex values from the table</span></div><div class="line" id="184216"><span class="nick" style="color:#6b8072"><a href="#184216" label="[18:42:16]">&lt;stikonas&gt;</a></span><span class="message">then you can add those in hex2-&gt;hex1 step</span></div><div class="line" id="184237"><span class="nick" style="color:#6b8072"><a href="#184237" label="[18:42:37]">&lt;stikonas&gt;</a></span><span class="message">and it would be less error prone than directly trying to encode everything</span></div><div class="line" id="185012"><span class="nick" style="color:#80b1d3"><a href="#185012" label="[18:50:12]">&lt;gbrlwck&gt;</a></span><span class="message">i think this was more about converting RISC-V specs to Bytes (with byte-order and their 7, 5 and 3 bit wide fields) :)</span></div><div class="line" id="185057"><span class="nick" style="color:#80b1d3"><a href="#185057" label="[18:50:57]">&lt;gbrlwck&gt;</a></span><span class="message">ekaitz: i tried you addi() command, get a result, but when i &quot;Out[1].compile()&quot; i get a TypeError: unsupported operand type(s) for &lt;&lt;: 'str' and 'int'</span></div><div class="line" id="185101"><span class="nick" style="color:#6b8072"><a href="#185101" label="[18:51:01]">&lt;stikonas&gt;</a></span><span class="message">yeah, had to do that too when converting .M1-&gt;.hex2</span></div><div class="line" id="185145"><span class="nick" style="color:#6b8072"><a href="#185145" label="[18:51:45]">&lt;stikonas&gt;</a></span><span class="message">but not that many instructions actually have a unique immediate that is not used anywhere else</span></div><div class="line" id="185222"><span class="nick" style="color:#6b8072"><a href="#185222" label="[18:52:22]">&lt;stikonas&gt;</a></span><span class="message">e.g. immediates in function header/footer are always 8 16 32, etc...</span></div><div class="line" id="185423"><span class="nick" style="color:#234e69"><a href="#185423" label="[18:54:23]">&lt;muurkha&gt;</a></span><span class="message">bit fiddling, gbrlwck</span></div><div class="line" id="185530"><span class="nick" style="color:#80b1d3"><a href="#185530" label="[18:55:30]">&lt;gbrlwck&gt;</a></span><span class="message">i like it, too :) but only /dev/random knows if/when i'd find if i did it wrong</span></div><div class="line" id="185553"><span class="nick" style="color:#234e69"><a href="#185553" label="[18:55:53]">&lt;muurkha&gt;</a></span><span class="message">what would /dev/random do?</span></div><div class="line" id="185619"><span class="nick" style="color:#80b1d3"><a href="#185619" label="[18:56:19]">&lt;gbrlwck&gt;</a></span><span class="message">be my goddess, i guess ;)</span></div><div class="line" id="192551"><span class="nick" style="color:#6b8072"><a href="#192551" label="[19:25:51]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I'm a bit confused here. <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/blob/master/cc_types.c#L40">https://github.com/oriansj/M2-Planet/blob/master/cc_types.c#L40</a> </span></div><div class="line" id="192606"><span class="nick" style="color:#6b8072"><a href="#192606" label="[19:26:06]">&lt;stikonas&gt;</a></span><span class="message">how are we supposed to go to dereferenced type. Or is it not supported?</span></div><div class="line" id="192627"><span class="nick" style="color:#6b8072"><a href="#192627" label="[19:26:27]">&lt;stikonas&gt;</a></span><span class="message">I thought -&gt;type does that</span></div><div class="line" id="192642"><span class="nick" style="color:#6b8072"><a href="#192642" label="[19:26:42]">&lt;stikonas&gt;</a></span><span class="message">but looks like it's not because b-&gt;type = b;</span></div><div class="line" id="192706"><span class="nick" style="color:#6b8072"><a href="#192706" label="[19:27:06]">&lt;stikonas&gt;</a></span><span class="message">(basically I want the other direction than -&gt;indirect)</span></div><div class="line" id="193349"><span class="nick" style="color:#234e69"><a href="#193349" label="[19:33:49]">&lt;muurkha&gt;</a></span><span class="message">gbrlwck: you may not be familiar with the saying &quot;What would Jesus do?&quot;, often abbreviated to &quot;WWJD&quot;</span></div><div class="line" id="193509"><span class="nick" style="color:#80b1d3"><a href="#193509" label="[19:35:09]">&lt;gbrlwck&gt;</a></span><span class="message">lol</span></div><div class="line" id="193524"><span class="nick" style="color:#80b1d3"><a href="#193524" label="[19:35:24]">&lt;gbrlwck&gt;</a></span><span class="message">i am but realized it only after typing</span></div><div class="line" id="193613"><span class="nick" style="color:#234e69"><a href="#193613" label="[19:36:13]">&lt;muurkha&gt;</a></span><span class="message">(allusions to Terry Davis believing God spoke to him through his random number generator)</span></div><div class="line" id="200319"><span class="nick" style="color:#6d2462"><a href="#200319" label="[20:03:19]">&lt;ekaitz&gt;</a></span><span class="message">gbrlwck: try &gt;&gt;&gt; b.compileBigEndian(b.addi(b.x(&quot;a0&quot;), b.x(&quot;zero&quot;), 10))        # first import baseassembler as b</span></div><div class="line" id="211208"><span class="nick">***</span><span class="message notice">Ugochimobi21 is now known as Ugochimobi[m]</span></div><div class="line" id="215817"><span class="nick" style="color:#6b8072"><a href="#215817" label="[21:58:17]">&lt;stikonas&gt;</a></span><span class="message">ok, I think I mostly figured out dereferencing in M2-Planet</span></div><div class="line" id="215912"><span class="nick" style="color:#6b8072"><a href="#215912" label="[21:59:12]">&lt;stikonas&gt;</a></span><span class="message">seems to work except for *a = *b for structs...</span></div><div class="line" id="215921"><span class="nick" style="color:#6b8072"><a href="#215921" label="[21:59:21]">&lt;stikonas&gt;</a></span><span class="message">but since a = b doesn't work for structs either, that's expected</span></div><div class="line" id="230409"><span class="nick">***</span><span class="message notice">Ugochimobi49 is now known as Ugochimobi[m]</span></div><br /></div></body></html>