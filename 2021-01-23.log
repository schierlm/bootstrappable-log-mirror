<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-23.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="004217"><span class="nick" style="color:#389600"><a href="#004217" label="[00:42:17]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, ok, you can just leave it then</span></div><div class="line" id="004238"><span class="nick" style="color:#389600"><a href="#004238" label="[00:42:38]">&lt;fossy&gt;</a></span><span class="message">pder: i have an alternative solution</span></div><div class="line" id="004247"><span class="nick" style="color:#389600"><a href="#004247" label="[00:42:47]">&lt;fossy&gt;</a></span><span class="message">we don't need the fixed up libc until coreutils</span></div><div class="line" id="004254"><span class="nick" style="color:#389600"><a href="#004254" label="[00:42:54]">&lt;fossy&gt;</a></span><span class="message">so we can just recompile mesc libc with patch once we have it</span></div><div class="line" id="004305"><span class="nick" style="color:#389600"><a href="#004305" label="[00:43:05]">&lt;fossy&gt;</a></span><span class="message">which is reasonably trivial</span></div><div class="line" id="004331"><span class="nick" style="color:#2e2a4a"><a href="#004331" label="[00:43:31]">&lt;pder&gt;</a></span><span class="message">that makes sense</span></div><div class="line" id="004333"><span class="nick" style="color:#389600"><a href="#004333" label="[00:43:33]">&lt;fossy&gt;</a></span><span class="message">oh, that's what stikonas said lol</span></div><div class="line" id="004351"><span class="nick" style="color:#389600"><a href="#004351" label="[00:43:51]">&lt;fossy&gt;</a></span><span class="message">i'm doing linux kernel now</span></div><div class="line" id="004401"><span class="nick" style="color:#389600"><a href="#004401" label="[00:44:01]">&lt;fossy&gt;</a></span><span class="message">it's not that hard actually once you decipher the Makefile</span></div><div class="line" id="004412"><span class="nick" style="color:#389600"><a href="#004412" label="[00:44:12]">&lt;fossy&gt;</a></span><span class="message">because it uses completely internal headers</span></div><div class="line" id="004420"><span class="nick" style="color:#389600"><a href="#004420" label="[00:44:20]">&lt;fossy&gt;</a></span><span class="message">so no -D's really needed thank goodness</span></div><div class="line" id="004445"><span class="nick" style="color:#6b8072"><a href="#004445" label="[00:44:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I guess we insert linux at some point before bash?</span></div><div class="line" id="004451"><span class="nick" style="color:#389600"><a href="#004451" label="[00:44:51]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="004457"><span class="nick" style="color:#389600"><a href="#004457" label="[00:44:57]">&lt;fossy&gt;</a></span><span class="message">i'm putting it directly after patch</span></div><div class="line" id="004502"><span class="nick" style="color:#6b8072"><a href="#004502" label="[00:45:02]">&lt;stikonas&gt;</a></span><span class="message">since it uses mode signals</span></div><div class="line" id="004503"><span class="nick" style="color:#6b8072"><a href="#004503" label="[00:45:03]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="004526"><span class="nick" style="color:#6b8072"><a href="#004526" label="[00:45:26]">&lt;stikonas&gt;</a></span><span class="message">pder: by the way, if you do libc recompilation, please do in a separate kaem file, so that it is easy to rip off once we update mes</span></div><div class="line" id="004538"><span class="nick" style="color:#389600"><a href="#004538" label="[00:45:38]">&lt;fossy&gt;</a></span><span class="message">still haven't figured out it if i want to make a real drive or another initramfs one</span></div><div class="line" id="004548"><span class="nick" style="color:#6b8072"><a href="#004548" label="[00:45:48]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think initramfs one...</span></div><div class="line" id="004554"><span class="nick" style="color:#389600"><a href="#004554" label="[00:45:54]">&lt;fossy&gt;</a></span><span class="message">i think so too</span></div><div class="line" id="004559"><span class="nick" style="color:#389600"><a href="#004559" label="[00:45:59]">&lt;fossy&gt;</a></span><span class="message">reduces requirements of host kernel</span></div><div class="line" id="004601"><span class="nick" style="color:#6b8072"><a href="#004601" label="[00:46:01]">&lt;stikonas&gt;</a></span><span class="message">but how are we rebooting, kexec?</span></div><div class="line" id="004603"><span class="nick" style="color:#6b8072"><a href="#004603" label="[00:46:03]">&lt;stikonas&gt;</a></span><span class="message">exactly</span></div><div class="line" id="004616"><span class="nick" style="color:#6b8072"><a href="#004616" label="[00:46:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: do we need to build cpio first?</span></div><div class="line" id="004621"><span class="nick" style="color:#389600"><a href="#004621" label="[00:46:21]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="004627"><span class="nick" style="color:#389600"><a href="#004627" label="[00:46:27]">&lt;fossy&gt;</a></span><span class="message">but i think we can use heirloom one maybe</span></div><div class="line" id="004631"><span class="nick" style="color:#389600"><a href="#004631" label="[00:46:31]">&lt;fossy&gt;</a></span><span class="message">or an old versionj</span></div><div class="line" id="004634"><span class="nick" style="color:#389600"><a href="#004634" label="[00:46:34]">&lt;fossy&gt;</a></span><span class="message">either</span></div><div class="line" id="004642"><span class="nick" style="color:#6b8072"><a href="#004642" label="[00:46:42]">&lt;stikonas&gt;</a></span><span class="message">well, depends on how hard it is to compile proper one</span></div><div class="line" id="004650"><span class="nick" style="color:#389600"><a href="#004650" label="[00:46:50]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="004820"><span class="nick" style="color:#389600"><a href="#004820" label="[00:48:20]">&lt;fossy&gt;</a></span><span class="message">hey bauen1 will myunix maybe support kexec or something similar</span></div><div class="line" id="004856"><span class="nick" style="color:#6b8072"><a href="#004856" label="[00:48:56]">&lt;stikonas&gt;</a></span><span class="message">fossy: bauen1 eventually wants to have some modules</span></div><div class="line" id="004907"><span class="nick" style="color:#6b8072"><a href="#004907" label="[00:49:07]">&lt;stikonas&gt;</a></span><span class="message">so we might be able to compile kernel-side kexec</span></div><div class="line" id="004911"><span class="nick" style="color:#389600"><a href="#004911" label="[00:49:11]">&lt;fossy&gt;</a></span><span class="message">ooh, i see</span></div><div class="line" id="004920"><span class="nick" style="color:#6b8072"><a href="#004920" label="[00:49:20]">&lt;stikonas&gt;</a></span><span class="message">so basic kernel is small</span></div><div class="line" id="004925"><span class="nick" style="color:#6b8072"><a href="#004925" label="[00:49:25]">&lt;stikonas&gt;</a></span><span class="message">but we load a bit more functionality</span></div><div class="line" id="004945"><span class="nick" style="color:#389600"><a href="#004945" label="[00:49:45]">&lt;fossy&gt;</a></span><span class="message">kexec is some nice magic</span></div><div class="line" id="004946"><span class="nick" style="color:#6b8072"><a href="#004946" label="[00:49:46]">&lt;stikonas&gt;</a></span><span class="message">although, I guess that depends...</span></div><div class="line" id="004953"><span class="nick" style="color:#6b8072"><a href="#004953" label="[00:49:53]">&lt;stikonas&gt;</a></span><span class="message">if kexec is bigger than module support</span></div><div class="line" id="004959"><span class="nick" style="color:#389600"><a href="#004959" label="[00:49:59]">&lt;fossy&gt;</a></span><span class="message">yeah,</span></div><div class="line" id="005006"><span class="nick" style="color:#389600"><a href="#005006" label="[00:50:06]">&lt;fossy&gt;</a></span><span class="message">well we can figure that out when we get to it</span></div><div class="line" id="005017"><span class="nick" style="color:#80b1d3"><a href="#005017" label="[00:50:17]">&lt;xentrac&gt;</a></span><span class="message">kexec is pretty small</span></div><div class="line" id="005036"><span class="nick" style="color:#6d2462"><a href="#005036" label="[00:50:36]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: compared to what exactly?</span></div><div class="line" id="005041"><span class="nick" style="color:#2e2a4a"><a href="#005041" label="[00:50:41]">&lt;pder&gt;</a></span><span class="message">so we do an additional rebuild of libc after bzip2 and before coreutils?</span></div><div class="line" id="005103"><span class="nick" style="color:#6b8072"><a href="#005103" label="[00:51:03]">&lt;stikonas&gt;</a></span><span class="message">pder: or after patch</span></div><div class="line" id="005107"><span class="nick" style="color:#6b8072"><a href="#005107" label="[00:51:07]">&lt;stikonas&gt;</a></span><span class="message">if you have all tools</span></div><div class="line" id="005118"><span class="nick" style="color:#6b8072"><a href="#005118" label="[00:51:18]">&lt;stikonas&gt;</a></span><span class="message">so that other binaries also get updated qsort (in case they use it)</span></div><div class="line" id="005131"><span class="nick" style="color:#80b1d3"><a href="#005131" label="[00:51:31]">&lt;xentrac&gt;</a></span><span class="message">I thought Savannah.nongnu.org had binaries too, OriansJ?  without having to go the gnueval@ route</span></div><div class="line" id="005151"><span class="nick" style="color:#6b8072"><a href="#005151" label="[00:51:51]">&lt;stikonas&gt;</a></span><span class="message">oh, yacc also uses qsort...</span></div><div class="line" id="005218"><span class="nick" style="color:#6d2462"><a href="#005218" label="[00:52:18]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I am taking what I was told to get binaries in bootstrap-seeds onto savannah</span></div><div class="line" id="005225"><span class="nick" style="color:#6b8072"><a href="#005225" label="[00:52:25]">&lt;stikonas&gt;</a></span><span class="message">well, it might get more expotion as GNU project anyway</span></div><div class="line" id="005237"><span class="nick" style="color:#6d2462"><a href="#005237" label="[00:52:37]">&lt;OriansJ&gt;</a></span><span class="message">So if it means I need to sing and dance to get this done, so be it</span></div><div class="line" id="005250"><span class="nick" style="color:#80b1d3"><a href="#005250" label="[00:52:50]">&lt;xentrac&gt;</a></span><span class="message">well, savannah.gnu.org, sure</span></div><div class="line" id="005256"><span class="nick" style="color:#80b1d3"><a href="#005256" label="[00:52:56]">&lt;xentrac&gt;</a></span><span class="message">but not savannah.nongnu.org I think?</span></div><div class="line" id="005300"><span class="nick" style="color:#389600"><a href="#005300" label="[00:53:00]">&lt;fossy&gt;</a></span><span class="message">pder: i was thinking next to tcc-patched.kaem</span></div><div class="line" id="005310"><span class="nick" style="color:#389600"><a href="#005310" label="[00:53:10]">&lt;fossy&gt;</a></span><span class="message">mes-libc-patched.kaem just after it or something</span></div><div class="line" id="005314"><span class="nick" style="color:#80b1d3"><a href="#005314" label="[00:53:14]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: kexec is in its essence just an unconditional jump to some new code, which is about 10 bytes I think</span></div><div class="line" id="005329"><span class="nick" style="color:#6d2462"><a href="#005329" label="[00:53:29]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: as I understand it savannah.nongnu.org will not accept binary blobs at all.</span></div><div class="line" id="005330"><span class="nick" style="color:#80b1d3"><a href="#005330" label="[00:53:30]">&lt;xentrac&gt;</a></span><span class="message">but you need some way to load that code, some kind of binary format support, etc.</span></div><div class="line" id="005342"><span class="nick" style="color:#80b1d3"><a href="#005342" label="[00:53:42]">&lt;xentrac&gt;</a></span><span class="message">oh really?  I guess I must have misunderstood that</span></div><div class="line" id="005432"><span class="nick" style="color:#6d2462"><a href="#005432" label="[00:54:32]">&lt;OriansJ&gt;</a></span><span class="message">either that or they rejected my submission for some other reason and then just told me a lie.</span></div><div class="line" id="005441"><span class="nick" style="color:#389600"><a href="#005441" label="[00:54:41]">&lt;fossy&gt;</a></span><span class="message">i find that unlikely lol</span></div><div class="line" id="005502"><span class="nick" style="color:#6d2462"><a href="#005502" label="[00:55:02]">&lt;OriansJ&gt;</a></span><span class="message">I honestly don't care either way.</span></div><div class="line" id="005551"><span class="nick" style="color:#6d2462"><a href="#005551" label="[00:55:51]">&lt;OriansJ&gt;</a></span><span class="message">If it takes copyright assignment to the FSF and a 50page textinfo manual to get this done, I'll only have to do it once.</span></div><div class="line" id="005614"><span class="nick" style="color:#6d2462"><a href="#005614" label="[00:56:14]">&lt;OriansJ&gt;</a></span><span class="message">Everything else is pure source and they can't complain about me depending on a Gnu project.</span></div><div class="line" id="005648"><span class="nick" style="color:#6d2462"><a href="#005648" label="[00:56:48]">&lt;OriansJ&gt;</a></span><span class="message">although they will probably bitch about the git submodule forest I have created.</span></div><div class="line" id="005725"><span class="nick" style="color:#389600"><a href="#005725" label="[00:57:25]">&lt;fossy&gt;</a></span><span class="message">in mescc-tools-seed?</span></div><div class="line" id="005740"><span class="nick" style="color:#6d2462"><a href="#005740" label="[00:57:40]">&lt;OriansJ&gt;</a></span><span class="message">but I've put this off for too long</span></div><div class="line" id="005751"><span class="nick" style="color:#80b1d3"><a href="#005751" label="[00:57:51]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: <a rel="nofollow" href="http://download.savannah.nongnu.org/releases/lzip/lzip-1.20-w32.zip">http://download.savannah.nongnu.org/releases/lzip/lzip-1.20-w32.zip</a>  seems to be a binary package, uploaded in 02018</span></div><div class="line" id="005827"><span class="nick" style="color:#80b1d3"><a href="#005827" label="[00:58:27]">&lt;xentrac&gt;</a></span><span class="message">so if there's a policy against hosting binaries on savannah.nongnu.org it's recent and I can't find it</span></div><div class="line" id="005830"><span class="nick" style="color:#6d2462"><a href="#005830" label="[00:58:30]">&lt;OriansJ&gt;</a></span><span class="message">fossy: yes; although I probably should rename it to stage-posix per janneke's recommendation when i upload it savannah.</span></div><div class="line" id="005846"><span class="nick" style="color:#80b1d3"><a href="#005846" label="[00:58:46]">&lt;xentrac&gt;</a></span><span class="message">there is a policy against hosting non-GNU projects on savannah.gnu.org</span></div><div class="line" id="005847"><span class="nick" style="color:#389600"><a href="#005847" label="[00:58:47]">&lt;fossy&gt;</a></span><span class="message">fair nuff</span></div><div class="line" id="005853"><span class="nick" style="color:#80b1d3"><a href="#005853" label="[00:58:53]">&lt;xentrac&gt;</a></span><span class="message">with or without binaries</span></div><div class="line" id="005858"><span class="nick" style="color:#6d2462"><a href="#005858" label="[00:58:58]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I got nothing but eh</span></div><div class="line" id="005936"><span class="nick" style="color:#6d2462"><a href="#005936" label="[00:59:36]">&lt;OriansJ&gt;</a></span><span class="message">maybe they are just enforcing it on new projects</span></div><div class="line" id="010020"><span class="nick" style="color:#80b1d3"><a href="#010020" label="[01:00:20]">&lt;xentrac&gt;</a></span><span class="message"> <a rel="nofollow" href="http://download.savannah.nongnu.org/releases/dataexplorer/?C=M&amp;O=D">http://download.savannah.nongnu.org/releases/dataexplorer/?C=M&amp;O=D</a>  seems to have a lot of binary releases from this month</span></div><div class="line" id="010111"><span class="nick" style="color:#80b1d3"><a href="#010111" label="[01:01:11]">&lt;xentrac&gt;</a></span><span class="message">maybe you got a reply from a new volunteer who doesn't understand the policy correctly</span></div><div class="line" id="010140"><span class="nick" style="color:#80b1d3"><a href="#010140" label="[01:01:40]">&lt;xentrac&gt;</a></span><span class="message">the FSF tends to have a lot of volunteer churn because Richard is abrasive</span></div><div class="line" id="010206"><span class="nick" style="color:#389600"><a href="#010206" label="[01:02:06]">&lt;fossy&gt;</a></span><span class="message">lmao</span></div><div class="line" id="010318"><span class="nick" style="color:#234e69"><a href="#010318" label="[01:03:18]">&lt;vagrantc&gt;</a></span><span class="message">rms is no longer part of FSF, last i heard</span></div><div class="line" id="010327"><span class="nick" style="color:#234e69"><a href="#010327" label="[01:03:27]">&lt;vagrantc&gt;</a></span><span class="message">but still maintains an iron fist on GNU</span></div><div class="line" id="010601"><span class="nick" style="color:#80b1d3"><a href="#010601" label="[01:06:01]">&lt;xentrac&gt;</a></span><span class="message">yeah, sorry, GNU</span></div><div class="line" id="012003"><span class="nick" style="color:#2e2a4a"><a href="#012003" label="[01:20:03]">&lt;pder&gt;</a></span><span class="message">stikonas: does the patched qsort make any difference with heirloom yacc&gt;</span></div><div class="line" id="012005"><span class="nick" style="color:#2e2a4a"><a href="#012005" label="[01:20:05]">&lt;pder&gt;</a></span><span class="message">?</span></div><div class="line" id="012051"><span class="nick" style="color:#6b8072"><a href="#012051" label="[01:20:51]">&lt;stikonas&gt;</a></span><span class="message">pder: I haven't tried yet</span></div><div class="line" id="012124"><span class="nick" style="color:#6b8072"><a href="#012124" label="[01:21:24]">&lt;stikonas&gt;</a></span><span class="message">I guess I need to rebase on top of your branch</span></div><div class="line" id="012404"><span class="nick" style="color:#6b8072"><a href="#012404" label="[01:24:04]">&lt;stikonas&gt;</a></span><span class="message">by the way, should we comment our blynn-kaem for now until it's not really used for anything?</span></div><div class="line" id="012414"><span class="nick" style="color:#6b8072"><a href="#012414" label="[01:24:14]">&lt;stikonas&gt;</a></span><span class="message">it's like extra 10 minutes of runtime</span></div><div class="line" id="012419"><span class="nick" style="color:#6b8072"><a href="#012419" label="[01:24:19]">&lt;stikonas&gt;</a></span><span class="message">s/our/out/</span></div><div class="line" id="012434"><span class="nick" style="color:#2e2a4a"><a href="#012434" label="[01:24:34]">&lt;pder&gt;</a></span><span class="message">makes sense to me</span></div><div class="line" id="012451"><span class="nick" style="color:#6b8072"><a href="#012451" label="[01:24:51]">&lt;stikonas&gt;</a></span><span class="message">but keep everything in the repository...</span></div><div class="line" id="012458"><span class="nick" style="color:#6b8072"><a href="#012458" label="[01:24:58]">&lt;stikonas&gt;</a></span><span class="message">so that we can easily turn it back on</span></div><div class="line" id="012618"><span class="nick" style="color:#6d2462"><a href="#012618" label="[01:26:18]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: look it isn't about binary releases but binaries as source; checked in as source and git commited as source</span></div><div class="line" id="012708"><span class="nick" style="color:#6d2462"><a href="#012708" label="[01:27:08]">&lt;OriansJ&gt;</a></span><span class="message">as when one does git clone bootstrap-seeds, they are downloading every binary for every commit</span></div><div class="line" id="012734"><span class="nick" style="color:#6d2462"><a href="#012734" label="[01:27:34]">&lt;OriansJ&gt;</a></span><span class="message">when someone updates the hex0 source file, they are updating the binary too in that exact same commit</span></div><div class="line" id="012822"><span class="nick" style="color:#80b1d3"><a href="#012822" label="[01:28:22]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: oh, I see, that makes some amount of sense</span></div><div class="line" id="012836"><span class="nick" style="color:#6d2462"><a href="#012836" label="[01:28:36]">&lt;OriansJ&gt;</a></span><span class="message">it is up to all other bootstrap-seed developers to verify that the binary checked in and the source correspond using any means outside of bootstrap-seeds. Be it sed+xxd or a custom C program or etc</span></div><div class="line" id="012840"><span class="nick" style="color:#80b1d3"><a href="#012840" label="[01:28:40]">&lt;xentrac&gt;</a></span><span class="message">I mean dataexplorer and lzip aren't doing that</span></div><div class="line" id="012858"><span class="nick" style="color:#234e69"><a href="#012858" label="[01:28:58]">&lt;vagrantc&gt;</a></span><span class="message">why check in the binaries?</span></div><div class="line" id="012916"><span class="nick" style="color:#6d2462"><a href="#012916" label="[01:29:16]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: so that there is no build process</span></div><div class="line" id="012931"><span class="nick" style="color:#6d2462"><a href="#012931" label="[01:29:31]">&lt;OriansJ&gt;</a></span><span class="message">So zero dependencies</span></div><div class="line" id="012943"><span class="nick" style="color:#6d2462"><a href="#012943" label="[01:29:43]">&lt;OriansJ&gt;</a></span><span class="message">no need for init, shell, or ANYTHING</span></div><div class="line" id="013001"><span class="nick" style="color:#80b1d3"><a href="#013001" label="[01:30:01]">&lt;xentrac&gt;</a></span><span class="message">I wonder if it would be adequate to check in the hex dump in xxd format</span></div><div class="line" id="013018"><span class="nick" style="color:#6b8072"><a href="#013018" label="[01:30:18]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: those two binaries should be enough to build EVERYTHING in userspace... (except for initial POSIX kernel that runs those binaries)</span></div><div class="line" id="013042"><span class="nick" style="color:#6d2462"><a href="#013042" label="[01:30:42]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I guard its contents like an angry dragon.</span></div><div class="line" id="013046"><span class="nick" style="color:#80b1d3"><a href="#013046" label="[01:30:46]">&lt;xentrac&gt;</a></span><span class="message">:D</span></div><div class="line" id="013118"><span class="nick" style="color:#6d2462"><a href="#013118" label="[01:31:18]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: don't forget the NATIVE tree that doesn't even depend upon a POSIX kernel</span></div><div class="line" id="013140"><span class="nick" style="color:#6b8072"><a href="#013140" label="[01:31:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, indeed. Although, I haven't tried it yet</span></div><div class="line" id="013202"><span class="nick" style="color:#234e69"><a href="#013202" label="[01:32:02]">&lt;vagrantc&gt;</a></span><span class="message">i guess the mescc-tools tests were significantly changed for 1.1.0 ? never had any locale issues triggering test suite failures before ... :/</span></div><div class="line" id="013203"><span class="nick" style="color:#6d2462"><a href="#013203" label="[01:32:03]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: let us just say floppy disks and a boatload of manual steps</span></div><div class="line" id="013316"><span class="nick" style="color:#6c3d55"><a href="#013316" label="[01:33:16]">&lt;deesix&gt;</a></span><span class="message">vagrantc, looking at the logs you linked... it seems that our 'LANG=C foo' line is not run as one line.</span></div><div class="line" id="013323"><span class="nick" style="color:#6d2462"><a href="#013323" label="[01:33:23]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: or Debian's reproducible build system is checking for LOCALE changes now</span></div><div class="line" id="013348"><span class="nick" style="color:#234e69"><a href="#013348" label="[01:33:48]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: it has definitely been checking locale issues since i started getting involved 5 years ago</span></div><div class="line" id="013426"><span class="nick" style="color:#6d2462"><a href="#013426" label="[01:34:26]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: or it is just my fault for introducing another bug</span></div><div class="line" id="013453"><span class="nick" style="color:#234e69"><a href="#013453" label="[01:34:53]">&lt;vagrantc&gt;</a></span><span class="message">there may have been a shift as to exactly which locales are checked, but not anything hugely significant</span></div><div class="line" id="013524"><span class="nick" style="color:#234e69"><a href="#013524" label="[01:35:24]">&lt;vagrantc&gt;</a></span><span class="message">and the earlier 1.0.1 builds in debian actually had *most* of the patches in 1.1.0 applied</span></div><div class="line" id="013654"><span class="nick" style="color:#234e69"><a href="#013654" label="[01:36:54]">&lt;vagrantc&gt;</a></span><span class="message">my workaround for the tests in Kaem/ appears to have worked, at least, but i'm guessing LANGUAGE is the new culprit</span></div><div class="line" id="013703"><span class="nick" style="color:#6d2462"><a href="#013703" label="[01:37:03]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: regardless for the reason it stopped working, I want mescc-tools to be 100% reproducible</span></div><div class="line" id="013719"><span class="nick" style="color:#234e69"><a href="#013719" label="[01:37:19]">&lt;vagrantc&gt;</a></span><span class="message">e.g. it used to fail on the 1st build, and not it succeeds on the 1st build and only fails on the 2nd build</span></div><div class="line" id="013721"><span class="nick" style="color:#6d2462"><a href="#013721" label="[01:37:21]">&lt;OriansJ&gt;</a></span><span class="message">and will do what is required to address it</span></div><div class="line" id="013727"><span class="nick" style="color:#234e69"><a href="#013727" label="[01:37:27]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: appreciated :)</span></div><div class="line" id="013748"><span class="nick" style="color:#234e69"><a href="#013748" label="[01:37:48]">&lt;vagrantc&gt;</a></span><span class="message">i'll see if i can figure out a simple reproducer like i did for the first issue</span></div><div class="line" id="013759"><span class="nick" style="color:#6d2462"><a href="#013759" label="[01:37:59]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: I just need your help checking that I didn't miss anything.</span></div><div class="line" id="013819"><span class="nick" style="color:#6c3d55"><a href="#013819" label="[01:38:19]">&lt;deesix&gt;</a></span><span class="message">vagrantc, I mean, these two lines:</span></div><div class="line" id="013821"><span class="nick" style="color:#6c3d55"><a href="#013821" label="[01:38:21]">&lt;deesix&gt;</a></span><span class="message">++ LANG=C</span></div><div class="line" id="013821"><span class="nick" style="color:#6c3d55"><a href="#013821" label="[01:38:21]">&lt;deesix&gt;</a></span><span class="message">++ sha256sum -c test/test8/proof.answer</span></div><div class="line" id="014044"><span class="nick" style="color:#234e69"><a href="#014044" label="[01:40:44]">&lt;vagrantc&gt;</a></span><span class="message">deesix: i don't think LANG is the issue, as in the example, LANG=C is exported in the build environment</span></div><div class="line" id="014101"><span class="nick" style="color:#234e69"><a href="#014101" label="[01:41:01]">&lt;vagrantc&gt;</a></span><span class="message">i think it is the other variables, notably LANGUAGE</span></div><div class="line" id="014127"><span class="nick" style="color:#234e69"><a href="#014127" label="[01:41:27]">&lt;vagrantc&gt;</a></span><span class="message">since in the build where it is failing LANG=C and LC_ALL=C are exported in the environment</span></div><div class="line" id="014135"><span class="nick" style="color:#234e69"><a href="#014135" label="[01:41:35]">&lt;vagrantc&gt;</a></span><span class="message">builds where it fails, rather</span></div><div class="line" id="014148"><span class="nick" style="color:#234e69"><a href="#014148" label="[01:41:48]">&lt;vagrantc&gt;</a></span><span class="message">when LANGUAGE is unset, it builds fine now</span></div><div class="line" id="014200"><span class="nick" style="color:#234e69"><a href="#014200" label="[01:42:00]">&lt;vagrantc&gt;</a></span><span class="message">e.g. the 1st build in the reproducible builds tests</span></div><div class="line" id="014206"><span class="nick" style="color:#6d2462"><a href="#014206" label="[01:42:06]">&lt;OriansJ&gt;</a></span><span class="message">well I have a patch that works around the issue specified in the test</span></div><div class="line" id="014223"><span class="nick" style="color:#6d2462"><a href="#014223" label="[01:42:23]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1182331/">https://paste.debian.net/1182331/</a> </span></div><div class="line" id="014254"><span class="nick" style="color:#6d2462"><a href="#014254" label="[01:42:54]">&lt;OriansJ&gt;</a></span><span class="message">but I am wondering what other locale environment variables might interact despite doing that</span></div><div class="line" id="014303"><span class="nick" style="color:#234e69"><a href="#014303" label="[01:43:03]">&lt;vagrantc&gt;</a></span><span class="message">what i also found odd is different tests failed on the different architectures (where there is a different LANGUAGE= value set)</span></div><div class="line" id="014330"><span class="nick" style="color:#234e69"><a href="#014330" label="[01:43:30]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: i don't think LANGUAGE can be set to C ... or can it?</span></div><div class="line" id="014355"><span class="nick" style="color:#d9d9d9"><a href="#014355" label="[01:43:55]">*</a></span><span class="message">vagrantc wonders</span></div><div class="line" id="014404"><span class="nick" style="color:#6d2462"><a href="#014404" label="[01:44:04]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: it can</span></div><div class="line" id="014408"><span class="nick" style="color:#6d2462"><a href="#014408" label="[01:44:08]">&lt;OriansJ&gt;</a></span><span class="message">and I did</span></div><div class="line" id="014413"><span class="nick" style="color:#6d2462"><a href="#014413" label="[01:44:13]">&lt;OriansJ&gt;</a></span><span class="message">and it works</span></div><div class="line" id="014439"><span class="nick" style="color:#234e69"><a href="#014439" label="[01:44:39]">&lt;vagrantc&gt;</a></span><span class="message">well, works sounds good enough for me :)</span></div><div class="line" id="014456"><span class="nick" style="color:#234e69"><a href="#014456" label="[01:44:56]">&lt;vagrantc&gt;</a></span><span class="message">i guess my other workaround would be to export LANGUAGE=C ...</span></div><div class="line" id="014523"><span class="nick" style="color:#6d2462"><a href="#014523" label="[01:45:23]">&lt;OriansJ&gt;</a></span><span class="message">you can reproduce by doing export LANGUAGE=nl_BE:nl before doing make clean test; see it fail with the same error, apply the patch and see it now successfully complete</span></div><div class="line" id="014557"><span class="nick" style="color:#234e69"><a href="#014557" label="[01:45:57]">&lt;vagrantc&gt;</a></span><span class="message">yay!</span></div><div class="line" id="014614"><span class="nick" style="color:#6d2462"><a href="#014614" label="[01:46:14]">&lt;OriansJ&gt;</a></span><span class="message">and i we find another locale environment variable that causes trouble, we know where to stick it</span></div><div class="line" id="014807"><span class="nick" style="color:#234e69"><a href="#014807" label="[01:48:07]">&lt;vagrantc&gt;</a></span><span class="message">any reason not to export them for the whole build?</span></div><div class="line" id="014819"><span class="nick" style="color:#234e69"><a href="#014819" label="[01:48:19]">&lt;vagrantc&gt;</a></span><span class="message">rather than test-by-test?</span></div><div class="line" id="014910"><span class="nick" style="color:#6d2462"><a href="#014910" label="[01:49:10]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: because localization is sometimes useful and I am only turning it off then it absolutely required.</span></div><div class="line" id="014942"><span class="nick" style="color:#234e69"><a href="#014942" label="[01:49:42]">&lt;vagrantc&gt;</a></span><span class="message">fair enough ... i may be more shotgun style to workaround in Debian</span></div><div class="line" id="014943"><span class="nick" style="color:#234e69"><a href="#014943" label="[01:49:43]">&lt;vagrantc&gt;</a></span><span class="message">:)</span></div><div class="line" id="014959"><span class="nick" style="color:#234e69"><a href="#014959" label="[01:49:59]">&lt;vagrantc&gt;</a></span><span class="message">e.g. in Debian i can assert that it's reasonble to build with a specific locale</span></div><div class="line" id="015006"><span class="nick" style="color:#6d2462"><a href="#015006" label="[01:50:06]">&lt;OriansJ&gt;</a></span><span class="message">and official patch is now up</span></div><div class="line" id="015017"><span class="nick" style="color:#234e69"><a href="#015017" label="[01:50:17]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: thanks!</span></div><div class="line" id="015019"><span class="nick" style="color:#80b1d3"><a href="#015019" label="[01:50:19]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: I think localization should be turned off by default for a reproducible build.  i.e., LC_ALL=C</span></div><div class="line" id="015113"><span class="nick" style="color:#80b1d3"><a href="#015113" label="[01:51:13]">&lt;xentrac&gt;</a></span><span class="message">because among other things the C locale changes a lot less often than the en_US.UTF-8 locale or any other</span></div><div class="line" id="015117"><span class="nick" style="color:#234e69"><a href="#015117" label="[01:51:17]">&lt;vagrantc&gt;</a></span><span class="message">yes, when attempting to *ensure* a reproducible build, you want to specify the same environment. If you want to find potential reproducibility issues, you vary as much as you reasonably can</span></div><div class="line" id="015117"><span class="nick" style="color:#6d2462"><a href="#015117" label="[01:51:17]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: well the reproducible build of mescc-tools that matters is done by M2-Planet</span></div><div class="line" id="015129"><span class="nick" style="color:#80b1d3"><a href="#015129" label="[01:51:29]">&lt;xentrac&gt;</a></span><span class="message">vagrantc: agreed!</span></div><div class="line" id="015204"><span class="nick" style="color:#6b8072"><a href="#015204" label="[01:52:04]">&lt;stikonas&gt;</a></span><span class="message">pder: no, patched qsort does not help with yacc</span></div><div class="line" id="015211"><span class="nick" style="color:#234e69"><a href="#015211" label="[01:52:11]">&lt;vagrantc&gt;</a></span><span class="message">right now debian only is only doing the find-the-bugs style reproducibility tests ... though hopefully that will change soon</span></div><div class="line" id="015212"><span class="nick" style="color:#6d2462"><a href="#015212" label="[01:52:12]">&lt;OriansJ&gt;</a></span><span class="message">and M2-Planet is 7bit Ansi Ascii only</span></div><div class="line" id="015232"><span class="nick" style="color:#6b8072"><a href="#015232" label="[01:52:32]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: you should bootstrap Debian from hex0 :D</span></div><div class="line" id="015256"><span class="nick" style="color:#234e69"><a href="#015256" label="[01:52:56]">&lt;vagrantc&gt;</a></span><span class="message">stikonas: someday ... maybe. :)</span></div><div class="line" id="015301"><span class="nick" style="color:#6d2462"><a href="#015301" label="[01:53:01]">&lt;OriansJ&gt;</a></span><span class="message">In theory you could put unicode in the /* comments */ but outside of that it'll complain loudly</span></div><div class="line" id="015319"><span class="nick" style="color:#234e69"><a href="#015319" label="[01:53:19]">&lt;vagrantc&gt;</a></span><span class="message">would be really cool to bootstrap it and still come out with identical binaries, of course :)</span></div><div class="line" id="015332"><span class="nick" style="color:#389600"><a href="#015332" label="[01:53:32]">&lt;fossy&gt;</a></span><span class="message">is there any way for debian to be built from outside debian currently</span></div><div class="line" id="015335"><span class="nick" style="color:#6d2462"><a href="#015335" label="[01:53:35]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: it'll be easier after fossy and stikonas finish the path to GCC</span></div><div class="line" id="015343"><span class="nick" style="color:#6b8072"><a href="#015343" label="[01:53:43]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, I dont think there is any</span></div><div class="line" id="015349"><span class="nick" style="color:#6b8072"><a href="#015349" label="[01:53:49]">&lt;stikonas&gt;</a></span><span class="message">I think it just uses debootstrap...</span></div><div class="line" id="015354"><span class="nick" style="color:#389600"><a href="#015354" label="[01:53:54]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="015410"><span class="nick" style="color:#234e69"><a href="#015410" label="[01:54:10]">&lt;vagrantc&gt;</a></span><span class="message">fossy: i think arm64 was initially bootstrapped on ubuntu, if i recall correctly ... though that isn't much of a difference</span></div><div class="line" id="015417"><span class="nick" style="color:#389600"><a href="#015417" label="[01:54:17]">&lt;fossy&gt;</a></span><span class="message">lol no</span></div><div class="line" id="015429"><span class="nick" style="color:#6b8072"><a href="#015429" label="[01:54:29]">&lt;stikonas&gt;</a></span><span class="message">debootstrap --from-hex0</span></div><div class="line" id="015430"><span class="nick" style="color:#6b8072"><a href="#015430" label="[01:54:30]">&lt;stikonas&gt;</a></span><span class="message">:D</span></div><div class="line" id="015432"><span class="nick" style="color:#234e69"><a href="#015432" label="[01:54:32]">&lt;vagrantc&gt;</a></span><span class="message">hah</span></div><div class="line" id="015436"><span class="nick" style="color:#389600"><a href="#015436" label="[01:54:36]">&lt;fossy&gt;</a></span><span class="message">heh</span></div><div class="line" id="015442"><span class="nick" style="color:#6b8072"><a href="#015442" label="[01:54:42]">&lt;stikonas&gt;</a></span><span class="message">instead of downloading from archive, just run live-bootstrap</span></div><div class="line" id="015445"><span class="nick" style="color:#389600"><a href="#015445" label="[01:54:45]">&lt;fossy&gt;</a></span><span class="message">good luck with thtat one ever happening</span></div><div class="line" id="015516"><span class="nick" style="color:#6d2462"><a href="#015516" label="[01:55:16]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: if you can find a way to get M2-Planet to produce non-reproducible output, I will be stunned and probably give you money.</span></div><div class="line" id="015522"><span class="nick" style="color:#389600"><a href="#015522" label="[01:55:22]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="015522"><span class="nick" style="color:#234e69"><a href="#015522" label="[01:55:22]">&lt;vagrantc&gt;</a></span><span class="message">there is someone who does cross-architecture bootstrapping of debian, which has some similar problems, though is pretty different in many ways (e.g. you start with a working cross-compiler)</span></div><div class="line" id="015529"><span class="nick" style="color:#6b8072"><a href="#015529" label="[01:55:29]">&lt;stikonas&gt;</a></span><span class="message">well, if we can get live-bootstrap to automatically bootstrap useful system, then from there it's not too hard to bootstrap distros</span></div><div class="line" id="015539"><span class="nick" style="color:#6d2462"><a href="#015539" label="[01:55:39]">&lt;OriansJ&gt;</a></span><span class="message">good thing M2-Planet is cross-platform too</span></div><div class="line" id="015540"><span class="nick" style="color:#389600"><a href="#015540" label="[01:55:40]">&lt;fossy&gt;</a></span><span class="message">stikonas: debian being one of the not so easy ones rn</span></div><div class="line" id="015548"><span class="nick" style="color:#6b8072"><a href="#015548" label="[01:55:48]">&lt;stikonas&gt;</a></span><span class="message">yeah, I know....</span></div><div class="line" id="015556"><span class="nick" style="color:#6b8072"><a href="#015556" label="[01:55:56]">&lt;stikonas&gt;</a></span><span class="message">that's why I think I might try to get Gentoo instead...</span></div><div class="line" id="015559"><span class="nick" style="color:#389600"><a href="#015559" label="[01:55:59]">&lt;fossy&gt;</a></span><span class="message">interestingly, it's the smaller distros that are easier to bootstrap</span></div><div class="line" id="015603"><span class="nick" style="color:#389600"><a href="#015603" label="[01:56:03]">&lt;fossy&gt;</a></span><span class="message">gentoo, void, alpine</span></div><div class="line" id="015623"><span class="nick" style="color:#234e69"><a href="#015623" label="[01:56:23]">&lt;vagrantc&gt;</a></span><span class="message">debian's bootstrapping origin is lost to time and history ... there were bootstrap seeds at various points, but nobody knows what they are</span></div><div class="line" id="015626"><span class="nick" style="color:#389600"><a href="#015626" label="[01:56:26]">&lt;fossy&gt;</a></span><span class="message">haven't looked into fedora</span></div><div class="line" id="015630"><span class="nick" style="color:#389600"><a href="#015630" label="[01:56:30]">&lt;fossy&gt;</a></span><span class="message">yeah, that's what i thought</span></div><div class="line" id="015636"><span class="nick" style="color:#6b8072"><a href="#015636" label="[01:56:36]">&lt;stikonas&gt;</a></span><span class="message">fedora is probably similar to debian...</span></div><div class="line" id="015640"><span class="nick" style="color:#389600"><a href="#015640" label="[01:56:40]">&lt;fossy&gt;</a></span><span class="message">yeps</span></div><div class="line" id="015707"><span class="nick" style="color:#80b1d3"><a href="#015707" label="[01:57:07]">&lt;xentrac&gt;</a></span><span class="message">fossy: yeah, that makes a lot of sense</span></div><div class="line" id="015710"><span class="nick" style="color:#389600"><a href="#015710" label="[01:57:10]">&lt;fossy&gt;</a></span><span class="message">i still haven't demistified debian's build system yet, but once i fugre out how exactly that works,  i can probably make something work</span></div><div class="line" id="015720"><span class="nick" style="color:#234e69"><a href="#015720" label="[01:57:20]">&lt;vagrantc&gt;</a></span><span class="message">guix and i assume nix have their bootstrap binaries at least recorded, which makes it all easier</span></div><div class="line" id="015809"><span class="nick" style="color:#234e69"><a href="#015809" label="[01:58:09]">&lt;vagrantc&gt;</a></span><span class="message">fossy: happy to answer questions about debian's build system ... though it's hairy enough can't promise great answers :)</span></div><div class="line" id="015825"><span class="nick" style="color:#389600"><a href="#015825" label="[01:58:25]">&lt;fossy&gt;</a></span><span class="message">vagrantc: just FWIW, do you have any reasonably up-to-date resources for me to figure out how i can build a package from a source repo</span></div><div class="line" id="015830"><span class="nick" style="color:#389600"><a href="#015830" label="[01:58:30]">&lt;fossy&gt;</a></span><span class="message">is it correct that each package has its own repo</span></div><div class="line" id="015836"><span class="nick" style="color:#389600"><a href="#015836" label="[01:58:36]">&lt;fossy&gt;</a></span><span class="message">there's no monorepo that i just havent found right</span></div><div class="line" id="015843"><span class="nick" style="color:#6b8072"><a href="#015843" label="[01:58:43]">&lt;stikonas&gt;</a></span><span class="message">I wonder if live-bootstrap can reproduce guix bootstrap binaries bit-by-bit...</span></div><div class="line" id="015844"><span class="nick" style="color:#234e69"><a href="#015844" label="[01:58:44]">&lt;vagrantc&gt;</a></span><span class="message">yeah, every package is essentially it's own project</span></div><div class="line" id="015903"><span class="nick" style="color:#234e69"><a href="#015903" label="[01:59:03]">&lt;vagrantc&gt;</a></span><span class="message">i haven't heard of this live-bootstrap thing till now ... link?</span></div><div class="line" id="015921"><span class="nick" style="color:#234e69"><a href="#015921" label="[01:59:21]">&lt;vagrantc&gt;</a></span><span class="message">i presume you mean to boot into an environment to start the bootstrapping process?</span></div><div class="line" id="015950"><span class="nick" style="color:#6b8072"><a href="#015950" label="[01:59:50]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/">https://github.com/fosslinux/live-bootstrap/</a> </span></div><div class="line" id="020005"><span class="nick" style="color:#6b8072"><a href="#020005" label="[02:00:05]">&lt;stikonas&gt;</a></span><span class="message">yeah, it boots into live-environment with 1090 bytes of binaries</span></div><div class="line" id="020015"><span class="nick" style="color:#234e69"><a href="#020015" label="[02:00:15]">&lt;vagrantc&gt;</a></span><span class="message">fossy: it's a little crufty now, but i usually used &quot;debmake&quot; to set up the initial templates</span></div><div class="line" id="020017"><span class="nick" style="color:#6b8072"><a href="#020017" label="[02:00:17]">&lt;stikonas&gt;</a></span><span class="message">and a lot of sourc code</span></div><div class="line" id="020029"><span class="nick" style="color:#6b8072"><a href="#020029" label="[02:00:29]">&lt;stikonas&gt;</a></span><span class="message">so just hex0 and kaem</span></div><div class="line" id="020036"><span class="nick" style="color:#6b8072"><a href="#020036" label="[02:00:36]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: basically even more extreme than guix bootstrap</span></div><div class="line" id="020046"><span class="nick" style="color:#234e69"><a href="#020046" label="[02:00:46]">&lt;vagrantc&gt;</a></span><span class="message">fossy: or look at one of my recently packaged guile packages in debian, they pretty much demonstrate the minimum of what you need</span></div><div class="line" id="020104"><span class="nick" style="color:#389600"><a href="#020104" label="[02:01:04]">&lt;fossy&gt;</a></span><span class="message">vagrantc: okey, i'll take  a look</span></div><div class="line" id="020117"><span class="nick" style="color:#6b8072"><a href="#020117" label="[02:01:17]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: and we don't allow anything pregenerated, no running of ./configure scripts, no pregenerated bison parsers</span></div><div class="line" id="020126"><span class="nick" style="color:#234e69"><a href="#020126" label="[02:01:26]">&lt;vagrantc&gt;</a></span><span class="message">fossy: it's basically a handful of files in debian/ ... if you're lucky debian/rules can be a one-liner</span></div><div class="line" id="020130"><span class="nick" style="color:#389600"><a href="#020130" label="[02:01:30]">&lt;fossy&gt;</a></span><span class="message">do you just run dpkg-buildpackage to build these things</span></div><div class="line" id="020201"><span class="nick" style="color:#234e69"><a href="#020201" label="[02:02:01]">&lt;vagrantc&gt;</a></span><span class="message">live-bootstrap sounds really cool!</span></div><div class="line" id="020206"><span class="nick" style="color:#389600"><a href="#020206" label="[02:02:06]">&lt;fossy&gt;</a></span><span class="message">:D</span></div><div class="line" id="020208"><span class="nick" style="color:#6b8072"><a href="#020208" label="[02:02:08]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: try running it :D</span></div><div class="line" id="020212"><span class="nick" style="color:#6b8072"><a href="#020212" label="[02:02:12]">&lt;stikonas&gt;</a></span><span class="message">it's in qemu or chroot</span></div><div class="line" id="020228"><span class="nick" style="color:#6b8072"><a href="#020228" label="[02:02:28]">&lt;stikonas&gt;</a></span><span class="message">so you don't need to reboot into real hardware if you don't want</span></div><div class="line" id="020240"><span class="nick" style="color:#234e69"><a href="#020240" label="[02:02:40]">&lt;vagrantc&gt;</a></span><span class="message">i remember civodul worked on a proof of concept to do something sort of like that for guix ... though with a larger set of bootstrap binaries</span></div><div class="line" id="020250"><span class="nick" style="color:#389600"><a href="#020250" label="[02:02:50]">&lt;fossy&gt;</a></span><span class="message">guix does this but with guile</span></div><div class="line" id="020252"><span class="nick" style="color:#6b8072"><a href="#020252" label="[02:02:52]">&lt;stikonas&gt;</a></span><span class="message">yeah, with guile...</span></div><div class="line" id="020254"><span class="nick" style="color:#389600"><a href="#020254" label="[02:02:54]">&lt;fossy&gt;</a></span><span class="message">and a few more seeds</span></div><div class="line" id="020257"><span class="nick" style="color:#6b8072"><a href="#020257" label="[02:02:57]">&lt;stikonas&gt;</a></span><span class="message">guile boots as initramfs</span></div><div class="line" id="020304"><span class="nick" style="color:#234e69"><a href="#020304" label="[02:03:04]">&lt;vagrantc&gt;</a></span><span class="message">right</span></div><div class="line" id="020312"><span class="nick" style="color:#389600"><a href="#020312" label="[02:03:12]">&lt;fossy&gt;</a></span><span class="message">and not as extreme definitions of &quot;source&quot;</span></div><div class="line" id="020322"><span class="nick" style="color:#234e69"><a href="#020322" label="[02:03:22]">&lt;vagrantc&gt;</a></span><span class="message">it was one of my wild-and-crazy-offhand-ideas that someone actually went and implemented :)</span></div><div class="line" id="020326"><span class="nick" style="color:#6b8072"><a href="#020326" label="[02:03:26]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: so now we are trying to get bash...</span></div><div class="line" id="020328"><span class="nick" style="color:#389600"><a href="#020328" label="[02:03:28]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="020340"><span class="nick" style="color:#6b8072"><a href="#020340" label="[02:03:40]">&lt;stikonas&gt;</a></span><span class="message">it's almost done, just need to get bison :D</span></div><div class="line" id="020350"><span class="nick" style="color:#6b8072"><a href="#020350" label="[02:03:50]">&lt;stikonas&gt;</a></span><span class="message">and after that autotools</span></div><div class="line" id="020351"><span class="nick" style="color:#389600"><a href="#020351" label="[02:03:51]">&lt;fossy&gt;</a></span><span class="message">bash is almost done lol</span></div><div class="line" id="020355"><span class="nick" style="color:#389600"><a href="#020355" label="[02:03:55]">&lt;fossy&gt;</a></span><span class="message">the whole thing is nowhere near done</span></div><div class="line" id="020356"><span class="nick" style="color:#234e69"><a href="#020356" label="[02:03:56]">&lt;vagrantc&gt;</a></span><span class="message">but bootstrapping from an initramfs reduces the set of potentially leaked binaries</span></div><div class="line" id="020400"><span class="nick" style="color:#389600"><a href="#020400" label="[02:04:00]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="020406"><span class="nick" style="color:#389600"><a href="#020406" label="[02:04:06]">&lt;fossy&gt;</a></span><span class="message">i tried extending mescc-tools-seed</span></div><div class="line" id="020416"><span class="nick" style="color:#234e69"><a href="#020416" label="[02:04:16]">&lt;vagrantc&gt;</a></span><span class="message">you know exactly what you have and can't accidentally call something else :)</span></div><div class="line" id="020416"><span class="nick" style="color:#389600"><a href="#020416" label="[02:04:16]">&lt;fossy&gt;</a></span><span class="message">the amount of GNU stuff that hardcodes path is annoying</span></div><div class="line" id="020422"><span class="nick" style="color:#389600"><a href="#020422" label="[02:04:22]">&lt;fossy&gt;</a></span><span class="message">/bin/sh, etc</span></div><div class="line" id="020431"><span class="nick" style="color:#389600"><a href="#020431" label="[02:04:31]">&lt;fossy&gt;</a></span><span class="message">/usr/bin/gcc</span></div><div class="line" id="020433"><span class="nick" style="color:#6b8072"><a href="#020433" label="[02:04:33]">&lt;stikonas&gt;</a></span><span class="message">vagrantc: and also leaks from filesystem like /dev/</span></div><div class="line" id="020437"><span class="nick" style="color:#389600"><a href="#020437" label="[02:04:37]">&lt;fossy&gt;</a></span><span class="message">especially make :|</span></div><div class="line" id="020442"><span class="nick" style="color:#80b1d3"><a href="#020442" label="[02:04:42]">&lt;xentrac&gt;</a></span><span class="message">fossy: #plan9wasright</span></div><div class="line" id="020451"><span class="nick" style="color:#389600"><a href="#020451" label="[02:04:51]">&lt;fossy&gt;</a></span><span class="message">haha</span></div><div class="line" id="025528"><span class="nick" style="color:#234e69"><a href="#025528" label="[02:55:28]">&lt;vagrantc&gt;</a></span><span class="message">whoah, mescc-tools has been building successfully on debian gnu/kfreebsd-i386 ... still fails on -amd64</span></div><div class="line" id="025617"><span class="nick" style="color:#234e69"><a href="#025617" label="[02:56:17]">&lt;vagrantc&gt;</a></span><span class="message">that's a pretty bizarre architecture :)</span></div><div class="line" id="030245"><span class="nick" style="color:#6d2462"><a href="#030245" label="[03:02:45]">&lt;OriansJ&gt;</a></span><span class="message">*face-&gt;desk*</span></div><div class="line" id="030510"><span class="nick" style="color:#6d2462"><a href="#030510" label="[03:05:10]">&lt;OriansJ&gt;</a></span><span class="message">it is literally developed on amd64</span></div><div class="line" id="030730"><span class="nick" style="color:#bc80bd"><a href="#030730" label="[03:07:30]">&lt;malina&gt;</a></span><span class="message">consider fefe's dietlibc too, as a route. I would suspect it's easier to get going than musl.</span></div><div class="line" id="030849"><span class="nick" style="color:#6d2462"><a href="#030849" label="[03:08:49]">&lt;OriansJ&gt;</a></span><span class="message">&quot;Identifier: captures_build_path_via_assert&quot; WTF???</span></div><div class="line" id="030938"><span class="nick" style="color:#234e69"><a href="#030938" label="[03:09:38]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: you develop on kfreebsd-amd64?</span></div><div class="line" id="031014"><span class="nick" style="color:#6d2462"><a href="#031014" label="[03:10:14]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: no Linux AMD64</span></div><div class="line" id="031021"><span class="nick" style="color:#234e69"><a href="#031021" label="[03:10:21]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: builds fine on linux :)</span></div><div class="line" id="031101"><span class="nick" style="color:#6d2462"><a href="#031101" label="[03:11:01]">&lt;OriansJ&gt;</a></span><span class="message">well not according to: <a rel="nofollow" href="https://tests.reproducible-builds.org/debian/rb-pkg/unstable/amd64/mescc-tools.html">https://tests.reproducible-builds.org/debian/rb-pkg/unstable/amd64/mescc-tools.html</a> </span></div><div class="line" id="031106"><span class="nick" style="color:#234e69"><a href="#031106" label="[03:11:06]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: that identifier *might* be miscategorized and/or from an older version ... it definitely was capturing the build path at some point</span></div><div class="line" id="031146"><span class="nick" style="color:#234e69"><a href="#031146" label="[03:11:46]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: here's to hoping my upload a few minutes ago will build there too, but it did build: <a rel="nofollow" href="https://buildd.debian.org/mescc-tools">https://buildd.debian.org/mescc-tools</a> </span></div><div class="line" id="031355"><span class="nick" style="color:#234e69"><a href="#031355" label="[03:13:55]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: i think the build path issue was fixed by  7f3ce4278770f42da06d9dddab9d0f8148998e2</span></div><div class="line" id="031530"><span class="nick" style="color:#234e69"><a href="#031530" label="[03:15:30]">&lt;vagrantc&gt;</a></span><span class="message">although requires setting CFLAGS -fdebug-prefix-map=$buildpath=. (or -ffile-prefix-map=$buildpath=. ?) and a compiler that supports those flags</span></div><div class="line" id="033831"><span class="nick" style="color:#6d2462"><a href="#033831" label="[03:38:31]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: hmm using  <a rel="nofollow" href="https://salsa.debian.org/vagrant/mescc-tools">https://salsa.debian.org/vagrant/mescc-tools</a>  and <a rel="nofollow" href="https://salsa.debian.org/debian/mescc-tools.git">https://salsa.debian.org/debian/mescc-tools.git</a>  and still got error: pathspec '7f3ce4278770f42da06d9dddab9d0f8148998e2' did not match any file(s) known to git</span></div><div class="line" id="035759"><span class="nick" style="color:#6d2462"><a href="#035759" label="[03:57:59]">&lt;OriansJ&gt;</a></span><span class="message">huh, would have expected xz to compress 500GB of /dev/zero better</span></div><div class="line" id="035913"><span class="nick" style="color:#6d2462"><a href="#035913" label="[03:59:13]">&lt;OriansJ&gt;</a></span><span class="message">needs 69M but renaming to drop .xz extension in need allows compression to 11K</span></div><div class="line" id="035932"><span class="nick" style="color:#6d2462"><a href="#035932" label="[03:59:32]">&lt;OriansJ&gt;</a></span><span class="message">with a second pass of xz</span></div><div class="line" id="040634"><span class="nick" style="color:#234e69"><a href="#040634" label="[04:06:34]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: i think a git syntax error ... :)</span></div><div class="line" id="040644"><span class="nick" style="color:#234e69"><a href="#040644" label="[04:06:44]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: git show 7f3ce4278770f42da06d9dddab9d0f8148998e2</span></div><div class="line" id="040644"><span class="nick" style="color:#6d2462"><a href="#040644" label="[04:06:44]">&lt;OriansJ&gt;</a></span><span class="message">I guess it is time to get ./bin/get_machine ${GET_MACHINE_OS_FLAGS} --OS operational</span></div><div class="line" id="040708"><span class="nick" style="color:#234e69"><a href="#040708" label="[04:07:08]">&lt;vagrantc&gt;</a></span><span class="message">it's merged in upstream mescc-tools</span></div><div class="line" id="041104"><span class="nick" style="color:#6d2462"><a href="#041104" label="[04:11:04]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: but I am the upstream source</span></div><div class="line" id="041201"><span class="nick" style="color:#234e69"><a href="#041201" label="[04:12:01]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: &quot;pathspec '7f3ce4278770f42da06d9dddab9d0f8148998e2' did not match any file(s) known to git</span></div><div class="line" id="041204"><span class="nick" style="color:#234e69"><a href="#041204" label="[04:12:04]">&lt;vagrantc&gt;</a></span><span class="message">&quot;</span></div><div class="line" id="041235"><span class="nick" style="color:#234e69"><a href="#041235" label="[04:12:35]">&lt;vagrantc&gt;</a></span><span class="message">i think you typed the wrong git commant</span></div><div class="line" id="041319"><span class="nick" style="color:#234e69"><a href="#041319" label="[04:13:19]">&lt;vagrantc&gt;</a></span><span class="message">command. hah. we're all full of typos. :)</span></div><div class="line" id="041353"><span class="nick" style="color:#6d2462"><a href="#041353" label="[04:13:53]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: but I copy and paste</span></div><div class="line" id="041514"><span class="nick" style="color:#234e69"><a href="#041514" label="[04:15:14]">&lt;vagrantc&gt;</a></span><span class="message">ok, this is weird.</span></div><div class="line" id="041523"><span class="nick" style="color:#234e69"><a href="#041523" label="[04:15:23]">&lt;vagrantc&gt;</a></span><span class="message">did you accidentally rebase?</span></div><div class="line" id="041629"><span class="nick" style="color:#234e69"><a href="#041629" label="[04:16:29]">&lt;vagrantc&gt;</a></span><span class="message">or i cut-and-pasted the hash wrong somehow ... wtf...</span></div><div class="line" id="041629"><span class="nick" style="color:#6d2462"><a href="#041629" label="[04:16:29]">&lt;OriansJ&gt;</a></span><span class="message">with a git clone, git remote add and git fetch as the only input commands?</span></div><div class="line" id="041700"><span class="nick" style="color:#234e69"><a href="#041700" label="[04:17:00]">&lt;vagrantc&gt;</a></span><span class="message">37f3ce4278770f42da06d9dddab9d0f8148998e2</span></div><div class="line" id="041707"><span class="nick" style="color:#234e69"><a href="#041707" label="[04:17:07]">&lt;vagrantc&gt;</a></span><span class="message">somehow lost the leading 3 :)</span></div><div class="line" id="041719"><span class="nick" style="color:#6d2462"><a href="#041719" label="[04:17:19]">&lt;OriansJ&gt;</a></span><span class="message">that would do it</span></div><div class="line" id="041726"><span class="nick" style="color:#234e69"><a href="#041726" label="[04:17:26]">&lt;vagrantc&gt;</a></span><span class="message">surprisingly picky, that git.</span></div><div class="line" id="041756"><span class="nick" style="color:#d9d9d9"><a href="#041756" label="[04:17:56]">*</a></span><span class="message">vagrantc also cut-and-pasted, but still managed to typo</span></div><div class="line" id="041817"><span class="nick" style="color:#6d2462"><a href="#041817" label="[04:18:17]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: git gives no shits but does what exactly you tell it</span></div><div class="line" id="041846"><span class="nick" style="color:#6d2462"><a href="#041846" label="[04:18:46]">&lt;OriansJ&gt;</a></span><span class="message">even if what you told it was absolutely batshit insane</span></div><div class="line" id="041930"><span class="nick" style="color:#234e69"><a href="#041930" label="[04:19:30]">&lt;vagrantc&gt;</a></span><span class="message">anyways, sorry for the confusing ... that commit is what allows passing -f*-prefix-map=$buildpath=. to fix the build path issues</span></div><div class="line" id="042011"><span class="nick" style="color:#6d2462"><a href="#042011" label="[04:20:11]">&lt;OriansJ&gt;</a></span><span class="message">well yes, it inherits environmental CFLAGS</span></div><div class="line" id="042031"><span class="nick" style="color:#234e69"><a href="#042031" label="[04:20:31]">&lt;vagrantc&gt;</a></span><span class="message">but without that, something embedded the build paths</span></div><div class="line" id="042255"><span class="nick" style="color:#234e69"><a href="#042255" label="[04:22:55]">&lt;vagrantc&gt;</a></span><span class="message">ok, and now i wait for mescc-tools to build on the reproducible builds infrastructure and hope everything is ok again :)</span></div><div class="line" id="042333"><span class="nick" style="color:#6d2462"><a href="#042333" label="[04:23:33]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: and I have a solution for kfreebsd-amd64</span></div><div class="line" id="042349"><span class="nick" style="color:#6d2462"><a href="#042349" label="[04:23:49]">&lt;OriansJ&gt;</a></span><span class="message">and all future OS platforms too</span></div><div class="line" id="042411"><span class="nick" style="color:#234e69"><a href="#042411" label="[04:24:11]">&lt;vagrantc&gt;</a></span><span class="message">OriansJ: great! :)</span></div><div class="line" id="042428"><span class="nick" style="color:#d9d9d9"><a href="#042428" label="[04:24:28]">*</a></span><span class="message">vagrantc is kind of surprised kfreebsd-i386 worked at all</span></div><div class="line" id="042550"><span class="nick" style="color:#6d2462"><a href="#042550" label="[04:25:50]">&lt;OriansJ&gt;</a></span><span class="message">Linux emuulation mode being enabled maybe?</span></div><div class="line" id="042602"><span class="nick" style="color:#234e69"><a href="#042602" label="[04:26:02]">&lt;vagrantc&gt;</a></span><span class="message">maybe</span></div><div class="line" id="042619"><span class="nick" style="color:#234e69"><a href="#042619" label="[04:26:19]">&lt;vagrantc&gt;</a></span><span class="message">can't rely on that being enabled, but maybe it was for that particular build machine</span></div><div class="line" id="042659"><span class="nick" style="color:#6d2462"><a href="#042659" label="[04:26:59]">&lt;OriansJ&gt;</a></span><span class="message">don't worry the fix will solve it forever</span></div><div class="line" id="043554"><span class="nick" style="color:#234e69"><a href="#043554" label="[04:35:54]">&lt;vagrantc&gt;</a></span><span class="message">thanks as usual!</span></div><div class="line" id="043559"><span class="nick" style="color:#234e69"><a href="#043559" label="[04:35:59]">&lt;vagrantc&gt;</a></span><span class="message">time to head out</span></div><div class="line" id="043612"><span class="nick" style="color:#234e69"><a href="#043612" label="[04:36:12]">&lt;vagrantc&gt;</a></span><span class="message">and stop watching progress bars :)</span></div><div class="line" id="043618"><span class="nick" style="color:#234e69"><a href="#043618" label="[04:36:18]">&lt;vagrantc&gt;</a></span><span class="message">till next time</span></div><div class="line" id="043620"><span class="nick" style="color:#d9d9d9"><a href="#043620" label="[04:36:20]">*</a></span><span class="message">vagrantc waves</span></div><div class="line" id="044533"><span class="nick" style="color:#6d2462"><a href="#044533" label="[04:45:33]">&lt;OriansJ&gt;</a></span><span class="message">and just shortly before I finished the patches</span></div><div class="line" id="044549"><span class="nick" style="color:#6d2462"><a href="#044549" label="[04:45:49]">&lt;OriansJ&gt;</a></span><span class="message">which by the way I just uploaded vagrantc</span></div><div class="line" id="044729"><span class="nick" style="color:#6d2462"><a href="#044729" label="[04:47:29]">&lt;OriansJ&gt;</a></span><span class="message">now setting the environment variable GET_MACHINE_OS_FLAGS will allow you to get get_machine to return any OS string you want.</span></div><div class="line" id="135431"><span class="nick" style="color:#3c5b35"><a href="#135431" label="[13:54:31]">&lt;gio&gt;</a></span><span class="message">stikonas: I don't really know how to help you. It works for me without any special care, I'd say. Unfortunately I don't have much time right now to help with your case.</span></div><div class="line" id="135512"><span class="nick" style="color:#6b8072"><a href="#135512" label="[13:55:12]">&lt;stikonas&gt;</a></span><span class="message">gio: anyway, I think we now why it works for you</span></div><div class="line" id="135518"><span class="nick" style="color:#6b8072"><a href="#135518" label="[13:55:18]">&lt;stikonas&gt;</a></span><span class="message">it looks like mes libc bug</span></div><div class="line" id="135531"><span class="nick" style="color:#3c5b35"><a href="#135531" label="[13:55:31]">&lt;gio&gt;</a></span><span class="message">Ok, good luck finding that!</span></div><div class="line" id="135532"><span class="nick" style="color:#6b8072"><a href="#135532" label="[13:55:32]">&lt;stikonas&gt;</a></span><span class="message">so either we find that</span></div><div class="line" id="135535"><span class="nick" style="color:#6b8072"><a href="#135535" label="[13:55:35]">&lt;stikonas&gt;</a></span><span class="message">of compile musl</span></div><div class="line" id="135548"><span class="nick" style="color:#6b8072"><a href="#135548" label="[13:55:48]">&lt;stikonas&gt;</a></span><span class="message">which is not too far, but I'm hitting some issue that I don't know how to solve...</span></div><div class="line" id="135733"><span class="nick" style="color:#6b8072"><a href="#135733" label="[13:57:33]">&lt;stikonas&gt;</a></span><span class="message">basically I'm hitting <a rel="nofollow" href="https://lists.nongnu.org/archive/html/tinycc-devel/2019-09/msg00027.html">https://lists.nongnu.org/archive/html/tinycc-devel/2019-09/msg00027.html</a>  but there are no replies</span></div><div class="line" id="140252"><span class="nick" style="color:#3c5b35"><a href="#140252" label="[14:02:52]">&lt;gio&gt;</a></span><span class="message">stikonas: Don't know, but I guess I would just try to work out the appropriate byte sequence and write that one with .byte or something.</span></div><div class="line" id="144340"><span class="nick" style="color:#af8d2f"><a href="#144340" label="[14:43:40]">&lt;bauen1&gt;</a></span><span class="message">fossy: stikonas: kexec / module loading is probably easy enough to add, just a bit of work to setup paging and copy to/from the right location and call an init hook ?</span></div><div class="line" id="144354"><span class="nick" style="color:#af8d2f"><a href="#144354" label="[14:43:54]">&lt;bauen1&gt;</a></span><span class="message">might be a bit more complicated if you need to do some elf loading, but nothing world ending</span></div><div class="line" id="145046"><span class="nick" style="color:#af8d2f"><a href="#145046" label="[14:50:46]">&lt;bauen1&gt;</a></span><span class="message">but if i want to, then i'll do that after the first io syscalls are working correctly</span></div><div class="line" id="181038"><span class="nick" style="color:#6d2462"><a href="#181038" label="[18:10:38]">&lt;OriansJ&gt;</a></span><span class="message">looks like I need to rethink how I am going to support FORK and WAITPID in stage0's vm --POSIX-MODE</span></div><div class="line" id="200101"><span class="nick" style="color:#6c3d55"><a href="#200101" label="[20:01:01]">&lt;deesix&gt;</a></span><span class="message">OriansJ, what's the problem?</span></div><div class="line" id="202853"><span class="nick" style="color:#6d2462"><a href="#202853" label="[20:28:53]">&lt;OriansJ&gt;</a></span><span class="message">deesix: actually getting vm to create a core image and spawn a seperate vm instance to run that core image rather than just punting as was previously done in stage0's vm to enable a proper POSIX fork for mescc-tools-seed for knight</span></div><div class="line" id="202935"><span class="nick" style="color:#6d2462"><a href="#202935" label="[20:29:35]">&lt;OriansJ&gt;</a></span><span class="message">which would allow all of the M2-Planet tests to have a knight implementation.</span></div><div class="line" id="203154"><span class="nick" style="color:#6d2462"><a href="#203154" label="[20:31:54]">&lt;OriansJ&gt;</a></span><span class="message">I guess more of a problem of choosing to make stage0's vm have a Linux compatible --POSIX-MODE or actually figuring out a proper MMU design for Knight and Porting Linux to run on it.</span></div><div class="line" id="204103"><span class="nick">***</span><span class="message notice">nckx[2] is now known as nckx</span></div><div class="line" id="212203"><span class="nick" style="color:#6b8072"><a href="#212203" label="[21:22:03]">&lt;stikonas&gt;</a></span><span class="message">pder: so the other mes libc bug can be seen in seq...</span></div><div class="line" id="212633"><span class="nick" style="color:#6b8072"><a href="#212633" label="[21:26:33]">&lt;stikonas&gt;</a></span><span class="message">although, it wasn't completely clear from the code what might be going wrong...</span></div><div class="line" id="212650"><span class="nick" style="color:#6b8072"><a href="#212650" label="[21:26:50]">&lt;stikonas&gt;</a></span><span class="message">it might be a good idea to compile in debug symbols in live-bootstrap by default for now...</span></div><div class="line" id="215825"><span class="nick" style="color:#6c3d55"><a href="#215825" label="[21:58:25]">&lt;deesix&gt;</a></span><span class="message">OriansJ, the 'TMP' branch of my M2-Planet repo has three commits, with --exec_enabled removal, full switch to new-style mescc-tools flags (no more --BaseAddress, --BigEndian, --LittleEndian) and a bit of indentation clean-up. Let me know if your current work would conflict. I can redo/rebase later if you prefer. It's only tested on x86 but the change is the same everywhere.</span></div><div class="line" id="220439"><span class="nick" style="color:#6d2462"><a href="#220439" label="[22:04:39]">&lt;OriansJ&gt;</a></span><span class="message">deesix: thank you so much for this. I'll take care of testing on AMD64 and armv7l. With a good look over AArch64.</span></div><div class="line" id="221613"><span class="nick" style="color:#6d2462"><a href="#221613" label="[22:16:13]">&lt;OriansJ&gt;</a></span><span class="message">armv7l and AMD64 pass happily deesix</span></div><div class="line" id="221647"><span class="nick" style="color:#6d2462"><a href="#221647" label="[22:16:47]">&lt;OriansJ&gt;</a></span><span class="message">and AArch64 looks good too.</span></div><div class="line" id="221850"><span class="nick" style="color:#d9d9d9"><a href="#221850" label="[22:18:50]">*</a></span><span class="message">deesix trying armv6l</span></div><div class="line" id="222013"><span class="nick" style="color:#6d2462"><a href="#222013" label="[22:20:13]">&lt;OriansJ&gt;</a></span><span class="message">since none of the checksums actually changed, we know that it all binaries still work, the only bit that could break in these commits are the tests</span></div><div class="line" id="222334"><span class="nick" style="color:#6c3d55"><a href="#222334" label="[22:23:34]">&lt;deesix&gt;</a></span><span class="message">Yep. All good on armv6l (with override).</span></div><div class="line" id="222425"><span class="nick" style="color:#6d2462"><a href="#222425" label="[22:24:25]">&lt;OriansJ&gt;</a></span><span class="message">deesix:  have you seen the latest mescc-tools variable yet?</span></div><div class="line" id="222623"><span class="nick" style="color:#6c3d55"><a href="#222623" label="[22:26:23]">&lt;deesix&gt;</a></span><span class="message">OriansJ, the get_machine one? No, just read about it here yet.</span></div><div class="line" id="222651"><span class="nick" style="color:#6d2462"><a href="#222651" label="[22:26:51]">&lt;OriansJ&gt;</a></span><span class="message">GET_MACHINE_OS_FLAGS will be part of Release_1.1.1 to allow [ &quot;$(./bin/get_machine ${GET_MACHINE_OS_FLAGS} --OS)&quot; = &quot;Linux&quot; ] to restrict tests to hosts OS which will be able to run the binaries should we wish to properly port M2-Planet new more Operating systems.</span></div><div class="line" id="222810"><span class="nick" style="color:#6d2462"><a href="#222810" label="[22:28:10]">&lt;OriansJ&gt;</a></span><span class="message">correction: [&quot;$(get_machine ${GET_MACHINE_OS_FLAGS} --OS)&quot; = &quot;Linux&quot; ]</span></div><div class="line" id="222913"><span class="nick" style="color:#6d2462"><a href="#222913" label="[22:29:13]">&lt;OriansJ&gt;</a></span><span class="message">which will allow export GET_MACHINE_OS_FLAGS=&quot;--override windows&quot; or any other host OS we want to pretend to be.</span></div><div class="line" id="222928"><span class="nick" style="color:#6c3d55"><a href="#222928" label="[22:29:28]">&lt;deesix&gt;</a></span><span class="message">Makes sense. Please, watch out for flag style :) --os maybe?</span></div><div class="line" id="223027"><span class="nick" style="color:#6d2462"><a href="#223027" label="[22:30:27]">&lt;OriansJ&gt;</a></span><span class="message">I guess I'll have to add support for that to get_machine</span></div><div class="line" id="223109"><span class="nick" style="color:#6c3d55"><a href="#223109" label="[22:31:09]">&lt;deesix&gt;</a></span><span class="message">As for the three commits... if it does not conflict with your actual work, I'm happy with them, cherry-pick as you wish.</span></div><div class="line" id="223142"><span class="nick" style="color:#6d2462"><a href="#223142" label="[22:31:42]">&lt;OriansJ&gt;</a></span><span class="message">deesix: thank you I'll merge it in after I patch in support for --os in get_machine</span></div><div class="line" id="223157"><span class="nick" style="color:#6c3d55"><a href="#223157" label="[22:31:57]">&lt;deesix&gt;</a></span><span class="message">Thank you, OriansJ.</span></div><div class="line" id="224258"><span class="nick" style="color:#6d2462"><a href="#224258" label="[22:42:58]">&lt;OriansJ&gt;</a></span><span class="message">deesix: --os flag is now the new standard for get_machine and --OS is still preserved for the next 3 releases per tradition. with Warnings of use starting after next release</span></div><div class="line" id="224419"><span class="nick" style="color:#6d2462"><a href="#224419" label="[22:44:19]">&lt;OriansJ&gt;</a></span><span class="message">and your commits have been merged deesix. Thank you for your help ^_^</span></div><div class="line" id="224444"><span class="nick" style="color:#6c3d55"><a href="#224444" label="[22:44:44]">&lt;deesix&gt;</a></span><span class="message">My pleasure!</span></div><div class="line" id="224555"><span class="nick" style="color:#6c3d55"><a href="#224555" label="[22:45:55]">&lt;deesix&gt;</a></span><span class="message">OriansJ, if --OS is so new... and I guess there're no uses yet(?), do we really need the deprecation routine?</span></div><div class="line" id="224645"><span class="nick" style="color:#d9d9d9"><a href="#224645" label="[22:46:45]">*</a></span><span class="message">deesix checks if that was part of a release</span></div><div class="line" id="225051"><span class="nick" style="color:#6d2462"><a href="#225051" label="[22:50:51]">&lt;OriansJ&gt;</a></span><span class="message">deesix: --OS isn't new but --OS support overrides is new</span></div><div class="line" id="225249"><span class="nick" style="color:#6d2462"><a href="#225249" label="[22:52:49]">&lt;OriansJ&gt;</a></span><span class="message">which is a response to vagrantc's kFreeBSD-amd64 build failures but kFreeBSD-i386 success</span></div><div class="line" id="225347"><span class="nick" style="color:#6d2462"><a href="#225347" label="[22:53:47]">&lt;OriansJ&gt;</a></span><span class="message">So that uname spoofing will create a test record of said spoofing to allow faster detection of Linux emulation on *BSDs</span></div><div class="line" id="225708"><span class="nick" style="color:#6d2462"><a href="#225708" label="[22:57:08]">&lt;OriansJ&gt;</a></span><span class="message">a704d133a18c0ac68f573a6b0b55386917f54d85 to be precise when it was added so since before Release 0.7.0</span></div><div class="line" id="230006"><span class="nick" style="color:#6c3d55"><a href="#230006" label="[23:00:06]">&lt;deesix&gt;</a></span><span class="message">I was there, yes... from 0.6.x era it seems.</span></div><div class="line" id="230134"><span class="nick" style="color:#6c3d55"><a href="#230134" label="[23:01:34]">&lt;deesix&gt;</a></span><span class="message">Yes, in fact I misunderstood what's new.</span></div><div class="line" id="230410"><span class="nick" style="color:#6d2462"><a href="#230410" label="[23:04:10]">&lt;OriansJ&gt;</a></span><span class="message">deesix: easy to be mixed up and make mistakes with all these changes being done in parallel</span></div><div class="line" id="230558"><span class="nick" style="color:#6d2462"><a href="#230558" label="[23:05:58]">&lt;OriansJ&gt;</a></span><span class="message">I like to think of these changes as me starting to clean up past mistakes that I made while rushing.</span></div><div class="line" id="230656"><span class="nick" style="color:#6d2462"><a href="#230656" label="[23:06:56]">&lt;OriansJ&gt;</a></span><span class="message">a boatload of technical debt remains but I am grateful for having someone as careful as you deesix to help bring them to my attention.</span></div><div class="line" id="231929"><span class="nick" style="color:#6c3d55"><a href="#231929" label="[23:19:29]">&lt;deesix&gt;</a></span><span class="message">I'm glad to help. Please, do not hesitate to stop me if you detect unproductive nitpicking or think it's better to delay something.</span></div><div class="line" id="233411"><span class="nick" style="color:#6b8072"><a href="#233411" label="[23:34:11]">&lt;stikonas&gt;</a></span><span class="message">fossy: should tcc support flow properly?</span></div><div class="line" id="233420"><span class="nick" style="color:#6b8072"><a href="#233420" label="[23:34:20]">&lt;stikonas&gt;</a></span><span class="message">I was debugging seq and it has some crazy behaviour</span></div><div class="line" id="233543"><span class="nick" style="color:#6b8072"><a href="#233543" label="[23:35:43]">&lt;stikonas&gt;</a></span><span class="message">(in fact double, not float)</span></div><div class="line" id="233611"><span class="nick" style="color:#2e2a4a"><a href="#233611" label="[23:36:11]">&lt;pder&gt;</a></span><span class="message">stikonas: I am taking a look at seq and there is indeed something broken</span></div><div class="line" id="233626"><span class="nick" style="color:#6b8072"><a href="#233626" label="[23:36:26]">&lt;stikonas&gt;</a></span><span class="message">pder: so this left me completely puzzled</span></div><div class="line" id="233650"><span class="nick" style="color:#6b8072"><a href="#233650" label="[23:36:50]">&lt;stikonas&gt;</a></span><span class="message">(I added some extra printf debugging)</span></div><div class="line" id="233652"><span class="nick" style="color:#6b8072"><a href="#233652" label="[23:36:52]">&lt;stikonas&gt;</a></span><span class="message">  first = 1.0;</span></div><div class="line" id="233654"><span class="nick" style="color:#6b8072"><a href="#233654" label="[23:36:54]">&lt;stikonas&gt;</a></span><span class="message">  printf(&quot;First is %f\n&quot;, first);</span></div><div class="line" id="233656"><span class="nick" style="color:#6b8072"><a href="#233656" label="[23:36:56]">&lt;stikonas&gt;</a></span><span class="message">guess the output</span></div><div class="line" id="233659"><span class="nick" style="color:#2e2a4a"><a href="#233659" label="[23:36:59]">&lt;pder&gt;</a></span><span class="message">0?</span></div><div class="line" id="233708"><span class="nick" style="color:#6b8072"><a href="#233708" label="[23:37:08]">&lt;stikonas&gt;</a></span><span class="message">First is 0.3328</span></div><div class="line" id="233742"><span class="nick" style="color:#2e2a4a"><a href="#233742" label="[23:37:42]">&lt;pder&gt;</a></span><span class="message">first is a float or double?</span></div><div class="line" id="233747"><span class="nick" style="color:#6b8072"><a href="#233747" label="[23:37:47]">&lt;stikonas&gt;</a></span><span class="message">double</span></div><div class="line" id="233755"><span class="nick" style="color:#2e2a4a"><a href="#233755" label="[23:37:55]">&lt;pder&gt;</a></span><span class="message">what if first is a float?</span></div><div class="line" id="233833"><span class="nick" style="color:#6b8072"><a href="#233833" label="[23:38:33]">&lt;stikonas&gt;</a></span><span class="message">that was going to be my next test, but we started talking</span></div><div class="line" id="233835"><span class="nick" style="color:#6b8072"><a href="#233835" label="[23:38:35]">&lt;stikonas&gt;</a></span><span class="message">let me check</span></div><div class="line" id="233856"><span class="nick" style="color:#6b8072"><a href="#233856" label="[23:38:56]">&lt;stikonas&gt;</a></span><span class="message">same...</span></div><div class="line" id="234005"><span class="nick" style="color:#2e2a4a"><a href="#234005" label="[23:40:05]">&lt;pder&gt;</a></span><span class="message">if first is a double does printf(&quot;First is %lf\n&quot;, first); change anything?</span></div><div class="line" id="234107"><span class="nick" style="color:#6b8072"><a href="#234107" label="[23:41:07]">&lt;stikonas&gt;</a></span><span class="message">nope...</span></div><div class="line" id="234222"><span class="nick" style="color:#6b8072"><a href="#234222" label="[23:42:22]">&lt;stikonas&gt;</a></span><span class="message">the strange thing is that we are not even parsing something  from command line</span></div><div class="line" id="234233"><span class="nick" style="color:#6b8072"><a href="#234233" label="[23:42:33]">&lt;stikonas&gt;</a></span><span class="message">it's directly assigned in the source code</span></div><div class="line" id="234314"><span class="nick" style="color:#6b8072"><a href="#234314" label="[23:43:14]">&lt;stikonas&gt;</a></span><span class="message">otherwise I would blame string to number conversion...</span></div><div class="line" id="234738"><span class="nick" style="color:#389600"><a href="#234738" label="[23:47:38]">&lt;fossy&gt;</a></span><span class="message">janneke_: any idea?</span></div><div class="line" id="234822"><span class="nick" style="color:#6b8072"><a href="#234822" label="[23:48:22]">&lt;stikonas&gt;</a></span><span class="message">that might be tcc bug...</span></div><div class="line" id="234834"><span class="nick" style="color:#389600"><a href="#234834" label="[23:48:34]">&lt;fossy&gt;</a></span><span class="message">it might be</span></div><div class="line" id="234838"><span class="nick" style="color:#389600"><a href="#234838" label="[23:48:38]">&lt;fossy&gt;</a></span><span class="message">probably oe</span></div><div class="line" id="234841"><span class="nick" style="color:#389600"><a href="#234841" label="[23:48:41]">&lt;fossy&gt;</a></span><span class="message">is</span></div><div class="line" id="234843"><span class="nick" style="color:#389600"><a href="#234843" label="[23:48:43]">&lt;fossy&gt;</a></span><span class="message">try with mob</span></div><div class="line" id="234915"><span class="nick" style="color:#6b8072"><a href="#234915" label="[23:49:15]">&lt;stikonas&gt;</a></span><span class="message">although, in any case, yacc doesn't have doubles...</span></div><div class="line" id="234920"><span class="nick" style="color:#6b8072"><a href="#234920" label="[23:49:20]">&lt;stikonas&gt;</a></span><span class="message">it only affects seq</span></div><div class="line" id="235131"><span class="nick" style="color:#389600"><a href="#235131" label="[23:51:31]">&lt;fossy&gt;</a></span><span class="message">is this what is causing the issue</span></div><div class="line" id="235318"><span class="nick" style="color:#6b8072"><a href="#235318" label="[23:53:18]">&lt;stikonas&gt;</a></span><span class="message">no, yacc has something else...</span></div><div class="line" id="235355"><span class="nick" style="color:#6b8072"><a href="#235355" label="[23:53:55]">&lt;stikonas&gt;</a></span><span class="message">well, if we can't build yacc with mes libc, and musl is a bit problematic too, maybe we can extract some bits from musl...</span></div><div class="line" id="235408"><span class="nick" style="color:#389600"><a href="#235408" label="[23:54:08]">&lt;fossy&gt;</a></span><span class="message">yeah potentially</span></div><div class="line" id="235423"><span class="nick" style="color:#6b8072"><a href="#235423" label="[23:54:23]">&lt;stikonas&gt;</a></span><span class="message">can probably build e.g. wchars</span></div><div class="line" id="235428"><span class="nick" style="color:#6b8072"><a href="#235428" label="[23:54:28]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="235445"><span class="nick" style="color:#389600"><a href="#235445" label="[23:54:45]">&lt;fossy&gt;</a></span><span class="message">i'm not convinced wchar is the problem</span></div><div class="line" id="235452"><span class="nick" style="color:#389600"><a href="#235452" label="[23:54:52]">&lt;fossy&gt;</a></span><span class="message">but i haven't gdb'd yet</span></div><div class="line" id="235453"><span class="nick" style="color:#6b8072"><a href="#235453" label="[23:54:53]">&lt;stikonas&gt;</a></span><span class="message">probably not...</span></div><div class="line" id="235458"><span class="nick" style="color:#389600"><a href="#235458" label="[23:54:58]">&lt;fossy&gt;</a></span><span class="message">yesterday was linux kernel shenanigans</span></div><div class="line" id="235505"><span class="nick" style="color:#389600"><a href="#235505" label="[23:55:05]">&lt;fossy&gt;</a></span><span class="message">which is proveing stupid</span></div><div class="line" id="235512"><span class="nick" style="color:#6b8072"><a href="#235512" label="[23:55:12]">&lt;stikonas&gt;</a></span><span class="message">I was trying to gdb musl a bit...</span></div><div class="line" id="235521"><span class="nick" style="color:#6b8072"><a href="#235521" label="[23:55:21]">&lt;stikonas&gt;</a></span><span class="message">but not too succesfully</span></div><div class="line" id="235536"><span class="nick" style="color:#6b8072"><a href="#235536" label="[23:55:36]">&lt;stikonas&gt;</a></span><span class="message">I think that -DNO_SYSCALL_TLS was causing crashes</span></div><div class="line" id="235553"><span class="nick" style="color:#389600"><a href="#235553" label="[23:55:53]">&lt;fossy&gt;</a></span><span class="message">(oh hey, not using glibc? broken compilation for you! even though we don't use anything from the libc's headers in the end!)</span></div><div class="line" id="235557"><span class="nick" style="color:#6b8072"><a href="#235557" label="[23:55:57]">&lt;stikonas&gt;</a></span><span class="message">(and TLS I think is thread local storage)</span></div><div class="line" id="235559"><span class="nick" style="color:#389600"><a href="#235559" label="[23:55:59]">&lt;fossy&gt;</a></span><span class="message">hmmm, quite possible</span></div><div class="line" id="235602"><span class="nick" style="color:#389600"><a href="#235602" label="[23:56:02]">&lt;fossy&gt;</a></span><span class="message">yeah it is</span></div><div class="line" id="235628"><span class="nick" style="color:#389600"><a href="#235628" label="[23:56:28]">&lt;fossy&gt;</a></span><span class="message">so many things have __GNUC__ if-guards</span></div><div class="line" id="235642"><span class="nick" style="color:#389600"><a href="#235642" label="[23:56:42]">&lt;fossy&gt;</a></span><span class="message">and defining it assumes compiler things that we dont have</span></div><div class="line" id="235704"><span class="nick" style="color:#6b8072"><a href="#235704" label="[23:57:04]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><br /></div></body></html>