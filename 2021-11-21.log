<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-11-21.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="022250"><span class="nick" style="color:#8dd3c7"><a href="#022250" label="[02:22:50]">&lt;oriansj&gt;</a></span><span class="message">stikonas: ok; so its just your best guess (which is probably right)</span></div><div class="line" id="022529"><span class="nick" style="color:#2e2a4a"><a href="#022529" label="[02:25:29]">&lt;stikonas&gt;</a></span><span class="message">yaeh, I hope it's right. But it's not a blind guess cause I had to make similar adjustemts to other M1 code when porting from rv64 to rv32</span></div><div class="line" id="022617"><span class="nick" style="color:#2e2a4a"><a href="#022617" label="[02:26:17]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll probably leave it for some time and will try to finish M2 macro functions...</span></div><div class="line" id="022654"><span class="nick" style="color:#2e2a4a"><a href="#022654" label="[02:26:54]">&lt;stikonas&gt;</a></span><span class="message">I downloaded your tokenization diff but as you have said, it will need morre changes</span></div><div class="line" id="031227"><span class="nick" style="color:#8dd3c7"><a href="#031227" label="[03:12:27]">&lt;oriansj&gt;</a></span><span class="message">stikonas: yeah, the preprocessor will be the most heavily modified as previously we only assumed \n mattered but now we know C preprocessing is a whitespace sensitive grammer.</span></div><div class="line" id="031315"><span class="nick" style="color:#8dd3c7"><a href="#031315" label="[03:13:15]">&lt;oriansj&gt;</a></span><span class="message">which makes C even weirder being both whitespace sensitive and not whitespace sensitive at the same time.</span></div><div class="line" id="031344"><span class="nick" style="color:#2e2a4a"><a href="#031344" label="[03:13:44]">&lt;stikonas&gt;</a></span><span class="message">yes, although in reasonably independent sections...</span></div><div class="line" id="031354"><span class="nick" style="color:#2e2a4a"><a href="#031354" label="[03:13:54]">&lt;stikonas&gt;</a></span><span class="message">preprocessor can even be a separate program</span></div><div class="line" id="031354"><span class="nick" style="color:#8dd3c7"><a href="#031354" label="[03:13:54]">&lt;oriansj&gt;</a></span><span class="message">perhaps a hold-over from when the preprocessor was a separate program maybe?</span></div><div class="line" id="031405"><span class="nick" style="color:#2e2a4a"><a href="#031405" label="[03:14:05]">&lt;stikonas&gt;</a></span><span class="message">perhaps</span></div><div class="line" id="031521"><span class="nick" style="color:#2e2a4a"><a href="#031521" label="[03:15:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, right now that diff just makes M2-Planet loop forever, but I guess that's expected</span></div><div class="line" id="031525"><span class="nick" style="color:#8dd3c7"><a href="#031525" label="[03:15:25]">&lt;oriansj&gt;</a></span><span class="message">makes me wonder if the mesoplanet plan might have been a better idea long term</span></div><div class="line" id="031637"><span class="nick" style="color:#2e2a4a"><a href="#031637" label="[03:16:37]">&lt;stikonas&gt;</a></span><span class="message">maybe...</span></div><div class="line" id="031637"><span class="nick" style="color:#8dd3c7"><a href="#031637" label="[03:16:37]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/M2-Mesoplanet">https://github.com/oriansj/M2-Mesoplanet</a> </span></div><div class="line" id="031643"><span class="nick" style="color:#2e2a4a"><a href="#031643" label="[03:16:43]">&lt;stikonas&gt;</a></span><span class="message">depends on the goals</span></div><div class="line" id="031720"><span class="nick" style="color:#2e2a4a"><a href="#031720" label="[03:17:20]">&lt;stikonas&gt;</a></span><span class="message">oh, this is a separate preprocessor?</span></div><div class="line" id="031727"><span class="nick" style="color:#2e2a4a"><a href="#031727" label="[03:17:27]">&lt;stikonas&gt;</a></span><span class="message">before it was integrated into M2-Planet?</span></div><div class="line" id="031728"><span class="nick" style="color:#8dd3c7"><a href="#031728" label="[03:17:28]">&lt;oriansj&gt;</a></span><span class="message">well right now every change with the preprocessor could break everything in a hard to debug way</span></div><div class="line" id="031739"><span class="nick" style="color:#8dd3c7"><a href="#031739" label="[03:17:39]">&lt;oriansj&gt;</a></span><span class="message">basically</span></div><div class="line" id="031824"><span class="nick" style="color:#2e2a4a"><a href="#031824" label="[03:18:24]">&lt;stikonas&gt;</a></span><span class="message">although we almost get the same thing with -E</span></div><div class="line" id="031844"><span class="nick" style="color:#8dd3c7"><a href="#031844" label="[03:18:44]">&lt;oriansj&gt;</a></span><span class="message">it is a separate program to extract out all of the preprocessor crap</span></div><div class="line" id="031900"><span class="nick" style="color:#2e2a4a"><a href="#031900" label="[03:19:00]">&lt;stikonas&gt;</a></span><span class="message">I don't mind either way...</span></div><div class="line" id="031902"><span class="nick" style="color:#8dd3c7"><a href="#031902" label="[03:19:02]">&lt;oriansj&gt;</a></span><span class="message">and dump easy to validate M2-Planet C code to use</span></div><div class="line" id="032019"><span class="nick" style="color:#2e2a4a"><a href="#032019" label="[03:20:19]">&lt;stikonas&gt;</a></span><span class="message">well, gcc also has cpp program which does preprocessing</span></div><div class="line" id="032027"><span class="nick" style="color:#8dd3c7"><a href="#032027" label="[03:20:27]">&lt;oriansj&gt;</a></span><span class="message">On one hand it solves a few potential bug cases in M2-Planet when bootstrapping</span></div><div class="line" id="032115"><span class="nick" style="color:#8dd3c7"><a href="#032115" label="[03:21:15]">&lt;oriansj&gt;</a></span><span class="message">as cc_macro is the place most likely to introduce sensitive bugs and cc_* tends to be kinda type deaf</span></div><div class="line" id="032141"><span class="nick" style="color:#2e2a4a"><a href="#032141" label="[03:21:41]">&lt;stikonas&gt;</a></span><span class="message">although, how much more macro changes do we expect after this?</span></div><div class="line" id="032204"><span class="nick" style="color:#8dd3c7"><a href="#032204" label="[03:22:04]">&lt;oriansj&gt;</a></span><span class="message">and I'm more than happy to grant push access to Mesoplanet to you if you want to use it</span></div><div class="line" id="032226"><span class="nick" style="color:#8dd3c7"><a href="#032226" label="[03:22:26]">&lt;oriansj&gt;</a></span><span class="message">good question</span></div><div class="line" id="032317"><span class="nick" style="color:#8dd3c7"><a href="#032317" label="[03:23:17]">&lt;oriansj&gt;</a></span><span class="message">as it could grow to be a full independent C preprocessor</span></div><div class="line" id="032357"><span class="nick" style="color:#2e2a4a"><a href="#032357" label="[03:23:57]">&lt;stikonas&gt;</a></span><span class="message">one advantage of keeping it separately</span></div><div class="line" id="032401"><span class="nick" style="color:#8dd3c7"><a href="#032401" label="[03:24:01]">&lt;oriansj&gt;</a></span><span class="message">which would save me trouble on the M3 work too</span></div><div class="line" id="032404"><span class="nick" style="color:#2e2a4a"><a href="#032404" label="[03:24:04]">&lt;stikonas&gt;</a></span><span class="message">is that we can use more advanced C stuff</span></div><div class="line" id="032411"><span class="nick" style="color:#2e2a4a"><a href="#032411" label="[03:24:11]">&lt;stikonas&gt;</a></span><span class="message">not limitted by cc_* compatibility</span></div><div class="line" id="032422"><span class="nick" style="color:#2e2a4a"><a href="#032422" label="[03:24:22]">&lt;stikonas&gt;</a></span><span class="message">but I don't know how much that gains us</span></div><div class="line" id="032439"><span class="nick" style="color:#8dd3c7"><a href="#032439" label="[03:24:39]">&lt;oriansj&gt;</a></span><span class="message">more typedef support and can quickly leverage new M2-Planet functionality as we add it</span></div><div class="line" id="032515"><span class="nick" style="color:#2e2a4a"><a href="#032515" label="[03:25:15]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's an idea definitely worth considering</span></div><div class="line" id="032516"><span class="nick" style="color:#8dd3c7"><a href="#032516" label="[03:25:16]">&lt;oriansj&gt;</a></span><span class="message">yeah, it is a tough call</span></div><div class="line" id="032628"><span class="nick" style="color:#2e2a4a"><a href="#032628" label="[03:26:28]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll be back tomorrow...</span></div><div class="line" id="032758"><span class="nick" style="color:#8dd3c7"><a href="#032758" label="[03:27:58]">&lt;oriansj&gt;</a></span><span class="message">well right now macro support in M2-Planet is 17% of the entire codebase</span></div><div class="line" id="032836"><span class="nick" style="color:#6b8072"><a href="#032836" label="[03:28:36]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, might simplify things a bit...</span></div><div class="line" id="032909"><span class="nick" style="color:#6b8072"><a href="#032909" label="[03:29:09]">&lt;stikonas[m]&gt;</a></span><span class="message">17% is not that little</span></div><div class="line" id="033032"><span class="nick" style="color:#8dd3c7"><a href="#033032" label="[03:30:32]">&lt;oriansj&gt;</a></span><span class="message">and that isn't even counting the extra lines in cc_reader that is needed to support storing the extra context data and cleaning it up after preprocessing</span></div><div class="line" id="033051"><span class="nick" style="color:#8dd3c7"><a href="#033051" label="[03:30:51]">&lt;oriansj&gt;</a></span><span class="message">to toss an extra 2-3% on top</span></div><div class="line" id="033220"><span class="nick" style="color:#8dd3c7"><a href="#033220" label="[03:32:20]">&lt;oriansj&gt;</a></span><span class="message">which will definitely make a meaning performance improvement when bootstrapping as the first build of M2-Planet is with M0 and can be a bit slow</span></div><div class="line" id="033316"><span class="nick" style="color:#8dd3c7"><a href="#033316" label="[03:33:16]">&lt;oriansj&gt;</a></span><span class="message">And that is the slowest piece in the entire chain</span></div><div class="line" id="034939"><span class="nick" style="color:#80b1d3"><a href="#034939" label="[03:49:39]">&lt;fossy&gt;</a></span><span class="message">i don't think performance optimizations in stage0-posix (except for maybe some other archs) have much use at this point</span></div><div class="line" id="034959"><span class="nick" style="color:#80b1d3"><a href="#034959" label="[03:49:59]">&lt;fossy&gt;</a></span><span class="message">on i386/x86_64 at least the whole stage0-posix runs in like &lt;1 minute</span></div><div class="line" id="035015"><span class="nick" style="color:#80b1d3"><a href="#035015" label="[03:50:15]">&lt;fossy&gt;</a></span><span class="message">iirc on my pentium m machine it ran in &lt;2 mins</span></div><div class="line" id="042414"><span class="nick" style="color:#8dd3c7"><a href="#042414" label="[04:24:14]">&lt;oriansj&gt;</a></span><span class="message">fossy: fair</span></div><div class="line" id="042849"><span class="nick" style="color:#8dd3c7"><a href="#042849" label="[04:28:49]">&lt;oriansj&gt;</a></span><span class="message">and honestly the only real advantage of a separate C preprocessor is #include support could be included (with a flag to disable it) while preserving the ability to work on bare-metal</span></div><div class="line" id="042953"><span class="nick" style="color:#8dd3c7"><a href="#042953" label="[04:29:53]">&lt;oriansj&gt;</a></span><span class="message">(say --error-non-leading-include)</span></div><div class="line" id="043108"><span class="nick" style="color:#8dd3c7"><a href="#043108" label="[04:31:08]">&lt;oriansj&gt;</a></span><span class="message">which would simplify M2-Planet's long file list to just the C output of M2-Mesoplanet</span></div><div class="line" id="043146"><span class="nick" style="color:#8dd3c7"><a href="#043146" label="[04:31:46]">&lt;oriansj&gt;</a></span><span class="message">and M2-Mesoplanet wouldn't need to have all files explicitly specified like M2-Planet does after we add #include support</span></div><div class="line" id="043400"><span class="nick" style="color:#8dd3c7"><a href="#043400" label="[04:34:00]">&lt;oriansj&gt;</a></span><span class="message">also yt already has push access to the repo and I am more than happy to give push access to stikonas (and you too fossy if you wanted)</span></div><div class="line" id="043742"><span class="nick" style="color:#8dd3c7"><a href="#043742" label="[04:37:42]">&lt;oriansj&gt;</a></span><span class="message">which when combined with the #ifdef and #undef can be used to support C's circular #includes which is entirely impossible with M2-Planet's -f file method</span></div><div class="line" id="050027"><span class="nick" style="color:#8dd3c7"><a href="#050027" label="[05:00:27]">&lt;oriansj&gt;</a></span><span class="message">to be honest the flag need only turn off #include support and if the output of a file with manual -f selection doesn't match what #include does, we can know it would only be an issue on bare metal bootstrapping.</span></div><div class="line" id="171447"><span class="nick" style="color:#8dd3c7"><a href="#171447" label="[17:14:47]">&lt;oriansj&gt;</a></span><span class="message">thoughts and suggestions?</span></div><div class="line" id="171500"><span class="nick" style="color:#8dd3c7"><a href="#171500" label="[17:15:00]">&lt;oriansj&gt;</a></span><span class="message">and bad ideas too</span></div><div class="line" id="174517"><span class="nick" style="color:#6b8072"><a href="#174517" label="[17:45:17]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, #include support would be nice. But yes maybe performance itself doesn't matter too much...</span></div><div class="line" id="174619"><span class="nick" style="color:#6b8072"><a href="#174619" label="[17:46:19]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, another slightly orthogonal idea, is it worth having some command line flag in M2 to automatically launch other tools?</span></div><div class="line" id="174645"><span class="nick" style="color:#6b8072"><a href="#174645" label="[17:46:45]">&lt;stikonas[m]&gt;</a></span><span class="message">blood elf, M1, hex2?</span></div><div class="line" id="174653"><span class="nick" style="color:#6d2462"><a href="#174653" label="[17:46:53]">&lt;muurkha&gt;</a></span><span class="message">--slingshot</span></div><div class="line" id="174809"><span class="nick" style="color:#8dd3c7"><a href="#174809" label="[17:48:09]">&lt;oriansj&gt;</a></span><span class="message">stikonas: better idea</span></div><div class="line" id="174837"><span class="nick" style="color:#8dd3c7"><a href="#174837" label="[17:48:37]">&lt;oriansj&gt;</a></span><span class="message">M2-Mesoplanet spawns M2-Planet, blood-elf, M1 and hex2 unless given a flag to disable that</span></div><div class="line" id="174921"><span class="nick" style="color:#8dd3c7"><a href="#174921" label="[17:49:21]">&lt;oriansj&gt;</a></span><span class="message">say -E to just preprocess only</span></div><div class="line" id="175107"><span class="nick" style="color:#8dd3c7"><a href="#175107" label="[17:51:07]">&lt;oriansj&gt;</a></span><span class="message">So using M2-Mesoplanet will be much more like traditional C compilers and M2-Planet and the rest just work quietly behind the scene and the user need not see them</span></div><div class="line" id="175231"><span class="nick" style="color:#8dd3c7"><a href="#175231" label="[17:52:31]">&lt;oriansj&gt;</a></span><span class="message">That way the user experience can be improved on POSIX but the bare metal build process can still be preserved.</span></div><div class="line" id="175406"><span class="nick" style="color:#6b8072"><a href="#175406" label="[17:54:06]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, that might be better</span></div><div class="line" id="175422"><span class="nick" style="color:#6b8072"><a href="#175422" label="[17:54:22]">&lt;stikonas[m]&gt;</a></span><span class="message">M2 planet is then more like cc1</span></div><div class="line" id="175528"><span class="nick" style="color:#8dd3c7"><a href="#175528" label="[17:55:28]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="175615"><span class="nick" style="color:#8dd3c7"><a href="#175615" label="[17:56:15]">&lt;oriansj&gt;</a></span><span class="message">and M2-Mesoplanet can leverage enviromental variables to know where to look for the library files</span></div><div class="line" id="180016"><span class="nick" style="color:#8dd3c7"><a href="#180016" label="[18:00:16]">&lt;oriansj&gt;</a></span><span class="message">something M2-Planet can not expect when bootstrapping</span></div><div class="line" id="180021"><span class="nick" style="color:#6b8072"><a href="#180021" label="[18:00:21]">&lt;stikonas[m]&gt;</a></span><span class="message">Hmm, but we then first need to move out M2-Planets improvements to mesoplanet</span></div><div class="line" id="180044"><span class="nick" style="color:#8dd3c7"><a href="#180044" label="[18:00:44]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="180055"><span class="nick" style="color:#6b8072"><a href="#180055" label="[18:00:55]">&lt;stikonas[m]&gt;</a></span><span class="message">The ones we added recently, e.g. ifdef</span></div><div class="line" id="180101"><span class="nick" style="color:#8dd3c7"><a href="#180101" label="[18:01:01]">&lt;oriansj&gt;</a></span><span class="message">but it should be a pretty close to 1:1 for all files except cc.c</span></div><div class="line" id="180122"><span class="nick" style="color:#8dd3c7"><a href="#180122" label="[18:01:22]">&lt;oriansj&gt;</a></span><span class="message">but that is pretty short and simple</span></div><div class="line" id="180505"><span class="nick" style="color:#6b8072"><a href="#180505" label="[18:05:05]">&lt;stikonas[m]&gt;</a></span><span class="message">Well, I can try to look at that...</span></div><div class="line" id="180751"><span class="nick" style="color:#8dd3c7"><a href="#180751" label="[18:07:51]">&lt;oriansj&gt;</a></span><span class="message">and I've sent you an access grant</span></div><div class="line" id="181640"><span class="nick" style="color:#2e2a4a"><a href="#181640" label="[18:16:40]">&lt;stikonas&gt;</a></span><span class="message">ok, accepted</span></div><div class="line" id="183726"><span class="nick" style="color:#2e2a4a"><a href="#183726" label="[18:37:26]">&lt;stikonas&gt;</a></span><span class="message">oriansj: so Mesoplanet is then not cc_* compatible?</span></div><div class="line" id="183741"><span class="nick" style="color:#2e2a4a"><a href="#183741" label="[18:37:41]">&lt;stikonas&gt;</a></span><span class="message">i.e. we don't need to keep stuff like // CONSTANT?</span></div><div class="line" id="183800"><span class="nick" style="color:#2e2a4a"><a href="#183800" label="[18:38:00]">&lt;stikonas&gt;</a></span><span class="message">or are we going to remove all preprocessor stuff from M2-Planet?</span></div><div class="line" id="183828"><span class="nick" style="color:#2e2a4a"><a href="#183828" label="[18:38:28]">&lt;stikonas&gt;</a></span><span class="message">in which case I guess we can still use stuff like += but not #define CONST const</span></div><div class="line" id="184429"><span class="nick" style="color:#8dd3c7"><a href="#184429" label="[18:44:29]">&lt;oriansj&gt;</a></span><span class="message">stikonas: nope only needs to be M2-Planet compatible</span></div><div class="line" id="184603"><span class="nick" style="color:#8dd3c7"><a href="#184603" label="[18:46:03]">&lt;oriansj&gt;</a></span><span class="message">we can strip down M2-Planet's C preprocessor functionality to what subset we like</span></div><div class="line" id="184630"><span class="nick" style="color:#2e2a4a"><a href="#184630" label="[18:46:30]">&lt;stikonas&gt;</a></span><span class="message">because we'll have to build Mesoplanet with M2-Planet...</span></div><div class="line" id="184640"><span class="nick" style="color:#8dd3c7"><a href="#184640" label="[18:46:40]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="184758"><span class="nick" style="color:#2e2a4a"><a href="#184758" label="[18:47:58]">&lt;stikonas&gt;</a></span><span class="message">it looks like it's mostly stuff like #define TRUE 1, and arch-defs like #define X86 2</span></div><div class="line" id="184814"><span class="nick" style="color:#2e2a4a"><a href="#184814" label="[18:48:14]">&lt;stikonas&gt;</a></span><span class="message">in principle they don't even have to be defines</span></div><div class="line" id="184825"><span class="nick" style="color:#2e2a4a"><a href="#184825" label="[18:48:25]">&lt;stikonas&gt;</a></span><span class="message">can just create some globals</span></div><div class="line" id="184827"><span class="nick" style="color:#8dd3c7"><a href="#184827" label="[18:48:27]">&lt;oriansj&gt;</a></span><span class="message">yep which are trivial to convert to CONSTANT</span></div><div class="line" id="184842"><span class="nick" style="color:#2e2a4a"><a href="#184842" label="[18:48:42]">&lt;stikonas&gt;</a></span><span class="message">or CONSTANT...</span></div><div class="line" id="185241"><span class="nick" style="color:#2e2a4a"><a href="#185241" label="[18:52:41]">&lt;stikonas&gt;</a></span><span class="message">oh, Mesoplanet still uses functions rather than M2libc...</span></div><div class="line" id="185350"><span class="nick" style="color:#8dd3c7"><a href="#185350" label="[18:53:50]">&lt;oriansj&gt;</a></span><span class="message">that is how long ago it was started</span></div><div class="line" id="185410"><span class="nick" style="color:#8dd3c7"><a href="#185410" label="[18:54:10]">&lt;oriansj&gt;</a></span><span class="message">trivial to add a M2libc git submodule</span></div><div class="line" id="185518"><span class="nick" style="color:#2e2a4a"><a href="#185518" label="[18:55:18]">&lt;stikonas&gt;</a></span><span class="message">yes, I'm trying to add it locally...</span></div><div class="line" id="220951"><span class="nick" style="color:#2e2a4a"><a href="#220951" label="[22:09:51]">&lt;stikonas&gt;</a></span><span class="message">oriansj: didn't have much time to look at thing yet, but added M2libc</span></div><div class="line" id="221050"><span class="nick" style="color:#2e2a4a"><a href="#221050" label="[22:10:50]">&lt;stikonas&gt;</a></span><span class="message">and since I took cc_macro.c from M2-Planet, it should now incorporate latest status that we have in M2-Planet</span></div><div class="line" id="221154"><span class="nick" style="color:#2e2a4a"><a href="#221154" label="[22:11:54]">&lt;stikonas&gt;</a></span><span class="message">(cc.c might still need some updating since that one can't be fully replaced)</span></div><div class="line" id="225358"><span class="nick" style="color:#8dd3c7"><a href="#225358" label="[22:53:58]">&lt;oriansj&gt;</a></span><span class="message">I'll look into it and add a few more basic tests to get things started in the right direction</span></div><div class="line" id="232323"><span class="nick" style="color:#8dd3c7"><a href="#232323" label="[23:23:23]">&lt;oriansj&gt;</a></span><span class="message">also did we want to detect the architecture for native builds by default with M2-Mesoplanet?</span></div><div class="line" id="232857"><span class="nick" style="color:#2e2a4a"><a href="#232857" label="[23:28:57]">&lt;stikonas&gt;</a></span><span class="message">oriansj: yes, I was thinking about that</span></div><div class="line" id="232912"><span class="nick" style="color:#2e2a4a"><a href="#232912" label="[23:29:12]">&lt;stikonas&gt;</a></span><span class="message">but I think we shouldn't rely on #ifdefs...</span></div><div class="line" id="232927"><span class="nick" style="color:#2e2a4a"><a href="#232927" label="[23:29:27]">&lt;stikonas&gt;</a></span><span class="message">unless we can make them optional...</span></div><div class="line" id="232949"><span class="nick" style="color:#2e2a4a"><a href="#232949" label="[23:29:49]">&lt;stikonas&gt;</a></span><span class="message">actually, making them optional might work</span></div><div class="line" id="233025"><span class="nick" style="color:#8dd3c7"><a href="#233025" label="[23:30:25]">&lt;oriansj&gt;</a></span><span class="message">well for bare-metal I can do a cc-minimal.c which hard codes the setting and skips the loading of enviromental variables</span></div><div class="line" id="233038"><span class="nick" style="color:#2e2a4a"><a href="#233038" label="[23:30:38]">&lt;stikonas&gt;</a></span><span class="message">if we remove preprocessor support from M2-planet then first build of mesoplanet might not be able to do that</span></div><div class="line" id="233051"><span class="nick" style="color:#2e2a4a"><a href="#233051" label="[23:30:51]">&lt;stikonas&gt;</a></span><span class="message">yes, I think we can do something similar...</span></div><div class="line" id="233105"><span class="nick" style="color:#2e2a4a"><a href="#233105" label="[23:31:05]">&lt;stikonas&gt;</a></span><span class="message">it might be in some other file, doesn't have to be cc-minimal</span></div><div class="line" id="233110"><span class="nick" style="color:#8dd3c7"><a href="#233110" label="[23:31:10]">&lt;oriansj&gt;</a></span><span class="message">stikonas: looking up the native architecture is something we can copy from get_machine</span></div><div class="line" id="233113"><span class="nick" style="color:#2e2a4a"><a href="#233113" label="[23:31:13]">&lt;stikonas&gt;</a></span><span class="message">i.e. cc-arch-minimal and cc-arch</span></div><div class="line" id="233121"><span class="nick" style="color:#2e2a4a"><a href="#233121" label="[23:31:21]">&lt;stikonas&gt;</a></span><span class="message">or yes, we can use get_machine</span></div><div class="line" id="233137"><span class="nick" style="color:#8dd3c7"><a href="#233137" label="[23:31:37]">&lt;oriansj&gt;</a></span><span class="message">cc-minimal.c is just an example with a single hard-coded arch</span></div><div class="line" id="233144"><span class="nick" style="color:#2e2a4a"><a href="#233144" label="[23:31:44]">&lt;stikonas&gt;</a></span><span class="message">I thought about that too but has't thought trough, i.e. which option is better</span></div><div class="line" id="233153"><span class="nick" style="color:#8dd3c7"><a href="#233153" label="[23:31:53]">&lt;oriansj&gt;</a></span><span class="message">so that anyone can convert it when they do their bare-metal bootstrapping</span></div><div class="line" id="233211"><span class="nick" style="color:#8dd3c7"><a href="#233211" label="[23:32:11]">&lt;oriansj&gt;</a></span><span class="message">right now the only arch it needs to specify is knight-native</span></div><div class="line" id="233221"><span class="nick" style="color:#2e2a4a"><a href="#233221" label="[23:32:21]">&lt;stikonas&gt;</a></span><span class="message">actually, it doesn't even have to be a separate file</span></div><div class="line" id="233232"><span class="nick" style="color:#2e2a4a"><a href="#233232" label="[23:32:32]">&lt;stikonas&gt;</a></span><span class="message">I think M2-Planet will just ignore all the previous lines...</span></div><div class="line" id="233237"><span class="nick" style="color:#2e2a4a"><a href="#233237" label="[23:32:37]">&lt;stikonas&gt;</a></span><span class="message">even if we don't have preprocessor</span></div><div class="line" id="233246"><span class="nick" style="color:#2e2a4a"><a href="#233246" label="[23:32:46]">&lt;stikonas&gt;</a></span><span class="message">that's what mes-m2 relied upon</span></div><div class="line" id="233413"><span class="nick" style="color:#8dd3c7"><a href="#233413" label="[23:34:13]">&lt;oriansj&gt;</a></span><span class="message">well yeah #anything was just a line comment for M2-Planet previously</span></div><div class="line" id="233426"><span class="nick" style="color:#8dd3c7"><a href="#233426" label="[23:34:26]">&lt;oriansj&gt;</a></span><span class="message">and it was preserved in --bootstrap-mode</span></div><div class="line" id="233435"><span class="nick" style="color:#2e2a4a"><a href="#233435" label="[23:34:35]">&lt;stikonas&gt;</a></span><span class="message">i.e. #ifdef __i386__ \n arch=x86 #elif arch = default #endif would just work</span></div><div class="line" id="233447"><span class="nick" style="color:#2e2a4a"><a href="#233447" label="[23:34:47]">&lt;stikonas&gt;</a></span><span class="message">even if we don't have preprocessor</span></div><div class="line" id="233528"><span class="nick" style="color:#2e2a4a"><a href="#233528" label="[23:35:28]">&lt;stikonas&gt;</a></span><span class="message">or maybe we'll just keep what we already have in M2-Planet</span></div><div class="line" id="233548"><span class="nick" style="color:#2e2a4a"><a href="#233548" label="[23:35:48]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="233619"><span class="nick" style="color:#8dd3c7"><a href="#233619" label="[23:36:19]">&lt;oriansj&gt;</a></span><span class="message">well right now the only architecture specific behavior changes would be defining an architecture variable and a slightly different path when spawning</span></div><div class="line" id="233644"><span class="nick" style="color:#8dd3c7"><a href="#233644" label="[23:36:44]">&lt;oriansj&gt;</a></span><span class="message">let me throw something together</span></div><div class="line" id="234038"><span class="nick" style="color:#2e2a4a"><a href="#234038" label="[23:40:38]">&lt;stikonas&gt;</a></span><span class="message">yes, I think these are the only things</span></div><div class="line" id="234113"><span class="nick" style="color:#2e2a4a"><a href="#234113" label="[23:41:13]">&lt;stikonas&gt;</a></span><span class="message">so stuff like _i386 and spawning M1 --architecture $ARCH...</span></div><div class="line" id="234130"><span class="nick" style="color:#2e2a4a"><a href="#234130" label="[23:41:30]">&lt;stikonas&gt;</a></span><span class="message">we don't have spawning yet though</span></div><div class="line" id="234150"><span class="nick" style="color:#2e2a4a"><a href="#234150" label="[23:41:50]">&lt;stikonas&gt;</a></span><span class="message">oriansj: maybe we can have M2-Mesoplanet -E NOT spawn and spawn without -E?</span></div><div class="line" id="234203"><span class="nick" style="color:#8dd3c7"><a href="#234203" label="[23:42:03]">&lt;oriansj&gt;</a></span><span class="message">stikonas: yeah that is the idea</span></div><div class="line" id="234446"><span class="nick" style="color:#2e2a4a"><a href="#234446" label="[23:44:46]">&lt;stikonas&gt;</a></span><span class="message">and in stage0-posix we might need to build hex2 and M1 first</span></div><div class="line" id="234612"><span class="nick" style="color:#2e2a4a"><a href="#234612" label="[23:46:12]">&lt;stikonas&gt;</a></span><span class="message">hmm, some slight issue in stage0-posix</span></div><div class="line" id="234624"><span class="nick" style="color:#8dd3c7"><a href="#234624" label="[23:46:24]">&lt;oriansj&gt;</a></span><span class="message">nope</span></div><div class="line" id="234640"><span class="nick" style="color:#2e2a4a"><a href="#234640" label="[23:46:40]">&lt;stikonas&gt;</a></span><span class="message">--bootstrap mode needs some simplified M2libc</span></div><div class="line" id="234640"><span class="nick" style="color:#8dd3c7"><a href="#234640" label="[23:46:40]">&lt;oriansj&gt;</a></span><span class="message">hex2 and M1 will be fine</span></div><div class="line" id="234645"><span class="nick" style="color:#2e2a4a"><a href="#234645" label="[23:46:45]">&lt;stikonas&gt;</a></span><span class="message">(bootstrap.c)</span></div><div class="line" id="234654"><span class="nick" style="color:#2e2a4a"><a href="#234654" label="[23:46:54]">&lt;stikonas&gt;</a></span><span class="message">rather than full M2libc</span></div><div class="line" id="234658"><span class="nick" style="color:#2e2a4a"><a href="#234658" label="[23:46:58]">&lt;stikonas&gt;</a></span><span class="message">but that's probably fine</span></div><div class="line" id="234710"><span class="nick" style="color:#2e2a4a"><a href="#234710" label="[23:47:10]">&lt;stikonas&gt;</a></span><span class="message">we can just build M2-Mesoplanet after hex2 and M1</span></div><div class="line" id="234711"><span class="nick" style="color:#8dd3c7"><a href="#234711" label="[23:47:11]">&lt;oriansj&gt;</a></span><span class="message">we will hit problems eventually</span></div><div class="line" id="234715"><span class="nick" style="color:#8dd3c7"><a href="#234715" label="[23:47:15]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="234853"><span class="nick" style="color:#2e2a4a"><a href="#234853" label="[23:48:53]">&lt;stikonas&gt;</a></span><span class="message">anyway, all of that should be solvable</span></div><div class="line" id="234900"><span class="nick" style="color:#8dd3c7"><a href="#234900" label="[23:49:00]">&lt;oriansj&gt;</a></span><span class="message">and now M2-Mesoplanet detects local architecture and sets accordingly so we don't need to do --architecture anymore</span></div><div class="line" id="234919"><span class="nick" style="color:#8dd3c7"><a href="#234919" label="[23:49:19]">&lt;oriansj&gt;</a></span><span class="message">we can just use an enviromental variable later if we wish to support overrides</span></div><div class="line" id="235250"><span class="nick" style="color:#8dd3c7"><a href="#235250" label="[23:52:50]">&lt;oriansj&gt;</a></span><span class="message">and we probably want to create a temp file proper for spawning</span></div><div class="line" id="235514"><span class="nick" style="color:#8dd3c7"><a href="#235514" label="[23:55:14]">&lt;oriansj&gt;</a></span><span class="message">done and up</span></div><div class="line" id="235524"><span class="nick" style="color:#8dd3c7"><a href="#235524" label="[23:55:24]">&lt;oriansj&gt;</a></span><span class="message">for -E support</span></div><div class="line" id="235908"><span class="nick" style="color:#8dd3c7"><a href="#235908" label="[23:59:08]">&lt;oriansj&gt;</a></span><span class="message">and we should probably be able to pass the M2libc path via an enviroment variable too and just assume ./M2libc otherwise</span></div><div class="line" id="235942"><span class="nick" style="color:#8dd3c7"><a href="#235942" label="[23:59:42]">&lt;oriansj&gt;</a></span><span class="message">say export M2LIBC_PATH=../foo/bar sort of thing</span></div><br /></div></body></html>