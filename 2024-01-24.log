<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-01-24.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000503"><span class="nick" style="color:#389600"><a href="#000503" label="[00:05:03]">&lt;oriansj&gt;</a></span><span class="message">nimaje: the value of libcs tend to be less about the functions included and more about the programs which can successfully be built with it.</span></div><div class="line" id="000532"><span class="nick" style="color:#8dd3c7"><a href="#000532" label="[00:05:32]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; rickmasters I was more meaning in the later stages of live-boostrap it shipping with coreutils/curl. Curl alone has more dependencies than than busybox as you need perl/openssl or gnutls/nettle/gmp. I'll have to take a closer look at the build order though as I am probably missing something obvious.</span></div><div class="line" id="000805"><span class="nick" style="color:#8dd3c7"><a href="#000805" label="[00:08:05]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Anywho, I was able to cross-compile up to a full native x86_64 toolchain from live-bootstrap: <a rel="nofollow" href="https://git.distrust.co/public/packages/src/branch/main/src/bootstrap/stage3/Dockerfile">https://git.distrust.co/public/packages/src/branch/main/src/bootstrap/stage3/Dockerfile</a> </span></div><div class="line" id="001333"><span class="nick" style="color:#8dd3c7"><a href="#001333" label="[00:13:33]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; well, I think we looked at busybox before bash</span></div><div class="line" id="001350"><span class="nick" style="color:#8dd3c7"><a href="#001350" label="[00:13:50]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; and it looked infeasible because of libc requirements/build system</span></div><div class="line" id="001412"><span class="nick" style="color:#8dd3c7"><a href="#001412" label="[00:14:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; and after that standard stuff was just building...</span></div><div class="line" id="001533"><span class="nick" style="color:#8dd3c7"><a href="#001533" label="[00:15:33]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; there is <a rel="nofollow" href="https://wiki.musl-libc.org/building-busybox.html">https://wiki.musl-libc.org/building-busybox.html</a>  though...</span></div><div class="line" id="001802"><span class="nick" style="color:#8dd3c7"><a href="#001802" label="[00:18:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Yeah I mean I built busybox straight away from live-bootstrap with no problem as I didn't want to have to carry and rebuild bash/curl/gmp/gnutls or perl/openssl for just a bootstrap container. For busybox I just needed musl, binutils, and make.</span></div><div class="line" id="001914"><span class="nick" style="color:#8dd3c7"><a href="#001914" label="[00:19:14]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; and the existing shell you already had, of course. So yeah I imagine the issue is needed a traditional shell early, and bash was easier to reach for than busybox when pivoting from kaem or something.</span></div><div class="line" id="001926"><span class="nick" style="color:#8dd3c7"><a href="#001926" label="[00:19:26]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; That pivot point still seems like magic to me. I need to go dig in there more</span></div><div class="line" id="001937"><span class="nick" style="color:#8dd3c7"><a href="#001937" label="[00:19:37]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; but been focused on getting my higher-level stack bootstrapped atm</span></div><div class="line" id="002305"><span class="nick" style="color:#2e2a4a"><a href="#002305" label="[00:23:05]">&lt;rickmasters&gt;</a></span><span class="message">Googulator: That change was put in to support was put in by pder to support Virtual Box <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/commit/c61b4afd8ad7a83ded3c236e60ed96ce656e79a1">https://github.com/fosslinux/live-bootstrap/commit/c61b4afd8ad7a83ded3c236e60ed96ce656e79a1</a> </span></div><div class="line" id="003046"><span class="nick" style="color:#2e2a4a"><a href="#003046" label="[00:30:46]">&lt;rickmasters&gt;</a></span><span class="message">*sorry for cut and paste. Virtual Box doesn't handle serial by default if I remember correctly.</span></div><div class="line" id="004749"><span class="nick" style="color:#6b8072"><a href="#004749" label="[00:47:49]">&lt;Googulator&gt;</a></span><span class="message">It also makes perfect sense on bare metal to not use serial</span></div><div class="line" id="004800"><span class="nick" style="color:#6b8072"><a href="#004800" label="[00:48:00]">&lt;Googulator&gt;</a></span><span class="message">but we need to use tty1, not tty0</span></div><div class="line" id="004813"><span class="nick" style="color:#6b8072"><a href="#004813" label="[00:48:13]">&lt;Googulator&gt;</a></span><span class="message">otherwise the build output will clobber tty2 and beyond</span></div><div class="line" id="005043"><span class="nick" style="color:#2e2a4a"><a href="#005043" label="[00:50:43]">&lt;rickmasters&gt;</a></span><span class="message">ok</span></div><div class="line" id="010257"><span class="nick" style="color:#8dd3c7"><a href="#010257" label="[01:02:57]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; Lance R. Vick: shell pivot's are easy</span></div><div class="line" id="010306"><span class="nick" style="color:#8dd3c7"><a href="#010306" label="[01:03:06]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; you just call another process and that's it</span></div><div class="line" id="010314"><span class="nick" style="color:#8dd3c7"><a href="#010314" label="[01:03:14]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; the real magic is in kernel bootsrapping ðŸ™‚</span></div><div class="line" id="010323"><span class="nick" style="color:#8dd3c7"><a href="#010323" label="[01:03:23]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; those pivot's are far trickier</span></div><div class="line" id="010335"><span class="nick" style="color:#8dd3c7"><a href="#010335" label="[01:03:35]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; s/pivot's/pivots/</span></div><div class="line" id="010425"><span class="nick" style="color:#80b1d3"><a href="#010425" label="[01:04:25]">&lt;lrvick&gt;</a></span><span class="message">I meant more, you have to compile up to bash/binutils/gcc etc from kaem.</span></div><div class="line" id="010445"><span class="nick" style="color:#80b1d3"><a href="#010445" label="[01:04:45]">&lt;lrvick&gt;</a></span><span class="message">but yeah the low level kernel stuff seems another level of bonkers</span></div><div class="line" id="010501"><span class="nick" style="color:#80b1d3"><a href="#010501" label="[01:05:01]">&lt;lrvick&gt;</a></span><span class="message">I am just happy of whatever hashes you publish from all that match mine in container land</span></div><div class="line" id="010638"><span class="nick" style="color:#6d2462"><a href="#010638" label="[01:06:38]">&lt;stikonas&gt;</a></span><span class="message">so it's actually not that scary</span></div><div class="line" id="010656"><span class="nick" style="color:#6d2462"><a href="#010656" label="[01:06:56]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix already has kaem stuff scripted and it's not that complicated anyway</span></div><div class="line" id="010727"><span class="nick" style="color:#6d2462"><a href="#010727" label="[01:07:27]">&lt;stikonas&gt;</a></span><span class="message">then goes mescc (for which we had to handwrite kaem build script, it's a bit longish but is basically just a list of files to compile)</span></div><div class="line" id="010809"><span class="nick" style="color:#6d2462"><a href="#010809" label="[01:08:09]">&lt;stikonas&gt;</a></span><span class="message">after that goes tcc, which has a nice option -DONE_SOURCE=1 which basically means that you can just compile tcc.c</span></div><div class="line" id="010835"><span class="nick" style="color:#6d2462"><a href="#010835" label="[01:08:35]">&lt;stikonas&gt;</a></span><span class="message">(of course in real life it's a bit more complicated than that, you also need to rebuild mes libc but it's not too bad)</span></div><div class="line" id="010913"><span class="nick" style="color:#6d2462"><a href="#010913" label="[01:09:13]">&lt;stikonas&gt;</a></span><span class="message">if we don't do kernel bootstrap, then after tcc we have a short kaem script to build make</span></div><div class="line" id="010950"><span class="nick" style="color:#6d2462"><a href="#010950" label="[01:09:50]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/make-3.82/pass1.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/steps/make-3.82/pass1.kaem</a> </span></div><div class="line" id="010955"><span class="nick" style="color:#6d2462"><a href="#010955" label="[01:09:55]">&lt;stikonas&gt;</a></span><span class="message">again, nothing too bad</span></div><div class="line" id="011101"><span class="nick" style="color:#6d2462"><a href="#011101" label="[01:11:01]">&lt;stikonas&gt;</a></span><span class="message">and after that we basically write makefile rules</span></div><div class="line" id="011106"><span class="nick" style="color:#6d2462"><a href="#011106" label="[01:11:06]">&lt;stikonas&gt;</a></span><span class="message">so much simpler than kaem files</span></div><div class="line" id="011206"><span class="nick" style="color:#6d2462"><a href="#011206" label="[01:12:06]">&lt;stikonas&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/gzip-1.2.4/mk/main.mk">https://github.com/fosslinux/live-bootstrap/blob/master/steps/gzip-1.2.4/mk/main.mk</a> </span></div><div class="line" id="011324"><span class="nick" style="color:#8dd3c7"><a href="#011324" label="[01:13:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Yeah, each individual bit does seem pretty simple</span></div><div class="line" id="011341"><span class="nick" style="color:#8dd3c7"><a href="#011341" label="[01:13:41]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; making the whole puzzle work, not so much, but fair enough. Thanks</span></div><div class="line" id="011400"><span class="nick" style="color:#8dd3c7"><a href="#011400" label="[01:14:00]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; I may take a stab at documenting the whole stack layer by layer at some point to help people audit it easier.</span></div><div class="line" id="011408"><span class="nick" style="color:#6d2462"><a href="#011408" label="[01:14:08]">&lt;stikonas&gt;</a></span><span class="message">sure, that might be useful</span></div><div class="line" id="011413"><span class="nick" style="color:#8dd3c7"><a href="#011413" label="[01:14:13]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; but it was easy enough to read and conclude nothing fishy is going on</span></div><div class="line" id="011413"><span class="nick" style="color:#6d2462"><a href="#011413" label="[01:14:13]">&lt;stikonas&gt;</a></span><span class="message">we do have some insights in parts.rst</span></div><div class="line" id="011438"><span class="nick" style="color:#6d2462"><a href="#011438" label="[01:14:38]">&lt;stikonas&gt;</a></span><span class="message">have you seen it <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a>  ?</span></div><div class="line" id="011509"><span class="nick" style="color:#6d2462"><a href="#011509" label="[01:15:09]">&lt;stikonas&gt;</a></span><span class="message">well, the worst thing that might be remaing is some pre-generated files</span></div><div class="line" id="011529"><span class="nick" style="color:#8dd3c7"><a href="#011529" label="[01:15:29]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; oh! this is exactly what I wanted. All I have had to go on was the guix blog post, which is not 1/1 to what you are doing</span></div><div class="line" id="011534"><span class="nick" style="color:#6d2462"><a href="#011534" label="[01:15:34]">&lt;stikonas&gt;</a></span><span class="message">for some reason software maintainers love including them in the releases...</span></div><div class="line" id="011623"><span class="nick" style="color:#6d2462"><a href="#011623" label="[01:16:23]">&lt;stikonas&gt;</a></span><span class="message">yeah, parts.rst is a nice read :)</span></div><div class="line" id="011636"><span class="nick" style="color:#6d2462"><a href="#011636" label="[01:16:36]">&lt;stikonas&gt;</a></span><span class="message">again, it's just a path, not the only possible path</span></div><div class="line" id="011646"><span class="nick" style="color:#6d2462"><a href="#011646" label="[01:16:46]">&lt;stikonas&gt;</a></span><span class="message">but it does explain some of the choices...</span></div><div class="line" id="011652"><span class="nick" style="color:#8dd3c7"><a href="#011652" label="[01:16:52]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Yeah I will be going over that in much more detail. this is exactly what I wanted.</span></div><div class="line" id="011722"><span class="nick" style="color:#8dd3c7"><a href="#011722" label="[01:17:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; must have missed it in my hurry to start implementing.</span></div><div class="line" id="011819"><span class="nick" style="color:#8dd3c7"><a href="#011819" label="[01:18:19]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; I already had my whole deterministic distro for things like rust toolchains, but it was bootstrapped in alpine which undermines my whole software supply chain model of no single trusted party. The timing of the work here could not be better for me.</span></div><div class="line" id="011828"><span class="nick" style="color:#6b8072"><a href="#011828" label="[01:18:28]">&lt;Googulator&gt;</a></span><span class="message">Got the Fiwix-era monitor console working with <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/418">https://github.com/fosslinux/live-bootstrap/pull/418</a> </span></div><div class="line" id="011902"><span class="nick" style="color:#8dd3c7"><a href="#011902" label="[01:19:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; and it is dramatically easier to trust than alpine, given I can triple build stage0 and get the same results from different distros, then carry on from there into live-bootstrap, though the &quot;live&quot; part is not really useful in my setup</span></div><div class="line" id="011922"><span class="nick" style="color:#8dd3c7"><a href="#011922" label="[01:19:22]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; I like that it exists, and should in theory get the same hashes for the contents of my stage1 container</span></div><div class="line" id="012048"><span class="nick" style="color:#8dd3c7"><a href="#012048" label="[01:20:48]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; I feel like anyone that goes down the obsessive rabbit hole of deterministic builds is bound to end up here eventually.</span></div><div class="line" id="012128"><span class="nick" style="color:#6d2462"><a href="#012128" label="[01:21:28]">&lt;stikonas&gt;</a></span><span class="message">yeah, it's just makes so much sense to start with single binary and follow a well defined process</span></div><div class="line" id="012149"><span class="nick" style="color:#6d2462"><a href="#012149" label="[01:21:49]">&lt;stikonas&gt;</a></span><span class="message">than trying to somehow  start from various big environments and somehow build up to the same thing</span></div><div class="line" id="012203"><span class="nick" style="color:#6d2462"><a href="#012203" label="[01:22:03]">&lt;stikonas&gt;</a></span><span class="message">almost all reproducibility in bootstrapping is for free...</span></div><div class="line" id="012224"><span class="nick" style="color:#6d2462"><a href="#012224" label="[01:22:24]">&lt;stikonas&gt;</a></span><span class="message">just needed occasional tweak or small patch (mostly to get rid of timestamps)</span></div><div class="line" id="012313"><span class="nick" style="color:#8dd3c7"><a href="#012313" label="[01:23:13]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Yeah I got here because I built a whole package pinning system on top of debian, and the debian archive is unreliable, so almost every repo ended up requiring an LFS folder with 3GB of packages to deterministically build anything, and know we can reproduce it in the future.</span></div><div class="line" id="012407"><span class="nick" style="color:#8dd3c7"><a href="#012407" label="[01:24:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; But now that I can boostrap a deterministic rust compiler all the way from stage0, then I can just have developers use the locked hash of the container with that compiler, and anyone can repo the same rust compiler contanier from stage0 too.</span></div><div class="line" id="012412"><span class="nick" style="color:#8dd3c7"><a href="#012412" label="[01:24:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; then I have a multi-signing setup and policy thing</span></div><div class="line" id="012454"><span class="nick" style="color:#6d2462"><a href="#012454" label="[01:24:54]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's nice</span></div><div class="line" id="012503"><span class="nick" style="color:#6d2462"><a href="#012503" label="[01:25:03]">&lt;stikonas&gt;</a></span><span class="message">well, we do have a similar problem though</span></div><div class="line" id="012508"><span class="nick" style="color:#6d2462"><a href="#012508" label="[01:25:08]">&lt;stikonas&gt;</a></span><span class="message">we need to get source tarballs</span></div><div class="line" id="012513"><span class="nick" style="color:#6d2462"><a href="#012513" label="[01:25:13]">&lt;stikonas&gt;</a></span><span class="message">and sometimes it is slightly unreliable</span></div><div class="line" id="012527"><span class="nick" style="color:#6d2462"><a href="#012527" label="[01:25:27]">&lt;stikonas&gt;</a></span><span class="message">but probably nowhere as bad as 3 GiB of binaries</span></div><div class="line" id="012600"><span class="nick" style="color:#8dd3c7"><a href="#012600" label="[01:26:00]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Well at least the source tarballs are lots of mirrors, and only needed for build reproduction. Not something I have to force every dev to carry locally</span></div><div class="line" id="012610"><span class="nick" style="color:#6d2462"><a href="#012610" label="[01:26:10]">&lt;stikonas&gt;</a></span><span class="message">indeed...</span></div><div class="line" id="012704"><span class="nick" style="color:#8dd3c7"><a href="#012704" label="[01:27:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; I may LFS mirror all the sources from stage0 up in my own repo for those building, with pgp keys to verify I didn't tamper with them.</span></div><div class="line" id="012906"><span class="nick" style="color:#8dd3c7"><a href="#012906" label="[01:29:06]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; The next things I am building on top are a bootable airgapped OS for keygen ceremonies, and a bootable linux/rust unikernel for enclaves... both of which will be used by use cases where no single party can be trusted, including anywhere in the supply chain. I hated even trusting debian for this previously as any single maintainer... yeah</span></div><div class="line" id="013525"><span class="nick" style="color:#6d2462"><a href="#013525" label="[01:35:25]">&lt;stikonas&gt;</a></span><span class="message">Googulator: why exactly do we need to switch tty's for each new bash?</span></div><div class="line" id="013537"><span class="nick" style="color:#6d2462"><a href="#013537" label="[01:35:37]">&lt;stikonas&gt;</a></span><span class="message">because we don't want multiple processes writing to the same tty?</span></div><div class="line" id="013559"><span class="nick" style="color:#6b8072"><a href="#013559" label="[01:35:59]">&lt;Googulator&gt;</a></span><span class="message">We only do this for the monitoring shells, not the ones actually running the bootstrap</span></div><div class="line" id="013639"><span class="nick" style="color:#6b8072"><a href="#013639" label="[01:36:39]">&lt;Googulator&gt;</a></span><span class="message">So you can Ctrl+Shift+F2/F3 away from the continuously scrolling text, to check something in a shell, while the bootstrap is still running in tty1</span></div><div class="line" id="013730"><span class="nick" style="color:#6b8072"><a href="#013730" label="[01:37:30]">&lt;Googulator&gt;</a></span><span class="message">We can't reuse tty2 for bash 5.2, unless we find a way to programmatically identify and kill the bash-2.05b process running on it</span></div><div class="line" id="013732"><span class="nick" style="color:#6d2462"><a href="#013732" label="[01:37:32]">&lt;stikonas&gt;</a></span><span class="message">oh I see</span></div><div class="line" id="013807"><span class="nick" style="color:#6b8072"><a href="#013807" label="[01:38:07]">&lt;Googulator&gt;</a></span><span class="message">Also, if the user is currently doing something in the 2.05b monitor shell when 5.2 is done building, we don't want to pull the rug from under whatever's running</span></div><div class="line" id="013810"><span class="nick" style="color:#6d2462"><a href="#013810" label="[01:38:10]">&lt;stikonas&gt;</a></span><span class="message">anyway, good job sorting out all these issues!</span></div><div class="line" id="014002"><span class="nick" style="color:#6b8072"><a href="#014002" label="[01:40:02]">&lt;Googulator&gt;</a></span><span class="message">Mikaku: any idea why pressing Num Lock or any other Lock key in Fiwix booted via kexec-fiwix could cause a lockup on bare metal?</span></div><div class="line" id="014010"><span class="nick" style="color:#6b8072"><a href="#014010" label="[01:40:10]">&lt;Googulator&gt;</a></span><span class="message">(using a USB keyboard)</span></div><div class="line" id="014035"><span class="nick" style="color:#6b8072"><a href="#014035" label="[01:40:35]">&lt;Googulator&gt;</a></span><span class="message">other than that, the keyboard works, although it's probably relying on BIOS emulation</span></div><div class="line" id="021206"><span class="nick" style="color:#234e69"><a href="#021206" label="[02:12:06]">&lt;fossy&gt;</a></span><span class="message">lrvick: &quot;making the whole puzzle work, not so much&quot; is very accurate, most of that early work was copied from guix's path just because it's so hard to find the optimal version combinations</span></div><div class="line" id="021214"><span class="nick" style="color:#234e69"><a href="#021214" label="[02:12:14]">&lt;fossy&gt;</a></span><span class="message">and we still haven't got the most optimal version combinations</span></div><div class="line" id="021322"><span class="nick" style="color:#234e69"><a href="#021322" label="[02:13:22]">&lt;fossy&gt;</a></span><span class="message">Googulator: #415 supersedes #328?</span></div><div class="line" id="021404"><span class="nick" style="color:#6b8072"><a href="#021404" label="[02:14:04]">&lt;Googulator&gt;</a></span><span class="message">It pretty much does, yes.</span></div><div class="line" id="021409"><span class="nick" style="color:#234e69"><a href="#021409" label="[02:14:09]">&lt;fossy&gt;</a></span><span class="message">okey</span></div><div class="line" id="021415"><span class="nick" style="color:#234e69"><a href="#021415" label="[02:14:15]">&lt;fossy&gt;</a></span><span class="message">looking pretty good. will just review for pregened files</span></div><div class="line" id="021745"><span class="nick" style="color:#6b8072"><a href="#021745" label="[02:17:45]">&lt;Googulator&gt;</a></span><span class="message">The only thing in 328 that's not in 415 or previous PRs is the &quot;reboot&quot; script (instead, exiting the final shell powers off), and the extra memory map entry for 8G RAM support in Linux (which needs to be done dynamically by reading the real e820 map)</span></div><div class="line" id="022240"><span class="nick" style="color:#234e69"><a href="#022240" label="[02:22:40]">&lt;fossy&gt;</a></span><span class="message">yeah, there's a couple of pregenerated files in grub</span></div><div class="line" id="022248"><span class="nick" style="color:#234e69"><a href="#022248" label="[02:22:48]">&lt;fossy&gt;</a></span><span class="message">weird ones too</span></div><div class="line" id="022331"><span class="nick" style="color:#234e69"><a href="#022331" label="[02:23:31]">&lt;fossy&gt;</a></span><span class="message">also, does installing grub overwrite any of builder-hex0?</span></div><div class="line" id="022337"><span class="nick" style="color:#234e69"><a href="#022337" label="[02:23:37]">&lt;fossy&gt;</a></span><span class="message">i suspect not, but just wanted to check</span></div><div class="line" id="023039"><span class="nick" style="color:#6b8072"><a href="#023039" label="[02:30:39]">&lt;Googulator&gt;</a></span><span class="message">it overwrites the MBR, if that's what you mean</span></div><div class="line" id="023049"><span class="nick" style="color:#6b8072"><a href="#023049" label="[02:30:49]">&lt;Googulator&gt;</a></span><span class="message">at least on BIOS</span></div><div class="line" id="023104"><span class="nick" style="color:#6b8072"><a href="#023104" label="[02:31:04]">&lt;Googulator&gt;</a></span><span class="message">on UEFI, it wouldn't do that, but of course we don't yet support UEFI at all</span></div><div class="line" id="023310"><span class="nick" style="color:#6d2462"><a href="#023310" label="[02:33:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, we are nowhere close on UEFI yet...</span></div><div class="line" id="023324"><span class="nick" style="color:#6d2462"><a href="#023324" label="[02:33:24]">&lt;stikonas&gt;</a></span><span class="message">though right now main blockers are amd64 support in userspace bootstrap</span></div><div class="line" id="023343"><span class="nick" style="color:#234e69"><a href="#023343" label="[02:33:43]">&lt;fossy&gt;</a></span><span class="message">yeah, cause we have to get to tcc to get to fiwix...</span></div><div class="line" id="023347"><span class="nick" style="color:#6d2462"><a href="#023347" label="[02:33:47]">&lt;stikonas&gt;</a></span><span class="message">I've just sent a fix to mes earlier today but we need quite abit more</span></div><div class="line" id="023355"><span class="nick" style="color:#6d2462"><a href="#023355" label="[02:33:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, we do have tcc-mes built</span></div><div class="line" id="023404"><span class="nick" style="color:#6d2462"><a href="#023404" label="[02:34:04]">&lt;stikonas&gt;</a></span><span class="message">and with my fix it can even compile crt1.c</span></div><div class="line" id="023409"><span class="nick" style="color:#234e69"><a href="#023409" label="[02:34:09]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="023422"><span class="nick" style="color:#234e69"><a href="#023422" label="[02:34:22]">&lt;fossy&gt;</a></span><span class="message">progress, but not there yet</span></div><div class="line" id="023430"><span class="nick" style="color:#6d2462"><a href="#023430" label="[02:34:30]">&lt;stikonas&gt;</a></span><span class="message">unified-libc.c is mixed</span></div><div class="line" id="023441"><span class="nick" style="color:#6d2462"><a href="#023441" label="[02:34:41]">&lt;stikonas&gt;</a></span><span class="message">I can build it if I add some stupid patch</span></div><div class="line" id="023451"><span class="nick" style="color:#6d2462"><a href="#023451" label="[02:34:51]">&lt;stikonas&gt;</a></span><span class="message">but I don't understand underlying cause</span></div><div class="line" id="023508"><span class="nick" style="color:#6d2462"><a href="#023508" label="[02:35:08]">&lt;stikonas&gt;</a></span><span class="message">i.e. if I add &quot;mode;&quot; line in one place of tcc code</span></div><div class="line" id="023511"><span class="nick" style="color:#6d2462"><a href="#023511" label="[02:35:11]">&lt;stikonas&gt;</a></span><span class="message">it works much better</span></div><div class="line" id="023540"><span class="nick" style="color:#6d2462"><a href="#023540" label="[02:35:40]">&lt;stikonas&gt;</a></span><span class="message">but then later it still crashes when I try to build tcc-boot0</span></div><div class="line" id="023548"><span class="nick" style="color:#6d2462"><a href="#023548" label="[02:35:48]">&lt;stikonas&gt;</a></span><span class="message">but we probably are close...</span></div><div class="line" id="023602"><span class="nick" style="color:#6d2462"><a href="#023602" label="[02:36:02]">&lt;stikonas&gt;</a></span><span class="message">of course after that there is still trampolining into Fiwix...</span></div><div class="line" id="023607"><span class="nick" style="color:#6d2462"><a href="#023607" label="[02:36:07]">&lt;stikonas&gt;</a></span><span class="message">I'm a bit scared of that part...</span></div><div class="line" id="023621"><span class="nick" style="color:#6d2462"><a href="#023621" label="[02:36:21]">&lt;stikonas&gt;</a></span><span class="message">but hopefully it wouldn't be tricky</span></div><div class="line" id="023646"><span class="nick" style="color:#6d2462"><a href="#023646" label="[02:36:46]">&lt;stikonas&gt;</a></span><span class="message">there is also some bug in posix-runner that I haven't fixed yet</span></div><div class="line" id="023653"><span class="nick" style="color:#6d2462"><a href="#023653" label="[02:36:53]">&lt;stikonas&gt;</a></span><span class="message">but again, there is a workaround...</span></div><div class="line" id="023701"><span class="nick" style="color:#6d2462"><a href="#023701" label="[02:37:01]">&lt;stikonas&gt;</a></span><span class="message">though very ugly</span></div><div class="line" id="023726"><span class="nick" style="color:#6d2462"><a href="#023726" label="[02:37:26]">&lt;stikonas&gt;</a></span><span class="message">after 30 or so invocations of mes-m2 it fails with non-zero exit code because last free() call before exit() fails</span></div><div class="line" id="023818"><span class="nick" style="color:#6d2462"><a href="#023818" label="[02:38:18]">&lt;stikonas&gt;</a></span><span class="message">splitting kaem script into smaller works around that but is again not very satisfactory</span></div><div class="line" id="023836"><span class="nick" style="color:#6d2462"><a href="#023836" label="[02:38:36]">&lt;stikonas&gt;</a></span><span class="message">so yes, some progress, but not there yet</span></div><div class="line" id="023854"><span class="nick" style="color:#6b8072"><a href="#023854" label="[02:38:54]">&lt;Googulator&gt;</a></span><span class="message">fossy: looks like gnulib is handled in a really ugly way in grub</span></div><div class="line" id="023907"><span class="nick" style="color:#6d2462"><a href="#023907" label="[02:39:07]">&lt;stikonas&gt;</a></span><span class="message">argh, gnulib again...</span></div><div class="line" id="023919"><span class="nick" style="color:#6d2462"><a href="#023919" label="[02:39:19]">&lt;stikonas&gt;</a></span><span class="message">all those gnu tarballs are so annoying</span></div><div class="line" id="023924"><span class="nick" style="color:#6b8072"><a href="#023924" label="[02:39:24]">&lt;Googulator&gt;</a></span><span class="message">the script required to load it is stripped from the official tarballs, only found in Git</span></div><div class="line" id="023938"><span class="nick" style="color:#6d2462"><a href="#023938" label="[02:39:38]">&lt;stikonas&gt;</a></span><span class="message">usually when we have to build some non-gnu stuff, say xz&quot;</span></div><div class="line" id="023942"><span class="nick" style="color:#6d2462"><a href="#023942" label="[02:39:42]">&lt;stikonas&gt;</a></span><span class="message">it's so much nicer...</span></div><div class="line" id="023949"><span class="nick" style="color:#6d2462"><a href="#023949" label="[02:39:49]">&lt;stikonas&gt;</a></span><span class="message">Googulator: oh we had that before...</span></div><div class="line" id="024012"><span class="nick" style="color:#6d2462"><a href="#024012" label="[02:40:12]">&lt;stikonas&gt;</a></span><span class="message">which is why some packages, ship git snapshot as well...</span></div><div class="line" id="024017"><span class="nick" style="color:#6d2462"><a href="#024017" label="[02:40:17]">&lt;stikonas&gt;</a></span><span class="message">or maybe just git snapshot</span></div><div class="line" id="024045"><span class="nick" style="color:#6b8072"><a href="#024045" label="[02:40:45]">&lt;Googulator&gt;</a></span><span class="message">in fact, grub 2.12's tarballs are unusable because the script to prepare the tarball strips out too much, breaking the build</span></div><div class="line" id="024049"><span class="nick" style="color:#6d2462"><a href="#024049" label="[02:40:49]">&lt;stikonas&gt;</a></span><span class="message">Googulator: see <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/sources">https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/sources</a> </span></div><div class="line" id="024054"><span class="nick" style="color:#6b8072"><a href="#024054" label="[02:40:54]">&lt;Googulator&gt;</a></span><span class="message">which is why I went with 2.06 instead</span></div><div class="line" id="024113"><span class="nick" style="color:#6d2462"><a href="#024113" label="[02:41:13]">&lt;stikonas&gt;</a></span><span class="message">how do the distros deal with 2.12 then?</span></div><div class="line" id="024114"><span class="nick" style="color:#234e69"><a href="#024114" label="[02:41:14]">&lt;fossy&gt;</a></span><span class="message">Googulator: the usual workflow for gnulib we use is to take the gnulib-tool command given in Makefile.am within lib/gnulib directory, and run that manually, rather than using gnulib regeneration scripots</span></div><div class="line" id="024118"><span class="nick" style="color:#234e69"><a href="#024118" label="[02:41:18]">&lt;fossy&gt;</a></span><span class="message">which are usually absolute junk</span></div><div class="line" id="024150"><span class="nick" style="color:#6b8072"><a href="#024150" label="[02:41:50]">&lt;Googulator&gt;</a></span><span class="message">probably distros are just compiling the Git sources, rather than the tarball</span></div><div class="line" id="024155"><span class="nick" style="color:#6d2462"><a href="#024155" label="[02:41:55]">&lt;stikonas&gt;</a></span><span class="message">but in coreutils some files are missing in release tarball</span></div><div class="line" id="024229"><span class="nick" style="color:#6d2462"><a href="#024229" label="[02:42:29]">&lt;stikonas&gt;</a></span><span class="message">i.e. occasionally we had the case that gnulib-tool only works on git repo and not on release tarballs. Though usually it works on both</span></div><div class="line" id="024241"><span class="nick" style="color:#234e69"><a href="#024241" label="[02:42:41]">&lt;fossy&gt;</a></span><span class="message">oh, yeah grub 2.12 is broken</span></div><div class="line" id="024247"><span class="nick" style="color:#234e69"><a href="#024247" label="[02:42:47]">&lt;fossy&gt;</a></span><span class="message">i remember reading this</span></div><div class="line" id="024300"><span class="nick" style="color:#234e69"><a href="#024300" label="[02:43:00]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://lists.gnu.org/archive/html/grub-devel/2023-12/msg00054.html">https://lists.gnu.org/archive/html/grub-devel/2023-12/msg00054.html</a> </span></div><div class="line" id="024340"><span class="nick" style="color:#6b8072"><a href="#024340" label="[02:43:40]">&lt;Googulator&gt;</a></span><span class="message">I wonder what happened to 2.08 and 2.10</span></div><div class="line" id="024422"><span class="nick" style="color:#6b8072"><a href="#024422" label="[02:44:22]">&lt;Googulator&gt;</a></span><span class="message">found the command in Makefile.am - unfortunately it doesn't tell me which gnulib revision to use</span></div><div class="line" id="024435"><span class="nick" style="color:#6d2462"><a href="#024435" label="[02:44:35]">&lt;stikonas&gt;</a></span><span class="message">they also still haven't included proper LUKS2 support in grub</span></div><div class="line" id="024443"><span class="nick" style="color:#6d2462"><a href="#024443" label="[02:44:43]">&lt;stikonas&gt;</a></span><span class="message">despite somebody posting a patch...</span></div><div class="line" id="024445"><span class="nick" style="color:#234e69"><a href="#024445" label="[02:44:45]">&lt;fossy&gt;</a></span><span class="message">nope, ususally gnulib is a submodule, so i go to the release tag in the git repo and find the revision they used there</span></div><div class="line" id="024453"><span class="nick" style="color:#6d2462"><a href="#024453" label="[02:44:53]">&lt;stikonas&gt;</a></span><span class="message">somehow grub project doesn't seem very healthy these days</span></div><div class="line" id="024504"><span class="nick" style="color:#234e69"><a href="#024504" label="[02:45:04]">&lt;fossy&gt;</a></span><span class="message">i think there's like one maintainer lol</span></div><div class="line" id="024514"><span class="nick" style="color:#6b8072"><a href="#024514" label="[02:45:14]">&lt;Googulator&gt;</a></span><span class="message">BTW, reading <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/sources">https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/sources</a>  - why do we stick to tar.gz for gnulib, even when we pull coreutils' sources from the exact same place in tar.xz?</span></div><div class="line" id="024545"><span class="nick" style="color:#234e69"><a href="#024545" label="[02:45:45]">&lt;fossy&gt;</a></span><span class="message">no idea :P</span></div><div class="line" id="024557"><span class="nick" style="color:#6d2462"><a href="#024557" label="[02:45:57]">&lt;stikonas&gt;</a></span><span class="message">we should be able to use xz there</span></div><div class="line" id="024559"><span class="nick" style="color:#234e69"><a href="#024559" label="[02:45:59]">&lt;fossy&gt;</a></span><span class="message">i think probably just because that's the link i copied</span></div><div class="line" id="024603"><span class="nick" style="color:#234e69"><a href="#024603" label="[02:46:03]">&lt;fossy&gt;</a></span><span class="message">xz should be fine yes</span></div><div class="line" id="024609"><span class="nick" style="color:#6b8072"><a href="#024609" label="[02:46:09]">&lt;Googulator&gt;</a></span><span class="message">we seemingly always use .gz for gnulib, and nothing else, when downloading from savannah</span></div><div class="line" id="024621"><span class="nick" style="color:#6d2462"><a href="#024621" label="[02:46:21]">&lt;stikonas&gt;</a></span><span class="message">some early gnulib tarballs are from former sysa and predate xz</span></div><div class="line" id="024625"><span class="nick" style="color:#6d2462"><a href="#024625" label="[02:46:25]">&lt;stikonas&gt;</a></span><span class="message">so probably copy-paste</span></div><div class="line" id="024656"><span class="nick" style="color:#6d2462"><a href="#024656" label="[02:46:56]">&lt;stikonas&gt;</a></span><span class="message">also I think we have somewhat insonsistent length of hash for gnulib tarballs...</span></div><div class="line" id="024659"><span class="nick" style="color:#6d2462"><a href="#024659" label="[02:46:59]">&lt;stikonas&gt;</a></span><span class="message">but oh well</span></div><div class="line" id="024708"><span class="nick" style="color:#234e69"><a href="#024708" label="[02:47:08]">&lt;fossy&gt;</a></span><span class="message">i noticed that too</span></div><div class="line" id="024716"><span class="nick" style="color:#6b8072"><a href="#024716" label="[02:47:16]">&lt;Googulator&gt;</a></span><span class="message">Are the files in /unicode pregen?</span></div><div class="line" id="024740"><span class="nick" style="color:#234e69"><a href="#024740" label="[02:47:40]">&lt;fossy&gt;</a></span><span class="message">grub-core/unidata.c is</span></div><div class="line" id="024746"><span class="nick" style="color:#234e69"><a href="#024746" label="[02:47:46]">&lt;fossy&gt;</a></span><span class="message">using said files in unicode/</span></div><div class="line" id="024800"><span class="nick" style="color:#234e69"><a href="#024800" label="[02:48:00]">&lt;fossy&gt;</a></span><span class="message">technically, they probably are pregenerated by something</span></div><div class="line" id="024808"><span class="nick" style="color:#234e69"><a href="#024808" label="[02:48:08]">&lt;fossy&gt;</a></span><span class="message">but they're effectively csvs with ; instaead of comma</span></div><div class="line" id="024823"><span class="nick" style="color:#6b8072"><a href="#024823" label="[02:48:23]">&lt;Googulator&gt;</a></span><span class="message">asking because of <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/import-gnulib.sh#L12">https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/import-gnulib.sh#L12</a> </span></div><div class="line" id="024847"><span class="nick" style="color:#6b8072"><a href="#024847" label="[02:48:47]">&lt;Googulator&gt;</a></span><span class="message">&quot;metric&quot; CSVs</span></div><div class="line" id="024919"><span class="nick" style="color:#234e69"><a href="#024919" label="[02:49:19]">&lt;fossy&gt;</a></span><span class="message">ohhh, thats for a specific gnulib module, pregenerated unicode data in gnulib itself</span></div><div class="line" id="024921"><span class="nick" style="color:#6b8072"><a href="#024921" label="[02:49:21]">&lt;Googulator&gt;</a></span><span class="message">vs &quot;imperial&quot; ones which use , as separator and . as decimal</span></div><div class="line" id="024928"><span class="nick" style="color:#234e69"><a href="#024928" label="[02:49:28]">&lt;fossy&gt;</a></span><span class="message">ahhh</span></div><div class="line" id="024944"><span class="nick" style="color:#6b8072"><a href="#024944" label="[02:49:44]">&lt;Googulator&gt;</a></span><span class="message">metric countries generally use , for decimal separator</span></div><div class="line" id="024952"><span class="nick" style="color:#6d2462"><a href="#024952" label="[02:49:52]">&lt;stikonas&gt;</a></span><span class="message">and in some countries , is decimal separator for numbers...</span></div><div class="line" id="025000"><span class="nick" style="color:#6d2462"><a href="#025000" label="[02:50:00]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="025018"><span class="nick" style="color:#234e69"><a href="#025018" label="[02:50:18]">&lt;fossy&gt;</a></span><span class="message">$AU , is number separator, and . is decimal separator, eg 1,000,000.00</span></div><div class="line" id="025028"><span class="nick" style="color:#234e69"><a href="#025028" label="[02:50:28]">&lt;fossy&gt;</a></span><span class="message">i know some places do 1.000.000,00 though</span></div><div class="line" id="025038"><span class="nick" style="color:#6d2462"><a href="#025038" label="[02:50:38]">&lt;stikonas&gt;</a></span><span class="message">former is what they use in UK</span></div><div class="line" id="025048"><span class="nick" style="color:#6d2462"><a href="#025048" label="[02:50:48]">&lt;stikonas&gt;</a></span><span class="message">so probably Australia inherited it...</span></div><div class="line" id="025117"><span class="nick" style="color:#6d2462"><a href="#025117" label="[02:51:17]">&lt;stikonas&gt;</a></span><span class="message">but e.g. in Lithuania we used 1.000.000,00</span></div><div class="line" id="025123"><span class="nick" style="color:#234e69"><a href="#025123" label="[02:51:23]">&lt;fossy&gt;</a></span><span class="message">Googulator: don't worry about that part of gnulib script in coreutils, grub does not import any unicode junk from gnulib</span></div><div class="line" id="025138"><span class="nick" style="color:#6b8072"><a href="#025138" label="[02:51:38]">&lt;Googulator&gt;</a></span><span class="message">CSVs use , in the former British empire, and ; elsewhere</span></div><div class="line" id="025221"><span class="nick" style="color:#6b8072"><a href="#025221" label="[02:52:21]">&lt;Googulator&gt;</a></span><span class="message">and since Unicode is all about supporting languages other than English, the &quot;Metric&quot; version wins for Unicode</span></div><div class="line" id="025522"><span class="nick" style="color:#6b8072"><a href="#025522" label="[02:55:22]">&lt;Googulator&gt;</a></span><span class="message">fossy: do you see anything that needs fixing in #418 that needs addressing?</span></div><div class="line" id="025534"><span class="nick" style="color:#6b8072"><a href="#025534" label="[02:55:34]">&lt;Googulator&gt;</a></span><span class="message">If not, I'm considering swapping the dependency there</span></div><div class="line" id="025637"><span class="nick" style="color:#6d2462"><a href="#025637" label="[02:56:37]">&lt;stikonas&gt;</a></span><span class="message">slightly related picture about UK units that is going on everywhere <a rel="nofollow" href="https://i.redd.it/2otfbry1cfo71.png">https://i.redd.it/2otfbry1cfo71.png</a> </span></div><div class="line" id="025747"><span class="nick" style="color:#6b8072"><a href="#025747" label="[02:57:47]">&lt;Googulator&gt;</a></span><span class="message">stikonas: slightly wrong, the plural of &quot;stone&quot; is &quot;stone&quot; when weighing people; Brits are adamant about this</span></div><div class="line" id="025807"><span class="nick" style="color:#6b8072"><a href="#025807" label="[02:58:07]">&lt;Googulator&gt;</a></span><span class="message">&quot;stones&quot; in all other contexts</span></div><div class="line" id="025814"><span class="nick" style="color:#6d2462"><a href="#025814" label="[02:58:14]">&lt;stikonas&gt;</a></span><span class="message">oh possibly...</span></div><div class="line" id="030207"><span class="nick" style="color:#6d2462"><a href="#030207" label="[03:02:07]">&lt;stikonas&gt;</a></span><span class="message">though younger people use kg anyway...</span></div><div class="line" id="030412"><span class="nick" style="color:#6b8072"><a href="#030412" label="[03:04:12]">&lt;Googulator&gt;</a></span><span class="message">hmm, what is even the long form for &quot;ln -s&quot;? I've only ever seen it written like this, including in live-bootstrap.</span></div><div class="line" id="030839"><span class="nick" style="color:#234e69"><a href="#030839" label="[03:08:39]">&lt;fossy&gt;</a></span><span class="message">--symbolic, i think</span></div><div class="line" id="030846"><span class="nick" style="color:#234e69"><a href="#030846" label="[03:08:46]">&lt;fossy&gt;</a></span><span class="message">but ln -s is the only one i've ever seen used</span></div><div class="line" id="030954"><span class="nick" style="color:#234e69"><a href="#030954" label="[03:09:54]">&lt;fossy&gt;</a></span><span class="message">i don't mind use long options, but when it's really common and a defacto standard (eg, ln -s, ls -l, etc), ones that everyone who uses linux will have come across, i think it's no benefit to readability, and a waste of time to bother about</span></div><div class="line" id="031021"><span class="nick" style="color:#8dd3c7"><a href="#031021" label="[03:10:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; Well, common ones maybe...</span></div><div class="line" id="031041"><span class="nick" style="color:#234e69"><a href="#031041" label="[03:10:41]">&lt;fossy&gt;</a></span><span class="message">yeah, specifically common ones</span></div><div class="line" id="031058"><span class="nick" style="color:#234e69"><a href="#031058" label="[03:10:58]">&lt;fossy&gt;</a></span><span class="message">Googulator: the changes from solely #418 look fine to me</span></div><div class="line" id="031100"><span class="nick" style="color:#8dd3c7"><a href="#031100" label="[03:11:00]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Å tikonas&gt; But various more obscure ones can definitely make a difference between having to read manpage and not</span></div><div class="line" id="031127"><span class="nick" style="color:#234e69"><a href="#031127" label="[03:11:27]">&lt;fossy&gt;</a></span><span class="message">oh absolutely</span></div><div class="line" id="031149"><span class="nick" style="color:#234e69"><a href="#031149" label="[03:11:49]">&lt;fossy&gt;</a></span><span class="message">if one needs to realistically open a manpage then long options good</span></div><div class="line" id="031536"><span class="nick" style="color:#6b8072"><a href="#031536" label="[03:15:36]">&lt;Googulator&gt;</a></span><span class="message">OK, inverted the dependency between #415 and #418</span></div><div class="line" id="032348"><span class="nick" style="color:#6b8072"><a href="#032348" label="[03:23:48]">&lt;Googulator&gt;</a></span><span class="message">btw, gnulib is not a submodule in grub</span></div><div class="line" id="032628"><span class="nick" style="color:#6b8072"><a href="#032628" label="[03:26:28]">&lt;Googulator&gt;</a></span><span class="message">the revision is set here: <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/grub.git/tree/bootstrap.conf?h=grub-2.06#n19">https://git.savannah.gnu.org/cgit/grub.git/tree/bootstrap.conf?h=grub-2.06#n19</a> </span></div><div class="line" id="032652"><span class="nick" style="color:#6b8072"><a href="#032652" label="[03:26:52]">&lt;Googulator&gt;</a></span><span class="message">of course, bootstrap.conf is deleted from the release tarball, because, why not?</span></div><div class="line" id="033252"><span class="nick" style="color:#6b8072"><a href="#033252" label="[03:32:52]">&lt;Googulator&gt;</a></span><span class="message">fossy: po/Makefile.in.in is fine in the case of grub?</span></div><div class="line" id="033303"><span class="nick" style="color:#6b8072"><a href="#033303" label="[03:33:03]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/pass1.sh">https://github.com/fosslinux/live-bootstrap/blob/master/steps/coreutils-9.4/pass1.sh</a>  replaces it</span></div><div class="line" id="033439"><span class="nick" style="color:#234e69"><a href="#033439" label="[03:34:39]">&lt;fossy&gt;</a></span><span class="message">it's not like any actual processing is done to it in coreutils, i think that was to fix a build error in coreutils</span></div><div class="line" id="033441"><span class="nick" style="color:#234e69"><a href="#033441" label="[03:34:41]">&lt;fossy&gt;</a></span><span class="message">pretty sure thats fine</span></div><div class="line" id="040814"><span class="nick" style="color:#6b8072"><a href="#040814" label="[04:08:14]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/actions/runs/7634879380/job/20799430390?pr=415#step:5:728">https://github.com/fosslinux/live-bootstrap/actions/runs/7634879380/job/20799430390?pr=415#step:5:728</a>  wtf</span></div><div class="line" id="041007"><span class="nick" style="color:#6b8072"><a href="#041007" label="[04:10:07]">&lt;Googulator&gt;</a></span><span class="message">I consistently get right checksum when I download from here</span></div><div class="line" id="041030"><span class="nick" style="color:#6b8072"><a href="#041030" label="[04:10:30]">&lt;Googulator&gt;</a></span><span class="message">be it rootfs.py, download-distfiles.sh, or my browser</span></div><div class="line" id="041613"><span class="nick" style="color:#6b8072"><a href="#041613" label="[04:16:13]">&lt;Googulator&gt;</a></span><span class="message">changing back to gz solved it, somehow</span></div><div class="line" id="041903"><span class="nick" style="color:#234e69"><a href="#041903" label="[04:19:03]">&lt;fossy&gt;</a></span><span class="message">did you forget to git add sources or something? that is very strange</span></div><div class="line" id="043115"><span class="nick" style="color:#6b8072"><a href="#043115" label="[04:31:15]">&lt;Googulator&gt;</a></span><span class="message">No, it seems as if Savannah generates different xz's depending on geographical location</span></div><div class="line" id="043145"><span class="nick" style="color:#6b8072"><a href="#043145" label="[04:31:45]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/compare/e08b03c07a5f69b982283f1f85d4c0722294a71f..f4820f1241d9b46df349f10d3090ffe5598c5186">https://github.com/fosslinux/live-bootstrap/compare/e08b03c07a5f69b982283f1f85d4c0722294a71f..f4820f1241d9b46df349f10d3090ffe5598c5186</a>  is the change from xz to gz</span></div><div class="line" id="043205"><span class="nick" style="color:#6b8072"><a href="#043205" label="[04:32:05]">&lt;Googulator&gt;</a></span><span class="message">1906873542ae6d3d4700e069dcb0e7f21c68c28ede23a55a7c55f968cf5c4730 matches all copies of the xz I downloaded</span></div><div class="line" id="045543"><span class="nick" style="color:#234e69"><a href="#045543" label="[04:55:43]">&lt;fossy&gt;</a></span><span class="message">Googulator: wtf -.-</span></div><div class="line" id="045554"><span class="nick" style="color:#234e69"><a href="#045554" label="[04:55:54]">&lt;fossy&gt;</a></span><span class="message">that is absolutely stupid, different xzs depending on location</span></div><div class="line" id="045626"><span class="nick" style="color:#6c3d55"><a href="#045626" label="[04:56:26]">&lt;muurkha&gt;</a></span><span class="message">it's possible that it's an accident</span></div><div class="line" id="045637"><span class="nick" style="color:#6c3d55"><a href="#045637" label="[04:56:37]">&lt;muurkha&gt;</a></span><span class="message">due to a CDN screwup or something</span></div><div class="line" id="045714"><span class="nick" style="color:#6c3d55"><a href="#045714" label="[04:57:14]">&lt;muurkha&gt;</a></span><span class="message">it'd be interesting to compare the different xzs to see if some of them contain a possible backdoor</span></div><div class="line" id="072150"><span class="nick" style="color:#8dd3c7"><a href="#072150" label="[07:21:50]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Yeah that is... sketchy. Do you have examples of the two xzs ? I would very much like to diffoscope those.</span></div><div class="line" id="072226"><span class="nick" style="color:#8dd3c7"><a href="#072226" label="[07:22:26]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; if you have the URL, I would like to test it from different IPs as well. Source backdoors are the next biggest risk, so for sure want to chase this even if it is nothing</span></div><div class="line" id="072305"><span class="nick" style="color:#8dd3c7"><a href="#072305" label="[07:23:05]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Also extra interesting if anyone signs these sources, and which one they sign</span></div><div class="line" id="074257"><span class="nick" style="color:#234e69"><a href="#074257" label="[07:42:57]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/419">https://github.com/fosslinux/live-bootstrap/pull/419</a> </span></div><div class="line" id="074315"><span class="nick" style="color:#234e69"><a href="#074315" label="[07:43:15]">&lt;fossy&gt;</a></span><span class="message">a load of small changes to work toward a bit-by-bit fs</span></div><div class="line" id="074327"><span class="nick" style="color:#234e69"><a href="#074327" label="[07:43:27]">&lt;fossy&gt;</a></span><span class="message">*fs reproducibility</span></div><div class="line" id="074635"><span class="nick" style="color:#6c3d55"><a href="#074635" label="[07:46:35]">&lt;muurkha&gt;</a></span><span class="message">fossy, Googulator: do you have copies of the two different .xz files?</span></div><div class="line" id="074835"><span class="nick" style="color:#234e69"><a href="#074835" label="[07:48:35]">&lt;fossy&gt;</a></span><span class="message">i'm investigating now</span></div><div class="line" id="074934"><span class="nick" style="color:#234e69"><a href="#074934" label="[07:49:34]">&lt;fossy&gt;</a></span><span class="message">my sha is 1906873542ae6d3d4700e069dcb0e7f21c68c28ede23a55a7c55f968cf5c4730 when i download it normally</span></div><div class="line" id="075507"><span class="nick" style="color:#d9d9d9"><a href="#075507" label="[07:55:07]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: regarding the Lock keys in your USB keyboard, well, no idea, I only use PS/2 keyboards. Perhaps your keyboard sent a strange scan code that the Fiwix keyboard driver didn't know</span></div><div class="line" id="075552"><span class="nick" style="color:#d9d9d9"><a href="#075552" label="[07:55:52]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: you might want to add a 'printk()' in the keyboard driver to see the scan code that gives your Num Lock key in your USB keyboard</span></div><div class="line" id="111835"><span class="nick" style="color:#8dd3c7"><a href="#111835" label="[11:18:35]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Same here</span></div><div class="line" id="111841"><span class="nick" style="color:#8dd3c7"><a href="#111841" label="[11:18:41]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; (on the hash)</span></div><div class="line" id="123537"><span class="nick" style="color:#389600"><a href="#123537" label="[12:35:37]">&lt;oriansj&gt;</a></span><span class="message">well optimal bootstrap wasn't the goal as for a long while the goal was just to get a working bootstrap; lots of shortcuts and guesses were done and it'll take a long while to actually optimize all of the steps down.</span></div><div class="line" id="123753"><span class="nick" style="color:#389600"><a href="#123753" label="[12:37:53]">&lt;oriansj&gt;</a></span><span class="message">improvements to the libc used can easily open up more and newer tools to simplify various steps and potentially shrink the total live-bootstrap toolchain in big ways.</span></div><div class="line" id="170817"><span class="nick" style="color:#d9d9d9"><a href="#170817" label="[17:08:17]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: I plan to remove the Fiwix kernel option CONFIG_OFFSET64 because it is only used in the fd struct but all the functions are using 64bit offsets without considering this option</span></div><div class="line" id="170848"><span class="nick" style="color:#d9d9d9"><a href="#170848" label="[17:08:48]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: the problem is that you reference this option in docs/tcc.txt</span></div><div class="line" id="171141"><span class="nick" style="color:#d9d9d9"><a href="#171141" label="[17:11:41]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: can you, please, check if TCC can build the kernel even if the offset element in fd struct (include/fiwix/fd.h) uses the type __loff_t?</span></div><div class="line" id="171236"><span class="nick" style="color:#2e2a4a"><a href="#171236" label="[17:12:36]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I'm pretty sure tcc cannot build with the 64-bit type and that was the reason for CONFIG_OFFSET64</span></div><div class="line" id="171311"><span class="nick" style="color:#d9d9d9"><a href="#171311" label="[17:13:11]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: but then how come it can deal with functions that uses 64bit values?</span></div><div class="line" id="171318"><span class="nick" style="color:#d9d9d9"><a href="#171318" label="[17:13:18]">&lt;Mikaku&gt;</a></span><span class="message">lseek(), for instance</span></div><div class="line" id="171414"><span class="nick" style="color:#2e2a4a"><a href="#171414" label="[17:14:14]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: tcc can generally support 64-bit variables, but if there are math operations on those variables it is more complicated.</span></div><div class="line" id="171524"><span class="nick" style="color:#2e2a4a"><a href="#171524" label="[17:15:24]">&lt;rickmasters&gt;</a></span><span class="message">If there are math operations then some support functions need to be compiled in.</span></div><div class="line" id="171544"><span class="nick" style="color:#d9d9d9"><a href="#171544" label="[17:15:44]">&lt;Mikaku&gt;</a></span><span class="message">I see</span></div><div class="line" id="171609"><span class="nick" style="color:#d9d9d9"><a href="#171609" label="[17:16:09]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: thanks</span></div><div class="line" id="171618"><span class="nick" style="color:#2e2a4a"><a href="#171618" label="[17:16:18]">&lt;rickmasters&gt;</a></span><span class="message">But Fiwix is compiled with options that exclude standard library and libtcc which have the functions.</span></div><div class="line" id="171724"><span class="nick" style="color:#d9d9d9"><a href="#171724" label="[17:17:24]">&lt;Mikaku&gt;</a></span><span class="message">yes, you mean __divdi3 and friends</span></div><div class="line" id="171724"><span class="nick" style="color:#2e2a4a"><a href="#171724" label="[17:17:24]">&lt;rickmasters&gt;</a></span><span class="message">It may be possible to include the 64-bit math functions manually, but I wasn't able to figure it out after some time working on it.</span></div><div class="line" id="171738"><span class="nick" style="color:#2e2a4a"><a href="#171738" label="[17:17:38]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: that sounds right</span></div><div class="line" id="171811"><span class="nick" style="color:#d9d9d9"><a href="#171811" label="[17:18:11]">&lt;Mikaku&gt;</a></span><span class="message">no worries, just wanted to make sure that the option CONFIG_OFFSET64 is still somewhat important</span></div><div class="line" id="171824"><span class="nick" style="color:#d9d9d9"><a href="#171824" label="[17:18:24]">&lt;Mikaku&gt;</a></span><span class="message">s/wanted/wanted to know/</span></div><div class="line" id="172007"><span class="nick" style="color:#2e2a4a"><a href="#172007" label="[17:20:07]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: Sure. Maybe we should add an Issue or information in the docs for future reference.</span></div><div class="line" id="172041"><span class="nick" style="color:#2e2a4a"><a href="#172041" label="[17:20:41]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I think its possible to make it work someday.</span></div><div class="line" id="172201"><span class="nick" style="color:#d9d9d9"><a href="#172201" label="[17:22:01]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: ok, thanks</span></div><div class="line" id="222524"><span class="nick" style="color:#6b8072"><a href="#222524" label="[22:25:24]">&lt;Googulator&gt;</a></span><span class="message">TIL `ed` can be used as a substitute for `less` in a pinch</span></div><div class="line" id="222725"><span class="nick" style="color:#6b8072"><a href="#222725" label="[22:27:25]">&lt;Googulator&gt;</a></span><span class="message">which gives me an idea to add some kind of logging facility</span></div><div class="line" id="234208"><span class="nick" style="color:#234e69"><a href="#234208" label="[23:42:08]">&lt;fossy&gt;</a></span><span class="message">stikonas: is it to be expected that stage0-uefi is fairly slow</span></div><div class="line" id="234227"><span class="nick" style="color:#234e69"><a href="#234227" label="[23:42:27]">&lt;fossy&gt;</a></span><span class="message">or is that specific to my hardware</span></div><div class="line" id="234234"><span class="nick" style="color:#234e69"><a href="#234234" label="[23:42:34]">&lt;fossy&gt;</a></span><span class="message">possibly the usb drive im using is slow...</span></div><div class="line" id="234325"><span class="nick" style="color:#234e69"><a href="#234325" label="[23:43:25]">&lt;fossy&gt;</a></span><span class="message">took around 45 seconds to get to hex1.efi</span></div><div class="line" id="234332"><span class="nick" style="color:#234e69"><a href="#234332" label="[23:43:32]">&lt;fossy&gt;</a></span><span class="message">ill time the whole thing</span></div><div class="line" id="234437"><span class="nick" style="color:#6d2462"><a href="#234437" label="[23:44:37]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, it's not THAT slow...</span></div><div class="line" id="234442"><span class="nick" style="color:#6d2462"><a href="#234442" label="[23:44:42]">&lt;stikonas&gt;</a></span><span class="message">at least on my USB...</span></div><div class="line" id="234458"><span class="nick" style="color:#6d2462"><a href="#234458" label="[23:44:58]">&lt;stikonas&gt;</a></span><span class="message">it is noticeably slower than stage0-posix</span></div><div class="line" id="234529"><span class="nick" style="color:#6d2462"><a href="#234529" label="[23:45:29]">&lt;stikonas&gt;</a></span><span class="message">but some of it might be due to slower USB vs SSD...</span></div><div class="line" id="234553"><span class="nick" style="color:#234e69"><a href="#234553" label="[23:45:53]">&lt;fossy&gt;</a></span><span class="message">i suspect it's my usb then lol</span></div><div class="line" id="234602"><span class="nick" style="color:#6d2462"><a href="#234602" label="[23:46:02]">&lt;stikonas&gt;</a></span><span class="message">my USB is quite old too though</span></div><div class="line" id="234605"><span class="nick" style="color:#234e69"><a href="#234605" label="[23:46:05]">&lt;fossy&gt;</a></span><span class="message">i havent used this usb in at least a year</span></div><div class="line" id="234608"><span class="nick" style="color:#6d2462"><a href="#234608" label="[23:46:08]">&lt;stikonas&gt;</a></span><span class="message">I think I'm using something like 8 year old...</span></div><div class="line" id="234617"><span class="nick" style="color:#234e69"><a href="#234617" label="[23:46:17]">&lt;fossy&gt;</a></span><span class="message">this one is probably around the same age...</span></div><div class="line" id="234627"><span class="nick" style="color:#234e69"><a href="#234627" label="[23:46:27]">&lt;fossy&gt;</a></span><span class="message">i'll try the same usb on different hardware once this one finishes</span></div><div class="line" id="234631"><span class="nick" style="color:#6d2462"><a href="#234631" label="[23:46:31]">&lt;stikonas&gt;</a></span><span class="message">but it did get to hex1.efi?</span></div><div class="line" id="234642"><span class="nick" style="color:#234e69"><a href="#234642" label="[23:46:42]">&lt;fossy&gt;</a></span><span class="message">oh, yes, it's progressing, just with not very much speed at all :P</span></div><div class="line" id="234656"><span class="nick" style="color:#234e69"><a href="#234656" label="[23:46:56]">&lt;fossy&gt;</a></span><span class="message">i suspect the IOPS is garbage on this, it's just a generic nobrand usb</span></div><div class="line" id="234720"><span class="nick" style="color:#6d2462"><a href="#234720" label="[23:47:20]">&lt;stikonas&gt;</a></span><span class="message">I found UEFI has fairly low tollerance to bad bahaviour compared to Linux</span></div><div class="line" id="234742"><span class="nick" style="color:#6d2462"><a href="#234742" label="[23:47:42]">&lt;stikonas&gt;</a></span><span class="message">so if you don't follow the spec, chances are that UEFI would just crash</span></div><div class="line" id="234751"><span class="nick" style="color:#234e69"><a href="#234751" label="[23:47:51]">&lt;fossy&gt;</a></span><span class="message">yeah we haven't crashed (yet)</span></div><div class="line" id="234754"><span class="nick" style="color:#6d2462"><a href="#234754" label="[23:47:54]">&lt;stikonas&gt;</a></span><span class="message">but if it's running but slowly, then that's good</span></div><div class="line" id="234756"><span class="nick" style="color:#234e69"><a href="#234756" label="[23:47:56]">&lt;fossy&gt;</a></span><span class="message">i'll let you know the results</span></div><div class="line" id="234822"><span class="nick" style="color:#6d2462"><a href="#234822" label="[23:48:22]">&lt;stikonas&gt;</a></span><span class="message">if you are using the latest commit it should build up to posix-runner (though last one is not checksummed yet)</span></div><div class="line" id="235016"><span class="nick" style="color:#6d2462"><a href="#235016" label="[23:50:16]">&lt;stikonas&gt;</a></span><span class="message">if it's I/O, it might speed up a bit once full M2libc is used</span></div><div class="line" id="235021"><span class="nick" style="color:#6d2462"><a href="#235021" label="[23:50:21]">&lt;stikonas&gt;</a></span><span class="message">I think that one has better caching...</span></div><div class="line" id="235743"><span class="nick" style="color:#234e69"><a href="#235743" label="[23:57:43]">&lt;fossy&gt;</a></span><span class="message">yep i've got latest commit</span></div><br /></div></body></html>