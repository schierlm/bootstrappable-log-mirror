<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="004343"><span class="nick" style="color:#8dd3c7"><a href="#004343" label="[00:43:43]">&lt;fossy&gt;</a></span><span class="message">stikonas: are you using the makefile from the bzip2 project or no?</span></div><div class="line" id="004403"><span class="nick" style="color:#8dd3c7"><a href="#004403" label="[00:44:03]">&lt;fossy&gt;</a></span><span class="message">because there is no makefile checked into that commit...</span></div><div class="line" id="005258"><span class="nick" style="color:#2e2a4a"><a href="#005258" label="[00:52:58]">&lt;stikonas&gt;</a></span><span class="message">fossy: yes, bzip2 has makefile</span></div><div class="line" id="005312"><span class="nick" style="color:#2e2a4a"><a href="#005312" label="[00:53:12]">&lt;stikonas&gt;</a></span><span class="message">it's a proper makefile</span></div><div class="line" id="005318"><span class="nick" style="color:#2e2a4a"><a href="#005318" label="[00:53:18]">&lt;stikonas&gt;</a></span><span class="message">not autogenerated makefile</span></div><div class="line" id="005329"><span class="nick" style="color:#2e2a4a"><a href="#005329" label="[00:53:29]">&lt;stikonas&gt;</a></span><span class="message">I even patched it a bit in that patch</span></div><div class="line" id="010728"><span class="nick" style="color:#6b8072"><a href="#010728" label="[01:07:28]">&lt;Hagfish&gt;</a></span><span class="message">the LWN article has just come out of embargo, for those who didn't see it earlier: <a rel="nofollow" href="https://lwn.net/Articles/841797/">https://lwn.net/Articles/841797/</a> </span></div><div class="line" id="010912"><span class="nick" style="color:#8dd3c7"><a href="#010912" label="[01:09:12]">&lt;fossy&gt;</a></span><span class="message">stikonas: I see</span></div><div class="line" id="011002"><span class="nick" style="color:#80b1d3"><a href="#011002" label="[01:10:02]">&lt;xentrac&gt;</a></span><span class="message">thanks Hagfish!</span></div><div class="line" id="011005"><span class="nick" style="color:#8dd3c7"><a href="#011005" label="[01:10:05]">&lt;fossy&gt;</a></span><span class="message">I will not do the same thing for bash despite it being handwritten, as bashs makefile is much too complex as it uses things like install</span></div><div class="line" id="011011"><span class="nick" style="color:#8dd3c7"><a href="#011011" label="[01:10:11]">&lt;fossy&gt;</a></span><span class="message">and sh etc</span></div><div class="line" id="011233"><span class="nick" style="color:#2e2a4a"><a href="#011233" label="[01:12:33]">&lt;stikonas&gt;</a></span><span class="message">yeah, we don't have install yet</span></div><div class="line" id="011249"><span class="nick" style="color:#2e2a4a"><a href="#011249" label="[01:12:49]">&lt;stikonas&gt;</a></span><span class="message">fossy: I only build one target from that makefile in bzip2</span></div><div class="line" id="011357"><span class="nick" style="color:#2e2a4a"><a href="#011357" label="[01:13:57]">&lt;stikonas&gt;</a></span><span class="message">well, there is also bzip2recover but we definitely don't need it for bootstrapping</span></div><div class="line" id="011428"><span class="nick" style="color:#2e2a4a"><a href="#011428" label="[01:14:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: did you mention make binary is also non-functional?</span></div><div class="line" id="011435"><span class="nick" style="color:#2e2a4a"><a href="#011435" label="[01:14:35]">&lt;stikonas&gt;</a></span><span class="message">could it be the same problem as patch?</span></div><div class="line" id="011454"><span class="nick" style="color:#8dd3c7"><a href="#011454" label="[01:14:54]">&lt;fossy&gt;</a></span><span class="message">it was</span></div><div class="line" id="011459"><span class="nick" style="color:#8dd3c7"><a href="#011459" label="[01:14:59]">&lt;fossy&gt;</a></span><span class="message">i just fixed it I thini</span></div><div class="line" id="011514"><span class="nick" style="color:#8dd3c7"><a href="#011514" label="[01:15:14]">&lt;fossy&gt;</a></span><span class="message">bbl need to go so something irl</span></div><div class="line" id="011700"><span class="nick" style="color:#2e2a4a"><a href="#011700" label="[01:17:00]">&lt;stikonas&gt;</a></span><span class="message">sure :)</span></div><div class="line" id="012705"><span class="nick" style="color:#2e2a4a"><a href="#012705" label="[01:27:05]">&lt;stikonas&gt;</a></span><span class="message">oh, bash doesn't have tar.bz2 file. Well, in that case bash and bzip2 can be in any order...</span></div><div class="line" id="012716"><span class="nick" style="color:#2e2a4a"><a href="#012716" label="[01:27:16]">&lt;stikonas&gt;</a></span><span class="message">maybe it makes more sense to build bash first</span></div><div class="line" id="012726"><span class="nick" style="color:#2e2a4a"><a href="#012726" label="[01:27:26]">&lt;stikonas&gt;</a></span><span class="message">and get out of after.kaem.run file</span></div><div class="line" id="031836"><span class="nick" style="color:#6d2462"><a href="#031836" label="[03:18:36]">&lt;vagrantc&gt;</a></span><span class="message">weird, with mescc-tools 1.1.0 Kaem/test/test14/kaem.test fails amd64 and arm64 (i386 and armhf not yet tested) on the reproducible builds of debian test intrastructure: <a rel="nofollow" href="https://tests.reproducible-builds.org/debian/rb-pkg/unstable/arm64/mescc-tools.html">https://tests.reproducible-builds.org/debian/rb-pkg/unstable/arm64/mescc-tools.html</a>  but worked fine on debian's official build servers: <a rel="nofollow" href="https://buildd.debian.org/mescc-tools">https://buildd.debian.org/mescc-tools</a> </span></div><div class="line" id="032727"><span class="nick" style="color:#6d2462"><a href="#032727" label="[03:27:27]">&lt;vagrantc&gt;</a></span><span class="message">and of course, also worked for me when i uploaded, and several tests i've done now</span></div><div class="line" id="033953"><span class="nick" style="color:#6d2462"><a href="#033953" label="[03:39:53]">&lt;vagrantc&gt;</a></span><span class="message">main difference that seems like it might be relevent is the user's shell... but i can't reproduce it by changing the user's shell on my local builds</span></div><div class="line" id="035406"><span class="nick" style="color:#6d2462"><a href="#035406" label="[03:54:06]">&lt;vagrantc&gt;</a></span><span class="message">well, will have to follow up on mescc-tools another time ...</span></div><div class="line" id="035409"><span class="nick" style="color:#234e69"><a href="#035409" label="[03:54:09]">*</a></span><span class="message">vagrantc waves</span></div><div class="line" id="080249"><span class="nick" style="color:#6c3d55"><a href="#080249" label="[08:02:49]">&lt;gforce_d11977&gt;</a></span><span class="message">vagrantc: can you link to the build-fail/logfiles?</span></div><div class="line" id="101138"><span class="nick" style="color:#d9d9d9"><a href="#101138" label="[10:11:38]">&lt;bauen1&gt;</a></span><span class="message">xentrac: yup, it works, i never really changed the irssi default keybindings</span></div><div class="line" id="102248"><span class="nick" style="color:#80b1d3"><a href="#102248" label="[10:22:48]">&lt;xentrac&gt;</a></span><span class="message">yaay</span></div><div class="line" id="102445"><span class="nick" style="color:#8dd3c7"><a href="#102445" label="[10:24:45]">&lt;fossy&gt;</a></span><span class="message">jeez bash has a lot of files</span></div><div class="line" id="102550"><span class="nick" style="color:#d9d9d9"><a href="#102550" label="[10:25:50]">&lt;bauen1&gt;</a></span><span class="message">and requires so many different syscalls</span></div><div class="line" id="102608"><span class="nick" style="color:#d9d9d9"><a href="#102608" label="[10:26:08]">&lt;bauen1&gt;</a></span><span class="message">or rather libc functions</span></div><div class="line" id="102856"><span class="nick" style="color:#80b1d3"><a href="#102856" label="[10:28:56]">&lt;xentrac&gt;</a></span><span class="message">yeah</span></div><div class="line" id="104525"><span class="nick" style="color:#bc80bd"><a href="#104525" label="[10:45:25]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: how are you building bash?</span></div><div class="line" id="104844"><span class="nick" style="color:#8dd3c7"><a href="#104844" label="[10:48:44]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: makefile</span></div><div class="line" id="105154"><span class="nick" style="color:#2e2a4a"><a href="#105154" label="[10:51:54]">&lt;stikonas&gt;</a></span><span class="message">I think I'll use makefile too for m4...</span></div><div class="line" id="105245"><span class="nick" style="color:#2e2a4a"><a href="#105245" label="[10:52:45]">&lt;stikonas&gt;</a></span><span class="message">are you going to push make build first to live-bootstrap?</span></div><div class="line" id="105856"><span class="nick" style="color:#8dd3c7"><a href="#105856" label="[10:58:56]">&lt;fossy&gt;</a></span><span class="message">no i'll push it with bash</span></div><div class="line" id="105858"><span class="nick" style="color:#8dd3c7"><a href="#105858" label="[10:58:58]">&lt;fossy&gt;</a></span><span class="message">are you doing m4 now?</span></div><div class="line" id="110244"><span class="nick" style="color:#2e2a4a"><a href="#110244" label="[11:02:44]">&lt;stikonas&gt;</a></span><span class="message">later this evening</span></div><div class="line" id="111115"><span class="nick" style="color:#8dd3c7"><a href="#111115" label="[11:11:15]">&lt;fossy&gt;</a></span><span class="message">coolcool</span></div><div class="line" id="111328"><span class="nick" style="color:#2e2a4a"><a href="#111328" label="[11:13:28]">&lt;stikonas&gt;</a></span><span class="message">that's why I was wondering when make will be available :)</span></div><div class="line" id="112454"><span class="nick" style="color:#3c5b35"><a href="#112454" label="[11:24:54]">&lt;siraben&gt;</a></span><span class="message">fossy: would live-bootstrap work on macOS?</span></div><div class="line" id="113050"><span class="nick" style="color:#af8d2f"><a href="#113050" label="[11:30:50]">&lt;gforce_de1977&gt;</a></span><span class="message">siraben: at the moment i'am preparing am qemu-image for this task</span></div><div class="line" id="113052"><span class="nick" style="color:#2e2a4a"><a href="#113052" label="[11:30:52]">&lt;stikonas&gt;</a></span><span class="message">siraben: in qemu?</span></div><div class="line" id="113057"><span class="nick" style="color:#2e2a4a"><a href="#113057" label="[11:30:57]">&lt;stikonas&gt;</a></span><span class="message">it should</span></div><div class="line" id="113305"><span class="nick" style="color:#af8d2f"><a href="#113305" label="[11:33:05]">&lt;gforce_de1977&gt;</a></span><span class="message">(mainly for CI integration, e.g. a github action)</span></div><div class="line" id="113446"><span class="nick" style="color:#2e2a4a"><a href="#113446" label="[11:34:46]">&lt;stikonas&gt;</a></span><span class="message">more interesting and known to fail would be arm bootstrap...</span></div><div class="line" id="113731"><span class="nick" style="color:#af8d2f"><a href="#113731" label="[11:37:31]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: arm is ocourse an qemu-trget too</span></div><div class="line" id="113800"><span class="nick" style="color:#3c5b35"><a href="#113800" label="[11:38:00]">&lt;siraben&gt;</a></span><span class="message">fossy: macOS can run qemu as well</span></div><div class="line" id="113809"><span class="nick" style="color:#3c5b35"><a href="#113809" label="[11:38:09]">&lt;siraben&gt;</a></span><span class="message">yeah a github action would be nice</span></div><div class="line" id="113822"><span class="nick" style="color:#2e2a4a"><a href="#113822" label="[11:38:22]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: yeah, but I couldn't get any screen output on arm qemu...</span></div><div class="line" id="113845"><span class="nick" style="color:#2e2a4a"><a href="#113845" label="[11:38:45]">&lt;stikonas&gt;</a></span><span class="message">I've recompiled my arm kernel with some driver but that diddn't help</span></div><div class="line" id="113905"><span class="nick" style="color:#2e2a4a"><a href="#113905" label="[11:39:05]">&lt;stikonas&gt;</a></span><span class="message">for github action it might be simpler to use chroot build...</span></div><div class="line" id="113917"><span class="nick" style="color:#2e2a4a"><a href="#113917" label="[11:39:17]">&lt;stikonas&gt;</a></span><span class="message">then we don't have nested virtualization</span></div><div class="line" id="113933"><span class="nick" style="color:#2e2a4a"><a href="#113933" label="[11:39:33]">&lt;stikonas&gt;</a></span><span class="message">or maybe Docker container...</span></div><div class="line" id="113955"><span class="nick" style="color:#2e2a4a"><a href="#113955" label="[11:39:55]">&lt;stikonas&gt;</a></span><span class="message">in CI we wouldn't have KVM so qemu would be really slow</span></div><div class="line" id="114038"><span class="nick" style="color:#d9d9d9"><a href="#114038" label="[11:40:38]">&lt;bauen1&gt;</a></span><span class="message">stikonas: do you know if gitlab has KVM / nested virtualization for the public runners ?</span></div><div class="line" id="114047"><span class="nick" style="color:#8dd3c7"><a href="#114047" label="[11:40:47]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: look at my pr... i have started ci</span></div><div class="line" id="114049"><span class="nick" style="color:#2e2a4a"><a href="#114049" label="[11:40:49]">&lt;stikonas&gt;</a></span><span class="message">bauen1: nobody has</span></div><div class="line" id="114057"><span class="nick" style="color:#2e2a4a"><a href="#114057" label="[11:40:57]">&lt;stikonas&gt;</a></span><span class="message">bauen1: at least nothing free</span></div><div class="line" id="114125"><span class="nick" style="color:#2e2a4a"><a href="#114125" label="[11:41:25]">&lt;stikonas&gt;</a></span><span class="message">bauen1: on gitlab you can have you own runners, but then you need to host your own builder</span></div><div class="line" id="114135"><span class="nick" style="color:#8dd3c7"><a href="#114135" label="[11:41:35]">&lt;fossy&gt;</a></span><span class="message">what?</span></div><div class="line" id="114141"><span class="nick" style="color:#8dd3c7"><a href="#114141" label="[11:41:41]">&lt;fossy&gt;</a></span><span class="message">there is free gitlab ci</span></div><div class="line" id="114148"><span class="nick" style="color:#af8d2f"><a href="#114148" label="[11:41:48]">&lt;gforce_de1977&gt;</a></span><span class="message">nested virt is not needed, qemu can emulate all archs</span></div><div class="line" id="114149"><span class="nick" style="color:#2e2a4a"><a href="#114149" label="[11:41:49]">&lt;stikonas&gt;</a></span><span class="message">fossy: yes, but it runs in VM already</span></div><div class="line" id="114155"><span class="nick" style="color:#8dd3c7"><a href="#114155" label="[11:41:55]">&lt;fossy&gt;</a></span><span class="message">oh eyah</span></div><div class="line" id="114202"><span class="nick" style="color:#2e2a4a"><a href="#114202" label="[11:42:02]">&lt;stikonas&gt;</a></span><span class="message">yes, qemu can but it will be quite slow</span></div><div class="line" id="114206"><span class="nick" style="color:#8dd3c7"><a href="#114206" label="[11:42:06]">&lt;fossy&gt;</a></span><span class="message">gforce_de1977: nested virt is needed for it to run at any reasonable speed</span></div><div class="line" id="114207"><span class="nick" style="color:#2e2a4a"><a href="#114207" label="[11:42:07]">&lt;stikonas&gt;</a></span><span class="message">because it's real emulation</span></div><div class="line" id="114213"><span class="nick" style="color:#8dd3c7"><a href="#114213" label="[11:42:13]">&lt;fossy&gt;</a></span><span class="message">hence why if you look at my pr i am using cirrus ci</span></div><div class="line" id="114218"><span class="nick" style="color:#8dd3c7"><a href="#114218" label="[11:42:18]">&lt;fossy&gt;</a></span><span class="message">because they officially support nested kvm</span></div><div class="line" id="114221"><span class="nick" style="color:#2e2a4a"><a href="#114221" label="[11:42:21]">&lt;stikonas&gt;</a></span><span class="message">without kvm it's about 20 times slower</span></div><div class="line" id="114235"><span class="nick" style="color:#2e2a4a"><a href="#114235" label="[11:42:35]">&lt;stikonas&gt;</a></span><span class="message">but maybe something more lightweight is enough for CI?</span></div><div class="line" id="114243"><span class="nick" style="color:#2e2a4a"><a href="#114243" label="[11:42:43]">&lt;stikonas&gt;</a></span><span class="message">either chroot or docker</span></div><div class="line" id="114247"><span class="nick" style="color:#8dd3c7"><a href="#114247" label="[11:42:47]">&lt;fossy&gt;</a></span><span class="message">well now that we have chroot mode i'll adapt it to use that</span></div><div class="line" id="114250"><span class="nick" style="color:#2e2a4a"><a href="#114250" label="[11:42:50]">&lt;stikonas&gt;</a></span><span class="message">those are widely available</span></div><div class="line" id="114254"><span class="nick" style="color:#8dd3c7"><a href="#114254" label="[11:42:54]">&lt;fossy&gt;</a></span><span class="message">anyway make is working welll so i will push it</span></div><div class="line" id="114301"><span class="nick" style="color:#2e2a4a"><a href="#114301" label="[11:43:01]">&lt;stikonas&gt;</a></span><span class="message">ok, nice!</span></div><div class="line" id="114746"><span class="nick" style="color:#8dd3c7"><a href="#114746" label="[11:47:46]">&lt;fossy&gt;</a></span><span class="message">pushed</span></div><div class="line" id="114810"><span class="nick" style="color:#8dd3c7"><a href="#114810" label="[11:48:10]">&lt;fossy&gt;</a></span><span class="message">also, FWIW, stikonas this is my current bash makefile, if you want to draw inspiration at all</span></div><div class="line" id="114812"><span class="nick" style="color:#8dd3c7"><a href="#114812" label="[11:48:12]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://ttm.sh/dMc.txt">https://ttm.sh/dMc.txt</a> </span></div><div class="line" id="114921"><span class="nick" style="color:#2e2a4a"><a href="#114921" label="[11:49:21]">&lt;stikonas&gt;</a></span><span class="message">sure, thanks</span></div><div class="line" id="114939"><span class="nick" style="color:#2e2a4a"><a href="#114939" label="[11:49:39]">&lt;stikonas&gt;</a></span><span class="message">ok, makes sense</span></div><div class="line" id="115001"><span class="nick" style="color:#2e2a4a"><a href="#115001" label="[11:50:01]">&lt;stikonas&gt;</a></span><span class="message">m4 will be quite a bit shorter</span></div><div class="line" id="115234"><span class="nick" style="color:#8dd3c7"><a href="#115234" label="[11:52:34]">&lt;fossy&gt;</a></span><span class="message">^-^ i should hope so, lol</span></div><div class="line" id="115243"><span class="nick" style="color:#8dd3c7"><a href="#115243" label="[11:52:43]">&lt;fossy&gt;</a></span><span class="message">Hm, does anyone remember who boootstrap bison</span></div><div class="line" id="115305"><span class="nick" style="color:#2e2a4a"><a href="#115305" label="[11:53:05]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe you can have simpler list for all those objects and append extention/folder using make functions?</span></div><div class="line" id="115317"><span class="nick" style="color:#2e2a4a"><a href="#115317" label="[11:53:17]">&lt;stikonas&gt;</a></span><span class="message">so then you just have a list of files</span></div><div class="line" id="115326"><span class="nick" style="color:#2e2a4a"><a href="#115326" label="[11:53:26]">&lt;stikonas&gt;</a></span><span class="message">anyway, i'll try that with m4 first</span></div><div class="line" id="115358"><span class="nick" style="color:#2e2a4a"><a href="#115358" label="[11:53:58]">&lt;stikonas&gt;</a></span><span class="message">hmm, bison is used by gcc?</span></div><div class="line" id="115416"><span class="nick" style="color:#2e2a4a"><a href="#115416" label="[11:54:16]">&lt;stikonas&gt;</a></span><span class="message">or is it also needed by autotools</span></div><div class="line" id="115439"><span class="nick" style="color:#2e2a4a"><a href="#115439" label="[11:54:39]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/giomasce/bison-bootstrap">https://gitlab.com/giomasce/bison-bootstrap</a> </span></div><div class="line" id="115518"><span class="nick" style="color:#2e2a4a"><a href="#115518" label="[11:55:18]">&lt;stikonas&gt;</a></span><span class="message">so gio solved it</span></div><div class="line" id="115640"><span class="nick" style="color:#8dd3c7"><a href="#115640" label="[11:56:40]">&lt;fossy&gt;</a></span><span class="message">stikonas: no curently unrelated to live-bootstrap, just wondering who did it</span></div><div class="line" id="115720"><span class="nick" style="color:#8dd3c7"><a href="#115720" label="[11:57:20]">&lt;fossy&gt;</a></span><span class="message">stikonas: plan to get to that at some point, but wasn't bothered at the time of making the list</span></div><div class="line" id="115736"><span class="nick" style="color:#8dd3c7"><a href="#115736" label="[11:57:36]">&lt;fossy&gt;</a></span><span class="message">if you come up with something for m4 i'll apply that</span></div><div class="line" id="115742"><span class="nick" style="color:#8dd3c7"><a href="#115742" label="[11:57:42]">&lt;fossy&gt;</a></span><span class="message">otherwise i'll make my own make rule for that</span></div><div class="line" id="115930"><span class="nick" style="color:#2e2a4a"><a href="#115930" label="[11:59:30]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah, I'll try to write something this evening before you wake up</span></div><div class="line" id="120159"><span class="nick" style="color:#8dd3c7"><a href="#120159" label="[12:01:59]">&lt;fossy&gt;</a></span><span class="message">grr. bison depends on flex which uses bison to generate something else :(</span></div><div class="line" id="120514"><span class="nick" style="color:#2e2a4a"><a href="#120514" label="[12:05:14]">&lt;stikonas&gt;</a></span><span class="message">well, I guess that's why gio write his code...</span></div><div class="line" id="120524"><span class="nick" style="color:#2e2a4a"><a href="#120524" label="[12:05:24]">&lt;stikonas&gt;</a></span><span class="message">well, autotools is the same...</span></div><div class="line" id="120532"><span class="nick" style="color:#2e2a4a"><a href="#120532" label="[12:05:32]">&lt;stikonas&gt;</a></span><span class="message">they depend on autotools to build</span></div><div class="line" id="120731"><span class="nick" style="color:#389600"><a href="#120731" label="[12:07:31]">&lt;gio&gt;</a></span><span class="message">stikonas: You can build bison without autotools, manually calling gcc.</span></div><div class="line" id="120738"><span class="nick" style="color:#389600"><a href="#120738" label="[12:07:38]">&lt;gio&gt;</a></span><span class="message">It's not beautiful, but you can do it.</span></div><div class="line" id="120806"><span class="nick" style="color:#2e2a4a"><a href="#120806" label="[12:08:06]">&lt;stikonas&gt;</a></span><span class="message">gio: we'll have autotools before</span></div><div class="line" id="120826"><span class="nick" style="color:#389600"><a href="#120826" label="[12:08:26]">&lt;gio&gt;</a></span><span class="message">Ok, great.</span></div><div class="line" id="120828"><span class="nick" style="color:#2e2a4a"><a href="#120828" label="[12:08:28]">&lt;stikonas&gt;</a></span><span class="message">we we manually calling tcc for evrything up to now, but we have now bootstrapped make</span></div><div class="line" id="120833"><span class="nick" style="color:#2e2a4a"><a href="#120833" label="[12:08:33]">&lt;stikonas&gt;</a></span><span class="message">so now it's manual makefiles</span></div><div class="line" id="120841"><span class="nick" style="color:#2e2a4a"><a href="#120841" label="[12:08:41]">&lt;stikonas&gt;</a></span><span class="message">which is a bit more powerful</span></div><div class="line" id="120842"><span class="nick" style="color:#389600"><a href="#120842" label="[12:08:42]">&lt;gio&gt;</a></span><span class="message">Same thing I did for nbs: <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/">https://gitlab.com/giomasce/nbs/</a> </span></div><div class="line" id="121742"><span class="nick" style="color:#8dd3c7"><a href="#121742" label="[12:17:42]">&lt;fossy&gt;</a></span><span class="message">gio: your statement that &quot;it is possible</span></div><div class="line" id="121745"><span class="nick" style="color:#8dd3c7"><a href="#121745" label="[12:17:45]">&lt;fossy&gt;</a></span><span class="message">to compile Flex without using Bison</span></div><div class="line" id="121747"><span class="nick" style="color:#8dd3c7"><a href="#121747" label="[12:17:47]">&lt;fossy&gt;</a></span><span class="message">&quot;</span></div><div class="line" id="121752"><span class="nick" style="color:#8dd3c7"><a href="#121752" label="[12:17:52]">&lt;fossy&gt;</a></span><span class="message">is not true unless you use a pregenerated file</span></div><div class="line" id="121759"><span class="nick" style="color:#8dd3c7"><a href="#121759" label="[12:17:59]">&lt;fossy&gt;</a></span><span class="message">as per included with a source distribution</span></div><div class="line" id="122309"><span class="nick" style="color:#389600"><a href="#122309" label="[12:23:09]">&lt;gio&gt;</a></span><span class="message">I do that in nbs, using stuff from the Heirloom project.</span></div><div class="line" id="122326"><span class="nick" style="color:#389600"><a href="#122326" label="[12:23:26]">&lt;gio&gt;</a></span><span class="message">It requires some more steps, but it can be done.</span></div><div class="line" id="122334"><span class="nick" style="color:#389600"><a href="#122334" label="[12:23:34]">&lt;gio&gt;</a></span><span class="message">See the README: <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/">https://gitlab.com/giomasce/nbs/</a> </span></div><div class="line" id="122530"><span class="nick" style="color:#8dd3c7"><a href="#122530" label="[12:25:30]">&lt;fossy&gt;</a></span><span class="message">hm, heirloom project.....</span></div><div class="line" id="122539"><span class="nick" style="color:#389600"><a href="#122539" label="[12:25:39]">&lt;gio&gt;</a></span><span class="message">In nbs only binary stuff available at the beginning is tinycc and musl. Everything else cames in source form, unless something slipped though. Let me know if you see anything autogenerated in nbs.</span></div><div class="line" id="122539"><span class="nick" style="color:#8dd3c7"><a href="#122539" label="[12:25:39]">&lt;fossy&gt;</a></span><span class="message">this looks quite useful</span></div><div class="line" id="122547"><span class="nick" style="color:#389600"><a href="#122547" label="[12:25:47]">&lt;gio&gt;</a></span><span class="message">It definitely is.</span></div><div class="line" id="122610"><span class="nick" style="color:#8dd3c7"><a href="#122610" label="[12:26:10]">&lt;fossy&gt;</a></span><span class="message">i'm working on something similar and stikonas has provided a lot of help, <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap">https://github.com/fosslinux/live-bootstrap</a>,  readme is in progress</span></div><div class="line" id="122703"><span class="nick" style="color:#2e2a4a"><a href="#122703" label="[12:27:03]">&lt;stikonas&gt;</a></span><span class="message">gio: so we only have any posix kernel (for now linux), hex0 (357 bytes) and kaem shell (753 bytes)</span></div><div class="line" id="122710"><span class="nick" style="color:#389600"><a href="#122710" label="[12:27:10]">&lt;gio&gt;</a></span><span class="message">Hairloom might probably give you a lot of shortcuts.</span></div><div class="line" id="122720"><span class="nick" style="color:#8dd3c7"><a href="#122720" label="[12:27:20]">&lt;fossy&gt;</a></span><span class="message">yeah.</span></div><div class="line" id="122742"><span class="nick" style="color:#2e2a4a"><a href="#122742" label="[12:27:42]">&lt;stikonas&gt;</a></span><span class="message">and this point we have tcc/tar/gzip/make/diff/patch/sed</span></div><div class="line" id="122748"><span class="nick" style="color:#389600"><a href="#122748" label="[12:27:48]">&lt;gio&gt;</a></span><span class="message">What is your first compiler?</span></div><div class="line" id="122753"><span class="nick" style="color:#2e2a4a"><a href="#122753" label="[12:27:53]">&lt;stikonas&gt;</a></span><span class="message">gio: hex0</span></div><div class="line" id="122753"><span class="nick" style="color:#8dd3c7"><a href="#122753" label="[12:27:53]">&lt;fossy&gt;</a></span><span class="message">um</span></div><div class="line" id="122759"><span class="nick" style="color:#8dd3c7"><a href="#122759" label="[12:27:59]">&lt;fossy&gt;</a></span><span class="message">well yeah</span></div><div class="line" id="122805"><span class="nick" style="color:#389600"><a href="#122805" label="[12:28:05]">&lt;gio&gt;</a></span><span class="message">What is your first real compiler?</span></div><div class="line" id="122809"><span class="nick" style="color:#8dd3c7"><a href="#122809" label="[12:28:09]">&lt;fossy&gt;</a></span><span class="message">if you call hex0 a compiler</span></div><div class="line" id="122811"><span class="nick" style="color:#2e2a4a"><a href="#122811" label="[12:28:11]">&lt;stikonas&gt;</a></span><span class="message">cc_x86?</span></div><div class="line" id="122813"><span class="nick" style="color:#8dd3c7"><a href="#122813" label="[12:28:13]">&lt;fossy&gt;</a></span><span class="message">M2-Planet? mescc?</span></div><div class="line" id="122815"><span class="nick" style="color:#2e2a4a"><a href="#122815" label="[12:28:15]">&lt;stikonas&gt;</a></span><span class="message">I guess</span></div><div class="line" id="122816"><span class="nick" style="color:#8dd3c7"><a href="#122816" label="[12:28:16]">&lt;fossy&gt;</a></span><span class="message">tcc?</span></div><div class="line" id="122832"><span class="nick" style="color:#2e2a4a"><a href="#122832" label="[12:28:32]">&lt;stikonas&gt;</a></span><span class="message">well, tcc is first fairly powerful compiler</span></div><div class="line" id="122851"><span class="nick" style="color:#389600"><a href="#122851" label="[12:28:51]">&lt;gio&gt;</a></span><span class="message">In other words, what do you &quot;compile&quot; with hex0?</span></div><div class="line" id="122905"><span class="nick" style="color:#8dd3c7"><a href="#122905" label="[12:29:05]">&lt;fossy&gt;</a></span><span class="message">gio: well it just goes through mescc-tools-seed to start off with</span></div><div class="line" id="122913"><span class="nick" style="color:#2e2a4a"><a href="#122913" label="[12:29:13]">&lt;stikonas&gt;</a></span><span class="message">another hex assembler: hex1, then hex2, then cc_x86</span></div><div class="line" id="122931"><span class="nick" style="color:#2e2a4a"><a href="#122931" label="[12:29:31]">&lt;stikonas&gt;</a></span><span class="message">cc_x86 then builds M-2 Planet which is the first compiler in C</span></div><div class="line" id="122946"><span class="nick" style="color:#2e2a4a"><a href="#122946" label="[12:29:46]">&lt;stikonas&gt;</a></span><span class="message">cc_x86 is C compiler in hex2 assembly</span></div><div class="line" id="122948"><span class="nick" style="color:#8dd3c7"><a href="#122948" label="[12:29:48]">&lt;fossy&gt;</a></span><span class="message">then it uses janneke's wip-m2 of GNU Mes to compile Mes using M2-Planet, then uses MesCC to compile TinyCC and then we move on</span></div><div class="line" id="123006"><span class="nick" style="color:#389600"><a href="#123006" label="[12:30:06]">&lt;gio&gt;</a></span><span class="message">So, you consider this to be source code? <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed/blob/0e6d8d6d3f261b550af1768b767f66b30fd07854/x86/cc_x86.M1">https://github.com/oriansj/mescc-tools-seed/blob/0e6d8d6d3f261b550af1768b767f66b30fd07854/x86/cc_x86.M1</a> </span></div><div class="line" id="123029"><span class="nick" style="color:#8dd3c7"><a href="#123029" label="[12:30:29]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="123032"><span class="nick" style="color:#8dd3c7"><a href="#123032" label="[12:30:32]">&lt;fossy&gt;</a></span><span class="message">it was hand written</span></div><div class="line" id="123050"><span class="nick" style="color:#8dd3c7"><a href="#123050" label="[12:30:50]">&lt;fossy&gt;</a></span><span class="message">abliet hard to read without appropriate background, but that's low-level assembly</span></div><div class="line" id="123057"><span class="nick" style="color:#2e2a4a"><a href="#123057" label="[12:30:57]">&lt;stikonas&gt;</a></span><span class="message">and fairly well commented</span></div><div class="line" id="123136"><span class="nick" style="color:#389600"><a href="#123136" label="[12:31:36]">&lt;gio&gt;</a></span><span class="message">Ok, I think I still prefer my path through asmg.</span></div><div class="line" id="123144"><span class="nick" style="color:#8dd3c7"><a href="#123144" label="[12:31:44]">&lt;fossy&gt;</a></span><span class="message">yeah i like asmg a lot too</span></div><div class="line" id="123148"><span class="nick" style="color:#8dd3c7"><a href="#123148" label="[12:31:48]">&lt;fossy&gt;</a></span><span class="message">asmc*</span></div><div class="line" id="123153"><span class="nick" style="color:#8dd3c7"><a href="#123153" label="[12:31:53]">&lt;rain1&gt;</a></span><span class="message">same!</span></div><div class="line" id="123158"><span class="nick" style="color:#8dd3c7"><a href="#123158" label="[12:31:58]">&lt;rain1&gt;</a></span><span class="message">it's absolutely amazing!</span></div><div class="line" id="123306"><span class="nick" style="color:#389600"><a href="#123306" label="[12:33:06]">&lt;gio&gt;</a></span><span class="message">(not to dismiss your effort, of course, everything is good; it's just that I don't completely agree your count of 357+753, as it leaves out a lot of other not-really-easy-to-check stuff)</span></div><div class="line" id="123314"><span class="nick" style="color:#8dd3c7"><a href="#123314" label="[12:33:14]">&lt;fossy&gt;</a></span><span class="message">oh, of course</span></div><div class="line" id="123330"><span class="nick" style="color:#8dd3c7"><a href="#123330" label="[12:33:30]">&lt;fossy&gt;</a></span><span class="message">the linux kernel is much too large for an end project</span></div><div class="line" id="123341"><span class="nick" style="color:#8dd3c7"><a href="#123341" label="[12:33:41]">&lt;fossy&gt;</a></span><span class="message">i kinda want to implement asmc as an alternative starting point</span></div><div class="line" id="123358"><span class="nick" style="color:#8dd3c7"><a href="#123358" label="[12:33:58]">&lt;fossy&gt;</a></span><span class="message">because it is &quot;around 15KB&quot;</span></div><div class="line" id="123412"><span class="nick" style="color:#8dd3c7"><a href="#123412" label="[12:34:12]">&lt;fossy&gt;</a></span><span class="message">and M1/M0/hex* is not all that easy to verify</span></div><div class="line" id="123444"><span class="nick" style="color:#8dd3c7"><a href="#123444" label="[12:34:44]">&lt;rain1&gt;</a></span><span class="message">that's a great idea</span></div><div class="line" id="123514"><span class="nick" style="color:#389600"><a href="#123514" label="[12:35:14]">&lt;gio&gt;</a></span><span class="message">I believe that Linux kernel would not be far from the reach from asmg, it I had time to spend on that. And maybe eventually I will have some, but not now.</span></div><div class="line" id="123540"><span class="nick" style="color:#389600"><a href="#123540" label="[12:35:40]">&lt;gio&gt;</a></span><span class="message">Linux is not that complicated; there are some linker shenanigans and some assembler syntax that tcc doesn't handle, but that's all.</span></div><div class="line" id="123554"><span class="nick" style="color:#8dd3c7"><a href="#123554" label="[12:35:54]">&lt;fossy&gt;</a></span><span class="message">gio: theoretically, it would be possible to run asmc from a floppy right?</span></div><div class="line" id="123655"><span class="nick" style="color:#389600"><a href="#123655" label="[12:36:55]">&lt;gio&gt;</a></span><span class="message">It's possible, depends on whether you can fit the source code it needs on it. Eventually it boots iPXE, so at that point it can fetch further code from the network.</span></div><div class="line" id="123715"><span class="nick" style="color:#8dd3c7"><a href="#123715" label="[12:37:15]">&lt;fossy&gt;</a></span><span class="message">is that required?</span></div><div class="line" id="123718"><span class="nick" style="color:#8dd3c7"><a href="#123718" label="[12:37:18]">&lt;fossy&gt;</a></span><span class="message">(iPXE)?</span></div><div class="line" id="123821"><span class="nick" style="color:#389600"><a href="#123821" label="[12:38:21]">&lt;gio&gt;</a></span><span class="message">Not necessarily; for the moment it is the most Linux-like thing it is able to compile, and it was basically an exercise for me to show that something Linux-like could be compiled at boot time, without directly attacking Linux.</span></div><div class="line" id="123831"><span class="nick" style="color:#8dd3c7"><a href="#123831" label="[12:38:31]">&lt;fossy&gt;</a></span><span class="message">right, i see</span></div><div class="line" id="123855"><span class="nick" style="color:#389600"><a href="#123855" label="[12:38:55]">&lt;gio&gt;</a></span><span class="message">If you manage to compile Linux-with-network (hard) and a stupid HTTP client (easy), you don't really care for iPXE.</span></div><div class="line" id="123941"><span class="nick" style="color:#389600"><a href="#123941" label="[12:39:41]">&lt;gio&gt;</a></span><span class="message">So if you can pack asmg (very little), the C compiler in G (quite little), tinycc and enough of Linux source code on a floppy, there you are.</span></div><div class="line" id="123949"><span class="nick" style="color:#8dd3c7"><a href="#123949" label="[12:39:49]">&lt;fossy&gt;</a></span><span class="message">yea</span></div><div class="line" id="123953"><span class="nick" style="color:#2e2a4a"><a href="#123953" label="[12:39:53]">&lt;stikonas&gt;</a></span><span class="message">well, if we can compile linux without network,  and have a bit more space, we can easily compile linux with network</span></div><div class="line" id="124001"><span class="nick" style="color:#389600"><a href="#124001" label="[12:40:01]">&lt;gio&gt;</a></span><span class="message">So far I did my experiments with hard disks, but it doesn't change much.</span></div><div class="line" id="124027"><span class="nick" style="color:#2e2a4a"><a href="#124027" label="[12:40:27]">&lt;stikonas&gt;</a></span><span class="message">and I don't have floppy drive at home...</span></div><div class="line" id="124028"><span class="nick" style="color:#389600"><a href="#124028" label="[12:40:28]">&lt;gio&gt;</a></span><span class="message">stikonas: Yes, the hard part is Linux itself. Especially the linking and loading part.</span></div><div class="line" id="124101"><span class="nick" style="color:#8dd3c7"><a href="#124101" label="[12:41:01]">&lt;fossy&gt;</a></span><span class="message">gio, afaict, asmc does not have a libc involved, is this true?</span></div><div class="line" id="124102"><span class="nick" style="color:#389600"><a href="#124102" label="[12:41:02]">&lt;gio&gt;</a></span><span class="message">There is actually nothing intrinsically difficult, it's just a few linker magic that you have to unwind and implement your way.</span></div><div class="line" id="124110"><span class="nick" style="color:#389600"><a href="#124110" label="[12:41:10]">&lt;gio&gt;</a></span><span class="message">fossy: No, it doesn't.</span></div><div class="line" id="124118"><span class="nick" style="color:#8dd3c7"><a href="#124118" label="[12:41:18]">&lt;fossy&gt;</a></span><span class="message">cool</span></div><div class="line" id="124134"><span class="nick" style="color:#2e2a4a"><a href="#124134" label="[12:41:34]">&lt;stikonas&gt;</a></span><span class="message">well, you only need libc one you have kernel</span></div><div class="line" id="124145"><span class="nick" style="color:#2e2a4a"><a href="#124145" label="[12:41:45]">&lt;stikonas&gt;</a></span><span class="message">and even then you can do syscalls directly...</span></div><div class="line" id="124223"><span class="nick" style="color:#2e2a4a"><a href="#124223" label="[12:42:23]">&lt;stikonas&gt;</a></span><span class="message">we can definitly look at this once we are done with curent live-bootstrap</span></div><div class="line" id="124226"><span class="nick" style="color:#389600"><a href="#124226" label="[12:42:26]">&lt;gio&gt;</a></span><span class="message">stikonas: Yes, although at some point you'll want to have an actual libc anyway, and that might be a tad more difficult (unless you've already solved this with live-bootstrap).</span></div><div class="line" id="124239"><span class="nick" style="color:#8dd3c7"><a href="#124239" label="[12:42:39]">&lt;fossy&gt;</a></span><span class="message">Mes LibC is what we currently use</span></div><div class="line" id="124248"><span class="nick" style="color:#389600"><a href="#124248" label="[12:42:48]">&lt;gio&gt;</a></span><span class="message">Once you have tinycc and musl, you can start back from nbs, in my plans.</span></div><div class="line" id="124257"><span class="nick" style="color:#2e2a4a"><a href="#124257" label="[12:42:57]">&lt;stikonas&gt;</a></span><span class="message">we didn't get musl yet...</span></div><div class="line" id="124259"><span class="nick" style="color:#389600"><a href="#124259" label="[12:42:59]">&lt;gio&gt;</a></span><span class="message">Or from live-bootstrap if you can join there.</span></div><div class="line" id="124301"><span class="nick" style="color:#8dd3c7"><a href="#124301" label="[12:43:01]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/janneke/mes/-/tree/master/lib">https://gitlab.com/janneke/mes/-/tree/master/lib</a> </span></div><div class="line" id="124306"><span class="nick" style="color:#2e2a4a"><a href="#124306" label="[12:43:06]">&lt;stikonas&gt;</a></span><span class="message">might go for glibc directly</span></div><div class="line" id="124312"><span class="nick" style="color:#389600"><a href="#124312" label="[12:43:12]">&lt;gio&gt;</a></span><span class="message">Yeah, libc's are hard...</span></div><div class="line" id="124340"><span class="nick" style="color:#389600"><a href="#124340" label="[12:43:40]">&lt;gio&gt;</a></span><span class="message">I find them hader than kernels.</span></div><div class="line" id="124343"><span class="nick" style="color:#8dd3c7"><a href="#124343" label="[12:43:43]">&lt;fossy&gt;</a></span><span class="message">kinda following guix's bootstrpaping route to a full toolchain in live bootstrap rn but filling in holes like autotools</span></div><div class="line" id="124344"><span class="nick" style="color:#389600"><a href="#124344" label="[12:43:44]">&lt;gio&gt;</a></span><span class="message">*harder</span></div><div class="line" id="124349"><span class="nick" style="color:#2e2a4a"><a href="#124349" label="[12:43:49]">&lt;stikonas&gt;</a></span><span class="message">musl is probably possible but need some patching to build with tcc</span></div><div class="line" id="124411"><span class="nick" style="color:#2e2a4a"><a href="#124411" label="[12:44:11]">&lt;stikonas&gt;</a></span><span class="message">and holes like smaller driver</span></div><div class="line" id="124430"><span class="nick" style="color:#2e2a4a"><a href="#124430" label="[12:44:30]">&lt;stikonas&gt;</a></span><span class="message">guix is now using 50 MB driver to drive 357 byte hex0</span></div><div class="line" id="124446"><span class="nick" style="color:#389600"><a href="#124446" label="[12:44:46]">&lt;gio&gt;</a></span><span class="message">What is a driver here?</span></div><div class="line" id="124451"><span class="nick" style="color:#2e2a4a"><a href="#124451" label="[12:44:51]">&lt;stikonas&gt;</a></span><span class="message">gio: guile</span></div><div class="line" id="124458"><span class="nick" style="color:#2e2a4a"><a href="#124458" label="[12:44:58]">&lt;stikonas&gt;</a></span><span class="message">it's scripting engine</span></div><div class="line" id="124500"><span class="nick" style="color:#389600"><a href="#124500" label="[12:45:00]">&lt;gio&gt;</a></span><span class="message">Ok.</span></div><div class="line" id="124506"><span class="nick" style="color:#2e2a4a"><a href="#124506" label="[12:45:06]">&lt;stikonas&gt;</a></span><span class="message">I mean like bash</span></div><div class="line" id="124512"><span class="nick" style="color:#2e2a4a"><a href="#124512" label="[12:45:12]">&lt;stikonas&gt;</a></span><span class="message">something to automate bootstrap</span></div><div class="line" id="124525"><span class="nick" style="color:#2e2a4a"><a href="#124525" label="[12:45:25]">&lt;stikonas&gt;</a></span><span class="message">(drives the whole thing)</span></div><div class="line" id="124531"><span class="nick" style="color:#2e2a4a"><a href="#124531" label="[12:45:31]">&lt;stikonas&gt;</a></span><span class="message">not driver as in hardware driver</span></div><div class="line" id="124613"><span class="nick" style="color:#2e2a4a"><a href="#124613" label="[12:46:13]">&lt;stikonas&gt;</a></span><span class="message">so in guix guile prepares build environment and also runs some tools (gash, bootar, etc)</span></div><div class="line" id="124619"><span class="nick" style="color:#2e2a4a"><a href="#124619" label="[12:46:19]">&lt;stikonas&gt;</a></span><span class="message">we don't have that in live-bootstrap</span></div><div class="line" id="124631"><span class="nick" style="color:#2e2a4a"><a href="#124631" label="[12:46:31]">&lt;stikonas&gt;</a></span><span class="message">although, tar is already done, and bash is almost done</span></div><div class="line" id="140244"><span class="nick" style="color:#2e2a4a"><a href="#140244" label="[14:02:44]">&lt;civodul&gt;</a></span><span class="message">stikonas: that's a temporary situation though</span></div><div class="line" id="140300"><span class="nick" style="color:#2e2a4a"><a href="#140300" label="[14:03:00]">&lt;civodul&gt;</a></span><span class="message">(plus nobody's done any better, right? :-))</span></div><div class="line" id="140534"><span class="nick" style="color:#2e2a4a"><a href="#140534" label="[14:05:34]">&lt;stikonas&gt;</a></span><span class="message">civodul: well, our live-bootstrap will be doing better, but if you talk about distros, then yes</span></div><div class="line" id="140554"><span class="nick" style="color:#2e2a4a"><a href="#140554" label="[14:05:54]">&lt;stikonas&gt;</a></span><span class="message">no distro is doing better than guix</span></div><div class="line" id="140644"><span class="nick" style="color:#2e2a4a"><a href="#140644" label="[14:06:44]">&lt;civodul&gt;</a></span><span class="message">nice, i didn't know about live-bootstrap</span></div><div class="line" id="140742"><span class="nick" style="color:#2e2a4a"><a href="#140742" label="[14:07:42]">&lt;civodul&gt;</a></span><span class="message">reminds me of an experiment we did at the RB summit last year: <a rel="nofollow" href="https://guix.gnu.org/en/blog/2019/reproducible-builds-summit-5th-edition/">https://guix.gnu.org/en/blog/2019/reproducible-builds-summit-5th-edition/</a>  (under &quot;Extreme Bootstrapping&quot;)</span></div><div class="line" id="140815"><span class="nick" style="color:#2e2a4a"><a href="#140815" label="[14:08:15]">&lt;civodul&gt;</a></span><span class="message">we didn't pursue it, but the idea was to &quot;unfold&quot; the operations normally performed by the Guix build daemon &amp; co.</span></div><div class="line" id="140844"><span class="nick" style="color:#2e2a4a"><a href="#140844" label="[14:08:44]">&lt;civodul&gt;</a></span><span class="message">so you would boot a system that starts building from scratch the package graph</span></div><div class="line" id="140956"><span class="nick" style="color:#d9d9d9"><a href="#140956" label="[14:09:56]">&lt;bauen1&gt;</a></span><span class="message">in theory every distribution should be interested in bootstrapping, if only as a way of breaking cyclic dependencies that are annoying to deal with</span></div><div class="line" id="141309"><span class="nick" style="color:#2e2a4a"><a href="#141309" label="[14:13:09]">&lt;civodul&gt;</a></span><span class="message">yeah</span></div><div class="line" id="141358"><span class="nick" style="color:#d9d9d9"><a href="#141358" label="[14:13:58]">&lt;bauen1&gt;</a></span><span class="message">is there maybe some more up-to date information on debian bootstrapping than <a rel="nofollow" href="https://wiki.debian.org/DebianBootstrap">https://wiki.debian.org/DebianBootstrap</a>  ?</span></div><div class="line" id="141737"><span class="nick" style="color:#2e2a4a"><a href="#141737" label="[14:17:37]">&lt;stikonas&gt;</a></span><span class="message">civodul: yeah, for now we use linux kernel, hex0 and kaem</span></div><div class="line" id="141800"><span class="nick" style="color:#2e2a4a"><a href="#141800" label="[14:18:00]">&lt;stikonas&gt;</a></span><span class="message">so a bit lower level than guix-daemon</span></div><div class="line" id="141924"><span class="nick" style="color:#6b8072"><a href="#141924" label="[14:19:24]">&lt;pabs3&gt;</a></span><span class="message">bauen1: this is probably a better link <a rel="nofollow" href="https://wiki.debian.org/HelmutGrohne/rebootstrap">https://wiki.debian.org/HelmutGrohne/rebootstrap</a> </span></div><div class="line" id="142004"><span class="nick" style="color:#6b8072"><a href="#142004" label="[14:20:04]">&lt;pabs3&gt;</a></span><span class="message">(CI for cross-bootstrap stuff)</span></div><div class="line" id="143248"><span class="nick" style="color:#af8d2f"><a href="#143248" label="[14:32:48]">&lt;gforce_de1977&gt;</a></span><span class="message"> </span></div><div class="line" id="145103"><span class="nick" style="color:#d9d9d9"><a href="#145103" label="[14:51:03]">&lt;bauen1&gt;</a></span><span class="message">pabs3: thanks</span></div><div class="line" id="161145"><span class="nick" style="color:#80b1d3"><a href="#161145" label="[16:11:45]">&lt;janneke&gt;</a></span><span class="message">stikonas: the guile-2.0 driver is much smaller than 50MB (although still huge0</span></div><div class="line" id="161157"><span class="nick" style="color:#80b1d3"><a href="#161157" label="[16:11:57]">&lt;janneke&gt;</a></span><span class="message">du -sh $(guix build -e '(@@ (gnu packages bootstrap) %bootstrap-guile)')</span></div><div class="line" id="161157"><span class="nick" style="color:#80b1d3"><a href="#161157" label="[16:11:57]">&lt;janneke&gt;</a></span><span class="message">14M	/gnu/store/lgi9x15a0w35mcpd7g1kb9274r6wy4pv-guile-bootstrap-2.0</span></div><div class="line" id="161318"><span class="nick" style="color:#2e2a4a"><a href="#161318" label="[16:13:18]">&lt;stikonas&gt;</a></span><span class="message">yeah, I guess I didn't remember it correctly...</span></div><div class="line" id="161435"><span class="nick" style="color:#2e2a4a"><a href="#161435" label="[16:14:35]">&lt;stikonas&gt;</a></span><span class="message">I thought guile is the biggest part of current reduced bootstrap (which is guile + mes) which is about 60MB...</span></div><div class="line" id="161507"><span class="nick" style="color:#2e2a4a"><a href="#161507" label="[16:15:07]">&lt;stikonas&gt;</a></span><span class="message">(according to <a rel="nofollow" href="https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html">https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html</a>) </span></div><div class="line" id="161747"><span class="nick" style="color:#80b1d3"><a href="#161747" label="[16:17:47]">&lt;janneke&gt;</a></span><span class="message">stikonas: that's right, i assumed we were talking about the full source bootstrap:</span></div><div class="line" id="161750"><span class="nick" style="color:#80b1d3"><a href="#161750" label="[16:17:50]">&lt;janneke&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap</a> </span></div><div class="line" id="161819"><span class="nick" style="color:#2e2a4a"><a href="#161819" label="[16:18:19]">&lt;stikonas&gt;</a></span><span class="message">oh, it's smaller there?</span></div><div class="line" id="161823"><span class="nick" style="color:#80b1d3"><a href="#161823" label="[16:18:23]">&lt;janneke&gt;</a></span><span class="message">i.e., where mes' wip-m2 branch was first shown to be feasible for the bootstrap</span></div><div class="line" id="161840"><span class="nick" style="color:#2e2a4a"><a href="#161840" label="[16:18:40]">&lt;stikonas&gt;</a></span><span class="message">well, you know these things better :)</span></div><div class="line" id="161857"><span class="nick" style="color:#80b1d3"><a href="#161857" label="[16:18:57]">&lt;janneke&gt;</a></span><span class="message">stikonas: didn't you catch that i managed to build mes (wip-m2 branch) with m2-planet?</span></div><div class="line" id="161907"><span class="nick" style="color:#2e2a4a"><a href="#161907" label="[16:19:07]">&lt;stikonas&gt;</a></span><span class="message">janneke: no, this I understand</span></div><div class="line" id="161914"><span class="nick" style="color:#80b1d3"><a href="#161914" label="[16:19:14]">&lt;janneke&gt;</a></span><span class="message">people are now trying to reproduce outside of guix too</span></div><div class="line" id="161917"><span class="nick" style="color:#2e2a4a"><a href="#161917" label="[16:19:17]">&lt;stikonas&gt;</a></span><span class="message">I was confused by other things</span></div><div class="line" id="161922"><span class="nick" style="color:#2e2a4a"><a href="#161922" label="[16:19:22]">&lt;stikonas&gt;</a></span><span class="message">janneke: oh yeah, that's what I'm doing</span></div><div class="line" id="161922"><span class="nick" style="color:#80b1d3"><a href="#161922" label="[16:19:22]">&lt;janneke&gt;</a></span><span class="message">ok</span></div><div class="line" id="161929"><span class="nick" style="color:#2e2a4a"><a href="#161929" label="[16:19:29]">&lt;stikonas&gt;</a></span><span class="message">with fossy</span></div><div class="line" id="161941"><span class="nick" style="color:#80b1d3"><a href="#161941" label="[16:19:41]">&lt;janneke&gt;</a></span><span class="message">right</span></div><div class="line" id="161951"><span class="nick" style="color:#2e2a4a"><a href="#161951" label="[16:19:51]">&lt;stikonas&gt;</a></span><span class="message">janneke: so we have a fairly good progress now</span></div><div class="line" id="162019"><span class="nick" style="color:#2e2a4a"><a href="#162019" label="[16:20:19]">&lt;stikonas&gt;</a></span><span class="message">last thing built is now make</span></div><div class="line" id="162047"><span class="nick" style="color:#80b1d3"><a href="#162047" label="[16:20:47]">&lt;janneke&gt;</a></span><span class="message">nice, that's progress</span></div><div class="line" id="162111"><span class="nick" style="color:#80b1d3"><a href="#162111" label="[16:21:11]">&lt;janneke&gt;</a></span><span class="message">then you probably already have gzip</span></div><div class="line" id="162116"><span class="nick" style="color:#2e2a4a"><a href="#162116" label="[16:21:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, and we are not using pregenerated scripts like configure,</span></div><div class="line" id="162123"><span class="nick" style="color:#2e2a4a"><a href="#162123" label="[16:21:23]">&lt;stikonas&gt;</a></span><span class="message">yes, gzip , tar</span></div><div class="line" id="162126"><span class="nick" style="color:#2e2a4a"><a href="#162126" label="[16:21:26]">&lt;stikonas&gt;</a></span><span class="message">sed, diff</span></div><div class="line" id="162133"><span class="nick" style="color:#2e2a4a"><a href="#162133" label="[16:21:33]">&lt;stikonas&gt;</a></span><span class="message">patch too</span></div><div class="line" id="162137"><span class="nick" style="color:#2e2a4a"><a href="#162137" label="[16:21:37]">&lt;stikonas&gt;</a></span><span class="message">bzip2 almost done</span></div><div class="line" id="162142"><span class="nick" style="color:#2e2a4a"><a href="#162142" label="[16:21:42]">&lt;stikonas&gt;</a></span><span class="message">and fossy is working on bash</span></div><div class="line" id="162212"><span class="nick" style="color:#2e2a4a"><a href="#162212" label="[16:22:12]">&lt;stikonas&gt;</a></span><span class="message">we don't have any of the gash or bootar like guix does</span></div><div class="line" id="162215"><span class="nick" style="color:#2e2a4a"><a href="#162215" label="[16:22:15]">&lt;stikonas&gt;</a></span><span class="message">but we won't need them</span></div><div class="line" id="162243"><span class="nick" style="color:#80b1d3"><a href="#162243" label="[16:22:43]">&lt;janneke&gt;</a></span><span class="message">good</span></div><div class="line" id="162257"><span class="nick" style="color:#2e2a4a"><a href="#162257" label="[16:22:57]">&lt;stikonas&gt;</a></span><span class="message">they don't seem to run on mes and require guile</span></div><div class="line" id="162321"><span class="nick" style="color:#2e2a4a"><a href="#162321" label="[16:23:21]">&lt;stikonas&gt;</a></span><span class="message">after bash we need to bootstrap autotools (m4/autoconf/automake) I guess...</span></div><div class="line" id="162326"><span class="nick" style="color:#2e2a4a"><a href="#162326" label="[16:23:26]">&lt;stikonas&gt;</a></span><span class="message">possibly perl</span></div><div class="line" id="162331"><span class="nick" style="color:#80b1d3"><a href="#162331" label="[16:23:31]">&lt;janneke&gt;</a></span><span class="message">that's right, running gash, gash-utils on mes is one possible future path</span></div><div class="line" id="162352"><span class="nick" style="color:#2e2a4a"><a href="#162352" label="[16:23:52]">&lt;stikonas&gt;</a></span><span class="message">well, we just wrote enough kaem scripts to build what we need</span></div><div class="line" id="162403"><span class="nick" style="color:#2e2a4a"><a href="#162403" label="[16:24:03]">&lt;stikonas&gt;</a></span><span class="message">(inclusing mes)</span></div><div class="line" id="162426"><span class="nick" style="color:#80b1d3"><a href="#162426" label="[16:24:26]">&lt;janneke&gt;</a></span><span class="message">very nice</span></div><div class="line" id="162448"><span class="nick" style="color:#2e2a4a"><a href="#162448" label="[16:24:48]">&lt;stikonas&gt;</a></span><span class="message">e.g. for mes we ran this <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes.kaem</a> </span></div><div class="line" id="162501"><span class="nick" style="color:#2e2a4a"><a href="#162501" label="[16:25:01]">&lt;stikonas&gt;</a></span><span class="message">well, no more kaem scripts from now on, since we now have make</span></div><div class="line" id="162559"><span class="nick" style="color:#2e2a4a"><a href="#162559" label="[16:25:59]">&lt;stikonas&gt;</a></span><span class="message">janneke: by the way, we managed to build sed 4.0.7 instead of very old 1.18 that is used in your branch</span></div><div class="line" id="162624"><span class="nick" style="color:#2e2a4a"><a href="#162624" label="[16:26:24]">&lt;stikonas&gt;</a></span><span class="message">janneke: 1.18 was of no use for us, had to build at least v4</span></div><div class="line" id="162657"><span class="nick" style="color:#2e2a4a"><a href="#162657" label="[16:26:57]">&lt;stikonas&gt;</a></span><span class="message">(without gash we needed -i flag in sed for in place editing)</span></div><div class="line" id="165211"><span class="nick" style="color:#80b1d3"><a href="#165211" label="[16:52:11]">&lt;janneke&gt;</a></span><span class="message">stikonas: oh, that's nice; i'll have a look</span></div><div class="line" id="165249"><span class="nick" style="color:#80b1d3"><a href="#165249" label="[16:52:49]">&lt;janneke&gt;</a></span><span class="message">i was hoping we can gradually get rid of most ancient softwares</span></div><div class="line" id="165327"><span class="nick" style="color:#2e2a4a"><a href="#165327" label="[16:53:27]">&lt;stikonas&gt;</a></span><span class="message">this is how we built sed <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/sed-4.0.7.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/sed-4.0.7.kaem</a> </span></div><div class="line" id="165342"><span class="nick" style="color:#2e2a4a"><a href="#165342" label="[16:53:42]">&lt;stikonas&gt;</a></span><span class="message">and 4.0.7 is probably not the limit</span></div><div class="line" id="165348"><span class="nick" style="color:#2e2a4a"><a href="#165348" label="[16:53:48]">&lt;stikonas&gt;</a></span><span class="message">I just picked something &gt; 4</span></div><div class="line" id="165500"><span class="nick" style="color:#80b1d3"><a href="#165500" label="[16:55:00]">&lt;janneke&gt;</a></span><span class="message">i don't remember why that didn't work at the time, could be need for a newer awk, or bash</span></div><div class="line" id="165517"><span class="nick" style="color:#2e2a4a"><a href="#165517" label="[16:55:17]">&lt;stikonas&gt;</a></span><span class="message">could be, we don't use bash though...</span></div><div class="line" id="165528"><span class="nick" style="color:#2e2a4a"><a href="#165528" label="[16:55:28]">&lt;stikonas&gt;</a></span><span class="message">we just wrote our own build script</span></div><div class="line" id="165539"><span class="nick" style="color:#80b1d3"><a href="#165539" label="[16:55:39]">&lt;janneke&gt;</a></span><span class="message">right, going around the problem altogether</span></div><div class="line" id="165550"><span class="nick" style="color:#2e2a4a"><a href="#165550" label="[16:55:50]">&lt;stikonas&gt;</a></span><span class="message">(since bash is no available for us yet when we build sed)</span></div><div class="line" id="165559"><span class="nick" style="color:#80b1d3"><a href="#165559" label="[16:55:59]">&lt;janneke&gt;</a></span><span class="message">i wanted to use guix's gnu-build-system as much as possible initially</span></div><div class="line" id="165604"><span class="nick" style="color:#2e2a4a"><a href="#165604" label="[16:56:04]">&lt;stikonas&gt;</a></span><span class="message">(we use sed for early patching of other software)</span></div><div class="line" id="165615"><span class="nick" style="color:#6d2462"><a href="#165615" label="[16:56:15]">&lt;fitzsim&gt;</a></span><span class="message"> xeww</span></div><div class="line" id="165616"><span class="nick" style="color:#80b1d3"><a href="#165616" label="[16:56:16]">&lt;janneke&gt;</a></span><span class="message">that makes sense</span></div><div class="line" id="165633"><span class="nick" style="color:#2e2a4a"><a href="#165633" label="[16:56:33]">&lt;stikonas&gt;</a></span><span class="message">janneke: yeah, but in live-bootstrap we dont' have gnu-build-system, we need to bootstrap our build systems...</span></div><div class="line" id="165640"><span class="nick" style="color:#80b1d3"><a href="#165640" label="[16:56:40]">&lt;janneke&gt;</a></span><span class="message">sure</span></div><div class="line" id="165747"><span class="nick" style="color:#2e2a4a"><a href="#165747" label="[16:57:47]">&lt;stikonas&gt;</a></span><span class="message">and building patch also needed some patching :)</span></div><div class="line" id="165751"><span class="nick" style="color:#2e2a4a"><a href="#165751" label="[16:57:51]">&lt;stikonas&gt;</a></span><span class="message">so we used sed</span></div><div class="line" id="165826"><span class="nick" style="color:#80b1d3"><a href="#165826" label="[16:58:26]">&lt;janneke&gt;</a></span><span class="message">yes, iwbn to get a series of &quot;bootstrappable&quot; releases that don't need patching</span></div><div class="line" id="165839"><span class="nick" style="color:#80b1d3"><a href="#165839" label="[16:58:39]">&lt;janneke&gt;</a></span><span class="message">could be a next step, someday</span></div><div class="line" id="165959"><span class="nick" style="color:#2e2a4a"><a href="#165959" label="[16:59:59]">&lt;stikonas&gt;</a></span><span class="message">well, most of the patching is very light</span></div><div class="line" id="170016"><span class="nick" style="color:#2e2a4a"><a href="#170016" label="[17:00:16]">&lt;stikonas&gt;</a></span><span class="message">and much smaller than rewriting build scripts :)</span></div><div class="line" id="170611"><span class="nick" style="color:#2e2a4a"><a href="#170611" label="[17:06:11]">&lt;civodul&gt;</a></span><span class="message">stikonas: philosophical question: to what extent can <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes.kaem">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/mes.kaem</a>  be considered &quot;source&quot;? :-)</span></div><div class="line" id="170836"><span class="nick" style="color:#2e2a4a"><a href="#170836" label="[17:08:36]">&lt;stikonas&gt;</a></span><span class="message">civodul: it's handwritten</span></div><div class="line" id="170910"><span class="nick" style="color:#2e2a4a"><a href="#170910" label="[17:09:10]">&lt;stikonas&gt;</a></span><span class="message">civodul: so if we say that handwritten things are source, then to full extent</span></div><div class="line" id="170939"><span class="nick" style="color:#2e2a4a"><a href="#170939" label="[17:09:39]">&lt;stikonas&gt;</a></span><span class="message">but yes, it's a lot of copy-pasting...</span></div><div class="line" id="170958"><span class="nick" style="color:#2e2a4a"><a href="#170958" label="[17:09:58]">&lt;stikonas&gt;</a></span><span class="message">since we can't do any advanced stuff in kaem...</span></div><div class="line" id="171016"><span class="nick" style="color:#2e2a4a"><a href="#171016" label="[17:10:16]">&lt;stikonas&gt;</a></span><span class="message">civodul: well, hex0/1/2 are even less &quot;source&quot;, but they are also handwritten</span></div><div class="line" id="171116"><span class="nick" style="color:#2e2a4a"><a href="#171116" label="[17:11:16]">&lt;stikonas&gt;</a></span><span class="message">in any case, mes.kaem is basically a list of files to compile</span></div><div class="line" id="171124"><span class="nick" style="color:#2e2a4a"><a href="#171124" label="[17:11:24]">&lt;stikonas&gt;</a></span><span class="message">we run the same command over and over again</span></div><div class="line" id="174804"><span class="nick" style="color:#2e2a4a"><a href="#174804" label="[17:48:04]">&lt;civodul&gt;</a></span><span class="message">stikonas: i thought this shell scripts were automatically-unrolled makefiles</span></div><div class="line" id="174810"><span class="nick" style="color:#2e2a4a"><a href="#174810" label="[17:48:10]">&lt;civodul&gt;</a></span><span class="message">*these</span></div><div class="line" id="174908"><span class="nick" style="color:#2e2a4a"><a href="#174908" label="[17:49:08]">&lt;civodul&gt;</a></span><span class="message">(to me, &quot;source&quot; is the &quot;preferred form for making modifications to it&quot;, as the GPL puts it)</span></div><div class="line" id="174936"><span class="nick" style="color:#2e2a4a"><a href="#174936" label="[17:49:36]">&lt;stikonas&gt;</a></span><span class="message">not really automatically... although I did look make output :)</span></div><div class="line" id="175014"><span class="nick" style="color:#2e2a4a"><a href="#175014" label="[17:50:14]">&lt;stikonas&gt;</a></span><span class="message">well, I was making modifications to this file, not some makefile and run script on it</span></div><div class="line" id="175029"><span class="nick" style="color:#2e2a4a"><a href="#175029" label="[17:50:29]">&lt;stikonas&gt;</a></span><span class="message">so I guess it satisfies GPL definition of source</span></div><div class="line" id="175127"><span class="nick" style="color:#2e2a4a"><a href="#175127" label="[17:51:27]">&lt;civodul&gt;</a></span><span class="message">yeah</span></div><div class="line" id="175232"><span class="nick" style="color:#2e2a4a"><a href="#175232" label="[17:52:32]">&lt;civodul&gt;</a></span><span class="message">though the form we really &quot;prefer&quot; is the original makefile (or similar)</span></div><div class="line" id="175259"><span class="nick" style="color:#2e2a4a"><a href="#175259" label="[17:52:59]">&lt;civodul&gt;</a></span><span class="message">but i guess that's always the case, we always &quot;prefer&quot; the higher-level thing</span></div><div class="line" id="175311"><span class="nick" style="color:#2e2a4a"><a href="#175311" label="[17:53:11]">&lt;civodul&gt;</a></span><span class="message">tricky concepts :-)</span></div><div class="line" id="180321"><span class="nick" style="color:#2e2a4a"><a href="#180321" label="[18:03:21]">&lt;stikonas&gt;</a></span><span class="message">yeah, people also prefer &quot;configure&quot; files even though that's definitely not preferred form for modifications</span></div><div class="line" id="180614"><span class="nick" style="color:#2e2a4a"><a href="#180614" label="[18:06:14]">&lt;civodul&gt;</a></span><span class="message">i meant &quot;prefer&quot; as in &quot;prefer to make modifications&quot;</span></div><div class="line" id="180623"><span class="nick" style="color:#2e2a4a"><a href="#180623" label="[18:06:23]">&lt;civodul&gt;</a></span><span class="message">configure files are definitely not &quot;preferred&quot; in that sense :-)</span></div><div class="line" id="195413"><span class="nick" style="color:#2e2a4a"><a href="#195413" label="[19:54:13]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: remember that asterisk that I got wrong inside quotation mark</span></div><div class="line" id="195444"><span class="nick" style="color:#2e2a4a"><a href="#195444" label="[19:54:44]">&lt;stikonas&gt;</a></span><span class="message">you and fossy moved it outside</span></div><div class="line" id="195449"><span class="nick" style="color:#2e2a4a"><a href="#195449" label="[19:54:49]">&lt;stikonas&gt;</a></span><span class="message">it's still wrong!</span></div><div class="line" id="195535"><span class="nick" style="color:#2e2a4a"><a href="#195535" label="[19:55:35]">&lt;stikonas&gt;</a></span><span class="message">shell scripting is so easy to get wrong :(</span></div><div class="line" id="203427"><span class="nick" style="color:#af8d2f"><a href="#203427" label="[20:34:27]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: i send the proposal: for FILE in foo/${var}.*; do test -f &quot;$FILE&quot; &amp;&amp; ...; done</span></div><div class="line" id="203459"><span class="nick" style="color:#2e2a4a"><a href="#203459" label="[20:34:59]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's what I have now in my commit queue too</span></div><div class="line" id="203527"><span class="nick" style="color:#af8d2f"><a href="#203527" label="[20:35:27]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: fossy: finally my arm-qemu-setup-CI-runner is ready, i'am tired now and will send the pullrequest tomorrow. I also had to fight with arm to output text 8-)))</span></div><div class="line" id="203606"><span class="nick" style="color:#2e2a4a"><a href="#203606" label="[20:36:06]">&lt;stikonas&gt;</a></span><span class="message">gforce_de1977: oh, you managed to solve it, nice!</span></div><div class="line" id="203609"><span class="nick" style="color:#af8d2f"><a href="#203609" label="[20:36:09]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: fossy: because of the asterisk: will send the PR also tomorrow morning</span></div><div class="line" id="203657"><span class="nick" style="color:#af8d2f"><a href="#203657" label="[20:36:57]">&lt;gforce_de1977&gt;</a></span><span class="message">stikonas: arm is really tricky..., but now the way to aarch64 is also clear...</span></div><div class="line" id="220000"><span class="nick" style="color:#8dd3c7"><a href="#220000" label="[22:00:00]">&lt;fossy&gt;</a></span><span class="message">arm?</span></div><div class="line" id="220012"><span class="nick" style="color:#8dd3c7"><a href="#220012" label="[22:00:12]">&lt;fossy&gt;</a></span><span class="message">how will live bootstrap work on arm</span></div><div class="line" id="220315"><span class="nick" style="color:#8dd3c7"><a href="#220315" label="[22:03:15]">&lt;fossy&gt;</a></span><span class="message">janneke: whats the total seed size inc guile for full source bootstrap?</span></div><div class="line" id="220826"><span class="nick" style="color:#80b1d3"><a href="#220826" label="[22:08:26]">&lt;janneke&gt;</a></span><span class="message">fossy: %bootstrap-guile is 14Mb, and hex0 is 357 bytes, oh and we have kaem ;-)</span></div><div class="line" id="221030"><span class="nick" style="color:#2e2a4a"><a href="#221030" label="[22:10:30]">&lt;stikonas&gt;</a></span><span class="message">so I'm still confused why older reduced bootstrap is 60 MB. Didn't it have just guile and mes?</span></div><div class="line" id="221044"><span class="nick" style="color:#2e2a4a"><a href="#221044" label="[22:10:44]">&lt;stikonas&gt;</a></span><span class="message">fossy: I have a few patches to review while I'm working on m4</span></div><div class="line" id="221125"><span class="nick" style="color:#2e2a4a"><a href="#221125" label="[22:11:25]">&lt;stikonas&gt;</a></span><span class="message">fossy: I've built bzip2 (with some patching to patch out dependencies on bash and coreutils)</span></div><div class="line" id="221145"><span class="nick" style="color:#8dd3c7"><a href="#221145" label="[22:11:45]">&lt;fossy&gt;</a></span><span class="message">janneke: i see</span></div><div class="line" id="221154"><span class="nick" style="color:#2e2a4a"><a href="#221154" label="[22:11:54]">&lt;stikonas&gt;</a></span><span class="message">in principle bash we'll soon have...</span></div><div class="line" id="221204"><span class="nick" style="color:#80b1d3"><a href="#221204" label="[22:12:04]">&lt;janneke&gt;</a></span><span class="message">stikonas i believe that was calculated when we aimed to switch to guile-2.2, so that number is over-estimated</span></div><div class="line" id="221204"><span class="nick" style="color:#8dd3c7"><a href="#221204" label="[22:12:04]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="221208"><span class="nick" style="color:#2e2a4a"><a href="#221208" label="[22:12:08]">&lt;stikonas&gt;</a></span><span class="message">but it's just a test</span></div><div class="line" id="221223"><span class="nick" style="color:#2e2a4a"><a href="#221223" label="[22:12:23]">&lt;stikonas&gt;</a></span><span class="message">oh I see... my confusion is finally resolved :)</span></div><div class="line" id="221340"><span class="nick" style="color:#80b1d3"><a href="#221340" label="[22:13:40]">&lt;janneke&gt;</a></span><span class="message">bootstrap-mes and bootstrap-mescc-tools are about 12MB</span></div><div class="line" id="221342"><span class="nick" style="color:#2e2a4a"><a href="#221342" label="[22:13:42]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/11">https://github.com/fosslinux/live-bootstrap/pull/11</a> </span></div><div class="line" id="221414"><span class="nick" style="color:#2e2a4a"><a href="#221414" label="[22:14:14]">&lt;stikonas&gt;</a></span><span class="message">ok, so you'll go down from 26 MB to 12MB</span></div><div class="line" id="221416"><span class="nick" style="color:#80b1d3"><a href="#221416" label="[22:14:16]">&lt;janneke&gt;</a></span><span class="message">we aimed to halve the size of the bootstrap twice and that sort of worked</span></div><div class="line" id="221428"><span class="nick" style="color:#2e2a4a"><a href="#221428" label="[22:14:28]">&lt;stikonas&gt;</a></span><span class="message">indeed</span></div><div class="line" id="221506"><span class="nick" style="color:#2e2a4a"><a href="#221506" label="[22:15:06]">&lt;stikonas&gt;</a></span><span class="message">that's an order of magnitude better than anybody else already</span></div><div class="line" id="221528"><span class="nick" style="color:#8dd3c7"><a href="#221528" label="[22:15:28]">&lt;fossy&gt;</a></span><span class="message">hm, stikonas, i think that i still prefer doing patch/make/install/test in a kaem subfile, even if we are only doing make</span></div><div class="line" id="221547"><span class="nick" style="color:#8dd3c7"><a href="#221547" label="[22:15:47]">&lt;fossy&gt;</a></span><span class="message">otherwise after.kaem.run will get very long very fast</span></div><div class="line" id="221554"><span class="nick" style="color:#2e2a4a"><a href="#221554" label="[22:15:54]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh I see</span></div><div class="line" id="221605"><span class="nick" style="color:#2e2a4a"><a href="#221605" label="[22:16:05]">&lt;stikonas&gt;</a></span><span class="message">fossy: I thought we'll call after.sh file soon</span></div><div class="line" id="221608"><span class="nick" style="color:#2e2a4a"><a href="#221608" label="[22:16:08]">&lt;stikonas&gt;</a></span><span class="message">and work there</span></div><div class="line" id="221620"><span class="nick" style="color:#8dd3c7"><a href="#221620" label="[22:16:20]">&lt;fossy&gt;</a></span><span class="message">stikonas: we will but consistency</span></div><div class="line" id="221624"><span class="nick" style="color:#2e2a4a"><a href="#221624" label="[22:16:24]">&lt;stikonas&gt;</a></span><span class="message">anyway, I can split it out</span></div><div class="line" id="221638"><span class="nick" style="color:#8dd3c7"><a href="#221638" label="[22:16:38]">&lt;fossy&gt;</a></span><span class="message">i think i still prefer splitting it out</span></div><div class="line" id="221642"><span class="nick" style="color:#2e2a4a"><a href="#221642" label="[22:16:42]">&lt;stikonas&gt;</a></span><span class="message">and what about roofs.sh changes?</span></div><div class="line" id="221852"><span class="nick" style="color:#8dd3c7"><a href="#221852" label="[22:18:52]">&lt;fossy&gt;</a></span><span class="message">well, only issue is that if someone ctrl-c's in the middle of a download then it will use a corrupted source code tarball</span></div><div class="line" id="221903"><span class="nick" style="color:#8dd3c7"><a href="#221903" label="[22:19:03]">&lt;fossy&gt;</a></span><span class="message">but does significantly reduce time..</span></div><div class="line" id="221910"><span class="nick" style="color:#2e2a4a"><a href="#221910" label="[22:19:10]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="221914"><span class="nick" style="color:#2e2a4a"><a href="#221914" label="[22:19:14]">&lt;stikonas&gt;</a></span><span class="message">and load on servers...</span></div><div class="line" id="221923"><span class="nick" style="color:#8dd3c7"><a href="#221923" label="[22:19:23]">&lt;fossy&gt;</a></span><span class="message">yeah, it's fine</span></div><div class="line" id="222044"><span class="nick" style="color:#2e2a4a"><a href="#222044" label="[22:20:44]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, pushed new change with split out file, will test it now</span></div><div class="line" id="222056"><span class="nick" style="color:#2e2a4a"><a href="#222056" label="[22:20:56]">&lt;stikonas&gt;</a></span><span class="message">although, it's a trivial change...</span></div><div class="line" id="222127"><span class="nick" style="color:#2e2a4a"><a href="#222127" label="[22:21:27]">&lt;stikonas&gt;</a></span><span class="message">nothing ever breaks on trivial changes /s</span></div><div class="line" id="222134"><span class="nick" style="color:#8dd3c7"><a href="#222134" label="[22:21:34]">&lt;fossy&gt;</a></span><span class="message">well we should keep all of the tar/gunzip/cd's outside or all inside</span></div><div class="line" id="222203"><span class="nick" style="color:#2e2a4a"><a href="#222203" label="[22:22:03]">&lt;stikonas&gt;</a></span><span class="message">hmm, ok, maybe outside then...</span></div><div class="line" id="222206"><span class="nick" style="color:#8dd3c7"><a href="#222206" label="[22:22:06]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="222211"><span class="nick" style="color:#8dd3c7"><a href="#222211" label="[22:22:11]">&lt;fossy&gt;</a></span><span class="message">but keep the make inside</span></div><div class="line" id="222230"><span class="nick" style="color:#d9d9d9"><a href="#222230" label="[22:22:30]">&lt;bauen1&gt;</a></span><span class="message">shouldn't the downloaded files be compared to a checksum ?</span></div><div class="line" id="222236"><span class="nick" style="color:#2e2a4a"><a href="#222236" label="[22:22:36]">&lt;stikonas&gt;</a></span><span class="message">and patches?</span></div><div class="line" id="222241"><span class="nick" style="color:#8dd3c7"><a href="#222241" label="[22:22:41]">&lt;fossy&gt;</a></span><span class="message">inside</span></div><div class="line" id="222243"><span class="nick" style="color:#2e2a4a"><a href="#222243" label="[22:22:43]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="222250"><span class="nick" style="color:#8dd3c7"><a href="#222250" label="[22:22:50]">&lt;fossy&gt;</a></span><span class="message">as per make, the patch dosen't have any prefix on the file</span></div><div class="line" id="222303"><span class="nick" style="color:#8dd3c7"><a href="#222303" label="[22:23:03]">&lt;fossy&gt;</a></span><span class="message">bauen1: yes, they should</span></div><div class="line" id="222316"><span class="nick" style="color:#2e2a4a"><a href="#222316" label="[22:23:16]">&lt;stikonas&gt;</a></span><span class="message">yeah, I agree that we should do checksum</span></div><div class="line" id="222322"><span class="nick" style="color:#2e2a4a"><a href="#222322" label="[22:23:22]">&lt;stikonas&gt;</a></span><span class="message">and only skip download if it succeeds</span></div><div class="line" id="222329"><span class="nick" style="color:#2e2a4a"><a href="#222329" label="[22:23:29]">&lt;stikonas&gt;</a></span><span class="message">probably as part of that get_file function</span></div><div class="line" id="222333"><span class="nick" style="color:#8dd3c7"><a href="#222333" label="[22:23:33]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="222338"><span class="nick" style="color:#2e2a4a"><a href="#222338" label="[22:23:38]">&lt;stikonas&gt;</a></span><span class="message">first argument url, second checksum</span></div><div class="line" id="222349"><span class="nick" style="color:#8dd3c7"><a href="#222349" label="[22:23:49]">&lt;fossy&gt;</a></span><span class="message">and rm it if it dosen't match</span></div><div class="line" id="222357"><span class="nick" style="color:#2e2a4a"><a href="#222357" label="[22:23:57]">&lt;stikonas&gt;</a></span><span class="message">bauen1: I think you just volunteered to make a patch :D</span></div><div class="line" id="222404"><span class="nick" style="color:#8dd3c7"><a href="#222404" label="[22:24:04]">&lt;fossy&gt;</a></span><span class="message">:P you don't have to bauen1</span></div><div class="line" id="222533"><span class="nick" style="color:#2e2a4a"><a href="#222533" label="[22:25:33]">&lt;stikonas&gt;</a></span><span class="message">anyway, if bauen1 doesn't do that I can do it (maybe tomorrow)</span></div><div class="line" id="222538"><span class="nick" style="color:#2e2a4a"><a href="#222538" label="[22:25:38]">&lt;stikonas&gt;</a></span><span class="message">first want to finish m4</span></div><div class="line" id="222547"><span class="nick" style="color:#2e2a4a"><a href="#222547" label="[22:25:47]">&lt;stikonas&gt;</a></span><span class="message">need to get the right defines for CFLAGS there...</span></div><div class="line" id="222552"><span class="nick" style="color:#d9d9d9"><a href="#222552" label="[22:25:52]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i haven't tried live-bootstrap yet, so you should do it</span></div><div class="line" id="222605"><span class="nick" style="color:#d9d9d9"><a href="#222605" label="[22:26:05]">&lt;bauen1&gt;</a></span><span class="message">stikonas: i'll be sure to add :+1: on the merge request though :p</span></div><div class="line" id="223653"><span class="nick" style="color:#2e2a4a"><a href="#223653" label="[22:36:53]">&lt;stikonas&gt;</a></span><span class="message">fossy: this is my makefile for m4 (still need to test in live environment) <a rel="nofollow" href="https://stikonas.eu/files/Makefile.txt">https://stikonas.eu/files/Makefile.txt</a> </span></div><div class="line" id="223827"><span class="nick" style="color:#8dd3c7"><a href="#223827" label="[22:38:27]">&lt;fossy&gt;</a></span><span class="message">stikonas: if you look at your bzip2 PR you'll see what i want you to do to make the blocks consistent</span></div><div class="line" id="223856"><span class="nick" style="color:#2e2a4a"><a href="#223856" label="[22:38:56]">&lt;stikonas&gt;</a></span><span class="message">ok, let me check, I haven't looked on GH</span></div><div class="line" id="223911"><span class="nick" style="color:#8dd3c7"><a href="#223911" label="[22:39:11]">&lt;fossy&gt;</a></span><span class="message">stikonas: ahh, very nice manipulation with addprefix/suffix</span></div><div class="line" id="223955"><span class="nick" style="color:#8dd3c7"><a href="#223955" label="[22:39:55]">&lt;fossy&gt;</a></span><span class="message">is there a need to redefine %.o: %.c? it's fine if there is but just interested</span></div><div class="line" id="224012"><span class="nick" style="color:#2e2a4a"><a href="#224012" label="[22:40:12]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe not</span></div><div class="line" id="224028"><span class="nick" style="color:#2e2a4a"><a href="#224028" label="[22:40:28]">&lt;stikonas&gt;</a></span><span class="message">actually, I don't even define INCLUDE_DIRS</span></div><div class="line" id="224052"><span class="nick" style="color:#2e2a4a"><a href="#224052" label="[22:40:52]">&lt;stikonas&gt;</a></span><span class="message">and no clean target until we get coreutils :(</span></div><div class="line" id="224057"><span class="nick" style="color:#2e2a4a"><a href="#224057" label="[22:40:57]">&lt;stikonas&gt;</a></span><span class="message">but I think by then we'll have autotools</span></div><div class="line" id="225024"><span class="nick" style="color:#2e2a4a"><a href="#225024" label="[22:50:24]">&lt;stikonas&gt;</a></span><span class="message">ok, it works even without .o -&gt; .c rule</span></div><div class="line" id="225034"><span class="nick" style="color:#2e2a4a"><a href="#225034" label="[22:50:34]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll try to test in live-environment too now</span></div><div class="line" id="225213"><span class="nick" style="color:#8dd3c7"><a href="#225213" label="[22:52:13]">&lt;fossy&gt;</a></span><span class="message">stikonas: remember we need to do coreutils pre autotools</span></div><div class="line" id="225220"><span class="nick" style="color:#8dd3c7"><a href="#225220" label="[22:52:20]">&lt;fossy&gt;</a></span><span class="message">because configure sripts use coreutils</span></div><div class="line" id="225239"><span class="nick" style="color:#2e2a4a"><a href="#225239" label="[22:52:39]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="225249"><span class="nick" style="color:#2e2a4a"><a href="#225249" label="[22:52:49]">&lt;stikonas&gt;</a></span><span class="message">well, m4 didn't use anything</span></div><div class="line" id="225312"><span class="nick" style="color:#2e2a4a"><a href="#225312" label="[22:53:12]">&lt;stikonas&gt;</a></span><span class="message">well, probably autotools can be compiled but I guess can't run configure</span></div><div class="line" id="225321"><span class="nick" style="color:#2e2a4a"><a href="#225321" label="[22:53:21]">&lt;stikonas&gt;</a></span><span class="message">so yeah, need at least some coreutils</span></div><div class="line" id="225326"><span class="nick" style="color:#2e2a4a"><a href="#225326" label="[22:53:26]">&lt;stikonas&gt;</a></span><span class="message">do you know which tools we need?</span></div><div class="line" id="225430"><span class="nick" style="color:#2e2a4a"><a href="#225430" label="[22:54:30]">&lt;stikonas&gt;</a></span><span class="message">hmm, probaly try to build as many as possible...</span></div><div class="line" id="225435"><span class="nick" style="color:#2e2a4a"><a href="#225435" label="[22:54:35]">&lt;stikonas&gt;</a></span><span class="message">they are useful tools...</span></div><div class="line" id="230055"><span class="nick" style="color:#2e2a4a"><a href="#230055" label="[23:00:55]">&lt;stikonas&gt;</a></span><span class="message">strange, how did guix handle this?</span></div><div class="line" id="230117"><span class="nick" style="color:#2e2a4a"><a href="#230117" label="[23:01:17]">&lt;stikonas&gt;</a></span><span class="message">oh, I guess via gash-utils</span></div><div class="line" id="230720"><span class="nick" style="color:#2e2a4a"><a href="#230720" label="[23:07:20]">&lt;stikonas&gt;</a></span><span class="message">hmm, I wonder if  we need to build perl before autotools</span></div><div class="line" id="230752"><span class="nick" style="color:#2e2a4a"><a href="#230752" label="[23:07:52]">&lt;stikonas&gt;</a></span><span class="message">I think for autoconf we can do without it</span></div><div class="line" id="231023"><span class="nick" style="color:#2e2a4a"><a href="#231023" label="[23:10:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, but automake needs perl...</span></div><div class="line" id="235338"><span class="nick" style="color:#8dd3c7"><a href="#235338" label="[23:53:38]">&lt;fossy&gt;</a></span><span class="message">stikonas: we do need perl</span></div><div class="line" id="235401"><span class="nick" style="color:#8dd3c7"><a href="#235401" label="[23:54:01]">&lt;fossy&gt;</a></span><span class="message">stikonas: a patch series i did last year: <a rel="nofollow" href="https://github.com/fosslinux/coreutils-5.0/commits/master">https://github.com/fosslinux/coreutils-5.0/commits/master</a> </span></div><br /></div></body></html>