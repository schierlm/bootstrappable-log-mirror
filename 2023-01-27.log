<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-01-27.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000442"><span class="nick" style="color:#389600"><a href="#000442" label="[00:04:42]">&lt;stikonas&gt;</a></span><span class="message">yeah, aarch64 is still not anywhere close</span></div><div class="line" id="000504"><span class="nick" style="color:#389600"><a href="#000504" label="[00:05:04]">&lt;stikonas&gt;</a></span><span class="message">well, probably mes/tcc steps are the most problematic</span></div><div class="line" id="001509"><span class="nick" style="color:#389600"><a href="#001509" label="[00:15:09]">&lt;stikonas&gt;</a></span><span class="message">python can launch a browser just by running import statement</span></div><div class="line" id="040238"><span class="nick" style="color:#8dd3c7"><a href="#040238" label="[04:02:38]">&lt;fossy&gt;</a></span><span class="message">hm, after gcc might look at attempting to improve the mes libc-&gt;musl transition so that we don't need /usr/lib/musl</span></div><div class="line" id="040305"><span class="nick" style="color:#8dd3c7"><a href="#040305" label="[04:03:05]">&lt;fossy&gt;</a></span><span class="message">/usr/lib/musl irks me a bit, it's non-standard and adds a bit of annoying complexity</span></div><div class="line" id="040409"><span class="nick" style="color:#8dd3c7"><a href="#040409" label="[04:04:09]">&lt;fossy&gt;</a></span><span class="message">or perhaps utilise doras' PR to use triplet notation</span></div><div class="line" id="040603"><span class="nick" style="color:#8dd3c7"><a href="#040603" label="[04:06:03]">&lt;fossy&gt;</a></span><span class="message">that's probably the best way actually</span></div><div class="line" id="040617"><span class="nick" style="color:#8dd3c7"><a href="#040617" label="[04:06:17]">&lt;fossy&gt;</a></span><span class="message">because that's the standard nowadays</span></div><div class="line" id="075931"><span class="nick" style="color:#2e2a4a"><a href="#075931" label="[07:59:31]">&lt;doras&gt;</a></span><span class="message">fossy: I can rebase it if you wish. It mostly needs to be expanded to a few additional packages that were added since and have its package hashes recalculated</span></div><div class="line" id="080058"><span class="nick" style="color:#2e2a4a"><a href="#080058" label="[08:00:58]">&lt;doras&gt;</a></span><span class="message">But we'll need to merge it without much delay qfter the rebase. It touches many files and can easily run into conflicts.</span></div><div class="line" id="080324"><span class="nick" style="color:#2e2a4a"><a href="#080324" label="[08:03:24]">&lt;doras&gt;</a></span><span class="message">after*</span></div><div class="line" id="080442"><span class="nick" style="color:#2e2a4a"><a href="#080442" label="[08:04:42]">&lt;doras&gt;</a></span><span class="message">I can maybe rename the LIBDIR variable to something with less chance to affect buildsystems.</span></div><div class="line" id="080609"><span class="nick" style="color:#2e2a4a"><a href="#080609" label="[08:06:09]">&lt;doras&gt;</a></span><span class="message">Previously I wanted it not to be used as an environment variable, but this requires some work on how the variables we use are preserved when dropping to shell.</span></div><div class="line" id="081835"><span class="nick" style="color:#2e2a4a"><a href="#081835" label="[08:18:35]">&lt;doras&gt;</a></span><span class="message">stikonas @stikonas:libera.chat: CI passed with static Python, so we're probably fine.</span></div><div class="line" id="085821"><span class="nick" style="color:#8dd3c7"><a href="#085821" label="[08:58:21]">&lt;fossy&gt;</a></span><span class="message">doras: can we start with #197 actually, could you rebase it?</span></div><div class="line" id="085845"><span class="nick" style="color:#8dd3c7"><a href="#085845" label="[08:58:45]">&lt;fossy&gt;</a></span><span class="message">btw, HOME &amp; SOURCE_DATE_EPOCH are designed to affect build systems, they are not internal, so we can leave those exported</span></div><div class="line" id="085852"><span class="nick" style="color:#8dd3c7"><a href="#085852" label="[08:58:52]">&lt;fossy&gt;</a></span><span class="message">(added since you made the PR)</span></div><div class="line" id="085927"><span class="nick" style="color:#8dd3c7"><a href="#085927" label="[08:59:27]">&lt;fossy&gt;</a></span><span class="message">sorry, #197 and #201 have been on my radar for a while, i just didn't have the time to properly consider them until recently - then i forgot about them :P</span></div><div class="line" id="090022"><span class="nick" style="color:#8dd3c7"><a href="#090022" label="[09:00:22]">&lt;fossy&gt;</a></span><span class="message">then we can do #201</span></div><div class="line" id="090111"><span class="nick" style="color:#2e2a4a"><a href="#090111" label="[09:01:11]">&lt;doras&gt;</a></span><span class="message">fossy: #197 is fine but one thing stikonas noted is that when dropping to interactive shell (after post-bootstrap or due to an error) we lose the variables.</span></div><div class="line" id="090235"><span class="nick" style="color:#2e2a4a"><a href="#090235" label="[09:02:35]">&lt;doras&gt;</a></span><span class="message">I thought maybe to save the variables to a file similarly to bootstrap.cfg and then include them using the dot operation in each script that needs them, but I ran out of time to experiment with this.</span></div><div class="line" id="090531"><span class="nick" style="color:#8dd3c7"><a href="#090531" label="[09:05:31]">&lt;fossy&gt;</a></span><span class="message">hm, we can probably jsut have some variable such as ENV=&quot;PATH=${PATH} PREFIX=${PREFIX}&quot;... like on line 143 at the beginning of the file, and use that in the trap and exec invocations?</span></div><div class="line" id="090718"><span class="nick" style="color:#2e2a4a"><a href="#090718" label="[09:07:18]">&lt;doras&gt;</a></span><span class="message">But then the build environment would be different for interactive vs. noninteractive shells. Noninteractive would have a &quot;clean&quot; environment and iteractive would have an environment &quot;polluted&quot; with variables that could be picked up by package buildsystems and result in different hashes.</span></div><div class="line" id="090739"><span class="nick" style="color:#2e2a4a"><a href="#090739" label="[09:07:39]">&lt;doras&gt;</a></span><span class="message">For example, as you can see with automake and gettext in my MR.</span></div><div class="line" id="090900"><span class="nick" style="color:#8dd3c7"><a href="#090900" label="[09:09:00]">&lt;fossy&gt;</a></span><span class="message">oh, i see</span></div><div class="line" id="090952"><span class="nick" style="color:#2e2a4a"><a href="#090952" label="[09:09:52]">&lt;doras&gt;</a></span><span class="message">So if we loaded variables in every script individually using the dot operation, like we do for helpers.sh and bootstrap.cfg, then one may consider this issue solved.</span></div><div class="line" id="091023"><span class="nick" style="color:#2e2a4a"><a href="#091023" label="[09:10:23]">&lt;doras&gt;</a></span><span class="message">I think it should work in theory.</span></div><div class="line" id="091024"><span class="nick" style="color:#2e2a4a"><a href="#091024" label="[09:10:24]">&lt;doras&gt;</a></span><span class="message">So instead of scripts passing variables to one another using environment variables, each simply includes the same file using the dot operation.</span></div><div class="line" id="091040"><span class="nick" style="color:#8dd3c7"><a href="#091040" label="[09:10:40]">&lt;fossy&gt;</a></span><span class="message">well, can't we just do the ENV thing for interactive drop-out, and pass variables for after.sh (same as how you do it right now)?</span></div><div class="line" id="091049"><span class="nick" style="color:#8dd3c7"><a href="#091049" label="[09:10:49]">&lt;fossy&gt;</a></span><span class="message">i have no issues with interactive being different to non-interactive.</span></div><div class="line" id="091100"><span class="nick" style="color:#8dd3c7"><a href="#091100" label="[09:11:00]">&lt;fossy&gt;</a></span><span class="message">interactive is meant to only really be used for development and playing</span></div><div class="line" id="091147"><span class="nick" style="color:#8dd3c7"><a href="#091147" label="[09:11:47]">&lt;fossy&gt;</a></span><span class="message">dot operation, yes that would probably work in theory?</span></div><div class="line" id="091228"><span class="nick" style="color:#8dd3c7"><a href="#091228" label="[09:12:28]">&lt;fossy&gt;</a></span><span class="message">that might be a bit cleaner than the current approach as well</span></div><div class="line" id="091251"><span class="nick" style="color:#8dd3c7"><a href="#091251" label="[09:12:51]">&lt;fossy&gt;</a></span><span class="message">i have no strong feelings about this though, so whatever makes the most sense</span></div><div class="line" id="091412"><span class="nick" style="color:#2e2a4a"><a href="#091412" label="[09:14:12]">&lt;doras&gt;</a></span><span class="message">I can try to experiment with it to see if it makes sense.</span></div><div class="line" id="091427"><span class="nick" style="color:#8dd3c7"><a href="#091427" label="[09:14:27]">&lt;fossy&gt;</a></span><span class="message">If you have the time available, go ahead :)</span></div><div class="line" id="092621"><span class="nick" style="color:#2e2a4a"><a href="#092621" label="[09:26:21]">&lt;doras&gt;</a></span><span class="message">fossy: we currently have a duplication between SRCDIR and SOURCES. Is this accidental or does it actually serve a purpose?</span></div><div class="line" id="094833"><span class="nick" style="color:#6b8072"><a href="#094833" label="[09:48:33]">&lt;stikonas[m]&gt;</a></span><span class="message">Probably duplication, I've noticed it too</span></div><div class="line" id="105619"><span class="nick" style="color:#8dd3c7"><a href="#105619" label="[10:56:19]">&lt;fossy&gt;</a></span><span class="message">i believe accidental, let me check</span></div><div class="line" id="120120"><span class="nick" style="color:#6b8072"><a href="#120120" label="[12:01:20]">&lt;stikonas[m]&gt;</a></span><span class="message">yes, interactive drop-out is mostly for development, though I was proposing to just dump all vars in a file, so that one can easily source them if necessary, otherwise we can keep environment clean</span></div><div class="line" id="120137"><span class="nick" style="color:#6b8072"><a href="#120137" label="[12:01:37]">&lt;stikonas[m]&gt;</a></span><span class="message">s/in a file/to file/</span></div><div class="line" id="120240"><span class="nick" style="color:#6b8072"><a href="#120240" label="[12:02:40]">&lt;stikonas[m]&gt;</a></span><span class="message">whatever people do in interactive environment (e.g. install some distro) doesn't have to be so reproducible as output of live-bootstrap</span></div><div class="line" id="170710"><span class="nick" style="color:#2e2a4a"><a href="#170710" label="[17:07:10]">&lt;doras&gt;</a></span><span class="message">How does one build a kernel for QEMU properly?</span></div><div class="line" id="170729"><span class="nick" style="color:#2e2a4a"><a href="#170729" label="[17:07:29]">&lt;doras&gt;</a></span><span class="message">I used the x86_64 defconfig but got a strange build failure in sysb.</span></div><div class="line" id="170809"><span class="nick" style="color:#2e2a4a"><a href="#170809" label="[17:08:09]">&lt;doras&gt;</a></span><span class="message">For live-bootstrap, I mean</span></div><div class="line" id="170810"><span class="nick" style="color:#80b1d3"><a href="#170810" label="[17:08:10]">&lt;pder&gt;</a></span><span class="message">I think with live-bootstrap the kernel has to be a 32 bit build, but that may have changed</span></div><div class="line" id="170823"><span class="nick" style="color:#6b8072"><a href="#170823" label="[17:08:23]">&lt;stikonas[m]&gt;</a></span><span class="message">yes, it has to be 32-bit build</span></div><div class="line" id="170837"><span class="nick" style="color:#6b8072"><a href="#170837" label="[17:08:37]">&lt;stikonas[m]&gt;</a></span><span class="message">kexec does not work with 64-bit kernel</span></div><div class="line" id="170901"><span class="nick" style="color:#6b8072"><a href="#170901" label="[17:09:01]">&lt;stikonas[m]&gt;</a></span><span class="message">or to be more precise, 32-bit kexec does not work with 64-bit kernel</span></div><div class="line" id="171359"><span class="nick" style="color:#2e2a4a"><a href="#171359" label="[17:13:59]">&lt;doras&gt;</a></span><span class="message">Yes, that's explains it.</span></div><div class="line" id="171403"><span class="nick" style="color:#2e2a4a"><a href="#171403" label="[17:14:03]">&lt;doras&gt;</a></span><span class="message">that*</span></div><div class="line" id="173855"><span class="nick" style="color:#6d2462"><a href="#173855" label="[17:38:55]">&lt;clemens3&gt;</a></span><span class="message">if anyone has a minimal kernel config working for qemu, i would also be interested..</span></div><div class="line" id="175226"><span class="nick" style="color:#389600"><a href="#175226" label="[17:52:26]">&lt;stikonas&gt;</a></span><span class="message">clemens3: the one from live-bootstrap would definitely work</span></div><div class="line" id="175245"><span class="nick" style="color:#389600"><a href="#175245" label="[17:52:45]">&lt;stikonas&gt;</a></span><span class="message">but basically anything 32-bit would work</span></div><div class="line" id="175313"><span class="nick" style="color:#389600"><a href="#175313" label="[17:53:13]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/linux-4.9.10/files/config">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/linux-4.9.10/files/config</a> </span></div><div class="line" id="175356"><span class="nick" style="color:#389600"><a href="#175356" label="[17:53:56]">&lt;stikonas&gt;</a></span><span class="message">I don't remember which config options are required, but it's really just a few (compared to allnoconfig)</span></div><div class="line" id="175453"><span class="nick" style="color:#389600"><a href="#175453" label="[17:54:53]">&lt;stikonas&gt;</a></span><span class="message">and soonish rickmasters might even add support for fiwix</span></div><div class="line" id="175507"><span class="nick" style="color:#389600"><a href="#175507" label="[17:55:07]">&lt;stikonas&gt;</a></span><span class="message">(and builder-hex0 kernel)</span></div><div class="line" id="175608"><span class="nick" style="color:#234e69"><a href="#175608" label="[17:56:08]">&lt;Piraty&gt;</a></span><span class="message">so this is the place to talk about boatstrip yes?</span></div><div class="line" id="211359"><span class="nick" style="color:#2e2a4a"><a href="#211359" label="[21:13:59]">&lt;doras&gt;</a></span><span class="message">stikonas: any opinion on this? <a rel="nofollow" href="https://www.shellcheck.net/wiki/SC2129">https://www.shellcheck.net/wiki/SC2129</a> </span></div><div class="line" id="211752"><span class="nick" style="color:#2e2a4a"><a href="#211752" label="[21:17:52]">&lt;doras&gt;</a></span><span class="message">Not of a fan of this recommendation myself, but spellcheck is complaining about it.</span></div><div class="line" id="212054"><span class="nick" style="color:#6b8072"><a href="#212054" label="[21:20:54]">&lt;stikonas[m]&gt;</a></span><span class="message">I guess I'm fine with ignoring it but let's confirm with fossy</span></div><div class="line" id="212302"><span class="nick" style="color:#2e2a4a"><a href="#212302" label="[21:23:02]">&lt;doras&gt;</a></span><span class="message">stikonas: sure. Thanks :)</span></div><div class="line" id="212331"><span class="nick" style="color:#2e2a4a"><a href="#212331" label="[21:23:31]">&lt;doras&gt;</a></span><span class="message">fosslinux, stikonas: I updated the MR to remove the use of exported environment variables: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/197">https://github.com/fosslinux/live-bootstrap/pull/197</a> </span></div><div class="line" id="212526"><span class="nick" style="color:#2e2a4a"><a href="#212526" label="[21:25:26]">&lt;doras&gt;</a></span><span class="message">I used a file to pass variables between scripts, allowing interactive shell to simply . /usr/src/.env to get them defined for its context.</span></div><div class="line" id="212859"><span class="nick" style="color:#2e2a4a"><a href="#212859" label="[21:28:59]">&lt;doras&gt;</a></span><span class="message">Works fairly well, it seems.</span></div><div class="line" id="213136"><span class="nick" style="color:#2e2a4a"><a href="#213136" label="[21:31:36]">&lt;doras&gt;</a></span><span class="message">I won't rebase the MR to switch from /usr/lib/musl to /usr/lib/i386-linux-musl until this is merged to avoid having to rebase it multiple times. It affects many hashes.</span></div><div class="line" id="213140"><span class="nick" style="color:#6b8072"><a href="#213140" label="[21:31:40]">&lt;stikonas[m]&gt;</a></span><span class="message">ok, looks good. Let's wait for fosslinux to approve</span></div><div class="line" id="213211"><span class="nick" style="color:#389600"><a href="#213211" label="[21:32:11]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's fine, let's merge this one first</span></div><div class="line" id="213318"><span class="nick" style="color:#2e2a4a"><a href="#213318" label="[21:33:18]">&lt;doras&gt;</a></span><span class="message">Great. Thanks again :)</span></div><div class="line" id="222258"><span class="nick" style="color:#8dd3c7"><a href="#222258" label="[22:22:58]">&lt;fossy&gt;</a></span><span class="message">yeah, i don't really care for doing any more work on minimising the seed kernel when we're going to strip it out in the near future (hopefully)</span></div><div class="line" id="222339"><span class="nick" style="color:#8dd3c7"><a href="#222339" label="[22:23:39]">&lt;fossy&gt;</a></span><span class="message">reviewing now</span></div><div class="line" id="223731"><span class="nick" style="color:#8dd3c7"><a href="#223731" label="[22:37:31]">&lt;fossy&gt;</a></span><span class="message">doras, stikonas: merged</span></div><div class="line" id="230400"><span class="nick" style="color:#6c3d55"><a href="#230400" label="[23:04:00]">&lt;oriansj&gt;</a></span><span class="message">Piraty: bootstrapping not boatstrip. Is that something of interest to you?</span></div><br /></div></body></html>