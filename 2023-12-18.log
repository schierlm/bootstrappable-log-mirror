<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-12-18.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000035"><span class="nick" style="color:#389600"><a href="#000035" label="[00:00:35]">&lt;fossy&gt;</a></span><span class="message">thank you Googulator! i'll take a look at thse changes</span></div><div class="line" id="000209"><span class="nick" style="color:#389600"><a href="#000209" label="[00:02:09]">&lt;fossy&gt;</a></span><span class="message">Googulator: regarding creating external.img only when needed, what is your vision here? (not to transition to a disk?)</span></div><div class="line" id="000240"><span class="nick" style="color:#8dd3c7"><a href="#000240" label="[00:02:40]">&lt;Googulator&gt;</a></span><span class="message">The goal there is to only require a single disk</span></div><div class="line" id="000247"><span class="nick" style="color:#8dd3c7"><a href="#000247" label="[00:02:47]">&lt;Googulator&gt;</a></span><span class="message">At least when no pre-download is used</span></div><div class="line" id="000249"><span class="nick" style="color:#389600"><a href="#000249" label="[00:02:49]">&lt;fossy&gt;</a></span><span class="message">Ah, alright, that makes sense</span></div><div class="line" id="000303"><span class="nick" style="color:#389600"><a href="#000303" label="[00:03:03]">&lt;fossy&gt;</a></span><span class="message">yes, that should work quite fine</span></div><div class="line" id="000340"><span class="nick" style="color:#2e2a4a"><a href="#000340" label="[00:03:40]">&lt;stikonas&gt;</a></span><span class="message">fossy: while you are there, any thoughts how we can try to integrate (future) UEFI bootstrap into live-bootstrap?</span></div><div class="line" id="000349"><span class="nick" style="color:#389600"><a href="#000349" label="[00:03:49]">&lt;fossy&gt;</a></span><span class="message">hmm</span></div><div class="line" id="000412"><span class="nick" style="color:#8dd3c7"><a href="#000412" label="[00:04:12]">&lt;Googulator&gt;</a></span><span class="message">Especially important on bare metal, where it means not only an extra physical disk (with extra firmware and corresponding extra risks involved), but also a motherboard that's able to handle 2 disks properly in both BIOS and Linux *and* present them to Linux in the anticipated order</span></div><div class="line" id="000416"><span class="nick" style="color:#2e2a4a"><a href="#000416" label="[00:04:16]">&lt;stikonas&gt;</a></span><span class="message">Googulator and I were thinking that UEFI bootstrap will start in UEFI, then after M2-Planet it could build something like builder-hex0 (but written in C) that would then try to execute POSIX binaries</span></div><div class="line" id="000426"><span class="nick" style="color:#389600"><a href="#000426" label="[00:04:26]">&lt;fossy&gt;</a></span><span class="message">yeah, i did read the thoughts abut that</span></div><div class="line" id="000437"><span class="nick" style="color:#389600"><a href="#000437" label="[00:04:37]">&lt;fossy&gt;</a></span><span class="message">i think that is the best option</span></div><div class="line" id="000438"><span class="nick" style="color:#8dd3c7"><a href="#000438" label="[00:04:38]">&lt;Googulator&gt;</a></span><span class="message">fossy: Are there any patches to sfdisk itself in the final merged version?</span></div><div class="line" id="000458"><span class="nick" style="color:#2e2a4a"><a href="#000458" label="[00:04:58]">&lt;stikonas&gt;</a></span><span class="message">anyway, for now I'm just trying to fix-up stage0-uefi to work on my baremetal machine...</span></div><div class="line" id="000528"><span class="nick" style="color:#8dd3c7"><a href="#000528" label="[00:05:28]">&lt;Googulator&gt;</a></span><span class="message">Because if this is the same version of sfdisk that we used pre-simplify, it's gonna crash and burn on bare metal</span></div><div class="line" id="000546"><span class="nick" style="color:#8dd3c7"><a href="#000546" label="[00:05:46]">&lt;Googulator&gt;</a></span><span class="message">with the parameters now used</span></div><div class="line" id="000547"><span class="nick" style="color:#389600"><a href="#000547" label="[00:05:47]">&lt;fossy&gt;</a></span><span class="message">i think the most ideal scenario is that UEFI stage is solely in stage0-uefi and then live-bootstrap wouldn't need toooo much special logic for uefi version</span></div><div class="line" id="000554"><span class="nick" style="color:#389600"><a href="#000554" label="[00:05:54]">&lt;fossy&gt;</a></span><span class="message">which should be possible with that idea</span></div><div class="line" id="000603"><span class="nick" style="color:#2e2a4a"><a href="#000603" label="[00:06:03]">&lt;stikonas&gt;</a></span><span class="message">yeah, needing just 1 disk is quite important feature</span></div><div class="line" id="000634"><span class="nick" style="color:#389600"><a href="#000634" label="[00:06:34]">&lt;fossy&gt;</a></span><span class="message">I don't think there's any technical limitations to 1 disk. just not something i implemented in simplify PR for the sake of the PRs simplicity</span></div><div class="line" id="000637"><span class="nick" style="color:#8dd3c7"><a href="#000637" label="[00:06:37]">&lt;Googulator&gt;</a></span><span class="message">&gt; echo &quot;;&quot; | sfdisk &quot;/dev/${DISK}&quot;</span></div><div class="line" id="000643"><span class="nick" style="color:#389600"><a href="#000643" label="[00:06:43]">&lt;fossy&gt;</a></span><span class="message">Googulator: i haven't patched sfdisk, no</span></div><div class="line" id="000654"><span class="nick" style="color:#8dd3c7"><a href="#000654" label="[00:06:54]">&lt;Googulator&gt;</a></span><span class="message">Did you test on bare metal?</span></div><div class="line" id="000709"><span class="nick" style="color:#389600"><a href="#000709" label="[00:07:09]">&lt;fossy&gt;</a></span><span class="message">nope.. it hasn't got any of your bare metal changes</span></div><div class="line" id="000720"><span class="nick" style="color:#389600"><a href="#000720" label="[00:07:20]">&lt;fossy&gt;</a></span><span class="message">i wasn't expecting it to work on bare metal yet either</span></div><div class="line" id="000730"><span class="nick" style="color:#8dd3c7"><a href="#000730" label="[00:07:30]">&lt;Googulator&gt;</a></span><span class="message">OK, so only tested on qemu/bwrap/chroot</span></div><div class="line" id="000733"><span class="nick" style="color:#389600"><a href="#000733" label="[00:07:33]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="000810"><span class="nick" style="color:#389600"><a href="#000810" label="[00:08:10]">&lt;fossy&gt;</a></span><span class="message">that PR had very very minimal functionality changes</span></div><div class="line" id="000821"><span class="nick" style="color:#8dd3c7"><a href="#000821" label="[00:08:21]">&lt;Googulator&gt;</a></span><span class="message">for future reference, this is where I keep everything merged now: <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/tree/simplify-playground">https://github.com/Googulator/live-bootstrap/tree/simplify-playground</a> </span></div><div class="line" id="000848"><span class="nick" style="color:#8dd3c7"><a href="#000848" label="[00:08:48]">&lt;Googulator&gt;</a></span><span class="message">I'm trying to make the individual PRs independent as much as possible, but all will get merged here so I have something to actually test</span></div><div class="line" id="000936"><span class="nick" style="color:#389600"><a href="#000936" label="[00:09:36]">&lt;fossy&gt;</a></span><span class="message">that's a good workflow, i did something very similar for simplify branch</span></div><div class="line" id="001103"><span class="nick" style="color:#389600"><a href="#001103" label="[00:11:03]">&lt;fossy&gt;</a></span><span class="message">is the 1GB unpartitioned fairly arbitary? it might make more sense to calculate that on the fly</span></div><div class="line" id="001103"><span class="nick" style="color:#2e2a4a"><a href="#001103" label="[00:11:03]">&lt;stikonas&gt;</a></span><span class="message">yeah, that helped a lot with reviews...</span></div><div class="line" id="001112"><span class="nick" style="color:#2e2a4a"><a href="#001112" label="[00:11:12]">&lt;stikonas&gt;</a></span><span class="message">even though those smaller PRs had mostly the same content</span></div><div class="line" id="001116"><span class="nick" style="color:#2e2a4a"><a href="#001116" label="[00:11:16]">&lt;stikonas&gt;</a></span><span class="message">but definitely easier to review</span></div><div class="line" id="001119"><span class="nick" style="color:#389600"><a href="#001119" label="[00:11:19]">&lt;fossy&gt;</a></span><span class="message">yeah exactly stikonas</span></div><div class="line" id="001458"><span class="nick" style="color:#8dd3c7"><a href="#001458" label="[00:14:58]">&lt;Googulator&gt;</a></span><span class="message">The 1GB is fairly arbitrary, but I do want to keep it a power of 2</span></div><div class="line" id="001524"><span class="nick" style="color:#389600"><a href="#001524" label="[00:15:24]">&lt;fossy&gt;</a></span><span class="message">why a power of 2?</span></div><div class="line" id="001538"><span class="nick" style="color:#8dd3c7"><a href="#001538" label="[00:15:38]">&lt;Googulator&gt;</a></span><span class="message">alignment</span></div><div class="line" id="001543"><span class="nick" style="color:#8dd3c7"><a href="#001543" label="[00:15:43]">&lt;Googulator&gt;</a></span><span class="message">especially on SSDs</span></div><div class="line" id="001558"><span class="nick" style="color:#389600"><a href="#001558" label="[00:15:58]">&lt;fossy&gt;</a></span><span class="message">hmm, isn't 4K alignment generally sufficient</span></div><div class="line" id="001607"><span class="nick" style="color:#389600"><a href="#001607" label="[00:16:07]">&lt;fossy&gt;</a></span><span class="message">or do SSDs particularly like power of 2 alignment</span></div><div class="line" id="001607"><span class="nick" style="color:#8dd3c7"><a href="#001607" label="[00:16:07]">&lt;Googulator&gt;</a></span><span class="message">4K alignment is for AF HDDs</span></div><div class="line" id="001616"><span class="nick" style="color:#8dd3c7"><a href="#001616" label="[00:16:16]">&lt;Googulator&gt;</a></span><span class="message">For SSDs, it's a bit more complicated</span></div><div class="line" id="001642"><span class="nick" style="color:#8dd3c7"><a href="#001642" label="[00:16:42]">&lt;Googulator&gt;</a></span><span class="message">Real SSDs with a proper controller usually don't care much about alignment, as the controller will take care of it</span></div><div class="line" id="001706"><span class="nick" style="color:#389600"><a href="#001706" label="[00:17:06]">&lt;fossy&gt;</a></span><span class="message">i was about to say -- i'm a bit surprised SSD controllers don't do this</span></div><div class="line" id="001716"><span class="nick" style="color:#8dd3c7"><a href="#001716" label="[00:17:16]">&lt;Googulator&gt;</a></span><span class="message">But if you're using something like a USB drive or SD card, then you want to stay on an erase block boundary</span></div><div class="line" id="001717"><span class="nick" style="color:#389600"><a href="#001717" label="[00:17:17]">&lt;fossy&gt;</a></span><span class="message">but i guess there are bad/nonexistant controllers out there</span></div><div class="line" id="001721"><span class="nick" style="color:#389600"><a href="#001721" label="[00:17:21]">&lt;fossy&gt;</a></span><span class="message">yep ok</span></div><div class="line" id="001737"><span class="nick" style="color:#2e2a4a"><a href="#001737" label="[00:17:37]">&lt;stikonas&gt;</a></span><span class="message">generally recomentation is to keep partitions 1 MiB aligned</span></div><div class="line" id="001750"><span class="nick" style="color:#2e2a4a"><a href="#001750" label="[00:17:50]">&lt;stikonas&gt;</a></span><span class="message">which I think is still valid for SSDs...</span></div><div class="line" id="001804"><span class="nick" style="color:#8dd3c7"><a href="#001804" label="[00:18:04]">&lt;Googulator&gt;</a></span><span class="message">Erase blocks can be quite big - I've personally seen 32MiB erase blocks on an SD card</span></div><div class="line" id="001814"><span class="nick" style="color:#8dd3c7"><a href="#001814" label="[00:18:14]">&lt;Googulator&gt;</a></span><span class="message">&amp; anecdotally heard of 128MiB</span></div><div class="line" id="001906"><span class="nick" style="color:#8dd3c7"><a href="#001906" label="[00:19:06]">&lt;Googulator&gt;</a></span><span class="message">Also, 1GiB leaves space after the srcfs to create a boot partition at the end, without overwriting srcfs</span></div><div class="line" id="001936"><span class="nick" style="color:#8dd3c7"><a href="#001936" label="[00:19:36]">&lt;Googulator&gt;</a></span><span class="message">assuming a sane BIOS that doesn't require the boot partition to reside in the first 504MB or worse</span></div><div class="line" id="001953"><span class="nick" style="color:#389600"><a href="#001953" label="[00:19:53]">&lt;fossy&gt;</a></span><span class="message">hm, as in, after the 1GiB or before the 1GiB but after teh srcfs?</span></div><div class="line" id="002004"><span class="nick" style="color:#8dd3c7"><a href="#002004" label="[00:20:04]">&lt;Googulator&gt;</a></span><span class="message">between srcfs and 1GiB</span></div><div class="line" id="002018"><span class="nick" style="color:#389600"><a href="#002018" label="[00:20:18]">&lt;fossy&gt;</a></span><span class="message">a boot partition which does what?</span></div><div class="line" id="002023"><span class="nick" style="color:#8dd3c7"><a href="#002023" label="[00:20:23]">&lt;Googulator&gt;</a></span><span class="message">srcfs currently ends @ 283MiB</span></div><div class="line" id="002028"><span class="nick" style="color:#8dd3c7"><a href="#002028" label="[00:20:28]">&lt;Googulator&gt;</a></span><span class="message">holds e.g. GRUB</span></div><div class="line" id="002034"><span class="nick" style="color:#389600"><a href="#002034" label="[00:20:34]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="002036"><span class="nick" style="color:#389600"><a href="#002036" label="[00:20:36]">&lt;fossy&gt;</a></span><span class="message">i guess so</span></div><div class="line" id="002055"><span class="nick" style="color:#8dd3c7"><a href="#002055" label="[00:20:55]">&lt;Googulator&gt;</a></span><span class="message">It can be done without one, but better to have a dedicated /boot</span></div><div class="line" id="002158"><span class="nick" style="color:#389600"><a href="#002158" label="[00:21:58]">&lt;fossy&gt;</a></span><span class="message">i think this had something to do with your trusting trust drive - what was the benefit of keeping srcfs around?</span></div><div class="line" id="002333"><span class="nick" style="color:#8dd3c7"><a href="#002333" label="[00:23:33]">&lt;Googulator&gt;</a></span><span class="message">It's not about that, in fact, for the trusted Flash drive, I explicitly want to make the srcfs inaccessible once Linux starts</span></div><div class="line" id="002400"><span class="nick" style="color:#389600"><a href="#002400" label="[00:24:00]">&lt;fossy&gt;</a></span><span class="message">ok whats the benefit then?</span></div><div class="line" id="002407"><span class="nick" style="color:#8dd3c7"><a href="#002407" label="[00:24:07]">&lt;Googulator&gt;</a></span><span class="message">Mostly debugging</span></div><div class="line" id="002446"><span class="nick" style="color:#8dd3c7"><a href="#002446" label="[00:24:46]">&lt;Googulator&gt;</a></span><span class="message">Also, I was thinking of getting the previously erased sources in Linux again by reading srcfs</span></div><div class="line" id="002516"><span class="nick" style="color:#8dd3c7"><a href="#002516" label="[00:25:16]">&lt;Googulator&gt;</a></span><span class="message">It's an alternative path, vs. including distfiles in the initramfs</span></div><div class="line" id="002556"><span class="nick" style="color:#8dd3c7"><a href="#002556" label="[00:25:56]">&lt;Googulator&gt;</a></span><span class="message">But I guess it's not that important</span></div><div class="line" id="002617"><span class="nick" style="color:#2e2a4a"><a href="#002617" label="[00:26:17]">&lt;stikonas&gt;</a></span><span class="message">well, that can always be done manually</span></div><div class="line" id="002626"><span class="nick" style="color:#2e2a4a"><a href="#002626" label="[00:26:26]">&lt;stikonas&gt;</a></span><span class="message">probably doesn't have to be part of automation</span></div><div class="line" id="002702"><span class="nick" style="color:#8dd3c7"><a href="#002702" label="[00:27:02]">&lt;Googulator&gt;</a></span><span class="message">What's important is to have the real on-disk file system start in a sector divisible by 8 (to avoid issues with AF drives) and to have some space to install Grub's early stages into</span></div><div class="line" id="002743"><span class="nick" style="color:#8dd3c7"><a href="#002743" label="[00:27:43]">&lt;Googulator&gt;</a></span><span class="message">&amp; of course, all of that needs to be done while keeping sfdisk satisfied about CHS correctness</span></div><div class="line" id="002752"><span class="nick" style="color:#8dd3c7"><a href="#002752" label="[00:27:52]">&lt;Googulator&gt;</a></span><span class="message">(-S32 -H64 helps a lot there)</span></div><div class="line" id="002812"><span class="nick" style="color:#8dd3c7"><a href="#002812" label="[00:28:12]">&lt;Googulator&gt;</a></span><span class="message">(and --force)</span></div><div class="line" id="002816"><span class="nick" style="color:#389600"><a href="#002816" label="[00:28:16]">&lt;fossy&gt;</a></span><span class="message">yeah that's fine, it's just the 1GiB padding i'm not so sure about, i think the padding will cause more confusion for end users than the debugging benefits it provides (which can always be done elseways)</span></div><div class="line" id="002857"><span class="nick" style="color:#8dd3c7"><a href="#002857" label="[00:28:57]">&lt;Googulator&gt;</a></span><span class="message">Maybe reducing it to 512MiB could work</span></div><div class="line" id="002905"><span class="nick" style="color:#8dd3c7"><a href="#002905" label="[00:29:05]">&lt;Googulator&gt;</a></span><span class="message">that still leaves enough space for /boot</span></div><div class="line" id="002939"><span class="nick" style="color:#8dd3c7"><a href="#002939" label="[00:29:39]">&lt;Googulator&gt;</a></span><span class="message">also, if you make /boot FAT32, it can also be used as EFIESP</span></div><div class="line" id="003004"><span class="nick" style="color:#389600"><a href="#003004" label="[00:30:04]">&lt;fossy&gt;</a></span><span class="message">OHH wait i was misinterpreting this a bit</span></div><div class="line" id="003006"><span class="nick" style="color:#8dd3c7"><a href="#003006" label="[00:30:06]">&lt;Googulator&gt;</a></span><span class="message">so you bootstrap in legacy/CSM mode (for now, until stage0-uefi is ready), then install grub, and reboot using UEFI</span></div><div class="line" id="003023"><span class="nick" style="color:#389600"><a href="#003023" label="[00:30:23]">&lt;fossy&gt;</a></span><span class="message">the partition table itself still fills the whole disk...</span></div><div class="line" id="003028"><span class="nick" style="color:#8dd3c7"><a href="#003028" label="[00:30:28]">&lt;Googulator&gt;</a></span><span class="message">Yes, it does</span></div><div class="line" id="003036"><span class="nick" style="color:#8dd3c7"><a href="#003036" label="[00:30:36]">&lt;Googulator&gt;</a></span><span class="message">Just leaves empty space at the beginning</span></div><div class="line" id="003120"><span class="nick" style="color:#8dd3c7"><a href="#003120" label="[00:31:20]">&lt;Googulator&gt;</a></span><span class="message">Perfect for /boot or preserving srcfs, if you care about those</span></div><div class="line" id="003256"><span class="nick" style="color:#389600"><a href="#003256" label="[00:32:56]">&lt;fossy&gt;</a></span><span class="message">ok in that case my actual preference would be making a partition of type 0 covering the srcfs region followed by empty space followed by the partition</span></div><div class="line" id="003305"><span class="nick" style="color:#389600"><a href="#003305" label="[00:33:05]">&lt;fossy&gt;</a></span><span class="message">that way it's really clear to end users once the bootstrap completes what's going on</span></div><div class="line" id="003321"><span class="nick" style="color:#8dd3c7"><a href="#003321" label="[00:33:21]">&lt;Googulator&gt;</a></span><span class="message">I would love to do that - if we had a sane tool to do so</span></div><div class="line" id="003328"><span class="nick" style="color:#8dd3c7"><a href="#003328" label="[00:33:28]">&lt;Googulator&gt;</a></span><span class="message">like parted or modern fdisk</span></div><div class="line" id="003331"><span class="nick" style="color:#389600"><a href="#003331" label="[00:33:31]">&lt;fossy&gt;</a></span><span class="message">mmmm</span></div><div class="line" id="003356"><span class="nick" style="color:#389600"><a href="#003356" label="[00:33:56]">&lt;fossy&gt;</a></span><span class="message">i might try building parted but not sure how that will go</span></div><div class="line" id="003358"><span class="nick" style="color:#389600"><a href="#003358" label="[00:33:58]">&lt;fossy&gt;</a></span><span class="message">will get back to you on that</span></div><div class="line" id="003401"><span class="nick" style="color:#8dd3c7"><a href="#003401" label="[00:34:01]">&lt;Googulator&gt;</a></span><span class="message">already, I'm fighting fdisk's insistence on IBM PC-XT compatibility to just get things to work at all on bare metal</span></div><div class="line" id="003433"><span class="nick" style="color:#8dd3c7"><a href="#003433" label="[00:34:33]">&lt;Googulator&gt;</a></span><span class="message">one more thing: mkfs.ext4 will need -F -F</span></div><div class="line" id="003448"><span class="nick" style="color:#8dd3c7"><a href="#003448" label="[00:34:48]">&lt;Googulator&gt;</a></span><span class="message">otherwise nasty surprises can result when you bootstrap twice from the same physical HDD</span></div><div class="line" id="003459"><span class="nick" style="color:#8dd3c7"><a href="#003459" label="[00:34:59]">&lt;Googulator&gt;</a></span><span class="message">don't ask me how I learned that...</span></div><div class="line" id="003505"><span class="nick" style="color:#389600"><a href="#003505" label="[00:35:05]">&lt;fossy&gt;</a></span><span class="message">.... weird</span></div><div class="line" id="003525"><span class="nick" style="color:#2e2a4a"><a href="#003525" label="[00:35:25]">&lt;stikonas&gt;</a></span><span class="message">modern fdisk is better suited for us</span></div><div class="line" id="003530"><span class="nick" style="color:#2e2a4a"><a href="#003530" label="[00:35:30]">&lt;stikonas&gt;</a></span><span class="message">at least that's my experience</span></div><div class="line" id="003546"><span class="nick" style="color:#2e2a4a"><a href="#003546" label="[00:35:46]">&lt;stikonas&gt;</a></span><span class="message">parted tries to be a bit higher level tool...</span></div><div class="line" id="003552"><span class="nick" style="color:#8dd3c7"><a href="#003552" label="[00:35:52]">&lt;Googulator&gt;</a></span><span class="message">without -F -F, mkfs checks for an existing superblock and errors out if it finds one - it wants to play it safe and not overwrite an important FS</span></div><div class="line" id="003605"><span class="nick" style="color:#8dd3c7"><a href="#003605" label="[00:36:05]">&lt;Googulator&gt;</a></span><span class="message">but of course, our error handling at that point is &quot;ABORTING HARD&quot;</span></div><div class="line" id="003606"><span class="nick" style="color:#2e2a4a"><a href="#003606" label="[00:36:06]">&lt;stikonas&gt;</a></span><span class="message">where as sfdisk really just deals with partitioning without caring for file systems</span></div><div class="line" id="003617"><span class="nick" style="color:#8dd3c7"><a href="#003617" label="[00:36:17]">&lt;Googulator&gt;</a></span><span class="message">&amp; several hours of work irrecoverably lost at that point</span></div><div class="line" id="003912"><span class="nick" style="color:#8dd3c7"><a href="#003912" label="[00:39:12]">&lt;Googulator&gt;</a></span><span class="message">&gt;     find / -xdev -type c -or -type b -not -name &quot;ram*&quot; -printf &quot;nod %p %m %U %G %y &quot; -exec stat -c '%Hr %Lr' {} \; &gt;&gt; /initramfs.list</span></div><div class="line" id="003912"><span class="nick" style="color:#8dd3c7"><a href="#003912" label="[00:39:12]">&lt;Googulator&gt;</a></span><span class="message">I'm surprised this works</span></div><div class="line" id="003923"><span class="nick" style="color:#8dd3c7"><a href="#003923" label="[00:39:23]">&lt;Googulator&gt;</a></span><span class="message">-printf and -exec in the same command</span></div><div class="line" id="004012"><span class="nick" style="color:#8dd3c7"><a href="#004012" label="[00:40:12]">&lt;Googulator&gt;</a></span><span class="message">linux booted with my changes (in qemu)</span></div><div class="line" id="004418"><span class="nick" style="color:#8dd3c7"><a href="#004418" label="[00:44:18]">&lt;Googulator&gt;</a></span><span class="message">btw, another quick tip for enterprising bare-metallurgists: don't bootstrap with a GeForce GT 730</span></div><div class="line" id="004454"><span class="nick" style="color:#389600"><a href="#004454" label="[00:44:54]">&lt;fossy&gt;</a></span><span class="message">yeah i was slightly surprised that worked but was glad to see it did</span></div><div class="line" id="004505"><span class="nick" style="color:#8dd3c7"><a href="#004505" label="[00:45:05]">&lt;Googulator&gt;</a></span><span class="message">linux-4.9.10 doesn't like it for some reason, consistently locks up with a white-on-green screen</span></div><div class="line" id="004513"><span class="nick" style="color:#389600"><a href="#004513" label="[00:45:13]">&lt;fossy&gt;</a></span><span class="message">weird</span></div><div class="line" id="004526"><span class="nick" style="color:#8dd3c7"><a href="#004526" label="[00:45:26]">&lt;Googulator&gt;</a></span><span class="message">probably incomplete implementation for that generation of cards</span></div><div class="line" id="004544"><span class="nick" style="color:#8dd3c7"><a href="#004544" label="[00:45:44]">&lt;Googulator&gt;</a></span><span class="message">or maybe some incompatibility between the much older chipset and it</span></div><div class="line" id="004616"><span class="nick" style="color:#8dd3c7"><a href="#004616" label="[00:46:16]">&lt;Googulator&gt;</a></span><span class="message">NV3x (GeForce FX/PCX generation) works perfectly though, and luckily I had one of those at hand</span></div><div class="line" id="004645"><span class="nick" style="color:#8dd3c7"><a href="#004645" label="[00:46:45]">&lt;Googulator&gt;</a></span><span class="message">Intel integrated also works-ish, but it won't actually get a high res console</span></div><div class="line" id="004652"><span class="nick" style="color:#8dd3c7"><a href="#004652" label="[00:46:52]">&lt;Googulator&gt;</a></span><span class="message">limited to 640x480, 16 colors</span></div><div class="line" id="004723"><span class="nick" style="color:#8dd3c7"><a href="#004723" label="[00:47:23]">&lt;Googulator&gt;</a></span><span class="message">probably something wrong with my kernel configuration (maybe uvesafb taking priority, and then not finding the needed userspace tools)</span></div><div class="line" id="004756"><span class="nick" style="color:#8dd3c7"><a href="#004756" label="[00:47:56]">&lt;Googulator&gt;</a></span><span class="message">BTW, I wonder if we even need that find line</span></div><div class="line" id="004803"><span class="nick" style="color:#8dd3c7"><a href="#004803" label="[00:48:03]">&lt;Googulator&gt;</a></span><span class="message">it's basically for /dev</span></div><div class="line" id="004823"><span class="nick" style="color:#8dd3c7"><a href="#004823" label="[00:48:23]">&lt;Googulator&gt;</a></span><span class="message">but it doesn't sound like a sane idea to copy /dev from Fiwix to Linux</span></div><div class="line" id="004836"><span class="nick" style="color:#389600"><a href="#004836" label="[00:48:36]">&lt;fossy&gt;</a></span><span class="message">technically no, we could just rerun populate_device_nodes</span></div><div class="line" id="004841"><span class="nick" style="color:#8dd3c7"><a href="#004841" label="[00:48:41]">&lt;Googulator&gt;</a></span><span class="message">not even that</span></div><div class="line" id="004846"><span class="nick" style="color:#8dd3c7"><a href="#004846" label="[00:48:46]">&lt;Googulator&gt;</a></span><span class="message">we have devtmpfs</span></div><div class="line" id="004900"><span class="nick" style="color:#8dd3c7"><a href="#004900" label="[00:49:00]">&lt;Googulator&gt;</a></span><span class="message">mkdir /dev; mount -t devtmpfs none /dev</span></div><div class="line" id="004908"><span class="nick" style="color:#389600"><a href="#004908" label="[00:49:08]">&lt;fossy&gt;</a></span><span class="message">are we acutlaly using devtmpfs</span></div><div class="line" id="004928"><span class="nick" style="color:#8dd3c7"><a href="#004928" label="[00:49:28]">&lt;Googulator&gt;</a></span><span class="message">pre-disk init, we probably use it</span></div><div class="line" id="004940"><span class="nick" style="color:#8dd3c7"><a href="#004940" label="[00:49:40]">&lt;Googulator&gt;</a></span><span class="message">it's mounted by default in initramfs in recent-ish Linuxes</span></div><div class="line" id="005022"><span class="nick" style="color:#8dd3c7"><a href="#005022" label="[00:50:22]">&lt;Googulator&gt;</a></span><span class="message">although it could be disabled in the current Linux kernel config</span></div><div class="line" id="005041"><span class="nick" style="color:#8dd3c7"><a href="#005041" label="[00:50:41]">&lt;Googulator&gt;</a></span><span class="message">it's definitely enabled in mine, I used it when I was bringing up bare-metal on the WIP PR</span></div><div class="line" id="005056"><span class="nick" style="color:#389600"><a href="#005056" label="[00:50:56]">&lt;fossy&gt;</a></span><span class="message">&quot;If CONFIG_DEVTMPFS_MOUNT is set to y when building the kernel, the resulting kernel will automatically attempt to mount devtmpfs to /dev after mounting a root filesystem - unless the kernel is using an initramfs for the initial root filesystem&quot;</span></div><div class="line" id="005106"><span class="nick" style="color:#389600"><a href="#005106" label="[00:51:06]">&lt;fossy&gt;</a></span><span class="message">and we have CONFIG_DEVTMPFS_MOUNT=y</span></div><div class="line" id="005151"><span class="nick" style="color:#8dd3c7"><a href="#005151" label="[00:51:51]">&lt;Googulator&gt;</a></span><span class="message">CONFIG_DEVTMPFS=y is what matters to us</span></div><div class="line" id="005203"><span class="nick" style="color:#8dd3c7"><a href="#005203" label="[00:52:03]">&lt;Googulator&gt;</a></span><span class="message">because &quot;the kernel is using an initramfs for the initial root filesystem&quot;</span></div><div class="line" id="005258"><span class="nick" style="color:#389600"><a href="#005258" label="[00:52:58]">&lt;fossy&gt;</a></span><span class="message">as far as i can tell CONFIG_DEVTMPFS=y just means that devtmpfs *exists*, not that it is automoutned</span></div><div class="line" id="005325"><span class="nick" style="color:#8dd3c7"><a href="#005325" label="[00:53:25]">&lt;Googulator&gt;</a></span><span class="message">but it's always automounted in an initramfs iirc, if /dev exists in it</span></div><div class="line" id="005402"><span class="nick" style="color:#8dd3c7"><a href="#005402" label="[00:54:02]">&lt;Googulator&gt;</a></span><span class="message">this is so you don't need to include systemd in your (regular, non-bootstrap) initramfs</span></div><div class="line" id="005531"><span class="nick" style="color:#389600"><a href="#005531" label="[00:55:31]">&lt;fossy&gt;</a></span><span class="message">oh ok, devtmpfs automount in initramfs is post- linux 4.9.10</span></div><div class="line" id="005537"><span class="nick" style="color:#389600"><a href="#005537" label="[00:55:37]">&lt;fossy&gt;</a></span><span class="message">that explains things</span></div><div class="line" id="005549"><span class="nick" style="color:#8dd3c7"><a href="#005549" label="[00:55:49]">&lt;Googulator&gt;</a></span><span class="message">It should be there in 4.9.10 already</span></div><div class="line" id="005748"><span class="nick" style="color:#8dd3c7"><a href="#005748" label="[00:57:48]">&lt;Googulator&gt;</a></span><span class="message">hmm... now I'm not sure</span></div><div class="line" id="005759"><span class="nick" style="color:#389600"><a href="#005759" label="[00:57:59]">&lt;fossy&gt;</a></span><span class="message">nope</span></div><div class="line" id="005802"><span class="nick" style="color:#389600"><a href="#005802" label="[00:58:02]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://patchwork.kernel.org/project/linux-sh/patch/576AE1C5.5090909@landley.net/">https://patchwork.kernel.org/project/linux-sh/patch/576AE1C5.5090909@landley.net/</a> </span></div><div class="line" id="005805"><span class="nick" style="color:#389600"><a href="#005805" label="[00:58:05]">&lt;fossy&gt;</a></span><span class="message">is not in 4.9.10</span></div><div class="line" id="005934"><span class="nick" style="color:#2e2a4a"><a href="#005934" label="[00:59:34]">&lt;stikonas&gt;</a></span><span class="message">when is it in?</span></div><div class="line" id="010006"><span class="nick" style="color:#2e2a4a"><a href="#010006" label="[01:00:06]">&lt;stikonas&gt;</a></span><span class="message">(though perhaps kernel upgrade is out of scope now...)</span></div><div class="line" id="010052"><span class="nick" style="color:#389600"><a href="#010052" label="[01:00:52]">&lt;fossy&gt;</a></span><span class="message">very easy to port anyways</span></div><div class="line" id="010703"><span class="nick" style="color:#2e2a4a"><a href="#010703" label="[01:07:03]">&lt;stikonas&gt;</a></span><span class="message">sigh, UEFI's are quite annoying...</span></div><div class="line" id="010748"><span class="nick" style="color:#2e2a4a"><a href="#010748" label="[01:07:48]">&lt;stikonas&gt;</a></span><span class="message">fixed stack alignment in hex1</span></div><div class="line" id="011123"><span class="nick" style="color:#2e2a4a"><a href="#011123" label="[01:11:23]">&lt;stikonas&gt;</a></span><span class="message">so hex1 no longer gets stuck, but now it just doesn't create any output on baremetal... (still works fine in qemu)</span></div><div class="line" id="012343"><span class="nick" style="color:#8dd3c7"><a href="#012343" label="[01:23:43]">&lt;Googulator&gt;</a></span><span class="message">fossy: is it safe to use something like &quot;\&quot;&quot; in script-generator.c?</span></div><div class="line" id="012350"><span class="nick" style="color:#8dd3c7"><a href="#012350" label="[01:23:50]">&lt;Googulator&gt;</a></span><span class="message">Or will M2-Planet choke on that?</span></div><div class="line" id="013412"><span class="nick" style="color:#8dd3c7"><a href="#013412" label="[01:34:12]">&lt;Googulator&gt;</a></span><span class="message">I'm trying to do something like ( SWAP_SIZE != DISK_SIZE ) in manifest predicates - I've already implemented != support, but need a way to distinguish between variable-to-constant vs variable-to-variable comparisons</span></div><div class="line" id="013430"><span class="nick" style="color:#389600"><a href="#013430" label="[01:34:30]">&lt;fossy&gt;</a></span><span class="message">&quot;\&quot;&quot; should work...</span></div><div class="line" id="013437"><span class="nick" style="color:#389600"><a href="#013437" label="[01:34:37]">&lt;fossy&gt;</a></span><span class="message">but i'm not certain of what</span></div><div class="line" id="013445"><span class="nick" style="color:#389600"><a href="#013445" label="[01:34:45]">&lt;fossy&gt;</a></span><span class="message">i think ive escaped quotes in m2-planet before</span></div><div class="line" id="013451"><span class="nick" style="color:#389600"><a href="#013451" label="[01:34:51]">&lt;fossy&gt;</a></span><span class="message">s/what/that/</span></div><div class="line" id="013454"><span class="nick" style="color:#8dd3c7"><a href="#013454" label="[01:34:54]">&lt;Googulator&gt;</a></span><span class="message">( VARIABLE1 == VARIABLE2 ) vs. ( VARIABLE == &quot; VALUE &quot; ) seems to be the obvious choice</span></div><div class="line" id="013515"><span class="nick" style="color:#8dd3c7"><a href="#013515" label="[01:35:15]">&lt;Googulator&gt;</a></span><span class="message">also define: ORIG_JOBS = JOBS</span></div><div class="line" id="013525"><span class="nick" style="color:#8dd3c7"><a href="#013525" label="[01:35:25]">&lt;Googulator&gt;</a></span><span class="message">and then define: JOBS = &quot; 1 &quot;</span></div><div class="line" id="013548"><span class="nick" style="color:#389600"><a href="#013548" label="[01:35:48]">&lt;fossy&gt;</a></span><span class="message">why not just start with quote means string, no quote means variable?</span></div><div class="line" id="013553"><span class="nick" style="color:#389600"><a href="#013553" label="[01:35:53]">&lt;fossy&gt;</a></span><span class="message">instead of spaces about the quote</span></div><div class="line" id="013636"><span class="nick" style="color:#8dd3c7"><a href="#013636" label="[01:36:36]">&lt;Googulator&gt;</a></span><span class="message">because it's hard to ignore the closing quote</span></div><div class="line" id="013657"><span class="nick" style="color:#8dd3c7"><a href="#013657" label="[01:36:57]">&lt;Googulator&gt;</a></span><span class="message">same reasaon why you can't have (VARIABLE1 &amp;&amp; VARIABLE2)</span></div><div class="line" id="013707"><span class="nick" style="color:#8dd3c7"><a href="#013707" label="[01:37:07]">&lt;Googulator&gt;</a></span><span class="message">only ( VARIABLE1 &amp;&amp; VARIABLE2 )</span></div><div class="line" id="013814"><span class="nick" style="color:#8dd3c7"><a href="#013814" label="[01:38:14]">&lt;Googulator&gt;</a></span><span class="message">you would need to use something like strncpy(target, tok-&gt;val + 1, strlen(tok-&gt;val + 1) - 1)</span></div><div class="line" id="013832"><span class="nick" style="color:#8dd3c7"><a href="#013832" label="[01:38:32]">&lt;Googulator&gt;</a></span><span class="message">and I'm not sure M2 would like that</span></div><div class="line" id="013920"><span class="nick" style="color:#8dd3c7"><a href="#013920" label="[01:39:20]">&lt;Googulator&gt;</a></span><span class="message">also, right now, VARIABLE == &quot; VALUE WITH SPACE &quot; won't work</span></div><div class="line" id="013937"><span class="nick" style="color:#8dd3c7"><a href="#013937" label="[01:39:37]">&lt;Googulator&gt;</a></span><span class="message">because of how tokenization is done</span></div><div class="line" id="013939"><span class="nick" style="color:#389600"><a href="#013939" label="[01:39:39]">&lt;fossy&gt;</a></span><span class="message">hold up, what's the actual usecase for variable-constant comparisons?</span></div><div class="line" id="013955"><span class="nick" style="color:#8dd3c7"><a href="#013955" label="[01:39:55]">&lt;Googulator&gt;</a></span><span class="message">it's almost all variable-constant</span></div><div class="line" id="014003"><span class="nick" style="color:#389600"><a href="#014003" label="[01:40:03]">&lt;fossy&gt;</a></span><span class="message">oh, currently, alright</span></div><div class="line" id="014023"><span class="nick" style="color:#8dd3c7"><a href="#014023" label="[01:40:23]">&lt;Googulator&gt;</a></span><span class="message">variable-variable is just nice to have, what I'm after is backing up a variable under another name</span></div><div class="line" id="014128"><span class="nick" style="color:#8dd3c7"><a href="#014128" label="[01:41:28]">&lt;Googulator&gt;</a></span><span class="message">define: ORIGINAL_JOBS = JOBS</span></div><div class="line" id="014129"><span class="nick" style="color:#8dd3c7"><a href="#014129" label="[01:41:29]">&lt;Googulator&gt;</a></span><span class="message">define: JOBS = &quot; 1 &quot;</span></div><div class="line" id="014129"><span class="nick" style="color:#8dd3c7"><a href="#014129" label="[01:41:29]">&lt;Googulator&gt;</a></span><span class="message">... bootstrap to Linux ...</span></div><div class="line" id="014130"><span class="nick" style="color:#8dd3c7"><a href="#014130" label="[01:41:30]">&lt;Googulator&gt;</a></span><span class="message">define: JOBS = ORIGINAL_JOBS</span></div><div class="line" id="014148"><span class="nick" style="color:#389600"><a href="#014148" label="[01:41:48]">&lt;fossy&gt;</a></span><span class="message">hmm, that won't really work at the moment; defines occur globally. that will just make JOBS whatever it was originally</span></div><div class="line" id="014153"><span class="nick" style="color:#8dd3c7"><a href="#014153" label="[01:41:53]">&lt;Googulator&gt;</a></span><span class="message">(simplified, because all of those also need to be transferred into bootstrap.cfg)</span></div><div class="line" id="014232"><span class="nick" style="color:#389600"><a href="#014232" label="[01:42:32]">&lt;fossy&gt;</a></span><span class="message">currently a variable cannot hold two different values at different parts of the bootstrap is what i mean</span></div><div class="line" id="014311"><span class="nick" style="color:#8dd3c7"><a href="#014311" label="[01:43:11]">&lt;Googulator&gt;</a></span><span class="message">I understand it's not scoped, but why wouldn't overdefining an existing value work?</span></div><div class="line" id="014419"><span class="nick" style="color:#8dd3c7"><a href="#014419" label="[01:44:19]">&lt;Googulator&gt;</a></span><span class="message">I actually got something like this to work in the last iteration, just with slightly different syntax</span></div><div class="line" id="014437"><span class="nick" style="color:#8dd3c7"><a href="#014437" label="[01:44:37]">&lt;Googulator&gt;</a></span><span class="message">I used define: VARIABLE = VALUE vs define: VARIABLE1 = $ VARIABLE2 there</span></div><div class="line" id="014535"><span class="nick" style="color:#8dd3c7"><a href="#014535" label="[01:45:35]">&lt;Googulator&gt;</a></span><span class="message">but I now think it's cleaner to mark literals explicitly and have everything else be a name, vs. have plain text be names in one context, values in another, and having to mark when you do want a name even though it would by default be a value</span></div><div class="line" id="014619"><span class="nick" style="color:#8dd3c7"><a href="#014619" label="[01:46:19]">&lt;Googulator&gt;</a></span><span class="message">there's actually code in script-generator.c for updating an existing variable</span></div><div class="line" id="014637"><span class="nick" style="color:#389600"><a href="#014637" label="[01:46:37]">&lt;fossy&gt;</a></span><span class="message">yes, you can update an existing variable, but only the new value is ever used</span></div><div class="line" id="014651"><span class="nick" style="color:#389600"><a href="#014651" label="[01:46:51]">&lt;fossy&gt;</a></span><span class="message">the only way that variables are passed through to live-bootstrap is through output_config function</span></div><div class="line" id="014652"><span class="nick" style="color:#8dd3c7"><a href="#014652" label="[01:46:52]">&lt;Googulator&gt;</a></span><span class="message">the only trick to keep in mind is that bootstrap.cfg will initially contain the values valid at the end</span></div><div class="line" id="014710"><span class="nick" style="color:#389600"><a href="#014710" label="[01:47:10]">&lt;fossy&gt;</a></span><span class="message">yeah exactly...</span></div><div class="line" id="014715"><span class="nick" style="color:#389600"><a href="#014715" label="[01:47:15]">&lt;fossy&gt;</a></span><span class="message">so how does backing up the variable help?</span></div><div class="line" id="014719"><span class="nick" style="color:#8dd3c7"><a href="#014719" label="[01:47:19]">&lt;Googulator&gt;</a></span><span class="message">right, that's what I meant by having to also use an improve step to transfer the desired value into bootstrap.cfg</span></div><div class="line" id="014733"><span class="nick" style="color:#8dd3c7"><a href="#014733" label="[01:47:33]">&lt;Googulator&gt;</a></span><span class="message">It helps if you're using that variable for predicates</span></div><div class="line" id="014836"><span class="nick" style="color:#8dd3c7"><a href="#014836" label="[01:48:36]">&lt;Googulator&gt;</a></span><span class="message">also in kaem</span></div><div class="line" id="014902"><span class="nick" style="color:#389600"><a href="#014902" label="[01:49:02]">&lt;fossy&gt;</a></span><span class="message">oh okay... but in this context of JOBS, what did you do to make JOBS = 1 ever actually apply?</span></div><div class="line" id="015125"><span class="nick" style="color:#8dd3c7"><a href="#015125" label="[01:51:25]">&lt;Googulator&gt;</a></span><span class="message">I reset JOBS to 1 as the very last step in the manifest</span></div><div class="line" id="015137"><span class="nick" style="color:#8dd3c7"><a href="#015137" label="[01:51:37]">&lt;Googulator&gt;</a></span><span class="message">so that's what gets written to bootstrap.cfg</span></div><div class="line" id="015225"><span class="nick" style="color:#8dd3c7"><a href="#015225" label="[01:52:25]">&lt;Googulator&gt;</a></span><span class="message">then I use an improve step immediately after setting JOBS = ORIGINAL_JOBS that appends the correct value of JOBS to bootstrap.cfg, so it gets used from then on</span></div><div class="line" id="015240"><span class="nick" style="color:#389600"><a href="#015240" label="[01:52:40]">&lt;fossy&gt;</a></span><span class="message">okay that makes a lot more sense</span></div><div class="line" id="015530"><span class="nick" style="color:#8dd3c7"><a href="#015530" label="[01:55:30]">&lt;Googulator&gt;</a></span><span class="message">All of this is needed to reenable bootstrapping on multiple cores</span></div><div class="line" id="015541"><span class="nick" style="color:#8dd3c7"><a href="#015541" label="[01:55:41]">&lt;Googulator&gt;</a></span><span class="message">using kernel bootstrap</span></div><div class="line" id="020618"><span class="nick" style="color:#389600"><a href="#020618" label="[02:06:18]">&lt;fossy&gt;</a></span><span class="message">yeah, i figured</span></div><div class="line" id="023420"><span class="nick" style="color:#8dd3c7"><a href="#023420" label="[02:34:20]">&lt;Googulator&gt;</a></span><span class="message">fossy: the script-generator uninitialized variable bug I reported on the 5th came back to haunt me now...</span></div><div class="line" id="023446"><span class="nick" style="color:#8dd3c7"><a href="#023446" label="[02:34:46]">&lt;Googulator&gt;</a></span><span class="message">    Directive *last;</span></div><div class="line" id="023510"><span class="nick" style="color:#8dd3c7"><a href="#023510" label="[02:35:10]">&lt;Googulator&gt;</a></span><span class="message">that's gonna get used uninitialized if the very first directive in the manifest is a define</span></div><div class="line" id="024647"><span class="nick" style="color:#8dd3c7"><a href="#024647" label="[02:46:47]">&lt;Googulator&gt;</a></span><span class="message">bare metal time, wish me luck :)</span></div><div class="line" id="024726"><span class="nick" style="color:#6b8072"><a href="#024726" label="[02:47:26]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Good luck!</span></div><div class="line" id="025323"><span class="nick" style="color:#8dd3c7"><a href="#025323" label="[02:53:23]">&lt;Googulator&gt;</a></span><span class="message">...and after some fiddling with the memory modules, it booted</span></div><div class="line" id="025409"><span class="nick" style="color:#8dd3c7"><a href="#025409" label="[02:54:09]">&lt;Googulator&gt;</a></span><span class="message">seems to have an issue cold-booting with 4 different sticks of RAM installed</span></div><div class="line" id="025455"><span class="nick" style="color:#8dd3c7"><a href="#025455" label="[02:54:55]">&lt;Googulator&gt;</a></span><span class="message">boots fine with 2, then adding 2 more (while standby power is on, but the board is not running) works</span></div><div class="line" id="025512"><span class="nick" style="color:#8dd3c7"><a href="#025512" label="[02:55:12]">&lt;Googulator&gt;</a></span><span class="message">but all 4 installed + multiple days without power = black screen</span></div><div class="line" id="025621"><span class="nick" style="color:#8dd3c7"><a href="#025621" label="[02:56:21]">&lt;Googulator&gt;</a></span><span class="message">reminds me of my old Acer which wouldn't boot after a CMOS clear with more 4GB or more installed</span></div><div class="line" id="025647"><span class="nick" style="color:#8dd3c7"><a href="#025647" label="[02:56:47]">&lt;Googulator&gt;</a></span><span class="message">had to boot once with 3GB</span></div><div class="line" id="025700"><span class="nick" style="color:#8dd3c7"><a href="#025700" label="[02:57:00]">&lt;Googulator&gt;</a></span><span class="message">then swapping in the original sticks would work</span></div><div class="line" id="025733"><span class="nick" style="color:#8dd3c7"><a href="#025733" label="[02:57:33]">&lt;Googulator&gt;</a></span><span class="message">Hello,M2-mes!</span></div><div class="line" id="031823"><span class="nick" style="color:#8dd3c7"><a href="#031823" label="[03:18:23]">&lt;Googulator&gt;</a></span><span class="message">take #2: forgot to patch memory map &amp; ramdisk size in kexec-fiwix...</span></div><div class="line" id="031900"><span class="nick" style="color:#8dd3c7"><a href="#031900" label="[03:19:00]">&lt;Googulator&gt;</a></span><span class="message">(the commit I just pushed to simplify-playground already has these fixed, for anyone trying at home)</span></div><div class="line" id="033508"><span class="nick" style="color:#8dd3c7"><a href="#033508" label="[03:35:08]">&lt;Googulator&gt;</a></span><span class="message">fossy: just caught another bug that got through the big PR: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/commit/545bb42ca800af28086ebd1fa2c8ed46726a6f74#diff-e3cf7b4ae6ba10383ad9b192d90d49c82c4435b0b5740bf213691c699f277200R170">https://github.com/fosslinux/live-bootstrap/commit/545bb42ca800af28086ebd1fa2c8ed46726a6f74#diff-e3cf7b4ae6ba10383ad9b192d90d49c82c4435b0b5740bf213691c699f277200R170</a> </span></div><div class="line" id="033547"><span class="nick" style="color:#8dd3c7"><a href="#033547" label="[03:35:47]">&lt;Googulator&gt;</a></span><span class="message">shutil.copytree expects its target directory to _not_ exist yet when called</span></div><div class="line" id="034159"><span class="nick" style="color:#389600"><a href="#034159" label="[03:41:59]">&lt;fossy&gt;</a></span><span class="message">oh totally forgot about that script-generator bug Googulator</span></div><div class="line" id="034215"><span class="nick" style="color:#8dd3c7"><a href="#034215" label="[03:42:15]">&lt;Googulator&gt;</a></span><span class="message">luckily it's an easy one</span></div><div class="line" id="034312"><span class="nick" style="color:#389600"><a href="#034312" label="[03:43:12]">&lt;fossy&gt;</a></span><span class="message">hm, not sure when that external_sources bug was added, because i did test external-sources near the end</span></div><div class="line" id="035722"><span class="nick" style="color:#8dd3c7"><a href="#035722" label="[03:57:22]">&lt;Googulator&gt;</a></span><span class="message">looks like it's not the only bug in bwrap either: mknod: `/dev/sda': Operation not permitted</span></div><div class="line" id="035731"><span class="nick" style="color:#8dd3c7"><a href="#035731" label="[03:57:31]">&lt;Googulator&gt;</a></span><span class="message">or maybe my security settings are wrong?</span></div><div class="line" id="040054"><span class="nick" style="color:#8dd3c7"><a href="#040054" label="[04:00:54]">&lt;Googulator&gt;</a></span><span class="message">meanwhile, bare metal has reached Fiwix :)</span></div><div class="line" id="044027"><span class="nick" style="color:#8dd3c7"><a href="#044027" label="[04:40:27]">&lt;Googulator&gt;</a></span><span class="message">...and it's building Linux</span></div><div class="line" id="051516"><span class="nick" style="color:#8dd3c7"><a href="#051516" label="[05:15:16]">&lt;Googulator&gt;</a></span><span class="message">Booted into Linux... and it failed on creating swap</span></div><div class="line" id="051632"><span class="nick" style="color:#8dd3c7"><a href="#051632" label="[05:16:32]">&lt;Googulator&gt;</a></span><span class="message">and now I get it :)</span></div><div class="line" id="051639"><span class="nick" style="color:#8dd3c7"><a href="#051639" label="[05:16:39]">&lt;Googulator&gt;</a></span><span class="message">created swap.sh in the wrong directory...</span></div><div class="line" id="051844"><span class="nick" style="color:#8dd3c7"><a href="#051844" label="[05:18:44]">&lt;Googulator&gt;</a></span><span class="message">thanks to the new Bash trap feature, it's salvageable</span></div><div class="line" id="051904"><span class="nick" style="color:#8dd3c7"><a href="#051904" label="[05:19:04]">&lt;Googulator&gt;</a></span><span class="message">(I just need to create the swap by hand, and then drop back to the script)</span></div><div class="line" id="051923"><span class="nick" style="color:#389600"><a href="#051923" label="[05:19:23]">&lt;fossy&gt;</a></span><span class="message">i'll retest bwrap, not sure i tested it sufficiently toward the end</span></div><div class="line" id="052056"><span class="nick" style="color:#8dd3c7"><a href="#052056" label="[05:20:56]">&lt;Googulator&gt;</a></span><span class="message">manually creating the swap worked, now building curl</span></div><div class="line" id="052123"><span class="nick" style="color:#8dd3c7"><a href="#052123" label="[05:21:23]">&lt;Googulator&gt;</a></span><span class="message">meanwhile, pushed the missing script to simplify-playground</span></div><div class="line" id="052549"><span class="nick" style="color:#8dd3c7"><a href="#052549" label="[05:25:49]">&lt;Googulator&gt;</a></span><span class="message">Network is working on baremetal! (Marvell NIC)</span></div><div class="line" id="080824"><span class="nick" style="color:#8dd3c7"><a href="#080824" label="[08:08:24]">&lt;Googulator&gt;</a></span><span class="message">meanwhile: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/356">https://github.com/fosslinux/live-bootstrap/pull/356</a> </span></div><div class="line" id="163311"><span class="nick" style="color:#8dd3c7"><a href="#163311" label="[16:33:11]">&lt;Googulator&gt;</a></span><span class="message">Just had a chance to check up on the bare metal test system again</span></div><div class="line" id="163325"><span class="nick" style="color:#8dd3c7"><a href="#163325" label="[16:33:25]">&lt;Googulator&gt;</a></span><span class="message">The good news: it's building gcc 13 as we speak</span></div><div class="line" id="163334"><span class="nick" style="color:#8dd3c7"><a href="#163334" label="[16:33:34]">&lt;Googulator&gt;</a></span><span class="message">The bad news: it's building gcc 13 as we speak</span></div><div class="line" id="163349"><span class="nick" style="color:#6b8072"><a href="#163349" label="[16:33:49]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Meaning it is slow?</span></div><div class="line" id="163351"><span class="nick" style="color:#8dd3c7"><a href="#163351" label="[16:33:51]">&lt;Googulator&gt;</a></span><span class="message">good, because it's the last step and it hasn't failed</span></div><div class="line" id="163406"><span class="nick" style="color:#8dd3c7"><a href="#163406" label="[16:34:06]">&lt;Googulator&gt;</a></span><span class="message">bad, because it has been running for 13 hours now</span></div><div class="line" id="163421"><span class="nick" style="color:#8dd3c7"><a href="#163421" label="[16:34:21]">&lt;Googulator&gt;</a></span><span class="message">This same system completed the bootstrap in 7 hours before simplify</span></div><div class="line" id="163436"><span class="nick" style="color:#8dd3c7"><a href="#163436" label="[16:34:36]">&lt;Googulator&gt;</a></span><span class="message">meaning, we have a massive perf regression</span></div><div class="line" id="163451"><span class="nick" style="color:#6b8072"><a href="#163451" label="[16:34:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; By the way, mes or looks OK, I had something similar but not rebased after fossy's merges</span></div><div class="line" id="163518"><span class="nick" style="color:#6b8072"><a href="#163518" label="[16:35:18]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Hmm, is it due to parallelism not working?</span></div><div class="line" id="163534"><span class="nick" style="color:#8dd3c7"><a href="#163534" label="[16:35:34]">&lt;Googulator&gt;</a></span><span class="message">Could be, although I did try to get it to work</span></div><div class="line" id="163604"><span class="nick" style="color:#6b8072"><a href="#163604" label="[16:36:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But GCC 13 is the slowest package...</span></div><div class="line" id="163616"><span class="nick" style="color:#8dd3c7"><a href="#163616" label="[16:36:16]">&lt;Googulator&gt;</a></span><span class="message">It is, but it's not the only place where it's visible</span></div><div class="line" id="163616"><span class="nick" style="color:#6b8072"><a href="#163616" label="[16:36:16]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It does full 3 stage bootstrap</span></div><div class="line" id="163633"><span class="nick" style="color:#6b8072"><a href="#163633" label="[16:36:33]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Guile is another slow one...</span></div><div class="line" id="163637"><span class="nick" style="color:#8dd3c7"><a href="#163637" label="[16:36:37]">&lt;Googulator&gt;</a></span><span class="message">The regression was already well apparent during guile's BOOTSTRAP(phase0)</span></div><div class="line" id="164415"><span class="nick" style="color:#8dd3c7"><a href="#164415" label="[16:44:15]">&lt;Googulator&gt;</a></span><span class="message">mes-0.26 got as far as the first Bash build</span></div><div class="line" id="164430"><span class="nick" style="color:#8dd3c7"><a href="#164430" label="[16:44:30]">&lt;Googulator&gt;</a></span><span class="message">needs HAVE_RENAME defined since the new mes now supports rename()</span></div><div class="line" id="164511"><span class="nick" style="color:#6b8072"><a href="#164511" label="[16:45:11]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; And does fiwix support it?</span></div><div class="line" id="164557"><span class="nick" style="color:#8dd3c7"><a href="#164557" label="[16:45:57]">&lt;Googulator&gt;</a></span><span class="message">I tested in bwrap with --build-kernels, so fiwix was at the very least built</span></div><div class="line" id="164707"><span class="nick" style="color:#8dd3c7"><a href="#164707" label="[16:47:07]">&lt;Googulator&gt;</a></span><span class="message">might need to switch from linux/rename.c to stub/rename.c though, if the real kernel doesn't support the syscall</span></div><div class="line" id="165418"><span class="nick" style="color:#6b8072"><a href="#165418" label="[16:54:18]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I think it does support it</span></div><div class="line" id="165431"><span class="nick" style="color:#6b8072"><a href="#165431" label="[16:54:31]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; <a rel="nofollow" href="https://github.com/mikaku/Fiwix/blob/9560a8d51d31a925eeb84e8d32eee65365665874/kernel/syscalls.c#L233">https://github.com/mikaku/Fiwix/blob/9560a8d51d31a925eeb84e8d32eee65365665874/kernel/syscalls.c#L233</a> </span></div><div class="line" id="165710"><span class="nick" style="color:#8dd3c7"><a href="#165710" label="[16:57:10]">&lt;Googulator&gt;</a></span><span class="message">oddly, each mes version prints different error messages during the tcc build</span></div><div class="line" id="165717"><span class="nick" style="color:#8dd3c7"><a href="#165717" label="[16:57:17]">&lt;Googulator&gt;</a></span><span class="message">(but they all ultimately succeed)</span></div><div class="line" id="165816"><span class="nick" style="color:#8dd3c7"><a href="#165816" label="[16:58:16]">&lt;Googulator&gt;</a></span><span class="message">0.24.2:</span></div><div class="line" id="165816"><span class="nick" style="color:#8dd3c7"><a href="#165816" label="[16:58:16]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165817"><span class="nick" style="color:#8dd3c7"><a href="#165817" label="[16:58:17]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165817"><span class="nick" style="color:#8dd3c7"><a href="#165817" label="[16:58:17]">&lt;Googulator&gt;</a></span><span class="message">unexpected size:8</span></div><div class="line" id="165818"><span class="nick" style="color:#8dd3c7"><a href="#165818" label="[16:58:18]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165818"><span class="nick" style="color:#8dd3c7"><a href="#165818" label="[16:58:18]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165832"><span class="nick" style="color:#8dd3c7"><a href="#165832" label="[16:58:32]">&lt;Googulator&gt;</a></span><span class="message">0.25:</span></div><div class="line" id="165833"><span class="nick" style="color:#8dd3c7"><a href="#165833" label="[16:58:33]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165833"><span class="nick" style="color:#8dd3c7"><a href="#165833" label="[16:58:33]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165834"><span class="nick" style="color:#8dd3c7"><a href="#165834" label="[16:58:34]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165834"><span class="nick" style="color:#8dd3c7"><a href="#165834" label="[16:58:34]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165840"><span class="nick" style="color:#8dd3c7"><a href="#165840" label="[16:58:40]">&lt;Googulator&gt;</a></span><span class="message">0.26:</span></div><div class="line" id="165840"><span class="nick" style="color:#8dd3c7"><a href="#165840" label="[16:58:40]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165841"><span class="nick" style="color:#8dd3c7"><a href="#165841" label="[16:58:41]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165841"><span class="nick" style="color:#8dd3c7"><a href="#165841" label="[16:58:41]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165842"><span class="nick" style="color:#8dd3c7"><a href="#165842" label="[16:58:42]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165842"><span class="nick" style="color:#8dd3c7"><a href="#165842" label="[16:58:42]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165843"><span class="nick" style="color:#8dd3c7"><a href="#165843" label="[16:58:43]">&lt;Googulator&gt;</a></span><span class="message">-&gt;type--: not a &lt;type&gt;: (typename &quot;BufferedFile&quot;)</span></div><div class="line" id="165843"><span class="nick" style="color:#8dd3c7"><a href="#165843" label="[16:58:43]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165844"><span class="nick" style="color:#8dd3c7"><a href="#165844" label="[16:58:44]">&lt;Googulator&gt;</a></span><span class="message">rank--: not a pointer: #&lt;&lt;type&gt; type: signed size: 1 description: #f&gt;</span></div><div class="line" id="165918"><span class="nick" style="color:#8dd3c7"><a href="#165918" label="[16:59:18]">&lt;Googulator&gt;</a></span><span class="message">gcc-13.1.0: creating package.</span></div><div class="line" id="165958"><span class="nick" style="color:#6b8072"><a href="#165958" label="[16:59:58]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I know mes 0.25 disabled some of these false warnings</span></div><div class="line" id="170030"><span class="nick" style="color:#8dd3c7"><a href="#170030" label="[17:00:30]">&lt;Googulator&gt;</a></span><span class="message">the &quot;unexpected size&quot; one is gone in 0.25</span></div><div class="line" id="170035"><span class="nick" style="color:#8dd3c7"><a href="#170035" label="[17:00:35]">&lt;Googulator&gt;</a></span><span class="message">everything else remains</span></div><div class="line" id="170044"><span class="nick" style="color:#8dd3c7"><a href="#170044" label="[17:00:44]">&lt;Googulator&gt;</a></span><span class="message">and in 0.26, everything is printed twice</span></div><div class="line" id="170054"><span class="nick" style="color:#6b8072"><a href="#170054" label="[17:00:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, odd</span></div><div class="line" id="170055"><span class="nick" style="color:#8dd3c7"><a href="#170055" label="[17:00:55]">&lt;Googulator&gt;</a></span><span class="message">bare-metal bootstrap finally done!</span></div><div class="line" id="170217"><span class="nick" style="color:#8dd3c7"><a href="#170217" label="[17:02:17]">&lt;Googulator&gt;</a></span><span class="message">has been running for almost 14 hours</span></div><div class="line" id="170239"><span class="nick" style="color:#8dd3c7"><a href="#170239" label="[17:02:39]">&lt;Googulator&gt;</a></span><span class="message">before simplify, this machine could bootstrap in half that time</span></div><div class="line" id="170423"><span class="nick" style="color:#8dd3c7"><a href="#170423" label="[17:04:23]">&lt;Googulator&gt;</a></span><span class="message">hmm...</span></div><div class="line" id="170435"><span class="nick" style="color:#8dd3c7"><a href="#170435" label="[17:04:35]">&lt;Googulator&gt;</a></span><span class="message"># echo $JOBS</span></div><div class="line" id="170435"><span class="nick" style="color:#8dd3c7"><a href="#170435" label="[17:04:35]">&lt;Googulator&gt;</a></span><span class="message">4</span></div><div class="line" id="170442"><span class="nick" style="color:#8dd3c7"><a href="#170442" label="[17:04:42]">&lt;Googulator&gt;</a></span><span class="message"># echo $MAKEJOBS</span></div><div class="line" id="170443"><span class="nick" style="color:#8dd3c7"><a href="#170443" label="[17:04:43]">&lt;Googulator&gt;</a></span><span class="message">-j1</span></div><div class="line" id="170445"><span class="nick" style="color:#8dd3c7"><a href="#170445" label="[17:04:45]">&lt;Googulator&gt;</a></span><span class="message">that explains it</span></div><div class="line" id="170654"><span class="nick" style="color:#8dd3c7"><a href="#170654" label="[17:06:54]">&lt;Googulator&gt;</a></span><span class="message">bwrap test of mes 0.26 got to populate_device_nodes, where it fails due to a permission issue (known on my part, not related to mes upgrade)</span></div><div class="line" id="170701"><span class="nick" style="color:#8dd3c7"><a href="#170701" label="[17:07:01]">&lt;Googulator&gt;</a></span><span class="message">that sounds like a success</span></div><div class="line" id="170711"><span class="nick" style="color:#8dd3c7"><a href="#170711" label="[17:07:11]">&lt;Googulator&gt;</a></span><span class="message">that's well past where mescc is discarded</span></div><div class="line" id="170714"><span class="nick" style="color:#8dd3c7"><a href="#170714" label="[17:07:14]">&lt;Googulator&gt;</a></span><span class="message">&amp; meslibc</span></div><div class="line" id="170915"><span class="nick" style="color:#8dd3c7"><a href="#170915" label="[17:09:15]">&lt;Googulator&gt;</a></span><span class="message">&amp; now I see why makejobs is wrong</span></div><div class="line" id="170931"><span class="nick" style="color:#8dd3c7"><a href="#170931" label="[17:09:31]">&lt;Googulator&gt;</a></span><span class="message">in update_env.sh: cat &gt; /steps/env &lt;&lt;- EOF</span></div><div class="line" id="170938"><span class="nick" style="color:#8dd3c7"><a href="#170938" label="[17:09:38]">&lt;Googulator&gt;</a></span><span class="message">should be cat &gt; /steps/env &lt;&lt;- 'EOF'</span></div><div class="line" id="171016"><span class="nick" style="color:#8dd3c7"><a href="#171016" label="[17:10:16]">&lt;Googulator&gt;</a></span><span class="message">otherwise it will do the substitution when env is created, not when it's read</span></div><div class="line" id="171516"><span class="nick" style="color:#8dd3c7"><a href="#171516" label="[17:15:16]">&lt;Googulator&gt;</a></span><span class="message">Bootstrap started again on bare metal, with this bug fixed, and mes upgraded</span></div><div class="line" id="171629"><span class="nick" style="color:#8dd3c7"><a href="#171629" label="[17:16:29]">&lt;Googulator&gt;</a></span><span class="message">Hopefully this does finish in 7 hours</span></div><div class="line" id="171949"><span class="nick" style="color:#8dd3c7"><a href="#171949" label="[17:19:49]">&lt;Googulator&gt;</a></span><span class="message">...and again, because I forgot to set swap on the rootfs.py command line</span></div><div class="line" id="172817"><span class="nick" style="color:#8dd3c7"><a href="#172817" label="[17:28:17]">&lt;Googulator&gt;</a></span><span class="message">fossy: marked <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/356">https://github.com/fosslinux/live-bootstrap/pull/356</a>  as ready for review</span></div><div class="line" id="173309"><span class="nick" style="color:#6b8072"><a href="#173309" label="[17:33:09]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: I guess at least x86 checksums should be updated too?</span></div><div class="line" id="173322"><span class="nick" style="color:#8dd3c7"><a href="#173322" label="[17:33:22]">&lt;Googulator&gt;</a></span><span class="message">yes, just realized that</span></div><div class="line" id="173339"><span class="nick" style="color:#8dd3c7"><a href="#173339" label="[17:33:39]">&lt;Googulator&gt;</a></span><span class="message">back to draft while I do that</span></div><div class="line" id="173358"><span class="nick" style="color:#6b8072"><a href="#173358" label="[17:33:58]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; amd64 might be easy to do for mes too</span></div><div class="line" id="173408"><span class="nick" style="color:#6b8072"><a href="#173408" label="[17:34:08]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; riscv you can probably ignore</span></div><div class="line" id="173415"><span class="nick" style="color:#6b8072"><a href="#173415" label="[17:34:15]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I can update that later</span></div><div class="line" id="173434"><span class="nick" style="color:#6b8072"><a href="#173434" label="[17:34:34]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It takes 7h or so in qemu</span></div><div class="line" id="173449"><span class="nick" style="color:#6b8072"><a href="#173449" label="[17:34:49]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; or 7d on my SoC</span></div><div class="line" id="173545"><span class="nick" style="color:#8dd3c7"><a href="#173545" label="[17:35:45]">&lt;Googulator&gt;</a></span><span class="message">but even worse, I forgot about pre-network-sources</span></div><div class="line" id="173557"><span class="nick" style="color:#8dd3c7"><a href="#173557" label="[17:35:57]">&lt;Googulator&gt;</a></span><span class="message">(because the branch I'm testing on no longer has it)</span></div><div class="line" id="173611"><span class="nick" style="color:#8dd3c7"><a href="#173611" label="[17:36:11]">&lt;Googulator&gt;</a></span><span class="message">Subprocess error 1</span></div><div class="line" id="173611"><span class="nick" style="color:#8dd3c7"><a href="#173611" label="[17:36:11]">&lt;Googulator&gt;</a></span><span class="message">ABORTING HARD</span></div><div class="line" id="173628"><span class="nick" style="color:#8dd3c7"><a href="#173628" label="[17:36:28]">&lt;Googulator&gt;</a></span><span class="message">+&gt; /external/distfiles/mes-0.26.tar.gz: No such file or directory</span></div><div class="line" id="173656"><span class="nick" style="color:#8dd3c7"><a href="#173656" label="[17:36:56]">&lt;Googulator&gt;</a></span><span class="message">I guess I'll do x86 and amd64 then</span></div><div class="line" id="173724"><span class="nick" style="color:#8dd3c7"><a href="#173724" label="[17:37:24]">&lt;Googulator&gt;</a></span><span class="message">never heard of a situation where qemu with full emulation was faster than a real CPU... :)</span></div><div class="line" id="174353"><span class="nick" style="color:#6b8072"><a href="#174353" label="[17:43:53]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: it was qemu with user mode emulation...</span></div><div class="line" id="174403"><span class="nick" style="color:#6b8072"><a href="#174403" label="[17:44:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Without emulating kernel</span></div><div class="line" id="174423"><span class="nick" style="color:#6b8072"><a href="#174423" label="[17:44:23]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Still probably caused by ram bandwidth...</span></div><div class="line" id="174503"><span class="nick" style="color:#6b8072"><a href="#174503" label="[17:45:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: it was user mode emulation</span></div><div class="line" id="174512"><span class="nick" style="color:#6b8072"><a href="#174512" label="[17:45:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Without emulating kernel</span></div><div class="line" id="174532"><span class="nick" style="color:#8dd3c7"><a href="#174532" label="[17:45:32]">&lt;Googulator&gt;</a></span><span class="message">even then, TCG rarely beats real silicon</span></div><div class="line" id="174601"><span class="nick" style="color:#8dd3c7"><a href="#174601" label="[17:46:01]">&lt;Googulator&gt;</a></span><span class="message">of course, it's mes, the Scheme interpreter that thinks it's llama.cpp, so memory bandwidth is indeed everything</span></div><div class="line" id="174737"><span class="nick" style="color:#8dd3c7"><a href="#174737" label="[17:47:37]">&lt;Googulator&gt;</a></span><span class="message">in fact, it may be even worse than llama.cpp in this regard - I've never seen that saturate RAM bandwidth on just 1 thread, unlike mes</span></div><div class="line" id="175754"><span class="nick" style="color:#6b8072"><a href="#175754" label="[17:57:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: we should also recheck mes 0.26 for any new pregen files...</span></div><div class="line" id="175813"><span class="nick" style="color:#8dd3c7"><a href="#175813" label="[17:58:13]">&lt;Googulator&gt;</a></span><span class="message">right</span></div><div class="line" id="175819"><span class="nick" style="color:#6b8072"><a href="#175819" label="[17:58:19]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; All those new guile modules might have introduced non source stuff...</span></div><div class="line" id="175842"><span class="nick" style="color:#6b8072"><a href="#175842" label="[17:58:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; fossy is especially good at finding those...</span></div><div class="line" id="175859"><span class="nick" style="color:#6b8072"><a href="#175859" label="[17:58:59]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I can try to look a bit too</span></div><div class="line" id="180143"><span class="nick" style="color:#8dd3c7"><a href="#180143" label="[18:01:43]">&lt;Googulator&gt;</a></span><span class="message">amd64 actually fails with &quot;mkdir NOT FOUND&quot;</span></div><div class="line" id="180149"><span class="nick" style="color:#8dd3c7"><a href="#180149" label="[18:01:49]">&lt;Googulator&gt;</a></span><span class="message">well before it even touches mes</span></div><div class="line" id="180220"><span class="nick" style="color:#8dd3c7"><a href="#180220" label="[18:02:20]">&lt;Googulator&gt;</a></span><span class="message">it dies in seed.kaem</span></div><div class="line" id="180221"><span class="nick" style="color:#6b8072"><a href="#180221" label="[18:02:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Installed into wrong place?</span></div><div class="line" id="180225"><span class="nick" style="color:#6b8072"><a href="#180225" label="[18:02:25]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Hmm</span></div><div class="line" id="180233"><span class="nick" style="color:#8dd3c7"><a href="#180233" label="[18:02:33]">&lt;Googulator&gt;</a></span><span class="message">Probably the PATH fixes were not applied to amd64</span></div><div class="line" id="180257"><span class="nick" style="color:#8dd3c7"><a href="#180257" label="[18:02:57]">&lt;Googulator&gt;</a></span><span class="message">I remember the same issue on x86 when I was working on the make-3.82 PATH issue in the draft simplify PR</span></div><div class="line" id="180325"><span class="nick" style="color:#6b8072"><a href="#180325" label="[18:03:25]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; It calla mkdir before it is installed to PATH</span></div><div class="line" id="180351"><span class="nick" style="color:#6b8072"><a href="#180351" label="[18:03:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/545bb42ca800af28086ebd1fa2c8ed46726a6f74/seed/seed.kaem#L12">https://github.com/fosslinux/live-bootstrap/blob/545bb42ca800af28086ebd1fa2c8ed46726a6f74/seed/seed.kaem#L12</a> </span></div><div class="line" id="180510"><span class="nick" style="color:#6b8072"><a href="#180510" label="[18:05:10]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Hmm, PATH should have that from after.kaem...</span></div><div class="line" id="180516"><span class="nick" style="color:#8dd3c7"><a href="#180516" label="[18:05:16]">&lt;Googulator&gt;</a></span><span class="message">wait, but then how does it work in x86?</span></div><div class="line" id="180600"><span class="nick" style="color:#6b8072"><a href="#180600" label="[18:06:00]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Maybe ARCH_DIR has wrong value?</span></div><div class="line" id="180628"><span class="nick" style="color:#6b8072"><a href="#180628" label="[18:06:28]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Here: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/545bb42ca800af28086ebd1fa2c8ed46726a6f74/seed/after.kaem#L12C14-L12C14">https://github.com/fosslinux/live-bootstrap/blob/545bb42ca800af28086ebd1fa2c8ed46726a6f74/seed/after.kaem#L12C14-L12C14</a> </span></div><div class="line" id="180746"><span class="nick" style="color:#6b8072"><a href="#180746" label="[18:07:46]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Should be coming from <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-amd64/blob/93fbe4c08772d8df1412e2554668e24cf604088c/kaem.run#L24C5-L24C5">https://github.com/oriansj/stage0-posix-amd64/blob/93fbe4c08772d8df1412e2554668e24cf604088c/kaem.run#L24C5-L24C5</a> </span></div><div class="line" id="181743"><span class="nick" style="color:#8dd3c7"><a href="#181743" label="[18:17:43]">&lt;Googulator&gt;</a></span><span class="message">found it: PATH=${BINDIR}:/${ARCH}/bin</span></div><div class="line" id="181757"><span class="nick" style="color:#8dd3c7"><a href="#181757" label="[18:17:57]">&lt;Googulator&gt;</a></span><span class="message">on amd64, $ARCH != $ARCH_DIR</span></div><div class="line" id="181802"><span class="nick" style="color:#8dd3c7"><a href="#181802" label="[18:18:02]">&lt;Googulator&gt;</a></span><span class="message">on x86, they are the same</span></div><div class="line" id="183039"><span class="nick" style="color:#8dd3c7"><a href="#183039" label="[18:30:39]">&lt;Googulator&gt;</a></span><span class="message">Ouch. Seems like the new mes uses more memory than what builder-hex0 is able to give it...</span></div><div class="line" id="183116"><span class="nick" style="color:#8dd3c7"><a href="#183116" label="[18:31:16]">&lt;Googulator&gt;</a></span><span class="message">...or something similar</span></div><div class="line" id="183204"><span class="nick" style="color:#8dd3c7"><a href="#183204" label="[18:32:04]">&lt;Googulator&gt;</a></span><span class="message">when tcc-mes tries to build tcc-boot0, it just prints &quot;tcc version 0.9.26 (i386 linux)&quot; and dies</span></div><div class="line" id="183209"><span class="nick" style="color:#8dd3c7"><a href="#183209" label="[18:32:09]">&lt;Googulator&gt;</a></span><span class="message">(this is on bare metal</span></div><div class="line" id="183210"><span class="nick" style="color:#8dd3c7"><a href="#183210" label="[18:32:10]">&lt;Googulator&gt;</a></span><span class="message">)</span></div><div class="line" id="183229"><span class="nick" style="color:#8dd3c7"><a href="#183229" label="[18:32:29]">&lt;Googulator&gt;</a></span><span class="message">worked perfectly in bubblewrap</span></div><div class="line" id="183317"><span class="nick" style="color:#6b8072"><a href="#183317" label="[18:33:17]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: that's after mes</span></div><div class="line" id="183337"><span class="nick" style="color:#6b8072"><a href="#183337" label="[18:33:37]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; tcc-mes is a C program (tcc)</span></div><div class="line" id="183417"><span class="nick" style="color:#6b8072"><a href="#183417" label="[18:34:17]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: later in the evening I'll try to compare with my unrebased patch</span></div><div class="line" id="183427"><span class="nick" style="color:#6b8072"><a href="#183427" label="[18:34:27]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; I think it worked there</span></div><div class="line" id="193737"><span class="nick" style="color:#8dd3c7"><a href="#193737" label="[19:37:37]">&lt;Googulator&gt;</a></span><span class="message">I know it's after mes - but it appears that mes corrupts memory as it runs, causing tcc to subsequently fail</span></div><div class="line" id="193819"><span class="nick" style="color:#8dd3c7"><a href="#193819" label="[19:38:19]">&lt;Googulator&gt;</a></span><span class="message">probably because it overruns the memory block builder-hex0 gives it</span></div><div class="line" id="193841"><span class="nick" style="color:#8dd3c7"><a href="#193841" label="[19:38:41]">&lt;Googulator&gt;</a></span><span class="message">right now, I'm running amd64 mes (building tcc) in bwrap, VSZ is 1132564</span></div><div class="line" id="194006"><span class="nick" style="color:#8dd3c7"><a href="#194006" label="[19:40:06]">&lt;Googulator&gt;</a></span><span class="message">x86 is probably less than that, but still likely exceeding builder-hex0's limit</span></div><div class="line" id="202636"><span class="nick" style="color:#8dd3c7"><a href="#202636" label="[20:26:36]">&lt;Googulator&gt;</a></span><span class="message">tcc-mes locks up on amd64</span></div><div class="line" id="202805"><span class="nick" style="color:#2e2a4a"><a href="#202805" label="[20:28:05]">&lt;stikonas&gt;</a></span><span class="message">Googulator: that's expected on amd64...</span></div><div class="line" id="202815"><span class="nick" style="color:#2e2a4a"><a href="#202815" label="[20:28:15]">&lt;stikonas&gt;</a></span><span class="message">tcc-mes builds but crashes...</span></div><div class="line" id="202822"><span class="nick" style="color:#2e2a4a"><a href="#202822" label="[20:28:22]">&lt;stikonas&gt;</a></span><span class="message">and I know at least one issue there</span></div><div class="line" id="202846"><span class="nick" style="color:#2e2a4a"><a href="#202846" label="[20:28:46]">&lt;stikonas&gt;</a></span><span class="message">there is something wrong going on with sign vs zero extension when outputing some 32-bit constants</span></div><div class="line" id="202922"><span class="nick" style="color:#2e2a4a"><a href="#202922" label="[20:29:22]">&lt;stikonas&gt;</a></span><span class="message">I think o(0x81234567) gets sign extended to 64-bits</span></div><div class="line" id="202932"><span class="nick" style="color:#2e2a4a"><a href="#202932" label="[20:29:32]">&lt;stikonas&gt;</a></span><span class="message">and then probably loop never finishes...</span></div><div class="line" id="203840"><span class="nick" style="color:#8dd3c7"><a href="#203840" label="[20:38:40]">&lt;Googulator&gt;</a></span><span class="message">OK, so that's not a regression then</span></div><div class="line" id="205035"><span class="nick" style="color:#8dd3c7"><a href="#205035" label="[20:50:35]">&lt;Googulator&gt;</a></span><span class="message">hmm, x86 version of mes tops out at 566808KiB memory usage in bwrap</span></div><div class="line" id="205052"><span class="nick" style="color:#8dd3c7"><a href="#205052" label="[20:50:52]">&lt;Googulator&gt;</a></span><span class="message">that's 554MiB</span></div><div class="line" id="205150"><span class="nick" style="color:#8dd3c7"><a href="#205150" label="[20:51:50]">&lt;Googulator&gt;</a></span><span class="message">builder-hex0 supports up to 639MiB</span></div><div class="line" id="205754"><span class="nick" style="color:#8dd3c7"><a href="#205754" label="[20:57:54]">&lt;Googulator&gt;</a></span><span class="message">so then why is it that tcc prints its version banner and then locks up in builder-hex0?</span></div><div class="line" id="205813"><span class="nick" style="color:#8dd3c7"><a href="#205813" label="[20:58:13]">&lt;Googulator&gt;</a></span><span class="message">(it's not supposed to print a version banner there at all)</span></div><div class="line" id="212257"><span class="nick" style="color:#2e2a4a"><a href="#212257" label="[21:22:57]">&lt;stikonas&gt;</a></span><span class="message">On x86?</span></div><div class="line" id="212306"><span class="nick" style="color:#2e2a4a"><a href="#212306" label="[21:23:06]">&lt;stikonas&gt;</a></span><span class="message">I think my changes pre simplify pr ran till tcc 0.9.27</span></div><div class="line" id="212311"><span class="nick" style="color:#2e2a4a"><a href="#212311" label="[21:23:11]">&lt;stikonas&gt;</a></span><span class="message">But they are basically same as your pr...</span></div><div class="line" id="212330"><span class="nick" style="color:#2e2a4a"><a href="#212330" label="[21:23:30]">&lt;stikonas&gt;</a></span><span class="message">(after tcc 0.9.27 hashes were bad...)</span></div><div class="line" id="213017"><span class="nick" style="color:#8dd3c7"><a href="#213017" label="[21:30:17]">&lt;Googulator&gt;</a></span><span class="message">Yes, x86</span></div><div class="line" id="215110"><span class="nick" style="color:#2e2a4a"><a href="#215110" label="[21:51:10]">&lt;stikonas&gt;</a></span><span class="message">Googulator: how about <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/mes-0.26">https://github.com/stikonas/live-bootstrap/tree/mes-0.26</a> </span></div><div class="line" id="215114"><span class="nick" style="color:#2e2a4a"><a href="#215114" label="[21:51:14]">&lt;stikonas&gt;</a></span><span class="message">does this run for you?</span></div><div class="line" id="215420"><span class="nick" style="color:#8dd3c7"><a href="#215420" label="[21:54:20]">&lt;Googulator&gt;</a></span><span class="message">testing now</span></div><div class="line" id="221747"><span class="nick" style="color:#8dd3c7"><a href="#221747" label="[22:17:47]">&lt;Googulator&gt;</a></span><span class="message">stikonas: it works</span></div><div class="line" id="221809"><span class="nick" style="color:#8dd3c7"><a href="#221809" label="[22:18:09]">&lt;Googulator&gt;</a></span><span class="message">meanwhile, checking out a memory dump from the failed bootstrap in qemu</span></div><div class="line" id="221837"><span class="nick" style="color:#8dd3c7"><a href="#221837" label="[22:18:37]">&lt;Googulator&gt;</a></span><span class="message">which worked</span></div><div class="line" id="221900"><span class="nick" style="color:#8dd3c7"><a href="#221900" label="[22:19:00]">&lt;Googulator&gt;</a></span><span class="message">WTF... Libera swallowed one of my messages</span></div><div class="line" id="221914"><span class="nick" style="color:#8dd3c7"><a href="#221914" label="[22:19:14]">&lt;Googulator&gt;</a></span><span class="message">I wrote &quot;/usr/bin/tcc-mes is identical to the version built in bwrap&quot; ... which worked</span></div><div class="line" id="222055"><span class="nick" style="color:#8dd3c7"><a href="#222055" label="[22:20:55]">&lt;Googulator&gt;</a></span><span class="message">so tcc itself is being generated correctly</span></div><div class="line" id="222136"><span class="nick" style="color:#8dd3c7"><a href="#222136" label="[22:21:36]">&lt;Googulator&gt;</a></span><span class="message">but then something goes wrong when executing it</span></div><div class="line" id="222542"><span class="nick" style="color:#8dd3c7"><a href="#222542" label="[22:25:42]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gist.github.com/Googulator/2e9ee8ed7db95234236b04b6fb10acc7">https://gist.github.com/Googulator/2e9ee8ed7db95234236b04b6fb10acc7</a>  this is the last thing that got printed before it locked up</span></div><div class="line" id="222549"><span class="nick" style="color:#8dd3c7"><a href="#222549" label="[22:25:49]">&lt;Googulator&gt;</a></span><span class="message">(retrieved from a memory dump of the VM)</span></div><div class="line" id="222731"><span class="nick" style="color:#8dd3c7"><a href="#222731" label="[22:27:31]">&lt;Googulator&gt;</a></span><span class="message">that's looking like it dies here: <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/blob/mes-0.26/steps/tcc-0.9.26/pass1.kaem#L143">https://github.com/Googulator/live-bootstrap/blob/mes-0.26/steps/tcc-0.9.26/pass1.kaem#L143</a> </span></div><div class="line" id="223820"><span class="nick" style="color:#80b1d3"><a href="#223820" label="[22:38:20]">&lt;[exa]&gt;</a></span><span class="message">Googulator: messages starting with / may be interpreted as commands</span></div><div class="line" id="224256"><span class="nick" style="color:#8dd3c7"><a href="#224256" label="[22:42:56]">&lt;Googulator&gt;</a></span><span class="message">I think I may have figured out what's going on..</span></div><div class="line" id="224337"><span class="nick" style="color:#8dd3c7"><a href="#224337" label="[22:43:37]">&lt;Googulator&gt;</a></span><span class="message">all of those new /lib files I had to include for mes-0.26 to successfully build itself came from /lib/linux</span></div><div class="line" id="224345"><span class="nick" style="color:#8dd3c7"><a href="#224345" label="[22:43:45]">&lt;Googulator&gt;</a></span><span class="message">they're probably syscall wrappers</span></div><div class="line" id="224400"><span class="nick" style="color:#8dd3c7"><a href="#224400" label="[22:44:00]">&lt;Googulator&gt;</a></span><span class="message">including for syscalls builder-hex0 doesn't support</span></div><div class="line" id="224413"><span class="nick" style="color:#8dd3c7"><a href="#224413" label="[22:44:13]">&lt;Googulator&gt;</a></span><span class="message">and when builder-hex0 doesn't support a syscall... it pretends to</span></div><div class="line" id="224423"><span class="nick" style="color:#8dd3c7"><a href="#224423" label="[22:44:23]">&lt;Googulator&gt;</a></span><span class="message">returning success, but doing nothing</span></div><div class="line" id="224729"><span class="nick" style="color:#2e2a4a"><a href="#224729" label="[22:47:29]">&lt;stikonas&gt;</a></span><span class="message">Googulator: so why does it work on my branch?</span></div><div class="line" id="224749"><span class="nick" style="color:#8dd3c7"><a href="#224749" label="[22:47:49]">&lt;Googulator&gt;</a></span><span class="message">maybe I added more files from /lib/linux</span></div><div class="line" id="224845"><span class="nick" style="color:#2e2a4a"><a href="#224845" label="[22:48:45]">&lt;stikonas&gt;</a></span><span class="message">oh, there are some differences</span></div><div class="line" id="224848"><span class="nick" style="color:#2e2a4a"><a href="#224848" label="[22:48:48]">&lt;stikonas&gt;</a></span><span class="message">between my changes and yours</span></div><div class="line" id="224853"><span class="nick" style="color:#2e2a4a"><a href="#224853" label="[22:48:53]">&lt;stikonas&gt;</a></span><span class="message">I don't have read.c</span></div><div class="line" id="224910"><span class="nick" style="color:#2e2a4a"><a href="#224910" label="[22:49:10]">&lt;stikonas&gt;</a></span><span class="message">whereas you have  mescc lib/linux/read.c</span></div><div class="line" id="225029"><span class="nick" style="color:#2e2a4a"><a href="#225029" label="[22:50:29]">&lt;stikonas&gt;</a></span><span class="message">neither of us fully sorted the list there...</span></div><div class="line" id="225034"><span class="nick" style="color:#2e2a4a"><a href="#225034" label="[22:50:34]">&lt;stikonas&gt;</a></span><span class="message">doesn't help with comparison</span></div><div class="line" id="225234"><span class="nick" style="color:#8dd3c7"><a href="#225234" label="[22:52:34]">&lt;Googulator&gt;</a></span><span class="message">Retrying with the new files taken from lib/stub instead</span></div><div class="line" id="225337"><span class="nick" style="color:#2e2a4a"><a href="#225337" label="[22:53:37]">&lt;stikonas&gt;</a></span><span class="message">Googulator: I had some issues with lib/stub</span></div><div class="line" id="225344"><span class="nick" style="color:#2e2a4a"><a href="#225344" label="[22:53:44]">&lt;stikonas&gt;</a></span><span class="message">anyway, you have my list too</span></div><div class="line" id="225354"><span class="nick" style="color:#2e2a4a"><a href="#225354" label="[22:53:54]">&lt;stikonas&gt;</a></span><span class="message">which will hopefully work</span></div><div class="line" id="225411"><span class="nick" style="color:#2e2a4a"><a href="#225411" label="[22:54:11]">&lt;stikonas&gt;</a></span><span class="message">so you have something to try, bisect the differences...</span></div><div class="line" id="225612"><span class="nick" style="color:#2e2a4a"><a href="#225612" label="[22:56:12]">&lt;stikonas&gt;</a></span><span class="message">in the meantime I need to figure out why my hex1.efi does not output anything one my machine</span></div><div class="line" id="225617"><span class="nick" style="color:#2e2a4a"><a href="#225617" label="[22:56:17]">&lt;stikonas&gt;</a></span><span class="message">(even though it works in qemu)</span></div><div class="line" id="225639"><span class="nick" style="color:#2e2a4a"><a href="#225639" label="[22:56:39]">&lt;stikonas&gt;</a></span><span class="message">s/one/on/</span></div><div class="line" id="225821"><span class="nick" style="color:#2e2a4a"><a href="#225821" label="[22:58:21]">&lt;stikonas&gt;</a></span><span class="message">and even hex C prototype seems to be misbehaving...</span></div><div class="line" id="230430"><span class="nick" style="color:#8dd3c7"><a href="#230430" label="[23:04:30]">&lt;Googulator&gt;</a></span><span class="message">The obvious differences are read, sleep and utime - testing with these removed</span></div><div class="line" id="230507"><span class="nick" style="color:#2e2a4a"><a href="#230507" label="[23:05:07]">&lt;stikonas&gt;</a></span><span class="message">also only stuff that tcc calls can matter...</span></div><div class="line" id="230526"><span class="nick" style="color:#2e2a4a"><a href="#230526" label="[23:05:26]">&lt;stikonas&gt;</a></span><span class="message">I don't think tcc uses utime</span></div><div class="line" id="230540"><span class="nick" style="color:#2e2a4a"><a href="#230540" label="[23:05:40]">&lt;stikonas&gt;</a></span><span class="message">and slee is only used in tests</span></div><div class="line" id="233312"><span class="nick" style="color:#8dd3c7"><a href="#233312" label="[23:33:12]">&lt;Googulator&gt;</a></span><span class="message">Removing those 3 files fixed the lockup</span></div><div class="line" id="233318"><span class="nick" style="color:#8dd3c7"><a href="#233318" label="[23:33:18]">&lt;Googulator&gt;</a></span><span class="message">in qemu at least</span></div><div class="line" id="233922"><span class="nick" style="color:#389600"><a href="#233922" label="[23:39:22]">&lt;fossy&gt;</a></span><span class="message">if/when builder-hex0 is split into a lower and higher level kernel, it would be nice for the higher level kernel to print an error when a nonexistant syscall is given</span></div><div class="line" id="234021"><span class="nick" style="color:#389600"><a href="#234021" label="[23:40:21]">&lt;fossy&gt;</a></span><span class="message">i will take a look for new pregen files in mes 0.26</span></div><div class="line" id="234028"><span class="nick" style="color:#389600"><a href="#234028" label="[23:40:28]">&lt;fossy&gt;</a></span><span class="message">i'm working on binutils 2.41</span></div><div class="line" id="234043"><span class="nick" style="color:#8dd3c7"><a href="#234043" label="[23:40:43]">&lt;Googulator&gt;</a></span><span class="message">also, it would be nice if unsupported syscalls returned failure, to at least give programs a chance to use alternate paths</span></div><div class="line" id="234056"><span class="nick" style="color:#389600"><a href="#234056" label="[23:40:56]">&lt;fossy&gt;</a></span><span class="message">is that usual POSIX behaviour?</span></div><div class="line" id="234102"><span class="nick" style="color:#389600"><a href="#234102" label="[23:41:02]">&lt;fossy&gt;</a></span><span class="message">i presume so</span></div><div class="line" id="234105"><span class="nick" style="color:#8dd3c7"><a href="#234105" label="[23:41:05]">&lt;Googulator&gt;</a></span><span class="message">AFAIK it is</span></div><div class="line" id="234124"><span class="nick" style="color:#8dd3c7"><a href="#234124" label="[23:41:24]">&lt;Googulator&gt;</a></span><span class="message">swallowing an error and feigning success certainly isn't POSIX</span></div><div class="line" id="234146"><span class="nick" style="color:#389600"><a href="#234146" label="[23:41:46]">&lt;fossy&gt;</a></span><span class="message">yea ok, it should error</span></div><div class="line" id="234801"><span class="nick" style="color:#8dd3c7"><a href="#234801" label="[23:48:01]">&lt;Googulator&gt;</a></span><span class="message">and now, 3 simultaneous bootstrap tests in progress (simplify-playground x86 on baremetal, mes-0.26 x86 in qemu, mes-0.26 amd64 in bwrap)</span></div><div class="line" id="234847"><span class="nick" style="color:#8dd3c7"><a href="#234847" label="[23:48:47]">&lt;Googulator&gt;</a></span><span class="message">stikonas: the current code in my repo should be good for riscv64 checksum update</span></div><div class="line" id="234913"><span class="nick" style="color:#8dd3c7"><a href="#234913" label="[23:49:13]">&lt;Googulator&gt;</a></span><span class="message">(pending fossy's OK w.r.t. generated files, of course)</span></div><div class="line" id="234931"><span class="nick" style="color:#2e2a4a"><a href="#234931" label="[23:49:31]">&lt;stikonas&gt;</a></span><span class="message">yeah, I'll check those too</span></div><div class="line" id="234942"><span class="nick" style="color:#2e2a4a"><a href="#234942" label="[23:49:42]">&lt;stikonas&gt;</a></span><span class="message">I did start looking though those scheme dirs</span></div><div class="line" id="234951"><span class="nick" style="color:#2e2a4a"><a href="#234951" label="[23:49:51]">&lt;stikonas&gt;</a></span><span class="message">haven't finished but it looks ok</span></div><div class="line" id="234957"><span class="nick" style="color:#2e2a4a"><a href="#234957" label="[23:49:57]">&lt;stikonas&gt;</a></span><span class="message">seems normal source...</span></div><div class="line" id="235101"><span class="nick" style="color:#2e2a4a"><a href="#235101" label="[23:51:01]">&lt;stikonas&gt;</a></span><span class="message">well, there is that older file we found mes/module/mes/psyntax.pp but we are already removing it in the script</span></div><div class="line" id="235703"><span class="nick" style="color:#389600"><a href="#235703" label="[23:57:03]">&lt;fossy&gt;</a></span><span class="message">Googulator: could you point me to commits that aren't in the main tree that you have found to be needed for bare metal bootstrap?</span></div><div class="line" id="235924"><span class="nick" style="color:#8dd3c7"><a href="#235924" label="[23:59:24]">&lt;Googulator&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/commit/434f5fb25255c4164a8f8855a0d86ac8484d4732">https://github.com/fosslinux/live-bootstrap/commit/434f5fb25255c4164a8f8855a0d86ac8484d4732</a>  should have the bare minimum</span></div><div class="line" id="235936"><span class="nick" style="color:#8dd3c7"><a href="#235936" label="[23:59:36]">&lt;Googulator&gt;</a></span><span class="message">well, not quite - it's built on top of the script improvements</span></div><div class="line" id="235942"><span class="nick" style="color:#8dd3c7"><a href="#235942" label="[23:59:42]">&lt;Googulator&gt;</a></span><span class="message">but it should be easy to backport</span></div><br /></div></body></html>