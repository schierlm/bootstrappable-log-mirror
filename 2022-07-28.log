<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-07-28.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002118"><span class="nick" style="color:#389600"><a href="#002118" label="[00:21:18]">&lt;oriansj&gt;</a></span><span class="message">rkeene: only if we were without each other. It is way too big for any single individual but together: kicking ass and taking names and then giving those names to other bootstrapping problems after we kick their ass too.</span></div><div class="line" id="002444"><span class="nick" style="color:#389600"><a href="#002444" label="[00:24:44]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged, thank you</span></div><div class="line" id="002500"><span class="nick" style="color:#8dd3c7"><a href="#002500" label="[00:25:00]">&lt;stikonas&gt;</a></span><span class="message">oriansj: thanks</span></div><div class="line" id="002507"><span class="nick" style="color:#8dd3c7"><a href="#002507" label="[00:25:07]">&lt;stikonas&gt;</a></span><span class="message">I'm now working on similar thing for amd64</span></div><div class="line" id="002529"><span class="nick" style="color:#389600"><a href="#002529" label="[00:25:29]">&lt;oriansj&gt;</a></span><span class="message">thank you very much stikonas for helping make our bootstrap seeds smaller ^_^</span></div><div class="line" id="002548"><span class="nick" style="color:#8dd3c7"><a href="#002548" label="[00:25:48]">&lt;stikonas&gt;</a></span><span class="message">that one might reduce a bit more since I have enough registers to store stuff like malloc, command_done and script</span></div><div class="line" id="002618"><span class="nick" style="color:#8dd3c7"><a href="#002618" label="[00:26:18]">&lt;stikonas&gt;</a></span><span class="message">and after that I think I can start working on kaem-optional-seed.efi</span></div><div class="line" id="002619"><span class="nick" style="color:#389600"><a href="#002619" label="[00:26:19]">&lt;oriansj&gt;</a></span><span class="message">good</span></div><div class="line" id="002636"><span class="nick" style="color:#389600"><a href="#002636" label="[00:26:36]">&lt;oriansj&gt;</a></span><span class="message">sounds good to me</span></div><div class="line" id="003152"><span class="nick" style="color:#8dd3c7"><a href="#003152" label="[00:31:52]">&lt;stikonas&gt;</a></span><span class="message">kaem-optional-seed.efi will probably be over 1 KiB...</span></div><div class="line" id="010313"><span class="nick" style="color:#389600"><a href="#010313" label="[01:03:13]">&lt;oriansj&gt;</a></span><span class="message">stikonas: silly question but is the UEFI shell scriptable?</span></div><div class="line" id="010802"><span class="nick" style="color:#8dd3c7"><a href="#010802" label="[01:08:02]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I think a bit scriptable</span></div><div class="line" id="010810"><span class="nick" style="color:#8dd3c7"><a href="#010810" label="[01:08:10]">&lt;stikonas&gt;</a></span><span class="message">but you need to get UEFI shell</span></div><div class="line" id="010833"><span class="nick" style="color:#8dd3c7"><a href="#010833" label="[01:08:33]">&lt;stikonas&gt;</a></span><span class="message">e.g. on my laptop there is no UEFI shell, although UEFI has an option to start UEFI shell from bootable media</span></div><div class="line" id="010837"><span class="nick" style="color:#8dd3c7"><a href="#010837" label="[01:08:37]">&lt;stikonas&gt;</a></span><span class="message">but you need Shell.efi</span></div><div class="line" id="010909"><span class="nick" style="color:#8dd3c7"><a href="#010909" label="[01:09:09]">&lt;stikonas&gt;</a></span><span class="message">oriansj: but it's far more limited in terms of scripting</span></div><div class="line" id="010922"><span class="nick" style="color:#8dd3c7"><a href="#010922" label="[01:09:22]">&lt;stikonas&gt;</a></span><span class="message">e.g. set command can show exit status of last command</span></div><div class="line" id="010927"><span class="nick" style="color:#8dd3c7"><a href="#010927" label="[01:09:27]">&lt;stikonas&gt;</a></span><span class="message">but I don't think there is anything like $?</span></div><div class="line" id="011033"><span class="nick" style="color:#8dd3c7"><a href="#011033" label="[01:10:33]">&lt;stikonas&gt;</a></span><span class="message">(based on my M1 file, I can reduce kaem-optional-seed by 200 bytes on amd64)</span></div><div class="line" id="011051"><span class="nick" style="color:#8dd3c7"><a href="#011051" label="[01:10:51]">&lt;stikonas&gt;</a></span><span class="message">it will be 696</span></div><div class="line" id="011254"><span class="nick" style="color:#8dd3c7"><a href="#011254" label="[01:12:54]">&lt;stikonas&gt;</a></span><span class="message">oriansj: see list of commands there <a rel="nofollow" href="https://linuxhint.com/use-uefi-interactive-shell-and-its-common-commands/">https://linuxhint.com/use-uefi-interactive-shell-and-its-common-commands/</a> </span></div><div class="line" id="011305"><span class="nick" style="color:#8dd3c7"><a href="#011305" label="[01:13:05]">&lt;stikonas&gt;</a></span><span class="message">and UEFI shell starts startup.nsh file</span></div><div class="line" id="011317"><span class="nick" style="color:#8dd3c7"><a href="#011317" label="[01:13:17]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think we'll replace it with kaem-optional-seed.efi</span></div><div class="line" id="011320"><span class="nick" style="color:#8dd3c7"><a href="#011320" label="[01:13:20]">&lt;stikonas&gt;</a></span><span class="message">that will be way smaller</span></div><div class="line" id="011335"><span class="nick" style="color:#8dd3c7"><a href="#011335" label="[01:13:35]">&lt;stikonas&gt;</a></span><span class="message">although the problem with kaem is that it is not interactive</span></div><div class="line" id="011355"><span class="nick" style="color:#8dd3c7"><a href="#011355" label="[01:13:55]">&lt;stikonas&gt;</a></span><span class="message">so stage0-uefi would be able to run, even build M2-Mesoplanet but then it will just exit</span></div><div class="line" id="011426"><span class="nick" style="color:#8dd3c7"><a href="#011426" label="[01:14:26]">&lt;stikonas&gt;</a></span><span class="message">(although compiled binaries can be inspected on some other system)</span></div><div class="line" id="011531"><span class="nick" style="color:#389600"><a href="#011531" label="[01:15:31]">&lt;oriansj&gt;</a></span><span class="message">stikonas: echo %lasterror%</span></div><div class="line" id="011549"><span class="nick" style="color:#8dd3c7"><a href="#011549" label="[01:15:49]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="011601"><span class="nick" style="color:#8dd3c7"><a href="#011601" label="[01:16:01]">&lt;stikonas&gt;</a></span><span class="message">I guess that's .bat syntax...</span></div><div class="line" id="011622"><span class="nick" style="color:#8dd3c7"><a href="#011622" label="[01:16:22]">&lt;stikonas&gt;</a></span><span class="message">anyway I mostly view UEFI shell as debugging aid</span></div><div class="line" id="011710"><span class="nick" style="color:#389600"><a href="#011710" label="[01:17:10]">&lt;oriansj&gt;</a></span><span class="message">well in the case they have the shell, just having a script there would remove one of our binaries and if not, our kaem-optional will fill that role nicely</span></div><div class="line" id="011818"><span class="nick" style="color:#8dd3c7"><a href="#011818" label="[01:18:18]">&lt;stikonas&gt;</a></span><span class="message">well, yes</span></div><div class="line" id="011902"><span class="nick" style="color:#389600"><a href="#011902" label="[01:19:02]">&lt;oriansj&gt;</a></span><span class="message">and thank you for making that option possible ^_^</span></div><div class="line" id="011915"><span class="nick" style="color:#8dd3c7"><a href="#011915" label="[01:19:15]">&lt;stikonas&gt;</a></span><span class="message">well, that option is free</span></div><div class="line" id="011924"><span class="nick" style="color:#8dd3c7"><a href="#011924" label="[01:19:24]">&lt;stikonas&gt;</a></span><span class="message">I didn't really have to do anything</span></div><div class="line" id="011946"><span class="nick" style="color:#389600"><a href="#011946" label="[01:19:46]">&lt;oriansj&gt;</a></span><span class="message">not entirely but in comparison to our hex0 fun, yeah</span></div><div class="line" id="012027"><span class="nick" style="color:#389600"><a href="#012027" label="[01:20:27]">&lt;oriansj&gt;</a></span><span class="message">it only costs a little testing</span></div><div class="line" id="012101"><span class="nick" style="color:#8dd3c7"><a href="#012101" label="[01:21:01]">&lt;stikonas&gt;</a></span><span class="message">well, one just needs to somehow run hex0.efi kaem-minimal.hex0 BOOTX64.efi</span></div><div class="line" id="012104"><span class="nick" style="color:#8dd3c7"><a href="#012104" label="[01:21:04]">&lt;stikonas&gt;</a></span><span class="message">or something like that</span></div><div class="line" id="012124"><span class="nick" style="color:#8dd3c7"><a href="#012124" label="[01:21:24]">&lt;stikonas&gt;</a></span><span class="message">unfortunately you need either kaem or Shell to pass command line arguments</span></div><div class="line" id="012252"><span class="nick" style="color:#389600"><a href="#012252" label="[01:22:52]">&lt;oriansj&gt;</a></span><span class="message">and kaem will always be smaller</span></div><div class="line" id="012350"><span class="nick" style="color:#8dd3c7"><a href="#012350" label="[01:23:50]">&lt;stikonas&gt;</a></span><span class="message">well, there are some options to combine things into one binary...</span></div><div class="line" id="012456"><span class="nick" style="color:#389600"><a href="#012456" label="[01:24:56]">&lt;oriansj&gt;</a></span><span class="message">indeed, one could do a much more impresive hex0 monitor</span></div><div class="line" id="012543"><span class="nick" style="color:#8dd3c7"><a href="#012543" label="[01:25:43]">&lt;stikonas&gt;</a></span><span class="message">but having kaem and hex0 separate makes scripting nice and logical</span></div><div class="line" id="012616"><span class="nick" style="color:#389600"><a href="#012616" label="[01:26:16]">&lt;oriansj&gt;</a></span><span class="message">and easy to audit</span></div><div class="line" id="012655"><span class="nick" style="color:#8dd3c7"><a href="#012655" label="[01:26:55]">&lt;stikonas&gt;</a></span><span class="message">yes...</span></div><div class="line" id="014837"><span class="nick" style="color:#6b8072"><a href="#014837" label="[01:48:37]">&lt;pabs3&gt;</a></span><span class="message">hmm, would be nice to merge bison-bootstrap into bison upstream, it seems small enough they might accept it. interesting its written by a Debian person :)</span></div><div class="line" id="020453"><span class="nick" style="color:#80b1d3"><a href="#020453" label="[02:04:53]">&lt;stikonas[m]&gt;</a></span><span class="message">pabs3: bison bootstrap only works with a very specific version of bison</span></div><div class="line" id="020541"><span class="nick" style="color:#80b1d3"><a href="#020541" label="[02:05:41]">&lt;stikonas[m]&gt;</a></span><span class="message">(You can of course use it tonbuilf other versions later)</span></div><div class="line" id="020559"><span class="nick" style="color:#80b1d3"><a href="#020559" label="[02:05:59]">&lt;stikonas[m]&gt;</a></span><span class="message">But I don't see how it can be upstreamed</span></div><div class="line" id="022839"><span class="nick" style="color:#6d2462"><a href="#022839" label="[02:28:39]">&lt;muurkha&gt;</a></span><span class="message">yeah, it wouldn't make sense to upstream changes to an ancient version of bison</span></div><div class="line" id="023428"><span class="nick" style="color:#6b8072"><a href="#023428" label="[02:34:28]">&lt;pabs3&gt;</a></span><span class="message">ah, I see. I was thinking it was for the current version of bison. I guess if it caught up to the current version then it could end up maintained upstream</span></div><div class="line" id="023951"><span class="nick" style="color:#6d2462"><a href="#023951" label="[02:39:51]">&lt;muurkha&gt;</a></span><span class="message">maybe, but the bison maintainers might not appreciate having to worry about whether they were introducing an incompatibility with a 25-year-old version of bison every time they made a change to bison's grammar</span></div><div class="line" id="024017"><span class="nick" style="color:#6d2462"><a href="#024017" label="[02:40:17]">&lt;muurkha&gt;</a></span><span class="message">they'd have to agree that deriving bison from pure source code was a worthwhile goal</span></div><div class="line" id="024743"><span class="nick" style="color:#6b8072"><a href="#024743" label="[02:47:43]">&lt;pabs3&gt;</a></span><span class="message">I feel like that would be aligned with the values of FSF/GNU so probably the bison folks would agree :)</span></div><div class="line" id="024826"><span class="nick" style="color:#6b8072"><a href="#024826" label="[02:48:26]">&lt;pabs3&gt;</a></span><span class="message">(although, there have been at least three occasions where GNU caused downstream GPL violations by not including source in their tarballs at all, so...)</span></div><div class="line" id="030849"><span class="nick" style="color:#6d2462"><a href="#030849" label="[03:08:49]">&lt;muurkha&gt;</a></span><span class="message">maybe at some point we can make that argument about value alignment to them, but it will be an easier sell once we have a whole reproducible bootstrap chain from bare metal</span></div><div class="line" id="031559"><span class="nick" style="color:#389600"><a href="#031559" label="[03:15:59]">&lt;oriansj&gt;</a></span><span class="message">pabs3: well even more cases of when one couldn't actually build the sources they distributed and everyone basically took the pregenerated crap</span></div><div class="line" id="031702"><span class="nick" style="color:#389600"><a href="#031702" label="[03:17:02]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well we are 3 big pieces away from that goal; just need to build hurd with M2-Planet and then we can just call it one</span></div><div class="line" id="031712"><span class="nick" style="color:#389600"><a href="#031712" label="[03:17:12]">&lt;oriansj&gt;</a></span><span class="message">;-p</span></div><div class="line" id="031724"><span class="nick" style="color:#6d2462"><a href="#031724" label="[03:17:24]">&lt;muurkha&gt;</a></span><span class="message">on the bootstrap kernel</span></div><div class="line" id="032219"><span class="nick" style="color:#389600"><a href="#032219" label="[03:22:19]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well we have the bootstrap kernel already with boot2now; it is the linking kernel written in C that is missing (along with the ability to build a filesystem capable of building Linux)</span></div><div class="line" id="032331"><span class="nick" style="color:#6d2462"><a href="#032331" label="[03:23:31]">&lt;muurkha&gt;</a></span><span class="message">hmm, where does it peter out?</span></div><div class="line" id="032354"><span class="nick" style="color:#234e69"><a href="#032354" label="[03:23:54]">&lt;Hagfish&gt;</a></span><span class="message">maybe that's what's been holding back GNU/Hurd all this time...  it was too easy of a challenge that no one bothered.  but tell them to build it with M2-Planet and suddenly there'll be PRs coming in by the hour :)</span></div><div class="line" id="032528"><span class="nick" style="color:#389600"><a href="#032528" label="[03:25:28]">&lt;oriansj&gt;</a></span><span class="message">muurkha: after building Mes-m2 (as MesCC needs more kernel support than all of the previous parts put together)</span></div><div class="line" id="032648"><span class="nick" style="color:#389600"><a href="#032648" label="[03:26:48]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: or a handful of pull requests on M2-Planet/M2-Mesoplanet (which is probably how far off of C-89 support we are in terms of C features)</span></div><div class="line" id="032741"><span class="nick" style="color:#6d2462"><a href="#032741" label="[03:27:41]">&lt;muurkha&gt;</a></span><span class="message">hmm, just on MesCC?</span></div><div class="line" id="033014"><span class="nick" style="color:#234e69"><a href="#033014" label="[03:30:14]">&lt;Hagfish&gt;</a></span><span class="message">i guess i was imagining a reinvigoration of the work on GNU/Hurd too, but i guess it doesn't matter from a bootstrapping perspective whether Hurd bootstraps Linux or vice versa</span></div><div class="line" id="033128"><span class="nick" style="color:#389600"><a href="#033128" label="[03:31:28]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well we can easily build the scheme interpreter as M2-Planet/M2-Mesoplanet only use a handful of syscalls. The interpreter however has the ability to call a good deal more</span></div><div class="line" id="133325"><span class="nick" style="color:#6c3d55"><a href="#133325" label="[13:33:25]">&lt;mid-kid&gt;</a></span><span class="message">Forgot to share my notes on building python/bootstrapping LFS from live-bootstrap: <a rel="nofollow" href="https://pastebin.com/raw/hri8CGVw">https://pastebin.com/raw/hri8CGVw</a> </span></div><div class="line" id="133434"><span class="nick" style="color:#6c3d55"><a href="#133434" label="[13:34:34]">&lt;mid-kid&gt;</a></span><span class="message">I'm glad it's not too complicated but I wonder if it'd be a good idea to modify live-bootstrap so it can be used to build LFS without any modifications.</span></div><div class="line" id="133653"><span class="nick" style="color:#6c3d55"><a href="#133653" label="[13:36:53]">&lt;mid-kid&gt;</a></span><span class="message">I also have some old notes on building gentoo from a chapter 7 LFS but it's been a while so I'll have to check them.</span></div><div class="line" id="155800"><span class="nick" style="color:#80b1d3"><a href="#155800" label="[15:58:00]">&lt;stikonas[m]&gt;</a></span><span class="message">mid-kid: we'll get there eventually, first I think fossy wants to build python</span></div><div class="line" id="155810"><span class="nick" style="color:#80b1d3"><a href="#155810" label="[15:58:10]">&lt;stikonas[m]&gt;</a></span><span class="message">But without pregenerated files</span></div><div class="line" id="155829"><span class="nick" style="color:#80b1d3"><a href="#155829" label="[15:58:29]">&lt;stikonas[m]&gt;</a></span><span class="message">Which means starting with old pyrhon2</span></div><div class="line" id="155832"><span class="nick" style="color:#80b1d3"><a href="#155832" label="[15:58:32]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe 2.4...</span></div><div class="line" id="155903"><span class="nick" style="color:#80b1d3"><a href="#155903" label="[15:59:03]">&lt;stikonas[m]&gt;</a></span><span class="message">python3 has some python generated headers or maybe parser</span></div><div class="line" id="170513"><span class="nick" style="color:#389600"><a href="#170513" label="[17:05:13]">&lt;oriansj&gt;</a></span><span class="message">I must say, the more I learn about kernels, the more I think capability kernels were the right idea at the wrong time.</span></div><div class="line" id="220646"><span class="nick" style="color:#6d2462"><a href="#220646" label="[22:06:46]">&lt;muurkha&gt;</a></span><span class="message">yeah, I think they're the right idea</span></div><div class="line" id="220712"><span class="nick" style="color:#6d2462"><a href="#220712" label="[22:07:12]">&lt;muurkha&gt;</a></span><span class="message">mid-kid: wow, that's awesome!</span></div><div class="line" id="220845"><span class="nick" style="color:#6d2462"><a href="#220845" label="[22:08:45]">&lt;muurkha&gt;</a></span><span class="message">oriansj: I don't know that it was even the wrong time; maybe the dominance of the identity-based access control model was just random</span></div><div class="line" id="220953"><span class="nick" style="color:#6d2462"><a href="#220953" label="[22:09:53]">&lt;muurkha&gt;</a></span><span class="message">like qwerty keyboards: even if the alternative designs don't really offer the dramatic *improvements* Dvorak originally claimed for his design, surely nobody believes Qwerty is in any sense *optimal*</span></div><div class="line" id="221257"><span class="nick" style="color:#6d2462"><a href="#221257" label="[22:12:57]">&lt;muurkha&gt;</a></span><span class="message">there are other examples where one alternative or the other is clearly superior technically, but I don't want to offer them as examples because people disagree fervently about which alternative it is ;)</span></div><div class="line" id="221728"><span class="nick" style="color:#389600"><a href="#221728" label="[22:17:28]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well thinking in terms of bad people is far easier than thinking in terms of badly behaving programs</span></div><div class="line" id="221736"><span class="nick" style="color:#6d2462"><a href="#221736" label="[22:17:36]">&lt;muurkha&gt;</a></span><span class="message">maybe it's safe to point out that Java has largely replaced COBOL in mainframe business data processing starting around 02008, and that almost certainly means either that people would have been better off writing a decent Smalltalk in the 01980s to replace COBOL, or that they are worse off now that they've switched to Java</span></div><div class="line" id="221849"><span class="nick" style="color:#6d2462"><a href="#221849" label="[22:18:49]">&lt;muurkha&gt;</a></span><span class="message">so clearly there is some kind of path dependency going on</span></div><div class="line" id="221902"><span class="nick" style="color:#6d2462"><a href="#221902" label="[22:19:02]">&lt;muurkha&gt;</a></span><span class="message">oriansj: maybe, yeah.  but programmers have thought in terms of program behavior as long as there have been programmers</span></div><div class="line" id="222416"><span class="nick" style="color:#389600"><a href="#222416" label="[22:24:16]">&lt;oriansj&gt;</a></span><span class="message">well Java shared something special with COBOL that Smalltalk doesn't: there is no focus on distribution, distribablity, package management or administration but rather here download this Jar (binary blob) file and run it.</span></div><div class="line" id="222556"><span class="nick" style="color:#6c3d55"><a href="#222556" label="[22:25:56]">&lt;mid-kid&gt;</a></span><span class="message">&lt;stikonas[m]&gt; But without pregenerated files &lt;- Ah yeah that's a major issue I guess</span></div><div class="line" id="222747"><span class="nick" style="color:#6c3d55"><a href="#222747" label="[22:27:47]">&lt;mid-kid&gt;</a></span><span class="message">Though very few distros do debian's whole source-purity shtick so it's kind of out of the window once you build most distros unfortunately.</span></div><div class="line" id="222805"><span class="nick" style="color:#6c3d55"><a href="#222805" label="[22:28:05]">&lt;mid-kid&gt;</a></span><span class="message">But for a pure-source bootstrap like this it's important.</span></div><div class="line" id="223809"><span class="nick" style="color:#6d2462"><a href="#223809" label="[22:38:09]">&lt;muurkha&gt;</a></span><span class="message">aye</span></div><div class="line" id="231520"><span class="nick" style="color:#8dd3c7"><a href="#231520" label="[23:15:20]">&lt;stikonas&gt;</a></span><span class="message">argh, messed up one thing in POSIX/x86/kaem-optional-seed....</span></div><div class="line" id="231523"><span class="nick" style="color:#8dd3c7"><a href="#231523" label="[23:15:23]">&lt;stikonas&gt;</a></span><span class="message">will have to relink it</span></div><div class="line" id="231633"><span class="nick" style="color:#389600"><a href="#231633" label="[23:16:33]">&lt;oriansj&gt;</a></span><span class="message">stikonas: no worries I noticed you didn't update the comment with the name to kaem.x86</span></div><div class="line" id="231651"><span class="nick" style="color:#8dd3c7"><a href="#231651" label="[23:16:51]">&lt;stikonas&gt;</a></span><span class="message">oh, I can do that too</span></div><div class="line" id="231655"><span class="nick" style="color:#8dd3c7"><a href="#231655" label="[23:16:55]">&lt;stikonas&gt;</a></span><span class="message">I messed up a bit more</span></div><div class="line" id="231658"><span class="nick" style="color:#8dd3c7"><a href="#231658" label="[23:16:58]">&lt;stikonas&gt;</a></span><span class="message">but will fix it</span></div><div class="line" id="231706"><span class="nick" style="color:#8dd3c7"><a href="#231706" label="[23:17:06]">&lt;stikonas&gt;</a></span><span class="message">shouldn't have moved Exit_Failure function</span></div><div class="line" id="231723"><span class="nick" style="color:#8dd3c7"><a href="#231723" label="[23:17:23]">&lt;stikonas&gt;</a></span><span class="message">now on subprocess error it would  exit with 0</span></div><br /></div></body></html>