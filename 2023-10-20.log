<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-10-20.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000535"><span class="nick" style="color:#389600"><a href="#000535" label="[00:05:35]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well it will increase the upper bound for argv from 1MB to 2MB; although I believe the reason selected for 256 entries was to align with a POSIX standard</span></div><div class="line" id="001002"><span class="nick" style="color:#389600"><a href="#001002" label="[00:10:02]">&lt;oriansj&gt;</a></span><span class="message">but other than that I have no object to the increase if it is actually useful to you ^_^</span></div><div class="line" id="002210"><span class="nick" style="color:#8dd3c7"><a href="#002210" label="[00:22:10]">&lt;muurkha&gt;</a></span><span class="message">rekado: I agree that preventing ocean acidification is a huge deal, and that stratospheric aerosols won't help with that</span></div><div class="line" id="002316"><span class="nick" style="color:#8dd3c7"><a href="#002316" label="[00:23:16]">&lt;muurkha&gt;</a></span><span class="message">it turns out that with serpentinization of olivine the energy requirement for sequestration is amazingly modest; the hard part is getting it out of the atmosphere</span></div><div class="line" id="003518"><span class="nick" style="color:#389600"><a href="#003518" label="[00:35:18]">&lt;oriansj&gt;</a></span><span class="message">as an engineering, just solve that problem with infinite energy; no but in hey we can't get people to turn down their thermostat to prevent people from dying social problem. Yeah, quite difficult</span></div><div class="line" id="004033"><span class="nick" style="color:#2e2a4a"><a href="#004033" label="[00:40:33]">&lt;stikonas&gt;</a></span><span class="message">oriansj: it's  probably the minimum in POSIX... bash certainly supports more</span></div><div class="line" id="004048"><span class="nick" style="color:#2e2a4a"><a href="#004048" label="[00:40:48]">&lt;stikonas&gt;</a></span><span class="message">oriansj: the use case is to catm all meslibc files</span></div><div class="line" id="004110"><span class="nick" style="color:#2e2a4a"><a href="#004110" label="[00:41:10]">&lt;stikonas&gt;</a></span><span class="message">we could catm over intermediate temp files if you we want to keep 256 though...</span></div><div class="line" id="004215"><span class="nick" style="color:#2e2a4a"><a href="#004215" label="[00:42:15]">&lt;stikonas&gt;</a></span><span class="message">though I'm not sure how builder-hex0 behaves with more...</span></div><div class="line" id="004259"><span class="nick" style="color:#389600"><a href="#004259" label="[00:42:59]">&lt;oriansj&gt;</a></span><span class="message">in that case; merged</span></div><div class="line" id="004343"><span class="nick" style="color:#2e2a4a"><a href="#004343" label="[00:43:43]">&lt;stikonas&gt;</a></span><span class="message">thanks, this might be helpful</span></div><div class="line" id="004413"><span class="nick" style="color:#2e2a4a"><a href="#004413" label="[00:44:13]">&lt;stikonas&gt;</a></span><span class="message">let me merge that to stage0-posix</span></div><div class="line" id="004448"><span class="nick" style="color:#2e2a4a"><a href="#004448" label="[00:44:48]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe let me first sync some small change to comments of riscv bootstrap seeds</span></div><div class="line" id="004457"><span class="nick" style="color:#2e2a4a"><a href="#004457" label="[00:44:57]">&lt;stikonas&gt;</a></span><span class="message">I think it's lowercase vs uppercase</span></div><div class="line" id="004722"><span class="nick" style="color:#2e2a4a"><a href="#004722" label="[00:47:22]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/pull/40">https://github.com/oriansj/bootstrap-seeds/pull/40</a> </span></div><div class="line" id="004728"><span class="nick" style="color:#2e2a4a"><a href="#004728" label="[00:47:28]">&lt;stikonas&gt;</a></span><span class="message">this just changes M1 macros to lowercase</span></div><div class="line" id="004739"><span class="nick" style="color:#2e2a4a"><a href="#004739" label="[00:47:39]">&lt;stikonas&gt;</a></span><span class="message">we already had that in stage-posix-riscv*</span></div><div class="line" id="004744"><span class="nick" style="color:#2e2a4a"><a href="#004744" label="[00:47:44]">&lt;stikonas&gt;</a></span><span class="message">and that also matches what mes has</span></div><div class="line" id="004801"><span class="nick" style="color:#2e2a4a"><a href="#004801" label="[00:48:01]">&lt;stikonas&gt;</a></span><span class="message">(for riscv we use identical defines in M2libc and meslibc)</span></div><div class="line" id="005012"><span class="nick" style="color:#6b8072"><a href="#005012" label="[00:50:12]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; stikonas: thanks for that kaem change, it is helpful. i currently hack around it with 2 calls to catm</span></div><div class="line" id="005101"><span class="nick" style="color:#6b8072"><a href="#005101" label="[00:51:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; emilytrau: yeah, that's what I was doing too</span></div><div class="line" id="005121"><span class="nick" style="color:#6b8072"><a href="#005121" label="[00:51:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; emilytrau: by the way, did you have problems with tcc and weak symbols?</span></div><div class="line" id="005127"><span class="nick" style="color:#6b8072"><a href="#005127" label="[00:51:27]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; turns out there is a patch upstream</span></div><div class="line" id="005135"><span class="nick" style="color:#6b8072"><a href="#005135" label="[00:51:35]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; which is simpler than my workaround</span></div><div class="line" id="005142"><span class="nick" style="color:#6b8072"><a href="#005142" label="[00:51:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; :o yess please</span></div><div class="line" id="005144"><span class="nick" style="color:#389600"><a href="#005144" label="[00:51:44]">&lt;oriansj&gt;</a></span><span class="message">emilytrau: well mescc-tools and mescc-tools-extra exist to make other bootstrapper lives easier. So any changes you think will make things better/easier are usually a pretty easy merge/request</span></div><div class="line" id="005202"><span class="nick" style="color:#6b8072"><a href="#005202" label="[00:52:02]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; <a rel="nofollow" href="https://github.com/TinyCC/tinycc/commit/da11cf651576f94486dbd043dbfcde469e497574">https://github.com/TinyCC/tinycc/commit/da11cf651576f94486dbd043dbfcde469e497574</a> </span></div><div class="line" id="005233"><span class="nick" style="color:#2e2a4a"><a href="#005233" label="[00:52:33]">&lt;stikonas&gt;</a></span><span class="message">on x86 I was hitting this when building musl</span></div><div class="line" id="005247"><span class="nick" style="color:#2e2a4a"><a href="#005247" label="[00:52:47]">&lt;stikonas&gt;</a></span><span class="message">but on riscv this was already an issue when rebuilding bootstrappable tinycc</span></div><div class="line" id="005304"><span class="nick" style="color:#6b8072"><a href="#005304" label="[00:53:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; i was definitely hitting that issue. that's so easy</span></div><div class="line" id="005311"><span class="nick" style="color:#2e2a4a"><a href="#005311" label="[00:53:11]">&lt;stikonas&gt;</a></span><span class="message">indeed!</span></div><div class="line" id="005320"><span class="nick" style="color:#2e2a4a"><a href="#005320" label="[00:53:20]">&lt;stikonas&gt;</a></span><span class="message">I've created a bug in live-bootstrap to switch to this patch</span></div><div class="line" id="005354"><span class="nick" style="color:#2e2a4a"><a href="#005354" label="[00:53:54]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/322">https://github.com/fosslinux/live-bootstrap/issues/322</a> </span></div><div class="line" id="005413"><span class="nick" style="color:#389600"><a href="#005413" label="[00:54:13]">&lt;oriansj&gt;</a></span><span class="message">bootstraps only get better with love ^_^</span></div><div class="line" id="005528"><span class="nick" style="color:#2e2a4a"><a href="#005528" label="[00:55:28]">&lt;stikonas&gt;</a></span><span class="message">if somebody wants a go at it feel free, I also tagged it with &quot;good first issue&quot;</span></div><div class="line" id="005536"><span class="nick" style="color:#2e2a4a"><a href="#005536" label="[00:55:36]">&lt;stikonas&gt;</a></span><span class="message">should be fairly easy to fix</span></div><div class="line" id="005752"><span class="nick" style="color:#6b8072"><a href="#005752" label="[00:57:52]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; good opportunity to show off how we automatically maintain the list of meslibc files to concat ^_^ <a rel="nofollow" href="https://github.com/NixOS/nixpkgs/blob/master/pkgs/os-specific/linux/minimal-bootstrap/mes/gen-sources.sh">https://github.com/NixOS/nixpkgs/blob/master/pkgs/os-specific/linux/minimal-bootstrap/mes/gen-sources.sh</a> </span></div><div class="line" id="010759"><span class="nick" style="color:#6b8072"><a href="#010759" label="[01:07:59]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; we also sped up mescc builds a ton by parallelising each source file compilation into its own derivation using this list</span></div><div class="line" id="011936"><span class="nick" style="color:#6b8072"><a href="#011936" label="[01:19:36]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Well, live-bootstrap can't do that, it needs to be able to run without threads in early bootstrap</span></div><div class="line" id="011951"><span class="nick" style="color:#6b8072"><a href="#011951" label="[01:19:51]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; builder-hex0 has no parallelism</span></div><div class="line" id="012132"><span class="nick" style="color:#389600"><a href="#012132" label="[01:21:32]">&lt;oriansj&gt;</a></span><span class="message">but it has the advantage of no race conditions</span></div><div class="line" id="012537"><span class="nick" style="color:#8dd3c7"><a href="#012537" label="[01:25:37]">&lt;muurkha&gt;</a></span><span class="message">oriansj: well, we don't have infinite energy, but we do have three orders of magnitude more available from solar than we've ever used of fossil fuels, and solar is now cheaper too</span></div><div class="line" id="012600"><span class="nick" style="color:#8dd3c7"><a href="#012600" label="[01:26:00]">&lt;muurkha&gt;</a></span><span class="message">plenty of energy for atmospheric carbon capture</span></div><div class="line" id="012709"><span class="nick" style="color:#389600"><a href="#012709" label="[01:27:09]">&lt;oriansj&gt;</a></span><span class="message">muurkha: true, not to mention a boatload of nuclear and all the energy we could capture if we make a dyson ring.</span></div><div class="line" id="012746"><span class="nick" style="color:#8dd3c7"><a href="#012746" label="[01:27:46]">&lt;muurkha&gt;</a></span><span class="message">those have the problem of being more expensive than fossil fuels rather than cheaper, at least at the moment</span></div><div class="line" id="013254"><span class="nick" style="color:#389600"><a href="#013254" label="[01:32:54]">&lt;oriansj&gt;</a></span><span class="message">much cheaper if one does account for the full costs of the fuel wastes and associated costs usually shifted into the extranalities column.</span></div><div class="line" id="013512"><span class="nick" style="color:#8dd3c7"><a href="#013512" label="[01:35:12]">&lt;muurkha&gt;</a></span><span class="message">plausibly not cheaper even then, depending on how expensive atmospheric carbon capture turns out to be</span></div><div class="line" id="013535"><span class="nick" style="color:#8dd3c7"><a href="#013535" label="[01:35:35]">&lt;muurkha&gt;</a></span><span class="message">it's somewhat academic perhaps</span></div><div class="line" id="013614"><span class="nick" style="color:#8dd3c7"><a href="#013614" label="[01:36:14]">&lt;muurkha&gt;</a></span><span class="message">eventually the price of a Dyson spherewill surely be cheaper</span></div><div class="line" id="022728"><span class="nick" style="color:#80b1d3"><a href="#022728" label="[02:27:28]">&lt;nektro&gt;</a></span><span class="message">how's the mes wip-x86_64 branch going?</span></div><div class="line" id="023424"><span class="nick" style="color:#80b1d3"><a href="#023424" label="[02:34:24]">&lt;nektro&gt;</a></span><span class="message">i saw 0.24.2 was still the latest version</span></div><div class="line" id="023625"><span class="nick" style="color:#2e2a4a"><a href="#023625" label="[02:36:25]">&lt;stikonas&gt;</a></span><span class="message">nektro: mes itself is working</span></div><div class="line" id="023640"><span class="nick" style="color:#2e2a4a"><a href="#023640" label="[02:36:40]">&lt;stikonas&gt;</a></span><span class="message">will be part of 0.25</span></div><div class="line" id="023653"><span class="nick" style="color:#80b1d3"><a href="#023653" label="[02:36:53]">&lt;nektro&gt;</a></span><span class="message">nice :)</span></div><div class="line" id="023656"><span class="nick" style="color:#80b1d3"><a href="#023656" label="[02:36:56]">&lt;nektro&gt;</a></span><span class="message">cant wait to try</span></div><div class="line" id="023704"><span class="nick" style="color:#2e2a4a"><a href="#023704" label="[02:37:04]">&lt;stikonas&gt;</a></span><span class="message">nektro: but bootstrap of tinycc is only partial</span></div><div class="line" id="023734"><span class="nick" style="color:#2e2a4a"><a href="#023734" label="[02:37:34]">&lt;stikonas&gt;</a></span><span class="message">it can actually build tcc-mes binary but that binary segfaults right now</span></div><div class="line" id="023743"><span class="nick" style="color:#2e2a4a"><a href="#023743" label="[02:37:43]">&lt;stikonas&gt;</a></span><span class="message">there might be some workarounds</span></div><div class="line" id="023827"><span class="nick" style="color:#2e2a4a"><a href="#023827" label="[02:38:27]">&lt;stikonas&gt;</a></span><span class="message">but some constants are miscompiled</span></div><div class="line" id="023832"><span class="nick" style="color:#2e2a4a"><a href="#023832" label="[02:38:32]">&lt;stikonas&gt;</a></span><span class="message">e.g. on the line like <a rel="nofollow" href="https://github.com/ekaitz-zarraga/tcc/blob/riscv-mes/x86_64-gen.c#L487">https://github.com/ekaitz-zarraga/tcc/blob/riscv-mes/x86_64-gen.c#L487</a> </span></div><div class="line" id="023843"><span class="nick" style="color:#2e2a4a"><a href="#023843" label="[02:38:43]">&lt;stikonas&gt;</a></span><span class="message"> o(0xf0245cdd);</span></div><div class="line" id="023858"><span class="nick" style="color:#2e2a4a"><a href="#023858" label="[02:38:58]">&lt;stikonas&gt;</a></span><span class="message">that number 0xf0245cdd gets sign extended to 64-bits and becomes negative</span></div><div class="line" id="023902"><span class="nick" style="color:#2e2a4a"><a href="#023902" label="[02:39:02]">&lt;stikonas&gt;</a></span><span class="message">some bug in mescc I guess</span></div><div class="line" id="023926"><span class="nick" style="color:#2e2a4a"><a href="#023926" label="[02:39:26]">&lt;stikonas&gt;</a></span><span class="message">should be zero extended in this case...</span></div><div class="line" id="023957"><span class="nick" style="color:#2e2a4a"><a href="#023957" label="[02:39:57]">&lt;stikonas&gt;</a></span><span class="message">nektro: but riscv is basically done</span></div><div class="line" id="024000"><span class="nick" style="color:#2e2a4a"><a href="#024000" label="[02:40:00]">&lt;stikonas&gt;</a></span><span class="message">just need to merge and release</span></div><div class="line" id="024124"><span class="nick" style="color:#80b1d3"><a href="#024124" label="[02:41:24]">&lt;nektro&gt;</a></span><span class="message">yeah thats super exciting, will love to try it once i get some riscv hardware</span></div><div class="line" id="024337"><span class="nick" style="color:#2e2a4a"><a href="#024337" label="[02:43:37]">&lt;stikonas&gt;</a></span><span class="message">its super slow...</span></div><div class="line" id="024410"><span class="nick" style="color:#2e2a4a"><a href="#024410" label="[02:44:10]">&lt;stikonas&gt;</a></span><span class="message">on visionfive2 mes takes maybe a week till  you get to tcc</span></div><div class="line" id="024451"><span class="nick" style="color:#80b1d3"><a href="#024451" label="[02:44:51]">&lt;nektro&gt;</a></span><span class="message">oh wow, yeah thats slower than i thought u were gonna say</span></div><div class="line" id="024510"><span class="nick" style="color:#2e2a4a"><a href="#024510" label="[02:45:10]">&lt;stikonas&gt;</a></span><span class="message">after mes and before mes is not too bad I guess</span></div><div class="line" id="024514"><span class="nick" style="color:#2e2a4a"><a href="#024514" label="[02:45:14]">&lt;stikonas&gt;</a></span><span class="message">stage0-posix takes maybe 30 min</span></div><div class="line" id="024522"><span class="nick" style="color:#2e2a4a"><a href="#024522" label="[02:45:22]">&lt;stikonas&gt;</a></span><span class="message">but mes is really bad...</span></div><div class="line" id="024522"><span class="nick" style="color:#80b1d3"><a href="#024522" label="[02:45:22]">&lt;nektro&gt;</a></span><span class="message">but that can always be improved, still an impressive accomplishment</span></div><div class="line" id="024530"><span class="nick" style="color:#80b1d3"><a href="#024530" label="[02:45:30]">&lt;nektro&gt;</a></span><span class="message">and the chips will get way faster tooo</span></div><div class="line" id="024543"><span class="nick" style="color:#2e2a4a"><a href="#024543" label="[02:45:43]">&lt;stikonas&gt;</a></span><span class="message">well, once you get to gcc it's not too slow</span></div><div class="line" id="024551"><span class="nick" style="color:#2e2a4a"><a href="#024551" label="[02:45:51]">&lt;stikonas&gt;</a></span><span class="message">e.g. can build binutils in 30 minutes or so</span></div><div class="line" id="024555"><span class="nick" style="color:#2e2a4a"><a href="#024555" label="[02:45:55]">&lt;stikonas&gt;</a></span><span class="message">with gcc 12</span></div><div class="line" id="024605"><span class="nick" style="color:#2e2a4a"><a href="#024605" label="[02:46:05]">&lt;stikonas&gt;</a></span><span class="message">(for now not bootstrapped of course)</span></div><div class="line" id="072034"><span class="nick" style="color:#6d2462"><a href="#072034" label="[07:20:34]">&lt;janneke&gt;</a></span><span class="message">nektro: i'm sure you're aware that x86_64 can be bootstrapped perfectly fine using x86 initially</span></div><div class="line" id="073228"><span class="nick" style="color:#6d2462"><a href="#073228" label="[07:32:28]">&lt;janneke&gt;</a></span><span class="message">(which is also why we have been postponing x86_64 when we hit difficulties)</span></div><div class="line" id="073352"><span class="nick" style="color:#6d2462"><a href="#073352" label="[07:33:52]">&lt;janneke&gt;</a></span><span class="message">emilytrau: are you also splitting-up the bootstrappable-tcc build?</span></div><div class="line" id="073456"><span class="nick" style="color:#6b8072"><a href="#073456" label="[07:34:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; not at the moment but i can see how it's done in the bootstrap scripts. might have a whack at parsllelising that 😁</span></div><div class="line" id="073649"><span class="nick" style="color:#6d2462"><a href="#073649" label="[07:36:49]">&lt;janneke&gt;</a></span><span class="message">emilytrau: yeah it could speed-up building bootstrappable-tcc by an order of magnitude</span></div><div class="line" id="073656"><span class="nick" style="color:#6d2462"><a href="#073656" label="[07:36:56]">&lt;janneke&gt;</a></span><span class="message">great idea, that split-up!</span></div><div class="line" id="073717"><span class="nick" style="color:#6d2462"><a href="#073717" label="[07:37:17]">&lt;janneke&gt;</a></span><span class="message">(well, it's an ugly hack of course, but so much better than wasting time)</span></div><div class="line" id="073720"><span class="nick" style="color:#6d2462"><a href="#073720" label="[07:37:20]">&lt;janneke&gt;</a></span><span class="message">:)</span></div><div class="line" id="073720"><span class="nick" style="color:#6b8072"><a href="#073720" label="[07:37:20]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;emilytrau&gt; maybe guix can take advantage too 👀</span></div><div class="line" id="073740"><span class="nick" style="color:#6d2462"><a href="#073740" label="[07:37:40]">&lt;janneke&gt;</a></span><span class="message">ACTION would surely hope so</span></div><div class="line" id="074242"><span class="nick" style="color:#6d2462"><a href="#074242" label="[07:42:42]">&lt;janneke&gt;</a></span><span class="message">someone would need to find a way to translate that into guix :)</span></div><div class="line" id="113044"><span class="nick" style="color:#234e69"><a href="#113044" label="[11:30:44]">&lt;pabs3&gt;</a></span><span class="message">&quot;Defining open hardware&quot; <a rel="nofollow" href="https://lwn.net/SubscriberLink/945870/d8f247479651ba52/">https://lwn.net/SubscriberLink/945870/d8f247479651ba52/</a> </span></div><div class="line" id="113108"><span class="nick" style="color:#234e69"><a href="#113108" label="[11:31:08]">&lt;pabs3&gt;</a></span><span class="message">has some discussion of open hardware that requires proprietary software to edit the source or build etc</span></div><div class="line" id="115309"><span class="nick" style="color:#6c3d55"><a href="#115309" label="[11:53:09]">&lt;[exa]&gt;</a></span><span class="message">this would kinda imply that you need a fab with fully oss firmware and everything, right?</span></div><div class="line" id="115813"><span class="nick" style="color:#8dd3c7"><a href="#115813" label="[11:58:13]">&lt;muurkha&gt;</a></span><span class="message">a lot of OSHW is stuff like PCB layouts and 3-D printing designs, not semiconductor masks</span></div><div class="line" id="120202"><span class="nick" style="color:#8dd3c7"><a href="#120202" label="[12:02:02]">&lt;muurkha&gt;</a></span><span class="message">but fundamentally yeah as long as you can't 3-D print your semiconductor fab you aren't going to get the benefits of open source in hardware</span></div><div class="line" id="120234"><span class="nick" style="color:#6c3d55"><a href="#120234" label="[12:02:34]">&lt;[exa]&gt;</a></span><span class="message">long way to go tho.</span></div><div class="line" id="120757"><span class="nick" style="color:#8dd3c7"><a href="#120757" label="[12:07:57]">&lt;muurkha&gt;</a></span><span class="message">that's what we thought about computer vision 15 years ago before ImageNet came out</span></div><div class="line" id="133932"><span class="nick" style="color:#389600"><a href="#133932" label="[13:39:32]">&lt;oriansj&gt;</a></span><span class="message">[exa]: well yes, kinda but if people are willing to put in the work. We definitely give people the option to build their own everything but most likely fabbing stuff will continue to be a social activity as cooperation and specialization will continue to be essential.</span></div><div class="line" id="134100"><span class="nick" style="color:#389600"><a href="#134100" label="[13:41:00]">&lt;oriansj&gt;</a></span><span class="message">as if you print a plastic CPU, you'll likely be limited to 100Mhz but those with the ability to do silicon lithography could hit the 4+Ghz mark</span></div><div class="line" id="150903"><span class="nick" style="color:#389600"><a href="#150903" label="[15:09:03]">&lt;oriansj&gt;</a></span><span class="message">muurkha: <a rel="nofollow" href="https://tinytapeout.com/">https://tinytapeout.com/</a>  what do you say to us just creating some basic 64bit CPUs and getting into a new space of bootstrap?</span></div><div class="line" id="151909"><span class="nick" style="color:#389600"><a href="#151909" label="[15:19:09]">&lt;oriansj&gt;</a></span><span class="message">although the number of transistors per spot is a bit tight</span></div><div class="line" id="174326"><span class="nick" style="color:#8dd3c7"><a href="#174326" label="[17:43:26]">&lt;muurkha&gt;</a></span><span class="message">oriansj: you can't fit even an 8-bit CPU in one of their tiles; they hold about 256-512 gates.  and the chip doesn't have enough pins for 64-bit memory</span></div><div class="line" id="174523"><span class="nick" style="color:#389600"><a href="#174523" label="[17:45:23]">&lt;oriansj&gt;</a></span><span class="message">well SPI RAM chips are a thing...</span></div><div class="line" id="174559"><span class="nick" style="color:#389600"><a href="#174559" label="[17:45:59]">&lt;oriansj&gt;</a></span><span class="message">and I thought it was more like 1K gates per tile</span></div><div class="line" id="174807"><span class="nick" style="color:#8dd3c7"><a href="#174807" label="[17:48:07]">&lt;muurkha&gt;</a></span><span class="message">I think doing some kind of design would be very worthwhile, you can definitely do a CPU in 1000 gates</span></div><div class="line" id="174819"><span class="nick" style="color:#8dd3c7"><a href="#174819" label="[17:48:19]">&lt;muurkha&gt;</a></span><span class="message">and you can use more than one tile</span></div><div class="line" id="175230"><span class="nick" style="color:#8dd3c7"><a href="#175230" label="[17:52:30]">&lt;muurkha&gt;</a></span><span class="message">someone did do an &quot;8-bit processor&quot; <a rel="nofollow" href="https://tinytapeout.com/runs/tt04/102/">https://tinytapeout.com/runs/tt04/102/</a>  but I don't think it's powerful enough to run an assembler on <a rel="nofollow" href="https://github.com/kosmalex/tiny_processor">https://github.com/kosmalex/tiny_processor</a> </span></div><div class="line" id="181412"><span class="nick" style="color:#389600"><a href="#181412" label="[18:14:12]">&lt;oriansj&gt;</a></span><span class="message">well an 8bit PC does really put a hard limit on the assembler you can run but hex0 can definitely run in 256bytes code+data</span></div><div class="line" id="182440"><span class="nick" style="color:#389600"><a href="#182440" label="[18:24:40]">&lt;oriansj&gt;</a></span><span class="message">and the 15 8bit registers; well use those bits to make 7 16bit registers or 3 32bit registers and it would be more than enough for a good stack architecture</span></div><div class="line" id="183959"><span class="nick" style="color:#389600"><a href="#183959" label="[18:39:59]">&lt;oriansj&gt;</a></span><span class="message">The fixed 8 pins for the dip switch inputs and the 8 fixed pins for LED output and only 10 pins for general I/O. So 4 pins for SPI and 6 pins for expansion...</span></div><div class="line" id="184207"><span class="nick" style="color:#389600"><a href="#184207" label="[18:42:07]">&lt;oriansj&gt;</a></span><span class="message">It would have been so much nicer if they gave us all 26 pins of I/O to something we could plug into a breadboard and we could do the rest from there.</span></div><div class="line" id="184406"><span class="nick" style="color:#d9d9d9"><a href="#184406" label="[18:44:06]">&lt;notgull&gt;</a></span><span class="message">At what point would</span></div><div class="line" id="184437"><span class="nick" style="color:#d9d9d9"><a href="#184437" label="[18:44:37]">&lt;notgull&gt;</a></span><span class="message">the open hardware bootstrap chain begin? What would the seed be? Do we start at logic gates, or do we just assume that those are compromised and try to go deeper?</span></div><div class="line" id="185742"><span class="nick" style="color:#389600"><a href="#185742" label="[18:57:42]">&lt;oriansj&gt;</a></span><span class="message">notgull: we start with the work that seems the most fun to work on</span></div><div class="line" id="185803"><span class="nick" style="color:#389600"><a href="#185803" label="[18:58:03]">&lt;oriansj&gt;</a></span><span class="message">so if using premade gates and fpgas seems like fun to you, go for it</span></div><div class="line" id="185819"><span class="nick" style="color:#389600"><a href="#185819" label="[18:58:19]">&lt;oriansj&gt;</a></span><span class="message">if you want to make those gates and fpgas from individual transistors, more power to you</span></div><div class="line" id="185833"><span class="nick" style="color:#d9d9d9"><a href="#185833" label="[18:58:33]">&lt;notgull&gt;</a></span><span class="message">Okay then, I guess I'll start by smelting my own iron</span></div><div class="line" id="185844"><span class="nick" style="color:#389600"><a href="#185844" label="[18:58:44]">&lt;oriansj&gt;</a></span><span class="message">if you want to build those transistors, diodes and resistors from sand, sweet. love to read about it</span></div><div class="line" id="185904"><span class="nick" style="color:#389600"><a href="#185904" label="[18:59:04]">&lt;oriansj&gt;</a></span><span class="message">notgull: love to see your notes and progress ^_^</span></div><div class="line" id="185955"><span class="nick" style="color:#389600"><a href="#185955" label="[18:59:55]">&lt;oriansj&gt;</a></span><span class="message">the ultimate goal is full and complete understanding from nothing to modern Guix/ Linux distro of your choice</span></div><div class="line" id="190023"><span class="nick" style="color:#389600"><a href="#190023" label="[19:00:23]">&lt;oriansj&gt;</a></span><span class="message">(or *BSD or haiku or any other free as in freedom software distribution out there)</span></div><div class="line" id="190054"><span class="nick" style="color:#389600"><a href="#190054" label="[19:00:54]">&lt;oriansj&gt;</a></span><span class="message">who does the work, decides what work is to be done and how.</span></div><div class="line" id="190441"><span class="nick" style="color:#389600"><a href="#190441" label="[19:04:41]">&lt;oriansj&gt;</a></span><span class="message">my notes are rather limited: <a rel="nofollow" href="https://git.sr.ht/~oriansj/The_Encom_Project/tree/main/item/Manufacturing.org#L13">https://git.sr.ht/~oriansj/The_Encom_Project/tree/main/item/Manufacturing.org#L13</a>  <a rel="nofollow" href="https://git.sr.ht/~oriansj/The_Encom_Project/tree/main/item/Civilization%20notes.org#L55">https://git.sr.ht/~oriansj/The_Encom_Project/tree/main/item/Civilization%20notes.org#L55</a>  to basic mining, smelting, casting and machining</span></div><div class="line" id="190530"><span class="nick" style="color:#389600"><a href="#190530" label="[19:05:30]">&lt;oriansj&gt;</a></span><span class="message">on the topic of bootstrapping Iron and other metals</span></div><div class="line" id="191402"><span class="nick" style="color:#d9d9d9"><a href="#191402" label="[19:14:02]">&lt;notgull&gt;</a></span><span class="message">Ooo, neat</span></div><div class="line" id="191435"><span class="nick" style="color:#389600"><a href="#191435" label="[19:14:35]">&lt;oriansj&gt;</a></span><span class="message">They are in emacs org-mode for ease of reference (feel free to git clone if you find it interesting)</span></div><div class="line" id="191636"><span class="nick" style="color:#389600"><a href="#191636" label="[19:16:36]">&lt;oriansj&gt;</a></span><span class="message">muurkha: they also made a 12bit address CPU previously <a rel="nofollow" href="https://github.com/OneRNG/tt-cpu8">https://github.com/OneRNG/tt-cpu8</a> </span></div><div class="line" id="191743"><span class="nick" style="color:#389600"><a href="#191743" label="[19:17:43]">&lt;oriansj&gt;</a></span><span class="message">ooh and a pdp-8 <a rel="nofollow" href="https://github.com/MoonbaseOtago/tt03-pdp8">https://github.com/MoonbaseOtago/tt03-pdp8</a> </span></div><div class="line" id="192001"><span class="nick" style="color:#389600"><a href="#192001" label="[19:20:01]">&lt;oriansj&gt;</a></span><span class="message">a 16bit risc-v <a rel="nofollow" href="https://github.com/MoonbaseOtago/tt04-vc">https://github.com/MoonbaseOtago/tt04-vc</a> </span></div><div class="line" id="192111"><span class="nick" style="color:#389600"><a href="#192111" label="[19:21:11]">&lt;oriansj&gt;</a></span><span class="message">a 32bit risc-v <a rel="nofollow" href="https://github.com/MichaelBell/tt04-nanoV">https://github.com/MichaelBell/tt04-nanoV</a> </span></div><div class="line" id="192254"><span class="nick" style="color:#389600"><a href="#192254" label="[19:22:54]">&lt;oriansj&gt;</a></span><span class="message">128byte rom <a rel="nofollow" href="https://github.com/TinyTapeout/tt-chip-rom">https://github.com/TinyTapeout/tt-chip-rom</a> </span></div><div class="line" id="192508"><span class="nick" style="color:#389600"><a href="#192508" label="[19:25:08]">&lt;oriansj&gt;</a></span><span class="message">an fpga <a rel="nofollow" href="https://github.com/RiceShelley/tt04-grain-flex">https://github.com/RiceShelley/tt04-grain-flex</a>  and a simple RAM chip <a rel="nofollow" href="https://github.com/MCH-NI/tt04-Test">https://github.com/MCH-NI/tt04-Test</a> </span></div><div class="line" id="192705"><span class="nick" style="color:#389600"><a href="#192705" label="[19:27:05]">&lt;oriansj&gt;</a></span><span class="message">as all of the designs are on the same chip, in theory one could plug multiple copies of the same cards with different dip settings and have all of the functionality of a complete computer.</span></div><div class="line" id="193244"><span class="nick" style="color:#8dd3c7"><a href="#193244" label="[19:32:44]">&lt;muurkha&gt;</a></span><span class="message">oriansj: that's great, do those all fit into a single tile?</span></div><div class="line" id="193304"><span class="nick" style="color:#8dd3c7"><a href="#193304" label="[19:33:04]">&lt;muurkha&gt;</a></span><span class="message">the PDP-8 was one of the things I thought that would take about 1000 gates</span></div><div class="line" id="193312"><span class="nick" style="color:#8dd3c7"><a href="#193312" label="[19:33:12]">&lt;muurkha&gt;</a></span><span class="message">notgull: btw are you serious about the iron?</span></div><div class="line" id="193615"><span class="nick" style="color:#8dd3c7"><a href="#193615" label="[19:36:15]">&lt;muurkha&gt;</a></span><span class="message">RV32E is convenient enough to run a wide range of software, but the 32× slowdown (presumably due to being bit-serial?) in nanoV is probably tempting to optimize away</span></div><div class="line" id="193744"><span class="nick" style="color:#d9d9d9"><a href="#193744" label="[19:37:44]">&lt;notgull&gt;</a></span><span class="message">muurkha: nah I was joking</span></div><div class="line" id="201006"><span class="nick" style="color:#bc80bd"><a href="#201006" label="[20:10:06]">&lt;tsenko&gt;</a></span><span class="message">bonjour</span></div><div class="line" id="201103"><span class="nick" style="color:#6c3d55"><a href="#201103" label="[20:11:03]">&lt;[exa]&gt;</a></span><span class="message">o/</span></div><div class="line" id="201138"><span class="nick" style="color:#6c3d55"><a href="#201138" label="[20:11:38]">&lt;[exa]&gt;</a></span><span class="message">oriansj: 100Mhz plastic CPUs can be printed now???</span></div><div class="line" id="201141"><span class="nick" style="color:#6c3d55"><a href="#201141" label="[20:11:41]">&lt;[exa]&gt;</a></span><span class="message">ACTION interested</span></div><div class="line" id="201333"><span class="nick" style="color:#389600"><a href="#201333" label="[20:13:33]">&lt;oriansj&gt;</a></span><span class="message">[exa]: that is the current theoretical upper bound but a 4Mhz z80 has been plastic printed previously</span></div><div class="line" id="201658"><span class="nick" style="color:#6c3d55"><a href="#201658" label="[20:16:58]">&lt;[exa]&gt;</a></span><span class="message">does it have some other name that can be googled or so? (&quot;plastic printed chips&quot; gives me poker results :D )</span></div><div class="line" id="201710"><span class="nick" style="color:#6c3d55"><a href="#201710" label="[20:17:10]">&lt;[exa]&gt;</a></span><span class="message">I honestly never heard about doing tis so quite curious</span></div><div class="line" id="203255"><span class="nick" style="color:#389600"><a href="#203255" label="[20:32:55]">&lt;oriansj&gt;</a></span><span class="message">here is an article about a z80 printed on glass: <a rel="nofollow" href="https://web.archive.org/web/20030605161200/http://www.sharp.co.jp/corporate/news/021022.html">https://web.archive.org/web/20030605161200/http://www.sharp.co.jp/corporate/news/021022.html</a> </span></div><div class="line" id="203443"><span class="nick" style="color:#389600"><a href="#203443" label="[20:34:43]">&lt;oriansj&gt;</a></span><span class="message">another source: <a rel="nofollow" href="https://original.sharpmz.org/z80glass.htm">https://original.sharpmz.org/z80glass.htm</a> </span></div><div class="line" id="204135"><span class="nick" style="color:#6c3d55"><a href="#204135" label="[20:41:35]">&lt;[exa]&gt;</a></span><span class="message">wow cool</span></div><div class="line" id="204145"><span class="nick" style="color:#6c3d55"><a href="#204145" label="[20:41:45]">&lt;[exa]&gt;</a></span><span class="message">ACTION a happy sharp mz800 owner</span></div><div class="line" id="204233"><span class="nick" style="color:#389600"><a href="#204233" label="[20:42:33]">&lt;oriansj&gt;</a></span><span class="message">if you want fully plastic: <a rel="nofollow" href="https://spectrum.ieee.org/the-plastic-processor">https://spectrum.ieee.org/the-plastic-processor</a> </span></div><div class="line" id="204611"><span class="nick" style="color:#389600"><a href="#204611" label="[20:46:11]">&lt;oriansj&gt;</a></span><span class="message">(it was a 6502)</span></div><div class="line" id="204823"><span class="nick" style="color:#389600"><a href="#204823" label="[20:48:23]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.design-reuse-embedded.com/news/202202125/imec-details-flexible-6502-plastic-processor/">https://www.design-reuse-embedded.com/news/202202125/imec-details-flexible-6502-plastic-processor/</a> </span></div><div class="line" id="204935"><span class="nick" style="color:#389600"><a href="#204935" label="[20:49:35]">&lt;oriansj&gt;</a></span><span class="message">and there was the plastic arm chip <a rel="nofollow" href="https://web.archive.org/web/20211222161528/https://www.arm.com/blogs/blueprint/flexible-processing">https://web.archive.org/web/20211222161528/https://www.arm.com/blogs/blueprint/flexible-processing</a> </span></div><div class="line" id="205117"><span class="nick" style="color:#6c3d55"><a href="#205117" label="[20:51:17]">&lt;[exa]&gt;</a></span><span class="message">I need to read up on these things</span></div><div class="line" id="205140"><span class="nick" style="color:#389600"><a href="#205140" label="[20:51:40]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.nature.com/articles/s41586-021-03625-w">https://www.nature.com/articles/s41586-021-03625-w</a> </span></div><div class="line" id="205345"><span class="nick" style="color:#8dd3c7"><a href="#205345" label="[20:53:45]">&lt;muurkha&gt;</a></span><span class="message">notgull: too bad</span></div><div class="line" id="205430"><span class="nick" style="color:#8dd3c7"><a href="#205430" label="[20:54:30]">&lt;muurkha&gt;</a></span><span class="message">electronics has a huge speed advantage at any given scale</span></div><div class="line" id="205439"><span class="nick" style="color:#8dd3c7"><a href="#205439" label="[20:54:39]">&lt;muurkha&gt;</a></span><span class="message">over mechanical systems</span></div><div class="line" id="205507"><span class="nick" style="color:#8dd3c7"><a href="#205507" label="[20:55:07]">&lt;muurkha&gt;</a></span><span class="message">conceivably if you're limited by energy rather than by scale, the balance tips the other way, like Drexler's rod logic</span></div><div class="line" id="210621"><span class="nick" style="color:#8dd3c7"><a href="#210621" label="[21:06:21]">&lt;muurkha&gt;</a></span><span class="message">relatedly 19:05 &lt; hprmbridge&gt; nmz787&gt; libresilicon docs seem pretty decent</span></div><div class="line" id="210718"><span class="nick" style="color:#8dd3c7"><a href="#210718" label="[21:07:18]">&lt;muurkha&gt;</a></span><span class="message">the thing about these glass and plastic circuits is that they're competing against things like <a rel="nofollow" href="https://www.lcsc.com/product-detail/Microcontroller-Units-MCUs-MPUs-SOCs_PADAUK-Tech-PMS150C-U06_C168658.html">https://www.lcsc.com/product-detail/Microcontroller-Units-MCUs-MPUs-SOCs_PADAUK-Tech-PMS150C-U06_C168658.html</a> </span></div><div class="line" id="210737"><span class="nick" style="color:#8dd3c7"><a href="#210737" label="[21:07:37]">&lt;muurkha&gt;</a></span><span class="message">which costs 2.4¢</span></div><div class="line" id="210815"><span class="nick" style="color:#8dd3c7"><a href="#210815" label="[21:08:15]">&lt;muurkha&gt;</a></span><span class="message">and runs at 8MHz at one instruction per cycle IIRC</span></div><div class="line" id="210859"><span class="nick" style="color:#8dd3c7"><a href="#210859" label="[21:08:59]">&lt;muurkha&gt;</a></span><span class="message">a 4MHz Z80 is more like 5 cycles per instruction, so it's an order of magnitude slower.  which still is fast enough for some applications, of course</span></div><div class="line" id="211032"><span class="nick" style="color:#8dd3c7"><a href="#211032" label="[21:10:32]">&lt;muurkha&gt;</a></span><span class="message">but when you're talking about printing your processor on plastic, if you aren't concerned about hardware backdoors!, this is kind of the market you're competing in</span></div><div class="line" id="211225"><span class="nick" style="color:#8dd3c7"><a href="#211225" label="[21:12:25]">&lt;muurkha&gt;</a></span><span class="message">it's hard to imagine what kind of product can tolerate a big sheet of plastic (and a battery!) but not a SOT23</span></div><div class="line" id="223756"><span class="nick" style="color:#389600"><a href="#223756" label="[22:37:56]">&lt;oriansj&gt;</a></span><span class="message">muurkha: yeah modern micro-asics are crazy powerful and dirt cheap.</span></div><div class="line" id="234713"><span class="nick" style="color:#bc80bd"><a href="#234713" label="[23:47:13]">&lt;tsenko&gt;</a></span><span class="message">zop</span></div><div class="line" id="234717"><span class="nick" style="color:#bc80bd"><a href="#234717" label="[23:47:17]">&lt;tsenko&gt;</a></span><span class="message">woops</span></div><br /></div></body></html>