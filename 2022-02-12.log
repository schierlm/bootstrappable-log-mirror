<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-02-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="060511"><span class="nick" style="color:#8dd3c7"><a href="#060511" label="[06:05:11]">&lt;fossy&gt;</a></span><span class="message">today's learning</span></div><div class="line" id="060524"><span class="nick" style="color:#8dd3c7"><a href="#060524" label="[06:05:24]">&lt;fossy&gt;</a></span><span class="message">find -exec does not error if any of the execd commands error</span></div><div class="line" id="060528"><span class="nick" style="color:#8dd3c7"><a href="#060528" label="[06:05:28]">&lt;fossy&gt;</a></span><span class="message">which is real great (not)</span></div><div class="line" id="083905"><span class="nick" style="color:#2e2a4a"><a href="#083905" label="[08:39:05]">&lt;nimaje&gt;</a></span><span class="message">how would it know if the filter errored or if it simply returned false?</span></div><div class="line" id="090749"><span class="nick" style="color:#6b8072"><a href="#090749" label="[09:07:49]">&lt;oriansj&gt;</a></span><span class="message">fossy: it is almost as if planning for robust system state was not a design concern when it was written.</span></div><div class="line" id="111108"><span class="nick" style="color:#80b1d3"><a href="#111108" label="[11:11:08]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: use xargs?</span></div><div class="line" id="111408"><span class="nick" style="color:#80b1d3"><a href="#111408" label="[11:14:08]">&lt;stikonas[m]&gt;</a></span><span class="message">find -print0 | xargs should return non zero code on failed commands</span></div><div class="line" id="125631"><span class="nick" style="color:#6d2462"><a href="#125631" label="[12:56:31]">&lt;stikonas&gt;</a></span><span class="message">fossy: how are you testing your live-bootstrap branch? I just keep getting checksum mismatch errors. So am I missing something or is something non-reproducible</span></div><div class="line" id="155231"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="184120"><span class="nick" style="color:#234e69"><a href="#184120" label="[18:41:20]">&lt;muurkha&gt;</a></span><span class="message">xargs -0</span></div><div class="line" id="215148"><span class="nick" style="color:#6c3d55"><a href="#215148" label="[21:51:48]">&lt;mihi&gt;</a></span><span class="message">unmatched-paren: Pascal supports conformant arrays (at least most dialects do), which effectively pass a pointer to an array and its bounds as separate parameters. You cannot use those when allocating arrays on the stack, but you can use them with POINTER TO ... as well as with VAR parameters to PROCEDURES.</span></div><div class="line" id="215225"><span class="nick" style="color:#6c3d55"><a href="#215225" label="[21:52:25]">&lt;mihi&gt;</a></span><span class="message">So you can have a PROCEDURE DoSomethingWith(VAR list: ARRAY [min..max] OF INTEGER); which effectively gets three parameters passed, list, min and max.</span></div><div class="line" id="215325"><span class="nick" style="color:#6c3d55"><a href="#215325" label="[21:53:25]">&lt;mihi&gt;</a></span><span class="message">In Oberon, conformant arrays were replaced by open arrays (VAR list: ARRAY OF INTEGER) which still pass the bounds as parameters but do not make them accessible as parameters.</span></div><br /></div></body></html>