<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-03-05.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="010527"><span class="nick" style="color:#8dd3c7"><a href="#010527" label="[01:05:27]">&lt;fossy&gt;</a></span><span class="message">pder: stikonas I agree we should do the suggestion of stikonas a couple  of minutes ago</span></div><div class="line" id="010553"><span class="nick" style="color:#2e2a4a"><a href="#010553" label="[01:05:53]">&lt;stikonas&gt;</a></span><span class="message">exec bash run2.sh; then echo Bootstrapping complete and exec bahs ?</span></div><div class="line" id="010604"><span class="nick" style="color:#6b8072"><a href="#010604" label="[01:06:04]">&lt;ullbeking&gt;</a></span><span class="message">Hey all, I've been out of the loop due to a job application (it's turned into something gone sideways).</span></div><div class="line" id="010620"><span class="nick" style="color:#6b8072"><a href="#010620" label="[01:06:20]">&lt;ullbeking&gt;</a></span><span class="message">Anyway, I was just popping in to say hi</span></div><div class="line" id="010622"><span class="nick" style="color:#2e2a4a"><a href="#010622" label="[01:06:22]">&lt;stikonas&gt;</a></span><span class="message">ullbeking: welcome back</span></div><div class="line" id="010631"><span class="nick" style="color:#6b8072"><a href="#010631" label="[01:06:31]">&lt;ullbeking&gt;</a></span><span class="message">Thank you stikonas</span></div><div class="line" id="010651"><span class="nick" style="color:#6b8072"><a href="#010651" label="[01:06:51]">&lt;ullbeking&gt;</a></span><span class="message">I noticed mention of scheme on the projects page</span></div><div class="line" id="010742"><span class="nick" style="color:#2e2a4a"><a href="#010742" label="[01:07:42]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="http://bootstrappable.org/projects.html">http://bootstrappable.org/projects.html</a>  ?</span></div><div class="line" id="010743"><span class="nick" style="color:#6b8072"><a href="#010743" label="[01:07:43]">&lt;ullbeking&gt;</a></span><span class="message">I wonder what you think of R7 large?  I'm still trying to figure it out</span></div><div class="line" id="010829"><span class="nick" style="color:#6b8072"><a href="#010829" label="[01:08:29]">&lt;ullbeking&gt;</a></span><span class="message"> <a rel="nofollow" href="http://bootstrappable.org/projects/mes.html">http://bootstrappable.org/projects/mes.html</a> </span></div><div class="line" id="010928"><span class="nick" style="color:#6b8072"><a href="#010928" label="[01:09:28]">&lt;ullbeking&gt;</a></span><span class="message">I just posted sth to emacs-devel as I'm trying to create a minimal gnu Emacs</span></div><div class="line" id="010952"><span class="nick" style="color:#6b8072"><a href="#010952" label="[01:09:52]">&lt;ullbeking&gt;</a></span><span class="message">Scheme may end up involved but idk</span></div><div class="line" id="010952"><span class="nick" style="color:#2e2a4a"><a href="#010952" label="[01:09:52]">&lt;stikonas&gt;</a></span><span class="message">not idea about scheme and R7... Somebody else might know better...</span></div><div class="line" id="011011"><span class="nick" style="color:#6b8072"><a href="#011011" label="[01:10:11]">&lt;ullbeking&gt;</a></span><span class="message">It was just a curiosity</span></div><div class="line" id="011012"><span class="nick" style="color:#2e2a4a"><a href="#011012" label="[01:10:12]">&lt;stikonas&gt;</a></span><span class="message">well, scheme was involved in ocaml bootstrap</span></div><div class="line" id="011032"><span class="nick" style="color:#6b8072"><a href="#011032" label="[01:10:32]">&lt;ullbeking&gt;</a></span><span class="message">My initial interest here was C++</span></div><div class="line" id="011053"><span class="nick" style="color:#6b8072"><a href="#011053" label="[01:10:53]">&lt;ullbeking&gt;</a></span><span class="message">I need to revise my notes</span></div><div class="line" id="011057"><span class="nick" style="color:#2e2a4a"><a href="#011057" label="[01:10:57]">&lt;stikonas&gt;</a></span><span class="message">using C++ to bootstrap something?</span></div><div class="line" id="011137"><span class="nick" style="color:#6b8072"><a href="#011137" label="[01:11:37]">&lt;ullbeking&gt;</a></span><span class="message">it was more of an inspiration at the time</span></div><div class="line" id="011209"><span class="nick" style="color:#6b8072"><a href="#011209" label="[01:12:09]">&lt;ullbeking&gt;</a></span><span class="message">but in any case i am focusing on improving my c++ yes</span></div><div class="line" id="011250"><span class="nick" style="color:#8dd3c7"><a href="#011250" label="[01:12:50]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; exec bash run2.sh; then echo Bootstrapping complete and exec bahs ?</span></div><div class="line" id="011253"><span class="nick" style="color:#8dd3c7"><a href="#011253" label="[01:12:53]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="011302"><span class="nick" style="color:#8dd3c7"><a href="#011302" label="[01:13:02]">&lt;fossy&gt;</a></span><span class="message">the echo in run2.sh obvs</span></div><div class="line" id="011305"><span class="nick" style="color:#6b8072"><a href="#011305" label="[01:13:05]">&lt;ullbeking&gt;</a></span><span class="message">i was introduced to some interesting and simple bootstrapping projects, i need to look back over my logs</span></div><div class="line" id="011503"><span class="nick">***</span><span class="message notice">xwvvvvwx- is now known as xwvvvvwx</span></div><div class="line" id="011514"><span class="nick" style="color:#80b1d3"><a href="#011514" label="[01:15:14]">&lt;OriansJ`&gt;</a></span><span class="message">ullbeking: well r7rs large it an attempt to provide a proper standard for scheme covering the sorts of things needed in real large programs. Much akin to the Common Lisp Standardization effort.</span></div><div class="line" id="011545"><span class="nick" style="color:#6b8072"><a href="#011545" label="[01:15:45]">&lt;ullbeking&gt;</a></span><span class="message">OriansJ`: are you familiar with it?</span></div><div class="line" id="011642"><span class="nick" style="color:#80b1d3"><a href="#011642" label="[01:16:42]">&lt;OriansJ`&gt;</a></span><span class="message">In some ways it is flawed (personal perspective) but in other ways it is potentially a path forward for Scheme to allow it to become something more than just a language where nothing serious you write can be assumed to work.</span></div><div class="line" id="011704"><span class="nick" style="color:#80b1d3"><a href="#011704" label="[01:17:04]">&lt;OriansJ`&gt;</a></span><span class="message">ullbeking: from an implementation standpoint only.</span></div><div class="line" id="011802"><span class="nick" style="color:#6b8072"><a href="#011802" label="[01:18:02]">&lt;ullbeking&gt;</a></span><span class="message">OriansJ`: you have implemented some of R7?</span></div><div class="line" id="011815"><span class="nick" style="color:#6b8072"><a href="#011815" label="[01:18:15]">&lt;ullbeking&gt;</a></span><span class="message">do you think it is comprehensive enough?</span></div><div class="line" id="011830"><span class="nick" style="color:#6b8072"><a href="#011830" label="[01:18:30]">&lt;ullbeking&gt;</a></span><span class="message">i'm talking of large, obvs</span></div><div class="line" id="011922"><span class="nick" style="color:#80b1d3"><a href="#011922" label="[01:19:22]">&lt;OriansJ`&gt;</a></span><span class="message">ullbeking: it is a good second approximation of the features that scheme needs. Fixing several of the more serious problems from r6rs</span></div><div class="line" id="012042"><span class="nick" style="color:#6d2462"><a href="#012042" label="[01:20:42]">*</a></span><span class="message">ullbeking is looking for his notes from previuos detailed discussion here</span></div><div class="line" id="012414"><span class="nick" style="color:#2e2a4a"><a href="#012414" label="[01:24:14]">&lt;stikonas&gt;</a></span><span class="message">fossy: do you think  using this file is acceptable? <a rel="nofollow" href="https://github.com/Perl/perl5/blob/perl-5.6.2/Porting/config.sh">https://github.com/Perl/perl5/blob/perl-5.6.2/Porting/config.sh</a> </span></div><div class="line" id="012451"><span class="nick" style="color:#2e2a4a"><a href="#012451" label="[01:24:51]">&lt;stikonas&gt;</a></span><span class="message">although, maybe I should try to avoid if possible...</span></div><div class="line" id="012951"><span class="nick" style="color:#8dd3c7"><a href="#012951" label="[01:29:51]">&lt;fossy&gt;</a></span><span class="message">no</span></div><div class="line" id="013001"><span class="nick" style="color:#8dd3c7"><a href="#013001" label="[01:30:01]">&lt;fossy&gt;</a></span><span class="message">Not really</span></div><div class="line" id="013039"><span class="nick" style="color:#8dd3c7"><a href="#013039" label="[01:30:39]">&lt;fossy&gt;</a></span><span class="message">Can we recreate it using configure</span></div><div class="line" id="013122"><span class="nick" style="color:#2e2a4a"><a href="#013122" label="[01:31:22]">&lt;stikonas&gt;</a></span><span class="message">we dpmt</span></div><div class="line" id="013125"><span class="nick" style="color:#2e2a4a"><a href="#013125" label="[01:31:25]">&lt;stikonas&gt;</a></span><span class="message">we don't have it yet...</span></div><div class="line" id="013133"><span class="nick" style="color:#2e2a4a"><a href="#013133" label="[01:31:33]">&lt;stikonas&gt;</a></span><span class="message">well, let me see if I can do something...</span></div><div class="line" id="013406"><span class="nick" style="color:#2e2a4a"><a href="#013406" label="[01:34:06]">&lt;stikonas&gt;</a></span><span class="message">fossy: Configure needs recreation first and it's not autotools...</span></div><div class="line" id="013416"><span class="nick" style="color:#2e2a4a"><a href="#013416" label="[01:34:16]">&lt;stikonas&gt;</a></span><span class="message">it's that perl's metaconfig</span></div><div class="line" id="013921"><span class="nick" style="color:#2e2a4a"><a href="#013921" label="[01:39:21]">&lt;stikonas&gt;</a></span><span class="message">fossy: what about <a rel="nofollow" href="https://github.com/Perl/perl5/blob/perl-5.6.2/epoc/config.sh">https://github.com/Perl/perl5/blob/perl-5.6.2/epoc/config.sh</a>  It says this file is manually maintained and not created by Configure</span></div><div class="line" id="014100"><span class="nick" style="color:#2e2a4a"><a href="#014100" label="[01:41:00]">&lt;stikonas&gt;</a></span><span class="message">although, we'll see how useful it is...</span></div><div class="line" id="014448"><span class="nick" style="color:#2e2a4a"><a href="#014448" label="[01:44:48]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe I can just use empty file...</span></div><div class="line" id="030912"><span class="nick">***</span><span class="message notice">puckipedia is now known as puck</span></div><div class="line" id="064059"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="065051"><span class="nick">***</span><span class="message notice">janneke_ is now known as janneke</span></div><div class="line" id="082443"><span class="nick" style="color:#8dd3c7"><a href="#082443" label="[08:24:43]">&lt;fossy&gt;</a></span><span class="message">i am going to assume that the bootstrap kernel is newer than 4.20 just for now</span></div><div class="line" id="082458"><span class="nick" style="color:#8dd3c7"><a href="#082458" label="[08:24:58]">&lt;fossy&gt;</a></span><span class="message">wait i dont need to know that</span></div><div class="line" id="082500"><span class="nick" style="color:#8dd3c7"><a href="#082500" label="[08:25:00]">&lt;fossy&gt;</a></span><span class="message">nvm</span></div><div class="line" id="093226"><span class="nick" style="color:#234e69"><a href="#093226" label="[09:32:26]">&lt;Hagfish&gt;</a></span><span class="message">erryday</span></div><div class="line" id="122828"><span class="nick" style="color:#2e2a4a"><a href="#122828" label="[12:28:28]">&lt;stikonas&gt;</a></span><span class="message">pder: can you also update README.rst? just that one paragraph where it mentions that we'll soon have interactive bash.</span></div><div class="line" id="122834"><span class="nick" style="color:#2e2a4a"><a href="#122834" label="[12:28:34]">&lt;stikonas&gt;</a></span><span class="message">either delete it or write something else</span></div><div class="line" id="122845"><span class="nick" style="color:#2e2a4a"><a href="#122845" label="[12:28:45]">&lt;stikonas&gt;</a></span><span class="message">(it's point number 6)</span></div><div class="line" id="151314"><span class="nick" style="color:#6c3d55"><a href="#151314" label="[15:13:14]">&lt;pder&gt;</a></span><span class="message">stikonas: I pushed by bash branch with the changes requested</span></div><div class="line" id="152344"><span class="nick" style="color:#2e2a4a"><a href="#152344" label="[15:23:44]">&lt;stikonas&gt;</a></span><span class="message">pder: I flagged a couple of more changes, unless you pushed after that</span></div><div class="line" id="152442"><span class="nick" style="color:#2e2a4a"><a href="#152442" label="[15:24:42]">&lt;stikonas&gt;</a></span><span class="message">oh I see, you pushed 12 minutes ago</span></div><div class="line" id="152527"><span class="nick" style="color:#2e2a4a"><a href="#152527" label="[15:25:27]">&lt;stikonas&gt;</a></span><span class="message">pder: looks good. I'll merge later in the evening (in a few hours)</span></div><div class="line" id="153102"><span class="nick" style="color:#2e2a4a"><a href="#153102" label="[15:31:02]">&lt;stikonas&gt;</a></span><span class="message">at some point it would be good to create dot dependency graph...</span></div><div class="line" id="155800"><span class="nick" style="color:#2e2a4a"><a href="#155800" label="[15:58:00]">&lt;stikonas&gt;</a></span><span class="message">pder: maybe you can do &quot;fake&quot; rebase and push to retrigger CI?</span></div><div class="line" id="155823"><span class="nick" style="color:#2e2a4a"><a href="#155823" label="[15:58:23]">&lt;stikonas&gt;</a></span><span class="message">something like &quot;git commit --amend&quot; I think will do</span></div><div class="line" id="155834"><span class="nick" style="color:#2e2a4a"><a href="#155834" label="[15:58:34]">&lt;stikonas&gt;</a></span><span class="message">somehow it failed</span></div><div class="line" id="155841"><span class="nick" style="color:#6c3d55"><a href="#155841" label="[15:58:41]">&lt;pder&gt;</a></span><span class="message">hmm, I did that earlier.  Ill try again</span></div><div class="line" id="155927"><span class="nick" style="color:#6c3d55"><a href="#155927" label="[15:59:27]">&lt;pder&gt;</a></span><span class="message">force pushed again</span></div><div class="line" id="163002"><span class="nick" style="color:#6c3d55"><a href="#163002" label="[16:30:02]">&lt;pder&gt;</a></span><span class="message">stikonas: It might be nice to set a prompt for bash, but I think we need env from coreutils</span></div><div class="line" id="163024"><span class="nick" style="color:#6c3d55"><a href="#163024" label="[16:30:24]">&lt;pder&gt;</a></span><span class="message">something like exec env PS1=&quot;\w # &quot; bash</span></div><div class="line" id="163331"><span class="nick" style="color:#2e2a4a"><a href="#163331" label="[16:33:31]">&lt;stikonas&gt;</a></span><span class="message">yeah, prompt and maybe PATH...</span></div><div class="line" id="163414"><span class="nick" style="color:#2e2a4a"><a href="#163414" label="[16:34:14]">&lt;stikonas&gt;</a></span><span class="message">pder: should be possible to build now with musl</span></div><div class="line" id="163423"><span class="nick" style="color:#2e2a4a"><a href="#163423" label="[16:34:23]">&lt;stikonas&gt;</a></span><span class="message">env didn't build with mes</span></div><div class="line" id="163449"><span class="nick" style="color:#2e2a4a"><a href="#163449" label="[16:34:49]">&lt;stikonas&gt;</a></span><span class="message">alternatively, just wait until I'm done with perl and then let's build coreutils 6 (or newer properly)</span></div><div class="line" id="164059"><span class="nick" style="color:#2e2a4a"><a href="#164059" label="[16:40:59]">&lt;stikonas&gt;</a></span><span class="message">pder: does ir read from bashrc?</span></div><div class="line" id="164105"><span class="nick" style="color:#2e2a4a"><a href="#164105" label="[16:41:05]">&lt;stikonas&gt;</a></span><span class="message">maybe can just create a static file</span></div><div class="line" id="164114"><span class="nick" style="color:#2e2a4a"><a href="#164114" label="[16:41:14]">&lt;stikonas&gt;</a></span><span class="message">I guess /root/.bashrc</span></div><div class="line" id="164143"><span class="nick" style="color:#6c3d55"><a href="#164143" label="[16:41:43]">&lt;pder&gt;</a></span><span class="message">that might work</span></div><div class="line" id="164247"><span class="nick" style="color:#2e2a4a"><a href="#164247" label="[16:42:47]">&lt;stikonas&gt;</a></span><span class="message">probably PATH should be /after/bin:/bin</span></div><div class="line" id="165300"><span class="nick" style="color:#2e2a4a"><a href="#165300" label="[16:53:00]">&lt;stikonas&gt;</a></span><span class="message">pder: we might also need hostname later...</span></div><div class="line" id="165312"><span class="nick" style="color:#2e2a4a"><a href="#165312" label="[16:53:12]">&lt;stikonas&gt;</a></span><span class="message">although, again, maybe just rebuild coreutils with autotools...</span></div><div class="line" id="165330"><span class="nick" style="color:#2e2a4a"><a href="#165330" label="[16:53:30]">&lt;stikonas&gt;</a></span><span class="message">I'll try to work out newer autotools over this weekend</span></div><div class="line" id="173606"><span class="nick" style="color:#2e2a4a"><a href="#173606" label="[17:36:06]">&lt;stikonas&gt;</a></span><span class="message">pder: hmm, so you were right, CI indeed fails with exec bash :(</span></div><div class="line" id="173725"><span class="nick" style="color:#2e2a4a"><a href="#173725" label="[17:37:25]">&lt;stikonas&gt;</a></span><span class="message">oh, probably because it also scans for</span></div><div class="line" id="173732"><span class="nick" style="color:#2e2a4a"><a href="#173732" label="[17:37:32]">&lt;stikonas&gt;</a></span><span class="message">expect -exact {not syncing: Attempted to kill init}</span></div><div class="line" id="173803"><span class="nick" style="color:#2e2a4a"><a href="#173803" label="[17:38:03]">&lt;stikonas&gt;</a></span><span class="message">and only then looks for Bootstrapping complete to decide if it's fail or pass</span></div><div class="line" id="174629"><span class="nick" style="color:#6c3d55"><a href="#174629" label="[17:46:29]">&lt;pder&gt;</a></span><span class="message">I was looking at the gawk error when running autoconf-2.52 so I tried a newer gawk and the error goes away.  gawk-3.1.7</span></div><div class="line" id="174651"><span class="nick" style="color:#6c3d55"><a href="#174651" label="[17:46:51]">&lt;pder&gt;</a></span><span class="message">Unfortunately autoconf-2.52 doesnt work with this newer gawk though</span></div><div class="line" id="175709"><span class="nick" style="color:#2e2a4a"><a href="#175709" label="[17:57:09]">&lt;stikonas&gt;</a></span><span class="message">pder: well, let's wait for perl the4n</span></div><div class="line" id="175716"><span class="nick" style="color:#2e2a4a"><a href="#175716" label="[17:57:16]">&lt;stikonas&gt;</a></span><span class="message">I might be able to get modules running</span></div><div class="line" id="175727"><span class="nick" style="color:#2e2a4a"><a href="#175727" label="[17:57:27]">&lt;stikonas&gt;</a></span><span class="message">pder: can you try to add conditionals to expect script?</span></div><div class="line" id="175811"><span class="nick" style="color:#2e2a4a"><a href="#175811" label="[17:58:11]">&lt;stikonas&gt;</a></span><span class="message">so that both &quot;not syncing: Attempted to kill init&quot; and &quot;Bootstrapping complete&quot; are accepted</span></div><div class="line" id="191814"><span class="nick" style="color:#6c3d55"><a href="#191814" label="[19:18:14]">&lt;pder&gt;</a></span><span class="message">I'll have some time later tonight to look at that</span></div><div class="line" id="194821"><span class="nick" style="color:#234e69"><a href="#194821" label="[19:48:21]">&lt;Hagfish&gt;</a></span><span class="message"> <a rel="nofollow" href="https://news.ycombinator.com/item?id=26358767">https://news.ycombinator.com/item?id=26358767</a>  an annoyingly simple example of a successful backdoor (in a cryptocurrency smart contract)</span></div><div class="line" id="195009"><span class="nick" style="color:#234e69"><a href="#195009" label="[19:50:09]">&lt;Hagfish&gt;</a></span><span class="message">maybe linters need a check which complains about easily confusable variable/function names, or similar long hex strings appearing in the code</span></div><div class="line" id="200505"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado</span></div><div class="line" id="210416"><span class="nick" style="color:#234e69"><a href="#210416" label="[21:04:16]">&lt;Hagfish&gt;</a></span><span class="message">&quot;We rebuild tcc against new musl and without a patch to ignore duplicate symbols.&quot;</span></div><div class="line" id="210418"><span class="nick" style="color:#234e69"><a href="#210418" label="[21:04:18]">&lt;Hagfish&gt;</a></span><span class="message">that's a good sign</span></div><div class="line" id="210545"><span class="nick" style="color:#234e69"><a href="#210545" label="[21:05:45]">&lt;Hagfish&gt;</a></span><span class="message">the only thing &quot;abnormal&quot; about it is, of course, that most gnu/linux software assumes gcc/glibc rather than tcc/musl</span></div><div class="line" id="210624"><span class="nick" style="color:#234e69"><a href="#210624" label="[21:06:24]">&lt;Hagfish&gt;</a></span><span class="message">it does feel like the impossible steps have been done, though, and now it's just the &quot;paperwork&quot; of building gcc on tcc</span></div><div class="line" id="210652"><span class="nick" style="color:#234e69"><a href="#210652" label="[21:06:52]">&lt;Hagfish&gt;</a></span><span class="message">also it's interesting that the process has as many steps as the US has had presidencies :)</span></div><div class="line" id="210845"><span class="nick" style="color:#6c3d55"><a href="#210845" label="[21:08:45]">&lt;pder&gt;</a></span><span class="message">Hagfish: those patches against musl and tcc regarding symbols were really just to workaround some deficiencies with &quot;tcc -ar&quot; vs binutils ar, so a detour was needed to build all the dependencies of binutils and finally binutils itself before having a proper tcc musl toolchain</span></div><div class="line" id="211335"><span class="nick" style="color:#6c3d55"><a href="#211335" label="[21:13:35]">&lt;pder&gt;</a></span><span class="message">If tcc -ar were fixed, it would eliminate some steps and workarounds</span></div><div class="line" id="212110"><span class="nick" style="color:#234e69"><a href="#212110" label="[21:21:10]">&lt;Hagfish&gt;</a></span><span class="message">it's good to litter the bootstrapping trail with breadcrumbs that can attract contributions from other skilled developers who later see this work and wish they had been part of it :)</span></div><div class="line" id="214549"><span class="nick" style="color:#8dd3c7"><a href="#214549" label="[21:45:49]">&lt;fossy&gt;</a></span><span class="message">stikonas: pder in all likelihood you can just kill on bootstrapping complete</span></div><div class="line" id="214724"><span class="nick" style="color:#2e2a4a"><a href="#214724" label="[21:47:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: wouldn't that fail if bootstrapping fails with some error?</span></div><div class="line" id="214738"><span class="nick" style="color:#2e2a4a"><a href="#214738" label="[21:47:38]">&lt;stikonas&gt;</a></span><span class="message">qemu will keep running and we'll have to wait till timeout</span></div><div class="line" id="214753"><span class="nick" style="color:#8dd3c7"><a href="#214753" label="[21:47:53]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh yeah good point</span></div><div class="line" id="214802"><span class="nick" style="color:#8dd3c7"><a href="#214802" label="[21:48:02]">&lt;fossy&gt;</a></span><span class="message">yeah, youre right, kill on either</span></div><div class="line" id="214807"><span class="nick" style="color:#2e2a4a"><a href="#214807" label="[21:48:07]">&lt;stikonas&gt;</a></span><span class="message">I think we need expect {</span></div><div class="line" id="214807"><span class="nick" style="color:#8dd3c7"><a href="#214807" label="[21:48:07]">&lt;fossy&gt;</a></span><span class="message">not sure how to do that</span></div><div class="line" id="214812"><span class="nick" style="color:#8dd3c7"><a href="#214812" label="[21:48:12]">&lt;fossy&gt;</a></span><span class="message">but I can look in a sec</span></div><div class="line" id="214831"><span class="nick" style="color:#2e2a4a"><a href="#214831" label="[21:48:31]">&lt;stikonas&gt;</a></span><span class="message">expect { &quot;option1&quot; {} ; &quot;optiom2&quot; {}}</span></div><div class="line" id="222434"><span class="nick" style="color:#2e2a4a"><a href="#222434" label="[22:24:34]">&lt;stikonas&gt;</a></span><span class="message">pder: actually, could it be that tcc -ar was broken because it was built with mes?</span></div><div class="line" id="222501"><span class="nick" style="color:#2e2a4a"><a href="#222501" label="[22:25:01]">&lt;stikonas&gt;</a></span><span class="message">i.e. maybe the one after musl rebuild was working, I don't think we tested that</span></div><div class="line" id="222611"><span class="nick" style="color:#2e2a4a"><a href="#222611" label="[22:26:11]">&lt;stikonas&gt;</a></span><span class="message">but anyway, it's good to rebuild with binutils too, because then we can use gnu assembler too</span></div><div class="line" id="222627"><span class="nick" style="color:#2e2a4a"><a href="#222627" label="[22:26:27]">&lt;stikonas&gt;</a></span><span class="message">which copes much better with some assembly files that musl ships</span></div><div class="line" id="223011"><span class="nick" style="color:#8dd3c7"><a href="#223011" label="[22:30:11]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'm not sure that tcc has an option to not assemble</span></div><div class="line" id="223326"><span class="nick" style="color:#2e2a4a"><a href="#223326" label="[22:33:26]">&lt;stikonas&gt;</a></span><span class="message">fossy: those are standalone assembly files</span></div><div class="line" id="223342"><span class="nick" style="color:#2e2a4a"><a href="#223342" label="[22:33:42]">&lt;stikonas&gt;</a></span><span class="message">assembly that tcc produces is fine, tcc can cope with its own assembly</span></div><div class="line" id="223354"><span class="nick" style="color:#2e2a4a"><a href="#223354" label="[22:33:54]">&lt;stikonas&gt;</a></span><span class="message">musl has a bit of handwritten assembly (as I guess all c libraries(</span></div><div class="line" id="223431"><span class="nick" style="color:#8dd3c7"><a href="#223431" label="[22:34:31]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh, sure</span></div><div class="line" id="223452"><span class="nick" style="color:#2e2a4a"><a href="#223452" label="[22:34:52]">&lt;stikonas&gt;</a></span><span class="message">even then we still need a few patches</span></div><div class="line" id="223506"><span class="nick" style="color:#2e2a4a"><a href="#223506" label="[22:35:06]">&lt;stikonas&gt;</a></span><span class="message">but fewer</span></div><div class="line" id="223525"><span class="nick" style="color:#8dd3c7"><a href="#223525" label="[22:35:25]">&lt;fossy&gt;</a></span><span class="message">tcc's standalone assembly support is pretty poor</span></div><div class="line" id="223540"><span class="nick" style="color:#2e2a4a"><a href="#223540" label="[22:35:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, so it was choking on a few opcodes</span></div><div class="line" id="223550"><span class="nick" style="color:#8dd3c7"><a href="#223550" label="[22:35:50]">&lt;fossy&gt;</a></span><span class="message">yeah it does that</span></div><div class="line" id="223601"><span class="nick" style="color:#2e2a4a"><a href="#223601" label="[22:36:01]">&lt;stikonas&gt;</a></span><span class="message">I rewrote one properly</span></div><div class="line" id="223614"><span class="nick" style="color:#2e2a4a"><a href="#223614" label="[22:36:14]">&lt;stikonas&gt;</a></span><span class="message">and the others I just removed, something to do with floating exceptions</span></div><div class="line" id="223626"><span class="nick" style="color:#2e2a4a"><a href="#223626" label="[22:36:26]">&lt;stikonas&gt;</a></span><span class="message">(hoping that we wouldn't use that code)</span></div><div class="line" id="223641"><span class="nick" style="color:#2e2a4a"><a href="#223641" label="[22:36:41]">&lt;stikonas&gt;</a></span><span class="message">anyway, now we have binutils and GNU as, so everything is rebuild properly</span></div><div class="line" id="223657"><span class="nick" style="color:#2e2a4a"><a href="#223657" label="[22:36:57]">&lt;stikonas&gt;</a></span><span class="message">but I'm now going back in steps a bit, looking at perl 5.6.2</span></div><div class="line" id="224537"><span class="nick" style="color:#6c3d55"><a href="#224537" label="[22:45:37]">&lt;pder&gt;</a></span><span class="message">fossy: I dont think we need the export PREFIX but my tests indicate we need &quot;. helpers.sh&quot;.  Does that seem right?</span></div><div class="line" id="224550"><span class="nick" style="color:#8dd3c7"><a href="#224550" label="[22:45:50]">&lt;fossy&gt;</a></span><span class="message">pder: yes</span></div><div class="line" id="224718"><span class="nick" style="color:#6c3d55"><a href="#224718" label="[22:47:18]">&lt;pder&gt;</a></span><span class="message">do you think removing export PREFIX is better than leaving it in?</span></div><div class="line" id="225119"><span class="nick" style="color:#80b1d3"><a href="#225119" label="[22:51:19]">&lt;OriansJ`&gt;</a></span><span class="message">stikonas: well a C compiler without inline assembly support is just a toy compiler. As assembly to make system calls (deal with floating point and any real libc sort of functionality) is unavoidable in C.</span></div><div class="line" id="225339"><span class="nick" style="color:#2e2a4a"><a href="#225339" label="[22:53:39]">&lt;stikonas&gt;</a></span><span class="message">OriansJ`: it's not without inline assembly support, it's just incomplete support</span></div><div class="line" id="225352"><span class="nick" style="color:#d9d9d9"><a href="#225352" label="[22:53:52]">&lt;bauen1&gt;</a></span><span class="message">tcc supports most common x86 assembly, enough to do syscalls, but not enough to support all of musls asm code relating to tls and floats</span></div><div class="line" id="225502"><span class="nick" style="color:#8dd3c7"><a href="#225502" label="[22:55:02]">&lt;fossy&gt;</a></span><span class="message">pder: well it should propagate through from run.sh</span></div><div class="line" id="225826"><span class="nick" style="color:#6c3d55"><a href="#225826" label="[22:58:26]">&lt;pder&gt;</a></span><span class="message">OK, I updated run2.sh.  The current branch should pass CI, since I removed exec bash at the very end.</span></div><br /></div></body></html>