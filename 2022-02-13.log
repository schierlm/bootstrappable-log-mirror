<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-02-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000800"><span class="nick" style="color:#8dd3c7"><a href="#000800" label="[00:08:00]">&lt;unmatched-paren&gt;</a></span><span class="message">mihi: yeah, i learned after saying that by browsing the FPC wiki :) it's still not a particularly useful language anymore though; it looks like it's close to Go and D in its low-levelness (writing desktop applications in Pascal was once a common thing, apparently...), so i'd probably use one of those where Pascal was once used</span></div><div class="line" id="012637"><span class="nick" style="color:#2e2a4a"><a href="#012637" label="[01:26:37]">&lt;Hagfish&gt;</a></span><span class="message">&quot;unless you work in a clean room on a product that has no users and the code is no more than one hour old, youâ€™re going to have issues with inconsistent data&quot;</span></div><div class="line" id="012653"><span class="nick" style="color:#2e2a4a"><a href="#012653" label="[01:26:53]">&lt;Hagfish&gt;</a></span><span class="message">heh, nice to see an article with realistic expectations about software development :)</span></div><div class="line" id="203110"><span class="nick" style="color:#6b8072"><a href="#203110" label="[20:31:10]">&lt;siraben&gt;</a></span><span class="message">A tree-sitter grammar might be nice for the intermediate languages we go through <a rel="nofollow" href="https://tree-sitter.github.io/tree-sitter/">https://tree-sitter.github.io/tree-sitter/</a> </span></div><div class="line" id="203129"><span class="nick" style="color:#80b1d3"><a href="#203129" label="[20:31:29]">&lt;muurkha&gt;</a></span><span class="message">intermediate languages?</span></div><div class="line" id="203138"><span class="nick" style="color:#6b8072"><a href="#203138" label="[20:31:38]">&lt;siraben&gt;</a></span><span class="message">I've been writing a grammar for Promela and it seems quite nice <a rel="nofollow" href="https://github.com/siraben/tree-sitter-promela">https://github.com/siraben/tree-sitter-promela</a> </span></div><div class="line" id="203144"><span class="nick" style="color:#80b1d3"><a href="#203144" label="[20:31:44]">&lt;muurkha&gt;</a></span><span class="message">:)</span></div><div class="line" id="203155"><span class="nick" style="color:#6b8072"><a href="#203155" label="[20:31:55]">&lt;siraben&gt;</a></span><span class="message">muurkha: there's various languages we go through starting from the hex assembly</span></div><div class="line" id="203236"><span class="nick" style="color:#6b8072"><a href="#203236" label="[20:32:36]">&lt;siraben&gt;</a></span><span class="message">the generated parser is written in C so it could be bootstrapped, though we would need JavaScript to go from the grammar declaration to the parser</span></div><div class="line" id="203253"><span class="nick" style="color:#6b8072"><a href="#203253" label="[20:32:53]">&lt;siraben&gt;</a></span><span class="message">and Rust as well</span></div><div class="line" id="203625"><span class="nick" style="color:#6d2462"><a href="#203625" label="[20:36:25]">&lt;bauen1&gt;</a></span><span class="message">siraben: javascript seems to only be a few hunderd lines, the rest are tests for the web bindings</span></div><div class="line" id="203653"><span class="nick" style="color:#6d2462"><a href="#203653" label="[20:36:53]">&lt;bauen1&gt;</a></span><span class="message">siraben: and i didn't take a closer look, but maybe you only need that when generating for javascript / npm</span></div><div class="line" id="223946"><span class="nick" style="color:#234e69"><a href="#223946" label="[22:39:46]">&lt;aisha[m]&gt;</a></span><span class="message">\o/</span></div><div class="line" id="223954"><span class="nick" style="color:#234e69"><a href="#223954" label="[22:39:54]">&lt;aisha[m]&gt;</a></span><span class="message">just wanted say this is a really cool project</span></div><div class="line" id="223959"><span class="nick" style="color:#234e69"><a href="#223959" label="[22:39:59]">&lt;aisha[m]&gt;</a></span><span class="message">thanks for making it :D</span></div><div class="line" id="224018"><span class="nick" style="color:#234e69"><a href="#224018" label="[22:40:18]">&lt;aisha[m]&gt;</a></span><span class="message">the stage0 project is dank af</span></div><div class="line" id="233931"><span class="nick">***</span><span class="message notice">blockhead_ is now known as blockhead</span></div><br /></div></body></html>