<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-02-09.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="023640"><span class="nick" style="color:#8dd3c7"><a href="#023640" label="[02:36:40]">&lt;fossy&gt;</a></span><span class="message">AHH I JUST had an idea</span></div><div class="line" id="023718"><span class="nick" style="color:#8dd3c7"><a href="#023718" label="[02:37:18]">&lt;fossy&gt;</a></span><span class="message">Dumb me was trying to kexec a I386 kernel from an x86_64 kernel</span></div><div class="line" id="031445"><span class="nick" style="color:#2e2a4a"><a href="#031445" label="[03:14:45]">&lt;xentrac&gt;</a></span><span class="message">haha</span></div><div class="line" id="031502"><span class="nick" style="color:#2e2a4a"><a href="#031502" label="[03:15:02]">&lt;xentrac&gt;</a></span><span class="message">you'd think there'd be a way to do that...</span></div><div class="line" id="071749"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="112710"><span class="nick" style="color:#6b8072"><a href="#112710" label="[11:27:10]">&lt;stikonas&gt;</a></span><span class="message">fossy: for now CI doesn't run reuse linter?</span></div><div class="line" id="114647"><span class="nick" style="color:#8dd3c7"><a href="#114647" label="[11:46:47]">&lt;fossy&gt;</a></span><span class="message">stikonas: I add that next</span></div><div class="line" id="114653"><span class="nick" style="color:#8dd3c7"><a href="#114653" label="[11:46:53]">&lt;fossy&gt;</a></span><span class="message">I will*</span></div><div class="line" id="114718"><span class="nick" style="color:#6b8072"><a href="#114718" label="[11:47:18]">&lt;stikonas&gt;</a></span><span class="message">thanks. No rush!</span></div><div class="line" id="114722"><span class="nick" style="color:#6b8072"><a href="#114722" label="[11:47:22]">&lt;stikonas&gt;</a></span><span class="message">just asked...</span></div><div class="line" id="130911"><span class="nick" style="color:#80b1d3"><a href="#130911" label="[13:09:11]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: The failure to build on kfreebsd would be resolved if you picked up 2eac6fae82e7be0c2b61490c046aa7e88017b5ae (or updated to master)</span></div><div class="line" id="131634"><span class="nick" style="color:#6d2462"><a href="#131634" label="[13:16:34]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: fossy: hopefully that works for you now: <a rel="nofollow" href="https://github.com/bittorf/live-bootstrap/commit/5aaa1d8efc2bc5315fd2d17b4aff28e21dece05f">https://github.com/bittorf/live-bootstrap/commit/5aaa1d8efc2bc5315fd2d17b4aff28e21dece05f</a> </span></div><div class="line" id="132213"><span class="nick" style="color:#6b8072"><a href="#132213" label="[13:22:13]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: maybe instead of grepping for two spaces &quot;  &quot; just use <a rel="nofollow" href="http://en.wikipedia.org/wiki/Special:Search?go=Go&amp;search=:space:">http://en.wikipedia.org/wiki/Special:Search?go=Go&amp;search=:space:</a> </span></div><div class="line" id="132214"><span class="nick" style="color:#6b8072"><a href="#132214" label="[13:22:14]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="132235"><span class="nick" style="color:#6b8072"><a href="#132235" label="[13:22:35]">&lt;stikonas&gt;</a></span><span class="message">[:space:]</span></div><div class="line" id="132309"><span class="nick" style="color:#6b8072"><a href="#132309" label="[13:23:09]">&lt;stikonas&gt;</a></span><span class="message">altbhough, it's a very minor comment...</span></div><div class="line" id="132344"><span class="nick" style="color:#6b8072"><a href="#132344" label="[13:23:44]">&lt;stikonas&gt;</a></span><span class="message">in our file we'll have two spaces anyway</span></div><div class="line" id="135118"><span class="nick" style="color:#6d2462"><a href="#135118" label="[13:51:18]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: ok, added [[:space:]][[:space:]]</span></div><div class="line" id="135205"><span class="nick" style="color:#6b8072"><a href="#135205" label="[13:52:05]">&lt;stikonas&gt;</a></span><span class="message">but do we need to spaces?</span></div><div class="line" id="135220"><span class="nick" style="color:#6b8072"><a href="#135220" label="[13:52:20]">&lt;stikonas&gt;</a></span><span class="message">well, if you want, OK...</span></div><div class="line" id="135250"><span class="nick" style="color:#6b8072"><a href="#135250" label="[13:52:50]">&lt;stikonas&gt;</a></span><span class="message">I was thinking that it's either &quot;  &quot; or &quot;\t&quot; and <a rel="nofollow" href="http://en.wikipedia.org/wiki/Special:Search?go=Go&amp;search=:space:">http://en.wikipedia.org/wiki/Special:Search?go=Go&amp;search=:space:</a>  would match both</span></div><div class="line" id="135354"><span class="nick" style="color:#6d2462"><a href="#135354" label="[13:53:54]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: as far as i read [[:blank:]] is &quot;spacebar&quot; and TAB... and [[:space:]] is only one keystroke on spacebar</span></div><div class="line" id="135452"><span class="nick" style="color:#6d2462"><a href="#135452" label="[13:54:52]">&lt;gforce_d11977&gt;</a></span><span class="message">but using this special regex syntax has the advantage, that it is more implicit in sourcecode/better to read</span></div><div class="line" id="135707"><span class="nick" style="color:#6d2462"><a href="#135707" label="[13:57:07]">&lt;gforce_d11977&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/bittorf/live-bootstrap/commit/b6212493404a61b4713a3e307f44dd38997d431b">https://github.com/bittorf/live-bootstrap/commit/b6212493404a61b4713a3e307f44dd38997d431b</a> </span></div><div class="line" id="152723"><span class="nick" style="color:#234e69"><a href="#152723" label="[15:27:23]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/34">https://github.com/fosslinux/live-bootstrap/pull/34</a> </span></div><div class="line" id="152815"><span class="nick" style="color:#234e69"><a href="#152815" label="[15:28:15]">&lt;pder&gt;</a></span><span class="message">I added a rebuild of coreutils against musl adding more utils needed for configure scripts</span></div><div class="line" id="152829"><span class="nick" style="color:#2e2a4a"><a href="#152829" label="[15:28:29]">&lt;xentrac&gt;</a></span><span class="message">gforce_d11977: do you mean less implicit?</span></div><div class="line" id="160811"><span class="nick" style="color:#6b8072"><a href="#160811" label="[16:08:11]">&lt;stikonas&gt;</a></span><span class="message">pder: nice! I'll take a look in the evening</span></div><div class="line" id="160852"><span class="nick" style="color:#6b8072"><a href="#160852" label="[16:08:52]">&lt;stikonas&gt;</a></span><span class="message">although, one quick comment: pass2.mk needs license/copyright statement</span></div><div class="line" id="160906"><span class="nick" style="color:#6b8072"><a href="#160906" label="[16:09:06]">&lt;stikonas&gt;</a></span><span class="message">so that reuse linter is happy</span></div><div class="line" id="175721"><span class="nick" style="color:#2e2a4a"><a href="#175721" label="[17:57:21]">&lt;xentrac&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/cksystemsteaching/selfie">https://github.com/cksystemsteaching/selfie</a>  is an interesting bootstrapping system based on RISC-V written in this subset of C: <a rel="nofollow" href="https://github.com/cksystemsteaching/selfie/blob/master/semantics.md">https://github.com/cksystemsteaching/selfie/blob/master/semantics.md</a> </span></div><div class="line" id="175742"><span class="nick" style="color:#2e2a4a"><a href="#175742" label="[17:57:42]">&lt;xentrac&gt;</a></span><span class="message">mostly-subset</span></div><div class="line" id="175824"><span class="nick" style="color:#2e2a4a"><a href="#175824" label="[17:58:24]">&lt;xentrac&gt;</a></span><span class="message">oh I guess <a rel="nofollow" href="https://github.com/cksystemsteaching/selfie/blob/master/grammar.md">https://github.com/cksystemsteaching/selfie/blob/master/grammar.md</a>  is a better page for the C* subset</span></div><div class="line" id="192454"><span class="nick" style="color:#6d2462"><a href="#192454" label="[19:24:54]">&lt;gforce_d11977&gt;</a></span><span class="message">xentrac: maybe I use the wrong english term: wanted to say: when using '[[:space:]]' in sourcodes, this emphasizes the fact</span></div><div class="line" id="192537"><span class="nick" style="color:#2e2a4a"><a href="#192537" label="[19:25:37]">&lt;xentrac&gt;</a></span><span class="message">gforce_d11977: I think that's more explicit, less implicit</span></div><div class="line" id="192632"><span class="nick" style="color:#6d2462"><a href="#192632" label="[19:26:32]">&lt;gforce_d11977&gt;</a></span><span class="message">xentrac: thanks, you are right, i mixed it up - sorry</span></div><div class="line" id="192710"><span class="nick" style="color:#2e2a4a"><a href="#192710" label="[19:27:10]">&lt;xentrac&gt;</a></span><span class="message">no worries, didn't mean to make you feel bad, just wanted to understand</span></div><div class="line" id="192715"><span class="nick" style="color:#234e69"><a href="#192715" label="[19:27:15]">&lt;pder&gt;</a></span><span class="message">I wonder if anyone here has any ideas about this strange bug.  First here is the output: <a rel="nofollow" href="https://paste.debian.net/1184756/">https://paste.debian.net/1184756/</a> </span></div><div class="line" id="192831"><span class="nick" style="color:#234e69"><a href="#192831" label="[19:28:31]">&lt;pder&gt;</a></span><span class="message">I dont know if this is limited to tcc or musl or what.  Piping the output of tcc -E file.c to cat truncates the output</span></div><div class="line" id="192851"><span class="nick" style="color:#234e69"><a href="#192851" label="[19:28:51]">&lt;pder&gt;</a></span><span class="message">But it only appears to do this with the musl version of tcc.  tcc-mes works ok</span></div><div class="line" id="193334"><span class="nick" style="color:#6d2462"><a href="#193334" label="[19:33:34]">&lt;gforce_d11977&gt;</a></span><span class="message">pder: are you using the chroot of 'live-bootsprap' or what is your setup?</span></div><div class="line" id="193421"><span class="nick" style="color:#234e69"><a href="#193421" label="[19:34:21]">&lt;pder&gt;</a></span><span class="message">Yes, this is with live-bootstrap, but the issue happens in and outside the chroot</span></div><div class="line" id="193456"><span class="nick" style="color:#6d2462"><a href="#193456" label="[19:34:56]">&lt;gforce_d11977&gt;</a></span><span class="message">....ok?! strange</span></div><div class="line" id="202932"><span class="nick" style="color:#6d2462"><a href="#202932" label="[20:29:32]">&lt;gforce_d11977&gt;</a></span><span class="message">xentrac: selfie is interesting, but it does not solve the problem of bootstrapping NOR compiling a c-compiler, or am I wrong?</span></div><div class="line" id="203132"><span class="nick" style="color:#2e2a4a"><a href="#203132" label="[20:31:32]">&lt;xentrac&gt;</a></span><span class="message">well, it doesn't tackle the initial stages of bootstrapping in which you don't have a C* compiler</span></div><div class="line" id="203231"><span class="nick" style="color:#2e2a4a"><a href="#203231" label="[20:32:31]">&lt;xentrac&gt;</a></span><span class="message">but it does tackle the problem of needing a kernel</span></div><div class="line" id="203456"><span class="nick" style="color:#2e2a4a"><a href="#203456" label="[20:34:56]">&lt;xentrac&gt;</a></span><span class="message">the RISC-U machine it defines is maybe *too* minimal in the sense that it provides the ECALL system-call instruction, but not the SRET/MRET instruction to return from a system call, nor the page table stuff</span></div><div class="line" id="203535"><span class="nick" style="color:#2e2a4a"><a href="#203535" label="[20:35:35]">&lt;xentrac&gt;</a></span><span class="message">puck: condolences on being K-lined</span></div><div class="line" id="203647"><span class="nick" style="color:#2e2a4a"><a href="#203647" label="[20:36:47]">&lt;xentrac&gt;</a></span><span class="message">also it omits AUIPC so you can't do PIC except by bending over backwards</span></div><div class="line" id="203704"><span class="nick" style="color:#2e2a4a"><a href="#203704" label="[20:37:04]">&lt;xentrac&gt;</a></span><span class="message">but of its 14 instructions the multiply and divide instructions are probably not really necessary, so you could probably cut it to 11, then add a couple back in.  I need to study it</span></div><div class="line" id="203909"><span class="nick" style="color:#6d2462"><a href="#203909" label="[20:39:09]">&lt;gforce_d11977&gt;</a></span><span class="message">sectorforth is a 16-bit x86 Forth that fits in a 512-byte boot sector: <a rel="nofollow" href="https://github.com/cesarblum/sectorforth">https://github.com/cesarblum/sectorforth</a> </span></div><div class="line" id="203941"><span class="nick" style="color:#6d2462"><a href="#203941" label="[20:39:41]">&lt;gforce_d11977&gt;</a></span><span class="message">but i have no clue, if thes makes any sense 8-)</span></div><div class="line" id="204035"><span class="nick" style="color:#2e2a4a"><a href="#204035" label="[20:40:35]">&lt;xentrac&gt;</a></span><span class="message">it does make sense :)</span></div><div class="line" id="204042"><span class="nick" style="color:#2e2a4a"><a href="#204042" label="[20:40:42]">&lt;xentrac&gt;</a></span><span class="message">I haven't tried reading sectorforth though</span></div><div class="line" id="204522"><span class="nick" style="color:#6d2462"><a href="#204522" label="[20:45:22]">&lt;gforce_d11977&gt;</a></span><span class="message">also impressive: a BASIC including editor and debugger in 512 byte/runnable in qemu: <a rel="nofollow" href="https://github.com/nanochess/bootBASIC">https://github.com/nanochess/bootBASIC</a> </span></div><div class="line" id="204538"><span class="nick" style="color:#2e2a4a"><a href="#204538" label="[20:45:38]">&lt;xentrac&gt;</a></span><span class="message">sectorforth might be a more practical way of doing initial machine bringup than the three-instruction Forth or Óscar Toledo G.'s bootOS</span></div><div class="line" id="204614"><span class="nick" style="color:#2e2a4a"><a href="#204614" label="[20:46:14]">&lt;xentrac&gt;</a></span><span class="message">but I think that even though, as Bernd Paysan points out in the 1996 thread, you *can* implement all your integer operations in terms of 0=, +, and NAND...</span></div><div class="line" id="204626"><span class="nick" style="color:#2e2a4a"><a href="#204626" label="[20:46:26]">&lt;xentrac&gt;</a></span><span class="message">that probably isn't very practical</span></div><div class="line" id="204735"><span class="nick" style="color:#2e2a4a"><a href="#204735" label="[20:47:35]">&lt;xentrac&gt;</a></span><span class="message">here's how Bernd defines 1:</span></div><div class="line" id="204743"><span class="nick" style="color:#2e2a4a"><a href="#204743" label="[20:47:43]">&lt;xentrac&gt;</a></span><span class="message">: -1 ( x -- x 0 ) DUP DUP NAND DUP DUP NAND NAND ;</span></div><div class="line" id="204806"><span class="nick" style="color:#2e2a4a"><a href="#204806" label="[20:48:06]">&lt;xentrac&gt;</a></span><span class="message">: 1 -1 DUP + DUP NAND ;</span></div><div class="line" id="204931"><span class="nick" style="color:#2e2a4a"><a href="#204931" label="[20:49:31]">&lt;xentrac&gt;</a></span><span class="message">so you'd probably end up writing machine-specific assembly pretty quickly with sectorforth's 8-instruction Forth, just as with the three-instruction Forth (where that's the whole point)</span></div><div class="line" id="210101"><span class="nick" style="color:#8dd3c7"><a href="#210101" label="[21:01:01]">&lt;fossy&gt;</a></span><span class="message">stikonas: it was on my todo list anyay :)</span></div><div class="line" id="210509"><span class="nick" style="color:#2e2a4a"><a href="#210509" label="[21:05:09]">&lt;xentrac&gt;</a></span><span class="message">my own attempt to do a minimal interactive Forth was about three times larger: <a rel="nofollow" href="https://github.com/kragen/tokthr">https://github.com/kragen/tokthr</a> </span></div><div class="line" id="210527"><span class="nick" style="color:#2e2a4a"><a href="#210527" label="[21:05:27]">&lt;xentrac&gt;</a></span><span class="message">and actually usable Forths seem to start around 4K</span></div><br /></div></body></html>