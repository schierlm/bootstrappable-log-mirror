<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-01-19.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="005611"><span class="nick" style="color:#389600"><a href="#005611" label="[00:56:11]">&lt;lrvick&gt;</a></span><span class="message">finally. got an x86_64 cross compiler built from live-bootstrap</span></div><div class="line" id="010539"><span class="nick" style="color:#8dd3c7"><a href="#010539" label="[01:05:39]">&lt;stikonas&gt;</a></span><span class="message">lrvick: nice, any tips?</span></div><div class="line" id="012355"><span class="nick" style="color:#389600"><a href="#012355" label="[01:23:55]">&lt;lrvick&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.distrust.co/public/packages/src/branch/main/src/bootstrap/cross-x86_64/Dockerfile">https://git.distrust.co/public/packages/src/branch/main/src/bootstrap/cross-x86_64/Dockerfile</a> </span></div><div class="line" id="012419"><span class="nick" style="color:#389600"><a href="#012419" label="[01:24:19]">&lt;lrvick&gt;</a></span><span class="message">that pivots from a live-bootstrap container to a x86_64-cross-gcc scratch container</span></div><div class="line" id="012437"><span class="nick" style="color:#389600"><a href="#012437" label="[01:24:37]">&lt;lrvick&gt;</a></span><span class="message">that can at least tell me its own version number</span></div><div class="line" id="012458"><span class="nick" style="color:#389600"><a href="#012458" label="[01:24:58]">&lt;lrvick&gt;</a></span><span class="message">TBD if it can build native musl, binutils, and gcc yet</span></div><div class="line" id="014641"><span class="nick" style="color:#2e2a4a"><a href="#014641" label="[01:46:41]">&lt;oriansj&gt;</a></span><span class="message">lrvick: I am sure you can make it happen ^_^ keep up the good work</span></div><div class="line" id="083143"><span class="nick" style="color:#6b8072"><a href="#083143" label="[08:31:43]">&lt;GoogulatorMobile&gt;</a></span><span class="message">pder: so the new code enabled by that config option doesn't even execute (apart from the initial check)</span></div><div class="line" id="083205"><span class="nick" style="color:#6b8072"><a href="#083205" label="[08:32:05]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Mikaku: that sounds like some kind of alignment issue</span></div><div class="line" id="083314"><span class="nick" style="color:#6b8072"><a href="#083314" label="[08:33:14]">&lt;GoogulatorMobile&gt;</a></span><span class="message">But why does a Rocket Lake CPU care about alignment in this situation, where no other x86 CPU does AFAIK?</span></div><div class="line" id="083550"><span class="nick" style="color:#6b8072"><a href="#083550" label="[08:35:50]">&lt;GoogulatorMobile&gt;</a></span><span class="message">*Raptor Lake</span></div><div class="line" id="083558"><span class="nick" style="color:#6b8072"><a href="#083558" label="[08:35:58]">&lt;GoogulatorMobile&gt;</a></span><span class="message">(Rocket Lake was older)</span></div><div class="line" id="083851"><span class="nick" style="color:#80b1d3"><a href="#083851" label="[08:38:51]">&lt;Mikaku&gt;</a></span><span class="message">GoogulatorMobile: if I could just reproduce it here</span></div><div class="line" id="083914"><span class="nick" style="color:#6b8072"><a href="#083914" label="[08:39:14]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Do you have a Raptor Lake system to test on?</span></div><div class="line" id="084401"><span class="nick" style="color:#6b8072"><a href="#084401" label="[08:44:01]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Seems to be highly specific to Raptor Lake or at least newer Intel &quot;Lake&quot; architectures - AMD Zen 4, for example, has no problem here, even when given 192GiB of RAM</span></div><div class="line" id="084424"><span class="nick" style="color:#6b8072"><a href="#084424" label="[08:44:24]">&lt;GoogulatorMobile&gt;</a></span><span class="message">(another theory was that it's related to high host RAM, beyond even the PAE limit)</span></div><div class="line" id="085107"><span class="nick" style="color:#80b1d3"><a href="#085107" label="[08:51:07]">&lt;Mikaku&gt;</a></span><span class="message">GoogulatorMobile: no, I only have old computers around me (i386, i486, Pentiums, PC/104, etc.)</span></div><div class="line" id="090926"><span class="nick" style="color:#6b8072"><a href="#090926" label="[09:09:26]">&lt;GoogulatorMobile&gt;</a></span><span class="message">I do have some newer ones to test on, but all AMD or ARM</span></div><div class="line" id="090943"><span class="nick" style="color:#6b8072"><a href="#090943" label="[09:09:43]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Newest Intel I have access to is Skylake</span></div><div class="line" id="090957"><span class="nick" style="color:#6b8072"><a href="#090957" label="[09:09:57]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Maybe Coffee Lake</span></div><div class="line" id="091040"><span class="nick" style="color:#6b8072"><a href="#091040" label="[09:10:40]">&lt;GoogulatorMobile&gt;</a></span><span class="message">But nothing post-2020</span></div><div class="line" id="091138"><span class="nick" style="color:#6b8072"><a href="#091138" label="[09:11:38]">&lt;GoogulatorMobile&gt;</a></span><span class="message">(Intel announced breaking 8086 compatibility in their future CPUs in 2020)</span></div><div class="line" id="093255"><span class="nick" style="color:#6b8072"><a href="#093255" label="[09:32:55]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Mikaku: just had this idea - are we overwriting the GDT or IDT maybe at some point in the builder-hex0 to Fiwix kexec?</span></div><div class="line" id="093346"><span class="nick" style="color:#6b8072"><a href="#093346" label="[09:33:46]">&lt;GoogulatorMobile&gt;</a></span><span class="message">If that happens, we can get really varied behavior between CPU makes and models, due to different caching approaches</span></div><div class="line" id="093348"><span class="nick" style="color:#80b1d3"><a href="#093348" label="[09:33:48]">&lt;Mikaku&gt;</a></span><span class="message">GoogulatorMobile: I don't know, as to rickmasters</span></div><div class="line" id="093448"><span class="nick" style="color:#6b8072"><a href="#093448" label="[09:34:48]">&lt;GoogulatorMobile&gt;</a></span><span class="message">The version of builder-hex0 we currently use puts the GDT at 7EF8 to 7F20</span></div><div class="line" id="093508"><span class="nick" style="color:#6b8072"><a href="#093508" label="[09:35:08]">&lt;GoogulatorMobile&gt;</a></span><span class="message">And the IDT at 10000 to 10800</span></div><div class="line" id="093529"><span class="nick" style="color:#6b8072"><a href="#093529" label="[09:35:29]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Those addresses are marked as usable in the handcrafted e820 map in kexec-fiwix</span></div><div class="line" id="093930"><span class="nick" style="color:#6b8072"><a href="#093930" label="[09:39:30]">&lt;GoogulatorMobile&gt;</a></span><span class="message">pder: can you try adjusting the start address of the first AVAILABLE region in kexec-fiwix.c to 0x10800 (instead of 0), and removing 0x10800 from the size of the same region?</span></div><div class="line" id="093943"><span class="nick" style="color:#6b8072"><a href="#093943" label="[09:39:43]">&lt;GoogulatorMobile&gt;</a></span><span class="message">(use a Fiwix kernel that normally crashes when testing this)</span></div><div class="line" id="094051"><span class="nick" style="color:#6b8072"><a href="#094051" label="[09:40:51]">&lt;GoogulatorMobile&gt;</a></span><span class="message">Hopefully this is enough to protect builder-hex0's GDT &amp; IDT from getting overwritten before Fiwix loads its own GDT &amp; IDT</span></div><div class="line" id="123111"><span class="nick" style="color:#80b1d3"><a href="#123111" label="[12:31:11]">&lt;Mikaku&gt;</a></span><span class="message">RISC-V mini laptop: &lt;<a rel="nofollow" href="https://3.14.by/en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review">https://3.14.by/en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review</a>&gt; </span></div><div class="line" id="144050"><span class="nick" style="color:#6d2462"><a href="#144050" label="[14:40:50]">&lt;janneke&gt;</a></span><span class="message">Mikaku: that's pretty cool -- the keyboard is unusable, unless maybe you're still stuck on qwerty</span></div><div class="line" id="145802"><span class="nick" style="color:#80b1d3"><a href="#145802" label="[14:58:02]">&lt;Mikaku&gt;</a></span><span class="message">janneke: heh, you mean I'm last few still using qwerty?</span></div><div class="line" id="145908"><span class="nick" style="color:#80b1d3"><a href="#145908" label="[14:59:08]">&lt;Mikaku&gt;</a></span><span class="message">all my IBM keyboards model M are qwerty and considering how solid they are, I guess I'll be stuck on qwerty forever :-)</span></div><div class="line" id="145910"><span class="nick" style="color:#6d2462"><a href="#145910" label="[14:59:10]">&lt;janneke&gt;</a></span><span class="message">Mikaku: dunno, i've not been keeping track</span></div><div class="line" id="150048"><span class="nick" style="color:#234e69"><a href="#150048" label="[15:00:48]">&lt;nimaje&gt;</a></span><span class="message">well, you don't need to use the layout printed on the keys, you can configure your system to use any other layout</span></div><div class="line" id="150147"><span class="nick" style="color:#6d2462"><a href="#150147" label="[15:01:47]">&lt;janneke&gt;</a></span><span class="message">usually yeah, but not really with the risc-v mini</span></div><div class="line" id="150148"><span class="nick" style="color:#80b1d3"><a href="#150148" label="[15:01:48]">&lt;Mikaku&gt;</a></span><span class="message">yep, just thought on it, even they keys on these keyboards are interchangeable easily</span></div><div class="line" id="163319"><span class="nick" style="color:#6c3d55"><a href="#163319" label="[16:33:19]">&lt;pder&gt;</a></span><span class="message">GoogulatorMobile: I reverted back to master and made the following change to kexec-fiwix.c</span></div><div class="line" id="163327"><span class="nick" style="color:#6c3d55"><a href="#163327" label="[16:33:27]">&lt;pder&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1304648/">https://paste.debian.net/1304648/</a> </span></div><div class="line" id="163359"><span class="nick" style="color:#6c3d55"><a href="#163359" label="[16:33:59]">&lt;pder&gt;</a></span><span class="message">It hung at kexec-fiwix: jumping to trampoline..</span></div><div class="line" id="163429"><span class="nick" style="color:#6c3d55"><a href="#163429" label="[16:34:29]">&lt;pder&gt;</a></span><span class="message">Let me know if thats the change you intended</span></div><div class="line" id="164429"><span class="nick" style="color:#6b8072"><a href="#164429" label="[16:44:29]">&lt;GoogulatorMobile&gt;</a></span><span class="message">pder: that's exactly what I meant</span></div><div class="line" id="183545"><span class="nick" style="color:#d9d9d9"><a href="#183545" label="[18:35:45]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Is there any way to debug builder-hex0. I was trying my alternative tcc bootstrap path and it seems to crash here <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/407/files#diff-cc6e390ef115302dcd339b5d634107e16ad985d974300ad2b51732aa948a7484R203">https://github.com/fosslinux/live-bootstrap/pull/407/files#diff-cc6e390ef115302dcd339b5d634107e16ad985d974300ad2b51732aa948a7484R203</a>  . It's running the following command: tcc-boot0 -static -nostdlib /usr/lib/mes/crt1.o ../mes-0.25/unified-libc.o ../mes-0.25/libtcc1.o tcc-boot1.o -o...</span></div><div class="line" id="183550"><span class="nick" style="color:#d9d9d9"><a href="#183550" label="[18:35:50]">&lt;matrix_bridge&gt;</a></span><span class="message">... tcc-boot0-new</span></div><div class="line" id="183741"><span class="nick" style="color:#d9d9d9"><a href="#183741" label="[18:37:41]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; the crash seems to happen in console_putc called from handle_syscall_write after reading crt1.o</span></div><div class="line" id="183824"><span class="nick" style="color:#d9d9d9"><a href="#183824" label="[18:38:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; I've been using qemu with -gdb tcp::1234 and then connecting using gdb.</span></div><div class="line" id="183847"><span class="nick" style="color:#d9d9d9"><a href="#183847" label="[18:38:47]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; gdb gets pretty confused though when it transitions into 16 bit mode</span></div><div class="line" id="184038"><span class="nick" style="color:#d9d9d9"><a href="#184038" label="[18:40:38]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; I think it fails somewhere in console_putc_16, but I can't see what's going on.</span></div><div class="line" id="184139"><span class="nick" style="color:#d9d9d9"><a href="#184139" label="[18:41:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Or why that would stop working suddenly. That function will have been called multiple times before as characters are being printed to stdout up until that point.</span></div><div class="line" id="184742"><span class="nick" style="color:#d9d9d9"><a href="#184742" label="[18:47:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; works fine under chroot and bwrap</span></div><div class="line" id="192322"><span class="nick" style="color:#bc80bd"><a href="#192322" label="[19:23:22]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: debugging builder-hex0 is pretty difficult. I'm not sure there is any simple advice I can offer.</span></div><div class="line" id="192400"><span class="nick" style="color:#bc80bd"><a href="#192400" label="[19:24:00]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: I think it is worth trying the latest code from <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0">https://github.com/ironmeld/builder-hex0</a> </span></div><div class="line" id="192548"><span class="nick" style="color:#bc80bd"><a href="#192548" label="[19:25:48]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: There are some improved instructions for generating hex0 and testing with live-bootstrap in DEVELOP.md</span></div><div class="line" id="192611"><span class="nick" style="color:#bc80bd"><a href="#192611" label="[19:26:11]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: near the bottom.</span></div><div class="line" id="192824"><span class="nick" style="color:#bc80bd"><a href="#192824" label="[19:28:24]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: It will be especially difficult to debug the output routine because you would need it to work to help debug itself...</span></div><div class="line" id="192942"><span class="nick" style="color:#d9d9d9"><a href="#192942" label="[19:29:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Ok, thanks. I'll see if I can use a newer version of builder-hex0 in live-bootstrap</span></div><div class="line" id="193109"><span class="nick" style="color:#bc80bd"><a href="#193109" label="[19:31:09]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: If I just checkout and run your branch should that reproduce the problem?</span></div><div class="line" id="194456"><span class="nick" style="color:#d9d9d9"><a href="#194456" label="[19:44:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; unfortunately possibly not, unless the newer version of builder-hex0 is unaffected by the following issues. There were 2 other issues I ran in to (which I hacked around locally). First my cdrun utility seems to fail <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/0.1/tcc_js/cdrun.c">https://github.com/cosinusoidally/tcc_bootstrap_alt/blob/0.1/tcc_js/cdrun.c</a>  (seems to fail on execve). I worked around that by updating after.kaem to use cd (and kaem.x86 to call kaem...</span></div><div class="line" id="194501"><span class="nick" style="color:#d9d9d9"><a href="#194501" label="[19:45:01]">&lt;matrix_bridge&gt;</a></span><span class="message">... --file ./after.kaem). The other issue was the initial call to brk is not aligned to 4 bytes. I also hacked around that issue. I can push branches with the hacks applied if that helps?</span></div><div class="line" id="194528"><span class="nick" style="color:#d9d9d9"><a href="#194528" label="[19:45:28]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Running under the newest version of builder-hex0 still seems to fail</span></div><div class="line" id="194743"><span class="nick" style="color:#bc80bd"><a href="#194743" label="[19:47:43]">&lt;rickmasters&gt;</a></span><span class="message">I'm willing to make edits to get it working but of course a branch would be easiest...</span></div><div class="line" id="195607"><span class="nick" style="color:#d9d9d9"><a href="#195607" label="[19:56:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; I'm just checking if the latest builder-hex0 still needs the workarounds. If it does I'll push a new branch of tcc_bootstrap_alt</span></div><div class="line" id="195728"><span class="nick" style="color:#bc80bd"><a href="#195728" label="[19:57:28]">&lt;rickmasters&gt;</a></span><span class="message">ok, I'm running the PR branch as well. It's curious that it still runs mes-m2. I guess I was expecting mes to not be there...</span></div><div class="line" id="200104"><span class="nick" style="color:#d9d9d9"><a href="#200104" label="[20:01:04]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; You need to run ./rootfs.py .... --tcc_bootstrap_alt</span></div><div class="line" id="200109"><span class="nick" style="color:#bc80bd"><a href="#200109" label="[20:01:09]">&lt;rickmasters&gt;</a></span><span class="message">I haven't updated builder-hex0 in this test. It appears to have stopped with last output: &quot;if match xFalse xTrue&quot;</span></div><div class="line" id="200134"><span class="nick" style="color:#bc80bd"><a href="#200134" label="[20:01:34]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: oh, well that explains that :)</span></div><div class="line" id="200431"><span class="nick" style="color:#bc80bd"><a href="#200431" label="[20:04:31]">&lt;rickmasters&gt;</a></span><span class="message">i'm trying again with latest builder-hex0 and --tcc-bootstrap_alt but I expect that I'll need the branch or more detailed workaround instructions</span></div><div class="line" id="200618"><span class="nick" style="color:#bc80bd"><a href="#200618" label="[20:06:18]">&lt;rickmasters&gt;</a></span><span class="message">The newest builder-hex0 has disk I/O improvements from Googulator and there are some interrupt handling changes that might be relevant, but I doubt it</span></div><div class="line" id="200851"><span class="nick" style="color:#bc80bd"><a href="#200851" label="[20:08:51]">&lt;rickmasters&gt;</a></span><span class="message">Yeah, its crashed on cdrun, so I'd need to workaround</span></div><div class="line" id="211321"><span class="nick" style="color:#d9d9d9"><a href="#211321" label="[21:13:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; rickmasters: ok <a rel="nofollow" href="https://github.com/cosinusoidally/tcc_bootstrap_alt/tree/builder-hex0-issue">https://github.com/cosinusoidally/tcc_bootstrap_alt/tree/builder-hex0-issue</a>  should repro the issue</span></div><div class="line" id="211425"><span class="nick" style="color:#bc80bd"><a href="#211425" label="[21:14:25]">&lt;rickmasters&gt;</a></span><span class="message">ok I'll try it</span></div><div class="line" id="211648"><span class="nick" style="color:#bc80bd"><a href="#211648" label="[21:16:48]">&lt;rickmasters&gt;</a></span><span class="message">It's also worth mentioning the list of limitations: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0?tab=readme-ov-file#limitations">https://github.com/ironmeld/builder-hex0?tab=readme-ov-file#limitations</a> </span></div><div class="line" id="211758"><span class="nick" style="color:#bc80bd"><a href="#211758" label="[21:17:58]">&lt;rickmasters&gt;</a></span><span class="message">Some of them may be surprising. Like you can't reopen a file for writes.</span></div><div class="line" id="215726"><span class="nick" style="color:#bc80bd"><a href="#215726" label="[21:57:26]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: running now. seems to be getting pretty far. lot's of debug output.</span></div><div class="line" id="215946"><span class="nick" style="color:#bc80bd"><a href="#215946" label="[21:59:46]">&lt;rickmasters&gt;</a></span><span class="message">ok, failed on tcc-boot0 checksum. will run again with --update-checksums.</span></div><div class="line" id="220752"><span class="nick" style="color:#389600"><a href="#220752" label="[22:07:52]">&lt;lrvick&gt;</a></span><span class="message">Built x86_64 cross-gcc and used that to build musl, and now cryptic issues with &quot;conftest&quot; building binutils if anyone has had to debug this before: <a rel="nofollow" href="https://dpaste.org/BjJW8">https://dpaste.org/BjJW8</a> </span></div><div class="line" id="221300"><span class="nick" style="color:#8dd3c7"><a href="#221300" label="[22:13:00]">&lt;stikonas&gt;</a></span><span class="message">lrvick: have you not installed that gcc?</span></div><div class="line" id="221306"><span class="nick" style="color:#8dd3c7"><a href="#221306" label="[22:13:06]">&lt;stikonas&gt;</a></span><span class="message">why is it still xgcc?</span></div><div class="line" id="221349"><span class="nick" style="color:#bc80bd"><a href="#221349" label="[22:13:49]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: so it wasn't able to cp the generated checksum file. I'm suspecting a file system issue. I'll keep digging.</span></div><div class="line" id="221412"><span class="nick" style="color:#389600"><a href="#221412" label="[22:14:12]">&lt;lrvick&gt;</a></span><span class="message">I built xgcc then used that to build musl, and now am using it to build binutils</span></div><div class="line" id="221440"><span class="nick" style="color:#389600"><a href="#221440" label="[22:14:40]">&lt;lrvick&gt;</a></span><span class="message">I too have only used crossdev and have never done this by hand, so I may be misunderstanding the order of operations</span></div><div class="line" id="221526"><span class="nick" style="color:#8dd3c7"><a href="#221526" label="[22:15:26]">&lt;stikonas&gt;</a></span><span class="message">yeah, i understand that, but you didn't run &quot;make install&quot;</span></div><div class="line" id="221533"><span class="nick" style="color:#8dd3c7"><a href="#221533" label="[22:15:33]">&lt;stikonas&gt;</a></span><span class="message">that probably shouldn't cause any problems</span></div><div class="line" id="221537"><span class="nick" style="color:#8dd3c7"><a href="#221537" label="[22:15:37]">&lt;stikonas&gt;</a></span><span class="message">but who knows...</span></div><div class="line" id="221602"><span class="nick" style="color:#389600"><a href="#221602" label="[22:16:02]">&lt;lrvick&gt;</a></span><span class="message">Yeah I was trying to use everything &quot;in place&quot; so I can install all the things at a separate build stage</span></div><div class="line" id="221617"><span class="nick" style="color:#389600"><a href="#221617" label="[22:16:17]">&lt;lrvick&gt;</a></span><span class="message">in a dedicated rootfs</span></div><div class="line" id="221707"><span class="nick" style="color:#389600"><a href="#221707" label="[22:17:07]">&lt;lrvick&gt;</a></span><span class="message">trying to see how conftest works so I can try to do whatever is exploding by hand</span></div><div class="line" id="221913"><span class="nick" style="color:#389600"><a href="#221913" label="[22:19:13]">&lt;lrvick&gt;</a></span><span class="message">Here is the full build setup right now: <a rel="nofollow" href="https://dpaste.org/LTKnc">https://dpaste.org/LTKnc</a> </span></div><div class="line" id="222035"><span class="nick" style="color:#389600"><a href="#222035" label="[22:20:35]">&lt;lrvick&gt;</a></span><span class="message">musl at least built happily without me doing a &quot;make install&quot; as I have &quot;--prefix&quot; set to nothing so it should be portable, if I understand correctly</span></div><div class="line" id="222046"><span class="nick" style="color:#8dd3c7"><a href="#222046" label="[22:20:46]">&lt;stikonas&gt;</a></span><span class="message">well, musl is much simpler</span></div><div class="line" id="222101"><span class="nick" style="color:#8dd3c7"><a href="#222101" label="[22:21:01]">&lt;stikonas&gt;</a></span><span class="message">binutils and gcc have multiple projects inside the repo</span></div><div class="line" id="222121"><span class="nick" style="color:#8dd3c7"><a href="#222121" label="[22:21:21]">&lt;stikonas&gt;</a></span><span class="message">there are top level and subdirectory configure scripts, etc...</span></div><div class="line" id="222155"><span class="nick" style="color:#389600"><a href="#222155" label="[22:21:55]">&lt;lrvick&gt;</a></span><span class="message">fair. I will install to a &quot;cross&quot; directory as DESTDIR to see if that helps, but I stil limagine I have to somehow tell binutils about all the stuff in there manually</span></div><div class="line" id="222225"><span class="nick" style="color:#389600"><a href="#222225" label="[22:22:25]">&lt;lrvick&gt;</a></span><span class="message">build is currently unprivileged trapped in /home/user</span></div><div class="line" id="223032"><span class="nick" style="color:#d9d9d9"><a href="#223032" label="[22:30:32]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; rickmasters: thanks. The debug logging is a bit verbose in my code. When I ran it on my side I remove the checksum check <a rel="nofollow" href="https://github.com/cosinusoidally/live-bootstrap/blob/tcc_bootstrap_alt-refactor/steps/tcc_bootstrap_alt-0.1/pass1.kaem#L33-L41">https://github.com/cosinusoidally/live-bootstrap/blob/tcc_bootstrap_alt-refactor/steps/tcc_bootstrap_alt-0.1/pass1.kaem#L33-L41</a>  since it won't be correct with the tweaked version of tcc_bootstrap_alt . The shasums should match for later stages.</span></div><div class="line" id="224730"><span class="nick" style="color:#bc80bd"><a href="#224730" label="[22:47:30]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: ok, I just thought the checksum generation problem might indicate a problem with the kernel.</span></div><div class="line" id="224841"><span class="nick" style="color:#bc80bd"><a href="#224841" label="[22:48:41]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: but FYI it's actually a wrong file name in steps/tcc_bootstrap_alt-0.1/pass1.kaem</span></div><div class="line" id="224954"><span class="nick" style="color:#bc80bd"><a href="#224954" label="[22:49:54]">&lt;rickmasters&gt;</a></span><span class="message">cp ${pkg}.checksums ${SRCDIR}  should be  cp ${pkg}.${ARCH}.checksum ${SRCDIR}</span></div><div class="line" id="230407"><span class="nick" style="color:#bc80bd"><a href="#230407" label="[23:04:07]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: ok, reproduced. last line: open: /usr/lib/mes/crt1.o flags: 0 mode: 134215840 flags_new: 0 mode_new:</span></div><div class="line" id="232230"><span class="nick" style="color:#bc80bd"><a href="#232230" label="[23:22:30]">&lt;rickmasters&gt;</a></span><span class="message">cosinusoidally: were you debugging why no output after mode_new: ?</span></div><div class="line" id="234624"><span class="nick" style="color:#d9d9d9"><a href="#234624" label="[23:46:24]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; Is that just due to <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0/blob/main/builder-hex0-x86-stage2.hex0#L135-L137">https://github.com/ironmeld/builder-hex0/blob/main/builder-hex0-x86-stage2.hex0#L135-L137</a>  ?</span></div><div class="line" id="234839"><span class="nick" style="color:#d9d9d9"><a href="#234839" label="[23:48:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; &quot;# Note: with QEMU+Seabios this does not flush the last character or</span></div><div class="line" id="234839"><span class="nick" style="color:#d9d9d9"><a href="#234839" label="[23:48:39]">&lt;matrix_bridge&gt;</a></span><span class="message">CRLF of a line until the first character is output on the next line</span></div><div class="line" id="234840"><span class="nick" style="color:#d9d9d9"><a href="#234840" label="[23:48:40]">&lt;matrix_bridge&gt;</a></span><span class="message">and that character cannot be another CRLF.&quot;</span></div><div class="line" id="235202"><span class="nick" style="color:#bc80bd"><a href="#235202" label="[23:52:02]">&lt;rickmasters&gt;</a></span><span class="message">Yes</span></div><div class="line" id="235335"><span class="nick" style="color:#bc80bd"><a href="#235335" label="[23:53:35]">&lt;rickmasters&gt;</a></span><span class="message">So, the open is succeeding and then something freezes after that.</span></div><div class="line" id="235430"><span class="nick" style="color:#d9d9d9"><a href="#235430" label="[23:54:30]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;cosinusoidally&gt; It seems to get stuck when it attempts to print an &quot;o&quot; on the next line</span></div><br /></div></body></html>