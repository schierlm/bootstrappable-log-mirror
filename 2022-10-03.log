<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-10-03.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="020717"><span class="nick" style="color:#8dd3c7"><a href="#020717" label="[02:07:17]">&lt;stikonas&gt;</a></span><span class="message">oriansj: can you pull in typo fix <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-aarch64/pull/5">https://github.com/oriansj/stage0-posix-aarch64/pull/5</a> </span></div><div class="line" id="020723"><span class="nick" style="color:#8dd3c7"><a href="#020723" label="[02:07:23]">&lt;stikonas&gt;</a></span><span class="message">I've pushed similar fix for AMD64</span></div><div class="line" id="021614"><span class="nick" style="color:#2e2a4a"><a href="#021614" label="[02:16:14]">&lt;oriansj&gt;</a></span><span class="message">merged</span></div><div class="line" id="021715"><span class="nick" style="color:#8dd3c7"><a href="#021715" label="[02:17:15]">&lt;stikonas&gt;</a></span><span class="message">this probably gives away what part of cc_amd64.M1 I'm working on</span></div><div class="line" id="115737"><span class="nick">***</span><span class="message notice">xerox__ is now known as xerox</span></div><div class="line" id="124238"><span class="nick">***</span><span class="message notice">xerox is now known as edi</span></div><div class="line" id="211938"><span class="nick" style="color:#6b8072"><a href="#211938" label="[21:19:38]">&lt;muurkha&gt;</a></span><span class="message">I wonder how hard it would be to recompile a standard benchmark with a series of compilers over the years, for a single standardized platform: <a rel="nofollow" href="https://news.ycombinator.com/item?id=33057243">https://news.ycombinator.com/item?id=33057243</a> </span></div><div class="line" id="211944"><span class="nick" style="color:#6b8072"><a href="#211944" label="[21:19:44]">&lt;muurkha&gt;</a></span><span class="message">maybe i386?</span></div><div class="line" id="215331"><span class="nick" style="color:#8dd3c7"><a href="#215331" label="[21:53:31]">&lt;stikonas&gt;</a></span><span class="message">well, like the post says, fibonacci is not the best benchmark</span></div><div class="line" id="215437"><span class="nick" style="color:#8dd3c7"><a href="#215437" label="[21:54:37]">&lt;stikonas&gt;</a></span><span class="message">I guess especially because the easy way of calculating it (recursion) is the slowest</span></div><div class="line" id="220432"><span class="nick" style="color:#80b1d3"><a href="#220432" label="[22:04:32]">&lt;aggi&gt;</a></span><span class="message">made another decision today, moving to oasis linux</span></div><div class="line" id="220450"><span class="nick" style="color:#80b1d3"><a href="#220450" label="[22:04:50]">&lt;aggi&gt;</a></span><span class="message">which i hope, has some benefits, related to GNU-buildsystem removal</span></div><div class="line" id="220517"><span class="nick" style="color:#6b8072"><a href="#220517" label="[22:05:17]">&lt;muurkha&gt;</a></span><span class="message">yeah, I was thinking maybe Dhrystone or Bytemark or something like that would be a better benchmark.</span></div><div class="line" id="220530"><span class="nick" style="color:#80b1d3"><a href="#220530" label="[22:05:30]">&lt;aggi&gt;</a></span><span class="message">because, Oasis Linux replaced all pre-generated configure/makefile and configure.ac stuff with their lua-based declarative package-management</span></div><div class="line" id="220531"><span class="nick" style="color:#6b8072"><a href="#220531" label="[22:05:31]">&lt;muurkha&gt;</a></span><span class="message">plus maybe something floating-point</span></div><div class="line" id="220538"><span class="nick" style="color:#6b8072"><a href="#220538" label="[22:05:38]">&lt;muurkha&gt;</a></span><span class="message">Whetstone maybe, dunno</span></div><div class="line" id="220554"><span class="nick" style="color:#80b1d3"><a href="#220554" label="[22:05:54]">&lt;aggi&gt;</a></span><span class="message">sorry, didn't mean to interrupt</span></div><div class="line" id="220556"><span class="nick" style="color:#6b8072"><a href="#220556" label="[22:05:56]">&lt;muurkha&gt;</a></span><span class="message">aggi: nice, sounds like a lot of work.  have you implemented Lua?  it's a really nice litle language</span></div><div class="line" id="220600"><span class="nick" style="color:#6b8072"><a href="#220600" label="[22:06:00]">&lt;muurkha&gt;</a></span><span class="message">no, you can't interrupt on IRC</span></div><div class="line" id="220638"><span class="nick" style="color:#80b1d3"><a href="#220638" label="[22:06:38]">&lt;aggi&gt;</a></span><span class="message">no, i only tested lua integration, that it compiles/cross-compiles and statically links with GNU-toolchain and tcc-toolchain</span></div><div class="line" id="220648"><span class="nick" style="color:#80b1d3"><a href="#220648" label="[22:06:48]">&lt;aggi&gt;</a></span><span class="message">and lua doesn't require any GNU-buildsystem either</span></div><div class="line" id="220655"><span class="nick" style="color:#6b8072"><a href="#220655" label="[22:06:55]">&lt;muurkha&gt;</a></span><span class="message">stikonas: I tend to use dumb fibonacci because of ease of use; you can hack it together in any language you know in a few minutes and get a microbenchmark.  just that sometimes it doesn't tell you anything useful</span></div><div class="line" id="220711"><span class="nick" style="color:#6b8072"><a href="#220711" label="[22:07:11]">&lt;muurkha&gt;</a></span><span class="message">it's true, Lua is easy to build and doesn't rely on autoconf or much of anything</span></div><div class="line" id="220749"><span class="nick" style="color:#6b8072"><a href="#220749" label="[22:07:49]">&lt;muurkha&gt;</a></span><span class="message">these are among the reasons I wrote this literate programming tool in Lua: <a rel="nofollow" href="https://github.com/kragen/peg-bootstrap/blob/master/handaxeweb.lua">https://github.com/kragen/peg-bootstrap/blob/master/handaxeweb.lua</a> </span></div><div class="line" id="220756"><span class="nick" style="color:#80b1d3"><a href="#220756" label="[22:07:56]">&lt;aggi&gt;</a></span><span class="message">just a coincidence, because i moved to vis-editor (instead of Vim), and vis-editor too got some neat lua-support</span></div><div class="line" id="220810"><span class="nick" style="color:#6b8072"><a href="#220810" label="[22:08:10]">&lt;muurkha&gt;</a></span><span class="message">can you script vis-editor in Lua?</span></div><div class="line" id="220829"><span class="nick" style="color:#80b1d3"><a href="#220829" label="[22:08:29]">&lt;aggi&gt;</a></span><span class="message">oasis-linux too utilizes lua scripts for their package-managend and build-system, and alltogether this avoids MANY bootstrapping issues</span></div><div class="line" id="220856"><span class="nick" style="color:#80b1d3"><a href="#220856" label="[22:08:56]">&lt;aggi&gt;</a></span><span class="message">however, i need to move my entire patchset for tcc-toolchain specific over there, cleanup the entire oasis package tree</span></div><div class="line" id="220914"><span class="nick" style="color:#6b8072"><a href="#220914" label="[22:09:14]">&lt;muurkha&gt;</a></span><span class="message">my theory with HandAxeWeb was that literate programming doesn't have to require a lot of code</span></div><div class="line" id="220923"><span class="nick" style="color:#80b1d3"><a href="#220923" label="[22:09:23]">&lt;aggi&gt;</a></span><span class="message">because oasis contains too many components which don't pass acceptence criteria still</span></div><div class="line" id="220938"><span class="nick" style="color:#6b8072"><a href="#220938" label="[22:09:38]">&lt;muurkha&gt;</a></span><span class="message">that does sound very appealing!</span></div><div class="line" id="220944"><span class="nick" style="color:#80b1d3"><a href="#220944" label="[22:09:44]">&lt;aggi&gt;</a></span><span class="message">and, oasis moved to linux-5.16 already, while i intend to roll-back to linux-2.4 with tcc-toolchain</span></div><div class="line" id="221031"><span class="nick" style="color:#80b1d3"><a href="#221031" label="[22:10:31]">&lt;aggi&gt;</a></span><span class="message">relevant aspect with bootstrappable.org being, as said, to avoid many bootstrapping issues GNU-toolchain and GNU-buildsystem have</span></div><div class="line" id="221137"><span class="nick" style="color:#80b1d3"><a href="#221137" label="[22:11:37]">&lt;aggi&gt;</a></span><span class="message">since the lua-based scripting for package management replaces all configure/makefile based GNU clutter, that's just too appealing</span></div><div class="line" id="221209"><span class="nick" style="color:#80b1d3"><a href="#221209" label="[22:12:09]">&lt;aggi&gt;</a></span><span class="message">in recent days, i had begun tracking full removal of it, GNU-buildsystem, and as expected the entire dependency tree had fallen apart</span></div><div class="line" id="221252"><span class="nick" style="color:#80b1d3"><a href="#221252" label="[22:12:52]">&lt;aggi&gt;</a></span><span class="message">i already did remove GNU-toolchain dependencies and entirely replaced it with tcc</span></div><div class="line" id="221311"><span class="nick" style="color:#80b1d3"><a href="#221311" label="[22:13:11]">&lt;aggi&gt;</a></span><span class="message">(except for musl-libc, which is a separate mile-stone)</span></div><div class="line" id="221329"><span class="nick" style="color:#80b1d3"><a href="#221329" label="[22:13:29]">&lt;aggi&gt;</a></span><span class="message">however, the development HOST itself is rigged, with GNU-buildsystem involved</span></div><div class="line" id="221410"><span class="nick" style="color:#80b1d3"><a href="#221410" label="[22:14:10]">&lt;aggi&gt;</a></span><span class="message">for example, i will need git, and oasis linux already did re-implement the entire makefile/configure stuff, with their lua-scripts</span></div><div class="line" id="221656"><span class="nick" style="color:#80b1d3"><a href="#221656" label="[22:16:56]">&lt;aggi&gt;</a></span><span class="message">too, they already did fully integrate bearssl, netbsd-curses; and given the gcc47/c-only toolchain with gentoo-tooling remains frozen and archived</span></div><div class="line" id="221706"><span class="nick" style="color:#80b1d3"><a href="#221706" label="[22:17:06]">&lt;aggi&gt;</a></span><span class="message">i am not willing to invest any effort anymore at that frontline</span></div><div class="line" id="221730"><span class="nick" style="color:#80b1d3"><a href="#221730" label="[22:17:30]">&lt;aggi&gt;</a></span><span class="message">GNU/gentoo, that's all burned soil, impossible to salvage</span></div><div class="line" id="221842"><span class="nick" style="color:#80b1d3"><a href="#221842" label="[22:18:42]">&lt;aggi&gt;</a></span><span class="message">oasis linux package tree, is missing many relevant packages still (lynx browser, nfs-utils, isofstools, cdrecord, rsync etc. etc)</span></div><div class="line" id="221922"><span class="nick" style="color:#80b1d3"><a href="#221922" label="[22:19:22]">&lt;aggi&gt;</a></span><span class="message">however, with GNU-buildsystem remove for the tcc-toolchain profile, those components need full re-integration anyway, regardless of any package manager chosen</span></div><div class="line" id="222002"><span class="nick" style="color:#80b1d3"><a href="#222002" label="[22:20:02]">&lt;aggi&gt;</a></span><span class="message">and, of cause, oasis linux tree too is missing all patches which i maintained in my c-only tcc-profile on gentoo build-host</span></div><div class="line" id="222222"><span class="nick" style="color:#6b8072"><a href="#222222" label="[22:22:22]">&lt;muurkha&gt;</a></span><span class="message">what's the problem with GNU/Gentoo?</span></div><div class="line" id="222317"><span class="nick" style="color:#80b1d3"><a href="#222317" label="[22:23:17]">&lt;aggi&gt;</a></span><span class="message">that's two different questions, to be precise. Gentoo-specific issues (bashism, GNUism, python), and GNU itself</span></div><div class="line" id="222356"><span class="nick" style="color:#80b1d3"><a href="#222356" label="[22:23:56]">&lt;aggi&gt;</a></span><span class="message">if you accept the argument, Perl,Python,Bash must be removed, it's obvious there is no place to go with Gentoo</span></div><div class="line" id="222434"><span class="nick" style="color:#80b1d3"><a href="#222434" label="[22:24:34]">&lt;aggi&gt;</a></span><span class="message">besides the fact, i blocked at gcc47/c-only which isn't maintained with any gentoo-profile, and my overlay had blown up to 300(!!!) ebuilds i needed to track and patch</span></div><div class="line" id="222500"><span class="nick" style="color:#80b1d3"><a href="#222500" label="[22:25:00]">&lt;aggi&gt;</a></span><span class="message">this two answers the question, what the problem with any other &quot;distro&quot; was, if they needed any of the mentioned components</span></div><div class="line" id="222526"><span class="nick" style="color:#80b1d3"><a href="#222526" label="[22:25:26]">&lt;aggi&gt;</a></span><span class="message">and GNU itself</span></div><div class="line" id="222532"><span class="nick" style="color:#80b1d3"><a href="#222532" label="[22:25:32]">&lt;aggi&gt;</a></span><span class="message">*too</span></div><div class="line" id="222619"><span class="nick" style="color:#80b1d3"><a href="#222619" label="[22:26:19]">&lt;aggi&gt;</a></span><span class="message">btw.; i do not object to any &quot;progress&quot; made with GNU/linux or however you name this</span></div><div class="line" id="222630"><span class="nick" style="color:#80b1d3"><a href="#222630" label="[22:26:30]">&lt;aggi&gt;</a></span><span class="message">i object to a _stable_ development base was rigged itself</span></div><div class="line" id="222643"><span class="nick" style="color:#80b1d3"><a href="#222643" label="[22:26:43]">&lt;aggi&gt;</a></span><span class="message">including linux kernel itself</span></div><div class="line" id="222806"><span class="nick" style="color:#80b1d3"><a href="#222806" label="[22:28:06]">&lt;aggi&gt;</a></span><span class="message">blocking at gcc47/c-only is necessary, yet insufficient, since when i realized GNU-buildsystem itself (autotools/automake, pre-generated configure/makefiles) is rigged</span></div><div class="line" id="222908"><span class="nick" style="color:#6b8072"><a href="#222908" label="[22:29:08]">&lt;muurkha&gt;</a></span><span class="message">why would you want to remove Perl, Python, and Bash?  I thought you just wanted to remove C++</span></div><div class="line" id="222909"><span class="nick" style="color:#80b1d3"><a href="#222909" label="[22:29:09]">&lt;aggi&gt;</a></span><span class="message">then i swapped, to tcc-toolchain, and refined the entire dependency tree, realizing, perl-downgrade to v5.8, which doesn't cross-compile</span></div><div class="line" id="222921"><span class="nick" style="color:#80b1d3"><a href="#222921" label="[22:29:21]">&lt;aggi&gt;</a></span><span class="message">i think this was the final stroke to Perl and with it GNU buildsystem gone</span></div><div class="line" id="223001"><span class="nick" style="color:#80b1d3"><a href="#223001" label="[22:30:01]">&lt;aggi&gt;</a></span><span class="message">next one, Python: this one, besides the buildsystem clutter, relies upon ASM, which tcc-toolchain assembler couldn't digest</span></div><div class="line" id="223020"><span class="nick" style="color:#80b1d3"><a href="#223020" label="[22:30:20]">&lt;aggi&gt;</a></span><span class="message">this was the final stroke to Python (besides many other problems with it)</span></div><div class="line" id="223029"><span class="nick" style="color:#80b1d3"><a href="#223029" label="[22:30:29]">&lt;aggi&gt;</a></span><span class="message">Bash? bashism, non-posix.</span></div><div class="line" id="223111"><span class="nick" style="color:#6b8072"><a href="#223111" label="[22:31:11]">&lt;muurkha&gt;</a></span><span class="message">oh, I remember you had that problem with tcc asm before.  I wonder what the problem is</span></div><div class="line" id="223126"><span class="nick" style="color:#80b1d3"><a href="#223126" label="[22:31:26]">&lt;aggi&gt;</a></span><span class="message">none anymore, i removed python</span></div><div class="line" id="223136"><span class="nick" style="color:#6b8072"><a href="#223136" label="[22:31:36]">&lt;muurkha&gt;</a></span><span class="message">why does Python need assembly to compile?</span></div><div class="line" id="223150"><span class="nick" style="color:#80b1d3"><a href="#223150" label="[22:31:50]">&lt;aggi&gt;</a></span><span class="message">because it &quot;optimized&quot; with assembly</span></div><div class="line" id="223218"><span class="nick" style="color:#80b1d3"><a href="#223218" label="[22:32:18]">&lt;aggi&gt;</a></span><span class="message">which is ok, if it didn't need GNU binutils and with it a giant dependency graph of flawed software</span></div><div class="line" id="223234"><span class="nick" style="color:#6b8072"><a href="#223234" label="[22:32:34]">&lt;muurkha&gt;</a></span><span class="message">I mean I ported Python to NeXTStep on HPPA one time in the late 90s and I didn't have to rewrite any of it in PA-RISC assembly, though admittedly it wasn't the first HPPA port</span></div><div class="line" id="223247"><span class="nick" style="color:#6b8072"><a href="#223247" label="[22:32:47]">&lt;muurkha&gt;</a></span><span class="message">too bad I never did the work to contribute that back to the core</span></div><div class="line" id="223338"><span class="nick" style="color:#6b8072"><a href="#223338" label="[22:33:38]">&lt;muurkha&gt;</a></span><span class="message">I think that if you want to get rid of all flawed software you are going to have to start with a much more minimal set than you're imagining right now.  like, Metamath Zero, maybe, and seL4</span></div><div class="line" id="223358"><span class="nick" style="color:#80b1d3"><a href="#223358" label="[22:33:58]">&lt;aggi&gt;</a></span><span class="message">depends</span></div><div class="line" id="223411"><span class="nick" style="color:#6b8072"><a href="#223411" label="[22:34:11]">&lt;muurkha&gt;</a></span><span class="message">you'd have to bootstrap OCaml to get Coq to check the seL4 proofs</span></div><div class="line" id="223412"><span class="nick" style="color:#80b1d3"><a href="#223412" label="[22:34:12]">&lt;aggi&gt;</a></span><span class="message">i am aware of the limitations</span></div><div class="line" id="223425"><span class="nick" style="color:#80b1d3"><a href="#223425" label="[22:34:25]">&lt;aggi&gt;</a></span><span class="message">i'll certainly not bootstrap yet another interpreter</span></div><div class="line" id="223426"><span class="nick" style="color:#6b8072"><a href="#223426" label="[22:34:26]">&lt;muurkha&gt;</a></span><span class="message">but OCaml isn't really that terrible a language to write a new implementation of, I think</span></div><div class="line" id="223505"><span class="nick" style="color:#80b1d3"><a href="#223505" label="[22:35:05]">&lt;aggi&gt;</a></span><span class="message">and i won't praise lua and oasis linux yet, i only made the decision today, i'll continue efforts based on their tree and package management approach</span></div><div class="line" id="223700"><span class="nick" style="color:#6b8072"><a href="#223700" label="[22:37:00]">&lt;muurkha&gt;</a></span><span class="message">I wrote an interpreter last year for a tiny Lua-inspired language I called &quot;Caronte&quot;: <a rel="nofollow" href="http://canonical.org/~kragen/sw/dev3/caronte.py">http://canonical.org/~kragen/sw/dev3/caronte.py</a> </span></div><div class="line" id="223722"><span class="nick" style="color:#80b1d3"><a href="#223722" label="[22:37:22]">&lt;aggi&gt;</a></span><span class="message">moving my patchset to their tree, cleaning their tree from undesireable stuff, roll-back to linux-2.4, tcc-toolchain integration with oasis, musl-libc support with tcc-toolchain</span></div><div class="line" id="223739"><span class="nick" style="color:#80b1d3"><a href="#223739" label="[22:37:39]">&lt;aggi&gt;</a></span><span class="message">that's still very much work, and too it was alot of thinking, before i made that decision</span></div><div class="line" id="223746"><span class="nick" style="color:#6b8072"><a href="#223746" label="[22:37:46]">&lt;muurkha&gt;</a></span><span class="message">it only took a few hours and 212 lines of Python to get to the point where it could interpret a fractal-ASCII-art-generating program</span></div><div class="line" id="223805"><span class="nick" style="color:#6b8072"><a href="#223805" label="[22:38:05]">&lt;muurkha&gt;</a></span><span class="message">it would have been easier (and run faster) in OCaml</span></div><div class="line" id="224109"><span class="nick" style="color:#6b8072"><a href="#224109" label="[22:41:09]">&lt;muurkha&gt;</a></span><span class="message">I called it &quot;Caronte&quot; because &quot;Lua&quot; is Portuguese for &quot;moon&quot;, and &quot;Caronte&quot; is Portuguese for Charon, the moon of Pluto</span></div><div class="line" id="224145"><span class="nick" style="color:#6b8072"><a href="#224145" label="[22:41:45]">&lt;muurkha&gt;</a></span><span class="message">it's about a third the diameter of Earth's moon</span></div><div class="line" id="224208"><span class="nick" style="color:#80b1d3"><a href="#224208" label="[22:42:08]">&lt;aggi&gt;</a></span><span class="message">anyway, that's some very simple rules to follow: no-c++ dependencies nowhere, no GNU-buildsystem (autotools/automake pre-generated configure/makefile clutter)</span></div><div class="line" id="224237"><span class="nick" style="color:#80b1d3"><a href="#224237" label="[22:42:37]">&lt;aggi&gt;</a></span><span class="message">and then, see for yourself, how far to bootstrap things goes</span></div><div class="line" id="224237"><span class="nick" style="color:#6b8072"><a href="#224237" label="[22:42:37]">&lt;muurkha&gt;</a></span><span class="message">I feel like you can probably get Python and Perl to compile without C++ or autotools or automake</span></div><div class="line" id="224255"><span class="nick" style="color:#80b1d3"><a href="#224255" label="[22:42:55]">&lt;aggi&gt;</a></span><span class="message">i feel like, even if, i don't want to</span></div><div class="line" id="224310"><span class="nick" style="color:#6b8072"><a href="#224310" label="[22:43:10]">&lt;muurkha&gt;</a></span><span class="message">I mean the reason I had to do any work to get Python running on NeXTSTep on HP-PA was that it wasn't using autoconf</span></div><div class="line" id="224336"><span class="nick" style="color:#6b8072"><a href="#224336" label="[22:43:36]">&lt;muurkha&gt;</a></span><span class="message">because it was already ported to HP-UX on HP-PA and NeXTStep on m68k</span></div><div class="line" id="224351"><span class="nick" style="color:#80b1d3"><a href="#224351" label="[22:43:51]">&lt;aggi&gt;</a></span><span class="message">currently, i am in the comortable situation, of having archived a somewhat stabilized gcc47/c-only toolchain tree, together with power gentoo-tooling</span></div><div class="line" id="224402"><span class="nick" style="color:#6b8072"><a href="#224402" label="[22:44:02]">&lt;muurkha&gt;</a></span><span class="message">so if it had been using autoconf at the time, it would have just worked, but no, I had to edit it a bit</span></div><div class="line" id="224405"><span class="nick" style="color:#80b1d3"><a href="#224405" label="[22:44:05]">&lt;aggi&gt;</a></span><span class="message">and, no need anymore to upgrade this anywhere, because the upgrade paths are blocked</span></div><div class="line" id="224421"><span class="nick" style="color:#6b8072"><a href="#224421" label="[22:44:21]">&lt;muurkha&gt;</a></span><span class="message">congratulations!</span></div><div class="line" id="224446"><span class="nick" style="color:#80b1d3"><a href="#224446" label="[22:44:46]">&lt;aggi&gt;</a></span><span class="message">this archived/frozen frozen profile, should proof sufficiently stable, for another 10years, and meanwhile, i don't care</span></div><div class="line" id="224504"><span class="nick" style="color:#80b1d3"><a href="#224504" label="[22:45:04]">&lt;aggi&gt;</a></span><span class="message">if the move to oasis-linux,tcc-toolchain,linux-2.4 succeeds, that's fine, if not, i don't care anymore</span></div><div class="line" id="225135"><span class="nick" style="color:#6b8072"><a href="#225135" label="[22:51:35]">&lt;muurkha&gt;</a></span><span class="message">great!</span></div><div class="line" id="225314"><span class="nick" style="color:#80b1d3"><a href="#225314" label="[22:53:14]">&lt;aggi&gt;</a></span><span class="message">great?</span></div><div class="line" id="230032"><span class="nick" style="color:#6b8072"><a href="#230032" label="[23:00:32]">&lt;muurkha&gt;</a></span><span class="message">yeah, it sounds like you've found a promising new avenue to achieve your goals</span></div><br /></div></body></html>