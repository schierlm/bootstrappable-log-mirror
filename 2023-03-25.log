<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-03-25.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011830"><span class="nick" style="color:#389600"><a href="#011830" label="[01:18:30]">&lt;stikonas&gt;</a></span><span class="message">well, stage0 is machine code (not interpreter) and it's not an optimizing compiler</span></div><div class="line" id="131328"><span class="nick" style="color:#8dd3c7"><a href="#131328" label="[13:13:28]">&lt;oriansj&gt;</a></span><span class="message">stikonas: I was more thinking of how grateful I am that you, fossy and janneke (with help from all of our friends) managed to pull together the whole world of software together just using my little hobby. That rickmasters and Mikaku have and are doing beautiful work solving the kernel bootstrapping problem. That civodul, rekado and the whole guix team have and continue to map out the path for new and more software than one can ever</span></div><div class="line" id="131328"><span class="nick" style="color:#8dd3c7"><a href="#131328" label="[13:13:28]">&lt;oriansj&gt;</a></span><span class="message">need.</span></div><div class="line" id="131459"><span class="nick" style="color:#2e2a4a"><a href="#131459" label="[13:14:59]">&lt;janneke&gt;</a></span><span class="message">oriansj: likewise, well said</span></div><div class="line" id="131615"><span class="nick" style="color:#6b8072"><a href="#131615" label="[13:16:15]">&lt;avih&gt;</a></span><span class="message">oriansj: so what's up with the &quot;strict&quot; hex0 spec? i want to fix the hex0 sh script, but first i wanted to understand what's up with the spec. if you wanna drop it that's fine too, just let me know.</span></div><div class="line" id="131740"><span class="nick" style="color:#6b8072"><a href="#131740" label="[13:17:40]">&lt;avih&gt;</a></span><span class="message">also, even if you don't take the strict spec too, i think current spec is worth clarification in the form of more formal spec (which i have too)</span></div><div class="line" id="132000"><span class="nick" style="color:#8dd3c7"><a href="#132000" label="[13:20:00]">&lt;oriansj&gt;</a></span><span class="message">avih: sorry, yes. I like it and will be adding it and will be clarifying the hex0 standard this weekend.</span></div><div class="line" id="132021"><span class="nick" style="color:#389600"><a href="#132021" label="[13:20:21]">&lt;stikonas&gt;</a></span><span class="message">oh I'm not complaining about mes, just saying that it's probably expected that stage0-posix is much faster than mes</span></div><div class="line" id="132046"><span class="nick" style="color:#389600"><a href="#132046" label="[13:20:46]">&lt;stikonas&gt;</a></span><span class="message">interpreters are slow by nature unless they are JIT (but then they are essentially compiling stuff at runtime)</span></div><div class="line" id="132051"><span class="nick" style="color:#6b8072"><a href="#132051" label="[13:20:51]">&lt;avih&gt;</a></span><span class="message">oriansj: no worries. you mean you'll take the strict spec? or only the more formal current spec?</span></div><div class="line" id="132102"><span class="nick" style="color:#389600"><a href="#132102" label="[13:21:02]">&lt;stikonas&gt;</a></span><span class="message">and JIT is unnecessary complication for bootstrap</span></div><div class="line" id="132147"><span class="nick" style="color:#6b8072"><a href="#132147" label="[13:21:47]">&lt;avih&gt;</a></span><span class="message">gforce_de1977: what are the various tcc versions here? <a rel="nofollow" href="http://intercity-vpn.de/bootstrap/memplot-memhack-24-999M.png">http://intercity-vpn.de/bootstrap/memplot-memhack-24-999M.png</a> </span></div><div class="line" id="132159"><span class="nick" style="color:#6b8072"><a href="#132159" label="[13:21:59]">&lt;avih&gt;</a></span><span class="message">(specific commit hashes of tcc-mob? or from someplace else?)</span></div><div class="line" id="132301"><span class="nick" style="color:#8dd3c7"><a href="#132301" label="[13:23:01]">&lt;oriansj&gt;</a></span><span class="message">avih: well yes and I was thinking of writing hex0 up as a formal grammar</span></div><div class="line" id="132321"><span class="nick" style="color:#389600"><a href="#132321" label="[13:23:21]">&lt;stikonas&gt;</a></span><span class="message">avih: no, we don't use tcc-mob</span></div><div class="line" id="132336"><span class="nick" style="color:#389600"><a href="#132336" label="[13:23:36]">&lt;stikonas&gt;</a></span><span class="message">it's tcc-0.9.26 for the first build and then tcc 0.9.27 for the rest</span></div><div class="line" id="132359"><span class="nick" style="color:#389600"><a href="#132359" label="[13:23:59]">&lt;stikonas&gt;</a></span><span class="message">well, strictly speaking we build tcc 0.9.26 five times</span></div><div class="line" id="132419"><span class="nick" style="color:#389600"><a href="#132419" label="[13:24:19]">&lt;stikonas&gt;</a></span><span class="message">but it's all in one build script, so you don't see it in that graph</span></div><div class="line" id="132435"><span class="nick" style="color:#6b8072"><a href="#132435" label="[13:24:35]">&lt;avih&gt;</a></span><span class="message">stikonas: so how is tcc-0.9.27 different from tcc-0.9.27-7 for instance? where are these diffs?</span></div><div class="line" id="132531"><span class="nick" style="color:#6b8072"><a href="#132531" label="[13:25:31]">&lt;avih&gt;</a></span><span class="message">i mean, i presume there are diffs, and it's not just the same source recompiled, right?</span></div><div class="line" id="132535"><span class="nick" style="color:#389600"><a href="#132535" label="[13:25:35]">&lt;stikonas&gt;</a></span><span class="message">not sure why it's called -7 there (probably gforce_de1977 added that number to distinguish between different builds but his numbering is not sequential)</span></div><div class="line" id="132545"><span class="nick" style="color:#389600"><a href="#132545" label="[13:25:45]">&lt;stikonas&gt;</a></span><span class="message">avih: there are some patches</span></div><div class="line" id="132551"><span class="nick" style="color:#389600"><a href="#132551" label="[13:25:51]">&lt;stikonas&gt;</a></span><span class="message">but also often it is recompiling the same source</span></div><div class="line" id="132558"><span class="nick" style="color:#6b8072"><a href="#132558" label="[13:25:58]">&lt;avih&gt;</a></span><span class="message">oh</span></div><div class="line" id="132600"><span class="nick" style="color:#389600"><a href="#132600" label="[13:26:00]">&lt;stikonas&gt;</a></span><span class="message">the toolchain does matter</span></div><div class="line" id="132609"><span class="nick" style="color:#6b8072"><a href="#132609" label="[13:26:09]">&lt;avih&gt;</a></span><span class="message">what's the value in that? (recompiling)</span></div><div class="line" id="132617"><span class="nick" style="color:#389600"><a href="#132617" label="[13:26:17]">&lt;stikonas&gt;</a></span><span class="message">to fix bugs/issues</span></div><div class="line" id="132626"><span class="nick" style="color:#389600"><a href="#132626" label="[13:26:26]">&lt;stikonas&gt;</a></span><span class="message">e.g. we build musl then tcc then musl then tcc again</span></div><div class="line" id="132650"><span class="nick" style="color:#389600"><a href="#132650" label="[13:26:50]">&lt;stikonas&gt;</a></span><span class="message">if you just build musl and tcc, lots of things will still be somewhat buggy (maybe floats?)</span></div><div class="line" id="132658"><span class="nick" style="color:#6b8072"><a href="#132658" label="[13:26:58]">&lt;avih&gt;</a></span><span class="message">so the 1st tcc is with whatever libs, and a later one is with musl?</span></div><div class="line" id="132708"><span class="nick" style="color:#6b8072"><a href="#132708" label="[13:27:08]">&lt;avih&gt;</a></span><span class="message">libc*</span></div><div class="line" id="132720"><span class="nick" style="color:#389600"><a href="#132720" label="[13:27:20]">&lt;stikonas&gt;</a></span><span class="message">at least parts.rst claims that <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="132731"><span class="nick" style="color:#389600"><a href="#132731" label="[13:27:31]">&lt;stikonas&gt;</a></span><span class="message">well, let's start with mescc</span></div><div class="line" id="132756"><span class="nick" style="color:#389600"><a href="#132756" label="[13:27:56]">&lt;stikonas&gt;</a></span><span class="message">we use it to build patched tcc-0.9.26 with lots of features disabled (using -D flags)</span></div><div class="line" id="132840"><span class="nick" style="color:#6b8072"><a href="#132840" label="[13:28:40]">&lt;avih&gt;</a></span><span class="message">right</span></div><div class="line" id="132907"><span class="nick" style="color:#389600"><a href="#132907" label="[13:29:07]">&lt;stikonas&gt;</a></span><span class="message">then we rebuild it 5 more times</span></div><div class="line" id="132918"><span class="nick" style="color:#389600"><a href="#132918" label="[13:29:18]">&lt;stikonas&gt;</a></span><span class="message">each time building it with more features</span></div><div class="line" id="132935"><span class="nick" style="color:#389600"><a href="#132935" label="[13:29:35]">&lt;stikonas&gt;</a></span><span class="message">e.g. addings flags like (-D HAVE_FLOAT=1 -D HAVE_LONG_LONG=1)</span></div><div class="line" id="133001"><span class="nick" style="color:#389600"><a href="#133001" label="[13:30:01]">&lt;stikonas&gt;</a></span><span class="message">and also rebuilding mes libc each time</span></div><div class="line" id="133009"><span class="nick" style="color:#6b8072"><a href="#133009" label="[13:30:09]">&lt;avih&gt;</a></span><span class="message">fwiw, i maintain a (currently non public for no particular reason) a script which builds a reproducible tcc for windows, where you get an identical set of files on any system (win/linux/bsd/etc) starting with any compiler (gcc/clang/msvc/tcc/etc)</span></div><div class="line" id="133046"><span class="nick" style="color:#389600"><a href="#133046" label="[13:30:46]">&lt;stikonas&gt;</a></span><span class="message">then we build first version of tcc 0.9.27</span></div><div class="line" id="133112"><span class="nick" style="color:#6b8072"><a href="#133112" label="[13:31:12]">&lt;avih&gt;</a></span><span class="message">the gist is probably not unlike parts of bootstrap, where 1st it builds a native tcc which targets windows, and then uses this tcc to build a native windows tcc</span></div><div class="line" id="133112"><span class="nick" style="color:#389600"><a href="#133112" label="[13:31:12]">&lt;stikonas&gt;</a></span><span class="message">this first version is actually not patched at all</span></div><div class="line" id="133205"><span class="nick" style="color:#389600"><a href="#133205" label="[13:32:05]">&lt;stikonas&gt;</a></span><span class="message">(then we build some oldish versions of common POSIX tools</span></div><div class="line" id="133220"><span class="nick" style="color:#389600"><a href="#133220" label="[13:32:20]">&lt;stikonas&gt;</a></span><span class="message">then we build a patched tcc 0.9.27</span></div><div class="line" id="133228"><span class="nick" style="color:#389600"><a href="#133228" label="[13:32:28]">&lt;stikonas&gt;</a></span><span class="message">so we apply some patches that can help us build musl</span></div><div class="line" id="133235"><span class="nick" style="color:#6b8072"><a href="#133235" label="[13:32:35]">&lt;avih&gt;</a></span><span class="message">right</span></div><div class="line" id="133248"><span class="nick" style="color:#6b8072"><a href="#133248" label="[13:32:48]">&lt;avih&gt;</a></span><span class="message">what's the gist of the tcc patches? can they be upstreamed?</span></div><div class="line" id="133252"><span class="nick" style="color:#389600"><a href="#133252" label="[13:32:52]">&lt;stikonas&gt;</a></span><span class="message">no</span></div><div class="line" id="133307"><span class="nick" style="color:#6b8072"><a href="#133307" label="[13:33:07]">&lt;avih&gt;</a></span><span class="message">is it mainly removal of features?</span></div><div class="line" id="133307"><span class="nick" style="color:#389600"><a href="#133307" label="[13:33:07]">&lt;stikonas&gt;</a></span><span class="message">e.g. one of these patches removes an error like tcc_error_noabort(&quot;'%s' defined twice&quot;, name);</span></div><div class="line" id="133323"><span class="nick" style="color:#389600"><a href="#133323" label="[13:33:23]">&lt;stikonas&gt;</a></span><span class="message">so tcc does not error on dublicate symbols</span></div><div class="line" id="133330"><span class="nick" style="color:#389600"><a href="#133330" label="[13:33:30]">&lt;stikonas&gt;</a></span><span class="message">this is a big of a hack</span></div><div class="line" id="133335"><span class="nick" style="color:#6b8072"><a href="#133335" label="[13:33:35]">&lt;avih&gt;</a></span><span class="message">hmm</span></div><div class="line" id="133412"><span class="nick" style="color:#389600"><a href="#133412" label="[13:34:12]">&lt;stikonas&gt;</a></span><span class="message">and then we patch musl to convert weak symbols into normal symbols (thus we end up with duplicate symbols)</span></div><div class="line" id="133415"><span class="nick" style="color:#6b8072"><a href="#133415" label="[13:34:15]">&lt;avih&gt;</a></span><span class="message">i'm guessing that if done properly-ish, upstream will not reject a configuration option to help with bootstrap</span></div><div class="line" id="133430"><span class="nick" style="color:#389600"><a href="#133430" label="[13:34:30]">&lt;stikonas&gt;</a></span><span class="message">to do it properly, you should add weak symbols to tcc</span></div><div class="line" id="133449"><span class="nick" style="color:#389600"><a href="#133449" label="[13:34:49]">&lt;stikonas&gt;</a></span><span class="message">anyway, now we have tcc and musl, but for some reason it's quite buggy</span></div><div class="line" id="133453"><span class="nick" style="color:#389600"><a href="#133453" label="[13:34:53]">&lt;stikonas&gt;</a></span><span class="message">not sure what causes it</span></div><div class="line" id="133456"><span class="nick" style="color:#6b8072"><a href="#133456" label="[13:34:56]">&lt;avih&gt;</a></span><span class="message">is it part of some spec?</span></div><div class="line" id="133457"><span class="nick" style="color:#389600"><a href="#133457" label="[13:34:57]">&lt;stikonas&gt;</a></span><span class="message">possibly some bugs in mes libc</span></div><div class="line" id="133504"><span class="nick" style="color:#389600"><a href="#133504" label="[13:35:04]">&lt;stikonas&gt;</a></span><span class="message">weak symbols, yes, I think so</span></div><div class="line" id="133509"><span class="nick" style="color:#6b8072"><a href="#133509" label="[13:35:09]">&lt;avih&gt;</a></span><span class="message">c99?</span></div><div class="line" id="133517"><span class="nick" style="color:#389600"><a href="#133517" label="[13:35:17]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://en.wikipedia.org/wiki/Weak_symbol">https://en.wikipedia.org/wiki/Weak_symbol</a> </span></div><div class="line" id="133523"><span class="nick" style="color:#389600"><a href="#133523" label="[13:35:23]">&lt;stikonas&gt;</a></span><span class="message">no, that's for linkers</span></div><div class="line" id="133537"><span class="nick" style="color:#389600"><a href="#133537" label="[13:35:37]">&lt;stikonas&gt;</a></span><span class="message">in C99 it's attribute</span></div><div class="line" id="133546"><span class="nick" style="color:#6b8072"><a href="#133546" label="[13:35:46]">&lt;avih&gt;</a></span><span class="message">also, possibly musl would accept patches to make it easier to use in bootstrap</span></div><div class="line" id="133601"><span class="nick" style="color:#389600"><a href="#133601" label="[13:36:01]">&lt;stikonas&gt;</a></span><span class="message">again, even if they accept, these are older versions</span></div><div class="line" id="133606"><span class="nick" style="color:#389600"><a href="#133606" label="[13:36:06]">&lt;stikonas&gt;</a></span><span class="message">that are already released</span></div><div class="line" id="133614"><span class="nick" style="color:#389600"><a href="#133614" label="[13:36:14]">&lt;stikonas&gt;</a></span><span class="message">it's harder to build latest musl</span></div><div class="line" id="133632"><span class="nick" style="color:#389600"><a href="#133632" label="[13:36:32]">&lt;stikonas&gt;</a></span><span class="message">we build 1.1.24 (which is not too old, maybe 5 years old)</span></div><div class="line" id="133651"><span class="nick" style="color:#389600"><a href="#133651" label="[13:36:51]">&lt;stikonas&gt;</a></span><span class="message">(but much newer then bootstrap glibc that guix uses, that one is probably over 20 years old)</span></div><div class="line" id="133658"><span class="nick" style="color:#6b8072"><a href="#133658" label="[13:36:58]">&lt;avih&gt;</a></span><span class="message">right, i guess a bootstrap system does have to rely on older versions of compiler/libc. so basically you maintain these older versions?</span></div><div class="line" id="133713"><span class="nick" style="color:#389600"><a href="#133713" label="[13:37:13]">&lt;stikonas&gt;</a></span><span class="message">we don't have to maintain them anymore...</span></div><div class="line" id="133722"><span class="nick" style="color:#389600"><a href="#133722" label="[13:37:22]">&lt;stikonas&gt;</a></span><span class="message">once we build them once</span></div><div class="line" id="133732"><span class="nick" style="color:#389600"><a href="#133732" label="[13:37:32]">&lt;stikonas&gt;</a></span><span class="message">(unless we want to add e.g. riscv support of something like that)</span></div><div class="line" id="133744"><span class="nick" style="color:#389600"><a href="#133744" label="[13:37:44]">&lt;stikonas&gt;</a></span><span class="message">(but musl 1.1.24 is new enough to support riscv)</span></div><div class="line" id="133800"><span class="nick" style="color:#6b8072"><a href="#133800" label="[13:38:00]">&lt;avih&gt;</a></span><span class="message">or a bug is discovered which affects some change in the process which you deem useful</span></div><div class="line" id="133803"><span class="nick" style="color:#389600"><a href="#133803" label="[13:38:03]">&lt;stikonas&gt;</a></span><span class="message">anyway, after that we bootstrap bison/perl and autotools</span></div><div class="line" id="133815"><span class="nick" style="color:#389600"><a href="#133815" label="[13:38:15]">&lt;stikonas&gt;</a></span><span class="message">avih: well, then we apply patches</span></div><div class="line" id="133821"><span class="nick" style="color:#6b8072"><a href="#133821" label="[13:38:21]">&lt;avih&gt;</a></span><span class="message">yeah</span></div><div class="line" id="133825"><span class="nick" style="color:#389600"><a href="#133825" label="[13:38:25]">&lt;stikonas&gt;</a></span><span class="message">if we figure out what causes some bad behaviour</span></div><div class="line" id="133834"><span class="nick" style="color:#389600"><a href="#133834" label="[13:38:34]">&lt;stikonas&gt;</a></span><span class="message">once we have autotools, we can build binutils much easier</span></div><div class="line" id="133846"><span class="nick" style="color:#389600"><a href="#133846" label="[13:38:46]">&lt;stikonas&gt;</a></span><span class="message">and binutils comes with better linker and assembler than what tcc has</span></div><div class="line" id="133857"><span class="nick" style="color:#389600"><a href="#133857" label="[13:38:57]">&lt;stikonas&gt;</a></span><span class="message">so we finally get rid of that hacky weak symbols patch</span></div><div class="line" id="133902"><span class="nick" style="color:#389600"><a href="#133902" label="[13:39:02]">&lt;stikonas&gt;</a></span><span class="message">and build tcc and musl properly</span></div><div class="line" id="133931"><span class="nick" style="color:#389600"><a href="#133931" label="[13:39:31]">&lt;stikonas&gt;</a></span><span class="message">(also removes some other assembly patches that caused tcc to fail)</span></div><div class="line" id="133943"><span class="nick" style="color:#6b8072"><a href="#133943" label="[13:39:43]">&lt;avih&gt;</a></span><span class="message">&quot;Weak symbols are not mentioned by the C or C++ language standards; as such, inserting them into code is not very portable&quot;</span></div><div class="line" id="133950"><span class="nick" style="color:#6b8072"><a href="#133950" label="[13:39:50]">&lt;avih&gt;</a></span><span class="message">so i don't think it's standardized?</span></div><div class="line" id="134011"><span class="nick" style="color:#389600"><a href="#134011" label="[13:40:11]">&lt;stikonas&gt;</a></span><span class="message">well, perhaps it isn't...</span></div><div class="line" id="134037"><span class="nick" style="color:#389600"><a href="#134037" label="[13:40:37]">&lt;stikonas&gt;</a></span><span class="message">anyway, there are other patches, not just weak symbols</span></div><div class="line" id="134045"><span class="nick" style="color:#6b8072"><a href="#134045" label="[13:40:45]">&lt;avih&gt;</a></span><span class="message">stikonas: right, so basically the various tcc-0.9.27-X are the same source, possibly with different patches and/or libc, etc?</span></div><div class="line" id="134047"><span class="nick" style="color:#389600"><a href="#134047" label="[13:40:47]">&lt;stikonas&gt;</a></span><span class="message">e.g. tcc errors out on the following inline assembly &quot;jecxz 1f&quot;</span></div><div class="line" id="134055"><span class="nick" style="color:#389600"><a href="#134055" label="[13:40:55]">&lt;stikonas&gt;</a></span><span class="message">avih: indeed</span></div><div class="line" id="134101"><span class="nick" style="color:#6b8072"><a href="#134101" label="[13:41:01]">&lt;avih&gt;</a></span><span class="message">gotcha, thx.</span></div><div class="line" id="134115"><span class="nick" style="color:#389600"><a href="#134115" label="[13:41:15]">&lt;stikonas&gt;</a></span><span class="message">so I replaced it with &quot;cmp %ecx,0&quot; followed by &quot;je 1f&quot;</span></div><div class="line" id="134130"><span class="nick" style="color:#6b8072"><a href="#134130" label="[13:41:30]">&lt;avih&gt;</a></span><span class="message">hmm</span></div><div class="line" id="134201"><span class="nick" style="color:#6b8072"><a href="#134201" label="[13:42:01]">&lt;avih&gt;</a></span><span class="message">so the assembly is in musl, and it's something which tcc does not (yet?) support?</span></div><div class="line" id="134222"><span class="nick" style="color:#389600"><a href="#134222" label="[13:42:22]">&lt;stikonas&gt;</a></span><span class="message">yes, there is assembly in musl</span></div><div class="line" id="134230"><span class="nick" style="color:#389600"><a href="#134230" label="[13:42:30]">&lt;stikonas&gt;</a></span><span class="message">which is unavoidable in C library</span></div><div class="line" id="134244"><span class="nick" style="color:#6b8072"><a href="#134244" label="[13:42:44]">&lt;avih&gt;</a></span><span class="message">yeah</span></div><div class="line" id="134301"><span class="nick" style="color:#389600"><a href="#134301" label="[13:43:01]">&lt;stikonas&gt;</a></span><span class="message">it has to do some stack work on initialization. Also call syscalls</span></div><div class="line" id="134307"><span class="nick" style="color:#389600"><a href="#134307" label="[13:43:07]">&lt;stikonas&gt;</a></span><span class="message">which are not part of C</span></div><div class="line" id="134323"><span class="nick" style="color:#6b8072"><a href="#134323" label="[13:43:23]">&lt;avih&gt;</a></span><span class="message">right. i'm guessing set/longjmp too?</span></div><div class="line" id="134401"><span class="nick" style="color:#389600"><a href="#134401" label="[13:44:01]">&lt;stikonas&gt;</a></span><span class="message">don't remember this one...</span></div><div class="line" id="134406"><span class="nick" style="color:#6b8072"><a href="#134406" label="[13:44:06]">&lt;avih&gt;</a></span><span class="message">or maybe those are compiler things...</span></div><div class="line" id="134432"><span class="nick" style="color:#389600"><a href="#134432" label="[13:44:32]">&lt;stikonas&gt;</a></span><span class="message">musl patches are here <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/master/sysa/musl-1.1.24/patches">https://github.com/stikonas/live-bootstrap/tree/master/sysa/musl-1.1.24/patches</a> </span></div><div class="line" id="134527"><span class="nick" style="color:#6b8072"><a href="#134527" label="[13:45:27]">&lt;avih&gt;</a></span><span class="message">the replacement you mentioned specifically is actually part of sigsetjmp :)</span></div><div class="line" id="134549"><span class="nick" style="color:#6b8072"><a href="#134549" label="[13:45:49]">&lt;avih&gt;</a></span><span class="message">nice, the patches are fairly minimal.</span></div><div class="line" id="134626"><span class="nick" style="color:#389600"><a href="#134626" label="[13:46:26]">&lt;stikonas&gt;</a></span><span class="message">wek symbolsone isthe ugliest...</span></div><div class="line" id="134633"><span class="nick" style="color:#6b8072"><a href="#134633" label="[13:46:33]">&lt;avih&gt;</a></span><span class="message">i wasn't sure if setjmp is a libc or a compiler thing.</span></div><div class="line" id="134706"><span class="nick" style="color:#389600"><a href="#134706" label="[13:47:06]">&lt;stikonas&gt;</a></span><span class="message">and tcc patches: <a rel="nofollow" href="https://github.com/stikonas/live-bootstrap/tree/master/sysa/tcc-0.9.27/patches">https://github.com/stikonas/live-bootstrap/tree/master/sysa/tcc-0.9.27/patches</a> </span></div><div class="line" id="134709"><span class="nick" style="color:#389600"><a href="#134709" label="[13:47:09]">&lt;stikonas&gt;</a></span><span class="message">evne fewer</span></div><div class="line" id="134730"><span class="nick" style="color:#389600"><a href="#134730" label="[13:47:30]">&lt;stikonas&gt;</a></span><span class="message">static link patch is optional, we can just call tcc -static everywhere</span></div><div class="line" id="134735"><span class="nick" style="color:#6b8072"><a href="#134735" label="[13:47:35]">&lt;avih&gt;</a></span><span class="message">so that's for the 5 years old 0.9.27?</span></div><div class="line" id="134747"><span class="nick" style="color:#389600"><a href="#134747" label="[13:47:47]">&lt;stikonas&gt;</a></span><span class="message">yes</span></div><div class="line" id="134754"><span class="nick" style="color:#389600"><a href="#134754" label="[13:47:54]">&lt;stikonas&gt;</a></span><span class="message">2nd patch is probably backport from tcc-mob</span></div><div class="line" id="134856"><span class="nick" style="color:#389600"><a href="#134856" label="[13:48:56]">&lt;stikonas&gt;</a></span><span class="message">and then we use it all to build gcc 4.0.4</span></div><div class="line" id="134902"><span class="nick" style="color:#389600"><a href="#134902" label="[13:49:02]">&lt;stikonas&gt;</a></span><span class="message">but maybe we can now jump to slightly newer gcc</span></div><div class="line" id="134909"><span class="nick" style="color:#6b8072"><a href="#134909" label="[13:49:09]">&lt;avih&gt;</a></span><span class="message">new tcc version is really needed. 0.9.27 no longer builds out of the box due to usage of some gcc builtin thing which was removed since</span></div><div class="line" id="134909"><span class="nick" style="color:#389600"><a href="#134909" label="[13:49:09]">&lt;stikonas&gt;</a></span><span class="message">when we started we bootstrapped binutils 2.14</span></div><div class="line" id="134935"><span class="nick" style="color:#389600"><a href="#134935" label="[13:49:35]">&lt;stikonas&gt;</a></span><span class="message">avih: but does it matter for bootstrap?</span></div><div class="line" id="134941"><span class="nick" style="color:#389600"><a href="#134941" label="[13:49:41]">&lt;stikonas&gt;</a></span><span class="message">we don't use gcc to build it</span></div><div class="line" id="134951"><span class="nick" style="color:#389600"><a href="#134951" label="[13:49:51]">&lt;stikonas&gt;</a></span><span class="message">or do you say they'll release new version soon</span></div><div class="line" id="135000"><span class="nick" style="color:#389600"><a href="#135000" label="[13:50:00]">&lt;stikonas&gt;</a></span><span class="message">because it can't be built anymore on normal system</span></div><div class="line" id="135012"><span class="nick" style="color:#389600"><a href="#135012" label="[13:50:12]">&lt;stikonas&gt;</a></span><span class="message">having newer tcc might be useful then</span></div><div class="line" id="135026"><span class="nick" style="color:#6b8072"><a href="#135026" label="[13:50:26]">&lt;avih&gt;</a></span><span class="message">i say i hope they release a new version soon. i don't know how it affects you. if the version you have is enough then maybe not.</span></div><div class="line" id="135042"><span class="nick" style="color:#389600"><a href="#135042" label="[13:50:42]">&lt;stikonas&gt;</a></span><span class="message">anyway, I was saying we used to have binutils 2.14 but now we go straight to 2.30</span></div><div class="line" id="135051"><span class="nick" style="color:#6b8072"><a href="#135051" label="[13:50:51]">&lt;avih&gt;</a></span><span class="message">right</span></div><div class="line" id="135101"><span class="nick" style="color:#389600"><a href="#135101" label="[13:51:01]">&lt;stikonas&gt;</a></span><span class="message">so that might unblock newer kernels and gcc</span></div><div class="line" id="135119"><span class="nick" style="color:#389600"><a href="#135119" label="[13:51:19]">&lt;stikonas&gt;</a></span><span class="message">still, we should wait for rickmasters work to be merged first</span></div><div class="line" id="135256"><span class="nick" style="color:#6b8072"><a href="#135256" label="[13:52:56]">&lt;avih&gt;</a></span><span class="message">my point about tcc version was that i think it's important to be able to build newer tcc using older tcc, but currently older tcc doesn't build normally. so possibly a minor patch to work around that for 0.9.27.1 or some such, and then 0.9.28 (or 1.0) which can be built with 0.9.27[.1]</span></div><div class="line" id="135329"><span class="nick" style="color:#389600"><a href="#135329" label="[13:53:29]">&lt;stikonas&gt;</a></span><span class="message">well, I guess this might force tcc team to make a new release</span></div><div class="line" id="135345"><span class="nick" style="color:#389600"><a href="#135345" label="[13:53:45]">&lt;stikonas&gt;</a></span><span class="message">right now fossy is somewhat avoiding random tcc commits</span></div><div class="line" id="135353"><span class="nick" style="color:#389600"><a href="#135353" label="[13:53:53]">&lt;stikonas&gt;</a></span><span class="message">as anybody can push to there without any code review</span></div><div class="line" id="135357"><span class="nick" style="color:#6b8072"><a href="#135357" label="[13:53:57]">&lt;avih&gt;</a></span><span class="message">i sent an email about that to the tcc list, didn't really get a useful response...</span></div><div class="line" id="135408"><span class="nick" style="color:#389600"><a href="#135408" label="[13:54:08]">&lt;stikonas&gt;</a></span><span class="message">hmm...</span></div><div class="line" id="135439"><span class="nick" style="color:#6b8072"><a href="#135439" label="[13:54:39]">&lt;avih&gt;</a></span><span class="message">yes, everyone can push, but the main maintainer does clean up occasionally, reverts stuff, etc. so it shouldn't be overlooked</span></div><div class="line" id="135447"><span class="nick" style="color:#6b8072"><a href="#135447" label="[13:54:47]">&lt;avih&gt;</a></span><span class="message">(and others report issues etc)</span></div><div class="line" id="135500"><span class="nick" style="color:#389600"><a href="#135500" label="[13:55:00]">&lt;stikonas&gt;</a></span><span class="message">yes, so in the worst case we could switch to some checkout</span></div><div class="line" id="135510"><span class="nick" style="color:#6b8072"><a href="#135510" label="[13:55:10]">&lt;avih&gt;</a></span><span class="message">i think currently mob is quite stable</span></div><div class="line" id="135518"><span class="nick" style="color:#389600"><a href="#135518" label="[13:55:18]">&lt;stikonas&gt;</a></span><span class="message">but then 0.9.27 worked for us for now</span></div><div class="line" id="135522"><span class="nick" style="color:#6b8072"><a href="#135522" label="[13:55:22]">&lt;avih&gt;</a></span><span class="message">sure</span></div><div class="line" id="135527"><span class="nick" style="color:#389600"><a href="#135527" label="[13:55:27]">&lt;stikonas&gt;</a></span><span class="message">maybe it would be useful if we need riscv support</span></div><div class="line" id="135542"><span class="nick" style="color:#6b8072"><a href="#135542" label="[13:55:42]">&lt;avih&gt;</a></span><span class="message">where does msvc get into the picture?</span></div><div class="line" id="135542"><span class="nick" style="color:#389600"><a href="#135542" label="[13:55:42]">&lt;stikonas&gt;</a></span><span class="message">but then we need to patch tcc 0.9.26 anyway</span></div><div class="line" id="135554"><span class="nick" style="color:#6b8072"><a href="#135554" label="[13:55:54]">&lt;avih&gt;</a></span><span class="message">sorrt, i misread. riscv.</span></div><div class="line" id="135603"><span class="nick" style="color:#6b8072"><a href="#135603" label="[13:56:03]">&lt;avih&gt;</a></span><span class="message">y*</span></div><div class="line" id="135607"><span class="nick" style="color:#389600"><a href="#135607" label="[13:56:07]">&lt;stikonas&gt;</a></span><span class="message">well, if you want to bootstrap on risc-v</span></div><div class="line" id="135613"><span class="nick" style="color:#389600"><a href="#135613" label="[13:56:13]">&lt;stikonas&gt;</a></span><span class="message">live-bootstrap for now is x86 only</span></div><div class="line" id="135616"><span class="nick" style="color:#6b8072"><a href="#135616" label="[13:56:16]">&lt;avih&gt;</a></span><span class="message">right, iirc riscv was added after 0.9.27</span></div><div class="line" id="135616"><span class="nick" style="color:#389600"><a href="#135616" label="[13:56:16]">&lt;stikonas&gt;</a></span><span class="message">(not even amd64)</span></div><div class="line" id="135620"><span class="nick" style="color:#389600"><a href="#135620" label="[13:56:20]">&lt;stikonas&gt;</a></span><span class="message">indeed</span></div><div class="line" id="135636"><span class="nick" style="color:#389600"><a href="#135636" label="[13:56:36]">&lt;stikonas&gt;</a></span><span class="message">but amd64 bootstrap would probably be easy to fix once mes supports it</span></div><div class="line" id="135701"><span class="nick" style="color:#389600"><a href="#135701" label="[13:57:01]">&lt;stikonas&gt;</a></span><span class="message">for riscv, we only have support in stage0-posix for now</span></div><div class="line" id="135709"><span class="nick" style="color:#389600"><a href="#135709" label="[13:57:09]">&lt;stikonas&gt;</a></span><span class="message">but there is some work in mes too</span></div><div class="line" id="135724"><span class="nick" style="color:#6b8072"><a href="#135724" label="[13:57:24]">&lt;avih&gt;</a></span><span class="message">mes is gnu, yes?</span></div><div class="line" id="135731"><span class="nick" style="color:#389600"><a href="#135731" label="[13:57:31]">&lt;stikonas&gt;</a></span><span class="message">it is</span></div><div class="line" id="135738"><span class="nick" style="color:#389600"><a href="#135738" label="[13:57:38]">&lt;stikonas&gt;</a></span><span class="message">though it doesn't really matter too much here</span></div><div class="line" id="135744"><span class="nick" style="color:#389600"><a href="#135744" label="[13:57:44]">&lt;stikonas&gt;</a></span><span class="message">most of the components are GNU</span></div><div class="line" id="135745"><span class="nick" style="color:#6b8072"><a href="#135745" label="[13:57:45]">&lt;avih&gt;</a></span><span class="message">sue</span></div><div class="line" id="135812"><span class="nick" style="color:#389600"><a href="#135812" label="[13:58:12]">&lt;stikonas&gt;</a></span><span class="message">GCC, binutils, bash, bison/flex, autotools, tar, gzip</span></div><div class="line" id="135819"><span class="nick" style="color:#389600"><a href="#135819" label="[13:58:19]">&lt;stikonas&gt;</a></span><span class="message">oh flex might not be</span></div><div class="line" id="135826"><span class="nick" style="color:#6b8072"><a href="#135826" label="[13:58:26]">&lt;avih&gt;</a></span><span class="message">it doesn't seem like you need to, but many tools might be easier to build from alternative sources, like suckless ubase and/or sbase</span></div><div class="line" id="135831"><span class="nick" style="color:#389600"><a href="#135831" label="[13:58:31]">&lt;stikonas&gt;</a></span><span class="message">but we also build many non-gnu tools</span></div><div class="line" id="135852"><span class="nick" style="color:#389600"><a href="#135852" label="[13:58:52]">&lt;stikonas&gt;</a></span><span class="message">avih: strangely it's often harder to build</span></div><div class="line" id="135855"><span class="nick" style="color:#389600"><a href="#135855" label="[13:58:55]">&lt;stikonas&gt;</a></span><span class="message">you can try...</span></div><div class="line" id="135913"><span class="nick" style="color:#6b8072"><a href="#135913" label="[13:59:13]">&lt;avih&gt;</a></span><span class="message">some of the implementations there are wickedly clean (and posix compliant), like grep.</span></div><div class="line" id="135914"><span class="nick" style="color:#389600"><a href="#135914" label="[13:59:14]">&lt;stikonas&gt;</a></span><span class="message">but they are often minimalistic  tools and rely on full blown libc</span></div><div class="line" id="135931"><span class="nick" style="color:#6b8072"><a href="#135931" label="[13:59:31]">&lt;avih&gt;</a></span><span class="message">yes</span></div><div class="line" id="135933"><span class="nick" style="color:#389600"><a href="#135933" label="[13:59:33]">&lt;stikonas&gt;</a></span><span class="message">whereas gnu tools often have in tree implementations as they are meant to be more portable</span></div><div class="line" id="135949"><span class="nick" style="color:#389600"><a href="#135949" label="[13:59:49]">&lt;stikonas&gt;</a></span><span class="message">so we can build them with meslibc</span></div><div class="line" id="140010"><span class="nick" style="color:#6b8072"><a href="#140010" label="[14:00:10]">&lt;avih&gt;</a></span><span class="message">right</span></div><div class="line" id="140035"><span class="nick" style="color:#6b8072"><a href="#140035" label="[14:00:35]">&lt;avih&gt;</a></span><span class="message">and yes, from my experience typically suckless tools do rely heavily on useful libc</span></div><div class="line" id="140035"><span class="nick" style="color:#389600"><a href="#140035" label="[14:00:35]">&lt;stikonas&gt;</a></span><span class="message">we added a few small tools to mescc-tools-extra (part of stage0-posix)</span></div><div class="line" id="140053"><span class="nick" style="color:#389600"><a href="#140053" label="[14:00:53]">&lt;stikonas&gt;</a></span><span class="message">we found a few simple ones that were easy to simplify further</span></div><div class="line" id="140054"><span class="nick" style="color:#6b8072"><a href="#140054" label="[14:00:54]">&lt;avih&gt;</a></span><span class="message">well s/useful/compliant/</span></div><div class="line" id="140111"><span class="nick" style="color:#389600"><a href="#140111" label="[14:01:11]">&lt;stikonas&gt;</a></span><span class="message">so we have e.g. untar, ungz, unbz2 even before mes</span></div><div class="line" id="140119"><span class="nick" style="color:#389600"><a href="#140119" label="[14:01:19]">&lt;stikonas&gt;</a></span><span class="message">(also sha256sum)</span></div><div class="line" id="140122"><span class="nick" style="color:#6b8072"><a href="#140122" label="[14:01:22]">&lt;avih&gt;</a></span><span class="message">right</span></div><div class="line" id="140141"><span class="nick" style="color:#389600"><a href="#140141" label="[14:01:41]">&lt;stikonas&gt;</a></span><span class="message">they are often slower and more limitted than GNU tools</span></div><div class="line" id="140151"><span class="nick" style="color:#389600"><a href="#140151" label="[14:01:51]">&lt;stikonas&gt;</a></span><span class="message">so we replace our old tools with old gnu tools later</span></div><div class="line" id="140218"><span class="nick" style="color:#6b8072"><a href="#140218" label="[14:02:18]">&lt;avih&gt;</a></span><span class="message">i have a reasonably small base64 if you need (not public yet, but i plan to publish it). it's typically faster than coreutils base64, and much smaller</span></div><div class="line" id="140255"><span class="nick" style="color:#6b8072"><a href="#140255" label="[14:02:55]">&lt;avih&gt;</a></span><span class="message">(but equally compliant, and even supports more strict spec - canonical, which coreutils base64 does not)</span></div><div class="line" id="140306"><span class="nick" style="color:#389600"><a href="#140306" label="[14:03:06]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure if we need base64 right now...</span></div><div class="line" id="140332"><span class="nick" style="color:#389600"><a href="#140332" label="[14:03:32]">&lt;stikonas&gt;</a></span><span class="message">we used injected base64 a bit before in the early days of live-bootstrap</span></div><div class="line" id="140336"><span class="nick" style="color:#389600"><a href="#140336" label="[14:03:36]">&lt;stikonas&gt;</a></span><span class="message">initially we only had qemu mode</span></div><div class="line" id="140350"><span class="nick" style="color:#389600"><a href="#140350" label="[14:03:50]">&lt;stikonas&gt;</a></span><span class="message">so it was hard to debug stuff there</span></div><div class="line" id="140356"><span class="nick" style="color:#389600"><a href="#140356" label="[14:03:56]">&lt;stikonas&gt;</a></span><span class="message">e.g. if something is not reproducible</span></div><div class="line" id="140406"><span class="nick" style="color:#389600"><a href="#140406" label="[14:04:06]">&lt;stikonas&gt;</a></span><span class="message">we had to dump it out</span></div><div class="line" id="140416"><span class="nick" style="color:#389600"><a href="#140416" label="[14:04:16]">&lt;stikonas&gt;</a></span><span class="message">but by now, we have an easier way</span></div><div class="line" id="140429"><span class="nick" style="color:#6b8072"><a href="#140429" label="[14:04:29]">&lt;avih&gt;</a></span><span class="message">that's the source <a rel="nofollow" href="https://0x0.st/Hou9.txt">https://0x0.st/Hou9.txt</a>  but the url is 404 for now, till i push it.</span></div><div class="line" id="140445"><span class="nick" style="color:#389600"><a href="#140445" label="[14:04:45]">&lt;stikonas&gt;</a></span><span class="message">(just let it run further till it builds linux kernel and mounts disk image)</span></div><div class="line" id="140449"><span class="nick" style="color:#6b8072"><a href="#140449" label="[14:04:49]">&lt;avih&gt;</a></span><span class="message">(i didn't even add the license/copyright block, but it would be MIT)</span></div><div class="line" id="140601"><span class="nick" style="color:#389600"><a href="#140601" label="[14:06:01]">&lt;stikonas&gt;</a></span><span class="message">this is something that I guess  would build with tcc. Wouldn't build with M2-Planet right now but might be easy to fix it (get rid of switch/case and ++ -- stuff, possibly a few other things)</span></div><div class="line" id="140618"><span class="nick" style="color:#389600"><a href="#140618" label="[14:06:18]">&lt;stikonas&gt;</a></span><span class="message">still, I don't recall any use of base64 in bootstrapping right now</span></div><div class="line" id="140745"><span class="nick" style="color:#6b8072"><a href="#140745" label="[14:07:45]">&lt;avih&gt;</a></span><span class="message">sure</span></div><div class="line" id="141043"><span class="nick" style="color:#389600"><a href="#141043" label="[14:10:43]">&lt;stikonas&gt;</a></span><span class="message">we could do with something simple to build than bash</span></div><div class="line" id="141054"><span class="nick" style="color:#389600"><a href="#141054" label="[14:10:54]">&lt;stikonas&gt;</a></span><span class="message">but that might come to us in the form of gash</span></div><div class="line" id="141142"><span class="nick" style="color:#389600"><a href="#141142" label="[14:11:42]">&lt;stikonas&gt;</a></span><span class="message">there is some work going on to get it to run on mes: <a rel="nofollow" href="https://git.savannah.nongnu.org/cgit/gash.git/log/?h=wip-modular-mes">https://git.savannah.nongnu.org/cgit/gash.git/log/?h=wip-modular-mes</a> </span></div><div class="line" id="141144"><span class="nick" style="color:#6b8072"><a href="#141144" label="[14:11:44]">&lt;avih&gt;</a></span><span class="message">you mean shell?</span></div><div class="line" id="141152"><span class="nick" style="color:#6b8072"><a href="#141152" label="[14:11:52]">&lt;avih&gt;</a></span><span class="message">(not familiar with gasg)</span></div><div class="line" id="141156"><span class="nick" style="color:#6b8072"><a href="#141156" label="[14:11:56]">&lt;avih&gt;</a></span><span class="message">gash*</span></div><div class="line" id="141324"><span class="nick" style="color:#389600"><a href="#141324" label="[14:13:24]">&lt;stikonas&gt;</a></span><span class="message">yes, shell</span></div><div class="line" id="141335"><span class="nick" style="color:#389600"><a href="#141335" label="[14:13:35]">&lt;stikonas&gt;</a></span><span class="message">gash is some implementation of shell in Scheme</span></div><div class="line" id="141345"><span class="nick" style="color:#389600"><a href="#141345" label="[14:13:45]">&lt;stikonas&gt;</a></span><span class="message">guix uses it quite a bit</span></div><div class="line" id="141436"><span class="nick" style="color:#6b8072"><a href="#141436" label="[14:14:36]">&lt;avih&gt;</a></span><span class="message">right. is it posix compliant? or some minimal thing?</span></div><div class="line" id="141511"><span class="nick" style="color:#389600"><a href="#141511" label="[14:15:11]">&lt;stikonas&gt;</a></span><span class="message">I think it's good enough to run ./configure scripts</span></div><div class="line" id="141515"><span class="nick" style="color:#6b8072"><a href="#141515" label="[14:15:15]">&lt;avih&gt;</a></span><span class="message">(i think i have connectivity issues maybe? i can't reach that git url)</span></div><div class="line" id="141516"><span class="nick" style="color:#389600"><a href="#141516" label="[14:15:16]">&lt;stikonas&gt;</a></span><span class="message">so must be reasonably good</span></div><div class="line" id="141530"><span class="nick" style="color:#389600"><a href="#141530" label="[14:15:30]">&lt;stikonas&gt;</a></span><span class="message">(though also very slow)</span></div><div class="line" id="141559"><span class="nick" style="color:#389600"><a href="#141559" label="[14:15:59]">&lt;stikonas&gt;</a></span><span class="message">in principle, we could solve our license compatibility issues if we can run musl configure script (and this one is smaller handwritten script, not generated by autoconf)</span></div><div class="line" id="141604"><span class="nick" style="color:#6b8072"><a href="#141604" label="[14:16:04]">&lt;avih&gt;</a></span><span class="message">yeah, it's probably useful, though autotools configure is known to cater also for older shells, so it doesn't strictly require posix</span></div><div class="line" id="141619"><span class="nick" style="color:#389600"><a href="#141619" label="[14:16:19]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/bminor/musl/blob/master/configure">https://github.com/bminor/musl/blob/master/configure</a> </span></div><div class="line" id="141749"><span class="nick" style="color:#389600"><a href="#141749" label="[14:17:49]">&lt;stikonas&gt;</a></span><span class="message">but this is far beyond capabilities of our minimal kaem shell</span></div><div class="line" id="141857"><span class="nick" style="color:#6b8072"><a href="#141857" label="[14:18:57]">&lt;avih&gt;</a></span><span class="message">yeah, this configure would need a fairly good shell</span></div><div class="line" id="141908"><span class="nick" style="color:#6b8072"><a href="#141908" label="[14:19:08]">&lt;avih&gt;</a></span><span class="message">is this gash? <a rel="nofollow" href="https://github.com/szos/gash">https://github.com/szos/gash</a> </span></div><div class="line" id="141924"><span class="nick" style="color:#389600"><a href="#141924" label="[14:19:24]">&lt;stikonas&gt;</a></span><span class="message">looks like it. but an old fork</span></div><div class="line" id="142007"><span class="nick" style="color:#6b8072"><a href="#142007" label="[14:20:07]">&lt;avih&gt;</a></span><span class="message">damn, for some reason i just can't reach <a rel="nofollow" href="https://savannah.nongnu.org/">https://savannah.nongnu.org/</a>  does it work for you?</span></div><div class="line" id="142009"><span class="nick" style="color:#389600"><a href="#142009" label="[14:20:09]">&lt;stikonas&gt;</a></span><span class="message">actually I'm not sure if it's the same gash</span></div><div class="line" id="142019"><span class="nick" style="color:#389600"><a href="#142019" label="[14:20:19]">&lt;stikonas&gt;</a></span><span class="message">let me see if they have another mirror</span></div><div class="line" id="142025"><span class="nick" style="color:#389600"><a href="#142025" label="[14:20:25]">&lt;stikonas&gt;</a></span><span class="message">nongnu.org works for me</span></div><div class="line" id="142137"><span class="nick" style="color:#389600"><a href="#142137" label="[14:21:37]">&lt;stikonas&gt;</a></span><span class="message">avih: I can fork it somewhere for you</span></div><div class="line" id="142222"><span class="nick" style="color:#6b8072"><a href="#142222" label="[14:22:22]">&lt;avih&gt;</a></span><span class="message">nah, no need, thanks. it's probably this <a rel="nofollow" href="https://savannah.nongnu.org/projects/gash/">https://savannah.nongnu.org/projects/gash/</a> </span></div><div class="line" id="142244"><span class="nick" style="color:#6b8072"><a href="#142244" label="[14:22:44]">&lt;avih&gt;</a></span><span class="message">not sure what's up with the connectivity though...</span></div><div class="line" id="142333"><span class="nick" style="color:#6b8072"><a href="#142333" label="[14:23:33]">&lt;avih&gt;</a></span><span class="message">whatever.</span></div><div class="line" id="142350"><span class="nick" style="color:#389600"><a href="#142350" label="[14:23:50]">&lt;stikonas&gt;</a></span><span class="message">avih: <a rel="nofollow" href="https://git.stikonas.eu/andrius/gash">https://git.stikonas.eu/andrius/gash</a> </span></div><div class="line" id="142421"><span class="nick" style="color:#6b8072"><a href="#142421" label="[14:24:21]">&lt;avih&gt;</a></span><span class="message">thanks. now i can see that :)</span></div><div class="line" id="142444"><span class="nick" style="color:#6b8072"><a href="#142444" label="[14:24:44]">&lt;avih&gt;</a></span><span class="message">very cool. &quot;Gash is a POSIX-compatible shell written in Guile Scheme&quot;</span></div><div class="line" id="142550"><span class="nick" style="color:#6b8072"><a href="#142550" label="[14:25:50]">&lt;avih&gt;</a></span><span class="message">i wouldn't call guile light i think. what's the value of using it over dash or some such?</span></div><div class="line" id="142550"><span class="nick" style="color:#389600"><a href="#142550" label="[14:25:50]">&lt;stikonas&gt;</a></span><span class="message">tsample is sometimes here on this channel but very rarely</span></div><div class="line" id="190303"><span class="nick" style="color:#80b1d3"><a href="#190303" label="[19:03:03]">&lt;gforce_de1977&gt;</a></span><span class="message">avih: @oriansj: interesting catch: yes, the numbers behind the package-name is in fact sequential over all packages. for some reasing (?) it starts with flex-2.5.11-X where X is 1 and each package after it raises the number. I once had it hacked into a giant script: <a rel="nofollow" href="https://github.com/bittorf/kritis-linux/blob/main/minilinux.sh#L689">https://github.com/bittorf/kritis-linux/blob/main/minilinux.sh#L689</a>  and till bash-2.05b it was without number, after that with</span></div><div class="line" id="190309"><span class="nick" style="color:#80b1d3"><a href="#190309" label="[19:03:09]">&lt;gforce_de1977&gt;</a></span><span class="message">a numbers: ugly - sorry for that 8-)</span></div><div class="line" id="194957"><span class="nick" style="color:#6d2462"><a href="#194957" label="[19:49:57]">&lt;rickmasters&gt;</a></span><span class="message">gforce_de1977: re: your question a few days ago. I've made changes to support a 1400MB (MB=1024*1024) ram drive on Fiwix.</span></div><div class="line" id="195034"><span class="nick" style="color:#6d2462"><a href="#195034" label="[19:50:34]">&lt;rickmasters&gt;</a></span><span class="message">However, I'm working on moving to using a disk drive for the Fiwix phase so its probably not relevant.</span></div><div class="line" id="195146"><span class="nick" style="color:#6d2462"><a href="#195146" label="[19:51:46]">&lt;rickmasters&gt;</a></span><span class="message">The changes to Fiwix for very large ram drives were something I'd rather avoid and we can reduce memory usage by using a disk.</span></div><div class="line" id="195409"><span class="nick" style="color:#6d2462"><a href="#195409" label="[19:54:09]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: regarding the kexec for Fiwix, I'm not sure Linux will work with the mechanism you're building.</span></div><div class="line" id="195453"><span class="nick" style="color:#6d2462"><a href="#195453" label="[19:54:53]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: But it will probably be a good starting point to learn from and hopefully adapt to Linux.</span></div><div class="line" id="195545"><span class="nick" style="color:#6d2462"><a href="#195545" label="[19:55:45]">&lt;rickmasters&gt;</a></span><span class="message">For everyone the kernel bootstrap is on hold until I debug problems I ran into when trying to change the Fiwix phase from ram drive to disk drive.</span></div><div class="line" id="195743"><span class="nick" style="color:#234e69"><a href="#195743" label="[19:57:43]">&lt;aggi&gt;</a></span><span class="message">greetings</span></div><div class="line" id="195803"><span class="nick" style="color:#6c3d55"><a href="#195803" label="[19:58:03]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: I'm now consolidating to boot Fiwix using kexec, then I'll try with Linux. I've already made some testings already trying to boot Linux but all them were unsuccessful</span></div><div class="line" id="195810"><span class="nick" style="color:#234e69"><a href="#195810" label="[19:58:10]">&lt;aggi&gt;</a></span><span class="message">apropros kernel bootstrap... i digged out some old linux-2.4, and try to revive tcc-compiler with it</span></div><div class="line" id="195833"><span class="nick" style="color:#6c3d55"><a href="#195833" label="[19:58:33]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: it looks like Linux wants some type of information be passed in some way that I need to learn</span></div><div class="line" id="195911"><span class="nick" style="color:#6d2462"><a href="#195911" label="[19:59:11]">&lt;rickmasters&gt;</a></span><span class="message">aggi: I have to admit the thought of that has crossed my mind but I've gone so far with Fiwix that I'd really rather not go back.</span></div><div class="line" id="195929"><span class="nick" style="color:#234e69"><a href="#195929" label="[19:59:29]">&lt;aggi&gt;</a></span><span class="message">newer kernel version, got too many issues</span></div><div class="line" id="195938"><span class="nick" style="color:#6c3d55"><a href="#195938" label="[19:59:38]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: I'm a bit concerned with the problems you say you have with disk drives in Fiwix, I'm using it daily and it's pretty stable</span></div><div class="line" id="200026"><span class="nick" style="color:#6d2462"><a href="#200026" label="[20:00:26]">&lt;rickmasters&gt;</a></span><span class="message">aggi: The state of building Linux with tcc was bad. Real bad. So I just gave up and took a different path.</span></div><div class="line" id="200036"><span class="nick" style="color:#234e69"><a href="#200036" label="[20:00:36]">&lt;aggi&gt;</a></span><span class="message">with linux-2.4/tcc-compiler: it compiles (except for tiny bootsect.S parts fed into binutils for 16 bit realmode asm), and it boots, and it crashes... currently</span></div><div class="line" id="200057"><span class="nick" style="color:#234e69"><a href="#200057" label="[20:00:57]">&lt;aggi&gt;</a></span><span class="message">yes, that's what i am working on, it's nasty, to debug</span></div><div class="line" id="200131"><span class="nick" style="color:#6c3d55"><a href="#200131" label="[20:01:31]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: I'll do all my best on Fiwix to help you to not regret this path :-)</span></div><div class="line" id="200204"><span class="nick" style="color:#6d2462"><a href="#200204" label="[20:02:04]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I'm trying to narrow down the problem enough and/or give you a way to reproduce it.</span></div><div class="line" id="200246"><span class="nick" style="color:#6c3d55"><a href="#200246" label="[20:02:46]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: ok, thanks</span></div><div class="line" id="200336"><span class="nick" style="color:#6d2462"><a href="#200336" label="[20:03:36]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: My fork still has a lot of stuff not in your tree and live-bootstrap is huge so it would be a lot to dump on you.</span></div><div class="line" id="200430"><span class="nick" style="color:#6d2462"><a href="#200430" label="[20:04:30]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: Basically, qemu exits when it gets to unpacking binutils-2.30 although I've seen qemu exit in other places.</span></div><div class="line" id="200433"><span class="nick" style="color:#6c3d55"><a href="#200433" label="[20:04:33]">&lt;Mikaku&gt;</a></span><span class="message">I hope God will help me when you make this dump on me</span></div><div class="line" id="200542"><span class="nick" style="color:#6d2462"><a href="#200542" label="[20:05:42]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: Yeah it would be totally different from what you're use to with FiwixOS and all the tools you use.</span></div><div class="line" id="200759"><span class="nick" style="color:#6d2462"><a href="#200759" label="[20:07:59]">&lt;rickmasters&gt;</a></span><span class="message">But I should say the recent few weeks of delay are related to me not putting as much time into this. It's not that I'm stuck.</span></div><div class="line" id="200848"><span class="nick" style="color:#6c3d55"><a href="#200848" label="[20:08:48]">&lt;Mikaku&gt;</a></span><span class="message">good to know</span></div><div class="line" id="200941"><span class="nick" style="color:#6d2462"><a href="#200941" label="[20:09:41]">&lt;rickmasters&gt;</a></span><span class="message">This work of moving to a hard drive is just not as fun because I'm reworking existing functionality rather than blazing new bootstrapping territory.</span></div><br /></div></body></html>