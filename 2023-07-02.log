<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-07-02.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001227"><span class="nick" style="color:#389600"><a href="#001227" label="[00:12:27]">&lt;mihi&gt;</a></span><span class="message">oriansj, unfortunately did not find time to grab <a rel="nofollow" href="https://logs.guix.gnu.org/bootstrappable/2023-06-30.log#015657">https://logs.guix.gnu.org/bootstrappable/2023-06-30.log#015657</a>  before the link expired...</span></div><div class="line" id="004929"><span class="nick" style="color:#389600"><a href="#004929" label="[00:49:29]">&lt;mihi&gt;</a></span><span class="message">oriansj, never mind, I noticed it's available at SWH: &lt;<a rel="nofollow" href="https://archive.softwareheritage.org/browse/origin/directory/?origin_url=https://github.com/lugon/META-II">https://archive.softwareheritage.org/browse/origin/directory/?origin_url=https://github.com/lugon/META-II</a>&gt; </span></div><div class="line" id="063856"><span class="nick" style="color:#8dd3c7"><a href="#063856" label="[06:38:56]">&lt;pabs3&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/ziglang/zig/issues/16270">https://github.com/ziglang/zig/issues/16270</a>  <a rel="nofollow" href="https://news.ycombinator.com/item?id=36529456">https://news.ycombinator.com/item?id=36529456</a> </span></div><div class="line" id="063921"><span class="nick" style="color:#8dd3c7"><a href="#063921" label="[06:39:21]">&lt;pabs3&gt;</a></span><span class="message">Zig moving away from LLVM, among the advantages: &quot;The compiler becomes trivial to build from source and to bootstrap with only a C compiler on the host system.&quot;</span></div><div class="line" id="075607"><span class="nick" style="color:#2e2a4a"><a href="#075607" label="[07:56:07]">&lt;muurkha&gt;</a></span><span class="message">:)</span></div><div class="line" id="075640"><span class="nick" style="color:#2e2a4a"><a href="#075640" label="[07:56:40]">&lt;muurkha&gt;</a></span><span class="message">hooray softwareheritage</span></div><div class="line" id="111610"><span class="nick" style="color:#6b8072"><a href="#111610" label="[11:16:10]">&lt;stikonas[m]&gt;</a></span><span class="message">pabs3: I think that's incorrect...</span></div><div class="line" id="111649"><span class="nick" style="color:#6b8072"><a href="#111649" label="[11:16:49]">&lt;stikonas[m]&gt;</a></span><span class="message">They'll still have zig code in zig and will generate C file that they'll commit to repo</span></div><div class="line" id="111719"><span class="nick" style="color:#6b8072"><a href="#111719" label="[11:17:19]">&lt;stikonas[m]&gt;</a></span><span class="message">This is only about removing dependency on C++ compiler</span></div><div class="line" id="114858"><span class="nick" style="color:#6b8072"><a href="#114858" label="[11:48:58]">&lt;stikonas[m]&gt;</a></span><span class="message">Or possibly WASM instead of C but the point stands...</span></div><div class="line" id="115154"><span class="nick" style="color:#2e2a4a"><a href="#115154" label="[11:51:54]">&lt;muurkha&gt;</a></span><span class="message">WAT</span></div><div class="line" id="115212"><span class="nick" style="color:#2e2a4a"><a href="#115212" label="[11:52:12]">&lt;muurkha&gt;</a></span><span class="message">(maybe)</span></div><div class="line" id="124226"><span class="nick" style="color:#8dd3c7"><a href="#124226" label="[12:42:26]">&lt;pabs3&gt;</a></span><span class="message">hmm, I thought zig didn't have generated C code</span></div><div class="line" id="125258"><span class="nick" style="color:#80b1d3"><a href="#125258" label="[12:52:58]">&lt;stikonas&gt;</a></span><span class="message">well, zig itself is just zig</span></div><div class="line" id="125317"><span class="nick" style="color:#80b1d3"><a href="#125317" label="[12:53:17]">&lt;stikonas&gt;</a></span><span class="message">but as far as I understand zig has various output backends</span></div><div class="line" id="125329"><span class="nick" style="color:#80b1d3"><a href="#125329" label="[12:53:29]">&lt;stikonas&gt;</a></span><span class="message">i.e. it can generate C code or webassmebly</span></div><div class="line" id="125353"><span class="nick" style="color:#80b1d3"><a href="#125353" label="[12:53:53]">&lt;stikonas&gt;</a></span><span class="message">so their bootstrap path is basically run zig compiler on zig source code and output WASM</span></div><div class="line" id="125405"><span class="nick" style="color:#80b1d3"><a href="#125405" label="[12:54:05]">&lt;stikonas&gt;</a></span><span class="message">then tell others to use that WASM binary too bootstrap zig on new platforms</span></div><div class="line" id="125413"><span class="nick" style="color:#80b1d3"><a href="#125413" label="[12:54:13]">&lt;stikonas&gt;</a></span><span class="message">(or on systems without zig compiler)</span></div><div class="line" id="125519"><span class="nick" style="color:#80b1d3"><a href="#125519" label="[12:55:19]">&lt;stikonas&gt;</a></span><span class="message">that might remove some practical problems for people compiling zig on the new machine, but it is in not bootstrapping in our sense</span></div><div class="line" id="125622"><span class="nick" style="color:#80b1d3"><a href="#125622" label="[12:56:22]">&lt;stikonas&gt;</a></span><span class="message">in a sense it's not so different from saying you can bootstrap gcc if you have x86 virtual machine, just need to run gcc binary in it</span></div><div class="line" id="150017"><span class="nick" style="color:#6d2462"><a href="#150017" label="[15:00:17]">&lt;fossy&gt;</a></span><span class="message">hey, oriansj (or anyone else who knows), is any way in M2-Planet to have two structs that have a member of each other? (eg struct a {struct b *b;}; struct b {struct a *a;}; -- is there any way to do that?)</span></div><div class="line" id="152211"><span class="nick" style="color:#234e69"><a href="#152211" label="[15:22:11]">&lt;kerravon&gt;</a></span><span class="message">oriansj - thanks for that comparison of paper tape vs punched cards. sounds like i need to switch to paper tape</span></div><div class="line" id="152225"><span class="nick" style="color:#234e69"><a href="#152225" label="[15:22:25]">&lt;kerravon&gt;</a></span><span class="message">(i read your pastebin)</span></div><div class="line" id="155126"><span class="nick" style="color:#234e69"><a href="#155126" label="[15:51:26]">&lt;kerravon&gt;</a></span><span class="message">hmmm. maybe not. maybe i'll write some basic OCR software instead and make use of photocopiers</span></div><div class="line" id="155301"><span class="nick" style="color:#234e69"><a href="#155301" label="[15:53:01]">&lt;kerravon&gt;</a></span><span class="message">i would put it in lowercase hex</span></div><div class="line" id="155344"><span class="nick" style="color:#234e69"><a href="#155344" label="[15:53:44]">&lt;kerravon&gt;</a></span><span class="message">how many characters would i get on an A4 page using a good fixed width font?</span></div><div class="line" id="160006"><span class="nick" style="color:#80b1d3"><a href="#160006" label="[16:00:06]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think it should work</span></div><div class="line" id="160022"><span class="nick" style="color:#80b1d3"><a href="#160022" label="[16:00:22]">&lt;stikonas&gt;</a></span><span class="message">fossy: at least in the latest master</span></div><div class="line" id="160047"><span class="nick" style="color:#80b1d3"><a href="#160047" label="[16:00:47]">&lt;stikonas&gt;</a></span><span class="message">have you tried and something didn't work?</span></div><div class="line" id="160145"><span class="nick" style="color:#80b1d3"><a href="#160145" label="[16:01:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: though we don't test it in M2-Planet test suite</span></div><div class="line" id="160148"><span class="nick" style="color:#80b1d3"><a href="#160148" label="[16:01:48]">&lt;stikonas&gt;</a></span><span class="message">so it might be broken...</span></div><div class="line" id="160156"><span class="nick" style="color:#80b1d3"><a href="#160156" label="[16:01:56]">&lt;stikonas&gt;</a></span><span class="message">we only have <a rel="nofollow" href="https://github.com/oriansj/M2-Planet/blob/master/test/test0029/member_access.c">https://github.com/oriansj/M2-Planet/blob/master/test/test0029/member_access.c</a> </span></div><div class="line" id="163019"><span class="nick" style="color:#6c3d55"><a href="#163019" label="[16:30:19]">&lt;oriansj&gt;</a></span><span class="message">fossy: well M2-Planet can only use types it knows of to include a type in a struct definition. so if you define B first, you can include B (or a pointer to B) in A but as A is not defined yet, you can't include A in B but if you use void pointers; and do something like struct A* temp = obj-&gt;A_object; you can kinda work around it</span></div><div class="line" id="163604"><span class="nick" style="color:#6c3d55"><a href="#163604" label="[16:36:04]">&lt;oriansj&gt;</a></span><span class="message">like struct B {void* A_object; ...}; and you can always do struct B* foo = calloc(1, struct B); foo-&gt;A_object = calloc(1, struct A); sort of deal</span></div><div class="line" id="163735"><span class="nick" style="color:#6c3d55"><a href="#163735" label="[16:37:35]">&lt;oriansj&gt;</a></span><span class="message">honestly you can have hundreds of types sharing the same void* but that is just bad programming.</span></div><div class="line" id="170007"><span class="nick" style="color:#d9d9d9"><a href="#170007" label="[17:00:07]">&lt;nimaje&gt;</a></span><span class="message">does M2-Planet support forward declarations? that way you could have a correctly typed pointer instead of a void*</span></div><div class="line" id="171523"><span class="nick" style="color:#80b1d3"><a href="#171523" label="[17:15:23]">&lt;stikonas&gt;</a></span><span class="message">at least for functions it does support forward declarations</span></div><div class="line" id="171528"><span class="nick" style="color:#80b1d3"><a href="#171528" label="[17:15:28]">&lt;stikonas&gt;</a></span><span class="message">but maybe not for structs...</span></div><div class="line" id="172446"><span class="nick" style="color:#6c3d55"><a href="#172446" label="[17:24:46]">&lt;oriansj&gt;</a></span><span class="message">nimaje: in regards to functions absolutely, in regards to structs; there hasn't been any justifiable need to add that yet but if a suitable example exists, it wouldn't be hard to add</span></div><div class="line" id="191326"><span class="nick" style="color:#2e2a4a"><a href="#191326" label="[19:13:26]">&lt;muurkha&gt;</a></span><span class="message">kerravon: a standard 12-point typewriter font traditionally gets you 80×66 on US-letter or A4 paper, with some margins</span></div><div class="line" id="191424"><span class="nick" style="color:#2e2a4a"><a href="#191424" label="[19:14:24]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/za3k/qr-backup">https://github.com/za3k/qr-backup</a>  found that you can't reliably get 600 dpi out of a 600 dpi printer, more like 150 dpi normally</span></div><div class="line" id="191718"><span class="nick" style="color:#2e2a4a"><a href="#191718" label="[19:17:18]">&lt;muurkha&gt;</a></span><span class="message">150 dpi is 1240×1754 pixels on A4 paper without margins; with a 4×6 font such as <a rel="nofollow" href="http://canonical.org/~kragen/sw/dofonts-1k">http://canonical.org/~kragen/sw/dofonts-1k</a>  (ugly but readable) that's 310×292 without margins</span></div><div class="line" id="192903"><span class="nick" style="color:#2e2a4a"><a href="#192903" label="[19:29:03]">&lt;muurkha&gt;</a></span><span class="message">so about 90 kilobytes per page</span></div><div class="line" id="194850"><span class="nick" style="color:#2e2a4a"><a href="#194850" label="[19:48:50]">&lt;muurkha&gt;</a></span><span class="message">kerravon: is that the information you were looking for?</span></div><div class="line" id="195207"><span class="nick" style="color:#2e2a4a"><a href="#195207" label="[19:52:07]">&lt;muurkha&gt;</a></span><span class="message">I'd recommend putting several letters of Reed-Solomon coding per line and per column to enable correction of inevitable OCR errors, on the theory that Reed-Solomon coding is powerful enough and simple enough</span></div><div class="line" id="204050"><span class="nick" style="color:#80b1d3"><a href="#204050" label="[20:40:50]">&lt;stikonas&gt;</a></span><span class="message">janneke: are mescc C tests only meant to work under mescc?</span></div><div class="line" id="204110"><span class="nick" style="color:#80b1d3"><a href="#204110" label="[20:41:10]">&lt;stikonas&gt;</a></span><span class="message">i.e. gcc built binaries are not expected to run</span></div><div class="line" id="204159"><span class="nick" style="color:#80b1d3"><a href="#204159" label="[20:41:59]">&lt;stikonas&gt;</a></span><span class="message">e.g. that <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/tests/scaffold/21-char-array.c#n29">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/tests/scaffold/21-char-array.c#n29</a>  has uninitialized read on line if (!s[f])</span></div><div class="line" id="204745"><span class="nick" style="color:#bc80bd"><a href="#204745" label="[20:47:45]">&lt;janneke&gt;</a></span><span class="message">stikonas: no, the tests should also run with gcc</span></div><div class="line" id="204836"><span class="nick" style="color:#bc80bd"><a href="#204836" label="[20:48:36]">&lt;janneke&gt;</a></span><span class="message"> /msg chanserv deop #bootstrappable</span></div><div class="line" id="204844"><span class="nick" style="color:#bc80bd"><a href="#204844" label="[20:48:44]">&lt;janneke&gt;</a></span><span class="message">sigh</span></div><div class="line" id="204916"><span class="nick" style="color:#bc80bd"><a href="#204916" label="[20:49:16]">&lt;janneke&gt;</a></span><span class="message">stikonas: hmm right, f is not initialized and could contain garbage under gcc</span></div><div class="line" id="204945"><span class="nick" style="color:#bc80bd"><a href="#204945" label="[20:49:45]">&lt;janneke&gt;</a></span><span class="message">not sure why that hasn't been a problem before</span></div><div class="line" id="205002"><span class="nick" style="color:#6b8072"><a href="#205002" label="[20:50:02]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, strange</span></div><div class="line" id="205011"><span class="nick" style="color:#6b8072"><a href="#205011" label="[20:50:11]">&lt;stikonas[m]&gt;</a></span><span class="message">But the test should be fixed...</span></div><div class="line" id="205302"><span class="nick" style="color:#80b1d3"><a href="#205302" label="[20:53:02]">&lt;stikonas&gt;</a></span><span class="message">janneke: the next test in your list does the same thing</span></div><div class="line" id="205315"><span class="nick" style="color:#80b1d3"><a href="#205315" label="[20:53:15]">&lt;stikonas&gt;</a></span><span class="message">(50-assert.c)</span></div><div class="line" id="205341"><span class="nick" style="color:#80b1d3"><a href="#205341" label="[20:53:41]">&lt;stikonas&gt;</a></span><span class="message">it defines int f; and then does assert (f == 0);</span></div><div class="line" id="205416"><span class="nick" style="color:#80b1d3"><a href="#205416" label="[20:54:16]">&lt;stikonas&gt;</a></span><span class="message">thouh 70-extern.c seems good</span></div><div class="line" id="210728"><span class="nick" style="color:#bc80bd"><a href="#210728" label="[21:07:28]">&lt;janneke&gt;</a></span><span class="message">stikonas: yes, sure</span></div><div class="line" id="211030"><span class="nick" style="color:#bc80bd"><a href="#211030" label="[21:10:30]">&lt;janneke&gt;</a></span><span class="message">ACTION adds &quot; = 0&quot; to those two tests</span></div><div class="line" id="211517"><span class="nick" style="color:#bc80bd"><a href="#211517" label="[21:15:17]">&lt;janneke&gt;</a></span><span class="message">stikonas: but 70-extern.c is skipped for x86_64...</span></div><div class="line" id="211714"><span class="nick" style="color:#bc80bd"><a href="#211714" label="[21:17:14]">&lt;janneke&gt;</a></span><span class="message">(see build-aux/check-mescc.sh)</span></div><div class="line" id="212136"><span class="nick" style="color:#2e2a4a"><a href="#212136" label="[21:21:36]">&lt;muurkha&gt;</a></span><span class="message">kerravon: another measure that might help with OCR errors is adding some random pixels to the font, for example making the 4×6 font into a 4×7 font, to increase the Hamming distance between letterforms that are otherwise very similar, like 'c' and 'a' in my 4×6 font above.  decreases readability slightly for humans and normal OCR, but ought to dramatically diminish OCR errors with a</span></div><div class="line" id="212142"><span class="nick" style="color:#2e2a4a"><a href="#212142" label="[21:21:42]">&lt;muurkha&gt;</a></span><span class="message">custom-built OCR that knows where those pixels are supposed to be</span></div><div class="line" id="213221"><span class="nick" style="color:#2e2a4a"><a href="#213221" label="[21:32:21]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/za3k/qr-backup/blob/master/docs/FAQ.md#how-much-data-does-this-back-up-per-page">https://github.com/za3k/qr-backup/blob/master/docs/FAQ.md#how-much-data-does-this-back-up-per-page</a>  says that qr-backup by default does 3–4kB per page of raw data, which decompresses to 15kB, but at max settings 170kB per page raw with erasure coding disabled</span></div><div class="line" id="213349"><span class="nick" style="color:#2e2a4a"><a href="#213349" label="[21:33:49]">&lt;muurkha&gt;</a></span><span class="message">I think a major problem for qr-backup is the nonlinearity of laser printer scanning; they have fancy optics to correct it but that only works up to a point</span></div><div class="line" id="215029"><span class="nick" style="color:#80b1d3"><a href="#215029" label="[21:50:29]">&lt;stikonas&gt;</a></span><span class="message">janneke: so what are the next steps then? should we ask efraim to retest?</span></div><div class="line" id="215217"><span class="nick" style="color:#bc80bd"><a href="#215217" label="[21:52:17]">&lt;janneke&gt;</a></span><span class="message">yes, i guess so; the mescc tests should be much more interesting</span></div><div class="line" id="215324"><span class="nick" style="color:#80b1d3"><a href="#215324" label="[21:53:24]">&lt;stikonas&gt;</a></span><span class="message">indeed</span></div><div class="line" id="215336"><span class="nick" style="color:#80b1d3"><a href="#215336" label="[21:53:36]">&lt;stikonas&gt;</a></span><span class="message">and I expect some of them would fail</span></div><div class="line" id="215342"><span class="nick" style="color:#80b1d3"><a href="#215342" label="[21:53:42]">&lt;stikonas&gt;</a></span><span class="message">but at least we would gather some useful data</span></div><div class="line" id="215913"><span class="nick" style="color:#bc80bd"><a href="#215913" label="[21:59:13]">&lt;janneke&gt;</a></span><span class="message">yes</span></div><div class="line" id="220920"><span class="nick" style="color:#234e69"><a href="#220920" label="[22:09:20]">&lt;kerravon&gt;</a></span><span class="message">muurkha - thanks a lot for that excellent information and ideas</span></div><div class="line" id="221003"><span class="nick" style="color:#234e69"><a href="#221003" label="[22:10:03]">&lt;kerravon&gt;</a></span><span class="message">i was planning on having a CRC in lowercase hex (as well as data in lowercase hex) on each line</span></div><div class="line" id="221029"><span class="nick" style="color:#234e69"><a href="#221029" label="[22:10:29]">&lt;kerravon&gt;</a></span><span class="message">and I would like to stay within the limits of an early dot matrix printer</span></div><div class="line" id="221104"><span class="nick" style="color:#234e69"><a href="#221104" label="[22:11:04]">&lt;kerravon&gt;</a></span><span class="message">(excellent idea of error correction on columns too)</span></div><div class="line" id="221457"><span class="nick" style="color:#234e69"><a href="#221457" label="[22:14:57]">&lt;kerravon&gt;</a></span><span class="message">The PDOS/386 binaries come to:</span></div><div class="line" id="221459"><span class="nick" style="color:#234e69"><a href="#221459" label="[22:14:59]">&lt;kerravon&gt;</a></span><span class="message">C:\devel\pdos\src&gt;zcalc 49152+30208+172032+69632+27360</span></div><div class="line" id="221500"><span class="nick" style="color:#234e69"><a href="#221500" label="[22:15:00]">&lt;kerravon&gt;</a></span><span class="message">Calculated Value is 348384.000000</span></div><div class="line" id="221536"><span class="nick" style="color:#80b1d3"><a href="#221536" label="[22:15:36]">&lt;stikonas&gt;</a></span><span class="message">crc doesn't have error correction though...</span></div><div class="line" id="221550"><span class="nick" style="color:#234e69"><a href="#221550" label="[22:15:50]">&lt;kerravon&gt;</a></span><span class="message">And roughly using your figures means:</span></div><div class="line" id="221552"><span class="nick" style="color:#234e69"><a href="#221552" label="[22:15:52]">&lt;kerravon&gt;</a></span><span class="message">C:\devel\pdos\src&gt;zcalc 348384/5000*2</span></div><div class="line" id="221552"><span class="nick" style="color:#234e69"><a href="#221552" label="[22:15:52]">&lt;kerravon&gt;</a></span><span class="message">Calculated Value is 139.353600</span></div><div class="line" id="221615"><span class="nick" style="color:#234e69"><a href="#221615" label="[22:16:15]">&lt;kerravon&gt;</a></span><span class="message">I would need to publish a say 150 page book in 1986</span></div><div class="line" id="221655"><span class="nick" style="color:#234e69"><a href="#221655" label="[22:16:55]">&lt;kerravon&gt;</a></span><span class="message">or 2086 depending on the time of recovery from Putin's nuclear war or meteor strike</span></div><div class="line" id="221751"><span class="nick" style="color:#234e69"><a href="#221751" label="[22:17:51]">&lt;kerravon&gt;</a></span><span class="message">what do you think would have happened if i had published that book in 1986?</span></div><div class="line" id="221845"><span class="nick" style="color:#234e69"><a href="#221845" label="[22:18:45]">&lt;kerravon&gt;</a></span><span class="message">i don't necessarily need error correction - a human can reconcile so long as it is detected</span></div><div class="line" id="222740"><span class="nick" style="color:#80b1d3"><a href="#222740" label="[22:27:40]">&lt;stikonas&gt;</a></span><span class="message">janneke: I'm now running make check on amd64 and getting ./../build-aux/check-mescc.sh: line 316: syntax error: unexpected end of file</span></div><div class="line" id="223025"><span class="nick" style="color:#bc80bd"><a href="#223025" label="[22:30:25]">&lt;janneke&gt;</a></span><span class="message">oops</span></div><div class="line" id="223027"><span class="nick" style="color:#80b1d3"><a href="#223027" label="[22:30:27]">&lt;stikonas&gt;</a></span><span class="message">some &quot;fi&quot; are missing</span></div><div class="line" id="223034"><span class="nick" style="color:#80b1d3"><a href="#223034" label="[22:30:34]">&lt;stikonas&gt;</a></span><span class="message">see line 274</span></div><div class="line" id="223039"><span class="nick" style="color:#bc80bd"><a href="#223039" label="[22:30:39]">&lt;janneke&gt;</a></span><span class="message">duh</span></div><div class="line" id="223134"><span class="nick" style="color:#bc80bd"><a href="#223134" label="[22:31:34]">&lt;janneke&gt;</a></span><span class="message">ACTION pushes fix</span></div><div class="line" id="223213"><span class="nick" style="color:#2e2a4a"><a href="#223213" label="[22:32:13]">&lt;muurkha&gt;</a></span><span class="message">kerravon: typically early dot-matrix printers used a 5×9 or 10×9 font</span></div><div class="line" id="223404"><span class="nick" style="color:#80b1d3"><a href="#223404" label="[22:34:04]">&lt;stikonas&gt;</a></span><span class="message">janneke: thanks, now it runs to completion with some failures</span></div><div class="line" id="223406"><span class="nick" style="color:#80b1d3"><a href="#223406" label="[22:34:06]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1284777/">https://paste.debian.net/1284777/</a> </span></div><div class="line" id="223413"><span class="nick" style="color:#80b1d3"><a href="#223413" label="[22:34:13]">&lt;stikonas&gt;</a></span><span class="message">(that's on x86_64)</span></div><div class="line" id="223444"><span class="nick" style="color:#80b1d3"><a href="#223444" label="[22:34:44]">&lt;stikonas&gt;</a></span><span class="message">oh, these are the same as on risccv64</span></div><div class="line" id="223511"><span class="nick" style="color:#2e2a4a"><a href="#223511" label="[22:35:11]">&lt;muurkha&gt;</a></span><span class="message">in a lot of cases the timing of firing a hammer could be controlled pretty precisely, but you couldn't fire it that fast</span></div><div class="line" id="223545"><span class="nick" style="color:#bc80bd"><a href="#223545" label="[22:35:45]">&lt;janneke&gt;</a></span><span class="message">stikonas: weird, so the f = 0 initialization did not help?</span></div><div class="line" id="223548"><span class="nick" style="color:#bc80bd"><a href="#223548" label="[22:35:48]">&lt;janneke&gt;</a></span><span class="message">hmm</span></div><div class="line" id="223550"><span class="nick" style="color:#2e2a4a"><a href="#223550" label="[22:35:50]">&lt;muurkha&gt;</a></span><span class="message">so you might be able to fire it 5 times during a single character, but you could control when those 5 times were to within a tenth of a character.  you probably could have done better than that but I don't think anybody did</span></div><div class="line" id="223550"><span class="nick" style="color:#80b1d3"><a href="#223550" label="[22:35:50]">&lt;stikonas&gt;</a></span><span class="message">no...</span></div><div class="line" id="223606"><span class="nick" style="color:#bc80bd"><a href="#223606" label="[22:36:06]">&lt;janneke&gt;</a></span><span class="message">0.24 passes all tests for x86_64</span></div><div class="line" id="223625"><span class="nick" style="color:#bc80bd"><a href="#223625" label="[22:36:25]">&lt;janneke&gt;</a></span><span class="message">could be a newer gcc...</span></div><div class="line" id="223627"><span class="nick" style="color:#80b1d3"><a href="#223627" label="[22:36:27]">&lt;stikonas&gt;</a></span><span class="message">janneke: one moment, let me double check and make sure</span></div><div class="line" id="223631"><span class="nick" style="color:#80b1d3"><a href="#223631" label="[22:36:31]">&lt;stikonas&gt;</a></span><span class="message">that test are rebuilt</span></div><div class="line" id="223642"><span class="nick" style="color:#bc80bd"><a href="#223642" label="[22:36:42]">&lt;janneke&gt;</a></span><span class="message">ah, right</span></div><div class="line" id="223703"><span class="nick" style="color:#234e69"><a href="#223703" label="[22:37:03]">&lt;kerravon&gt;</a></span><span class="message">muurkha - this &quot;timing&quot; issue has what implication?</span></div><div class="line" id="223712"><span class="nick" style="color:#bc80bd"><a href="#223712" label="[22:37:12]">&lt;janneke&gt;</a></span><span class="message">stikonas: could be that you have to use recheck=true</span></div><div class="line" id="223718"><span class="nick" style="color:#bc80bd"><a href="#223718" label="[22:37:18]">&lt;janneke&gt;</a></span><span class="message">(kinda weird interface)</span></div><div class="line" id="223739"><span class="nick" style="color:#80b1d3"><a href="#223739" label="[22:37:39]">&lt;stikonas&gt;</a></span><span class="message">yes, now it's slower</span></div><div class="line" id="223743"><span class="nick" style="color:#80b1d3"><a href="#223743" label="[22:37:43]">&lt;stikonas&gt;</a></span><span class="message">so I think rebuildign</span></div><div class="line" id="223813"><span class="nick" style="color:#2e2a4a"><a href="#223813" label="[22:38:13]">&lt;muurkha&gt;</a></span><span class="message">kerravon: well, it means you could get significantly more readable output from a 9-pin dot-matrix printer than you'd expect from &quot;5×9&quot;</span></div><div class="line" id="223829"><span class="nick" style="color:#80b1d3"><a href="#223829" label="[22:38:29]">&lt;stikonas&gt;</a></span><span class="message">janneke: ok, that section passed</span></div><div class="line" id="223843"><span class="nick" style="color:#80b1d3"><a href="#223843" label="[22:38:43]">&lt;stikonas&gt;</a></span><span class="message">the last section all failed for me, probably environment setup issue</span></div><div class="line" id="223846"><span class="nick" style="color:#2e2a4a"><a href="#223846" label="[22:38:46]">&lt;muurkha&gt;</a></span><span class="message">I think the Heathkit dot-matrix printer was like 7 or 8 pins</span></div><div class="line" id="223853"><span class="nick" style="color:#bc80bd"><a href="#223853" label="[22:38:53]">&lt;janneke&gt;</a></span><span class="message">nice</span></div><div class="line" id="223929"><span class="nick" style="color:#2e2a4a"><a href="#223929" label="[22:39:29]">&lt;muurkha&gt;</a></span><span class="message">the Radio Shack one was weird as hell and instead just had a single hammer, but used a rotating platen behind the paper to kind of get a helical scan</span></div><div class="line" id="223946"><span class="nick" style="color:#234e69"><a href="#223946" label="[22:39:46]">&lt;kerravon&gt;</a></span><span class="message">muurkha - so you mean i should target 10 * 9 dot matrix instead of 5 * 9?</span></div><div class="line" id="224010"><span class="nick" style="color:#2e2a4a"><a href="#224010" label="[22:40:10]">&lt;muurkha&gt;</a></span><span class="message">I don't know what you should target because I don't really understand your goals</span></div><div class="line" id="224030"><span class="nick" style="color:#2e2a4a"><a href="#224030" label="[22:40:30]">&lt;muurkha&gt;</a></span><span class="message">did you say you were going to time travel back to 01986 to publish a book?</span></div><div class="line" id="224103"><span class="nick" style="color:#234e69"><a href="#224103" label="[22:41:03]">&lt;kerravon&gt;</a></span><span class="message">yes, basically. with the knowledge i have now - what would i have done differently?</span></div><div class="line" id="224151"><span class="nick" style="color:#234e69"><a href="#224151" label="[22:41:51]">&lt;kerravon&gt;</a></span><span class="message">theoretically i could have legally left school late 1982</span></div><div class="line" id="224221"><span class="nick" style="color:#2e2a4a"><a href="#224221" label="[22:42:21]">&lt;muurkha&gt;</a></span><span class="message">go work for Microsoft, invest in Autodesk and Adobe and Apple.  not Commodore</span></div><div class="line" id="224228"><span class="nick" style="color:#234e69"><a href="#224228" label="[22:42:28]">&lt;kerravon&gt;</a></span><span class="message">:-)</span></div><div class="line" id="224251"><span class="nick" style="color:#234e69"><a href="#224251" label="[22:42:51]">&lt;kerravon&gt;</a></span><span class="message">no, i don't want to work for another company</span></div><div class="line" id="224307"><span class="nick" style="color:#2e2a4a"><a href="#224307" label="[22:43:07]">&lt;muurkha&gt;</a></span><span class="message">well, you have to get money somehow</span></div><div class="line" id="224309"><span class="nick" style="color:#234e69"><a href="#224309" label="[22:43:09]">&lt;kerravon&gt;</a></span><span class="message">well - i will, to save money</span></div><div class="line" id="224326"><span class="nick" style="color:#234e69"><a href="#224326" label="[22:43:26]">&lt;kerravon&gt;</a></span><span class="message">but it probably will be a laboring job</span></div><div class="line" id="224333"><span class="nick" style="color:#2e2a4a"><a href="#224333" label="[22:43:33]">&lt;muurkha&gt;</a></span><span class="message">nobody is going to accept your $20 bills that say &quot;2021&quot; on them, you'll get arrested</span></div><div class="line" id="224351"><span class="nick" style="color:#2e2a4a"><a href="#224351" label="[22:43:51]">&lt;muurkha&gt;</a></span><span class="message">the great lacuna in this plan is where to get the time machine tho.  are you going to steal Guido's?</span></div><div class="line" id="224455"><span class="nick" style="color:#234e69"><a href="#224455" label="[22:44:55]">&lt;kerravon&gt;</a></span><span class="message">it's not just a time machine - it's what someone else could have done - what did they need to do?</span></div><div class="line" id="224510"><span class="nick" style="color:#234e69"><a href="#224510" label="[22:45:10]">&lt;kerravon&gt;</a></span><span class="message">just trying to ascertain technical requirements to challenge microsoft</span></div><div class="line" id="224514"><span class="nick" style="color:#234e69"><a href="#224514" label="[22:45:14]">&lt;kerravon&gt;</a></span><span class="message">beat them to win32</span></div><div class="line" id="224553"><span class="nick" style="color:#234e69"><a href="#224553" label="[22:45:53]">&lt;kerravon&gt;</a></span><span class="message">note that my goal is vague and probably pointless, but i've spent nearly 30 years on it so far</span></div><div class="line" id="224604"><span class="nick" style="color:#80b1d3"><a href="#224604" label="[22:46:04]">&lt;stikonas&gt;</a></span><span class="message">ok, running mescc tests on amd64 now</span></div><div class="line" id="224701"><span class="nick" style="color:#2e2a4a"><a href="#224701" label="[22:47:01]">&lt;muurkha&gt;</a></span><span class="message">I think you probably need a community of free-software programmers to challenge microsoft; by 01986 they were already in a position to defeat all the proprietary software companies.  I mean look at DR DOS</span></div><div class="line" id="224708"><span class="nick" style="color:#234e69"><a href="#224708" label="[22:47:08]">&lt;kerravon&gt;</a></span><span class="message">other people restore vintage cars - also pointless</span></div><div class="line" id="224725"><span class="nick" style="color:#234e69"><a href="#224725" label="[22:47:25]">&lt;kerravon&gt;</a></span><span class="message">win32 didn't exist in 1986</span></div><div class="line" id="224735"><span class="nick" style="color:#2e2a4a"><a href="#224735" label="[22:47:35]">&lt;muurkha&gt;</a></span><span class="message">what was missing for free-software programmers in 01986 was widespread internet access.  but actually usenet was probably good enough</span></div><div class="line" id="224759"><span class="nick" style="color:#234e69"><a href="#224759" label="[22:47:59]">&lt;kerravon&gt;</a></span><span class="message">fidonet existed then too</span></div><div class="line" id="224818"><span class="nick" style="color:#2e2a4a"><a href="#224818" label="[22:48:18]">&lt;muurkha&gt;</a></span><span class="message">yeah, I know, I was on it</span></div><div class="line" id="224818"><span class="nick" style="color:#234e69"><a href="#224818" label="[22:48:18]">&lt;kerravon&gt;</a></span><span class="message">i connected to that in 1988</span></div><div class="line" id="224827"><span class="nick" style="color:#234e69"><a href="#224827" label="[22:48:27]">&lt;kerravon&gt;</a></span><span class="message">1987 actually i think</span></div><div class="line" id="224906"><span class="nick" style="color:#2e2a4a"><a href="#224906" label="[22:49:06]">&lt;muurkha&gt;</a></span><span class="message">something like zstd or brotli might have made a difference, but the bigger difference between Fidonet and Usenet was the capabilities of the software I think</span></div><div class="line" id="224915"><span class="nick" style="color:#2e2a4a"><a href="#224915" label="[22:49:15]">&lt;muurkha&gt;</a></span><span class="message">UI, threading, routing</span></div><div class="line" id="224947"><span class="nick" style="color:#234e69"><a href="#224947" label="[22:49:47]">&lt;kerravon&gt;</a></span><span class="message">this is C programming - you don't need anything fancy</span></div><div class="line" id="225002"><span class="nick" style="color:#234e69"><a href="#225002" label="[22:50:02]">&lt;kerravon&gt;</a></span><span class="message">and it can be gated</span></div><div class="line" id="225015"><span class="nick" style="color:#2e2a4a"><a href="#225015" label="[22:50:15]">&lt;muurkha&gt;</a></span><span class="message">trn was a lot fancier than Opus BBS when it came to reading discussions</span></div><div class="line" id="225019"><span class="nick" style="color:#2e2a4a"><a href="#225019" label="[22:50:19]">&lt;muurkha&gt;</a></span><span class="message">even a lot fancier than QWK</span></div><div class="line" id="225110"><span class="nick" style="color:#2e2a4a"><a href="#225110" label="[22:51:10]">&lt;muurkha&gt;</a></span><span class="message">maybe Van Jacobson's &quot;content-centric networking&quot; or &quot;named data networking&quot; might have enabled better routing on Usenet/Fidonet</span></div><div class="line" id="225128"><span class="nick" style="color:#234e69"><a href="#225128" label="[22:51:28]">&lt;kerravon&gt;</a></span><span class="message">even if true, i think that's a trivial difference when it comes to the hard work of writing an OS</span></div><div class="line" id="225135"><span class="nick" style="color:#2e2a4a"><a href="#225135" label="[22:51:35]">&lt;muurkha&gt;</a></span><span class="message">there's also been some work on &quot;weak sense of direction&quot; that might have enabled smarter routing</span></div><div class="line" id="225159"><span class="nick" style="color:#2e2a4a"><a href="#225159" label="[22:51:59]">&lt;muurkha&gt;</a></span><span class="message">I don't think so; the BBS world was dominated by single-author shareware that wasn't in Microsoft's league</span></div><div class="line" id="225215"><span class="nick" style="color:#2e2a4a"><a href="#225215" label="[22:52:15]">&lt;muurkha&gt;</a></span><span class="message">the community enabled by the internet made it possible for Linux to kick Microsoft's butt</span></div><div class="line" id="225308"><span class="nick" style="color:#2e2a4a"><a href="#225308" label="[22:53:08]">&lt;muurkha&gt;</a></span><span class="message">one fancy technology that was a kind of secret weapon for Microsoft was compact bytecode, which enabled teensy little PCs to do a lot more in Excel than in competing spreadsheets</span></div><div class="line" id="225329"><span class="nick" style="color:#234e69"><a href="#225329" label="[22:53:29]">&lt;kerravon&gt;</a></span><span class="message">sorry, i don't understand. why does the software used on the BBS world matter? So long as you can get to C_ECHO, who cares?</span></div><div class="line" id="225334"><span class="nick" style="color:#2e2a4a"><a href="#225334" label="[22:53:34]">&lt;muurkha&gt;</a></span><span class="message">because you could fit like three times as much code in RAM as when you were running native 8086 code</span></div><div class="line" id="225358"><span class="nick" style="color:#2e2a4a"><a href="#225358" label="[22:53:58]">&lt;muurkha&gt;</a></span><span class="message">the software used in the BBS world mattered because it failed to cohere as a free-software community the way the internet did</span></div><div class="line" id="225411"><span class="nick" style="color:#2e2a4a"><a href="#225411" label="[22:54:11]">&lt;muurkha&gt;</a></span><span class="message">which is the major reason 4DOS wasn't Linux</span></div><div class="line" id="225507"><span class="nick" style="color:#2e2a4a"><a href="#225507" label="[22:55:07]">&lt;muurkha&gt;</a></span><span class="message">a lot of that was just better connectivity on Usenet and the Internet than in Fidonet</span></div><div class="line" id="225509"><span class="nick" style="color:#234e69"><a href="#225509" label="[22:55:09]">&lt;kerravon&gt;</a></span><span class="message">on osdev.org there are heaps of OSes - but almost all are one-man shows. getting a team is not due to the internet</span></div><div class="line" id="225627"><span class="nick" style="color:#80b1d3"><a href="#225627" label="[22:56:27]">&lt;stikonas&gt;</a></span><span class="message">janneke: so all mescc tests pass now on x86_64, fixed that setup issue that I had (my MES variable had relative path)</span></div><div class="line" id="225707"><span class="nick" style="color:#2e2a4a"><a href="#225707" label="[22:57:07]">&lt;muurkha&gt;</a></span><span class="message">kerravon: the reason people don't join those one-man shows is that they have another show to join</span></div><div class="line" id="225726"><span class="nick" style="color:#234e69"><a href="#225726" label="[22:57:26]">&lt;kerravon&gt;</a></span><span class="message">sure - and in 1986 i can beat linux</span></div><div class="line" id="225730"><span class="nick" style="color:#2e2a4a"><a href="#225730" label="[22:57:30]">&lt;muurkha&gt;</a></span><span class="message">that wasn't the case in the heyday of Fidonet and 4DOS</span></div><div class="line" id="225743"><span class="nick" style="color:#2e2a4a"><a href="#225743" label="[22:57:43]">&lt;muurkha&gt;</a></span><span class="message">maybe, you haven't beaten it yet because you still don't have multitasking ;)</span></div><div class="line" id="225806"><span class="nick" style="color:#bc80bd"><a href="#225806" label="[22:58:06]">&lt;janneke&gt;</a></span><span class="message">stikonas: great, and thenks for checking!</span></div><div class="line" id="225817"><span class="nick" style="color:#234e69"><a href="#225817" label="[22:58:17]">&lt;kerravon&gt;</a></span><span class="message">in 1986 the competition is msdos</span></div><div class="line" id="225846"><span class="nick" style="color:#234e69"><a href="#225846" label="[22:58:46]">&lt;kerravon&gt;</a></span><span class="message">multitasking can be added by a commercial derivative</span></div><div class="line" id="225849"><span class="nick" style="color:#2e2a4a"><a href="#225849" label="[22:58:49]">&lt;muurkha&gt;</a></span><span class="message">also the Mac, the Atari ST (the Jackintosh), the Amiga, and Smalltalk</span></div><div class="line" id="225910"><span class="nick" style="color:#2e2a4a"><a href="#225910" label="[22:59:10]">&lt;muurkha&gt;</a></span><span class="message">have you seen Smalltalk-76?</span></div><div class="line" id="225915"><span class="nick" style="color:#234e69"><a href="#225915" label="[22:59:15]">&lt;kerravon&gt;</a></span><span class="message">none of them are free, with public domain source code</span></div><div class="line" id="225919"><span class="nick" style="color:#2e2a4a"><a href="#225919" label="[22:59:19]">&lt;muurkha&gt;</a></span><span class="message">it ran an on 8086 with 256K of RAM</span></div><div class="line" id="225930"><span class="nick" style="color:#80b1d3"><a href="#225930" label="[22:59:30]">&lt;stikonas&gt;</a></span><span class="message">hmm, but debug symbols are borked on 64 bits...</span></div><div class="line" id="225940"><span class="nick" style="color:#80b1d3"><a href="#225940" label="[22:59:40]">&lt;stikonas&gt;</a></span><span class="message">even though mescc seems to call blood-elf with --64</span></div><div class="line" id="225947"><span class="nick" style="color:#2e2a4a"><a href="#225947" label="[22:59:47]">&lt;muurkha&gt;</a></span><span class="message">yes, that is true!  there are Smalltalks now that are free software, but there weren't at the time</span></div><div class="line" id="225953"><span class="nick" style="color:#234e69"><a href="#225953" label="[22:59:53]">&lt;kerravon&gt;</a></span><span class="message">that's not where i'm trying to compete</span></div><div class="line" id="230024"><span class="nick" style="color:#234e69"><a href="#230024" label="[23:00:24]">&lt;kerravon&gt;</a></span><span class="message">i'm coming in on the 80386</span></div><div class="line" id="230024"><span class="nick" style="color:#2e2a4a"><a href="#230024" label="[23:00:24]">&lt;muurkha&gt;</a></span><span class="message">it's true, you don't seem to be very interested in GUIs and IDEs</span></div><div class="line" id="230046"><span class="nick" style="color:#2e2a4a"><a href="#230046" label="[23:00:46]">&lt;muurkha&gt;</a></span><span class="message">in 01986 the 80386 was super expensive</span></div><div class="line" id="230101"><span class="nick" style="color:#234e69"><a href="#230101" label="[23:01:01]">&lt;kerravon&gt;</a></span><span class="message">affordable if i saved a year's wage or something</span></div><div class="line" id="230118"><span class="nick" style="color:#234e69"><a href="#230118" label="[23:01:18]">&lt;kerravon&gt;</a></span><span class="message">as a laborer</span></div><div class="line" id="230124"><span class="nick" style="color:#2e2a4a"><a href="#230124" label="[23:01:24]">&lt;muurkha&gt;</a></span><span class="message">in the US, yeah</span></div><div class="line" id="230130"><span class="nick" style="color:#2e2a4a"><a href="#230130" label="[23:01:30]">&lt;muurkha&gt;</a></span><span class="message">at least later in the year</span></div><div class="line" id="230145"><span class="nick" style="color:#2e2a4a"><a href="#230145" label="[23:01:45]">&lt;muurkha&gt;</a></span><span class="message">earlier in the year there wasn't a 386 IBM-compatible on the marqet at all</span></div><div class="line" id="230152"><span class="nick" style="color:#234e69"><a href="#230152" label="[23:01:52]">&lt;kerravon&gt;</a></span><span class="message">i was in australia at the time btw</span></div><div class="line" id="230211"><span class="nick" style="color:#2e2a4a"><a href="#230211" label="[23:02:11]">&lt;muurkha&gt;</a></span><span class="message">I don't know anything about the conditions there.  how were local telephone calls charged?</span></div><div class="line" id="230230"><span class="nick" style="color:#234e69"><a href="#230230" label="[23:02:30]">&lt;kerravon&gt;</a></span><span class="message">about US 20 cents untimed</span></div><div class="line" id="230255"><span class="nick" style="color:#2e2a4a"><a href="#230255" label="[23:02:55]">&lt;muurkha&gt;</a></span><span class="message">so you could phone up your buddy's computer and transfer data all night long for 20¢?</span></div><div class="line" id="230301"><span class="nick" style="color:#234e69"><a href="#230301" label="[23:03:01]">&lt;kerravon&gt;</a></span><span class="message">yep</span></div><div class="line" id="230313"><span class="nick" style="color:#2e2a4a"><a href="#230313" label="[23:03:13]">&lt;muurkha&gt;</a></span><span class="message">there was a lot of brilliant hacking at the time, but so little of it resulted in anything of lasting value or reusability</span></div><div class="line" id="230333"><span class="nick" style="color:#234e69"><a href="#230333" label="[23:03:33]">&lt;kerravon&gt;</a></span><span class="message">yeah - that's basically what i'm trying to challenge</span></div><div class="line" id="230340"><span class="nick" style="color:#80b1d3"><a href="#230340" label="[23:03:40]">&lt;stikonas&gt;</a></span><span class="message">janneke: what's the magic evn variable to get extra logging from mescc?</span></div><div class="line" id="230340"><span class="nick" style="color:#234e69"><a href="#230340" label="[23:03:40]">&lt;kerravon&gt;</a></span><span class="message">what did i do wrong?</span></div><div class="line" id="230342"><span class="nick" style="color:#2e2a4a"><a href="#230342" label="[23:03:42]">&lt;muurkha&gt;</a></span><span class="message">8 hours at 2400 bps is 8.6 megabytes</span></div><div class="line" id="230401"><span class="nick" style="color:#234e69"><a href="#230401" label="[23:04:01]">&lt;kerravon&gt;</a></span><span class="message">i had a 1200 bps modem in 1987</span></div><div class="line" id="230424"><span class="nick" style="color:#234e69"><a href="#230424" label="[23:04:24]">&lt;kerravon&gt;</a></span><span class="message">cost something like US$400</span></div><div class="line" id="230450"><span class="nick" style="color:#234e69"><a href="#230450" label="[23:04:50]">&lt;kerravon&gt;</a></span><span class="message">but yeah - i'm assuming i have saved my money hard</span></div><div class="line" id="230450"><span class="nick" style="color:#2e2a4a"><a href="#230450" label="[23:04:50]">&lt;muurkha&gt;</a></span><span class="message">how big was your disk?</span></div><div class="line" id="230456"><span class="nick" style="color:#234e69"><a href="#230456" label="[23:04:56]">&lt;kerravon&gt;</a></span><span class="message">20 MB hard disk</span></div><div class="line" id="230502"><span class="nick" style="color:#234e69"><a href="#230502" label="[23:05:02]">&lt;kerravon&gt;</a></span><span class="message">Commodore PC 5</span></div><div class="line" id="230502"><span class="nick" style="color:#2e2a4a"><a href="#230502" label="[23:05:02]">&lt;muurkha&gt;</a></span><span class="message">so most of your data was on floppies</span></div><div class="line" id="230515"><span class="nick" style="color:#2e2a4a"><a href="#230515" label="[23:05:15]">&lt;muurkha&gt;</a></span><span class="message">not familiar with &quot;Commodore PC 5&quot;</span></div><div class="line" id="230521"><span class="nick" style="color:#234e69"><a href="#230521" label="[23:05:21]">&lt;kerravon&gt;</a></span><span class="message">XT compatible</span></div><div class="line" id="230546"><span class="nick" style="color:#234e69"><a href="#230546" label="[23:05:46]">&lt;kerravon&gt;</a></span><span class="message">i can't remember how much data i put on floppies (360k)</span></div><div class="line" id="230550"><span class="nick" style="color:#2e2a4a"><a href="#230550" label="[23:05:50]">&lt;muurkha&gt;</a></span><span class="message">huh, I didn't know Commodore did that</span></div><div class="line" id="230557"><span class="nick" style="color:#2e2a4a"><a href="#230557" label="[23:05:57]">&lt;muurkha&gt;</a></span><span class="message">you probably had more than 60 floppies tho</span></div><div class="line" id="230606"><span class="nick" style="color:#234e69"><a href="#230606" label="[23:06:06]">&lt;kerravon&gt;</a></span><span class="message">probably, yes</span></div><div class="line" id="230641"><span class="nick" style="color:#bc80bd"><a href="#230641" label="[23:06:41]">&lt;janneke&gt;</a></span><span class="message">stikonas: mimicking GNU's standard V=1, V=2</span></div><div class="line" id="230652"><span class="nick" style="color:#2e2a4a"><a href="#230652" label="[23:06:52]">&lt;muurkha&gt;</a></span><span class="message">you could imagine a world where your computer spent the day compressing data and calculating network routing</span></div><div class="line" id="230707"><span class="nick" style="color:#234e69"><a href="#230707" label="[23:07:07]">&lt;kerravon&gt;</a></span><span class="message">no - none of that is required</span></div><div class="line" id="230715"><span class="nick" style="color:#234e69"><a href="#230715" label="[23:07:15]">&lt;kerravon&gt;</a></span><span class="message">(as far as i can tell)</span></div><div class="line" id="230725"><span class="nick" style="color:#234e69"><a href="#230725" label="[23:07:25]">&lt;kerravon&gt;</a></span><span class="message">that isn't the barrier to writing PDOS/386</span></div><div class="line" id="230726"><span class="nick" style="color:#2e2a4a"><a href="#230726" label="[23:07:26]">&lt;muurkha&gt;</a></span><span class="message">and spent the night interchanging data with like-minded people in a local community</span></div><div class="line" id="230743"><span class="nick" style="color:#2e2a4a"><a href="#230743" label="[23:07:43]">&lt;muurkha&gt;</a></span><span class="message">no, but a 386 OS wouldn't have been very useful in 01986</span></div><div class="line" id="230744"><span class="nick" style="color:#234e69"><a href="#230744" label="[23:07:44]">&lt;kerravon&gt;</a></span><span class="message">i can do that by posting to C_LANG</span></div><div class="line" id="230753"><span class="nick" style="color:#2e2a4a"><a href="#230753" label="[23:07:53]">&lt;muurkha&gt;</a></span><span class="message">was that an echo?</span></div><div class="line" id="230753"><span class="nick" style="color:#80b1d3"><a href="#230753" label="[23:07:53]">&lt;stikonas&gt;</a></span><span class="message">janneke: hmm, that doesn't show invoked commands... it's probably easier to strace it...</span></div><div class="line" id="230758"><span class="nick" style="color:#234e69"><a href="#230758" label="[23:07:58]">&lt;kerravon&gt;</a></span><span class="message">yes</span></div><div class="line" id="230815"><span class="nick" style="color:#234e69"><a href="#230815" label="[23:08:15]">&lt;kerravon&gt;</a></span><span class="message">why do you say a 386 OS wouldn't be useful in 1986?</span></div><div class="line" id="230857"><span class="nick" style="color:#2e2a4a"><a href="#230857" label="[23:08:57]">&lt;muurkha&gt;</a></span><span class="message">because the Compaq Deskpro 386 cost US$6499</span></div><div class="line" id="230908"><span class="nick" style="color:#234e69"><a href="#230908" label="[23:09:08]">&lt;kerravon&gt;</a></span><span class="message">sure - so?</span></div><div class="line" id="230928"><span class="nick" style="color:#2e2a4a"><a href="#230928" label="[23:09:28]">&lt;muurkha&gt;</a></span><span class="message">you might as well write an OS for the VAX</span></div><div class="line" id="230938"><span class="nick" style="color:#234e69"><a href="#230938" label="[23:09:38]">&lt;kerravon&gt;</a></span><span class="message">the VAX died - the 386 didn't</span></div><div class="line" id="231007"><span class="nick" style="color:#234e69"><a href="#231007" label="[23:10:07]">&lt;kerravon&gt;</a></span><span class="message">i'm challenging microsoft, not DEC</span></div><div class="line" id="231040"><span class="nick" style="color:#234e69"><a href="#231040" label="[23:10:40]">&lt;kerravon&gt;</a></span><span class="message">i was already working in 1986 (i was 18)</span></div><div class="line" id="231052"><span class="nick" style="color:#234e69"><a href="#231052" label="[23:10:52]">&lt;kerravon&gt;</a></span><span class="message">full-time</span></div><div class="line" id="231111"><span class="nick" style="color:#234e69"><a href="#231111" label="[23:11:11]">&lt;kerravon&gt;</a></span><span class="message">as a tape jockey (assistant computer operator)</span></div><div class="line" id="231125"><span class="nick" style="color:#2e2a4a"><a href="#231125" label="[23:11:25]">&lt;muurkha&gt;</a></span><span class="message">oh, neat, on what system?  a 370?</span></div><div class="line" id="231138"><span class="nick" style="color:#234e69"><a href="#231138" label="[23:11:38]">&lt;kerravon&gt;</a></span><span class="message">370/XA, yes</span></div><div class="line" id="231142"><span class="nick" style="color:#2e2a4a"><a href="#231142" label="[23:11:42]">&lt;muurkha&gt;</a></span><span class="message">nice</span></div><div class="line" id="231217"><span class="nick" style="color:#2e2a4a"><a href="#231217" label="[23:12:17]">&lt;muurkha&gt;</a></span><span class="message">yeah, if you can write the whole thing yourself quickly, it doesn't matter what hardware other people can afford</span></div><div class="line" id="231240"><span class="nick" style="color:#2e2a4a"><a href="#231240" label="[23:12:40]">&lt;muurkha&gt;</a></span><span class="message">but lots of people were trying to challenge Microsoft that way and they all failed until Linux</span></div><div class="line" id="231243"><span class="nick" style="color:#2e2a4a"><a href="#231243" label="[23:12:43]">&lt;muurkha&gt;</a></span><span class="message">even IBM</span></div><div class="line" id="231300"><span class="nick" style="color:#234e69"><a href="#231300" label="[23:13:00]">&lt;kerravon&gt;</a></span><span class="message">yeah - but none of them created the win32 API</span></div><div class="line" id="231315"><span class="nick" style="color:#2e2a4a"><a href="#231315" label="[23:13:15]">&lt;muurkha&gt;</a></span><span class="message">so I think you need a free-software community to work with</span></div><div class="line" id="231328"><span class="nick" style="color:#234e69"><a href="#231328" label="[23:13:28]">&lt;kerravon&gt;</a></span><span class="message">ideally, yes</span></div><div class="line" id="231350"><span class="nick" style="color:#234e69"><a href="#231350" label="[23:13:50]">&lt;kerravon&gt;</a></span><span class="message">but that's a bit like those viral youtube videos</span></div><div class="line" id="231356"><span class="nick" style="color:#2e2a4a"><a href="#231356" label="[23:13:56]">&lt;muurkha&gt;</a></span><span class="message">which would probably mean focusing on networking and running on smaller machines like the XT</span></div><div class="line" id="231403"><span class="nick" style="color:#234e69"><a href="#231403" label="[23:14:03]">&lt;kerravon&gt;</a></span><span class="message">no-one really knows what is going to take off</span></div><div class="line" id="231436"><span class="nick" style="color:#234e69"><a href="#231436" label="[23:14:36]">&lt;kerravon&gt;</a></span><span class="message">well - from the same/similar source base i produce pdos/86 too</span></div><div class="line" id="231442"><span class="nick" style="color:#2e2a4a"><a href="#231442" label="[23:14:42]">&lt;muurkha&gt;</a></span><span class="message">Excel, Oberon, and Smalltalk demonstrated you could do a shitload on an XT with a bytecoded VM</span></div><div class="line" id="231449"><span class="nick" style="color:#2e2a4a"><a href="#231449" label="[23:14:49]">&lt;muurkha&gt;</a></span><span class="message">have you seen Oberon?</span></div><div class="line" id="231453"><span class="nick" style="color:#234e69"><a href="#231453" label="[23:14:53]">&lt;kerravon&gt;</a></span><span class="message">no</span></div><div class="line" id="231500"><span class="nick" style="color:#2e2a4a"><a href="#231500" label="[23:15:00]">&lt;muurkha&gt;</a></span><span class="message">it may not be to your taste but it's amazing</span></div><div class="line" id="231514"><span class="nick" style="color:#234e69"><a href="#231514" label="[23:15:14]">&lt;kerravon&gt;</a></span><span class="message">oh - there's plenty of amazing things</span></div><div class="line" id="231522"><span class="nick" style="color:#234e69"><a href="#231522" label="[23:15:22]">&lt;kerravon&gt;</a></span><span class="message">i'm not really trying to compete there</span></div><div class="line" id="231539"><span class="nick" style="color:#2e2a4a"><a href="#231539" label="[23:15:39]">&lt;muurkha&gt;</a></span><span class="message">not talking about competing but about taking inspiration</span></div><div class="line" id="231552"><span class="nick" style="color:#234e69"><a href="#231552" label="[23:15:52]">&lt;kerravon&gt;</a></span><span class="message">pdos/386 is literally what i want to produce</span></div><div class="line" id="231620"><span class="nick" style="color:#234e69"><a href="#231620" label="[23:16:20]">&lt;kerravon&gt;</a></span><span class="message">i don't need inspiration - i'm already inspired to work on it for 30 years</span></div><div class="line" id="231724"><span class="nick" style="color:#2e2a4a"><a href="#231724" label="[23:17:24]">&lt;muurkha&gt;</a></span><span class="message">:)</span></div><div class="line" id="231821"><span class="nick" style="color:#234e69"><a href="#231821" label="[23:18:21]">&lt;kerravon&gt;</a></span><span class="message">theoretically someone similar to me could have written it in 1970 in K&amp;R C</span></div><div class="line" id="231835"><span class="nick" style="color:#234e69"><a href="#231835" label="[23:18:35]">&lt;kerravon&gt;</a></span><span class="message">and the book is published by 1986</span></div><div class="line" id="231849"><span class="nick" style="color:#234e69"><a href="#231849" label="[23:18:49]">&lt;kerravon&gt;</a></span><span class="message">all you need to do is type it in</span></div><div class="line" id="231940"><span class="nick" style="color:#234e69"><a href="#231940" label="[23:19:40]">&lt;kerravon&gt;</a></span><span class="message">or it would have been on floppy disk passed around already</span></div><div class="line" id="231951"><span class="nick" style="color:#80b1d3"><a href="#231951" label="[23:19:51]">&lt;stikonas&gt;</a></span><span class="message">janneke: next issue is I think elf headers on amd64 are wrong</span></div><div class="line" id="231955"><span class="nick" style="color:#80b1d3"><a href="#231955" label="[23:19:55]">&lt;stikonas&gt;</a></span><span class="message">I'll try to fix them</span></div><div class="line" id="231957"><span class="nick" style="color:#234e69"><a href="#231957" label="[23:19:57]">&lt;kerravon&gt;</a></span><span class="message">it literally fits on a 360k floppy</span></div><div class="line" id="232014"><span class="nick" style="color:#234e69"><a href="#232014" label="[23:20:14]">&lt;kerravon&gt;</a></span><span class="message">compiled with visual c++ anyway</span></div><div class="line" id="232034"><span class="nick" style="color:#2e2a4a"><a href="#232034" label="[23:20:34]">&lt;muurkha&gt;</a></span><span class="message">in 01970 I don't think Kernighan had even started working at Bell Labs, and C didn't exist</span></div><div class="line" id="232047"><span class="nick" style="color:#2e2a4a"><a href="#232047" label="[23:20:47]">&lt;muurkha&gt;</a></span><span class="message">the first versions of Unix were written in assembly, up to 01972</span></div><div class="line" id="232120"><span class="nick" style="color:#2e2a4a"><a href="#232120" label="[23:21:20]">&lt;muurkha&gt;</a></span><span class="message">but you could write your own compiler too</span></div><div class="line" id="232148"><span class="nick" style="color:#234e69"><a href="#232148" label="[23:21:48]">&lt;kerravon&gt;</a></span><span class="message">ok, fine. 1972</span></div><div class="line" id="232155"><span class="nick" style="color:#234e69"><a href="#232155" label="[23:21:55]">&lt;kerravon&gt;</a></span><span class="message">or 1973</span></div><div class="line" id="232158"><span class="nick" style="color:#234e69"><a href="#232158" label="[23:21:58]">&lt;kerravon&gt;</a></span><span class="message"> <a rel="nofollow" href="https://en.wikipedia.org/wiki/C_">https://en.wikipedia.org/wiki/C_</a>(programming_language) </span></div><div class="line" id="232201"><span class="nick" style="color:#80b1d3"><a href="#232201" label="[23:22:01]">&lt;stikonas&gt;</a></span><span class="message">hmm, it's far more complicated header than in case of stage0-posix-amd64...</span></div><div class="line" id="232311"><span class="nick" style="color:#234e69"><a href="#232311" label="[23:23:11]">&lt;kerravon&gt;</a></span><span class="message">regardless, universities or something could have organized this</span></div><div class="line" id="232326"><span class="nick" style="color:#2e2a4a"><a href="#232326" label="[23:23:26]">&lt;muurkha&gt;</a></span><span class="message">I mean in theory you could have written a C compiler in 01965 for an IBM 360</span></div><div class="line" id="232341"><span class="nick" style="color:#80b1d3"><a href="#232341" label="[23:23:41]">&lt;stikonas&gt;</a></span><span class="message">or at the very least header from M2libc/stage0-posix-amd64 seems to create files with correct debug info</span></div><div class="line" id="232347"><span class="nick" style="color:#2e2a4a"><a href="#232347" label="[23:23:47]">&lt;muurkha&gt;</a></span><span class="message">or you could have written a C compiler in 01932 on paper</span></div><div class="line" id="232403"><span class="nick" style="color:#234e69"><a href="#232403" label="[23:24:03]">&lt;kerravon&gt;</a></span><span class="message">yeah - that's a very interesting question actually</span></div><div class="line" id="232416"><span class="nick" style="color:#2e2a4a"><a href="#232416" label="[23:24:16]">&lt;muurkha&gt;</a></span><span class="message">for, I don't know, ARM</span></div><div class="line" id="232419"><span class="nick" style="color:#234e69"><a href="#232419" label="[23:24:19]">&lt;kerravon&gt;</a></span><span class="message">1910 i think is the crucial year. let me find it</span></div><div class="line" id="232421"><span class="nick" style="color:#2e2a4a"><a href="#232421" label="[23:24:21]">&lt;muurkha&gt;</a></span><span class="message">how do you like ARM assembly, btw?</span></div><div class="line" id="232440"><span class="nick" style="color:#234e69"><a href="#232440" label="[23:24:40]">&lt;kerravon&gt;</a></span><span class="message">i'm not really a language expert</span></div><div class="line" id="232447"><span class="nick" style="color:#234e69"><a href="#232447" label="[23:24:47]">&lt;kerravon&gt;</a></span><span class="message">just a user</span></div><div class="line" id="232450"><span class="nick" style="color:#2e2a4a"><a href="#232450" label="[23:24:50]">&lt;muurkha&gt;</a></span><span class="message">I mean the instruction set</span></div><div class="line" id="232540"><span class="nick" style="color:#2e2a4a"><a href="#232540" label="[23:25:40]">&lt;muurkha&gt;</a></span><span class="message">the issue is that it took a long time for people to figure out what to want.  when C came out, BCPL was maybe the closest thing to a portable low-level language, and it was too big to fit on minicomputers</span></div><div class="line" id="232602"><span class="nick" style="color:#2e2a4a"><a href="#232602" label="[23:26:02]">&lt;muurkha&gt;</a></span><span class="message">even C was too big to fit on the PDP-7 that Unix started on, and the PDP-7 wasn't byte-oriented, and C really wants a byte-oriented machine</span></div><div class="line" id="232615"><span class="nick" style="color:#2e2a4a"><a href="#232615" label="[23:26:15]">&lt;muurkha&gt;</a></span><span class="message">(which is why I namechecked the 360)</span></div><div class="line" id="233113"><span class="nick" style="color:#2e2a4a"><a href="#233113" label="[23:31:13]">&lt;muurkha&gt;</a></span><span class="message">in the 80s it wasn't obvious that the internet was going to rule the world; in fact without Al Gore it probably would have been eclipsed by commercial networks, crippled by the NSFNet AUP</span></div><div class="line" id="233150"><span class="nick" style="color:#2e2a4a"><a href="#233150" label="[23:31:50]">&lt;muurkha&gt;</a></span><span class="message">it wasn't obvious the 386 was going to rule the world; the 68000 seemed like a better bet, and plenty of people were still buying C64s in 01986</span></div><div class="line" id="233212"><span class="nick" style="color:#2e2a4a"><a href="#233212" label="[23:32:12]">&lt;muurkha&gt;</a></span><span class="message">in fact it wasn't discontinued until 01994</span></div><div class="line" id="233256"><span class="nick" style="color:#2e2a4a"><a href="#233256" label="[23:32:56]">&lt;muurkha&gt;</a></span><span class="message">and plenty of people thought the triumph of RISC would be pretty immediate.  ARM did eventually surpass the 386 line in popularity but probably not until 02010 or so</span></div><div class="line" id="233419"><span class="nick" style="color:#2e2a4a"><a href="#233419" label="[23:34:19]">&lt;muurkha&gt;</a></span><span class="message">when OS/2 split from Microsoft in 01990 lots of people bet on IBM, and OS/2 had its own non-Win32 32-bit API in 01992</span></div><div class="line" id="233443"><span class="nick" style="color:#2e2a4a"><a href="#233443" label="[23:34:43]">&lt;muurkha&gt;</a></span><span class="message">plenty of people were also betting on Smalltalk too, which could do things no mainstream software could do</span></div><div class="line" id="233548"><span class="nick" style="color:#2e2a4a"><a href="#233548" label="[23:35:48]">&lt;muurkha&gt;</a></span><span class="message">I mean most of Win32 was Microsoft trying to reach feature parity with Smalltalk without taking the order-of-magnitude slowdown that Smalltalk involved</span></div><div class="line" id="233646"><span class="nick" style="color:#2e2a4a"><a href="#233646" label="[23:36:46]">&lt;muurkha&gt;</a></span><span class="message">even today Alan Kay blames that slowdown on CPU vendors not dedicating resources to Smalltalk-style dynamic dispatch, based on his experience with microcoded Smalltalk implementations on Dirty Genitals NOVA clones in the 01970s, but I think he's mistaken about it</span></div><div class="line" id="233656"><span class="nick" style="color:#234e69"><a href="#233656" label="[23:36:56]">&lt;kerravon&gt;</a></span><span class="message">sure - i'm talking about with the knowledge we have now</span></div><div class="line" id="233714"><span class="nick" style="color:#234e69"><a href="#233714" label="[23:37:14]">&lt;kerravon&gt;</a></span><span class="message">haven't found the year yet - got interrupted by rl</span></div><div class="line" id="233726"><span class="nick" style="color:#234e69"><a href="#233726" label="[23:37:26]">&lt;kerravon&gt;</a></span><span class="message">and yeah - people didn't know what to want</span></div><div class="line" id="233742"><span class="nick" style="color:#2e2a4a"><a href="#233742" label="[23:37:42]">&lt;muurkha&gt;</a></span><span class="message">it might be the case that things would have worked out very differently with slight changes</span></div><div class="line" id="233800"><span class="nick" style="color:#2e2a4a"><a href="#233800" label="[23:38:00]">&lt;muurkha&gt;</a></span><span class="message">the right executive having a heart attack at Xerox, most obviously</span></div><div class="line" id="233815"><span class="nick" style="color:#2e2a4a"><a href="#233815" label="[23:38:15]">&lt;muurkha&gt;</a></span><span class="message">and the Al Gore thing I suggested above</span></div><div class="line" id="233912"><span class="nick" style="color:#234e69"><a href="#233912" label="[23:39:12]">&lt;kerravon&gt;</a></span><span class="message"> In principle theory of parsing, finite automata, etc could be developed say around 1910.</span></div><div class="line" id="233927"><span class="nick" style="color:#2e2a4a"><a href="#233927" label="[23:39:27]">&lt;muurkha&gt;</a></span><span class="message">or in 300 BCE</span></div><div class="line" id="233933"><span class="nick" style="color:#234e69"><a href="#233933" label="[23:39:33]">&lt;kerravon&gt;</a></span><span class="message">&gt; But pragmatics</span></div><div class="line" id="233933"><span class="nick" style="color:#234e69"><a href="#233933" label="[23:39:33]">&lt;kerravon&gt;</a></span><span class="message">&gt; requires experience: you need to know that it is</span></div><div class="line" id="233934"><span class="nick" style="color:#234e69"><a href="#233934" label="[23:39:34]">&lt;kerravon&gt;</a></span><span class="message">&gt; useful to describe programming languages using</span></div><div class="line" id="233934"><span class="nick" style="color:#234e69"><a href="#233934" label="[23:39:34]">&lt;kerravon&gt;</a></span><span class="message">&gt; context free grammars, you need experience to</span></div><div class="line" id="233935"><span class="nick" style="color:#234e69"><a href="#233935" label="[23:39:35]">&lt;kerravon&gt;</a></span><span class="message">&gt; know that LL(1) and LALR work for practical languages.</span></div><div class="line" id="233938"><span class="nick" style="color:#234e69"><a href="#233938" label="[23:39:38]">&lt;kerravon&gt;</a></span><span class="message">no</span></div><div class="line" id="233945"><span class="nick" style="color:#2e2a4a"><a href="#233945" label="[23:39:45]">&lt;muurkha&gt;</a></span><span class="message">who said that?</span></div><div class="line" id="234010"><span class="nick" style="color:#234e69"><a href="#234010" label="[23:40:10]">&lt;kerravon&gt;</a></span><span class="message"> <a rel="nofollow" href="https://groups.google.com/g/alt.os.development/c/0f3Ns-Q_R4M/m/hpz-S0WSBwAJ">https://groups.google.com/g/alt.os.development/c/0f3Ns-Q_R4M/m/hpz-S0WSBwAJ</a> </span></div><div class="line" id="234013"><span class="nick" style="color:#234e69"><a href="#234013" label="[23:40:13]">&lt;kerravon&gt;</a></span><span class="message">quoted there</span></div><div class="line" id="234109"><span class="nick" style="color:#2e2a4a"><a href="#234109" label="[23:41:09]">&lt;muurkha&gt;</a></span><span class="message">I think segmentation was intended to be a lot more full-featured than what they actually shipped; they wanted PDP-11-style base+bounds segments</span></div><div class="line" id="234156"><span class="nick" style="color:#2e2a4a"><a href="#234156" label="[23:41:56]">&lt;muurkha&gt;</a></span><span class="message">I think they managed to finally get that into the 80286, but the 80286 came out pretty late for a PDP-11; lots of people had more than a meg of RAM</span></div><div class="line" id="234228"><span class="nick" style="color:#2e2a4a"><a href="#234228" label="[23:42:28]">&lt;muurkha&gt;</a></span><span class="message">I still think the 4-bit shift was one of the biggest engineering mistakes of the 20th century</span></div><div class="line" id="234255"><span class="nick" style="color:#234e69"><a href="#234255" label="[23:42:55]">&lt;kerravon&gt;</a></span><span class="message">i think what was wrong was HARDCODING the number 4, not the actual principle</span></div><div class="line" id="234302"><span class="nick" style="color:#2e2a4a"><a href="#234302" label="[23:43:02]">&lt;muurkha&gt;</a></span><span class="message">yeah</span></div><div class="line" id="234311"><span class="nick" style="color:#2e2a4a"><a href="#234311" label="[23:43:11]">&lt;muurkha&gt;</a></span><span class="message">but hardcoding 6 or 7 would have been a lot better</span></div><div class="line" id="234313"><span class="nick" style="color:#2e2a4a"><a href="#234313" label="[23:43:13]">&lt;muurkha&gt;</a></span><span class="message">F-83 did implement paging on the 8086, btw</span></div><div class="line" id="234430"><span class="nick" style="color:#234e69"><a href="#234430" label="[23:44:30]">&lt;kerravon&gt;</a></span><span class="message">the turbo 186 has an 8 bit shift</span></div><div class="line" id="234436"><span class="nick" style="color:#2e2a4a"><a href="#234436" label="[23:44:36]">&lt;muurkha&gt;</a></span><span class="message">I think `far` and `huge` pointers in programs compiled with other memory models were reasonably common</span></div><div class="line" id="234441"><span class="nick" style="color:#2e2a4a"><a href="#234441" label="[23:44:41]">&lt;muurkha&gt;</a></span><span class="message">neat, I didn't know about that</span></div><div class="line" id="234459"><span class="nick" style="color:#234e69"><a href="#234459" label="[23:44:59]">&lt;kerravon&gt;</a></span><span class="message">it just needed an API to retrieve the shift</span></div><div class="line" id="234535"><span class="nick" style="color:#234e69"><a href="#234535" label="[23:45:35]">&lt;kerravon&gt;</a></span><span class="message">huge memory model in microsoft C uses AHSHIFT in the family API</span></div><div class="line" id="234538"><span class="nick" style="color:#2e2a4a"><a href="#234538" label="[23:45:38]">&lt;muurkha&gt;</a></span><span class="message">but then you'd have to use the variable shift in all your huge-address computations, which would make them even slower</span></div><div class="line" id="234554"><span class="nick" style="color:#2e2a4a"><a href="#234554" label="[23:45:54]">&lt;muurkha&gt;</a></span><span class="message">although I guess maybe your could provide an instruction or two that solves that problem</span></div><div class="line" id="234654"><span class="nick" style="color:#2e2a4a"><a href="#234654" label="[23:46:54]">&lt;muurkha&gt;</a></span><span class="message">oh, the issue with PC-relative instructions is that they allow dynamic loading, Win16-style</span></div><div class="line" id="234712"><span class="nick" style="color:#2e2a4a"><a href="#234712" label="[23:47:12]">&lt;muurkha&gt;</a></span><span class="message">on the 8086 this is achieved with call $+2</span></div><div class="line" id="234804"><span class="nick" style="color:#2e2a4a"><a href="#234804" label="[23:48:04]">&lt;muurkha&gt;</a></span><span class="message">how does the stack work on S/360?</span></div><div class="line" id="235046"><span class="nick" style="color:#2e2a4a"><a href="#235046" label="[23:50:46]">&lt;muurkha&gt;</a></span><span class="message">Oberon did its dynamic linking without PC-relative instructions or other position-independent code by running a full link pass at load-time, which was workable but not fast</span></div><div class="line" id="235138"><span class="nick" style="color:#2e2a4a"><a href="#235138" label="[23:51:38]">&lt;muurkha&gt;</a></span><span class="message">downside of PC-relative instructions is that they're annoying as hell to assemble and disassemble in your head</span></div><div class="line" id="235503"><span class="nick" style="color:#2e2a4a"><a href="#235503" label="[23:55:03]">&lt;muurkha&gt;</a></span><span class="message">LALR parser generators are nice not just because they allow you to write a parser for a pretty expressive class of languages just by annotating a context-free grammar with semantic actions, but also because they tell you where the ambiguities in your grammar are so you can resolve them</span></div><div class="line" id="235553"><span class="nick" style="color:#2e2a4a"><a href="#235553" label="[23:55:53]">&lt;muurkha&gt;</a></span><span class="message">also, the LALR parser they generate is pretty fast and compact and uses very little memory, less than a recursive-descent parser would</span></div><div class="line" id="235906"><span class="nick" style="color:#2e2a4a"><a href="#235906" label="[23:59:06]">&lt;muurkha&gt;</a></span><span class="message">PIC is in some sense inherently slower than non-position-independent code; PC-relative addressing requires an extra full-width addition on each effective address computation.  But it compensates for that by permitting higher code density, and in hardware doing more additions isn't always slower because they may not be on the critical path</span></div><br /></div></body></html>