<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-01-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000618"><span class="nick" style="color:#389600"><a href="#000618" label="[00:06:18]">&lt;fossy&gt;</a></span><span class="message">GoogulatorMobile: seems like my theory about /dev/shm was correct given that &quot;run up to Python bootstrap&quot; stage of CI completed</span></div><div class="line" id="014920"><span class="nick" style="color:#8dd3c7"><a href="#014920" label="[01:49:20]">&lt;stikonas&gt;</a></span><span class="message">hmm, looks like random hangs on qemu are not related to forking at all... It's probably a race condition between some UEFI timer interrupt kicking in after syscall and me fixing the value of SS register with &quot;mov_ss,eax&quot;</span></div><div class="line" id="014958"><span class="nick" style="color:#389600"><a href="#014958" label="[01:49:58]">&lt;fossy&gt;</a></span><span class="message">these UEFI timer interrupts seem to be causing so much undesirable behaviour :\</span></div><div class="line" id="015504"><span class="nick" style="color:#8dd3c7"><a href="#015504" label="[01:55:04]">&lt;stikonas&gt;</a></span><span class="message">yeah, though I don't see it on baremetal</span></div><div class="line" id="015512"><span class="nick" style="color:#8dd3c7"><a href="#015512" label="[01:55:12]">&lt;stikonas&gt;</a></span><span class="message">either they are not happening there</span></div><div class="line" id="015516"><span class="nick" style="color:#8dd3c7"><a href="#015516" label="[01:55:16]">&lt;stikonas&gt;</a></span><span class="message">(on my system)</span></div><div class="line" id="015522"><span class="nick" style="color:#8dd3c7"><a href="#015522" label="[01:55:22]">&lt;stikonas&gt;</a></span><span class="message">or race condition is much rare</span></div><div class="line" id="015702"><span class="nick" style="color:#8dd3c7"><a href="#015702" label="[01:57:02]">&lt;stikonas&gt;</a></span><span class="message">the thing is that UEFI itself sets up CS and SS registers as if it was in ring 3</span></div><div class="line" id="015709"><span class="nick" style="color:#8dd3c7"><a href="#015709" label="[01:57:09]">&lt;stikonas&gt;</a></span><span class="message">(or something like that)</span></div><div class="line" id="015817"><span class="nick" style="color:#8dd3c7"><a href="#015817" label="[01:58:17]">&lt;stikonas&gt;</a></span><span class="message">and syscall instruction does a lot of things (<a rel="nofollow" href="https://www.felixcloutier.com/x86/syscall">https://www.felixcloutier.com/x86/syscall</a>)  but it changes tha values of CS and SS in a way that ends up with a different values than what UEFI needs</span></div><div class="line" id="015856"><span class="nick" style="color:#8dd3c7"><a href="#015856" label="[01:58:56]">&lt;stikonas&gt;</a></span><span class="message">so I had this hack to fix it up... <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/commit/b61add87cbb2ee193f82b1db214a03a5b2e09e76/posix-runner/posix-runner.c#L421">https://git.stikonas.eu/andrius/stage0-uefi/src/commit/b61add87cbb2ee193f82b1db214a03a5b2e09e76/posix-runner/posix-runner.c#L421</a> </span></div><div class="line" id="020017"><span class="nick" style="color:#389600"><a href="#020017" label="[02:00:17]">&lt;fossy&gt;</a></span><span class="message">eek, that does look a little bit hacky</span></div><div class="line" id="020038"><span class="nick" style="color:#389600"><a href="#020038" label="[02:00:38]">&lt;fossy&gt;</a></span><span class="message">what's the significance of 0x30? i am almost completely unfaimiliar with memory segmentation (thats what cs &amp; ss are used for right)</span></div><div class="line" id="020056"><span class="nick" style="color:#8dd3c7"><a href="#020056" label="[02:00:56]">&lt;stikonas&gt;</a></span><span class="message">well, I think these values specifies where in the memory stack is</span></div><div class="line" id="020112"><span class="nick" style="color:#8dd3c7"><a href="#020112" label="[02:01:12]">&lt;stikonas&gt;</a></span><span class="message">but anyway, UEFI starts with cs = 0x38 and ss = 0x30</span></div><div class="line" id="020124"><span class="nick" style="color:#8dd3c7"><a href="#020124" label="[02:01:24]">&lt;stikonas&gt;</a></span><span class="message">and for it to function, I think it needs these values</span></div><div class="line" id="020130"><span class="nick" style="color:#389600"><a href="#020130" label="[02:01:30]">&lt;fossy&gt;</a></span><span class="message">uh huh</span></div><div class="line" id="020141"><span class="nick" style="color:#8dd3c7"><a href="#020141" label="[02:01:41]">&lt;stikonas&gt;</a></span><span class="message">then syscall instruction sets them to</span></div><div class="line" id="020142"><span class="nick" style="color:#8dd3c7"><a href="#020142" label="[02:01:42]">&lt;stikonas&gt;</a></span><span class="message">CS.Selector := IA32_STAR[47:32] AND FFFCH</span></div><div class="line" id="020152"><span class="nick" style="color:#8dd3c7"><a href="#020152" label="[02:01:52]">&lt;stikonas&gt;</a></span><span class="message">and SS.Selector := IA32_STAR[47:32] + 8;</span></div><div class="line" id="020222"><span class="nick" style="color:#8dd3c7"><a href="#020222" label="[02:02:22]">&lt;stikonas&gt;</a></span><span class="message">so whatever I write to IA32_STAR register, I'll still have SS = CS + 8</span></div><div class="line" id="020236"><span class="nick" style="color:#389600"><a href="#020236" label="[02:02:36]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="020239"><span class="nick" style="color:#8dd3c7"><a href="#020239" label="[02:02:39]">&lt;stikonas&gt;</a></span><span class="message">(and I need vice versa...)</span></div><div class="line" id="020251"><span class="nick" style="color:#8dd3c7"><a href="#020251" label="[02:02:51]">&lt;stikonas&gt;</a></span><span class="message">I'm trying to disable interrupts...</span></div><div class="line" id="020257"><span class="nick" style="color:#8dd3c7"><a href="#020257" label="[02:02:57]">&lt;stikonas&gt;</a></span><span class="message">but that is not helping... :(</span></div><div class="line" id="020314"><span class="nick" style="color:#8dd3c7"><a href="#020314" label="[02:03:14]">&lt;stikonas&gt;</a></span><span class="message">at least call to <a rel="nofollow" href="https://uefi.org/specs/UEFI/2.10/07_Services_Boot_Services.html?highlight=raise_tpl#efi-boot-services-raisetpl">https://uefi.org/specs/UEFI/2.10/07_Services_Boot_Services.html?highlight=raise_tpl#efi-boot-services-raisetpl</a>  didn't work...</span></div><div class="line" id="020318"><span class="nick" style="color:#389600"><a href="#020318" label="[02:03:18]">&lt;fossy&gt;</a></span><span class="message">how do interrupts work in uefi?</span></div><div class="line" id="020334"><span class="nick" style="color:#389600"><a href="#020334" label="[02:03:34]">&lt;fossy&gt;</a></span><span class="message">normally?</span></div><div class="line" id="020403"><span class="nick" style="color:#8dd3c7"><a href="#020403" label="[02:04:03]">&lt;stikonas&gt;</a></span><span class="message">I think it only has timer interrupt...</span></div><div class="line" id="020410"><span class="nick" style="color:#8dd3c7"><a href="#020410" label="[02:04:10]">&lt;stikonas&gt;</a></span><span class="message">and you can also create your own events...</span></div><div class="line" id="020420"><span class="nick" style="color:#8dd3c7"><a href="#020420" label="[02:04:20]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://uefi.org/specs/UEFI/2.10/07_Services_Boot_Services.html?highlight=raise_tpl#efi-boot-services-createevent">https://uefi.org/specs/UEFI/2.10/07_Services_Boot_Services.html?highlight=raise_tpl#efi-boot-services-createevent</a> </span></div><div class="line" id="020426"><span class="nick" style="color:#8dd3c7"><a href="#020426" label="[02:04:26]">&lt;stikonas&gt;</a></span><span class="message">but I don't really know much about that</span></div><div class="line" id="020915"><span class="nick" style="color:#8dd3c7"><a href="#020915" label="[02:09:15]">&lt;stikonas&gt;</a></span><span class="message">oh, we are back to single digits in live-bootstrap pull requets...</span></div><div class="line" id="021108"><span class="nick" style="color:#8dd3c7"><a href="#021108" label="[02:11:08]">&lt;stikonas&gt;</a></span><span class="message">fossy: as for significance of 0x30, there is significance of the last digit (0)</span></div><div class="line" id="021116"><span class="nick" style="color:#8dd3c7"><a href="#021116" label="[02:11:16]">&lt;stikonas&gt;</a></span><span class="message">that signifies that we are in ring 0</span></div><div class="line" id="022524"><span class="nick" style="color:#8dd3c7"><a href="#022524" label="[02:25:24]">&lt;stikonas&gt;</a></span><span class="message">maybe I need to somehow steal this from UEFI... <a rel="nofollow" href="https://en.wikipedia.org/wiki/Interrupt_descriptor_table">https://en.wikipedia.org/wiki/Interrupt_descriptor_table</a> </span></div><div class="line" id="022926"><span class="nick" style="color:#8dd3c7"><a href="#022926" label="[02:29:26]">&lt;stikonas&gt;</a></span><span class="message">no idea how any of that works...</span></div><div class="line" id="023029"><span class="nick" style="color:#389600"><a href="#023029" label="[02:30:29]">&lt;fossy&gt;</a></span><span class="message">i'm not particularly familiar with it either, apart from eharing that it exists</span></div><div class="line" id="023054"><span class="nick" style="color:#389600"><a href="#023054" label="[02:30:54]">&lt;fossy&gt;</a></span><span class="message">the IDT appears to exist in a location in memory, but Wikipedia doesn't detail the structure of the IDT in memory...</span></div><div class="line" id="023146"><span class="nick" style="color:#8dd3c7"><a href="#023146" label="[02:31:46]">&lt;stikonas&gt;</a></span><span class="message">there is also this <a rel="nofollow" href="https://uefi.org/specs/UEFI/2.10/02_Overview.html#enabling-paging-or-alternate-translations-in-an-application">https://uefi.org/specs/UEFI/2.10/02_Overview.html#enabling-paging-or-alternate-translations-in-an-application</a> </span></div><div class="line" id="023155"><span class="nick" style="color:#8dd3c7"><a href="#023155" label="[02:31:55]">&lt;stikonas&gt;</a></span><span class="message">I think it implies that it should be possible</span></div><div class="line" id="023224"><span class="nick" style="color:#8dd3c7"><a href="#023224" label="[02:32:24]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's getting late today...</span></div><div class="line" id="174137"><span class="nick" style="color:#2e2a4a"><a href="#174137" label="[17:41:37]">&lt;oriansj&gt;</a></span><span class="message">well I found a segfault in mescc-tools-extra's match.c but it can only be triggerred by badly behaving shells</span></div><div class="line" id="174246"><span class="nick" style="color:#8dd3c7"><a href="#174246" label="[17:42:46]">&lt;stikonas&gt;</a></span><span class="message">oriansj: can you add those defines to M2libc <a rel="nofollow" href="https://github.com/oriansj/M2libc/pull/54">https://github.com/oriansj/M2libc/pull/54</a>  ?</span></div><div class="line" id="174303"><span class="nick" style="color:#8dd3c7"><a href="#174303" label="[17:43:03]">&lt;stikonas&gt;</a></span><span class="message">I think I've figured out how to fix those random hangs on UEFI</span></div><div class="line" id="174332"><span class="nick" style="color:#8dd3c7"><a href="#174332" label="[17:43:32]">&lt;stikonas&gt;</a></span><span class="message">(i.e. disable/restore HW interrupts when necessary)</span></div><div class="line" id="174452"><span class="nick" style="color:#8dd3c7"><a href="#174452" label="[17:44:52]">&lt;stikonas&gt;</a></span><span class="message">and nice work finding segfault!</span></div><div class="line" id="174452"><span class="nick" style="color:#2e2a4a"><a href="#174452" label="[17:44:52]">&lt;oriansj&gt;</a></span><span class="message">stikonas: nice</span></div><div class="line" id="174517"><span class="nick" style="color:#8dd3c7"><a href="#174517" label="[17:45:17]">&lt;stikonas&gt;</a></span><span class="message">so my next bug in posix-runner is something to do with free()</span></div><div class="line" id="174535"><span class="nick" style="color:#8dd3c7"><a href="#174535" label="[17:45:35]">&lt;stikonas&gt;</a></span><span class="message">at least sometimes kaem exists with exit code 1</span></div><div class="line" id="174550"><span class="nick" style="color:#2e2a4a"><a href="#174550" label="[17:45:50]">&lt;oriansj&gt;</a></span><span class="message">and merged</span></div><div class="line" id="174550"><span class="nick" style="color:#8dd3c7"><a href="#174550" label="[17:45:50]">&lt;stikonas&gt;</a></span><span class="message">I debugged this to happen due to fclose() at the end of the program</span></div><div class="line" id="174604"><span class="nick" style="color:#8dd3c7"><a href="#174604" label="[17:46:04]">&lt;stikonas&gt;</a></span><span class="message">which does free(stream-&gt;buffer)</span></div><div class="line" id="174628"><span class="nick" style="color:#8dd3c7"><a href="#174628" label="[17:46:28]">&lt;stikonas&gt;</a></span><span class="message">which for some reason exits with no chunk allocated at that address error</span></div><div class="line" id="174646"><span class="nick" style="color:#8dd3c7"><a href="#174646" label="[17:46:46]">&lt;stikonas&gt;</a></span><span class="message">(might be something to do with bugs in fork code)</span></div><div class="line" id="174648"><span class="nick" style="color:#8dd3c7"><a href="#174648" label="[17:46:48]">&lt;stikonas&gt;</a></span><span class="message">oriansj: thanks!</span></div><div class="line" id="175058"><span class="nick" style="color:#8dd3c7"><a href="#175058" label="[17:50:58]">&lt;stikonas&gt;</a></span><span class="message">interrupt fix pushed too: <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/commit/5f7ebfd46c108aa5d82366c0756193fb1bc5d522">https://git.stikonas.eu/andrius/stage0-uefi/commit/5f7ebfd46c108aa5d82366c0756193fb1bc5d522</a> </span></div><div class="line" id="175115"><span class="nick" style="color:#2e2a4a"><a href="#175115" label="[17:51:15]">&lt;oriansj&gt;</a></span><span class="message">great work on the UEFI kernel; it is shaping up nicely</span></div><div class="line" id="175137"><span class="nick" style="color:#8dd3c7"><a href="#175137" label="[17:51:37]">&lt;stikonas&gt;</a></span><span class="message">so now I can run mescc-tools-mini-kaem.kaem to completion</span></div><div class="line" id="175150"><span class="nick" style="color:#8dd3c7"><a href="#175150" label="[17:51:50]">&lt;stikonas&gt;</a></span><span class="message">though I think it exits with 1 due to the bug above</span></div><div class="line" id="175226"><span class="nick" style="color:#8dd3c7"><a href="#175226" label="[17:52:26]">&lt;stikonas&gt;</a></span><span class="message">and AMD64/run.kaem also runs till the first kaem script finishes just before building mescc-tools-extra</span></div><div class="line" id="175241"><span class="nick" style="color:#8dd3c7"><a href="#175241" label="[17:52:41]">&lt;stikonas&gt;</a></span><span class="message">yeah, it's almost able to run stage0-posix now</span></div><div class="line" id="175303"><span class="nick" style="color:#8dd3c7"><a href="#175303" label="[17:53:03]">&lt;stikonas&gt;</a></span><span class="message">well, now kaem-optional-seed as that is not position independent</span></div><div class="line" id="175324"><span class="nick" style="color:#8dd3c7"><a href="#175324" label="[17:53:24]">&lt;stikonas&gt;</a></span><span class="message">(making it PIE would add 3 extra bytes I think)</span></div><div class="line" id="175634"><span class="nick" style="color:#2e2a4a"><a href="#175634" label="[17:56:34]">&lt;oriansj&gt;</a></span><span class="message">which is fine if it helps</span></div><div class="line" id="175721"><span class="nick" style="color:#8dd3c7"><a href="#175721" label="[17:57:21]">&lt;stikonas&gt;</a></span><span class="message">well, we don't scritly need it for UEFI bootstrapping</span></div><div class="line" id="180110"><span class="nick" style="color:#2e2a4a"><a href="#180110" label="[18:01:10]">&lt;oriansj&gt;</a></span><span class="message">would adding --mode to mkdir in mescc-tools-extra be helpful?</span></div><div class="line" id="180137"><span class="nick" style="color:#8dd3c7"><a href="#180137" label="[18:01:37]">&lt;stikonas&gt;</a></span><span class="message">hmm, I don't think we need it</span></div><div class="line" id="180143"><span class="nick" style="color:#8dd3c7"><a href="#180143" label="[18:01:43]">&lt;stikonas&gt;</a></span><span class="message">but it's not harmful either</span></div><div class="line" id="180719"><span class="nick" style="color:#8dd3c7"><a href="#180719" label="[18:07:19]">&lt;stikonas&gt;</a></span><span class="message">oh there are quite a few attemts at hobbyist kernels (though not in bootstrappable context), e.g. just saw this one <a rel="nofollow" href="https://github.com/Kaj9296/PatchworkOS/tree/main">https://github.com/Kaj9296/PatchworkOS/tree/main</a> </span></div><div class="line" id="181501"><span class="nick" style="color:#2e2a4a"><a href="#181501" label="[18:15:01]">&lt;oriansj&gt;</a></span><span class="message">well yeah, like writing a compiler or an interpreter. it is a journey of learning about reality</span></div><div class="line" id="181703"><span class="nick" style="color:#2e2a4a"><a href="#181703" label="[18:17:03]">&lt;oriansj&gt;</a></span><span class="message">and bootstrapping is always a group activity in the long term</span></div><div class="line" id="183347"><span class="nick" style="color:#2e2a4a"><a href="#183347" label="[18:33:47]">&lt;oriansj&gt;</a></span><span class="message">because there is always too much to do in a FULL bootstrap and no single person can do it all but collectively and with years of fun together; we achieved far more together than anyone could do alone.</span></div><div class="line" id="204946"><span class="nick" style="color:#6b8072"><a href="#204946" label="[20:49:46]">&lt;lrvick&gt;</a></span><span class="message">Okay, back from way too much travel, and back to trying to get live-bootstrap to seed an OCI-based linux distro.</span></div><div class="line" id="205039"><span class="nick" style="color:#6b8072"><a href="#205039" label="[20:50:39]">&lt;lrvick&gt;</a></span><span class="message">Latest failing attempt, it makes it to weirdly, bc: <a rel="nofollow" href="https://dpaste.org/XyUdg/raw">https://dpaste.org/XyUdg/raw</a> </span></div><div class="line" id="205121"><span class="nick" style="color:#6b8072"><a href="#205121" label="[20:51:21]">&lt;lrvick&gt;</a></span><span class="message">Not much to go on here. Ideas for debugging welcome</span></div><div class="line" id="205217"><span class="nick" style="color:#6b8072"><a href="#205217" label="[20:52:17]">&lt;lrvick&gt;</a></span><span class="message">I stripped my docker setup to the bone so can just drop this example in root of master to test</span></div><div class="line" id="205601"><span class="nick" style="color:#8dd3c7"><a href="#205601" label="[20:56:01]">&lt;stikonas&gt;</a></span><span class="message">hmm, that looks like the end of former sysa</span></div><div class="line" id="205622"><span class="nick" style="color:#8dd3c7"><a href="#205622" label="[20:56:22]">&lt;stikonas&gt;</a></span><span class="message">i.e. just before Linux kernel (which is skipped in non qemu/baremetal modes)</span></div><div class="line" id="210317"><span class="nick" style="color:#8dd3c7"><a href="#210317" label="[21:03:17]">&lt;stikonas&gt;</a></span><span class="message">lrvick: a bit hard to tell from just your log what is happening...</span></div><div class="line" id="210348"><span class="nick" style="color:#6b8072"><a href="#210348" label="[21:03:48]">&lt;lrvick&gt;</a></span><span class="message">I used the following small patch to rootfs.py to generate the target directory with &quot;--container&quot;: <a rel="nofollow" href="https://dpaste.org/aQpkS/raw">https://dpaste.org/aQpkS/raw</a> </span></div><div class="line" id="210349"><span class="nick" style="color:#8dd3c7"><a href="#210349" label="[21:03:49]">&lt;stikonas&gt;</a></span><span class="message">looks like kaem-optional-seed is not happy with exit code of its child program</span></div><div class="line" id="210355"><span class="nick" style="color:#8dd3c7"><a href="#210355" label="[21:03:55]">&lt;stikonas&gt;</a></span><span class="message">which I guess is full kaem</span></div><div class="line" id="210407"><span class="nick" style="color:#8dd3c7"><a href="#210407" label="[21:04:07]">&lt;stikonas&gt;</a></span><span class="message">it migth be useful to strace it...</span></div><div class="line" id="210714"><span class="nick" style="color:#6b8072"><a href="#210714" label="[21:07:14]">&lt;lrvick&gt;</a></span><span class="message">The only thing I skip from &quot;container&quot; vs &quot;chroot&quot; is the actual call to chroot.</span></div><div class="line" id="210727"><span class="nick" style="color:#6b8072"><a href="#210727" label="[21:07:27]">&lt;lrvick&gt;</a></span><span class="message">which does nothing special afaict</span></div><div class="line" id="210737"><span class="nick" style="color:#6b8072"><a href="#210737" label="[21:07:37]">&lt;lrvick&gt;</a></span><span class="message">but yeah, Suppose I will try an strace pass</span></div><div class="line" id="210946"><span class="nick" style="color:#8dd3c7"><a href="#210946" label="[21:09:46]">&lt;stikonas&gt;</a></span><span class="message">in particular see which program first spits non-zero exit code</span></div><div class="line" id="211001"><span class="nick" style="color:#8dd3c7"><a href="#211001" label="[21:10:01]">&lt;stikonas&gt;</a></span><span class="message">hopefully it's not kaem-optional itself but some child</span></div><div class="line" id="211013"><span class="nick" style="color:#8dd3c7"><a href="#211013" label="[21:10:13]">&lt;stikonas&gt;</a></span><span class="message">(kaem-optional is written in hex0, so annoying to edit)</span></div><div class="line" id="211046"><span class="nick" style="color:#8dd3c7"><a href="#211046" label="[21:10:46]">&lt;stikonas&gt;</a></span><span class="message">if it's something higher level, then one can start inserting more debug print statements, etc..</span></div><div class="line" id="211809"><span class="nick" style="color:#6b8072"><a href="#211809" label="[21:18:09]">&lt;lrvick&gt;</a></span><span class="message">There is a matrix bridge to this channel?</span></div><div class="line" id="211813"><span class="nick" style="color:#6b8072"><a href="#211813" label="[21:18:13]">&lt;lrvick&gt;</a></span><span class="message">ACTION looks</span></div><div class="line" id="211852"><span class="nick" style="color:#8dd3c7"><a href="#211852" label="[21:18:52]">&lt;stikonas&gt;</a></span><span class="message">lrvick: I run it</span></div><div class="line" id="211933"><span class="nick" style="color:#8dd3c7"><a href="#211933" label="[21:19:33]">&lt;stikonas&gt;</a></span><span class="message">though right now I have some router issues (it's rebooting frequently, I probably need to buy a new one), which is why I (and matrix bridge) ocassionally lose connection for a short time</span></div><div class="line" id="211947"><span class="nick" style="color:#6b8072"><a href="#211947" label="[21:19:47]">&lt;lrvick&gt;</a></span><span class="message">What is the room?</span></div><div class="line" id="212012"><span class="nick" style="color:#8dd3c7"><a href="#212012" label="[21:20:12]">&lt;stikonas&gt;</a></span><span class="message">#bootstrappable:stikonas.eu or #bootstrappable:kde.org</span></div><div class="line" id="212148"><span class="nick" style="color:#80b1d3"><a href="#212148" label="[21:21:48]">&lt;matrix_bridge&gt;</a></span><span class="message">ACTION Lance R. Vick waves</span></div><div class="line" id="212241"><span class="nick" style="color:#80b1d3"><a href="#212241" label="[21:22:41]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; test</span></div><div class="line" id="212242"><span class="nick" style="color:#80b1d3"><a href="#212242" label="[21:22:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; bridge does not seem happy yet</span></div><div class="line" id="212242"><span class="nick" style="color:#80b1d3"><a href="#212242" label="[21:22:42]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; oh there it goes. Just delayed.</span></div><div class="line" id="212323"><span class="nick" style="color:#80b1d3"><a href="#212323" label="[21:23:23]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; shoudn't be too delayed now, it was just delayed when bridge was reconnecting after router reboot</span></div><div class="line" id="212332"><span class="nick" style="color:#8dd3c7"><a href="#212332" label="[21:23:32]">&lt;stikonas&gt;</a></span><span class="message">yeah, it arrived fast now</span></div><div class="line" id="212339"><span class="nick" style="color:#80b1d3"><a href="#212339" label="[21:23:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; Makes sense</span></div><div class="line" id="213811"><span class="nick" style="color:#6b8072"><a href="#213811" label="[21:38:11]">&lt;lrvick&gt;</a></span><span class="message">Pushed my --docker branch to: <a rel="nofollow" href="https://github.com/lrvick/live-bootstrap">https://github.com/lrvick/live-bootstrap</a> </span></div><div class="line" id="213839"><span class="nick" style="color:#6b8072"><a href="#213839" label="[21:38:39]">&lt;lrvick&gt;</a></span><span class="message">doing a from scratch test again, then if it also fails I will try to somehow inject strace</span></div><div class="line" id="213933"><span class="nick" style="color:#6b8072"><a href="#213933" label="[21:39:33]">&lt;lrvick&gt;</a></span><span class="message">Probably can build a static strace binary and copy it in to the scratch layer and run it in front of kaem</span></div><div class="line" id="214113"><span class="nick" style="color:#8dd3c7"><a href="#214113" label="[21:41:13]">&lt;stikonas&gt;</a></span><span class="message">lrvick: you don't need to inject it into the bootstrap</span></div><div class="line" id="214115"><span class="nick" style="color:#8dd3c7"><a href="#214115" label="[21:41:15]">&lt;stikonas&gt;</a></span><span class="message">you can try to run the whole thing with strace...</span></div><div class="line" id="214128"><span class="nick" style="color:#8dd3c7"><a href="#214128" label="[21:41:28]">&lt;stikonas&gt;</a></span><span class="message">though perhaps worth filtering list of syscalls</span></div><div class="line" id="214200"><span class="nick" style="color:#8dd3c7"><a href="#214200" label="[21:42:00]">&lt;stikonas&gt;</a></span><span class="message">well, I guess exit, execve to start with...</span></div><div class="line" id="214248"><span class="nick" style="color:#6b8072"><a href="#214248" label="[21:42:48]">&lt;lrvick&gt;</a></span><span class="message">Oh, you mean run strace in front of docker with follow forks. I remember you can do that now from our last convo a few weeks ago.</span></div><div class="line" id="214352"><span class="nick" style="color:#8dd3c7"><a href="#214352" label="[21:43:52]">&lt;stikonas&gt;</a></span><span class="message">yaeh, you can do that</span></div><div class="line" id="214804"><span class="nick" style="color:#8dd3c7"><a href="#214804" label="[21:48:04]">&lt;stikonas&gt;</a></span><span class="message">anyway, I suggest first finding which process misbehaves</span></div><div class="line" id="214820"><span class="nick" style="color:#8dd3c7"><a href="#214820" label="[21:48:20]">&lt;stikonas&gt;</a></span><span class="message">and then debug it with whatever tools we have...</span></div><div class="line" id="214905"><span class="nick" style="color:#8dd3c7"><a href="#214905" label="[21:49:05]">&lt;stikonas&gt;</a></span><span class="message">(strace, gdb or edit program and print more debug info)</span></div><div class="line" id="223736"><span class="nick" style="color:#389600"><a href="#223736" label="[22:37:36]">&lt;fossy&gt;</a></span><span class="message">lrvick: based on your logs, i'd say there's a chance that some command from helpers.sh is silently failing; which would cause the entire bootstrap to exist without printing a message. you could change line 459 of seed/script-generator.c from set -e to set -ex, that would cause all scripts to print out commands as they are run which might show you what is failing without the junk of strace</span></div><div class="line" id="224410"><span class="nick" style="color:#80b1d3"><a href="#224410" label="[22:44:10]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Lance R. Vick&gt; That makes sense. Giving it a shot now.</span></div><div class="line" id="225854"><span class="nick" style="color:#389600"><a href="#225854" label="[22:58:54]">&lt;fossy&gt;</a></span><span class="message">stikonas: your comment about the checksum prepending being a pain to maintain is very fair. but now that we have script-generator i think i will be able to work around that, actually -- i should have a reasonable solution in a few hours</span></div><div class="line" id="230545"><span class="nick" style="color:#389600"><a href="#230545" label="[23:05:45]">&lt;fossy&gt;</a></span><span class="message">stikonas: also, <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/411">https://github.com/fosslinux/live-bootstrap/issues/411</a>,  i think we talked about this before and the answer it is correct as is, but can you confirm</span></div><div class="line" id="231637"><span class="nick" style="color:#8dd3c7"><a href="#231637" label="[23:16:37]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, that's correct</span></div><div class="line" id="231824"><span class="nick" style="color:#8dd3c7"><a href="#231824" label="[23:18:24]">&lt;stikonas&gt;</a></span><span class="message">ok, I've closed that issue now and left a short comment\</span></div><div class="line" id="231945"><span class="nick" style="color:#389600"><a href="#231945" label="[23:19:45]">&lt;fossy&gt;</a></span><span class="message">thank you :D</span></div><div class="line" id="231950"><span class="nick" style="color:#8dd3c7"><a href="#231950" label="[23:19:50]">&lt;stikonas&gt;</a></span><span class="message">fossy: not sure if you saw the logs, but I've sorted out those UEFI interrupt issues</span></div><div class="line" id="232053"><span class="nick" style="color:#8dd3c7"><a href="#232053" label="[23:20:53]">&lt;stikonas&gt;</a></span><span class="message">my first attempt didn't work but later I figured it out, the trick was to restore back interrupts while syscalls are being processed by UEFI</span></div><div class="line" id="232106"><span class="nick" style="color:#8dd3c7"><a href="#232106" label="[23:21:06]">&lt;stikonas&gt;</a></span><span class="message">(the whole change is fairly small: <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/commit/5f7ebfd46c108aa5d82366c0756193fb1bc5d522">https://git.stikonas.eu/andrius/stage0-uefi/commit/5f7ebfd46c108aa5d82366c0756193fb1bc5d522</a>) </span></div><div class="line" id="232119"><span class="nick" style="color:#8dd3c7"><a href="#232119" label="[23:21:19]">&lt;stikonas&gt;</a></span><span class="message">far simpler than dealing with that interrupt descriptor table</span></div><div class="line" id="232403"><span class="nick" style="color:#8dd3c7"><a href="#232403" label="[23:24:03]">&lt;stikonas&gt;</a></span><span class="message">fossy: didn't we have an option to rename files on download?</span></div><div class="line" id="232409"><span class="nick" style="color:#8dd3c7"><a href="#232409" label="[23:24:09]">&lt;stikonas&gt;</a></span><span class="message">(last argument of sources)</span></div><div class="line" id="232421"><span class="nick" style="color:#8dd3c7"><a href="#232421" label="[23:24:21]">&lt;stikonas&gt;</a></span><span class="message">I'm just trying to understand the logic behind those hashes...</span></div><div class="line" id="233645"><span class="nick" style="color:#389600"><a href="#233645" label="[23:36:45]">&lt;fossy&gt;</a></span><span class="message">stikonas: we do, i added this because i thought that compared to the arbitary renaming of files, this is a way to ensure that a particular distfile is always identified by something that doesn't change &amp; isn't arbitarily chosen like a filename. allows multiple files for which it makes sense for them to have the same filename to coexist too</span></div><div class="line" id="233718"><span class="nick" style="color:#389600"><a href="#233718" label="[23:37:18]">&lt;fossy&gt;</a></span><span class="message">i'm not super attached to it, i'm happy to remove it if you think it's not going to provide sufficient benefit</span></div><div class="line" id="233739"><span class="nick" style="color:#8dd3c7"><a href="#233739" label="[23:37:39]">&lt;stikonas&gt;</a></span><span class="message">well, let's see what others think, if others thing it's a good idea then I'm fine</span></div><div class="line" id="233753"><span class="nick" style="color:#8dd3c7"><a href="#233753" label="[23:37:53]">&lt;stikonas&gt;</a></span><span class="message">in particular, let's see what Googulator says, he has been doing a lot of work too recently</span></div><div class="line" id="233806"><span class="nick" style="color:#389600"><a href="#233806" label="[23:38:06]">&lt;fossy&gt;</a></span><span class="message">sure</span></div><br /></div></body></html>