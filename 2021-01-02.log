<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-02.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000228"><span class="nick" style="color:#8dd3c7"><a href="#000228" label="[00:02:28]">&lt;mihi&gt;</a></span><span class="message">OriansJ, janneke: sorry for the confusion about file.c in the bootstrap. I had worked around it (by making cc_x86 still use the old file) in mescc-tools-seed, but I did not send a separate pull request but references the commit in the pull request for M2-Planet. Next time I will make separate pull requests. Doing pull requests across submodules is presumably something you cannot get right :(</span></div><div class="line" id="000242"><span class="nick" style="color:#8dd3c7"><a href="#000242" label="[00:02:42]">&lt;mihi&gt;</a></span><span class="message">Here was my original fix for the bootstrap: <a rel="nofollow" href="https://github.com/schierlm/mescc-tools-seed/commit/b1effe7010b6671f18729c81625fe0bb41ef2c6f">https://github.com/schierlm/mescc-tools-seed/commit/b1effe7010b6671f18729c81625fe0bb41ef2c6f</a> </span></div><div class="line" id="001005"><span class="nick" style="color:#2e2a4a"><a href="#001005" label="[00:10:05]">&lt;yt_&gt;</a></span><span class="message">OriansJ: pull request is up <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed/pull/23">https://github.com/oriansj/mescc-tools-seed/pull/23</a> </span></div><div class="line" id="001139"><span class="nick" style="color:#2e2a4a"><a href="#001139" label="[00:11:39]">&lt;yt_&gt;</a></span><span class="message">FYI this was my first bootstrap of M2-Planet on Apple Silicon, inside a qemu VM running Ubuntu :D</span></div><div class="line" id="001442"><span class="nick" style="color:#6b8072"><a href="#001442" label="[00:14:42]">&lt;janneke&gt;</a></span><span class="message">mihi: np, scrambling all bits together is quite a bit of work</span></div><div class="line" id="002134"><span class="nick" style="color:#8dd3c7"><a href="#002134" label="[00:21:34]">&lt;mihi&gt;</a></span><span class="message">speaking of Guile bootstrapping: at the moment &quot;make ice-9/psyntax-pp.scm.gen&quot; is even broken when you have the old version, apparently broken in <a rel="nofollow" href="http://git.savannah.nongnu.org/cgit/guile.git/commit/?id=3e9019672989de9021e4ff9f1a8483a626003790">http://git.savannah.nongnu.org/cgit/guile.git/commit/?id=3e9019672989de9021e4ff9f1a8483a626003790</a>  ...</span></div><div class="line" id="002249"><span class="nick" style="color:#6b8072"><a href="#002249" label="[00:22:49]">&lt;janneke&gt;</a></span><span class="message">how much attention and love all these bits constantly need...</span></div><div class="line" id="002411"><span class="nick" style="color:#8dd3c7"><a href="#002411" label="[00:24:11]">&lt;mihi&gt;</a></span><span class="message">and when you revert that commit, it works, but while being reproducable on amd64, it is not on x86 (32-bit) as the tmp variables get different names...</span></div><div class="line" id="002426"><span class="nick" style="color:#8dd3c7"><a href="#002426" label="[00:24:26]">&lt;mihi&gt;</a></span><span class="message">not sure if they are based on hashcodes or something...</span></div><div class="line" id="002443"><span class="nick" style="color:#8dd3c7"><a href="#002443" label="[00:24:43]">&lt;mihi&gt;</a></span><span class="message">probably will dig into it at some point in 2021</span></div><div class="line" id="002832"><span class="nick" style="color:#6b8072"><a href="#002832" label="[00:28:32]">&lt;janneke&gt;</a></span><span class="message">OriansJ: latest m2-planet master 358b6cf Fix modulus behavior that is wrong. works!</span></div><div class="line" id="002913"><span class="nick" style="color:#6b8072"><a href="#002913" label="[00:29:13]">&lt;janneke&gt;</a></span><span class="message">the reason that the bootstrapped (non-gcc-built) m2-planet was so bad, is probably because m2-planet uses modulo</span></div><div class="line" id="002919"><span class="nick" style="color:#6b8072"><a href="#002919" label="[00:29:19]">&lt;janneke&gt;</a></span><span class="message">(a lot)</span></div><div class="line" id="003607"><span class="nick" style="color:#80b1d3"><a href="#003607" label="[00:36:07]">&lt;OriansJ&gt;</a></span><span class="message">yt: thank you; merged</span></div><div class="line" id="003705"><span class="nick" style="color:#80b1d3"><a href="#003705" label="[00:37:05]">&lt;OriansJ&gt;</a></span><span class="message">janneke: does that mean we finally got mes.c bootstrap from M2-Planet?</span></div><div class="line" id="004224"><span class="nick" style="color:#80b1d3"><a href="#004224" label="[00:42:24]">&lt;OriansJ&gt;</a></span><span class="message">actually M2-Planet only uses division and modulo in char* numerate_number(int a); in the file functions/numerate_number.c</span></div><div class="line" id="004536"><span class="nick" style="color:#80b1d3"><a href="#004536" label="[00:45:36]">&lt;OriansJ&gt;</a></span><span class="message">and I submitted bootstrap-binaries for inclusion in savannah. Hopefully they don't reject it.</span></div><div class="line" id="004547"><span class="nick" style="color:#80b1d3"><a href="#004547" label="[00:45:47]">&lt;OriansJ&gt;</a></span><span class="message">as it does include binaries</span></div><div class="line" id="005608"><span class="nick" style="color:#6d2462"><a href="#005608" label="[00:56:08]">*</a></span><span class="message">janneke starts another build after cleaning-up wip-m2, wip-full-source-bootstrap</span></div><div class="line" id="005621"><span class="nick" style="color:#6b8072"><a href="#005621" label="[00:56:21]">&lt;janneke&gt;</a></span><span class="message">with mes check phase enabled...let's see</span></div><div class="line" id="005645"><span class="nick" style="color:#6b8072"><a href="#005645" label="[00:56:45]">&lt;janneke&gt;</a></span><span class="message">thanks a lot OriansJ for today, great progress!</span></div><div class="line" id="005649"><span class="nick" style="color:#6d2462"><a href="#005649" label="[00:56:49]">*</a></span><span class="message">janneke -&gt; zZzzz</span></div><div class="line" id="005658"><span class="nick" style="color:#234e69"><a href="#005658" label="[00:56:58]">&lt;xentrac&gt;</a></span><span class="message">sleep well!  wonderful!</span></div><div class="line" id="010423"><span class="nick" style="color:#80b1d3"><a href="#010423" label="[01:04:23]">&lt;OriansJ&gt;</a></span><span class="message">tomorrow is going to be another interesting day</span></div><div class="line" id="010501"><span class="nick" style="color:#234e69"><a href="#010501" label="[01:05:01]">&lt;xentrac&gt;</a></span><span class="message">:)</span></div><div class="line" id="010723"><span class="nick" style="color:#80b1d3"><a href="#010723" label="[01:07:23]">&lt;OriansJ&gt;</a></span><span class="message">depending on janneke's success we might have ALOT of work in mescc-tools-seed tomorrow or I'll just have a day of making file.c get improved performance in a cc_* friendly way</span></div><div class="line" id="011029"><span class="nick" style="color:#234e69"><a href="#011029" label="[01:10:29]">&lt;xentrac&gt;</a></span><span class="message">haha</span></div><div class="line" id="012632"><span class="nick" style="color:#80b1d3"><a href="#012632" label="[01:26:32]">&lt;OriansJ&gt;</a></span><span class="message">plus I need to put some work into M2libc; so that more conventional C primitives will be available for those who expect them.</span></div><div class="line" id="024501"><span class="nick" style="color:#80b1d3"><a href="#024501" label="[02:45:01]">&lt;OriansJ&gt;</a></span><span class="message">well I guess I need to add typedef to M2-Planet to support proper FILE as a struct</span></div><div class="line" id="081749"><span class="nick" style="color:#6b8072"><a href="#081749" label="[08:17:49]">&lt;janneke&gt;</a></span><span class="message">OriansJ: haha, that's one thing on my mes c library's list too</span></div><div class="line" id="091519"><span class="nick" style="color:#6b8072"><a href="#091519" label="[09:15:19]">&lt;janneke&gt;</a></span><span class="message">oh, building tcc-boot0 did not survive the m2-transition of mes:</span></div><div class="line" id="091521"><span class="nick" style="color:#6b8072"><a href="#091521" label="[09:15:21]">&lt;janneke&gt;</a></span><span class="message">libc.c:2695: error: incompatible types for redefinition of 'execve'</span></div><div class="line" id="091540"><span class="nick" style="color:#6b8072"><a href="#091540" label="[09:15:40]">&lt;janneke&gt;</a></span><span class="message">one more round of mes updates</span></div><div class="line" id="104307"><span class="nick" style="color:#6b8072"><a href="#104307" label="[10:43:07]">&lt;janneke&gt;</a></span><span class="message">./pre-inst-env guix build --system=i686-linux -e '(@@ (gnu packages commencement) tcc-boot0)'</span></div><div class="line" id="104313"><span class="nick" style="color:#6b8072"><a href="#104313" label="[10:43:13]">&lt;janneke&gt;</a></span><span class="message">=&gt; /gnu/store/nppws6i5vp37l4xyi9ghhrgfrwhygi4v-tcc-boot0-0.9.26-1136-g5bba73cc</span></div><div class="line" id="104704"><span class="nick" style="color:#6b8072"><a href="#104704" label="[10:47:04]">&lt;janneke&gt;</a></span><span class="message">=&gt; the bottom of the full source bootstrap graph: <a rel="nofollow" href="https://paste.debian.net/1179384/">https://paste.debian.net/1179384/</a> </span></div><div class="line" id="120118"><span class="nick" style="color:#6b8072"><a href="#120118" label="[12:01:18]">&lt;janneke&gt;</a></span><span class="message">=&gt; <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/log/?h=wip-full-source-bootstrap">https://git.savannah.gnu.org/cgit/guix.git/log/?h=wip-full-source-bootstrap</a> </span></div><div class="line" id="121101"><span class="nick" style="color:#80b1d3"><a href="#121101" label="[12:11:01]">&lt;OriansJ&gt;</a></span><span class="message">janneke: what about mes.c self-host? can mes.c built by M2-Planet run MesCC well enough to build mes.c?</span></div><div class="line" id="122722"><span class="nick" style="color:#6b8072"><a href="#122722" label="[12:27:22]">&lt;janneke&gt;</a></span><span class="message">OriansJ: yes, that's actually what sh bootstrap.sh does</span></div><div class="line" id="122904"><span class="nick" style="color:#6c3d55"><a href="#122904" label="[12:29:04]">&lt;fossy&gt;</a></span><span class="message">on wip-m2 branch?</span></div><div class="line" id="122907"><span class="nick" style="color:#6b8072"><a href="#122907" label="[12:29:07]">&lt;janneke&gt;</a></span><span class="message">it runs kaem --verbose --strict to build mes-m2, then mes-m2+mescc builds mes and the mes c library</span></div><div class="line" id="122918"><span class="nick" style="color:#6b8072"><a href="#122918" label="[12:29:18]">&lt;janneke&gt;</a></span><span class="message">fossy: yes!</span></div><div class="line" id="123045"><span class="nick" style="color:#6b8072"><a href="#123045" label="[12:30:45]">&lt;janneke&gt;</a></span><span class="message">OriansJ: yesterday we talked...</span></div><div class="line" id="123050"><span class="nick" style="color:#6b8072"><a href="#123050" label="[12:30:50]">&lt;janneke&gt;</a></span><span class="message">[22:38:42] &lt;OriansJ&gt; I'd even incorporate mes in it too if I knew an exact commit which would work</span></div><div class="line" id="123051"><span class="nick" style="color:#6b8072"><a href="#123051" label="[12:30:51]">&lt;janneke&gt;</a></span><span class="message">[22:39:13] &lt;janneke&gt; ah no, i'm keeping mes a separate package</span></div><div class="line" id="123219"><span class="nick" style="color:#6b8072"><a href="#123219" label="[12:32:19]">&lt;janneke&gt;</a></span><span class="message">in the guix bootstrap, i won't be using such an integration, but i imagine it could be very handy for people like fossy if mes could be built in mescc-tools-seed</span></div><div class="line" id="123258"><span class="nick" style="color:#6b8072"><a href="#123258" label="[12:32:58]">&lt;janneke&gt;</a></span><span class="message">so, my only requirement would be that building mes is a separate/optional phase, but i guess you already split into different phases</span></div><div class="line" id="123516"><span class="nick" style="color:#6b8072"><a href="#123516" label="[12:35:16]">&lt;janneke&gt;</a></span><span class="message">fossy: all versions and the build process for them are now documented/scripted in <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap</a> </span></div><div class="line" id="130719"><span class="nick" style="color:#80b1d3"><a href="#130719" label="[13:07:19]">&lt;OriansJ&gt;</a></span><span class="message">I know this sounds stupid but shouldn't the build of guix's bootstrap binary be done outside of guix to prevent circular injection attacks?</span></div><div class="line" id="131116"><span class="nick" style="color:#d9d9d9"><a href="#131116" label="[13:11:16]">&lt;rain1&gt;</a></span><span class="message">it sounds smart, I think you are right</span></div><div class="line" id="131141"><span class="nick" style="color:#d9d9d9"><a href="#131141" label="[13:11:41]">&lt;rain1&gt;</a></span><span class="message">although perhaps that only needs done once, and from then on it would be ok to do it inside guix (since it is easier and more automatic)</span></div><div class="line" id="131147"><span class="nick" style="color:#80b1d3"><a href="#131147" label="[13:11:47]">&lt;OriansJ&gt;</a></span><span class="message">we have kaem with --init-mode (formerly known as nightmare-mode)</span></div><div class="line" id="131433"><span class="nick" style="color:#80b1d3"><a href="#131433" label="[13:14:33]">&lt;OriansJ&gt;</a></span><span class="message">also since we can control the early stages of the bootstrap exactly why would we be dealling with compressed tarballs? waste some bandwidth</span></div><div class="line" id="131538"><span class="nick" style="color:#6b8072"><a href="#131538" label="[13:15:38]">&lt;janneke&gt;</a></span><span class="message">idk, &quot;because it works&quot;</span></div><div class="line" id="131555"><span class="nick" style="color:#6b8072"><a href="#131555" label="[13:15:55]">&lt;janneke&gt;</a></span><span class="message">i did the simplest thing that i could imagine at the time</span></div><div class="line" id="131605"><span class="nick" style="color:#6b8072"><a href="#131605" label="[13:16:05]">&lt;janneke&gt;</a></span><span class="message">there's no harm improving on it ;)</span></div><div class="line" id="131625"><span class="nick" style="color:#6b8072"><a href="#131625" label="[13:16:25]">&lt;janneke&gt;</a></span><span class="message">also, none of these patches were reviewed yet, so we'll see!</span></div><div class="line" id="131715"><span class="nick" style="color:#6b8072"><a href="#131715" label="[13:17:15]">&lt;janneke&gt;</a></span><span class="message">i was wondering if we could bless the bootstrap-seeds-1.0.0</span></div><div class="line" id="131720"><span class="nick" style="color:#80b1d3"><a href="#131720" label="[13:17:20]">&lt;OriansJ&gt;</a></span><span class="message">an endless cycle of improvement we seem to be stuck on ^_^</span></div><div class="line" id="131738"><span class="nick" style="color:#6b8072"><a href="#131738" label="[13:17:38]">&lt;janneke&gt;</a></span><span class="message">iow, do multiple independent builds, add hashes, and say they are *safe*</span></div><div class="line" id="131821"><span class="nick" style="color:#80b1d3"><a href="#131821" label="[13:18:21]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well I gpg signed the tag, the sha256sums are trivial proof how much of a blessing does it need?</span></div><div class="line" id="131841"><span class="nick" style="color:#6b8072"><a href="#131841" label="[13:18:41]">&lt;janneke&gt;</a></span><span class="message">well, the hope is/was that once we have something that works, people will show more interest and join the endless cycle</span></div><div class="line" id="131919"><span class="nick" style="color:#80b1d3"><a href="#131919" label="[13:19:19]">&lt;OriansJ&gt;</a></span><span class="message">well technically everyone on this channel shows that they already started showing up</span></div><div class="line" id="131932"><span class="nick" style="color:#6b8072"><a href="#131932" label="[13:19:32]">&lt;janneke&gt;</a></span><span class="message">well, a statement other than &quot;Here are the bare minimal binary seeds for every host architecture</span></div><div class="line" id="131933"><span class="nick" style="color:#6b8072"><a href="#131933" label="[13:19:33]">&lt;janneke&gt;</a></span><span class="message"> </span></div><div class="line" id="131933"><span class="nick" style="color:#6b8072"><a href="#131933" label="[13:19:33]">&lt;janneke&gt;</a></span><span class="message">NEVER TRUST ANYTHING IN HERE&quot;</span></div><div class="line" id="131952"><span class="nick" style="color:#80b1d3"><a href="#131952" label="[13:19:52]">&lt;OriansJ&gt;</a></span><span class="message">fair</span></div><div class="line" id="131956"><span class="nick" style="color:#6b8072"><a href="#131956" label="[13:19:56]">&lt;janneke&gt;</a></span><span class="message">saying: these are verified by x,y,z; these are the hashes</span></div><div class="line" id="132010"><span class="nick" style="color:#6b8072"><a href="#132010" label="[13:20:10]">&lt;janneke&gt;</a></span><span class="message">this sounds *very* un-blessed (even if they are ;-)</span></div><div class="line" id="132056"><span class="nick" style="color:#80b1d3"><a href="#132056" label="[13:20:56]">&lt;OriansJ&gt;</a></span><span class="message">well I do have the concern of github decides to change the contents and people get rooted because of it</span></div><div class="line" id="132117"><span class="nick" style="color:#80b1d3"><a href="#132117" label="[13:21:17]">&lt;OriansJ&gt;</a></span><span class="message">now once savannah is the master</span></div><div class="line" id="132122"><span class="nick" style="color:#6b8072"><a href="#132122" label="[13:21:22]">&lt;janneke&gt;</a></span><span class="message">yes, i don't trust microsoft for a bit</span></div><div class="line" id="132142"><span class="nick" style="color:#6b8072"><a href="#132142" label="[13:21:42]">&lt;janneke&gt;</a></span><span class="message">but there's also accidental f-ups</span></div><div class="line" id="132216"><span class="nick" style="color:#6b8072"><a href="#132216" label="[13:22:16]">&lt;janneke&gt;</a></span><span class="message">people shouldn't blindly download and run, but that goes for any download</span></div><div class="line" id="132217"><span class="nick" style="color:#80b1d3"><a href="#132217" label="[13:22:17]">&lt;OriansJ&gt;</a></span><span class="message">that is why: git tag -as -f Release_1.0.0 Release_1.0.0</span></div><div class="line" id="132223"><span class="nick" style="color:#6b8072"><a href="#132223" label="[13:22:23]">&lt;janneke&gt;</a></span><span class="message">guix solves that with hashes</span></div><div class="line" id="132243"><span class="nick" style="color:#6b8072"><a href="#132243" label="[13:22:43]">&lt;janneke&gt;</a></span><span class="message">yeah, but you also need a content hash</span></div><div class="line" id="132306"><span class="nick" style="color:#80b1d3"><a href="#132306" label="[13:23:06]">&lt;OriansJ&gt;</a></span><span class="message">6d3fb087efe2d7cc7938cf2aff0265c6bfc86370</span></div><div class="line" id="132402"><span class="nick" style="color:#6b8072"><a href="#132402" label="[13:24:02]">&lt;janneke&gt;</a></span><span class="message">rigth -- mention it on the website and check it on the packaging/bootstrapping host</span></div><div class="line" id="132418"><span class="nick" style="color:#6b8072"><a href="#132418" label="[13:24:18]">&lt;janneke&gt;</a></span><span class="message">i think we're doing pretty OK</span></div><div class="line" id="132455"><span class="nick" style="color:#6b8072"><a href="#132455" label="[13:24:55]">&lt;janneke&gt;</a></span><span class="message">it would be great to get outside help with missing documentation</span></div><div class="line" id="132542"><span class="nick" style="color:#80b1d3"><a href="#132542" label="[13:25:42]">&lt;OriansJ&gt;</a></span><span class="message">and checksums for everything in the repo: <a rel="nofollow" href="https://paste.debian.net/1179396/">https://paste.debian.net/1179396/</a> </span></div><div class="line" id="132613"><span class="nick" style="color:#6b8072"><a href="#132613" label="[13:26:13]">&lt;janneke&gt;</a></span><span class="message">that would make a great insert of the home page!</span></div><div class="line" id="132636"><span class="nick" style="color:#80b1d3"><a href="#132636" label="[13:26:36]">&lt;OriansJ&gt;</a></span><span class="message">and scare everyone off ^_^</span></div><div class="line" id="132655"><span class="nick" style="color:#80b1d3"><a href="#132655" label="[13:26:55]">&lt;OriansJ&gt;</a></span><span class="message">as clearly we have all gone insane in our quest</span></div><div class="line" id="132657"><span class="nick" style="color:#6b8072"><a href="#132657" label="[13:26:57]">&lt;janneke&gt;</a></span><span class="message">hehe</span></div><div class="line" id="132721"><span class="nick" style="color:#6b8072"><a href="#132721" label="[13:27:21]">&lt;janneke&gt;</a></span><span class="message">well, it's getting harder and harder to get any work done</span></div><div class="line" id="132729"><span class="nick" style="color:#6b8072"><a href="#132729" label="[13:27:29]">&lt;janneke&gt;</a></span><span class="message">with all the talking here ;-P</span></div><div class="line" id="132824"><span class="nick" style="color:#80b1d3"><a href="#132824" label="[13:28:24]">&lt;OriansJ&gt;</a></span><span class="message">janneke: hey I have an excuse, I like the people here.</span></div><div class="line" id="132859"><span class="nick" style="color:#6b8072"><a href="#132859" label="[13:28:59]">&lt;janneke&gt;</a></span><span class="message">no, but really, a statement saying these are blessed binaries, be very careful and check these, and then somewhere below (some of these) hashes, that doesn't seem too bad?</span></div><div class="line" id="132913"><span class="nick" style="color:#6b8072"><a href="#132913" label="[13:29:13]">&lt;janneke&gt;</a></span><span class="message">OriansJ: oh, you're part of them!</span></div><div class="line" id="132951"><span class="nick" style="color:#6b8072"><a href="#132951" label="[13:29:51]">&lt;janneke&gt;</a></span><span class="message">it's been almost 5 years and we only just about have our first version done</span></div><div class="line" id="133002"><span class="nick" style="color:#80b1d3"><a href="#133002" label="[13:30:02]">&lt;OriansJ&gt;</a></span><span class="message">janneke: I could provide a simple step of steps to enable anyone to verify that the binaries correspond with the .hex0 sources</span></div><div class="line" id="133014"><span class="nick" style="color:#234e69"><a href="#133014" label="[13:30:14]">&lt;xentrac&gt;</a></span><span class="message">longer if you count things like Ur-Scheme and StoneKnifeForth</span></div><div class="line" id="133028"><span class="nick" style="color:#234e69"><a href="#133028" label="[13:30:28]">&lt;xentrac&gt;</a></span><span class="message">or edmund grimley evans's hex0</span></div><div class="line" id="133106"><span class="nick" style="color:#6b8072"><a href="#133106" label="[13:31:06]">&lt;janneke&gt;</a></span><span class="message">*** #bootstrappable was created on 2017-06-27 10:28:29</span></div><div class="line" id="133114"><span class="nick" style="color:#6b8072"><a href="#133114" label="[13:31:14]">&lt;janneke&gt;</a></span><span class="message">before that, we lived in #guix</span></div><div class="line" id="133202"><span class="nick" style="color:#6b8072"><a href="#133202" label="[13:32:02]">&lt;janneke&gt;</a></span><span class="message">xentrac: but yeah, luckily there are always giant's shoulders</span></div><div class="line" id="133211"><span class="nick" style="color:#6b8072"><a href="#133211" label="[13:32:11]">&lt;janneke&gt;</a></span><span class="message">*giants'</span></div><div class="line" id="133217"><span class="nick" style="color:#80b1d3"><a href="#133217" label="[13:32:17]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: or David A. Wheeler's work</span></div><div class="line" id="133237"><span class="nick" style="color:#6b8072"><a href="#133237" label="[13:32:37]">&lt;janneke&gt;</a></span><span class="message">fabrice bellard, rms</span></div><div class="line" id="133314"><span class="nick" style="color:#80b1d3"><a href="#133314" label="[13:33:14]">&lt;OriansJ&gt;</a></span><span class="message">(I always forget the A though, probably because he is so nice; it creates an A hole in my mind)</span></div><div class="line" id="133338"><span class="nick" style="color:#234e69"><a href="#133338" label="[13:33:38]">&lt;xentrac&gt;</a></span><span class="message">the A is important :)</span></div><div class="line" id="133414"><span class="nick" style="color:#6b8072"><a href="#133414" label="[13:34:14]">&lt;janneke&gt;</a></span><span class="message">and let's not forget lunar!</span></div><div class="line" id="133430"><span class="nick" style="color:#234e69"><a href="#133430" label="[13:34:30]">&lt;xentrac&gt;</a></span><span class="message">because <a rel="nofollow" href="https://en.wikipedia.org/wiki/David_Wheeler_%28computer_scientist%29">https://en.wikipedia.org/wiki/David_Wheeler_%28computer_scientist%29</a>  is far more famous</span></div><div class="line" id="133433"><span class="nick" style="color:#234e69"><a href="#133433" label="[13:34:33]">&lt;xentrac&gt;</a></span><span class="message">lunar?</span></div><div class="line" id="133458"><span class="nick" style="color:#6b8072"><a href="#133458" label="[13:34:58]">&lt;janneke&gt;</a></span><span class="message">who created reproducible-builds</span></div><div class="line" id="133518"><span class="nick" style="color:#d9d9d9"><a href="#133518" label="[13:35:18]">&lt;rain1&gt;</a></span><span class="message">debian</span></div><div class="line" id="133518"><span class="nick" style="color:#6b8072"><a href="#133518" label="[13:35:18]">&lt;janneke&gt;</a></span><span class="message">in a way a parent to guix and bootstrappable builds</span></div><div class="line" id="133521"><span class="nick" style="color:#6b8072"><a href="#133521" label="[13:35:21]">&lt;janneke&gt;</a></span><span class="message">yep</span></div><div class="line" id="133527"><span class="nick" style="color:#d9d9d9"><a href="#133527" label="[13:35:27]">&lt;rain1&gt;</a></span><span class="message">such a great project</span></div><div class="line" id="133533"><span class="nick" style="color:#6b8072"><a href="#133533" label="[13:35:33]">&lt;janneke&gt;</a></span><span class="message">nix&amp;nixos</span></div><div class="line" id="133538"><span class="nick" style="color:#80b1d3"><a href="#133538" label="[13:35:38]">&lt;OriansJ&gt;</a></span><span class="message">I really should start a history.org file in my talk-notes</span></div><div class="line" id="133603"><span class="nick" style="color:#80b1d3"><a href="#133603" label="[13:36:03]">&lt;OriansJ&gt;</a></span><span class="message">So we don't forget all these really important leading pieces.</span></div><div class="line" id="133739"><span class="nick" style="color:#6b8072"><a href="#133739" label="[13:37:39]">&lt;janneke&gt;</a></span><span class="message">there's some of these things here <a rel="nofollow" href="https://www.gnu.org/software/mes/manual/html_node/Introduction.html">https://www.gnu.org/software/mes/manual/html_node/Introduction.html</a> </span></div><div class="line" id="133802"><span class="nick" style="color:#6b8072"><a href="#133802" label="[13:38:02]">&lt;janneke&gt;</a></span><span class="message">it would be good to have more completeness and detail</span></div><div class="line" id="134347"><span class="nick" style="color:#80b1d3"><a href="#134347" label="[13:43:47]">&lt;OriansJ&gt;</a></span><span class="message">well I'll take a whack at it and probably miss a bunch in the process but hopefully patches will occur</span></div><div class="line" id="134623"><span class="nick" style="color:#6b8072"><a href="#134623" label="[13:46:23]">&lt;janneke&gt;</a></span><span class="message">yeah, that's my strategy too ;-)</span></div><div class="line" id="134723"><span class="nick" style="color:#6b8072"><a href="#134723" label="[13:47:23]">&lt;janneke&gt;</a></span><span class="message">i noticed that ARM is missing in bootstrap-seeds, how far are we with that?</span></div><div class="line" id="134832"><span class="nick" style="color:#80b1d3"><a href="#134832" label="[13:48:32]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well I have first brush assembly done (needs some refinement) and then I just need to convert to M1 and hex?</span></div><div class="line" id="134901"><span class="nick" style="color:#80b1d3"><a href="#134901" label="[13:49:01]">&lt;OriansJ&gt;</a></span><span class="message">So it is only a week worth of work left (if I can get the time to focus on it)</span></div><div class="line" id="135017"><span class="nick" style="color:#6b8072"><a href="#135017" label="[13:50:17]">&lt;janneke&gt;</a></span><span class="message">from mes onwards, the ARM bootstrap now includes tcc, binutils-2.14, gcc-core-2.95.3 but is stuck on a miscompiled gawk-mesboot0 (floats?) to build glibc-2.2.5</span></div><div class="line" id="135059"><span class="nick" style="color:#6b8072"><a href="#135059" label="[13:50:59]">&lt;janneke&gt;</a></span><span class="message">i planned to release mes-0.23 with ARM support months ago, but there were some unexpected hurdles</span></div><div class="line" id="135125"><span class="nick" style="color:#80b1d3"><a href="#135125" label="[13:51:25]">&lt;OriansJ&gt;</a></span><span class="message">janneke: there is a reason why I avoid floating point. It is a massive pain in the ass for little gain.</span></div><div class="line" id="135152"><span class="nick" style="color:#80b1d3"><a href="#135152" label="[13:51:52]">&lt;OriansJ&gt;</a></span><span class="message">an arbitrary precision library written using chars would be less trouble.</span></div><div class="line" id="135156"><span class="nick" style="color:#6b8072"><a href="#135156" label="[13:51:56]">&lt;janneke&gt;</a></span><span class="message">OriansJ: yes, me too -- fully agree.  not necessary and a terrible &quot;solution&quot;</span></div><div class="line" id="135236"><span class="nick" style="color:#6b8072"><a href="#135236" label="[13:52:36]">&lt;janneke&gt;</a></span><span class="message">anyway, we really don't need them until tcc, but tcc needs to have them</span></div><div class="line" id="135248"><span class="nick" style="color:#80b1d3"><a href="#135248" label="[13:52:48]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well it isn't terrible if you are ok with approximations in your output (eg Physics calculations)</span></div><div class="line" id="135259"><span class="nick" style="color:#6b8072"><a href="#135259" label="[13:52:59]">&lt;janneke&gt;</a></span><span class="message">mes helps in makeing that jump, but it's tricksy, esp. on ARM</span></div><div class="line" id="135304"><span class="nick" style="color:#80b1d3"><a href="#135304" label="[13:53:04]">&lt;OriansJ&gt;</a></span><span class="message">but outside of that no compiler should need floating point to work.</span></div><div class="line" id="135344"><span class="nick" style="color:#6b8072"><a href="#135344" label="[13:53:44]">&lt;janneke&gt;</a></span><span class="message">&quot;lets do some calculations, and make them fast&quot; -- i don't really care about the results</span></div><div class="line" id="135403"><span class="nick" style="color:#80b1d3"><a href="#135403" label="[13:54:03]">&lt;OriansJ&gt;</a></span><span class="message">yep that is physics</span></div><div class="line" id="135413"><span class="nick" style="color:#6b8072"><a href="#135413" label="[13:54:13]">&lt;janneke&gt;</a></span><span class="message">careful...</span></div><div class="line" id="135506"><span class="nick" style="color:#80b1d3"><a href="#135506" label="[13:55:06]">&lt;OriansJ&gt;</a></span><span class="message">have you ever had dinner with a nuclear engineer?</span></div><div class="line" id="135527"><span class="nick" style="color:#80b1d3"><a href="#135527" label="[13:55:27]">&lt;OriansJ&gt;</a></span><span class="message">don't worry you'll know because they will tell you.</span></div><div class="line" id="135532"><span class="nick" style="color:#6b8072"><a href="#135532" label="[13:55:32]">&lt;janneke&gt;</a></span><span class="message">a physicist cares a lot about the precision that counts and knows when more precision is a waste of time/effort</span></div><div class="line" id="135603"><span class="nick" style="color:#80b1d3"><a href="#135603" label="[13:56:03]">&lt;OriansJ&gt;</a></span><span class="message">except when their assumptions were wrong.</span></div><div class="line" id="135630"><span class="nick" style="color:#80b1d3"><a href="#135630" label="[13:56:30]">&lt;OriansJ&gt;</a></span><span class="message">which happens far more than they will ever admit</span></div><div class="line" id="135645"><span class="nick" style="color:#6b8072"><a href="#135645" label="[13:56:45]">&lt;janneke&gt;</a></span><span class="message">that's an assumption ;)</span></div><div class="line" id="135730"><span class="nick" style="color:#80b1d3"><a href="#135730" label="[13:57:30]">&lt;OriansJ&gt;</a></span><span class="message">I've spent too much time talking to nuclear physicists to believe otherwise.</span></div><div class="line" id="135736"><span class="nick" style="color:#6b8072"><a href="#135736" label="[13:57:36]">&lt;janneke&gt;</a></span><span class="message">let's talk about imperial units!</span></div><div class="line" id="135744"><span class="nick" style="color:#6b8072"><a href="#135744" label="[13:57:44]">&lt;janneke&gt;</a></span><span class="message">hehe</span></div><div class="line" id="135757"><span class="nick" style="color:#80b1d3"><a href="#135757" label="[13:57:57]">&lt;OriansJ&gt;</a></span><span class="message">hey now</span></div><div class="line" id="135831"><span class="nick" style="color:#6b8072"><a href="#135831" label="[13:58:31]">&lt;janneke&gt;</a></span><span class="message">we could introduce imperial units in computing!</span></div><div class="line" id="135855"><span class="nick" style="color:#80b1d3"><a href="#135855" label="[13:58:55]">&lt;OriansJ&gt;</a></span><span class="message">janneke: grams</span></div><div class="line" id="135929"><span class="nick" style="color:#80b1d3"><a href="#135929" label="[13:59:29]">&lt;OriansJ&gt;</a></span><span class="message">you had to screw up on grams in metric because of a French asshole</span></div><div class="line" id="140040"><span class="nick" style="color:#80b1d3"><a href="#140040" label="[14:00:40]">&lt;OriansJ&gt;</a></span><span class="message">So instead of a gram being what it was supposed to be, it is 1/1000th and you have to use kilograms where grams were supposed to be.</span></div><div class="line" id="140155"><span class="nick" style="color:#6b8072"><a href="#140155" label="[14:01:55]">&lt;janneke&gt;</a></span><span class="message">yeah, terrible</span></div><div class="line" id="140254"><span class="nick" style="color:#80b1d3"><a href="#140254" label="[14:02:54]">&lt;OriansJ&gt;</a></span><span class="message">meters =&gt; fine; second =&gt; imperial as fuck but who cares; liters =&gt; we are cool but what the shit you can't do grams correctly because of the French revolution and its piss match with  a French scientist who was born rich??</span></div><div class="line" id="140354"><span class="nick" style="color:#80b1d3"><a href="#140354" label="[14:03:54]">&lt;OriansJ&gt;</a></span><span class="message">no system exists without criticism.</span></div><div class="line" id="140355"><span class="nick" style="color:#6b8072"><a href="#140355" label="[14:03:55]">&lt;janneke&gt;</a></span><span class="message">luckily, the times when being born rich really mattered are long gone</span></div><div class="line" id="140409"><span class="nick" style="color:#80b1d3"><a href="#140409" label="[14:04:09]">&lt;OriansJ&gt;</a></span><span class="message">LMAO</span></div><div class="line" id="140417"><span class="nick" style="color:#80b1d3"><a href="#140417" label="[14:04:17]">&lt;OriansJ&gt;</a></span><span class="message">*ROFL*</span></div><div class="line" id="140417"><span class="nick" style="color:#6b8072"><a href="#140417" label="[14:04:17]">&lt;janneke&gt;</a></span><span class="message"> /S</span></div><div class="line" id="140535"><span class="nick" style="color:#6b8072"><a href="#140535" label="[14:05:35]">&lt;janneke&gt;</a></span><span class="message">those were such uncivilized times</span></div><div class="line" id="140556"><span class="nick" style="color:#80b1d3"><a href="#140556" label="[14:05:56]">&lt;OriansJ&gt;</a></span><span class="message">I like to think of it this way. If you had enough free money in 2008 to get into overclocking but was willing to throw away $10 on a meme; you would have $180,000,000 worth of bitcoin.</span></div><div class="line" id="140638"><span class="nick" style="color:#6b8072"><a href="#140638" label="[14:06:38]">&lt;janneke&gt;</a></span><span class="message">true</span></div><div class="line" id="140746"><span class="nick" style="color:#80b1d3"><a href="#140746" label="[14:07:46]">&lt;OriansJ&gt;</a></span><span class="message">though odds are you would have kept them in Mount Grox and lost everything anyway</span></div><div class="line" id="140851"><span class="nick" style="color:#80b1d3"><a href="#140851" label="[14:08:51]">&lt;OriansJ&gt;</a></span><span class="message">So life shows luck dominates every other factor.</span></div><div class="line" id="141353"><span class="nick" style="color:#234e69"><a href="#141353" label="[14:13:53]">&lt;xentrac&gt;</a></span><span class="message">well, or maybe cashed out when bitcoin hit $10</span></div><div class="line" id="141421"><span class="nick" style="color:#234e69"><a href="#141421" label="[14:14:21]">&lt;xentrac&gt;</a></span><span class="message">a friend of mine once pointed out the curious fact that somehow there is real estate not owned by Sumerian investment bankers</span></div><div class="line" id="141438"><span class="nick" style="color:#234e69"><a href="#141438" label="[14:14:38]">&lt;xentrac&gt;</a></span><span class="message">weird, right?</span></div><div class="line" id="142153"><span class="nick" style="color:#80b1d3"><a href="#142153" label="[14:21:53]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: that is part of the luck bit huh.</span></div><div class="line" id="142417"><span class="nick" style="color:#80b1d3"><a href="#142417" label="[14:24:17]">&lt;OriansJ&gt;</a></span><span class="message">some people believed it would go to a $1,000,000 per before 2021 and bet that they would eat their own dick on national TV if it didn't.</span></div><div class="line" id="142434"><span class="nick" style="color:#234e69"><a href="#142434" label="[14:24:34]">&lt;xentrac&gt;</a></span><span class="message">seconds are more Sumerian than Imperial really</span></div><div class="line" id="142526"><span class="nick" style="color:#80b1d3"><a href="#142526" label="[14:25:26]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: well Sumerian seconds are a different length than modern seconds</span></div><div class="line" id="142549"><span class="nick" style="color:#80b1d3"><a href="#142549" label="[14:25:49]">&lt;OriansJ&gt;</a></span><span class="message">that is why we have leap seconds</span></div><div class="line" id="143121"><span class="nick" style="color:#234e69"><a href="#143121" label="[14:31:21]">&lt;xentrac&gt;</a></span><span class="message">heh</span></div><div class="line" id="143131"><span class="nick" style="color:#234e69"><a href="#143131" label="[14:31:31]">&lt;xentrac&gt;</a></span><span class="message">well, I don't think the Sumerians actually had seconds</span></div><div class="line" id="143646"><span class="nick" style="color:#80b1d3"><a href="#143646" label="[14:36:46]">&lt;OriansJ&gt;</a></span><span class="message">thinking of bootstrappable history, I realize there are reflections in other areas too. Spore/Thrive; Open Ecology, The Knowledge, How to make Everything, Dr Stone, etc</span></div><div class="line" id="143827"><span class="nick" style="color:#80b1d3"><a href="#143827" label="[14:38:27]">&lt;OriansJ&gt;</a></span><span class="message">Poul-Henning Kamp's FOSDEM 2014 talk NSA operation ORCHESTRA: Annual Status Report</span></div><div class="line" id="143949"><span class="nick" style="color:#80b1d3"><a href="#143949" label="[14:39:49]">&lt;OriansJ&gt;</a></span><span class="message">iCEstorm and the FPGA work, libresilicon, etc</span></div><div class="line" id="144229"><span class="nick" style="color:#80b1d3"><a href="#144229" label="[14:42:29]">&lt;OriansJ&gt;</a></span><span class="message">Mike Perry, Seth Schoen and Hans Steiner's #6240 Reproducible Builds talk is probably the first one I saw</span></div><div class="line" id="144622"><span class="nick" style="color:#80b1d3"><a href="#144622" label="[14:46:22]">&lt;OriansJ&gt;</a></span><span class="message">almost like there are two common patterns for preparing for failures in the future. Plan to rebuild form scratch or plan to restore from backups (Internet Archive, libraries, etc)</span></div><div class="line" id="150946"><span class="nick" style="color:#bc80bd"><a href="#150946" label="[15:09:46]">&lt;akkartik&gt;</a></span><span class="message">I just spotted a post by janneke on Mastodon. Looks like there's been lots of progress. Congratulations!</span></div><div class="line" id="151009"><span class="nick" style="color:#bc80bd"><a href="#151009" label="[15:10:09]">&lt;akkartik&gt;</a></span><span class="message">2021 is already looking up.</span></div><div class="line" id="151339"><span class="nick" style="color:#6b8072"><a href="#151339" label="[15:13:39]">&lt;janneke&gt;</a></span><span class="message">akkartik: yes, we had a breakthrough that was very long in the coming</span></div><div class="line" id="151703"><span class="nick" style="color:#d9d9d9"><a href="#151703" label="[15:17:03]">&lt;rain1&gt;</a></span><span class="message">o/ happy 2021</span></div><div class="line" id="151732"><span class="nick" style="color:#bc80bd"><a href="#151732" label="[15:17:32]">&lt;akkartik&gt;</a></span><span class="message">fingers crossed x</span></div><div class="line" id="151737"><span class="nick" style="color:#6b8072"><a href="#151737" label="[15:17:37]">&lt;janneke&gt;</a></span><span class="message">\o happy 2021 rain1</span></div><div class="line" id="163754"><span class="nick" style="color:#3c5b35"><a href="#163754" label="[16:37:54]">&lt;deesix&gt;</a></span><span class="message">OriansJ, sorry. Yesterday I said that maybe AMD64 close() is wrong. Now that I have my notes at hand I see that I was thinking about armv7l. It is missing &quot;!0 R0 LOAD32 R0 MEMORY&quot;, right?</span></div><div class="line" id="164006"><span class="nick" style="color:#3c5b35"><a href="#164006" label="[16:40:06]">&lt;deesix&gt;</a></span><span class="message">... wrt the x86 fix at M2-Planet 608fba306f46128fe901302f813d139c635e996a</span></div><div class="line" id="164358"><span class="nick" style="color:#80b1d3"><a href="#164358" label="[16:43:58]">&lt;OriansJ&gt;</a></span><span class="message">deesix: it is entirely possible. We don't have a good test for close</span></div><div class="line" id="164627"><span class="nick" style="color:#af8d2f"><a href="#164627" label="[16:46:27]">&lt;siraben&gt;</a></span><span class="message">akkartik: could you link to the post?</span></div><div class="line" id="164940"><span class="nick" style="color:#80b1d3"><a href="#164940" label="[16:49:40]">&lt;OriansJ&gt;</a></span><span class="message">siraben: it is probably this one: <a rel="nofollow" href="https://octodon.social/@janneke/105486344375252576">https://octodon.social/@janneke/105486344375252576</a> </span></div><div class="line" id="165028"><span class="nick" style="color:#af8d2f"><a href="#165028" label="[16:50:28]">&lt;siraben&gt;</a></span><span class="message">janneke: wow, great work!</span></div><div class="line" id="165059"><span class="nick" style="color:#af8d2f"><a href="#165059" label="[16:50:59]">&lt;siraben&gt;</a></span><span class="message">what was the missing piece, rewriting the scheme interpreter to support hygienic macros?</span></div><div class="line" id="165141"><span class="nick" style="color:#80b1d3"><a href="#165141" label="[16:51:41]">&lt;OriansJ&gt;</a></span><span class="message">siraben: punting on the Guile problem for now and just getting mes.c building with M2-Planet</span></div><div class="line" id="165215"><span class="nick" style="color:#af8d2f"><a href="#165215" label="[16:52:15]">&lt;siraben&gt;</a></span><span class="message">OriansJ: ah, i see</span></div><div class="line" id="165220"><span class="nick" style="color:#af8d2f"><a href="#165220" label="[16:52:20]">&lt;siraben&gt;</a></span><span class="message">Is MES → GCC done?</span></div><div class="line" id="165534"><span class="nick" style="color:#80b1d3"><a href="#165534" label="[16:55:34]">&lt;OriansJ&gt;</a></span><span class="message">siraben: with the help of guile yes</span></div><div class="line" id="165638"><span class="nick" style="color:#af8d2f"><a href="#165638" label="[16:56:38]">&lt;siraben&gt;</a></span><span class="message">Nice, I look forward to replicating this work using Nix</span></div><div class="line" id="171528"><span class="nick" style="color:#6b8072"><a href="#171528" label="[17:15:28]">&lt;janneke&gt;</a></span><span class="message">siraben: mes-&gt;gcc has been in guix already for ~2y now; until now we started from mes</span></div><div class="line" id="190730"><span class="nick" style="color:#389600"><a href="#190730" label="[19:07:30]">&lt;stikonas&gt;</a></span><span class="message">well, I guess guix still has to use guile-bootstrap... I guess you can only get rid of it using kaem and gash manually</span></div><div class="line" id="191503"><span class="nick" style="color:#80b1d3"><a href="#191503" label="[19:15:03]">&lt;OriansJ&gt;</a></span><span class="message">or growing mes-m2 until the point where it can run MesCC, gash, gash-utils and Guix</span></div><div class="line" id="191535"><span class="nick" style="color:#6b8072"><a href="#191535" label="[19:15:35]">&lt;janneke&gt;</a></span><span class="message">stikonas: guile is only used as a driver and shell/coreutils stubstitute</span></div><div class="line" id="191639"><span class="nick" style="color:#6b8072"><a href="#191639" label="[19:16:39]">&lt;janneke&gt;</a></span><span class="message">if you find a another way to instruct the computer, e.g., type by hand, you do not need guile; it's *not* part of the bootstrap seed</span></div><div class="line" id="191745"><span class="nick" style="color:#80b1d3"><a href="#191745" label="[19:17:45]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well all the steps guix would do could just be recorded and put into a kaem script</span></div><div class="line" id="191823"><span class="nick" style="color:#389600"><a href="#191823" label="[19:18:23]">&lt;stikonas&gt;</a></span><span class="message">hmm, I wonder how long the script would be... Might be quite long</span></div><div class="line" id="191855"><span class="nick" style="color:#80b1d3"><a href="#191855" label="[19:18:55]">&lt;OriansJ&gt;</a></span><span class="message">Who cares if it is 1000 steps? A computer is going to be doing the work</span></div><div class="line" id="191909"><span class="nick" style="color:#389600"><a href="#191909" label="[19:19:09]">&lt;stikonas&gt;</a></span><span class="message">if it's 1000 that's not too bad :)</span></div><div class="line" id="191944"><span class="nick" style="color:#80b1d3"><a href="#191944" label="[19:19:44]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: well I don't expect more than 100 commands to be executed per step</span></div><div class="line" id="192002"><span class="nick" style="color:#80b1d3"><a href="#192002" label="[19:20:02]">&lt;OriansJ&gt;</a></span><span class="message">There are only 10 steps</span></div><div class="line" id="192005"><span class="nick" style="color:#389600"><a href="#192005" label="[19:20:05]">&lt;stikonas&gt;</a></span><span class="message">maybe eventually that can simplify bootstrap of guix itself...</span></div><div class="line" id="192027"><span class="nick" style="color:#389600"><a href="#192027" label="[19:20:27]">&lt;stikonas&gt;</a></span><span class="message">(i.e. on fresh non-guix system)</span></div><div class="line" id="192051"><span class="nick" style="color:#80b1d3"><a href="#192051" label="[19:20:51]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: just need guile and gcc to run guix</span></div><div class="line" id="192108"><span class="nick" style="color:#80b1d3"><a href="#192108" label="[19:21:08]">&lt;OriansJ&gt;</a></span><span class="message">(binutils too)</span></div><div class="line" id="192112"><span class="nick" style="color:#389600"><a href="#192112" label="[19:21:12]">&lt;stikonas&gt;</a></span><span class="message">yes, I know, and a few others</span></div><div class="line" id="192116"><span class="nick" style="color:#389600"><a href="#192116" label="[19:21:16]">&lt;stikonas&gt;</a></span><span class="message">tar xz, etc...</span></div><div class="line" id="192146"><span class="nick" style="color:#80b1d3"><a href="#192146" label="[19:21:46]">&lt;OriansJ&gt;</a></span><span class="message">actually tar, xz are being replaced with bootar in the early stages and it is a scheme program</span></div><div class="line" id="192204"><span class="nick" style="color:#80b1d3"><a href="#192204" label="[19:22:04]">&lt;OriansJ&gt;</a></span><span class="message">core-utils by gash-utils</span></div><div class="line" id="192209"><span class="nick" style="color:#80b1d3"><a href="#192209" label="[19:22:09]">&lt;OriansJ&gt;</a></span><span class="message">bash with gash</span></div><div class="line" id="192235"><span class="nick" style="color:#80b1d3"><a href="#192235" label="[19:22:35]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.ngyro.com/bootar">https://git.ngyro.com/bootar</a> </span></div><div class="line" id="192245"><span class="nick" style="color:#389600"><a href="#192245" label="[19:22:45]">&lt;stikonas&gt;</a></span><span class="message">but does that replace %bootstrap-executables from bootstrap.scm?</span></div><div class="line" id="192302"><span class="nick" style="color:#389600"><a href="#192302" label="[19:23:02]">&lt;stikonas&gt;</a></span><span class="message">it has static binaries of bash, tar, mkdir and xz</span></div><div class="line" id="192326"><span class="nick" style="color:#389600"><a href="#192326" label="[19:23:26]">&lt;stikonas&gt;</a></span><span class="message">I guess these are only used to drive guix</span></div><div class="line" id="192330"><span class="nick" style="color:#389600"><a href="#192330" label="[19:23:30]">&lt;stikonas&gt;</a></span><span class="message">not in the bootstrap process...</span></div><div class="line" id="192349"><span class="nick" style="color:#80b1d3"><a href="#192349" label="[19:23:49]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: well janneke already replaced bash with gash and gash-utils covers alot of common shell commands and they are just scheme programs too</span></div><div class="line" id="192444"><span class="nick" style="color:#389600"><a href="#192444" label="[19:24:44]">&lt;stikonas&gt;</a></span><span class="message">well, yeah, it's should be possible to use gash instead of static binaries of bash and mkdir and bootar instead of tar and xz</span></div><div class="line" id="192445"><span class="nick" style="color:#8dd3c7"><a href="#192445" label="[19:24:45]">&lt;pder&gt;</a></span><span class="message">What is the difference in functionality between mes built by M2-Planet in the wip-m2 branch and the mes-m2 project?</span></div><div class="line" id="192624"><span class="nick" style="color:#389600"><a href="#192624" label="[19:26:24]">&lt;stikonas&gt;</a></span><span class="message">mes-m2 built by m2-planet is less functional but I don't know exact details</span></div><div class="line" id="192634"><span class="nick" style="color:#80b1d3"><a href="#192634" label="[19:26:34]">&lt;OriansJ&gt;</a></span><span class="message">pder: wip-m2 branch is janneke's original mes.c converted into something M2-Planet can compile mes-m2 was a from scratch rewrite with the goal of solving the guile bootstrap problem in guix too</span></div><div class="line" id="192850"><span class="nick" style="color:#80b1d3"><a href="#192850" label="[19:28:50]">&lt;OriansJ&gt;</a></span><span class="message">Think of wip-m2 as a rope bridge from M2-Planet to bootstrap GCC and mes-m2 as a steel suspension bridge to move all the pieces needed to finish the city construction.</span></div><div class="line" id="192959"><span class="nick" style="color:#389600"><a href="#192959" label="[19:29:59]">&lt;stikonas&gt;</a></span><span class="message">that's nice analogy...</span></div><div class="line" id="193019"><span class="nick" style="color:#389600"><a href="#193019" label="[19:30:19]">&lt;stikonas&gt;</a></span><span class="message">steel suspension takes longer to build but in the end should be better</span></div><div class="line" id="193043"><span class="nick" style="color:#80b1d3"><a href="#193043" label="[19:30:43]">&lt;OriansJ&gt;</a></span><span class="message">It needs alot more effort to be complete (full guile compatible) vs mes.c (minimal scheme to run MesCC)</span></div><div class="line" id="193053"><span class="nick" style="color:#8dd3c7"><a href="#193053" label="[19:30:53]">&lt;pder&gt;</a></span><span class="message">If I run kaem.run in the wip-m2 branch of mes, I get a resulting bin/mes.  Is this scheme interpreter capable of running mescc?</span></div><div class="line" id="193116"><span class="nick" style="color:#80b1d3"><a href="#193116" label="[19:31:16]">&lt;OriansJ&gt;</a></span><span class="message">pder: in theory yes (I haven't tested it yet)</span></div><div class="line" id="193128"><span class="nick" style="color:#8dd3c7"><a href="#193128" label="[19:31:28]">&lt;pder&gt;</a></span><span class="message">I see, so guile is still needed at this point to run the other things like gash?</span></div><div class="line" id="193231"><span class="nick" style="color:#80b1d3"><a href="#193231" label="[19:32:31]">&lt;OriansJ&gt;</a></span><span class="message">pder: well how many of them run on mes.c is an open question as I am uncertain of what janneke has tested.</span></div><div class="line" id="193323"><span class="nick" style="color:#6b8072"><a href="#193323" label="[19:33:23]">&lt;janneke&gt;</a></span><span class="message">&quot;&lt;OriansJ&gt; janneke: well all the steps guix would do could just be recorded and</span></div><div class="line" id="193323"><span class="nick" style="color:#6b8072"><a href="#193323" label="[19:33:23]">&lt;janneke&gt;</a></span><span class="message">          put into a kaem script  [19:17]&quot;</span></div><div class="line" id="193335"><span class="nick" style="color:#6b8072"><a href="#193335" label="[19:33:35]">&lt;janneke&gt;</a></span><span class="message">my point exactly, guile is only a diver</span></div><div class="line" id="193358"><span class="nick" style="color:#6b8072"><a href="#193358" label="[19:33:58]">&lt;janneke&gt;</a></span><span class="message">we need to make that point very clear</span></div><div class="line" id="193422"><span class="nick" style="color:#6b8072"><a href="#193422" label="[19:34:22]">&lt;janneke&gt;</a></span><span class="message">but people like fossy are doing so, by writing another driver</span></div><div class="line" id="193426"><span class="nick" style="color:#389600"><a href="#193426" label="[19:34:26]">&lt;stikonas&gt;</a></span><span class="message">janneke: probably worth mentioning on those WIP docs...</span></div><div class="line" id="193445"><span class="nick" style="color:#6b8072"><a href="#193445" label="[19:34:45]">&lt;janneke&gt;</a></span><span class="message">stikonas: certainly</span></div><div class="line" id="193448"><span class="nick" style="color:#6b8072"><a href="#193448" label="[19:34:48]">&lt;janneke&gt;</a></span><span class="message">thanks</span></div><div class="line" id="193549"><span class="nick" style="color:#389600"><a href="#193549" label="[19:35:49]">&lt;stikonas&gt;</a></span><span class="message">that gets me curious, what is fossy working on?</span></div><div class="line" id="193558"><span class="nick" style="color:#389600"><a href="#193558" label="[19:35:58]">&lt;stikonas&gt;</a></span><span class="message">s/gets/makes/</span></div><div class="line" id="193740"><span class="nick" style="color:#6b8072"><a href="#193740" label="[19:37:40]">&lt;janneke&gt;</a></span><span class="message">pder; yes, as you can observe from running ./pre-inst-env guix build --system=i686-linux -e '(@@ (gnu packages commencement) mes-boot)' on <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap</a> </span></div><div class="line" id="193740"><span class="nick" style="color:#389600"><a href="#193740" label="[19:37:40]">&lt;stikonas&gt;</a></span><span class="message">oh, I guess bootstrap on some other distro...</span></div><div class="line" id="193858"><span class="nick" style="color:#6b8072"><a href="#193858" label="[19:38:58]">&lt;janneke&gt;</a></span><span class="message">using guix has other benefits, of course, such as containerized builds, but they also come with a price</span></div><div class="line" id="193944"><span class="nick" style="color:#6b8072"><a href="#193944" label="[19:39:44]">&lt;janneke&gt;</a></span><span class="message">pder: gash is no requirement, bash+coreutils also do nicely</span></div><div class="line" id="211853"><span class="nick" style="color:#8dd3c7"><a href="#211853" label="[21:18:53]">&lt;mihi&gt;</a></span><span class="message">I wanted to suggest to try busybox coreutils, but when trying to compile them with mescc, I noticed they are full of _GNU_SOURCE functions like strchrnul... So probably not the best idea :(</span></div><div class="line" id="213525"><span class="nick" style="color:#80b1d3"><a href="#213525" label="[21:35:25]">&lt;OriansJ&gt;</a></span><span class="message">mihi: not until MesCC is able to directly compile GCC</span></div><div class="line" id="213623"><span class="nick" style="color:#8dd3c7"><a href="#213623" label="[21:36:23]">&lt;mihi&gt;</a></span><span class="message">OriansJ, or rather glibc. Not so much about language features, but about c library functions :)</span></div><div class="line" id="213729"><span class="nick" style="color:#8dd3c7"><a href="#213729" label="[21:37:29]">&lt;mihi&gt;</a></span><span class="message">on the other hand, when you have glibc+gcc available, you can compile &quot;real&quot; coreutils as easily</span></div><div class="line" id="213820"><span class="nick" style="color:#80b1d3"><a href="#213820" label="[21:38:20]">&lt;OriansJ&gt;</a></span><span class="message">mihi: yeah pretty much the major problem in bootstrapping. Everything likes to leverage C features to make their lives better/easier.</span></div><div class="line" id="213921"><span class="nick" style="color:#8dd3c7"><a href="#213921" label="[21:39:21]">&lt;mihi&gt;</a></span><span class="message">tbh those features/functions also often make the code easier to review; yet harder to bootstrap</span></div><div class="line" id="214027"><span class="nick" style="color:#80b1d3"><a href="#214027" label="[21:40:27]">&lt;OriansJ&gt;</a></span><span class="message">mihi: no one cares about bootstrapping their programs; otherwise they would be here trying desperately.</span></div><div class="line" id="214348"><span class="nick" style="color:#80b1d3"><a href="#214348" label="[21:43:48]">&lt;OriansJ&gt;</a></span><span class="message">There are millions of professional programmers in the world. How many work on FLOSS software? Thousands? of those how many care about reproducible builds? Hundreds? Of those how many care about bootstrapping? tens? of those how many actually contribute code? 8.</span></div><div class="line" id="214554"><span class="nick" style="color:#8dd3c7"><a href="#214554" label="[21:45:54]">&lt;mihi&gt;</a></span><span class="message">and how many care about their abominations of web browsers being reviewable? The monster that used to be KHTML and is part of Webkit today needs gigabytes of temporary disk space during compilation and instead of reviewing, the browser vendors hope that fuzzing will find most bugs before badguys do. but yeah off-topic...</span></div><div class="line" id="214628"><span class="nick" style="color:#8dd3c7"><a href="#214628" label="[21:46:28]">&lt;mihi&gt;</a></span><span class="message">or let's put the sandbox into a sandbox...</span></div><div class="line" id="214718"><span class="nick" style="color:#8dd3c7"><a href="#214718" label="[21:47:18]">&lt;mihi&gt;</a></span><span class="message">then introduce high-precision timers to untrusted javascript codes, and some time later complain about Spectre/Meltdown &quot;vulnerabilities&quot;...</span></div><div class="line" id="215451"><span class="nick" style="color:#80b1d3"><a href="#215451" label="[21:54:51]">&lt;OriansJ&gt;</a></span><span class="message">mihi: that count of 8 includes you</span></div><div class="line" id="215509"><span class="nick" style="color:#80b1d3"><a href="#215509" label="[21:55:09]">&lt;OriansJ&gt;</a></span><span class="message">I'd fix all these problems if I could</span></div><div class="line" id="215612"><span class="nick" style="color:#80b1d3"><a href="#215612" label="[21:56:12]">&lt;OriansJ&gt;</a></span><span class="message">but I am one man working in what little free time I have between a full time job, a marriage and a 10 month old baby who likes to pick locks.</span></div><div class="line" id="215638"><span class="nick" style="color:#80b1d3"><a href="#215638" label="[21:56:38]">&lt;OriansJ&gt;</a></span><span class="message">So I am focusing on a foundation others can build upon</span></div><div class="line" id="215818"><span class="nick" style="color:#8dd3c7"><a href="#215818" label="[21:58:18]">&lt;mihi&gt;</a></span><span class="message">OriansJ, I assume it also includes you :-D</span></div><div class="line" id="215828"><span class="nick" style="color:#80b1d3"><a href="#215828" label="[21:58:28]">&lt;OriansJ&gt;</a></span><span class="message">not to the level that xentrac achieved in dercuano but hopefully to GCC</span></div><div class="line" id="220146"><span class="nick" style="color:#80b1d3"><a href="#220146" label="[22:01:46]">&lt;OriansJ&gt;</a></span><span class="message">mihi: in sheer lines of code the order is: OriansJ (38,277), janneke (37,776) and then fossy (1,501)</span></div><div class="line" id="220500"><span class="nick" style="color:#80b1d3"><a href="#220500" label="[22:05:00]">&lt;OriansJ&gt;</a></span><span class="message">ooops sorry yt: you beat out fossy at 6,912 lines</span></div><div class="line" id="220705"><span class="nick" style="color:#6b8072"><a href="#220705" label="[22:07:05]">&lt;janneke&gt;</a></span><span class="message">when you choose to count lines of code, do no tthink of them as lines produced but as lines spent ;)</span></div><div class="line" id="220744"><span class="nick" style="color:#80b1d3"><a href="#220744" label="[22:07:44]">&lt;OriansJ&gt;</a></span><span class="message">janneke: very fair</span></div><div class="line" id="220943"><span class="nick" style="color:#80b1d3"><a href="#220943" label="[22:09:43]">&lt;OriansJ&gt;</a></span><span class="message">doing sloccount stage0/ mescc-tools/ M2-Planet/ mes-m2/ mescc-tools-seed/ mes/ we get 158,949SLOC with an estimated cost of $5,533,021 (There is some duplication in the count so it is probably wrong)</span></div><div class="line" id="221253"><span class="nick" style="color:#6b8072"><a href="#221253" label="[22:12:53]">&lt;janneke&gt;</a></span><span class="message">the patches i made to tinycc were *very* expensive, per loc; as are the patches i made to glibc, gcc</span></div><div class="line" id="221419"><span class="nick" style="color:#80b1d3"><a href="#221419" label="[22:14:19]">&lt;OriansJ&gt;</a></span><span class="message">wow janneke $5Million; world class programming work there</span></div><div class="line" id="222028"><span class="nick" style="color:#6b8072"><a href="#222028" label="[22:20:28]">&lt;janneke&gt;</a></span><span class="message">OriansJ: irregardless of how you count it, i believe we have started something pretty amazing</span></div><div class="line" id="222126"><span class="nick" style="color:#6b8072"><a href="#222126" label="[22:21:26]">&lt;janneke&gt;</a></span><span class="message">it deserves much more attention, labour and love; that time will come</span></div><div class="line" id="222359"><span class="nick" style="color:#80b1d3"><a href="#222359" label="[22:23:59]">&lt;OriansJ&gt;</a></span><span class="message">janneke: I believe deserving doesn't matter; I literally couldn't do otherwise. even if I never see anyone ever appreciate the work. I had to create it because it didn't already exist in my world.</span></div><div class="line" id="222457"><span class="nick" style="color:#80b1d3"><a href="#222457" label="[22:24:57]">&lt;OriansJ&gt;</a></span><span class="message">The fact that people have noticed and cared enough to try to help improve it is just ice cream on top.</span></div><div class="line" id="222733"><span class="nick" style="color:#6b8072"><a href="#222733" label="[22:27:33]">&lt;janneke&gt;</a></span><span class="message">OriansJ: yes, i agree; it's just that i believe it is worth more attention, though</span></div><div class="line" id="222932"><span class="nick" style="color:#80b1d3"><a href="#222932" label="[22:29:32]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well we have a lot of competition on that front. It is the attention economy these days.</span></div><div class="line" id="223639"><span class="nick" style="color:#80b1d3"><a href="#223639" label="[22:36:39]">&lt;OriansJ&gt;</a></span><span class="message">I mean world's first C compiler written in armv7l assembly basically got 2 upvotes and was buried in 5 minutes</span></div><div class="line" id="223739"><span class="nick" style="color:#80b1d3"><a href="#223739" label="[22:37:39]">&lt;OriansJ&gt;</a></span><span class="message">and as promised a first whack at a bootstrappable history <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/History.org">https://github.com/oriansj/talk-notes/blob/master/History.org</a>  (a shitload is missing but I did what I could between the distractions)</span></div><div class="line" id="224031"><span class="nick" style="color:#80b1d3"><a href="#224031" label="[22:40:31]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: sorry I couldn't figure out where to put stone-knife forth or Ur-Scheme in it; perhaps you could help with that?</span></div><div class="line" id="224105"><span class="nick" style="color:#80b1d3"><a href="#224105" label="[22:41:05]">&lt;OriansJ&gt;</a></span><span class="message">janneke: hopefully I didn't get your start too wrong. (feel free to fix anything you thing wrong)</span></div><div class="line" id="224155"><span class="nick" style="color:#80b1d3"><a href="#224155" label="[22:41:55]">&lt;OriansJ&gt;</a></span><span class="message">as everyone here should be able to include what brought them in and what they are most proud of.</span></div><div class="line" id="224209"><span class="nick" style="color:#80b1d3"><a href="#224209" label="[22:42:09]">&lt;OriansJ&gt;</a></span><span class="message">To make it more human and interesting.</span></div><div class="line" id="225224"><span class="nick" style="color:#6c3d55"><a href="#225224" label="[22:52:24]">&lt;fossy&gt;</a></span><span class="message">stikonas: a distribution independent Linux bootstrap that relies on the least number of seeds possible with portability to other kernels</span></div><div class="line" id="225240"><span class="nick" style="color:#6c3d55"><a href="#225240" label="[22:52:40]">&lt;fossy&gt;</a></span><span class="message">github.com/fosslinux/live-bootstrap</span></div><div class="line" id="225304"><span class="nick" style="color:#6c3d55"><a href="#225304" label="[22:53:04]">&lt;fossy&gt;</a></span><span class="message">I've hit an error with tcc and its taking me a bit to resolve, but once I get past that I'll be back on the roaf</span></div><div class="line" id="225311"><span class="nick" style="color:#6b8072"><a href="#225311" label="[22:53:11]">&lt;janneke&gt;</a></span><span class="message">OriansJ: hehe, that's pretty accurate; i like your viewpoint anyway</span></div><div class="line" id="225648"><span class="nick" style="color:#6b8072"><a href="#225648" label="[22:56:48]">&lt;janneke&gt;</a></span><span class="message">from my pov hex0 was both an inspirational spark and at the same time it also felt like an overwhelmingly long path, a fool's undertaking -- yeah wow i want this but &quot;i don't have time for this shit&quot;</span></div><div class="line" id="225741"><span class="nick" style="color:#6b8072"><a href="#225741" label="[22:57:41]">&lt;janneke&gt;</a></span><span class="message">your m2-planet really took my by surprise, i was prepared to have to code mes.c in assembly, eventually</span></div><div class="line" id="230029"><span class="nick" style="color:#6b8072"><a href="#230029" label="[23:00:29]">&lt;janneke&gt;</a></span><span class="message">OriansJ: so, you actually responded/acted upon civodul's writings in the guix manual about reproducible builds and bootstrapping (that were written after the first reproducible-builds summits i believe)?</span></div><div class="line" id="230038"><span class="nick" style="color:#6c3d55"><a href="#230038" label="[23:00:38]">&lt;fossy&gt;</a></span><span class="message">I was reading the paper &quot;Fully Countering Trusting Trust through Diverse Double-Compiling&quot; the other day</span></div><div class="line" id="230039"><span class="nick" style="color:#6c3d55"><a href="#230039" label="[23:00:39]">&lt;fossy&gt;</a></span><span class="message">very interesting</span></div><div class="line" id="230047"><span class="nick" style="color:#6c3d55"><a href="#230047" label="[23:00:47]">&lt;fossy&gt;</a></span><span class="message">however the title I believe is misinformative</span></div><div class="line" id="230132"><span class="nick" style="color:#6c3d55"><a href="#230132" label="[23:01:32]">&lt;fossy&gt;</a></span><span class="message">it dosen't really fully counter trusting trust as it requries a so-called &quot;trusted compiler&quot; to verify the results against, if you use two compilers that are maliciously modified in the same way your double-compiling is useless</span></div><div class="line" id="230144"><span class="nick" style="color:#6c3d55"><a href="#230144" label="[23:01:44]">&lt;fossy&gt;</a></span><span class="message">i think that's where our work comes in :)</span></div><div class="line" id="230206"><span class="nick" style="color:#6b8072"><a href="#230206" label="[23:02:06]">&lt;janneke&gt;</a></span><span class="message">OriansJ: very nice writeup!</span></div><div class="line" id="230259"><span class="nick" style="color:#d9d9d9"><a href="#230259" label="[23:02:59]">&lt;rain1&gt;</a></span><span class="message">yes I have never understood the point of that ddc stuff at all</span></div><div class="line" id="230332"><span class="nick" style="color:#6c3d55"><a href="#230332" label="[23:03:32]">&lt;fossy&gt;</a></span><span class="message">i believe it has a purpose</span></div><div class="line" id="230422"><span class="nick" style="color:#6c3d55"><a href="#230422" label="[23:04:22]">&lt;fossy&gt;</a></span><span class="message">if you only have resources to bootstrap a compiler you can bring your other production compiler into the trusted execution space that is bootstrapped and use ddc to check your production compiler is good</span></div><div class="line" id="230442"><span class="nick" style="color:#6c3d55"><a href="#230442" label="[23:04:42]">&lt;fossy&gt;</a></span><span class="message">however using it in the method described is useeless because your execution environment is tainted potentially</span></div><div class="line" id="230458"><span class="nick" style="color:#6c3d55"><a href="#230458" label="[23:04:58]">&lt;fossy&gt;</a></span><span class="message">so how do you know your utilities such as sha256sum that you have to use to verify your ddc are trusted?</span></div><div class="line" id="230614"><span class="nick" style="color:#8dd3c7"><a href="#230614" label="[23:06:14]">&lt;mihi&gt;</a></span><span class="message">fossy, how do you know SHA256 can be trusted and does not have a backdoor so that your backdoored compiler has the same hash? use cmp...</span></div><div class="line" id="230618"><span class="nick" style="color:#80b1d3"><a href="#230618" label="[23:06:18]">&lt;OriansJ&gt;</a></span><span class="message">you are right fossy; I missed David A Wheeler's DDC work. now to figure out a clever title for it</span></div><div class="line" id="230657"><span class="nick" style="color:#6c3d55"><a href="#230657" label="[23:06:57]">&lt;fossy&gt;</a></span><span class="message">mihi: and how do you know that that's not also backdoored</span></div><div class="line" id="230709"><span class="nick" style="color:#6c3d55"><a href="#230709" label="[23:07:09]">&lt;fossy&gt;</a></span><span class="message">my point is ddc has to be done in a trusted execution environment</span></div><div class="line" id="230715"><span class="nick" style="color:#6c3d55"><a href="#230715" label="[23:07:15]">&lt;fossy&gt;</a></span><span class="message">which is not elaborated on at all in the disseration</span></div><div class="line" id="230723"><span class="nick" style="color:#8dd3c7"><a href="#230723" label="[23:07:23]">&lt;mihi&gt;</a></span><span class="message">by compiling it with my trusted compiler, after having reviewed it (or written from scratch)</span></div><div class="line" id="230746"><span class="nick" style="color:#6c3d55"><a href="#230746" label="[23:07:46]">&lt;fossy&gt;</a></span><span class="message">right, exactly</span></div><div class="line" id="230751"><span class="nick" style="color:#8dd3c7"><a href="#230751" label="[23:07:51]">&lt;mihi&gt;</a></span><span class="message">fossy, such details are left as an exercise to the reader :P</span></div><div class="line" id="230803"><span class="nick" style="color:#6c3d55"><a href="#230803" label="[23:08:03]">&lt;fossy&gt;</a></span><span class="message">and i believe our bootstrappable solution is the most robust trusted compiler that is possible, tbh</span></div><div class="line" id="230831"><span class="nick" style="color:#8dd3c7"><a href="#230831" label="[23:08:31]">&lt;mihi&gt;</a></span><span class="message">fossy, agreed if ~s/possible/available/</span></div><div class="line" id="230850"><span class="nick">***</span><span class="message notice">lfam_ is now known as lfam</span></div><div class="line" id="230855"><span class="nick" style="color:#6c3d55"><a href="#230855" label="[23:08:55]">&lt;fossy&gt;</a></span><span class="message">well, yes, right now</span></div><div class="line" id="230905"><span class="nick" style="color:#6c3d55"><a href="#230905" label="[23:09:05]">&lt;fossy&gt;</a></span><span class="message">but once we get to bare metal i'm not sure how much further you can go :P</span></div><div class="line" id="231732"><span class="nick" style="color:#389600"><a href="#231732" label="[23:17:32]">&lt;stikonas&gt;</a></span><span class="message">fossy: that definitely sounds cool :)</span></div><div class="line" id="231739"><span class="nick" style="color:#80b1d3"><a href="#231739" label="[23:17:39]">&lt;OriansJ&gt;</a></span><span class="message">fossy: free hardware designs clearly</span></div><div class="line" id="231744"><span class="nick" style="color:#80b1d3"><a href="#231744" label="[23:17:44]">&lt;OriansJ&gt;</a></span><span class="message">and libresilicon</span></div><div class="line" id="232343"><span class="nick" style="color:#80b1d3"><a href="#232343" label="[23:23:43]">&lt;OriansJ&gt;</a></span><span class="message">and janneke hopefully the new revision is a better reflection for you.</span></div><div class="line" id="232506"><span class="nick" style="color:#6b8072"><a href="#232506" label="[23:25:06]">&lt;janneke&gt;</a></span><span class="message">OriansJ: thanks; would you mind adding just a bit more about your own inspiration: i would like that!</span></div><div class="line" id="234636"><span class="nick" style="color:#2e2a4a"><a href="#234636" label="[23:46:36]">&lt;Hagfish&gt;</a></span><span class="message">i think the point of DDC is that it increases the cost for an attacker from &quot;make one malicious compiler&quot; to &quot;make every available compiler malicious in compatible ways&quot;</span></div><div class="line" id="234650"><span class="nick" style="color:#6b8072"><a href="#234650" label="[23:46:50]">&lt;malina&gt;</a></span><span class="message">I contacted edmund, of those hex bootstrapping notes many years ago and enquired vs. finding more work to get from his examples, to gcc, then ranted a bit about the US</span></div><div class="line" id="234659"><span class="nick" style="color:#6b8072"><a href="#234659" label="[23:46:59]">&lt;malina&gt;</a></span><span class="message">and all these years later, I see now this stage0 thing</span></div><div class="line" id="234805"><span class="nick" style="color:#6b8072"><a href="#234805" label="[23:48:05]">&lt;malina&gt;</a></span><span class="message">great! it is so important to have a full source based path which people can self-verify indeed. wow, great stuff, am gonna play with this and since gnu has sent me on a while goose chase , caling things are 'bootstrapping' when they are nothing of the sort really</span></div><div class="line" id="234819"><span class="nick" style="color:#2e2a4a"><a href="#234819" label="[23:48:19]">&lt;Hagfish&gt;</a></span><span class="message">stage0 seems like an idea that the universe required to be implemented at some point.  probably every intelligent civilisation produces something similar at some point if it survives long enough :)</span></div><div class="line" id="234941"><span class="nick" style="color:#6b8072"><a href="#234941" label="[23:49:41]">&lt;malina&gt;</a></span><span class="message">anyway, ultimately, another missing piece in the puzzle is quite possibly then even mor edangerous one, firmware, esp microcode in cpu's. The free world simply should only allow products signed by some civil authority which has been handed relevant source, and not companies/countries like INtel./US, yikes signing their own shit.. unfuckibgbelievable, pardon my Inrgrih</span></div><div class="line" id="235004"><span class="nick" style="color:#6b8072"><a href="#235004" label="[23:50:04]">&lt;janneke&gt;</a></span><span class="message">OriansJ: come to think of it, i wouldn't mind if mescc-tools-seed's functionality would move into Stage0</span></div><div class="line" id="235034"><span class="nick" style="color:#6b8072"><a href="#235034" label="[23:50:34]">&lt;malina&gt;</a></span><span class="message">you mean any intelligent civlisation which doesn't destroy itself, or anyting amazing like rare gems , would eventually digitise binary? sure.</span></div><div class="line" id="235052"><span class="nick" style="color:#6b8072"><a href="#235052" label="[23:50:52]">&lt;malina&gt;</a></span><span class="message">but I don't think they would necessarily, have lost the early bootstrapping processes, even if we did</span></div><div class="line" id="235119"><span class="nick" style="color:#6b8072"><a href="#235119" label="[23:51:19]">&lt;malina&gt;</a></span><span class="message">so this can reach tcc ?</span></div><div class="line" id="235127"><span class="nick" style="color:#6b8072"><a href="#235127" label="[23:51:27]">&lt;malina&gt;</a></span><span class="message">or so, which in turn can hit gcc and all this?</span></div><div class="line" id="235156"><span class="nick" style="color:#389600"><a href="#235156" label="[23:51:56]">&lt;stikonas&gt;</a></span><span class="message">well, at some point before everything was already bootstrapped (via hand-written assembly and I guess cathode ray lamps...) but bootstrap path was forgotten. stage0 just makes it more modern :)</span></div><div class="line" id="235233"><span class="nick" style="color:#d9d9d9"><a href="#235233" label="[23:52:33]">&lt;rain1&gt;</a></span><span class="message">unfortunately it is not a tool we have access to: the silicon stuff</span></div><div class="line" id="235302"><span class="nick" style="color:#389600"><a href="#235302" label="[23:53:02]">&lt;stikonas&gt;</a></span><span class="message">malina: yes, it can reach gcc but obviously, you still need to trust some other stuff a bit... (POSIX kernel, or your baremetal bootloader, etc...)</span></div><div class="line" id="235313"><span class="nick" style="color:#6b8072"><a href="#235313" label="[23:53:13]">&lt;malina&gt;</a></span><span class="message">ye got it stikonas</span></div><div class="line" id="235322"><span class="nick" style="color:#6b8072"><a href="#235322" label="[23:53:22]">&lt;janneke&gt;</a></span><span class="message">malina: yes, the full source bootstrap is being developed in gnu guix, see <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap</a> </span></div><div class="line" id="235324"><span class="nick" style="color:#6b8072"><a href="#235324" label="[23:53:24]">&lt;malina&gt;</a></span><span class="message">but I htink that's a fairly good compromise</span></div><div class="line" id="235344"><span class="nick" style="color:#389600"><a href="#235344" label="[23:53:44]">&lt;stikonas&gt;</a></span><span class="message">yeah, it is</span></div><div class="line" id="235401"><span class="nick" style="color:#80b1d3"><a href="#235401" label="[23:54:01]">&lt;OriansJ&gt;</a></span><span class="message">malina: it is a long work in progress but I promise we will get far farther than anyone expects.</span></div><div class="line" id="235418"><span class="nick" style="color:#6b8072"><a href="#235418" label="[23:54:18]">&lt;malina&gt;</a></span><span class="message">yes, I realise in th past years guix is my most obvious contender to ideas lol . but nvm. Although I thnk it's a GPL thing, I guess *if* I move on to some other person's distro, I might very wel do guix</span></div><div class="line" id="235430"><span class="nick" style="color:#6b8072"><a href="#235430" label="[23:54:30]">&lt;janneke&gt;</a></span><span class="message">malina: tbh, this is all very fresh; so while the previous &quot;reduced binary seed bootstrap&quot; is integrated in guix, this full source bootstrap just may need some work yet</span></div><div class="line" id="235430"><span class="nick" style="color:#6b8072"><a href="#235430" label="[23:54:30]">&lt;malina&gt;</a></span><span class="message">OriansJ, well done</span></div><div class="line" id="235514"><span class="nick" style="color:#80b1d3"><a href="#235514" label="[23:55:14]">&lt;OriansJ&gt;</a></span><span class="message">janneke: as promised I added my inspiration.</span></div><div class="line" id="235522"><span class="nick" style="color:#6b8072"><a href="#235522" label="[23:55:22]">&lt;malina&gt;</a></span><span class="message">I thnk that is because you are trying to go beyond just the bootstrap of self compiling, but including the 'auxiliary tools' lik editor, and what not, yes?</span></div><div class="line" id="235542"><span class="nick" style="color:#d9d9d9"><a href="#235542" label="[23:55:42]">&lt;rain1&gt;</a></span><span class="message">that would be cool</span></div><div class="line" id="235557"><span class="nick" style="color:#80b1d3"><a href="#235557" label="[23:55:57]">&lt;OriansJ&gt;</a></span><span class="message">malina: stage0 has a line editor if you need it</span></div><div class="line" id="235601"><span class="nick" style="color:#d9d9d9"><a href="#235601" label="[23:56:01]">&lt;rain1&gt;</a></span><span class="message">emacs is image based so there might avctually be a genuine issue there? maybe it compiles without image though</span></div><div class="line" id="235623"><span class="nick" style="color:#6b8072"><a href="#235623" label="[23:56:23]">&lt;janneke&gt;</a></span><span class="message">OriansJ: nice!</span></div><div class="line" id="235700"><span class="nick" style="color:#6b8072"><a href="#235700" label="[23:57:00]">&lt;malina&gt;</a></span><span class="message">I just meant OriansJ , that I see/saw you guys had been inspired by edmund's notes, and also done this work and relased it in 2017..2018 etc, so when you say something is fresh, and menbntion 'reduced seed', I am guessing you have some 'additional' milestone I just happened to coincidentally stumble upon now</span></div><div class="line" id="235706"><span class="nick" style="color:#6b8072"><a href="#235706" label="[23:57:06]">&lt;malina&gt;</a></span><span class="message">which is another big step forward or something</span></div><div class="line" id="235743"><span class="nick" style="color:#80b1d3"><a href="#235743" label="[23:57:43]">&lt;terpri&gt;</a></span><span class="message">emacs isn't image-based in the same way that, say, smalltalk is. dumping is an optimization; you can run temacs that's just c and compile/load all the elisp that would normally be preloaded</span></div><div class="line" id="235915"><span class="nick" style="color:#d9d9d9"><a href="#235915" label="[23:59:15]">&lt;rain1&gt;</a></span><span class="message">ah thank you!</span></div><br /></div></body></html>