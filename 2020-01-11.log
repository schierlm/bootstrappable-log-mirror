<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-01-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001124"><span class="nick" style="color:#8dd3c7"><a href="#001124" label="[00:11:24]">&lt;NieDzejkob&gt;</a></span><span class="message">well, unspecified is implementation defined, it can evaluate to whatever it wants to</span></div><div class="line" id="001436"><span class="nick" style="color:#2e2a4a"><a href="#001436" label="[00:14:36]">&lt;oriansj&gt;</a></span><span class="message">and (while '() (display &quot;wrong\n&quot;))</span></div><div class="line" id="001447"><span class="nick" style="color:#2e2a4a"><a href="#001447" label="[00:14:47]">&lt;oriansj&gt;</a></span><span class="message">should nil be considered true?</span></div><div class="line" id="001644"><span class="nick" style="color:#2e2a4a"><a href="#001644" label="[00:16:44]">&lt;oriansj&gt;</a></span><span class="message">Should (while (display &quot;wrong\n&quot;)) run even though it has nothing inside of the expression?</span></div><div class="line" id="002924"><span class="nick" style="color:#8dd3c7"><a href="#002924" label="[00:29:24]">&lt;NieDzejkob&gt;</a></span><span class="message">'() is true, see r7rs-small section 6.3 &quot;Of all the Scheme values, only#f counts as false in condi-tional expressions [...] Unlike some other dialects of Lisp, Scheme distinguishes #f and  the  empty  list   from  each  other  and  from  the  symbol nil&quot;</span></div><div class="line" id="003052"><span class="nick" style="color:#2e2a4a"><a href="#003052" label="[00:30:52]">&lt;oriansj&gt;</a></span><span class="message">hmmmm ok now about guile diverging from the spec in regards to quasiquote</span></div><div class="line" id="003107"><span class="nick" style="color:#8dd3c7"><a href="#003107" label="[00:31:07]">&lt;NieDzejkob&gt;</a></span><span class="message">a loop with only the condition also makes sense as the expression can have side effects</span></div><div class="line" id="003350"><span class="nick" style="color:#8dd3c7"><a href="#003350" label="[00:33:50]">&lt;NieDzejkob&gt;</a></span><span class="message">re quasiquote: see section 1.3.2: &quot;If such wording does not appear in the discussion of an er-ror,  then  implementations  are  not  required  to  detect  orreport  the  error [...] Alternatively, implementations may pro-vide non-portable extensions.&quot;</span></div><div class="line" id="003412"><span class="nick" style="color:#2e2a4a"><a href="#003412" label="[00:34:12]">&lt;oriansj&gt;</a></span><span class="message">(guess I need to fix my while loop form)</span></div><div class="line" id="003426"><span class="nick" style="color:#8dd3c7"><a href="#003426" label="[00:34:26]">&lt;NieDzejkob&gt;</a></span><span class="message">the wording used is &quot;then it is an error if the following expression does notevaluate to a list&quot;, so this applies</span></div><div class="line" id="003455"><span class="nick" style="color:#2e2a4a"><a href="#003455" label="[00:34:55]">&lt;oriansj&gt;</a></span><span class="message">(1 2 3 . 4) is not a list per the spec</span></div><div class="line" id="004013"><span class="nick" style="color:#8dd3c7"><a href="#004013" label="[00:40:13]">&lt;NieDzejkob&gt;</a></span><span class="message">ok, so?</span></div><div class="line" id="034906"><span class="nick" style="color:#2e2a4a"><a href="#034906" label="[03:49:06]">&lt;oriansj&gt;</a></span><span class="message">NieDzejkob: my concern with quasiquote is that in guile `(foo bar ,@(+ 4 5)) does not produce a list; which is why I am curious what the correct decision should be (hence the asking of janneke on his opinion)</span></div><div class="line" id="040927"><span class="nick" style="color:#2e2a4a"><a href="#040927" label="[04:09:27]">&lt;oriansj&gt;</a></span><span class="message">This is the block of C code which I am trying to decide what to do with: <a rel="nofollow" href="https://paste.debian.net/1125549/">https://paste.debian.net/1125549/</a> </span></div><div class="line" id="041204"><span class="nick" style="color:#2e2a4a"><a href="#041204" label="[04:12:04]">&lt;oriansj&gt;</a></span><span class="message">essentially I know how to do it both ways, but I don't know which behavior is more likely to occur in MesCC and guix; thus my desire for insight in which code path to enable or if I should wait until we hit a hard to solve bug only to trace it to this little block of code.</span></div><div class="line" id="041320"><span class="nick" style="color:#2e2a4a"><a href="#041320" label="[04:13:20]">&lt;oriansj&gt;</a></span><span class="message">right now I have it error out hard, so it'll be easy to trace the reason and fix but the other way doesn't have a big hard error but makes a subtle change in behavior of the downstream functions which get such output</span></div><div class="line" id="041510"><span class="nick" style="color:#2e2a4a"><a href="#041510" label="[04:15:10]">&lt;oriansj&gt;</a></span><span class="message">minus the fact that my ascii art kinda sucks, a new patch of comments and details are up</span></div><div class="line" id="041634"><span class="nick" style="color:#2e2a4a"><a href="#041634" label="[04:16:34]">&lt;oriansj&gt;</a></span><span class="message">feel free to find errors or points where my hands didn't keep up with me and letters or words are missing or clarity needs work. (Ideally one should be able to open up mes_eval.c and know exactly how mes-m2 evaluates s-expressions quickly)</span></div><div class="line" id="043956"><span class="nick" style="color:#2e2a4a"><a href="#043956" label="[04:39:56]">&lt;oriansj&gt;</a></span><span class="message">Mostly today has been a day of cleaning and reorganization because mes-m2 was just a little bit messy</span></div><div class="line" id="051245"><span class="nick" style="color:#2e2a4a"><a href="#051245" label="[05:12:45]">&lt;oriansj&gt;</a></span><span class="message">ok, I think that is enough cleanup of mes_eval.c for tonight; janneke please take a minute to look at it. I need another set of eyes to see what I could do to make it even more obvious how it works and why.</span></div><div class="line" id="051304"><span class="nick" style="color:#2e2a4a"><a href="#051304" label="[05:13:04]">&lt;oriansj&gt;</a></span><span class="message">Tomorrow, I'll start simplifying mes_macro.c (shutter)</span></div><div class="line" id="100610"><span class="nick" style="color:#6b8072"><a href="#100610" label="[10:06:10]">&lt;janneke&gt;</a></span><span class="message">oriansj: i will have a look later today; although about the quasiquote question i may have to defer to #guile</span></div><div class="line" id="100835"><span class="nick" style="color:#6b8072"><a href="#100835" label="[10:08:35]">&lt;janneke&gt;</a></span><span class="message">i need some more time to re-read your quasiquote question, will do later</span></div><div class="line" id="124925"><span class="nick" style="color:#2e2a4a"><a href="#124925" label="[12:49:25]">&lt;oriansj&gt;</a></span><span class="message">janneke: understandably</span></div><div class="line" id="125039"><span class="nick">***</span><span class="message notice">Server sets mode: +cnt </span></div><div class="line" id="133313"><span class="nick" style="color:#80b1d3"><a href="#133313" label="[13:33:13]">&lt;dddddd&gt;</a></span><span class="message">hi</span></div><div class="line" id="135159"><span class="nick" style="color:#2e2a4a"><a href="#135159" label="[13:51:59]">&lt;oriansj&gt;</a></span><span class="message">morning dddddd</span></div><div class="line" id="154312"><span class="nick" style="color:#6b8072"><a href="#154312" label="[15:43:12]">&lt;janneke&gt;</a></span><span class="message">oriansj: i do not understand why: `(foo bar ,@(+ 4 5)) has to do with unquote; it's unquote-splicing that is used in a weird way</span></div><div class="line" id="154324"><span class="nick" style="color:#6b8072"><a href="#154324" label="[15:43:24]">&lt;janneke&gt;</a></span><span class="message">also, i don't understand why you say it does not produce a list?</span></div><div class="line" id="154405"><span class="nick" style="color:#6b8072"><a href="#154405" label="[15:44:05]">&lt;janneke&gt;</a></span><span class="message">i see that the cdr is not null, but it's still a list?</span></div><div class="line" id="154448"><span class="nick" style="color:#6b8072"><a href="#154448" label="[15:44:48]">&lt;janneke&gt;</a></span><span class="message">i don't like this code; i would prefer to write: `(foo bar . ,(+ 4 5))</span></div><div class="line" id="154505"><span class="nick" style="color:#6b8072"><a href="#154505" label="[15:45:05]">&lt;janneke&gt;</a></span><span class="message">but i don't see the difference, really; so what guile does makes sense</span></div><div class="line" id="154520"><span class="nick" style="color:#6b8072"><a href="#154520" label="[15:45:20]">&lt;janneke&gt;</a></span><span class="message">i am not sure what r7rs says and what that would be different</span></div><div class="line" id="154544"><span class="nick" style="color:#6b8072"><a href="#154544" label="[15:45:44]">&lt;janneke&gt;</a></span><span class="message">but...this is just my uninformed opinion, possibly take this to #guile</span></div><div class="line" id="154704"><span class="nick" style="color:#2e2a4a"><a href="#154704" label="[15:47:04]">&lt;oriansj&gt;</a></span><span class="message">ok</span></div><div class="line" id="154724"><span class="nick" style="color:#8dd3c7"><a href="#154724" label="[15:47:24]">&lt;NieDzejkob&gt;</a></span><span class="message">&quot;A list can be defined recursively as either the empty list or a pair whose cdr is a list.&quot;, so this is not a proper list</span></div><div class="line" id="154755"><span class="nick" style="color:#8dd3c7"><a href="#154755" label="[15:47:55]">&lt;NieDzejkob&gt;</a></span><span class="message">(list? `(foo bar ,@(+ 4 5))) -&gt; #f</span></div><div class="line" id="154903"><span class="nick" style="color:#8dd3c7"><a href="#154903" label="[15:49:03]">&lt;NieDzejkob&gt;</a></span><span class="message">oh, more straightforward: &quot;A chain of pairs not ending in the empty list is called animproper  list.   Note  that  an  improper  list  is  not  a  list.&quot;</span></div><div class="line" id="154948"><span class="nick" style="color:#6b8072"><a href="#154948" label="[15:49:48]">&lt;janneke&gt;</a></span><span class="message">NieDzejkob: yes, it's not a proper list</span></div><div class="line" id="155012"><span class="nick" style="color:#6b8072"><a href="#155012" label="[15:50:12]">&lt;janneke&gt;</a></span><span class="message">ah, okay</span></div><div class="line" id="155056"><span class="nick" style="color:#6d2462"><a href="#155056" label="[15:50:56]">*</a></span><span class="message">janneke still prefers to call it: an improper list rather than &quot;not a list&quot;</span></div><div class="line" id="155103"><span class="nick" style="color:#6b8072"><a href="#155103" label="[15:51:03]">&lt;janneke&gt;</a></span><span class="message">#f is also &quot;not a list&quot;</span></div><div class="line" id="155210"><span class="nick" style="color:#8dd3c7"><a href="#155210" label="[15:52:10]">&lt;NieDzejkob&gt;</a></span><span class="message">I think that this behavior is an accident, since `(foo bar ,@9 baz) signals an error in append</span></div><div class="line" id="155224"><span class="nick" style="color:#8dd3c7"><a href="#155224" label="[15:52:24]">&lt;NieDzejkob&gt;</a></span><span class="message">hmm, this might be a bug, actually</span></div><div class="line" id="155243"><span class="nick" style="color:#6b8072"><a href="#155243" label="[15:52:43]">&lt;janneke&gt;</a></span><span class="message">yeah, i'm really undecided -- i think using this `feature' is ugly</span></div><div class="line" id="155308"><span class="nick" style="color:#6b8072"><a href="#155308" label="[15:53:08]">&lt;janneke&gt;</a></span><span class="message">but it could very well be that i am missing some perspective</span></div><div class="line" id="155328"><span class="nick" style="color:#8dd3c7"><a href="#155328" label="[15:53:28]">&lt;NieDzejkob&gt;</a></span><span class="message">I'm gonna submit a patch to guile that makes this error, we'll see what they say</span></div><div class="line" id="155603"><span class="nick" style="color:#2e2a4a"><a href="#155603" label="[15:56:03]">&lt;oriansj&gt;</a></span><span class="message">sounds like a great way to solve this question, good job NieDzejkob</span></div><div class="line" id="155953"><span class="nick" style="color:#2e2a4a"><a href="#155953" label="[15:59:53]">&lt;oriansj&gt;</a></span><span class="message">So we will stick with current mes-m2 behavior for quasiquote and when guile responds, we will have our decision made for us and I can quickly change it to the other form if needed.</span></div><div class="line" id="161233"><span class="nick" style="color:#8dd3c7"><a href="#161233" label="[16:12:33]">&lt;NieDzejkob&gt;</a></span><span class="message">hmm, actually, now that I think about it, this may have some non-trivial performance implications</span></div><div class="line" id="161259"><span class="nick" style="color:#8dd3c7"><a href="#161259" label="[16:12:59]">&lt;NieDzejkob&gt;</a></span><span class="message">like, should improper lists passed to ,@ get detected too?</span></div><div class="line" id="161328"><span class="nick" style="color:#8dd3c7"><a href="#161328" label="[16:13:28]">&lt;NieDzejkob&gt;</a></span><span class="message">Racket does it nicely in that it saves in the cons pair whether it is a proper list</span></div><div class="line" id="161343"><span class="nick" style="color:#8dd3c7"><a href="#161343" label="[16:13:43]">&lt;NieDzejkob&gt;</a></span><span class="message">which makes (list? _) an O(1) operation</span></div><div class="line" id="161531"><span class="nick" style="color:#8dd3c7"><a href="#161531" label="[16:15:31]">&lt;NieDzejkob&gt;</a></span><span class="message">OTOH, just checking for pair? would catch most mistakes</span></div><div class="line" id="161547"><span class="nick" style="color:#2e2a4a"><a href="#161547" label="[16:15:47]">&lt;oriansj&gt;</a></span><span class="message">which is what mes-m2 does</span></div><div class="line" id="173859"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="192430"><span class="nick" style="color:#8dd3c7"><a href="#192430" label="[19:24:30]">&lt;NieDzejkob&gt;</a></span><span class="message">okay, I'm not gonna submit a patch to guile for this because I apparently don't know enough about the internals of guile</span></div><br /></div></body></html>