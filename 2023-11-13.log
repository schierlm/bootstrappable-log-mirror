<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-11-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="022605"><span class="nick" style="color:#389600"><a href="#022605" label="[02:26:05]">&lt;Googulator&gt;</a></span><span class="message">oriansj: like lex and yacc are also available as part of Plan 9, which is under the MIT license since 2021</span></div><div class="line" id="022627"><span class="nick" style="color:#389600"><a href="#022627" label="[02:26:27]">&lt;Googulator&gt;</a></span><span class="message">Are we using any other part of heirloom?</span></div><div class="line" id="022821"><span class="nick" style="color:#389600"><a href="#022821" label="[02:28:21]">&lt;Googulator&gt;</a></span><span class="message"> <a rel="nofollow" href="https://9p.io/sources/plan9/sys/src/cmd/lex/">https://9p.io/sources/plan9/sys/src/cmd/lex/</a>  and <a rel="nofollow" href="https://9p.io/sources/plan9/sys/src/cmd/yacc.c">https://9p.io/sources/plan9/sys/src/cmd/yacc.c</a> </span></div><div class="line" id="025041"><span class="nick" style="color:#8dd3c7"><a href="#025041" label="[02:50:41]">&lt;muurkha&gt;</a></span><span class="message">Googulator: that's wonderful news, thanks!</span></div><div class="line" id="025820"><span class="nick" style="color:#389600"><a href="#025820" label="[02:58:20]">&lt;Googulator&gt;</a></span><span class="message">Is m4 from Heirloom used anywhere in the bootstrap?</span></div><div class="line" id="033939"><span class="nick" style="color:#2e2a4a"><a href="#033939" label="[03:39:39]">&lt;vagrantc&gt;</a></span><span class="message">ok, i think i have the patches to fix mes's clean target ... will know in 20-some minutes</span></div><div class="line" id="041052"><span class="nick" style="color:#2e2a4a"><a href="#041052" label="[04:10:52]">&lt;vagrantc&gt;</a></span><span class="message">and said patches: <a rel="nofollow" href="https://salsa.debian.org/debian/mes/-/tree/edb6d296f4c96c0e8509fdb8049453ae20bb3d1c/debian/patches">https://salsa.debian.org/debian/mes/-/tree/edb6d296f4c96c0e8509fdb8049453ae20bb3d1c/debian/patches</a> </span></div><div class="line" id="080745"><span class="nick" style="color:#6b8072"><a href="#080745" label="[08:07:45]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: thanks for the fix, your PR will eventually go to upstream by rickmasters as he is upstreaming all the changes he made on Fiwix</span></div><div class="line" id="103807"><span class="nick" style="color:#389600"><a href="#103807" label="[10:38:07]">&lt;Googulator&gt;</a></span><span class="message">Pushed my changes to <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/tree/wip-can-reboot">https://github.com/Googulator/live-bootstrap/tree/wip-can-reboot</a>  and <a rel="nofollow" href="https://github.com/Googulator/live-bootstrap/tree/playground">https://github.com/Googulator/live-bootstrap/tree/playground</a> </span></div><div class="line" id="104559"><span class="nick" style="color:#389600"><a href="#104559" label="[10:45:59]">&lt;Googulator&gt;</a></span><span class="message">After bootstrap is done, you can boot back into the newly created environment by doing qemu-system-x86_64 -enable-kvm -m 8G -smp 8 -drive file=tmp/sysa/sysa.img,format=raw -nic user,ipv6=off,model=e1000 [-nographic]</span></div><div class="line" id="104635"><span class="nick" style="color:#389600"><a href="#104635" label="[10:46:35]">&lt;Googulator&gt;</a></span><span class="message">with -nographic, it gives a serial console, without it, you get Grub's graphical console (currently defaults to 1024x768)</span></div><div class="line" id="104724"><span class="nick" style="color:#389600"><a href="#104724" label="[10:47:24]">&lt;Googulator&gt;</a></span><span class="message">of course, rather than just using /tmp/sysa/sysa.img directly, it's better to make a copy of it and boot that, so you can preserve the image as bootstrapped</span></div><div class="line" id="104840"><span class="nick" style="color:#389600"><a href="#104840" label="[10:48:40]">&lt;Googulator&gt;</a></span><span class="message">bare metal should work too, but untested</span></div><div class="line" id="104856"><span class="nick" style="color:#389600"><a href="#104856" label="[10:48:56]">&lt;Googulator&gt;</a></span><span class="message">(as long as it's on sda)</span></div><div class="line" id="105039"><span class="nick" style="color:#389600"><a href="#105039" label="[10:50:39]">&lt;Googulator&gt;</a></span><span class="message">also, --update-checksums is currently required since the included checksums are wrong</span></div><div class="line" id="131411"><span class="nick" style="color:#389600"><a href="#131411" label="[13:14:11]">&lt;Googulator&gt;</a></span><span class="message">Time for bare-metal testing... <a rel="nofollow" href="https://github-production-user-asset-6210df.s3.amazonaws.com/16308406/282457000-c984420c-5566-4b19-a0c8-afc73d636b80.jpg">https://github-production-user-asset-6210df.s3.amazonaws.com/16308406/282457000-c984420c-5566-4b19-a0c8-afc73d636b80.jpg</a> </span></div><div class="line" id="174259"><span class="nick" style="color:#2e2a4a"><a href="#174259" label="[17:42:59]">&lt;vagrantc&gt;</a></span><span class="message">janneke: i have not confirmed by actually building, but i think the clean target for mes should remove anything not actually in the release tarball, including the *.info and pre-inst-env</span></div><div class="line" id="174340"><span class="nick" style="color:#2e2a4a"><a href="#174340" label="[17:43:40]">&lt;vagrantc&gt;</a></span><span class="message">janneke: i am not sure of GNU's standard practices around this, but at least from my workflow, the clean target should return it to essentially the same state as a freshly unpacked tarball</span></div><div class="line" id="174921"><span class="nick" style="color:#80b1d3"><a href="#174921" label="[17:49:21]">&lt;janneke&gt;</a></span><span class="message">vagrantc: <a rel="nofollow" href="https://www.gnu.org/prep/standards/html_node/Standard-Targets.html#Standard-Targets">https://www.gnu.org/prep/standards/html_node/Standard-Targets.html#Standard-Targets</a> </span></div><div class="line" id="174938"><span class="nick" style="color:#80b1d3"><a href="#174938" label="[17:49:38]">&lt;janneke&gt;</a></span><span class="message">`clean' should not delete any files created by configure, such as pre-inst-env</span></div><div class="line" id="175003"><span class="nick" style="color:#6b8072"><a href="#175003" label="[17:50:03]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: just for curiosity and if you don't mind, can you please share some info about that screen shot? (e.g: kernel running at the time of the screen shot, type of hardware, total build time, etc.)</span></div><div class="line" id="175013"><span class="nick" style="color:#80b1d3"><a href="#175013" label="[17:50:13]">&lt;janneke&gt;</a></span><span class="message">...but distclean should probably also remove *.info and version.texi, as they are not present in mes' tarball</span></div><div class="line" id="175034"><span class="nick" style="color:#389600"><a href="#175034" label="[17:50:34]">&lt;Googulator&gt;</a></span><span class="message">That was still in builder-hex0, and indeed, it failed to boot further</span></div><div class="line" id="175043"><span class="nick" style="color:#80b1d3"><a href="#175043" label="[17:50:43]">&lt;janneke&gt;</a></span><span class="message">(i guess as per GNU/autotools, they should be part of the tarball, that's probably why the confusion -- i'll fix that)</span></div><div class="line" id="175102"><span class="nick" style="color:#389600"><a href="#175102" label="[17:51:02]">&lt;Googulator&gt;</a></span><span class="message">Ended up having to use an actual HDD, because the BIOS USB stack couldn't get through loading the Linux kernel sources</span></div><div class="line" id="175140"><span class="nick" style="color:#389600"><a href="#175140" label="[17:51:40]">&lt;Googulator&gt;</a></span><span class="message">The hardware is a Core 2 Quad system from about 2006 or 2007, with 4GB of DDR2 RAM.</span></div><div class="line" id="175233"><span class="nick" style="color:#389600"><a href="#175233" label="[17:52:33]">&lt;Googulator&gt;</a></span><span class="message">As of now, the build still appears to be running - appears, because as soon as Fiwix loaded, it printed a few lines, then went to a black screen, probably because the VGA init malfunctioned.</span></div><div class="line" id="175257"><span class="nick" style="color:#389600"><a href="#175257" label="[17:52:57]">&lt;Googulator&gt;</a></span><span class="message">But based on energy usage, it's still building... well, something... in the Fiwix environment.</span></div><div class="line" id="175300"><span class="nick" style="color:#6b8072"><a href="#175300" label="[17:53:00]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: I see, thanks</span></div><div class="line" id="175346"><span class="nick" style="color:#6b8072"><a href="#175346" label="[17:53:46]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: are you using VBE frame buffer or standard VGA?</span></div><div class="line" id="175347"><span class="nick" style="color:#389600"><a href="#175347" label="[17:53:47]">&lt;Googulator&gt;</a></span><span class="message">The VGA is a Quadro FX 1300.</span></div><div class="line" id="175402"><span class="nick" style="color:#389600"><a href="#175402" label="[17:54:02]">&lt;Googulator&gt;</a></span><span class="message">Not sure... whatever kexec-fiwix sets up.</span></div><div class="line" id="175425"><span class="nick" style="color:#6d2462"><a href="#175425" label="[17:54:25]">&lt;moik&gt;</a></span><span class="message">Does anyone know what a &quot;Nexus Intruder attack&quot; is? Hard to search for online</span></div><div class="line" id="175525"><span class="nick" style="color:#389600"><a href="#175525" label="[17:55:25]">&lt;Googulator&gt;</a></span><span class="message">Kernel command line should be &quot;fiwix root=/dev/ram0 ramdisksize=1179648 initrd=sysa.ext2 kexec_proto=linux kexec_size=262144 kexec_cmdline=\&quot;init=/init\&quot;</span></div><div class="line" id="175526"><span class="nick" style="color:#6b8072"><a href="#175526" label="[17:55:26]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: Fiwix don't change the video mode, it uses what the boot loader or BIOS sets up</span></div><div class="line" id="175532"><span class="nick" style="color:#389600"><a href="#175532" label="[17:55:32]">&lt;Googulator&gt;</a></span><span class="message">No mention of VGA here</span></div><div class="line" id="175555"><span class="nick" style="color:#389600"><a href="#175555" label="[17:55:55]">&lt;Googulator&gt;</a></span><span class="message">Booted straight to builder-hex0 from BIOS; probably it's plain old 80x25 VGA.</span></div><div class="line" id="175602"><span class="nick" style="color:#6b8072"><a href="#175602" label="[17:56:02]">&lt;Mikaku&gt;</a></span><span class="message">unless you are using QEMU and explicitly appended the kernel parameter 'bga='</span></div><div class="line" id="175620"><span class="nick" style="color:#389600"><a href="#175620" label="[17:56:20]">&lt;Googulator&gt;</a></span><span class="message">I'm not, this is as bare metal as it can get.</span></div><div class="line" id="175635"><span class="nick" style="color:#6b8072"><a href="#175635" label="[17:56:35]">&lt;Mikaku&gt;</a></span><span class="message">ok</span></div><div class="line" id="175758"><span class="nick" style="color:#80b1d3"><a href="#175758" label="[17:57:58]">&lt;janneke&gt;</a></span><span class="message">vagrantc: &quot;fix that&quot; as in, not add them to the tarball, but remove them with `distclean'</span></div><div class="line" id="175809"><span class="nick" style="color:#389600"><a href="#175809" label="[17:58:09]">&lt;Googulator&gt;</a></span><span class="message">The hardware is actually the guts of an old gaming PC I built myself back in 2006 or 2007. All of the hardware sat untouched for over 10 years, so I can be fairly sure none of it is compromised, at least not recently enough for anything to recognize and hijack the bootstrap process</span></div><div class="line" id="175810"><span class="nick" style="color:#6b8072"><a href="#175810" label="[17:58:10]">&lt;Mikaku&gt;</a></span><span class="message">I have never seen a problem with standard VGA on real hardware and I'm using really old PCs here (386, 486, Pentium, etc.)</span></div><div class="line" id="175914"><span class="nick" style="color:#389600"><a href="#175914" label="[17:59:14]">&lt;Googulator&gt;</a></span><span class="message">I'm hoping display will come back once Fiwix kexecs over into Linux</span></div><div class="line" id="180002"><span class="nick" style="color:#6b8072"><a href="#180002" label="[18:00:02]">&lt;Mikaku&gt;</a></span><span class="message">assuming the system is alive and building</span></div><div class="line" id="180319"><span class="nick" style="color:#389600"><a href="#180319" label="[18:03:19]">&lt;Googulator&gt;</a></span><span class="message">I'll give it a couple more hours, if nothing, I consider it dead</span></div><div class="line" id="180611"><span class="nick" style="color:#6b8072"><a href="#180611" label="[18:06:11]">&lt;Mikaku&gt;</a></span><span class="message">why 'kexec_size=' is so big? AFAIK it should be just the size of the Linux kernel</span></div><div class="line" id="182054"><span class="nick" style="color:#389600"><a href="#182054" label="[18:20:54]">&lt;Googulator&gt;</a></span><span class="message">Because in live-bootstrap, the Linux initramfs is used to transfer pretty much everything necessary from Fiwix to Linux</span></div><div class="line" id="182108"><span class="nick" style="color:#389600"><a href="#182108" label="[18:21:08]">&lt;Googulator&gt;</a></span><span class="message">Fiwix runs without any real disk, everything is done in the initrd</span></div><div class="line" id="182137"><span class="nick" style="color:#389600"><a href="#182137" label="[18:21:37]">&lt;Googulator&gt;</a></span><span class="message">Then everything Linux will need is packaged into a Linux initramfs, which is written to ram1, together with the Linux kernel itself</span></div><div class="line" id="182246"><span class="nick" style="color:#389600"><a href="#182246" label="[18:22:46]">&lt;Googulator&gt;</a></span><span class="message">After kexec, Linux boots into the initramfs, which sets up the real disk &amp; copies necessary data out of the initramfs onto sda1</span></div><div class="line" id="182432"><span class="nick" style="color:#2e2a4a"><a href="#182432" label="[18:24:32]">&lt;vagrantc&gt;</a></span><span class="message">janneke: yeah, seems to be at odds with the distinction between distclean and clean ... but i can work around it in the debian packaging to get what i want :)</span></div><div class="line" id="182456"><span class="nick" style="color:#2e2a4a"><a href="#182456" label="[18:24:56]">&lt;vagrantc&gt;</a></span><span class="message">janneke: it looks to me like distclean deletes things that are actually present in the tarball and/or git.</span></div><div class="line" id="182520"><span class="nick" style="color:#2e2a4a"><a href="#182520" label="[18:25:20]">&lt;vagrantc&gt;</a></span><span class="message">janneke: then again, i may have a weird view of git, as it merges the release tarballs ...</span></div><div class="line" id="182533"><span class="nick" style="color:#2e2a4a"><a href="#182533" label="[18:25:33]">&lt;vagrantc&gt;</a></span><span class="message">the way i am managing the debian packaging, that is</span></div><div class="line" id="184413"><span class="nick" style="color:#6b8072"><a href="#184413" label="[18:44:13]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: I see, thanks. I didn't count on this part &lt;<a rel="nofollow" href="https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb3/kernel/kexec.c#L743">https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb3/kernel/kexec.c#L743</a>&gt;  because the Multiboot1 kexec in Fiwix doesn't support packaging an initrd file for the next kernel</span></div><div class="line" id="185302"><span class="nick" style="color:#6b8072"><a href="#185302" label="[18:53:02]">&lt;Mikaku&gt;</a></span><span class="message">Googulator: kexec is tricky, probably rickmasters tested its Linux boot support under QEMU only</span></div><div class="line" id="223952"><span class="nick" style="color:#234e69"><a href="#223952" label="[22:39:52]">&lt;oriansj&gt;</a></span><span class="message">moik: imagine back in 1950, the idea of software designed computers is just starting to appear. You want to compromise the soviet computer infrastructure forever. So you tamper with the software used in designing hardware such that it implants a backdoor in all hardware it designs. That backdoor is then used to also compromise future software that might be used to create future hardware designs. That was the Nexus Intruder Program.</span></div><div class="line" id="231428"><span class="nick" style="color:#389600"><a href="#231428" label="[23:14:28]">&lt;Googulator&gt;</a></span><span class="message">oriansj: was anything like that actually built, or is it  purely theoretical (beyond Trusting Trust in general)?</span></div><div class="line" id="232814"><span class="nick" style="color:#6c3d55"><a href="#232814" label="[23:28:14]">&lt;fossy&gt;</a></span><span class="message">hi Googulator, i have been reading your thoughts about bare metal bootstrapping, i just haven't had a chance to get to reply in detail, but here we go</span></div><div class="line" id="232900"><span class="nick" style="color:#389600"><a href="#232900" label="[23:29:00]">&lt;Googulator&gt;</a></span><span class="message">fossy: you're fosslinux from GH, right?</span></div><div class="line" id="232959"><span class="nick" style="color:#6c3d55"><a href="#232959" label="[23:29:59]">&lt;fossy&gt;</a></span><span class="message">RE: &quot;trust my current, modern system used for preparing the bare metal images&quot; -- you are totally correct that this is a highly significant attack vector for the current bootstrapping process, although, not one that makes use of the bootstrapping process asis not worthwhile, in my opion</span></div><div class="line" id="233107"><span class="nick" style="color:#389600"><a href="#233107" label="[23:31:07]">&lt;Googulator&gt;</a></span><span class="message">Right, bootstrapping in general has other uses besides just Trusting-Trust avoidance</span></div><div class="line" id="233125"><span class="nick" style="color:#6c3d55"><a href="#233125" label="[23:31:25]">&lt;fossy&gt;</a></span><span class="message">the issue of &quot;more binary code written than acknowledged&quot; you talk about, while a good start, does not protect against malicious code that happens to be the same size or smaller than the seed; i guess that this does provide a bit of defense in depth, but ultimately only makes it more *difficult* to do, not provable</span></div><div class="line" id="233223"><span class="nick" style="color:#6c3d55"><a href="#233223" label="[23:32:23]">&lt;fossy&gt;</a></span><span class="message">&quot;old enough that even if it's compromised, it won't recognize the bootstrap code and be able to interfere&quot; -- this is a good point that i have put a bit of thought into, and do think that it makes sense for the vast majority of practical applications</span></div><div class="line" id="233300"><span class="nick" style="color:#389600"><a href="#233300" label="[23:33:00]">&lt;Googulator&gt;</a></span><span class="message">In theory, yes - if you can compress the seed such that the compressed seed, the backdoor and the decompression algorithm fits in the same space as the original seed, you can potentially achieve persistence though a bootstrap</span></div><div class="line" id="233349"><span class="nick" style="color:#389600"><a href="#233349" label="[23:33:49]">&lt;Googulator&gt;</a></span><span class="message">I thought a bit more about the &quot;old enough&quot; idea, and there's actually a balance / &quot;sweet spot&quot; at play</span></div><div class="line" id="233355"><span class="nick" style="color:#6c3d55"><a href="#233355" label="[23:33:55]">&lt;fossy&gt;</a></span><span class="message">&quot;An actual printer printing to paper would be ideal for security and trust, but it would probably be too slow.&quot; very true</span></div><div class="line" id="233558"><span class="nick" style="color:#389600"><a href="#233558" label="[23:35:58]">&lt;Googulator&gt;</a></span><span class="message">If you go too new, the risk is that the hardware is new enough to contain backdoors that target the bootstrap process (remember, a bootstrap plan might have been designed well before it's published, potentially with nefarious intent - I could be an agent working for an APT trying to sell you a flawed bootstrapping plan, for all you know)</span></div><div class="line" id="233631"><span class="nick" style="color:#389600"><a href="#233631" label="[23:36:31]">&lt;Googulator&gt;</a></span><span class="message">If you go too old, it becomes too easy to emulate the hardware using ubiquitous and easily miniaturized modern microcontrollers</span></div><div class="line" id="233648"><span class="nick" style="color:#6c3d55"><a href="#233648" label="[23:36:48]">&lt;fossy&gt;</a></span><span class="message">yeah this is true</span></div><div class="line" id="233703"><span class="nick" style="color:#389600"><a href="#233703" label="[23:37:03]">&lt;Googulator&gt;</a></span><span class="message">IMO the sweet spot is around 15 to 25 years old</span></div><div class="line" id="233730"><span class="nick" style="color:#389600"><a href="#233730" label="[23:37:30]">&lt;Googulator&gt;</a></span><span class="message">Old enough that it's unlikely an APT would've played the long game for that long</span></div><div class="line" id="233743"><span class="nick" style="color:#389600"><a href="#233743" label="[23:37:43]">&lt;Googulator&gt;</a></span><span class="message">Yet new enough that modern hardware still struggles to accurately emulate it</span></div><div class="line" id="233811"><span class="nick" style="color:#d9d9d9"><a href="#233811" label="[23:38:11]">&lt;stikonas&gt;</a></span><span class="message">by the way, matrix bridge is currently broken, I have internet outage at home, possibly for a few days</span></div><div class="line" id="233820"><span class="nick" style="color:#6c3d55"><a href="#233820" label="[23:38:20]">&lt;fossy&gt;</a></span><span class="message">wouldn't an emulated cpu be quite distinguishable from the original hardware, thus &quot;too old&quot; is not so much a problem</span></div><div class="line" id="233832"><span class="nick" style="color:#6c3d55"><a href="#233832" label="[23:38:32]">&lt;fossy&gt;</a></span><span class="message">stikonas: that is rather annoying, hopefully your internet returns soon</span></div><div class="line" id="233835"><span class="nick" style="color:#d9d9d9"><a href="#233835" label="[23:38:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'm working updating to mes-0.25</span></div><div class="line" id="233839"><span class="nick" style="color:#d9d9d9"><a href="#233839" label="[23:38:39]">&lt;stikonas&gt;</a></span><span class="message">so don't work on the same thing</span></div><div class="line" id="233842"><span class="nick" style="color:#6c3d55"><a href="#233842" label="[23:38:42]">&lt;fossy&gt;</a></span><span class="message">:)</span></div><div class="line" id="233845"><span class="nick" style="color:#389600"><a href="#233845" label="[23:38:45]">&lt;Googulator&gt;</a></span><span class="message">Not if the system emulating it is sufficiently new/powerful</span></div><div class="line" id="233902"><span class="nick" style="color:#6c3d55"><a href="#233902" label="[23:39:02]">&lt;fossy&gt;</a></span><span class="message">i mean, physically inspecting the hardware?</span></div><div class="line" id="233916"><span class="nick" style="color:#389600"><a href="#233916" label="[23:39:16]">&lt;Googulator&gt;</a></span><span class="message">Depends on how deep you're willing to g</span></div><div class="line" id="233919"><span class="nick" style="color:#389600"><a href="#233919" label="[23:39:19]">&lt;Googulator&gt;</a></span><span class="message">*go</span></div><div class="line" id="233925"><span class="nick" style="color:#6c3d55"><a href="#233925" label="[23:39:25]">&lt;fossy&gt;</a></span><span class="message">i guess theoreticlaly it could be hidden but that would be incredibly difficult to do with even the most modern hardware...</span></div><div class="line" id="233958"><span class="nick" style="color:#6c3d55"><a href="#233958" label="[23:39:58]">&lt;fossy&gt;</a></span><span class="message">this is kinda the level where you do have to seriously consider the threat model, some of these things would be only achievable by an adversary with incredibly extensive money and time</span></div><div class="line" id="234102"><span class="nick" style="color:#6c3d55"><a href="#234102" label="[23:41:02]">&lt;fossy&gt;</a></span><span class="message">stikonas: i have a fairly large restructuring in the pipeline, doesn't really touch the actual packages of live-bootstrap though, more how the repo is set out to make it more logical and auditable</span></div><div class="line" id="234108"><span class="nick" style="color:#234e69"><a href="#234108" label="[23:41:08]">&lt;oriansj&gt;</a></span><span class="message">Googulator: unfortunately we don't know for sure. And the only way to know for sure is to bootstrap our hardware too and see if anything shows up</span></div><div class="line" id="234155"><span class="nick" style="color:#389600"><a href="#234155" label="[23:41:55]">&lt;Googulator&gt;</a></span><span class="message">If you're going back really far, like PDP-10, you can probably fully emulate its behavior using modern hardware the size of a single DIP integrated circuit used on a genuine PDP-10</span></div><div class="line" id="234325"><span class="nick" style="color:#389600"><a href="#234325" label="[23:43:25]">&lt;Googulator&gt;</a></span><span class="message">See this for a not-so-malicious example: <a rel="nofollow" href="https://www.youtube.com/watch?v=5ax89hl4bz4&amp;t=0s">https://www.youtube.com/watch?v=5ax89hl4bz4&amp;t=0s</a> </span></div><div class="line" id="234413"><span class="nick" style="color:#389600"><a href="#234413" label="[23:44:13]">&lt;Googulator&gt;</a></span><span class="message">What appears to be a transistor for ESD protection is actually the microcontroller responsible for the board's whole operation, everything else is just for show, disconnected from the circuit</span></div><div class="line" id="234459"><span class="nick" style="color:#389600"><a href="#234459" label="[23:44:59]">&lt;Googulator&gt;</a></span><span class="message">&amp; this was done by a run of the mill tech influencer for views/clout using just YouTube ad revenue</span></div><div class="line" id="234508"><span class="nick" style="color:#6c3d55"><a href="#234508" label="[23:45:08]">&lt;fossy&gt;</a></span><span class="message">Googulator: oh, i missed your first message, yes i am fosslinux from github</span></div><div class="line" id="234524"><span class="nick" style="color:#6c3d55"><a href="#234524" label="[23:45:24]">&lt;fossy&gt;</a></span><span class="message">hmm, that is interesting</span></div><div class="line" id="234626"><span class="nick" style="color:#389600"><a href="#234626" label="[23:46:26]">&lt;Googulator&gt;</a></span><span class="message">this is why you don't just need old hardware, but rather hardware from the &quot;sweet spot&quot; time period</span></div><div class="line" id="234725"><span class="nick" style="color:#389600"><a href="#234725" label="[23:47:25]">&lt;Googulator&gt;</a></span><span class="message">the little microcontroller is nowhere near powerful enough to pretend to be a functional Raspberry Pi 4, but it can emulate what people before the real Pi 4's release would've expected a prototype without proper firmware to do</span></div><div class="line" id="234817"><span class="nick" style="color:#389600"><a href="#234817" label="[23:48:17]">&lt;Googulator&gt;</a></span><span class="message">imagine what an APT can do if they have to emulate not some rumored future hardware, but something like an original IBM PC</span></div><div class="line" id="235102"><span class="nick" style="color:#389600"><a href="#235102" label="[23:51:02]">&lt;Googulator&gt;</a></span><span class="message">Also, what matters for the &quot;too new&quot; part is not simply when the hardware was made, but also when it was last potentially tampered with (e.g. when the BIOS could've been last updated on an old motherboard)</span></div><div class="line" id="235121"><span class="nick" style="color:#389600"><a href="#235121" label="[23:51:21]">&lt;Googulator&gt;</a></span><span class="message">But it's important to remember that a BIOS update might not look like a BIOS update</span></div><div class="line" id="235214"><span class="nick" style="color:#389600"><a href="#235214" label="[23:52:14]">&lt;Googulator&gt;</a></span><span class="message">So, to be absolutely safe, beyond the secure pendrive and the special boot sector &amp; bootstrap chain that logs everything before executing it, you also need hardware you know hasn't been tampered with recently</span></div><div class="line" id="235225"><span class="nick" style="color:#389600"><a href="#235225" label="[23:52:25]">&lt;Googulator&gt;</a></span><span class="message">&quot;tampering&quot; really includes executing any unaudited code here</span></div><div class="line" id="235338"><span class="nick" style="color:#389600"><a href="#235338" label="[23:53:38]">&lt;Googulator&gt;</a></span><span class="message">so ideally, one would use still sealed new-old-stock hardware for the final bootstrapping - of couse, you first test on more &quot;expendable&quot; hardware that's close enough in its design</span></div><div class="line" id="235510"><span class="nick" style="color:#389600"><a href="#235510" label="[23:55:10]">&lt;Googulator&gt;</a></span><span class="message">This way, the only code compiled in the last 15 years that gets to execute before its code is printed for auditing is the boot sector (typically 512 bytes)</span></div><div class="line" id="235612"><span class="nick" style="color:#389600"><a href="#235612" label="[23:56:12]">&lt;Googulator&gt;</a></span><span class="message">&amp; we fill any unused space in it with randomness, to make int as hard to compress as possible, reducing the risk that an adversary might compress the clean boot sector + decompression code + backdoor into the same size</span></div><div class="line" id="235618"><span class="nick" style="color:#389600"><a href="#235618" label="[23:56:18]">&lt;Googulator&gt;</a></span><span class="message">*make it</span></div><br /></div></body></html>