<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-03-29.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="013744"><span class="nick" style="color:#8dd3c7"><a href="#013744" label="[01:37:44]">&lt;stikonas&gt;</a></span><span class="message">fossy: I've pused a few more changes to XZ branch, basically autoconf-2.69 and automake 1.11.2. I think Autoconf is now new enough for absolutely everything. But automake is a bit older...</span></div><div class="line" id="060835"><span class="nick">***</span><span class="message notice">mephista is now known as spicy_icecream</span></div><div class="line" id="102849"><span class="nick" style="color:#2e2a4a"><a href="#102849" label="[10:28:49]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: is said globbing seems to have a problem, and here is the result: <a rel="nofollow" href="https://paste.debian.net/1191468/">https://paste.debian.net/1191468/</a> </span></div><div class="line" id="103107"><span class="nick" style="color:#2e2a4a"><a href="#103107" label="[10:31:07]">&lt;gforce_d11977&gt;</a></span><span class="message">so we/you/I can fix this by using the full path or fix globbing. maybe it breaks also other things and we should really make sure, that the whole script also works with other shell interpreters and also without rich features aka globbing 8-)</span></div><div class="line" id="103449"><span class="nick" style="color:#2e2a4a"><a href="#103449" label="[10:34:49]">&lt;gforce_d11977&gt;</a></span><span class="message">also all these script should be shellchecked, e.g. this one throws warnings when checked manually</span></div><div class="line" id="103509"><span class="nick" style="color:#2e2a4a"><a href="#103509" label="[10:35:09]">&lt;gforce_d11977&gt;</a></span><span class="message">have to leave now, will be back later</span></div><div class="line" id="111003"><span class="nick" style="color:#6b8072"><a href="#111003" label="[11:10:03]">&lt;fossy&gt;</a></span><span class="message">stikonas: cool</span></div><div class="line" id="120035"><span class="nick" style="color:#2e2a4a"><a href="#120035" label="[12:00:35]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: here is why globbing does not work: <a rel="nofollow" href="https://paste.debian.net/1191484/">https://paste.debian.net/1191484/</a> </span></div><div class="line" id="120053"><span class="nick" style="color:#2e2a4a"><a href="#120053" label="[12:00:53]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: but: why this only affects *me* ?</span></div><div class="line" id="120329"><span class="nick" style="color:#8dd3c7"><a href="#120329" label="[12:03:29]">&lt;stikonas&gt;</a></span><span class="message">maybe something in your kernel?</span></div><div class="line" id="120339"><span class="nick" style="color:#8dd3c7"><a href="#120339" label="[12:03:39]">&lt;stikonas&gt;</a></span><span class="message">try some distro kerne</span></div><div class="line" id="125322"><span class="nick" style="color:#2e2a4a"><a href="#125322" label="[12:53:22]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: i bet it is a missing syscall support in my kernel, but relying on such things should be avoided, i will now try a full run with these special globs removed and report</span></div><div class="line" id="125525"><span class="nick" style="color:#2e2a4a"><a href="#125525" label="[12:55:25]">&lt;gforce_d11977&gt;</a></span><span class="message">for full reference: simple globbing works, e.g. ls -l *.sh, but this does not work ls -l */*/foo</span></div><div class="line" id="125613"><span class="nick" style="color:#8dd3c7"><a href="#125613" label="[12:56:13]">&lt;stikonas&gt;</a></span><span class="message">well, bash 2.05b implements globbing itself, it does not rely on C library (meslibc does not have globs anyway). You can check which syscalls it uses</span></div><div class="line" id="125722"><span class="nick" style="color:#2e2a4a"><a href="#125722" label="[12:57:22]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: it is not worth the hazzle, we just avoid these special globs and document this</span></div><div class="line" id="125809"><span class="nick" style="color:#2e2a4a"><a href="#125809" label="[12:58:09]">&lt;gforce_d11977&gt;</a></span><span class="message">(waiting for a testrun on i386-pc with ISA-Bus 8-)</span></div><div class="line" id="130527"><span class="nick" style="color:#8dd3c7"><a href="#130527" label="[13:05:27]">&lt;stikonas&gt;</a></span><span class="message">hmm, not sure why one vs two stars would matter</span></div><div class="line" id="130548"><span class="nick" style="color:#8dd3c7"><a href="#130548" label="[13:05:48]">&lt;stikonas&gt;</a></span><span class="message">bash just seems to recurse to the same function if there is more than one</span></div><div class="line" id="131627"><span class="nick" style="color:#8dd3c7"><a href="#131627" label="[13:16:27]">&lt;stikonas&gt;</a></span><span class="message">gforce_d11977: try glob with one start but on dir names</span></div><div class="line" id="131640"><span class="nick" style="color:#8dd3c7"><a href="#131640" label="[13:16:40]">&lt;stikonas&gt;</a></span><span class="message">it might be that globbing files works but not directories</span></div><div class="line" id="133804"><span class="nick" style="color:#2e2a4a"><a href="#133804" label="[13:38:04]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: good point, will try in ~30min</span></div><div class="line" id="150018"><span class="nick" style="color:#2e2a4a"><a href="#150018" label="[15:00:18]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: you are right, it's about directories:</span></div><div class="line" id="150036"><span class="nick" style="color:#2e2a4a"><a href="#150036" label="[15:00:36]">&lt;gforce_d11977&gt;</a></span><span class="message">bash -c 'mkdir /after/foo; touch /after/foo/bar; for F in /after/*/bar /after/foo/b*; do echo $F; done'</span></div><div class="line" id="150056"><span class="nick" style="color:#2e2a4a"><a href="#150056" label="[15:00:56]">&lt;gforce_d11977&gt;</a></span><span class="message">output is: /after/*/bar and /after/foo/bar</span></div><div class="line" id="150117"><span class="nick" style="color:#8dd3c7"><a href="#150117" label="[15:01:17]">&lt;stikonas&gt;</a></span><span class="message">so I think directory globbing function only uses stat call</span></div><div class="line" id="150218"><span class="nick" style="color:#2e2a4a"><a href="#150218" label="[15:02:18]">&lt;gforce_d11977&gt;</a></span><span class="message">IMHO we should opt for lowering complexity and avoid it</span></div><div class="line" id="150258"><span class="nick" style="color:#2e2a4a"><a href="#150258" label="[15:02:58]">&lt;gforce_d11977&gt;</a></span><span class="message">there are two possible options:</span></div><div class="line" id="150311"><span class="nick" style="color:#2e2a4a"><a href="#150311" label="[15:03:11]">&lt;gforce_d11977&gt;</a></span><span class="message">use direct pathnames or</span></div><div class="line" id="150344"><span class="nick" style="color:#2e2a4a"><a href="#150344" label="[15:03:44]">&lt;gforce_d11977&gt;</a></span><span class="message">use find (and maybe a wrapper function)</span></div><div class="line" id="150357"><span class="nick" style="color:#2e2a4a"><a href="#150357" label="[15:03:57]">&lt;gforce_d11977&gt;</a></span><span class="message">IMHO option A is better</span></div><div class="line" id="150429"><span class="nick" style="color:#8dd3c7"><a href="#150429" label="[15:04:29]">&lt;stikonas&gt;</a></span><span class="message">we don't have find</span></div><div class="line" id="150455"><span class="nick" style="color:#2e2a4a"><a href="#150455" label="[15:04:55]">&lt;gforce_d11977&gt;</a></span><span class="message">in the long run this makes our upcoming replacement OS easier to implement 8-)</span></div><div class="line" id="150458"><span class="nick" style="color:#8dd3c7"><a href="#150458" label="[15:04:58]">&lt;stikonas&gt;</a></span><span class="message">well, I'll let fossy to devide, since he was working on bootstrpa kernels more</span></div><div class="line" id="150509"><span class="nick" style="color:#8dd3c7"><a href="#150509" label="[15:05:09]">&lt;stikonas&gt;</a></span><span class="message">I think the plan was to build kernel before bash</span></div><div class="line" id="150543"><span class="nick" style="color:#8dd3c7"><a href="#150543" label="[15:05:43]">&lt;stikonas&gt;</a></span><span class="message">but it's possible to just hardcode all those files we want to delete</span></div><div class="line" id="150553"><span class="nick" style="color:#2e2a4a"><a href="#150553" label="[15:05:53]">&lt;gforce_d11977&gt;</a></span><span class="message">i dont think about a linux kernel, but the approach of gio alike</span></div><div class="line" id="150617"><span class="nick" style="color:#2e2a4a"><a href="#150617" label="[15:06:17]">&lt;gforce_d11977&gt;</a></span><span class="message">(for initial bootstrap)</span></div><div class="line" id="150631"><span class="nick" style="color:#8dd3c7"><a href="#150631" label="[15:06:31]">&lt;stikonas&gt;</a></span><span class="message">yes, but that's much earlier then</span></div><div class="line" id="150657"><span class="nick" style="color:#8dd3c7"><a href="#150657" label="[15:06:57]">&lt;stikonas&gt;</a></span><span class="message">by the time you build bash, I think it's almost sure that you need fairly advanced kernel</span></div><div class="line" id="150659"><span class="nick" style="color:#8dd3c7"><a href="#150659" label="[15:06:59]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="150703"><span class="nick" style="color:#2e2a4a"><a href="#150703" label="[15:07:03]">&lt;gforce_d11977&gt;</a></span><span class="message">ofcouse, but if the OS does not have to implement the syscall, it makes everything easier</span></div><div class="line" id="150716"><span class="nick" style="color:#8dd3c7"><a href="#150716" label="[15:07:16]">&lt;stikonas&gt;</a></span><span class="message">but it's not the only place where we glob dirs</span></div><div class="line" id="150742"><span class="nick" style="color:#2e2a4a"><a href="#150742" label="[15:07:42]">&lt;gforce_d11977&gt;</a></span><span class="message">than this needs fixing and i'am searching now for all the places</span></div><div class="line" id="150756"><span class="nick" style="color:#80b1d3"><a href="#150756" label="[15:07:56]">&lt;bauen1_&gt;</a></span><span class="message">stikonas: you don't need a very complex kernel</span></div><div class="line" id="150802"><span class="nick">***</span><span class="message notice">bauen1_ is now known as bauen1</span></div><div class="line" id="150828"><span class="nick" style="color:#6d2462"><a href="#150828" label="[15:08:28]">&lt;bauen1&gt;</a></span><span class="message">as long as you don't need anything interactively it's very simple</span></div><div class="line" id="150830"><span class="nick" style="color:#8dd3c7"><a href="#150830" label="[15:08:30]">&lt;stikonas&gt;</a></span><span class="message">yes, but replacing all directory globs is a bit messy</span></div><div class="line" id="150846"><span class="nick" style="color:#8dd3c7"><a href="#150846" label="[15:08:46]">&lt;stikonas&gt;</a></span><span class="message">in case of automake, it might not be too bad</span></div><div class="line" id="150852"><span class="nick" style="color:#8dd3c7"><a href="#150852" label="[15:08:52]">&lt;stikonas&gt;</a></span><span class="message">but we also use it for e.g. perl</span></div><div class="line" id="150904"><span class="nick" style="color:#8dd3c7"><a href="#150904" label="[15:09:04]">&lt;stikonas&gt;</a></span><span class="message">./miniperl -Ilib $&lt; lib/*.pm lib/*/*.pm</span></div><div class="line" id="150939"><span class="nick" style="color:#8dd3c7"><a href="#150939" label="[15:09:39]">&lt;stikonas&gt;</a></span><span class="message">that's over a hundred of files</span></div><div class="line" id="151229"><span class="nick" style="color:#2e2a4a"><a href="#151229" label="[15:12:29]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: but files are working, its only the directory name which is not working</span></div><div class="line" id="151246"><span class="nick" style="color:#8dd3c7"><a href="#151246" label="[15:12:46]">&lt;stikonas&gt;</a></span><span class="message"> lib/*/*.pm is globbing over directories</span></div><div class="line" id="151303"><span class="nick" style="color:#2e2a4a"><a href="#151303" label="[15:13:03]">&lt;gforce_d11977&gt;</a></span><span class="message">so lib/foo/*.pm lib/bar/*.pm works</span></div><div class="line" id="151312"><span class="nick" style="color:#8dd3c7"><a href="#151312" label="[15:13:12]">&lt;stikonas&gt;</a></span><span class="message">well, ok</span></div><div class="line" id="151347"><span class="nick" style="color:#8dd3c7"><a href="#151347" label="[15:13:47]">&lt;stikonas&gt;</a></span><span class="message">that's twenty something folders then...</span></div><div class="line" id="151358"><span class="nick" style="color:#8dd3c7"><a href="#151358" label="[15:13:58]">&lt;stikonas&gt;</a></span><span class="message">still a bit unsatisfactory if we have to hardcode them all</span></div><div class="line" id="151413"><span class="nick" style="color:#2e2a4a"><a href="#151413" label="[15:14:13]">&lt;gforce_d11977&gt;</a></span><span class="message">i understand and will think about it</span></div><div class="line" id="151452"><span class="nick" style="color:#8dd3c7"><a href="#151452" label="[15:14:52]">&lt;stikonas&gt;</a></span><span class="message">well, according to bauen1 I guess it's not too hard to support</span></div><div class="line" id="152331"><span class="nick" style="color:#2e2a4a"><a href="#152331" label="[15:23:31]">&lt;gforce_d11977&gt;</a></span><span class="message">bauen1: do you now, which kernel CONFIG_SYMBOL is needing for supporting dirglobs?</span></div><div class="line" id="152521"><span class="nick" style="color:#6d2462"><a href="#152521" label="[15:25:21]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: no, but if you have a certain syscall in mind that narrows it down a lot</span></div><div class="line" id="152525"><span class="nick" style="color:#6d2462"><a href="#152525" label="[15:25:25]">&lt;bauen1&gt;</a></span><span class="message">let me dig at the code</span></div><div class="line" id="153551"><span class="nick" style="color:#6d2462"><a href="#153551" label="[15:35:51]">&lt;bauen1&gt;</a></span><span class="message">gforce_d11977: do you have your kernel .config available ? or is your kernel compiled with CONFIG_COMPAT ?</span></div><div class="line" id="153746"><span class="nick" style="color:#6d2462"><a href="#153746" label="[15:37:46]">&lt;bauen1&gt;</a></span><span class="message">actually, it would help me much more if i could get an strace log of your bash invokation (as i can't reproduce it either)</span></div><div class="line" id="153806"><span class="nick" style="color:#6d2462"><a href="#153806" label="[15:38:06]">&lt;bauen1&gt;</a></span><span class="message">and i don't see anything suspicious tbh, bash only uses opendir / readdir for the glob matching</span></div><div class="line" id="153909"><span class="nick" style="color:#8dd3c7"><a href="#153909" label="[15:39:09]">&lt;stikonas&gt;</a></span><span class="message">stat is also used in glob_dir_to_array</span></div><div class="line" id="153909"><span class="nick" style="color:#2e2a4a"><a href="#153909" label="[15:39:09]">&lt;gforce_d11977&gt;</a></span><span class="message">ok, will try to inject strace, good idea</span></div><div class="line" id="153934"><span class="nick" style="color:#6d2462"><a href="#153934" label="[15:39:34]">&lt;bauen1&gt;</a></span><span class="message">stikonas: right, and that is probably where it fails to detect that foo is a directory</span></div><div class="line" id="154455"><span class="nick" style="color:#6d2462"><a href="#154455" label="[15:44:55]">&lt;bauen1&gt;</a></span><span class="message">and my comment was more saying that to support non-interactive bash you probably don't need a very complex kernel as it's hardly more than: basic filesystem io, some process management (the hard part), and a few other bits and pieces</span></div><div class="line" id="154732"><span class="nick" style="color:#6d2462"><a href="#154732" label="[15:47:32]">&lt;bauen1&gt;</a></span><span class="message">i really should invest a bit more time into my kernel</span></div><div class="line" id="154831"><span class="nick" style="color:#6d2462"><a href="#154831" label="[15:48:31]">&lt;bauen1&gt;</a></span><span class="message">i've already gotten one of the three big problems mostly done, a decent vfs implementation with full mount support (so chroot should be very easy to pull off), it's just missing syscalls and a concept of a &quot;process&quot;</span></div><div class="line" id="154957"><span class="nick" style="color:#8dd3c7"><a href="#154957" label="[15:49:57]">&lt;stikonas&gt;</a></span><span class="message">yeah, but I guess detection of whether something is dir should work in your kernel, once syscalls are there</span></div><div class="line" id="155258"><span class="nick" style="color:#6d2462"><a href="#155258" label="[15:52:58]">&lt;bauen1&gt;</a></span><span class="message">yes, testing what type a filesystem object has and &quot;reading&quot; a directory as such basic operations that it's confusing why bash would fail there</span></div><div class="line" id="191614"><span class="nick" style="color:#6d2462"><a href="#191614" label="[19:16:14]">&lt;bauen1&gt;</a></span><span class="message">is /dev/console actually used for something in the baremetal target ?</span></div><div class="line" id="191659"><span class="nick" style="color:#6d2462"><a href="#191659" label="[19:16:59]">&lt;bauen1&gt;</a></span><span class="message">and i have the same question for /dev/{,u}random</span></div><div class="line" id="191921"><span class="nick" style="color:#6d2462"><a href="#191921" label="[19:19:21]">&lt;bauen1&gt;</a></span><span class="message">hm, shiny we have ci for baremetl</span></div><div class="line" id="191923"><span class="nick" style="color:#6d2462"><a href="#191923" label="[19:19:23]">&lt;bauen1&gt;</a></span><span class="message">*baremetal</span></div><div class="line" id="191932"><span class="nick" style="color:#6d2462"><a href="#191932" label="[19:19:32]">&lt;bauen1&gt;</a></span><span class="message">i suppose it's just a matter of waiting for an hour to find out then</span></div><div class="line" id="192337"><span class="nick" style="color:#8dd3c7"><a href="#192337" label="[19:23:37]">&lt;stikonas&gt;</a></span><span class="message"> /dev/console might be used once we have interactive bash session</span></div><div class="line" id="192346"><span class="nick" style="color:#8dd3c7"><a href="#192346" label="[19:23:46]">&lt;stikonas&gt;</a></span><span class="message">random is not used for building</span></div><div class="line" id="192847"><span class="nick" style="color:#6d2462"><a href="#192847" label="[19:28:47]">&lt;bauen1&gt;</a></span><span class="message">hm, /dev/console is the only thing i wouldn't want to bind mount into my &quot;container&quot;</span></div><div class="line" id="202924"><span class="nick" style="color:#8dd3c7"><a href="#202924" label="[20:29:24]">&lt;stikonas&gt;</a></span><span class="message">bauen1: oh, what about those /dev/null?</span></div><div class="line" id="202936"><span class="nick" style="color:#8dd3c7"><a href="#202936" label="[20:29:36]">&lt;stikonas&gt;</a></span><span class="message"> /dev/null was  definitely used</span></div><div class="line" id="202952"><span class="nick" style="color:#8dd3c7"><a href="#202952" label="[20:29:52]">&lt;stikonas&gt;</a></span><span class="message">unlike /dev/console which might only be useful after bootstrapping</span></div><div class="line" id="205233"><span class="nick" style="color:#2e2a4a"><a href="#205233" label="[20:52:33]">&lt;gforce_d11977&gt;</a></span><span class="message">here is the strace output of the failing dirglob: <a rel="nofollow" href="https://paste.debian.net/1191589/">https://paste.debian.net/1191589/</a> </span></div><div class="line" id="205241"><span class="nick" style="color:#2e2a4a"><a href="#205241" label="[20:52:41]">&lt;gforce_d11977&gt;</a></span><span class="message">strange</span></div><div class="line" id="210008"><span class="nick" style="color:#8dd3c7"><a href="#210008" label="[21:00:08]">&lt;stikonas&gt;</a></span><span class="message">it seems to see that directory</span></div><div class="line" id="210111"><span class="nick" style="color:#2e2a4a"><a href="#210111" label="[21:01:11]">&lt;gforce_d11977&gt;</a></span><span class="message">yes...i will try to add networking, so that i can copy out the full strace</span></div><div class="line" id="210143"><span class="nick" style="color:#8dd3c7"><a href="#210143" label="[21:01:43]">&lt;stikonas&gt;</a></span><span class="message">is this running in qemu?</span></div><div class="line" id="210147"><span class="nick" style="color:#8dd3c7"><a href="#210147" label="[21:01:47]">&lt;stikonas&gt;</a></span><span class="message">you don't need networking</span></div><div class="line" id="210150"><span class="nick" style="color:#8dd3c7"><a href="#210150" label="[21:01:50]">&lt;stikonas&gt;</a></span><span class="message">to copy things out</span></div><div class="line" id="210203"><span class="nick" style="color:#8dd3c7"><a href="#210203" label="[21:02:03]">&lt;stikonas&gt;</a></span><span class="message">just run the whole thing in tmux</span></div><div class="line" id="210207"><span class="nick" style="color:#8dd3c7"><a href="#210207" label="[21:02:07]">&lt;stikonas&gt;</a></span><span class="message">and use it to extract data</span></div><div class="line" id="210332"><span class="nick" style="color:#8dd3c7"><a href="#210332" label="[21:03:32]">&lt;stikonas&gt;</a></span><span class="message">you can use tmux commands capture-pane -S 60000 and ^b save-buffer</span></div><div class="line" id="210421"><span class="nick" style="color:#8dd3c7"><a href="#210421" label="[21:04:21]">&lt;stikonas&gt;</a></span><span class="message">(networking might not work on your minimal kernel)</span></div><div class="line" id="210806"><span class="nick" style="color:#2e2a4a"><a href="#210806" label="[21:08:06]">&lt;gforce_d11977&gt;</a></span><span class="message">good idea!</span></div><div class="line" id="211917"><span class="nick" style="color:#8dd3c7"><a href="#211917" label="[21:19:17]">&lt;stikonas&gt;</a></span><span class="message">that's pde's ide</span></div><div class="line" id="211918"><span class="nick" style="color:#8dd3c7"><a href="#211918" label="[21:19:18]">&lt;stikonas&gt;</a></span><span class="message">idea</span></div><div class="line" id="212305"><span class="nick" style="color:#2e2a4a"><a href="#212305" label="[21:23:05]">&lt;gforce_d11977&gt;</a></span><span class="message"> <a rel="nofollow" href="http://intercity-vpn.de/scrollback.txt">http://intercity-vpn.de/scrollback.txt</a> </span></div><div class="line" id="212737"><span class="nick" style="color:#234e69"><a href="#212737" label="[21:27:37]">&lt;pder&gt;</a></span><span class="message">that number after capture-pane should have a minus in front of it.  capture-pane -S -60000 will capture 60000 lines of your scroll back buffer.</span></div><div class="line" id="212954"><span class="nick" style="color:#6d2462"><a href="#212954" label="[21:29:54]">&lt;bauen1&gt;</a></span><span class="message">stikonas: everything else can be bind mounted</span></div><div class="line" id="213011"><span class="nick" style="color:#6d2462"><a href="#213011" label="[21:30:11]">&lt;bauen1&gt;</a></span><span class="message">but as user namespaces aren't running as root you won't have access to /dev/console</span></div><div class="line" id="213023"><span class="nick" style="color:#6d2462"><a href="#213023" label="[21:30:23]">&lt;bauen1&gt;</a></span><span class="message">i mean i could still bind mount it, would just be pointless</span></div><div class="line" id="213032"><span class="nick" style="color:#6d2462"><a href="#213032" label="[21:30:32]">&lt;bauen1&gt;</a></span><span class="message">and even for a normal chroot it would be &quot;useless&quot;</span></div><div class="line" id="213406"><span class="nick" style="color:#8dd3c7"><a href="#213406" label="[21:34:06]">&lt;stikonas&gt;</a></span><span class="message">well, it's mostly created for real systems</span></div><div class="line" id="213435"><span class="nick" style="color:#6d2462"><a href="#213435" label="[21:34:35]">&lt;bauen1&gt;</a></span><span class="message">even then you'll have stdin/stderr/stdout already attached ?</span></div><div class="line" id="213511"><span class="nick" style="color:#6d2462"><a href="#213511" label="[21:35:11]">&lt;bauen1&gt;</a></span><span class="message">also looks like ci is / will be broken <a rel="nofollow" href="https://github.com/bauen1/live-bootstrap/runs/2220798950">https://github.com/bauen1/live-bootstrap/runs/2220798950</a> </span></div><div class="line" id="213534"><span class="nick" style="color:#6d2462"><a href="#213534" label="[21:35:34]">&lt;bauen1&gt;</a></span><span class="message">any reason to use a version linux-image instead of linux-image-amd64 ?</span></div><div class="line" id="213618"><span class="nick" style="color:#8dd3c7"><a href="#213618" label="[21:36:18]">&lt;stikonas&gt;</a></span><span class="message">I've updated it in my PR</span></div><div class="line" id="213632"><span class="nick" style="color:#8dd3c7"><a href="#213632" label="[21:36:32]">&lt;stikonas&gt;</a></span><span class="message">I think fossy originally wrote version of linux-image</span></div><div class="line" id="215023"><span class="nick" style="color:#2e2a4a"><a href="#215023" label="[21:50:23]">&lt;gforce_d11977&gt;</a></span><span class="message">stikonas: just search for &quot;/after/fizz/buzz&quot; in <a rel="nofollow" href="http://intercity-vpn.de/scrollback.txt">http://intercity-vpn.de/scrollback.txt</a>  - maybe it is &quot;just&quot; a miscompiled bash-binary? 8-)</span></div><div class="line" id="215133"><span class="nick" style="color:#2e2a4a"><a href="#215133" label="[21:51:33]">&lt;gforce_d11977&gt;</a></span><span class="message">the readable output is ofcourse &quot;/after/*/buzz&quot; (the last lines of strace)</span></div><div class="line" id="220329"><span class="nick" style="color:#6d2462"><a href="#220329" label="[22:03:29]">&lt;bauen1&gt;</a></span><span class="message">so it appears that musl builds are run in bash with -e so if `test -f /dev/null` fails, the whole build will fail</span></div><div class="line" id="220436"><span class="nick" style="color:#8dd3c7"><a href="#220436" label="[22:04:36]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="220446"><span class="nick" style="color:#8dd3c7"><a href="#220446" label="[22:04:46]">&lt;stikonas&gt;</a></span><span class="message">bash in general is tricky with tcc...</span></div><div class="line" id="220504"><span class="nick" style="color:#8dd3c7"><a href="#220504" label="[22:05:04]">&lt;stikonas&gt;</a></span><span class="message">all builds that we had problems...</span></div><div class="line" id="222303"><span class="nick" style="color:#6b8072"><a href="#222303" label="[22:23:03]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: stikonas  I am.cm unconcerned aboi</span></div><div class="line" id="222306"><span class="nick" style="color:#6b8072"><a href="#222306" label="[22:23:06]">&lt;fossy&gt;</a></span><span class="message">uh</span></div><div class="line" id="222328"><span class="nick" style="color:#6b8072"><a href="#222328" label="[22:23:28]">&lt;fossy&gt;</a></span><span class="message">currently unconcerned about features in kernels post make</span></div><div class="line" id="222344"><span class="nick" style="color:#6b8072"><a href="#222344" label="[22:23:44]">&lt;fossy&gt;</a></span><span class="message">because that is when we get new kernel in my indev branch</span></div><div class="line" id="222354"><span class="nick" style="color:#6b8072"><a href="#222354" label="[22:23:54]">&lt;fossy&gt;</a></span><span class="message">and we can put whatever features we need there</span></div><div class="line" id="222746"><span class="nick" style="color:#234e69"><a href="#222746" label="[22:27:46]">&lt;pder&gt;</a></span><span class="message">stikonas: what was the reason you preferred building bash before gcc?</span></div><div class="line" id="222758"><span class="nick" style="color:#234e69"><a href="#222758" label="[22:27:58]">&lt;pder&gt;</a></span><span class="message">(in your xz branch)</span></div><div class="line" id="222803"><span class="nick" style="color:#8dd3c7"><a href="#222803" label="[22:28:03]">&lt;stikonas&gt;</a></span><span class="message">pder: xz needs bash</span></div><div class="line" id="222808"><span class="nick" style="color:#8dd3c7"><a href="#222808" label="[22:28:08]">&lt;stikonas&gt;</a></span><span class="message">but I'm still not sure what to do there</span></div><div class="line" id="222820"><span class="nick" style="color:#8dd3c7"><a href="#222820" label="[22:28:20]">&lt;stikonas&gt;</a></span><span class="message">maybe I need to build older bash there</span></div><div class="line" id="222822"><span class="nick" style="color:#6d2462"><a href="#222822" label="[22:28:22]">&lt;bauen1&gt;</a></span><span class="message">fossy: where is your indev branch ?</span></div><div class="line" id="222848"><span class="nick" style="color:#8dd3c7"><a href="#222848" label="[22:28:48]">&lt;stikonas&gt;</a></span><span class="message">pder: new bash 5.1 segfaults with some constructs</span></div><div class="line" id="222858"><span class="nick" style="color:#234e69"><a href="#222858" label="[22:28:58]">&lt;pder&gt;</a></span><span class="message">even with gcc?</span></div><div class="line" id="222913"><span class="nick" style="color:#8dd3c7"><a href="#222913" label="[22:29:13]">&lt;stikonas&gt;</a></span><span class="message">probably not, I think tcc only</span></div><div class="line" id="222918"><span class="nick" style="color:#8dd3c7"><a href="#222918" label="[22:29:18]">&lt;stikonas&gt;</a></span><span class="message">when I try to use stuff like ${var#glob}</span></div><div class="line" id="222924"><span class="nick" style="color:#8dd3c7"><a href="#222924" label="[22:29:24]">&lt;stikonas&gt;</a></span><span class="message">(or rather configure scripts using it)</span></div><div class="line" id="222937"><span class="nick" style="color:#8dd3c7"><a href="#222937" label="[22:29:37]">&lt;stikonas&gt;</a></span><span class="message">but xz was not happy with bash 2 either</span></div><div class="line" id="222956"><span class="nick" style="color:#8dd3c7"><a href="#222956" label="[22:29:56]">&lt;stikonas&gt;</a></span><span class="message">maybe we should instead downgrade that intermediate bash to bash 3.2.57...</span></div><div class="line" id="223019"><span class="nick" style="color:#234e69"><a href="#223019" label="[22:30:19]">&lt;pder&gt;</a></span><span class="message">is this because technially we shouldnt have gcc 4.0.4 yet?</span></div><div class="line" id="223045"><span class="nick" style="color:#6b8072"><a href="#223045" label="[22:30:45]">&lt;fossy&gt;</a></span><span class="message">bauen1: not pushed yet</span></div><div class="line" id="223057"><span class="nick" style="color:#6b8072"><a href="#223057" label="[22:30:57]">&lt;fossy&gt;</a></span><span class="message">ill push it once kexec tools works</span></div><div class="line" id="223103"><span class="nick" style="color:#8dd3c7"><a href="#223103" label="[22:31:03]">&lt;stikonas&gt;</a></span><span class="message">pder: yes</span></div><div class="line" id="223110"><span class="nick" style="color:#8dd3c7"><a href="#223110" label="[22:31:10]">&lt;stikonas&gt;</a></span><span class="message">so I'm trying to build more stuff pre gcc 4.0.4</span></div><div class="line" id="223110"><span class="nick" style="color:#6b8072"><a href="#223110" label="[22:31:10]">&lt;fossy&gt;</a></span><span class="message">I am close I think I just have to go to a very old version</span></div><div class="line" id="223129"><span class="nick" style="color:#6b8072"><a href="#223129" label="[22:31:29]">&lt;fossy&gt;</a></span><span class="message">Using 1.101 purgatory makes it hang rather than crasu</span></div><div class="line" id="223146"><span class="nick" style="color:#8dd3c7"><a href="#223146" label="[22:31:46]">&lt;stikonas&gt;</a></span><span class="message">pder: well we need to build autogen 5</span></div><div class="line" id="223202"><span class="nick" style="color:#8dd3c7"><a href="#223202" label="[22:32:02]">&lt;stikonas&gt;</a></span><span class="message">and that probably means building guile 3.0.2 (that has pp-bootstrap solved)</span></div><div class="line" id="223218"><span class="nick" style="color:#234e69"><a href="#223218" label="[22:32:18]">&lt;pder&gt;</a></span><span class="message">So we need a version of gcc that doesnt require autogen but is new enough to build guile?</span></div><div class="line" id="223232"><span class="nick" style="color:#8dd3c7"><a href="#223232" label="[22:32:32]">&lt;stikonas&gt;</a></span><span class="message">well, either that</span></div><div class="line" id="223236"><span class="nick" style="color:#8dd3c7"><a href="#223236" label="[22:32:36]">&lt;stikonas&gt;</a></span><span class="message">(which is gcc 3)</span></div><div class="line" id="223244"><span class="nick" style="color:#8dd3c7"><a href="#223244" label="[22:32:44]">&lt;stikonas&gt;</a></span><span class="message">or build guile with tcc</span></div><div class="line" id="223314"><span class="nick" style="color:#8dd3c7"><a href="#223314" label="[22:33:14]">&lt;stikonas&gt;</a></span><span class="message">which may or may not be possible...</span></div><div class="line" id="223339"><span class="nick" style="color:#6d2462"><a href="#223339" label="[22:33:39]">&lt;bauen1&gt;</a></span><span class="message">i'm build a demo upkg that can build the chroot (which requires chroot binary at least) and mount + bind mounts would make things a lot easier / cleaner</span></div><div class="line" id="223403"><span class="nick" style="color:#8dd3c7"><a href="#223403" label="[22:34:03]">&lt;stikonas&gt;</a></span><span class="message">bauen1: you can easily add chroot binary to  coreutils</span></div><div class="line" id="223411"><span class="nick" style="color:#234e69"><a href="#223411" label="[22:34:11]">&lt;pder&gt;</a></span><span class="message">The gcc docs indicate we only need guile 1.4.1 or later</span></div><div class="line" id="223427"><span class="nick" style="color:#8dd3c7"><a href="#223427" label="[22:34:27]">&lt;stikonas&gt;</a></span><span class="message">pder: our options are only guile 1.0 or 3.0.2</span></div><div class="line" id="223438"><span class="nick" style="color:#8dd3c7"><a href="#223438" label="[22:34:38]">&lt;stikonas&gt;</a></span><span class="message">rest has pre-gen stuff</span></div><div class="line" id="223504"><span class="nick" style="color:#234e69"><a href="#223504" label="[22:35:04]">&lt;pder&gt;</a></span><span class="message">where is all the info about 3.0.2 and pp syntax?</span></div><div class="line" id="223517"><span class="nick" style="color:#8dd3c7"><a href="#223517" label="[22:35:17]">&lt;stikonas&gt;</a></span><span class="message">mihi did that and emailed to bootstrappable mailing list</span></div><div class="line" id="223537"><span class="nick" style="color:#8dd3c7"><a href="#223537" label="[22:35:37]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/schierlm/guile-psyntax-bootstrapping/">https://github.com/schierlm/guile-psyntax-bootstrapping/</a> </span></div><div class="line" id="223734"><span class="nick" style="color:#6d2462"><a href="#223734" label="[22:37:34]">&lt;bauen1&gt;</a></span><span class="message">and tbh i would much rather use bind mounts, as mknod won't work with user namespaces, and some things need parts of /dev to build</span></div><div class="line" id="223923"><span class="nick" style="color:#2e2a4a"><a href="#223923" label="[22:39:23]">&lt;gforce_d11977&gt;</a></span><span class="message">awk/sleeping...</span></div><div class="line" id="224536"><span class="nick" style="color:#8dd3c7"><a href="#224536" label="[22:45:36]">&lt;stikonas&gt;</a></span><span class="message">bauen1: well, but I would like to keep an option to bootstrap stuff on empty baremetal system</span></div><div class="line" id="224542"><span class="nick" style="color:#8dd3c7"><a href="#224542" label="[22:45:42]">&lt;stikonas&gt;</a></span><span class="message">where we have no bind mounts</span></div><div class="line" id="224906"><span class="nick" style="color:#8dd3c7"><a href="#224906" label="[22:49:06]">&lt;stikonas&gt;</a></span><span class="message">so some kind of support for both would be nice</span></div><div class="line" id="224927"><span class="nick" style="color:#8dd3c7"><a href="#224927" label="[22:49:27]">&lt;stikonas&gt;</a></span><span class="message">well, at the moment all mknod stuff is behind test -c</span></div><div class="line" id="224932"><span class="nick" style="color:#8dd3c7"><a href="#224932" label="[22:49:32]">&lt;stikonas&gt;</a></span><span class="message">so maybe it will just work</span></div><div class="line" id="224945"><span class="nick" style="color:#8dd3c7"><a href="#224945" label="[22:49:45]">&lt;stikonas&gt;</a></span><span class="message">i.e. if it's already bind mount, nothing will be done</span></div><div class="line" id="225103"><span class="nick" style="color:#234e69"><a href="#225103" label="[22:51:03]">&lt;pder&gt;</a></span><span class="message">thanks, thats good news about guile.  Hopefully 3.0.2 is buildable with 3.x gcc or tcc</span></div><div class="line" id="225219"><span class="nick" style="color:#8dd3c7"><a href="#225219" label="[22:52:19]">&lt;stikonas&gt;</a></span><span class="message">pder: well, trying, it needs a bunch of dependencies</span></div><div class="line" id="225224"><span class="nick" style="color:#8dd3c7"><a href="#225224" label="[22:52:24]">&lt;stikonas&gt;</a></span><span class="message">gmp seems to build</span></div><div class="line" id="225232"><span class="nick" style="color:#8dd3c7"><a href="#225232" label="[22:52:32]">&lt;stikonas&gt;</a></span><span class="message">I'm having more trouble with libunistring</span></div><div class="line" id="225508"><span class="nick" style="color:#234e69"><a href="#225508" label="[22:55:08]">&lt;pder&gt;</a></span><span class="message">guile 3.0.2 wants automake 1.16.2- do you think that's doable?</span></div><div class="line" id="225547"><span class="nick" style="color:#8dd3c7"><a href="#225547" label="[22:55:47]">&lt;stikonas&gt;</a></span><span class="message">probably...</span></div><div class="line" id="225601"><span class="nick" style="color:#8dd3c7"><a href="#225601" label="[22:56:01]">&lt;stikonas&gt;</a></span><span class="message">maybe some minor perl tweaks to build more modules</span></div><div class="line" id="225608"><span class="nick" style="color:#8dd3c7"><a href="#225608" label="[22:56:08]">&lt;stikonas&gt;</a></span><span class="message">does it really need 1.16?</span></div><div class="line" id="225612"><span class="nick" style="color:#8dd3c7"><a href="#225612" label="[22:56:12]">&lt;stikonas&gt;</a></span><span class="message">I thought older is enough</span></div><div class="line" id="225633"><span class="nick" style="color:#8dd3c7"><a href="#225633" label="[22:56:33]">&lt;stikonas&gt;</a></span><span class="message">looks like 1.12</span></div><div class="line" id="225639"><span class="nick" style="color:#8dd3c7"><a href="#225639" label="[22:56:39]">&lt;stikonas&gt;</a></span><span class="message">where do you see 1.16?</span></div><div class="line" id="225700"><span class="nick" style="color:#8dd3c7"><a href="#225700" label="[22:57:00]">&lt;stikonas&gt;</a></span><span class="message">yes, I can see 1.12 in configure.ac</span></div><div class="line" id="225716"><span class="nick" style="color:#8dd3c7"><a href="#225716" label="[22:57:16]">&lt;stikonas&gt;</a></span><span class="message">so just one version short</span></div><div class="line" id="225752"><span class="nick" style="color:#8dd3c7"><a href="#225752" label="[22:57:52]">&lt;stikonas&gt;</a></span><span class="message">possibly even patchable to older automake</span></div><div class="line" id="225755"><span class="nick" style="color:#8dd3c7"><a href="#225755" label="[22:57:55]">&lt;stikonas&gt;</a></span><span class="message">if we disable tests</span></div><div class="line" id="230504"><span class="nick" style="color:#234e69"><a href="#230504" label="[23:05:04]">&lt;pder&gt;</a></span><span class="message">I was looking at Makefile.in, but I dont think the version number in there is relevant.</span></div><div class="line" id="230519"><span class="nick" style="color:#234e69"><a href="#230519" label="[23:05:19]">&lt;pder&gt;</a></span><span class="message">Makefile.am says 1.10</span></div><div class="line" id="230923"><span class="nick" style="color:#8dd3c7"><a href="#230923" label="[23:09:23]">&lt;stikonas&gt;</a></span><span class="message">it's the one that was used for generation</span></div><div class="line" id="230930"><span class="nick" style="color:#8dd3c7"><a href="#230930" label="[23:09:30]">&lt;stikonas&gt;</a></span><span class="message">the important number is in configure.ac</span></div><div class="line" id="230939"><span class="nick" style="color:#8dd3c7"><a href="#230939" label="[23:09:39]">&lt;stikonas&gt;</a></span><span class="message">so I've finally built slightly patched libunistring-0.9.2.1</span></div><div class="line" id="231034"><span class="nick" style="color:#8dd3c7"><a href="#231034" label="[23:10:34]">&lt;stikonas&gt;</a></span><span class="message">argh, that's probably too old for guile</span></div><div class="line" id="231112"><span class="nick" style="color:#8dd3c7"><a href="#231112" label="[23:11:12]">&lt;stikonas&gt;</a></span><span class="message">yeah, let's try 0.9.3</span></div><div class="line" id="232101"><span class="nick" style="color:#8dd3c7"><a href="#232101" label="[23:21:01]">&lt;stikonas&gt;</a></span><span class="message">hmm, guile is complicated...</span></div><div class="line" id="232107"><span class="nick" style="color:#8dd3c7"><a href="#232107" label="[23:21:07]">&lt;stikonas&gt;</a></span><span class="message">we probably need to build a lot of stuff...</span></div><div class="line" id="232714"><span class="nick" style="color:#8dd3c7"><a href="#232714" label="[23:27:14]">&lt;stikonas&gt;</a></span><span class="message">I suspect building gcc 3 will be easier...</span></div><br /></div></body></html>