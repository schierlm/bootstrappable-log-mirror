<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-11-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011656"><span class="nick" style="color:#8dd3c7"><a href="#011656" label="[01:16:56]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: Not AI but the security problem. As in how to compromise an FPGA such that it can compromise any bitstream given to it.</span></div><div class="line" id="064046"><span class="nick" style="color:#2e2a4a"><a href="#064046" label="[06:40:46]">&lt;xentrac&gt;</a></span><span class="message">ahh</span></div><div class="line" id="164024"><span class="nick" style="color:#6b8072"><a href="#164024" label="[16:40:24]">&lt;siraben&gt;</a></span><span class="message">Took a stab at rewriting one of Ben Lynn's bootstrapping phases in Lisp, and it works! <a rel="nofollow" href="https://github.com/siraben/compiler/blob/lispy/binary.lisp">https://github.com/siraben/compiler/blob/lispy/binary.lisp</a> </span></div><div class="line" id="164041"><span class="nick" style="color:#6b8072"><a href="#164041" label="[16:40:41]">&lt;siraben&gt;</a></span><span class="message">Hopefully when I get a reply on licensing I can combine this with mes-m2</span></div><div class="line" id="164144"><span class="nick" style="color:#6b8072"><a href="#164144" label="[16:41:44]">&lt;siraben&gt;</a></span><span class="message">Essentially, Ben Lynn's project consists of multiple compilers which compile larger and larger subsets of Haskell. I took one of the earlier compilers, adjusted it to accept Lisp syntax, then wrote the next bootstrap in Lisp instead of Haskell.</span></div><div class="line" id="184939"><span class="nick" style="color:#2e2a4a"><a href="#184939" label="[18:49:39]">&lt;xentrac&gt;</a></span><span class="message">awesome!</span></div><div class="line" id="185322"><span class="nick" style="color:#80b1d3"><a href="#185322" label="[18:53:22]">&lt;rain1&gt;</a></span><span class="message">great work</span></div><div class="line" id="185334"><span class="nick" style="color:#80b1d3"><a href="#185334" label="[18:53:34]">&lt;rain1&gt;</a></span><span class="message">how much of it runs on top of what you have implemented?</span></div><div class="line" id="185345"><span class="nick" style="color:#80b1d3"><a href="#185345" label="[18:53:45]">&lt;rain1&gt;</a></span><span class="message">also this stuff looks very similar to some of the cool things `Lion was making</span></div><div class="line" id="185354"><span class="nick" style="color:#80b1d3"><a href="#185354" label="[18:53:54]">&lt;rain1&gt;</a></span><span class="message">just that low level lambda/SK stuff</span></div><div class="line" id="194010"><span class="nick" style="color:#6d2462"><a href="#194010" label="[19:40:10]">&lt;Hagfish&gt;</a></span><span class="message">okay brain trust, i have an interesting technical design question for you (unrelated to bootstraps, i apologise)</span></div><div class="line" id="194046"><span class="nick" style="color:#6d2462"><a href="#194046" label="[19:40:46]">&lt;Hagfish&gt;</a></span><span class="message">let's say you want a decentralised system where people can put up documents on the web, and other parties can then aggregate those documents</span></div><div class="line" id="194059"><span class="nick" style="color:#6d2462"><a href="#194059" label="[19:40:59]">&lt;Hagfish&gt;</a></span><span class="message">but you want there to be only one document per person</span></div><div class="line" id="194118"><span class="nick" style="color:#6d2462"><a href="#194118" label="[19:41:18]">&lt;Hagfish&gt;</a></span><span class="message">(maybe you are trying to find an average of some values, like a wisdom of the crowds thing)</span></div><div class="line" id="194141"><span class="nick" style="color:#6d2462"><a href="#194141" label="[19:41:41]">&lt;Hagfish&gt;</a></span><span class="message">further, assume that you are happy to settle for &quot;one document per email account&quot;</span></div><div class="line" id="194205"><span class="nick" style="color:#6d2462"><a href="#194205" label="[19:42:05]">&lt;Hagfish&gt;</a></span><span class="message">with a centralised system, you could do this by having everyone email their document and getting it signed by the central node</span></div><div class="line" id="194221"><span class="nick" style="color:#6d2462"><a href="#194221" label="[19:42:21]">&lt;Hagfish&gt;</a></span><span class="message">each user could then host the document wherever they wanted, with the signature attached</span></div><div class="line" id="194235"><span class="nick" style="color:#6d2462"><a href="#194235" label="[19:42:35]">&lt;Hagfish&gt;</a></span><span class="message">but is there some way to do this in a decentralised way?</span></div><div class="line" id="194244"><span class="nick" style="color:#6d2462"><a href="#194244" label="[19:42:44]">&lt;Hagfish&gt;</a></span><span class="message">i'm thinking that maybe DKIM signatures could be exploited somehow</span></div><div class="line" id="194313"><span class="nick" style="color:#6d2462"><a href="#194313" label="[19:43:13]">&lt;Hagfish&gt;</a></span><span class="message">oh, but i want the system not to leak the email addresses of the users</span></div><div class="line" id="195722"><span class="nick" style="color:#2e2a4a"><a href="#195722" label="[19:57:22]">&lt;xentrac&gt;</a></span><span class="message">blockchain ;)</span></div><div class="line" id="203520"><span class="nick" style="color:#6d2462"><a href="#203520" label="[20:35:20]">&lt;Hagfish&gt;</a></span><span class="message">xentrac: you're not wrong ;)</span></div><div class="line" id="203546"><span class="nick" style="color:#6d2462"><a href="#203546" label="[20:35:46]">&lt;Hagfish&gt;</a></span><span class="message">i was thinking there could be a &quot;proof of burn&quot; system, to at least make it expensive to have multiple accounts</span></div><div class="line" id="203750"><span class="nick" style="color:#6d2462"><a href="#203750" label="[20:37:50]">&lt;Hagfish&gt;</a></span><span class="message">hmm, actually, in a federated system, each user could send an email to one of the nodes in the system, and that node could publish the hash of the email address for the other nodes to check against</span></div><div class="line" id="203948"><span class="nick" style="color:#6d2462"><a href="#203948" label="[20:39:48]">&lt;Hagfish&gt;</a></span><span class="message">unfortunately email addresses are low entropy, so the hashes could be cracked, but the published list would only say that a user exists, not what their user ID is</span></div><div class="line" id="204045"><span class="nick" style="color:#6d2462"><a href="#204045" label="[20:40:45]">&lt;Hagfish&gt;</a></span><span class="message">so even if you could crack the email address, you wouldn't be able to link that to a specific document uploaded by the user</span></div><div class="line" id="204248"><span class="nick" style="color:#6d2462"><a href="#204248" label="[20:42:48]">&lt;Hagfish&gt;</a></span><span class="message">hmm, some sort of Merkel tree?</span></div><div class="line" id="204325"><span class="nick" style="color:#6d2462"><a href="#204325" label="[20:43:25]">&lt;Hagfish&gt;</a></span><span class="message">each node could publish the first half of each hash</span></div><div class="line" id="204413"><span class="nick" style="color:#6d2462"><a href="#204413" label="[20:44:13]">&lt;Hagfish&gt;</a></span><span class="message">then, if two nodes publish the same first half, they can check with each other in secret to determine whether they have the same hash</span></div><div class="line" id="204504"><span class="nick" style="color:#6d2462"><a href="#204504" label="[20:45:04]">&lt;Hagfish&gt;</a></span><span class="message">i believe that can be solved securely using the socialist millionaire protocol</span></div><div class="line" id="220045"><span class="nick" style="color:#234e69"><a href="#220045" label="[22:00:45]">&lt;Darius&gt;</a></span><span class="message">the gitcoin grants also have to solve the problem of one-person-one-vote, so maybe piggyback on whatever they're doing</span></div><div class="line" id="221928"><span class="nick" style="color:#6d2462"><a href="#221928" label="[22:19:28]">&lt;Hagfish&gt;</a></span><span class="message">Darius: good thinking, thank you</span></div><div class="line" id="222247"><span class="nick" style="color:#234e69"><a href="#222247" label="[22:22:47]">&lt;Darius&gt;</a></span><span class="message">welcome</span></div><br /></div></body></html>