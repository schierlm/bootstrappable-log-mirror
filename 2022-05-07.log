<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-05-07.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000003"><span class="nick" style="color:#389600"><a href="#000003" label="[00:00:03]">&lt;vagrantc&gt;</a></span><span class="message">gah.</span></div><div class="line" id="000020"><span class="nick" style="color:#389600"><a href="#000020" label="[00:00:20]">&lt;vagrantc&gt;</a></span><span class="message">building on armhf FAIL: tests/math.test</span></div><div class="line" id="000105"><span class="nick" style="color:#389600"><a href="#000105" label="[00:01:05]">&lt;vagrantc&gt;</a></span><span class="message">only took ~1.5 hours to get to it...</span></div><div class="line" id="000148"><span class="nick" style="color:#389600"><a href="#000148" label="[00:01:48]">&lt;vagrantc&gt;</a></span><span class="message">running on a 64-bit os</span></div><div class="line" id="000747"><span class="nick" style="color:#389600"><a href="#000747" label="[00:07:47]">&lt;vagrantc&gt;</a></span><span class="message">didn't get anything useful out of it beyond that, going to try again without the bootstrap build and hopefully it'll still fail the same way...</span></div><div class="line" id="000806"><span class="nick" style="color:#389600"><a href="#000806" label="[00:08:06]">&lt;vagrantc&gt;</a></span><span class="message">and this time pass arguments so i can inspect the reulting failure...</span></div><div class="line" id="005753"><span class="nick" style="color:#2e2a4a"><a href="#005753" label="[00:57:53]">&lt;oriansj&gt;</a></span><span class="message">tfgbvhrdjeugbfrrkbhtuibleehcvgvuctfrbvltlnld</span></div><div class="line" id="010309"><span class="nick" style="color:#389600"><a href="#010309" label="[01:03:09]">&lt;vagrantc&gt;</a></span><span class="message">say it like you mean it</span></div><div class="line" id="012440"><span class="nick" style="color:#6b8072"><a href="#012440" label="[01:24:40]">&lt;achaninja&gt;</a></span><span class="message">oriansj: I thought if we had a gas compatible subset assembler and simple static elf linker written in some variant of the assembly C compilers - its possible to get a fast but less than perfect bootstrap</span></div><div class="line" id="012451"><span class="nick" style="color:#6b8072"><a href="#012451" label="[01:24:51]">&lt;achaninja&gt;</a></span><span class="message">from the assembly code of chibicc</span></div><div class="line" id="012511"><span class="nick" style="color:#6b8072"><a href="#012511" label="[01:25:11]">&lt;achaninja&gt;</a></span><span class="message">but eh, i guess thats a step backwards</span></div><div class="line" id="013737"><span class="nick" style="color:#80b1d3"><a href="#013737" label="[01:37:37]">&lt;pabs3&gt;</a></span><span class="message">Free Silicon conference: <a rel="nofollow" href="https://wiki.f-si.org/index.php/FSiC2022">https://wiki.f-si.org/index.php/FSiC2022</a>  <a rel="nofollow" href="https://wiki.f-si.org/index.php/FSiC2019">https://wiki.f-si.org/index.php/FSiC2019</a>  <a rel="nofollow" href="https://peertube.f-si.org/videos/trending?sort=-trending&amp;page=4">https://peertube.f-si.org/videos/trending?sort=-trending&amp;page=4</a> </span></div><div class="line" id="014229"><span class="nick" style="color:#389600"><a href="#014229" label="[01:42:29]">&lt;vagrantc&gt;</a></span><span class="message">hrm. i build it again and i don't get the test suite to fail. yay. i guess.</span></div><div class="line" id="014428"><span class="nick" style="color:#389600"><a href="#014428" label="[01:44:28]">&lt;vagrantc&gt;</a></span><span class="message">so as of mes 0.24, the supported architectures are basicall x86, x86_64 and arm still?</span></div><div class="line" id="015349"><span class="nick" style="color:#6d2462"><a href="#015349" label="[01:53:49]">&lt;stikonas&gt;</a></span><span class="message">well, riscv64 port is incomplete</span></div><div class="line" id="015354"><span class="nick" style="color:#6d2462"><a href="#015354" label="[01:53:54]">&lt;stikonas&gt;</a></span><span class="message">so not in mes 0.24</span></div><div class="line" id="015426"><span class="nick" style="color:#6d2462"><a href="#015426" label="[01:54:26]">&lt;stikonas&gt;</a></span><span class="message">mes itself is fairly easy to port, there are working patches, but mescc is much harder</span></div><div class="line" id="015430"><span class="nick" style="color:#389600"><a href="#015430" label="[01:54:30]">&lt;vagrantc&gt;</a></span><span class="message">yeah, i misread the announcement :)</span></div><div class="line" id="015457"><span class="nick" style="color:#389600"><a href="#015457" label="[01:54:57]">&lt;vagrantc&gt;</a></span><span class="message">is aarch64/arm64 in progress?</span></div><div class="line" id="015534"><span class="nick" style="color:#6d2462"><a href="#015534" label="[01:55:34]">&lt;stikonas&gt;</a></span><span class="message">I thought it was at some point</span></div><div class="line" id="015545"><span class="nick" style="color:#389600"><a href="#015545" label="[01:55:45]">&lt;vagrantc&gt;</a></span><span class="message">looks like there's mention of it in the code, at least</span></div><div class="line" id="015545"><span class="nick" style="color:#6d2462"><a href="#015545" label="[01:55:45]">&lt;stikonas&gt;</a></span><span class="message">but probably a bit stale</span></div><div class="line" id="015546"><span class="nick" style="color:#6d2462"><a href="#015546" label="[01:55:46]">&lt;stikonas&gt;</a></span><span class="message">but I'm also just looking at code</span></div><div class="line" id="015654"><span class="nick" style="color:#389600"><a href="#015654" label="[01:56:54]">&lt;vagrantc&gt;</a></span><span class="message">it definitely didn't build ... configure requires passing --with-courage, and then fails</span></div><div class="line" id="015703"><span class="nick" style="color:#389600"><a href="#015703" label="[01:57:03]">&lt;vagrantc&gt;</a></span><span class="message">needs a bit more than courage :)</span></div><div class="line" id="015754"><span class="nick" style="color:#389600"><a href="#015754" label="[01:57:54]">&lt;vagrantc&gt;</a></span><span class="message">also tried cross-building arm from x86_64 ... but that failed ... maybe there's no way to disable the tests</span></div><div class="line" id="015827"><span class="nick" style="color:#389600"><a href="#015827" label="[01:58:27]">&lt;vagrantc&gt;</a></span><span class="message">build-aux/build-scaffold.sh: line 71: ./exit-42: cannot execute binary file: Exec format error</span></div><div class="line" id="022633"><span class="nick" style="color:#2e2a4a"><a href="#022633" label="[02:26:33]">&lt;oriansj&gt;</a></span><span class="message">tfgbvhrdjeughclkbculuidtnhrvkjhveieuhlduffbu</span></div><div class="line" id="022719"><span class="nick" style="color:#234e69"><a href="#022719" label="[02:27:19]">&lt;muurkha&gt;</a></span><span class="message">me too, oriansj, me too</span></div><div class="line" id="022924"><span class="nick" style="color:#2e2a4a"><a href="#022924" label="[02:29:24]">&lt;oriansj&gt;</a></span><span class="message">sorry toddler attack</span></div><div class="line" id="023111"><span class="nick" style="color:#234e69"><a href="#023111" label="[02:31:11]">&lt;muurkha&gt;</a></span><span class="message">I figured it was either that or that it was your distress code</span></div><div class="line" id="023414"><span class="nick" style="color:#2e2a4a"><a href="#023414" label="[02:34:14]">&lt;oriansj&gt;</a></span><span class="message">I must say using i3 with a 2 year old is a dangerous combo</span></div><div class="line" id="023501"><span class="nick" style="color:#2e2a4a"><a href="#023501" label="[02:35:01]">&lt;oriansj&gt;</a></span><span class="message">only 3 key presses needed to get to a shell</span></div><div class="line" id="025424"><span class="nick" style="color:#2e2a4a"><a href="#025424" label="[02:54:24]">&lt;oriansj&gt;</a></span><span class="message">achaninja: nothing is a step backwards IF useful infromation is learned and *SHARED*</span></div><div class="line" id="025601"><span class="nick" style="color:#6b8072"><a href="#025601" label="[02:56:01]">&lt;achaninja&gt;</a></span><span class="message">I'm currently going through the tcc bootstrap steps manually</span></div><div class="line" id="025709"><span class="nick" style="color:#6b8072"><a href="#025709" label="[02:57:09]">&lt;achaninja&gt;</a></span><span class="message">a few things are quite unclear</span></div><div class="line" id="025730"><span class="nick" style="color:#6b8072"><a href="#025730" label="[02:57:30]">&lt;achaninja&gt;</a></span><span class="message">as an example, and I could be wrong</span></div><div class="line" id="025823"><span class="nick" style="color:#6b8072"><a href="#025823" label="[02:58:23]">&lt;achaninja&gt;</a></span><span class="message">I had some trouble tracking down the exact git commit used by livebootstrap</span></div><div class="line" id="025832"><span class="nick" style="color:#6b8072"><a href="#025832" label="[02:58:32]">&lt;achaninja&gt;</a></span><span class="message">in janneke's tcc fork</span></div><div class="line" id="030050"><span class="nick" style="color:#6b8072"><a href="#030050" label="[03:00:50]">&lt;achaninja&gt;</a></span><span class="message">for example</span></div><div class="line" id="030053"><span class="nick" style="color:#6b8072"><a href="#030053" label="[03:00:53]">&lt;achaninja&gt;</a></span><span class="message">this is the file</span></div><div class="line" id="030104"><span class="nick" style="color:#6b8072"><a href="#030104" label="[03:01:04]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://lilypond.org/janneke/tcc/tcc-0.9.26-1136-g5bba73cc.tar.gz">https://lilypond.org/janneke/tcc/tcc-0.9.26-1136-g5bba73cc.tar.gz</a> </span></div><div class="line" id="030111"><span class="nick" style="color:#6b8072"><a href="#030111" label="[03:01:11]">&lt;achaninja&gt;</a></span><span class="message">i thought this mean the git commit was</span></div><div class="line" id="030119"><span class="nick" style="color:#6b8072"><a href="#030119" label="[03:01:19]">&lt;achaninja&gt;</a></span><span class="message">g5bba73cc</span></div><div class="line" id="030125"><span class="nick" style="color:#6b8072"><a href="#030125" label="[03:01:25]">&lt;achaninja&gt;</a></span><span class="message">abbreviated</span></div><div class="line" id="030131"><span class="nick" style="color:#6b8072"><a href="#030131" label="[03:01:31]">&lt;achaninja&gt;</a></span><span class="message">but this commit doesn't exist in</span></div><div class="line" id="030139"><span class="nick" style="color:#6b8072"><a href="#030139" label="[03:01:39]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/janneke/tinycc">https://gitlab.com/janneke/tinycc</a> </span></div><div class="line" id="030231"><span class="nick" style="color:#6b8072"><a href="#030231" label="[03:02:31]">&lt;achaninja&gt;</a></span><span class="message">I would appreciate getting to the bottom of that</span></div><div class="line" id="030816"><span class="nick" style="color:#6c3d55"><a href="#030816" label="[03:08:16]">&lt;nckx&gt;</a></span><span class="message">The g stands for git (commits are purely hex).</span></div><div class="line" id="030824"><span class="nick" style="color:#6b8072"><a href="#030824" label="[03:08:24]">&lt;achaninja&gt;</a></span><span class="message">ah ok</span></div><div class="line" id="030833"><span class="nick" style="color:#234e69"><a href="#030833" label="[03:08:33]">&lt;muurkha&gt;</a></span><span class="message">oh yeah, g isn't a hex digit, is it?</span></div><div class="line" id="030908"><span class="nick" style="color:#6b8072"><a href="#030908" label="[03:09:08]">&lt;achaninja&gt;</a></span><span class="message">thanks makes sense</span></div><div class="line" id="030908"><span class="nick" style="color:#6b8072"><a href="#030908" label="[03:09:08]">&lt;achaninja&gt;</a></span><span class="message">however</span></div><div class="line" id="030908"><span class="nick" style="color:#6c3d55"><a href="#030908" label="[03:09:08]">&lt;nckx&gt;</a></span><span class="message">muurkha: Hush.  It's the secret hex digit.</span></div><div class="line" id="031002"><span class="nick" style="color:#6b8072"><a href="#031002" label="[03:10:02]">&lt;achaninja&gt;</a></span><span class="message">that commit is totally detached from history it seems</span></div><div class="line" id="031014"><span class="nick" style="color:#6b8072"><a href="#031014" label="[03:10:14]">&lt;achaninja&gt;</a></span><span class="message">maybe it should be tagged</span></div><div class="line" id="031038"><span class="nick" style="color:#6c3d55"><a href="#031038" label="[03:10:38]">&lt;nckx&gt;</a></span><span class="message">It's not detached, it's the mes-0.23 branch, but yeh, maybe.</span></div><div class="line" id="031049"><span class="nick" style="color:#6b8072"><a href="#031049" label="[03:10:49]">&lt;achaninja&gt;</a></span><span class="message">oh</span></div><div class="line" id="031105"><span class="nick" style="color:#6b8072"><a href="#031105" label="[03:11:05]">&lt;achaninja&gt;</a></span><span class="message">thanks that clears it up :)</span></div><div class="line" id="031143"><span class="nick" style="color:#d9d9d9"><a href="#031143" label="[03:11:43]">&lt;Hagfish&gt;</a></span><span class="message">it's so great someone is looking at this process with fresh eyes, thank you!</span></div><div class="line" id="031215"><span class="nick" style="color:#6c3d55"><a href="#031215" label="[03:12:15]">&lt;nckx&gt;</a></span><span class="message">(Using a foo-x.y branch instead of a tag is a bit unusual, no argument.)</span></div><div class="line" id="031232"><span class="nick" style="color:#d9d9d9"><a href="#031232" label="[03:12:32]">&lt;Hagfish&gt;</a></span><span class="message">untagged releases definitely seems like something that could be improved, but there might be some good reason for it</span></div><div class="line" id="031256"><span class="nick" style="color:#d9d9d9"><a href="#031256" label="[03:12:56]">&lt;Hagfish&gt;</a></span><span class="message">at first i thought the filename might be a hash of the contents</span></div><div class="line" id="031327"><span class="nick" style="color:#6b8072"><a href="#031327" label="[03:13:27]">&lt;achaninja&gt;</a></span><span class="message">I guess git fsck can be uesd to check the hash</span></div><div class="line" id="031333"><span class="nick" style="color:#6b8072"><a href="#031333" label="[03:13:33]">&lt;achaninja&gt;</a></span><span class="message">same idea</span></div><div class="line" id="031407"><span class="nick" style="color:#d9d9d9"><a href="#031407" label="[03:14:07]">&lt;Hagfish&gt;</a></span><span class="message">maybe tcc 0.9.26 is only a temporary solution and once it is removed this whole issue will be moot</span></div><div class="line" id="032128"><span class="nick" style="color:#6b8072"><a href="#032128" label="[03:21:28]">&lt;achaninja&gt;</a></span><span class="message">that would be super nice</span></div><div class="line" id="032136"><span class="nick" style="color:#6b8072"><a href="#032136" label="[03:21:36]">&lt;achaninja&gt;</a></span><span class="message">the 6 builds of tcc is quite painful :P</span></div><div class="line" id="032250"><span class="nick" style="color:#d9d9d9"><a href="#032250" label="[03:22:50]">&lt;Hagfish&gt;</a></span><span class="message">i think it's historically been hard to push upstream tcc in a good direction, which is why bootstrapping basically requires maintaining a fork of tcc</span></div><div class="line" id="032321"><span class="nick" style="color:#d9d9d9"><a href="#032321" label="[03:23:21]">&lt;Hagfish&gt;</a></span><span class="message">i'm not sure what can be done to simplify that fork</span></div><div class="line" id="032857"><span class="nick" style="color:#2e2a4a"><a href="#032857" label="[03:28:57]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: Well mescc is growing and developing as a C compiler so it is only a matter of time before janneke gets mescc to the level we don't need a fork of tcc and maybe be able to use even the latest tcc release</span></div><div class="line" id="032934"><span class="nick" style="color:#6b8072"><a href="#032934" label="[03:29:34]">&lt;achaninja&gt;</a></span><span class="message">I don't think you should aim to modify tcc</span></div><div class="line" id="032950"><span class="nick" style="color:#6b8072"><a href="#032950" label="[03:29:50]">&lt;achaninja&gt;</a></span><span class="message">imposing your will on others isn't a good look</span></div><div class="line" id="033004"><span class="nick" style="color:#6b8072"><a href="#033004" label="[03:30:04]">&lt;achaninja&gt;</a></span><span class="message">especially when it involves making their code uglier to serve your purposes</span></div><div class="line" id="033103"><span class="nick" style="color:#6b8072"><a href="#033103" label="[03:31:03]">&lt;achaninja&gt;</a></span><span class="message">modify upstream tcc*</span></div><div class="line" id="033111"><span class="nick" style="color:#6b8072"><a href="#033111" label="[03:31:11]">&lt;achaninja&gt;</a></span><span class="message">the current patches are fine</span></div><div class="line" id="033207"><span class="nick" style="color:#6b8072"><a href="#033207" label="[03:32:07]">&lt;achaninja&gt;</a></span><span class="message">with more help I'm sure we can get mescc to build everything</span></div><div class="line" id="033305"><span class="nick" style="color:#6b8072"><a href="#033305" label="[03:33:05]">&lt;achaninja&gt;</a></span><span class="message">tcc development is fairly stale, it would be nice if we could support a bunch of bootstrap c compilers</span></div><div class="line" id="033334"><span class="nick" style="color:#6b8072"><a href="#033334" label="[03:33:34]">&lt;achaninja&gt;</a></span><span class="message">but yeah - I guess im not adding much by repeating that</span></div><div class="line" id="033338"><span class="nick" style="color:#d9d9d9"><a href="#033338" label="[03:33:38]">&lt;Hagfish&gt;</a></span><span class="message">oriansj: yeah, that's a great way to route around that mess :)</span></div><div class="line" id="033400"><span class="nick" style="color:#d9d9d9"><a href="#033400" label="[03:34:00]">&lt;Hagfish&gt;</a></span><span class="message">achaninja: i agree about not imposing your will on others, but that goes both ways</span></div><div class="line" id="033428"><span class="nick" style="color:#d9d9d9"><a href="#033428" label="[03:34:28]">&lt;Hagfish&gt;</a></span><span class="message">it's not good if the tcc maintainers are gatekeeping their project with a narrow vision, to the detriment of the real users of the project</span></div><div class="line" id="033447"><span class="nick" style="color:#d9d9d9"><a href="#033447" label="[03:34:47]">&lt;Hagfish&gt;</a></span><span class="message">but i don't know what difficult tradeoffs they're having to make, so i won't criticise them</span></div><div class="line" id="033514"><span class="nick" style="color:#234e69"><a href="#033514" label="[03:35:14]">&lt;muurkha&gt;</a></span><span class="message">maybe it is good because the narrow vision is more important than the real users</span></div><div class="line" id="033529"><span class="nick" style="color:#234e69"><a href="#033529" label="[03:35:29]">&lt;muurkha&gt;</a></span><span class="message">but in any case it's free software, they can't stop the users from forking it</span></div><div class="line" id="033530"><span class="nick" style="color:#d9d9d9"><a href="#033530" label="[03:35:30]">&lt;Hagfish&gt;</a></span><span class="message">what if it's the wrong vision, though?</span></div><div class="line" id="033534"><span class="nick" style="color:#d9d9d9"><a href="#033534" label="[03:35:34]">&lt;Hagfish&gt;</a></span><span class="message">right</span></div><div class="line" id="033550"><span class="nick" style="color:#234e69"><a href="#033550" label="[03:35:50]">&lt;muurkha&gt;</a></span><span class="message">we'll find out when the last stars go out</span></div><div class="line" id="033558"><span class="nick" style="color:#d9d9d9"><a href="#033558" label="[03:35:58]">&lt;Hagfish&gt;</a></span><span class="message">i'm wondering if there is a critical mass of tcc contributors who might prefer to join a &quot;tbc&quot; (tiny bootstrapping compiler) project</span></div><div class="line" id="033600"><span class="nick" style="color:#6b8072"><a href="#033600" label="[03:36:00]">&lt;achaninja&gt;</a></span><span class="message">thats what forks are, you can't tell someone else their vision is wrong haha</span></div><div class="line" id="033642"><span class="nick" style="color:#d9d9d9"><a href="#033642" label="[03:36:42]">&lt;Hagfish&gt;</a></span><span class="message">that's quite a big hurdle involved in forking a community (which is a good and bad thing)</span></div><div class="line" id="033652"><span class="nick" style="color:#234e69"><a href="#033652" label="[03:36:52]">&lt;muurkha&gt;</a></span><span class="message">used to be, not anymore</span></div><div class="line" id="033703"><span class="nick" style="color:#d9d9d9"><a href="#033703" label="[03:37:03]">&lt;Hagfish&gt;</a></span><span class="message">it means you don't end up with millions of unsustainable confusing forks, but it can harm the community</span></div><div class="line" id="033712"><span class="nick" style="color:#6b8072"><a href="#033712" label="[03:37:12]">&lt;achaninja&gt;</a></span><span class="message">I really don't think bootstrapping requires a community</span></div><div class="line" id="033715"><span class="nick" style="color:#6b8072"><a href="#033715" label="[03:37:15]">&lt;achaninja&gt;</a></span><span class="message">i mean</span></div><div class="line" id="033717"><span class="nick" style="color:#6b8072"><a href="#033717" label="[03:37:17]">&lt;achaninja&gt;</a></span><span class="message">around tcc</span></div><div class="line" id="033719"><span class="nick" style="color:#234e69"><a href="#033719" label="[03:37:19]">&lt;muurkha&gt;</a></span><span class="message">git clone, git remote add ..., git push -u gitlab master</span></div><div class="line" id="033723"><span class="nick" style="color:#234e69"><a href="#033723" label="[03:37:23]">&lt;muurkha&gt;</a></span><span class="message">or main if you like</span></div><div class="line" id="033752"><span class="nick" style="color:#d9d9d9"><a href="#033752" label="[03:37:52]">&lt;Hagfish&gt;</a></span><span class="message">but you need to pick a new name, and clarify your new vision, and encourage people to contribute to it</span></div><div class="line" id="033806"><span class="nick" style="color:#6b8072"><a href="#033806" label="[03:38:06]">&lt;achaninja&gt;</a></span><span class="message">btw random idea - anyone thought about the possible uses of web assembly in bootstrapping?</span></div><div class="line" id="033808"><span class="nick" style="color:#d9d9d9"><a href="#033808" label="[03:38:08]">&lt;Hagfish&gt;</a></span><span class="message">architectural decisions have to be made about what goes in and what is rejected, and it can take time for that dust to settle</span></div><div class="line" id="033816"><span class="nick" style="color:#234e69"><a href="#033816" label="[03:38:16]">&lt;muurkha&gt;</a></span><span class="message">no you don't, you can just push it to gitlab</span></div><div class="line" id="033826"><span class="nick" style="color:#234e69"><a href="#033826" label="[03:38:26]">&lt;muurkha&gt;</a></span><span class="message">and if you like the results you can tell people about them</span></div><div class="line" id="033840"><span class="nick" style="color:#234e69"><a href="#033840" label="[03:38:40]">&lt;muurkha&gt;</a></span><span class="message">you can call it &quot;Hagfish's tcc fork&quot; until you come up with a better name</span></div><div class="line" id="033846"><span class="nick" style="color:#d9d9d9"><a href="#033846" label="[03:38:46]">&lt;Hagfish&gt;</a></span><span class="message">heh, true</span></div><div class="line" id="033906"><span class="nick" style="color:#234e69"><a href="#033906" label="[03:39:06]">&lt;muurkha&gt;</a></span><span class="message">encouraging people to contribute to it is not a good idea until your new vision is clear</span></div><div class="line" id="033916"><span class="nick" style="color:#234e69"><a href="#033916" label="[03:39:16]">&lt;muurkha&gt;</a></span><span class="message">but you can merge in changes from their forks</span></div><div class="line" id="033929"><span class="nick" style="color:#d9d9d9"><a href="#033929" label="[03:39:29]">&lt;Hagfish&gt;</a></span><span class="message">yeah, maybe that's the biggest hurdle:  actually delivering something that's better than what came before</span></div><div class="line" id="033934"><span class="nick" style="color:#6b8072"><a href="#033934" label="[03:39:34]">&lt;achaninja&gt;</a></span><span class="message">well the problem was you weren't really advancing tcc - you were actively regressing it</span></div><div class="line" id="033938"><span class="nick" style="color:#6b8072"><a href="#033938" label="[03:39:38]">&lt;achaninja&gt;</a></span><span class="message">to make it easier to compile</span></div><div class="line" id="033943"><span class="nick" style="color:#6b8072"><a href="#033943" label="[03:39:43]">&lt;achaninja&gt;</a></span><span class="message">anyway</span></div><div class="line" id="034008"><span class="nick" style="color:#d9d9d9"><a href="#034008" label="[03:40:08]">&lt;Hagfish&gt;</a></span><span class="message">hmm, yeah, removing features would be unkind</span></div><div class="line" id="034030"><span class="nick" style="color:#d9d9d9"><a href="#034030" label="[03:40:30]">&lt;Hagfish&gt;</a></span><span class="message">or even just making the code harder to read</span></div><div class="line" id="034032"><span class="nick" style="color:#d9d9d9"><a href="#034032" label="[03:40:32]">&lt;Hagfish&gt;</a></span><span class="message">i see what you mean</span></div><div class="line" id="034034"><span class="nick" style="color:#6b8072"><a href="#034034" label="[03:40:34]">&lt;achaninja&gt;</a></span><span class="message">its no surprise people would be hostile to that idea</span></div><div class="line" id="034051"><span class="nick" style="color:#234e69"><a href="#034051" label="[03:40:51]">&lt;muurkha&gt;</a></span><span class="message">I mean TCC is licensed under GPL so unless they remove arm-gen.c you can merge in their changes if you like them</span></div><div class="line" id="034053"><span class="nick" style="color:#6b8072"><a href="#034053" label="[03:40:53]">&lt;achaninja&gt;</a></span><span class="message">'im just gonna delete your hard written code or wrap it in #ifdef soup'</span></div><div class="line" id="034126"><span class="nick" style="color:#234e69"><a href="#034126" label="[03:41:26]">&lt;muurkha&gt;</a></span><span class="message">(most of TCC is relicensed under the X11 license)</span></div><div class="line" id="034132"><span class="nick" style="color:#d9d9d9"><a href="#034132" label="[03:41:32]">&lt;Hagfish&gt;</a></span><span class="message">yeah, there are probably ways of supporting all goals in one codebase, but at the cost of readability (which in practice means auditability)</span></div><div class="line" id="034134"><span class="nick" style="color:#d9d9d9"><a href="#034134" label="[03:41:34]">&lt;Hagfish&gt;</a></span><span class="message">good point</span></div><div class="line" id="034158"><span class="nick" style="color:#234e69"><a href="#034158" label="[03:41:58]">&lt;muurkha&gt;</a></span><span class="message">but arm-gen.c is exclusively GPL2+</span></div><div class="line" id="034217"><span class="nick" style="color:#6b8072"><a href="#034217" label="[03:42:17]">&lt;achaninja&gt;</a></span><span class="message">i think the obvious way  and correct want is just improve mescc</span></div><div class="line" id="034229"><span class="nick" style="color:#d9d9d9"><a href="#034229" label="[03:42:29]">&lt;Hagfish&gt;</a></span><span class="message">yeah, that makes sense now</span></div><div class="line" id="034246"><span class="nick" style="color:#d9d9d9"><a href="#034246" label="[03:42:46]">&lt;Hagfish&gt;</a></span><span class="message">achaninja: as for webasm, i haven't though about how that might fit in</span></div><div class="line" id="034247"><span class="nick" style="color:#6b8072"><a href="#034247" label="[03:42:47]">&lt;achaninja&gt;</a></span><span class="message">so just help or donate to whoever is doing that lol</span></div><div class="line" id="034353"><span class="nick" style="color:#234e69"><a href="#034353" label="[03:43:53]">&lt;muurkha&gt;</a></span><span class="message">I've been looking at wasm a bit</span></div><div class="line" id="034405"><span class="nick" style="color:#6b8072"><a href="#034405" label="[03:44:05]">&lt;achaninja&gt;</a></span><span class="message">i guess it doesn't help that much - i suppose it would serve the purpose that mes currently serves</span></div><div class="line" id="034421"><span class="nick" style="color:#6b8072"><a href="#034421" label="[03:44:21]">&lt;achaninja&gt;</a></span><span class="message">a platform neutral programming environment</span></div><div class="line" id="034433"><span class="nick" style="color:#234e69"><a href="#034433" label="[03:44:33]">&lt;muurkha&gt;</a></span><span class="message">wasm isn't platform-neutral any more than Linux is</span></div><div class="line" id="034446"><span class="nick" style="color:#d9d9d9"><a href="#034446" label="[03:44:46]">&lt;Hagfish&gt;</a></span><span class="message">that's an interesting idea though</span></div><div class="line" id="034507"><span class="nick" style="color:#234e69"><a href="#034507" label="[03:45:07]">&lt;muurkha&gt;</a></span><span class="message">I mean it runs on lots of platforms but that doesn't mean you have less platforms, it means you have one more</span></div><div class="line" id="034519"><span class="nick" style="color:#6b8072"><a href="#034519" label="[03:45:19]">&lt;achaninja&gt;</a></span><span class="message">muurkha: if you had a wasi implementation in m2 it absolutely would be</span></div><div class="line" id="034548"><span class="nick" style="color:#234e69"><a href="#034548" label="[03:45:48]">&lt;muurkha&gt;</a></span><span class="message">well, wasi and also wasm</span></div><div class="line" id="034603"><span class="nick" style="color:#6b8072"><a href="#034603" label="[03:46:03]">&lt;achaninja&gt;</a></span><span class="message">but i guess its not as useful as mes thinking more</span></div><div class="line" id="034645"><span class="nick" style="color:#234e69"><a href="#034645" label="[03:46:45]">&lt;muurkha&gt;</a></span><span class="message">implementing a bootstrapping virtual machine might be a useful thing to do but it probably shouldn't be wasm.  it could reasonably be a small subset of wasm and then you could run its executables (&quot;modules&quot;) on a regular wasm implementation</span></div><div class="line" id="034718"><span class="nick" style="color:#234e69"><a href="#034718" label="[03:47:18]">&lt;muurkha&gt;</a></span><span class="message">the other night I think we were talking about bf and a slightly extended version of it called &quot;sf&quot;, who was that?</span></div><div class="line" id="034818"><span class="nick" style="color:#234e69"><a href="#034818" label="[03:48:18]">&lt;muurkha&gt;</a></span><span class="message">something like Chifir might have a better cost/benefit ratio though</span></div><div class="line" id="034828"><span class="nick" style="color:#6b8072"><a href="#034828" label="[03:48:28]">&lt;achaninja&gt;</a></span><span class="message">haha i dunno if using bf helps readability at all</span></div><div class="line" id="034847"><span class="nick" style="color:#6b8072"><a href="#034847" label="[03:48:47]">&lt;achaninja&gt;</a></span><span class="message">the point is for each layer to be more readable than the last too</span></div><div class="line" id="034859"><span class="nick" style="color:#234e69"><a href="#034859" label="[03:48:59]">&lt;muurkha&gt;</a></span><span class="message">yeah, I don't think bf is very readable</span></div><div class="line" id="034859"><span class="nick" style="color:#6b8072"><a href="#034859" label="[03:48:59]">&lt;achaninja&gt;</a></span><span class="message">otherwise we could just compiled gcc with -S</span></div><div class="line" id="034904"><span class="nick" style="color:#234e69"><a href="#034904" label="[03:49:04]">&lt;muurkha&gt;</a></span><span class="message">Chifir: <a rel="nofollow" href="http://www.vpri.org/pdf/tr2015004_cuneiform.pdf">http://www.vpri.org/pdf/tr2015004_cuneiform.pdf</a> </span></div><div class="line" id="034907"><span class="nick" style="color:#6b8072"><a href="#034907" label="[03:49:07]">&lt;achaninja&gt;</a></span><span class="message">checkin the assembly</span></div><div class="line" id="034910"><span class="nick" style="color:#6b8072"><a href="#034910" label="[03:49:10]">&lt;achaninja&gt;</a></span><span class="message">and call it a day</span></div><div class="line" id="035033"><span class="nick" style="color:#234e69"><a href="#035033" label="[03:50:33]">&lt;muurkha&gt;</a></span><span class="message">another VM similar to Chifir which has been implemented by more people is the UM of the Cult of the Bound Variable</span></div><div class="line" id="035046"><span class="nick" style="color:#234e69"><a href="#035046" label="[03:50:46]">&lt;muurkha&gt;</a></span><span class="message">it's maybe a little more practical, though maybe less readable</span></div><div class="line" id="035210"><span class="nick" style="color:#6b8072"><a href="#035210" label="[03:52:10]">&lt;achaninja&gt;</a></span><span class="message">is there a way to donate directly to mescc?</span></div><div class="line" id="035227"><span class="nick" style="color:#bc80bd"><a href="#035227" label="[03:52:27]">&lt;dnm&gt;</a></span><span class="message">Possibly my favorite ICFP contest</span></div><div class="line" id="035308"><span class="nick" style="color:#234e69"><a href="#035308" label="[03:53:08]">&lt;muurkha&gt;</a></span><span class="message">there's another RISC that's also probably wirth mentioning</span></div><div class="line" id="035332"><span class="nick" style="color:#234e69"><a href="#035332" label="[03:53:32]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://people.inf.ethz.ch/wirth/FPGA-relatedWork/index.html">https://people.inf.ethz.ch/wirth/FPGA-relatedWork/index.html</a> </span></div><div class="line" id="035334"><span class="nick" style="color:#bc80bd"><a href="#035334" label="[03:53:34]">&lt;dnm&gt;</a></span><span class="message">Wirth's RISC5? (as distinct from RISC-V) Or another?</span></div><div class="line" id="035336"><span class="nick" style="color:#bc80bd"><a href="#035336" label="[03:53:36]">&lt;dnm&gt;</a></span><span class="message">Yeah</span></div><div class="line" id="035432"><span class="nick" style="color:#bc80bd"><a href="#035432" label="[03:54:32]">&lt;dnm&gt;</a></span><span class="message">I should pay more attention to this channel. Here's me trying to do that. :)</span></div><div class="line" id="035505"><span class="nick" style="color:#234e69"><a href="#035505" label="[03:55:05]">&lt;muurkha&gt;</a></span><span class="message">I don't think any of Chifir, UM, or Wirth-the-RISC are adequate for *archival* (Chifir's purpose) but for *bootstrapping* they should all be fine</span></div><div class="line" id="035703"><span class="nick" style="color:#234e69"><a href="#035703" label="[03:57:03]">&lt;muurkha&gt;</a></span><span class="message">here are my notes on that topic from 02018 and 02019: <a rel="nofollow" href="https://dercuano.github.io/notes/bootstrapping-instruction-set.html">https://dercuano.github.io/notes/bootstrapping-instruction-set.html</a> </span></div><div class="line" id="035859"><span class="nick" style="color:#234e69"><a href="#035859" label="[03:58:59]">&lt;muurkha&gt;</a></span><span class="message">not sure if XCHG <a rel="nofollow" href="https://dercuano.github.io/notes/xchg-machine.html">https://dercuano.github.io/notes/xchg-machine.html</a>  or Dontmove <a rel="nofollow" href="https://dercuano.github.io/notes/dontmove.html">https://dercuano.github.io/notes/dontmove.html</a>  are good designs.  they might be</span></div><div class="line" id="040647"><span class="nick" style="color:#234e69"><a href="#040647" label="[04:06:47]">&lt;muurkha&gt;</a></span><span class="message">or Calculus Vaporis: <a rel="nofollow" href="https://github.com/kragen/calculusvaporis">https://github.com/kragen/calculusvaporis</a> </span></div><div class="line" id="040755"><span class="nick" style="color:#234e69"><a href="#040755" label="[04:07:55]">&lt;muurkha&gt;</a></span><span class="message">none of the three are as unreadable as BF, I think, but they still all require uncomfortably circuitous forms of programming</span></div><div class="line" id="040846"><span class="nick" style="color:#3c5b35"><a href="#040846" label="[04:08:46]">*</a></span><span class="message">dnm makes a note to go read the Chifir paper from VPRI</span></div><div class="line" id="040856"><span class="nick" style="color:#234e69"><a href="#040856" label="[04:08:56]">&lt;muurkha&gt;</a></span><span class="message">it's a pleasure to read</span></div><div class="line" id="040946"><span class="nick" style="color:#bc80bd"><a href="#040946" label="[04:09:46]">&lt;dnm&gt;</a></span><span class="message">I have some initial reactions to your Bootstrapping instruction set page, but I feel I should check those and maybe test them first before I toss largely unformed thoughts and feelings out there.</span></div><div class="line" id="040957"><span class="nick" style="color:#bc80bd"><a href="#040957" label="[04:09:57]">&lt;dnm&gt;</a></span><span class="message">And part of that means I should read the paper. ;)</span></div><div class="line" id="041002"><span class="nick" style="color:#234e69"><a href="#041002" label="[04:10:02]">&lt;muurkha&gt;</a></span><span class="message">oh, I'd be interested to hear your unformed thoughts too ;)</span></div><div class="line" id="041023"><span class="nick" style="color:#bc80bd"><a href="#041023" label="[04:10:23]">&lt;dnm&gt;</a></span><span class="message">Nah, I wouldn't; they wouldn't stand up to any inspection or pressure.</span></div><div class="line" id="041057"><span class="nick" style="color:#bc80bd"><a href="#041057" label="[04:10:57]">&lt;dnm&gt;</a></span><span class="message">At a minimum, I need to understand the original goal Chifir's nominally shooting for.</span></div><div class="line" id="041102"><span class="nick" style="color:#234e69"><a href="#041102" label="[04:11:02]">&lt;muurkha&gt;</a></span><span class="message">it might be worth mentioning that Olof Kindgren wrote a RISC-V implementation in a bit over 200 4-LUTs, which is about the same size as Calculus Vaporis: <a rel="nofollow" href="https://github.com/olofk/serv">https://github.com/olofk/serv</a> </span></div><div class="line" id="041158"><span class="nick" style="color:#bc80bd"><a href="#041158" label="[04:11:58]">&lt;dnm&gt;</a></span><span class="message">I might disagree with you on preferences for register-based machines, video with SIMD, *no* undefined behavior, etc.</span></div><div class="line" id="041218"><span class="nick" style="color:#bc80bd"><a href="#041218" label="[04:12:18]">&lt;dnm&gt;</a></span><span class="message">But I don't necessarily have good, articulable, well-thought out reasons for those yet.</span></div><div class="line" id="041222"><span class="nick" style="color:#234e69"><a href="#041222" label="[04:12:22]">&lt;muurkha&gt;</a></span><span class="message">Chifir's goal is to make a physical artifact which, if discovered by a programmer-archaeologist a few centuries in the future when computer architectures are quite different, will enable her to get Smalltalk-76 running on whatever computer hardware she's using in a fun afternoon hack</span></div><div class="line" id="041303"><span class="nick" style="color:#234e69"><a href="#041303" label="[04:13:03]">&lt;muurkha&gt;</a></span><span class="message">Chifir doesn't have registers in the sense of accumulators, it's entirely a memory-to-memory design</span></div><div class="line" id="041337"><span class="nick" style="color:#234e69"><a href="#041337" label="[04:13:37]">&lt;muurkha&gt;</a></span><span class="message">on Chifir code density suffers and you need self-modifying code for indexed memory access</span></div><div class="line" id="041347"><span class="nick" style="color:#bc80bd"><a href="#041347" label="[04:13:47]">&lt;dnm&gt;</a></span><span class="message">As an aside: one could argue about the real difference for this sort of purpose between the parts of RISC-V you'd actually implement and DLX, but if we bucket those as more or less the same thing, we could compare them to other approaches.</span></div><div class="line" id="041357"><span class="nick" style="color:#234e69"><a href="#041357" label="[04:13:57]">&lt;muurkha&gt;</a></span><span class="message">DLX?</span></div><div class="line" id="041415"><span class="nick" style="color:#bc80bd"><a href="#041415" label="[04:14:15]">&lt;dnm&gt;</a></span><span class="message">See, no one remembers the &quot;classics&quot; (I say partially in jest). ;P</span></div><div class="line" id="041427"><span class="nick" style="color:#bc80bd"><a href="#041427" label="[04:14:27]">&lt;dnm&gt;</a></span><span class="message">muurkha: <a rel="nofollow" href="https://en.wikipedia.org/wiki/DLX">https://en.wikipedia.org/wiki/DLX</a> </span></div><div class="line" id="041503"><span class="nick" style="color:#234e69"><a href="#041503" label="[04:15:03]">&lt;muurkha&gt;</a></span><span class="message">sounds very similar to RISC-V</span></div><div class="line" id="041515"><span class="nick" style="color:#2e2a4a"><a href="#041515" label="[04:15:15]">&lt;oriansj&gt;</a></span><span class="message">well as someone with a good bit of bootstrapping in assembly experience, I must say an architecture with 4 registers+sp+pc is good enough to do some rather complex things simply</span></div><div class="line" id="041526"><span class="nick" style="color:#bc80bd"><a href="#041526" label="[04:15:26]">&lt;dnm&gt;</a></span><span class="message">Yep. I mean inasmuch as RISC-V is basically MIPS, and DLX is a simplified MIPS... ;)</span></div><div class="line" id="041615"><span class="nick" style="color:#234e69"><a href="#041615" label="[04:16:15]">&lt;muurkha&gt;</a></span><span class="message">oriansj: yup!</span></div><div class="line" id="041632"><span class="nick" style="color:#2e2a4a"><a href="#041632" label="[04:16:32]">&lt;oriansj&gt;</a></span><span class="message">the max instruction is just an optimization that isn't needed in bootstrapping</span></div><div class="line" id="041719"><span class="nick" style="color:#234e69"><a href="#041719" label="[04:17:19]">&lt;muurkha&gt;</a></span><span class="message">dnm: RISC-V's I-type instructions have a 12-bit immediate instead of 16-bit</span></div><div class="line" id="041740"><span class="nick" style="color:#bc80bd"><a href="#041740" label="[04:17:40]">&lt;dnm&gt;</a></span><span class="message">Yep.</span></div><div class="line" id="041746"><span class="nick" style="color:#bc80bd"><a href="#041746" label="[04:17:46]">&lt;dnm&gt;</a></span><span class="message">Actually, y'know what?</span></div><div class="line" id="041803"><span class="nick" style="color:#2e2a4a"><a href="#041803" label="[04:18:03]">&lt;oriansj&gt;</a></span><span class="message">int32 and int8 memory operations are good enough (no need for int16 or uint16)</span></div><div class="line" id="041814"><span class="nick" style="color:#234e69"><a href="#041814" label="[04:18:14]">&lt;muurkha&gt;</a></span><span class="message">agreed, oriansj, that's what RISC-V does</span></div><div class="line" id="041834"><span class="nick" style="color:#234e69"><a href="#041834" label="[04:18:34]">&lt;muurkha&gt;</a></span><span class="message">RISC-V also has an instruction encoding that seems deliberately perverse at first glance in the interest of reducing fanout to speed up minimal-hardware-complexity implementations</span></div><div class="line" id="041859"><span class="nick" style="color:#bc80bd"><a href="#041859" label="[04:18:59]">&lt;dnm&gt;</a></span><span class="message">This is a *terrible* idea, but I was already kinda leaning somewhat this way anyway: I should repurpose at least one of Precursors I have(n't yet sold to shapr) towards a sort of bootstrap thing with their RISC-V implementation (at least to start), without using Xous and Rust and all that...</span></div><div class="line" id="042001"><span class="nick" style="color:#bc80bd"><a href="#042001" label="[04:20:01]">&lt;dnm&gt;</a></span><span class="message">Although that's maybe a bit afield from the VM conversation really.</span></div><div class="line" id="042004"><span class="nick" style="color:#bc80bd"><a href="#042004" label="[04:20:04]">&lt;dnm&gt;</a></span><span class="message">Anyway.</span></div><div class="line" id="042024"><span class="nick" style="color:#bc80bd"><a href="#042024" label="[04:20:24]">&lt;dnm&gt;</a></span><span class="message">Ooh, actually...</span></div><div class="line" id="042031"><span class="nick" style="color:#2e2a4a"><a href="#042031" label="[04:20:31]">&lt;oriansj&gt;</a></span><span class="message">dnm: the real question is would it be fun</span></div><div class="line" id="042035"><span class="nick" style="color:#234e69"><a href="#042035" label="[04:20:35]">&lt;muurkha&gt;</a></span><span class="message">dnm: for the same reason RISC-V has an S-type instruction for stores instead of the I-type used for loads</span></div><div class="line" id="042100"><span class="nick" style="color:#234e69"><a href="#042100" label="[04:21:00]">&lt;muurkha&gt;</a></span><span class="message">that way the destination register, if any, is always in the same place in the instruction</span></div><div class="line" id="042110"><span class="nick" style="color:#3c5b35"><a href="#042110" label="[04:21:10]">*</a></span><span class="message">dnm goes to look up the Unwhatever datasheet/spec again to remind what the debug connectors already populated are... </span></div><div class="line" id="042139"><span class="nick" style="color:#234e69"><a href="#042139" label="[04:21:39]">&lt;muurkha&gt;</a></span><span class="message">I think synthesizing some RISC-V open core into the Precursor's FPGA is a fantastic idea</span></div><div class="line" id="042145"><span class="nick" style="color:#bc80bd"><a href="#042145" label="[04:21:45]">&lt;dnm&gt;</a></span><span class="message">oriansj: True, and always a tricky one to answer</span></div><div class="line" id="042218"><span class="nick" style="color:#2e2a4a"><a href="#042218" label="[04:22:18]">&lt;oriansj&gt;</a></span><span class="message">dnm: and very heavily based on the people involved</span></div><div class="line" id="042238"><span class="nick" style="color:#bc80bd"><a href="#042238" label="[04:22:38]">&lt;dnm&gt;</a></span><span class="message">muurkha: Well they already have one. But yeah, I was thinking about that too, separately. But if you just wanted to start with RISC-V as your thing and work on the VM bit, you could just use theirs to start.</span></div><div class="line" id="042308"><span class="nick" style="color:#bc80bd"><a href="#042308" label="[04:23:08]">&lt;dnm&gt;</a></span><span class="message">I'm just thinking about RISC-V HW I already have without firing up ISE, Quartus, or Vivado. It's the SiFive stuff and the Precursors.</span></div><div class="line" id="042319"><span class="nick" style="color:#2e2a4a"><a href="#042319" label="[04:23:19]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well we do have risc-v (32+64) bootstrapped. it just becomes a question of getting a minimal RISC-V hardware implementation and getting it able to run the stage0 riscv work</span></div><div class="line" id="042337"><span class="nick" style="color:#234e69"><a href="#042337" label="[04:23:37]">&lt;muurkha&gt;</a></span><span class="message">oriansj: yeah!</span></div><div class="line" id="042415"><span class="nick" style="color:#234e69"><a href="#042415" label="[04:24:15]">&lt;muurkha&gt;</a></span><span class="message">dnm: yeah.  and Jessica Clarke pointed out that if you're just using RISC-V as a software-implemented virtual machine, you don't need to shuffle the bitfields the way RISC-V does</span></div><div class="line" id="042438"><span class="nick" style="color:#234e69"><a href="#042438" label="[04:24:38]">&lt;muurkha&gt;</a></span><span class="message">I mean there's no percentage in it</span></div><div class="line" id="042440"><span class="nick" style="color:#bc80bd"><a href="#042440" label="[04:24:40]">&lt;dnm&gt;</a></span><span class="message">Unmatched, that's what it's called. I never remember.</span></div><div class="line" id="042450"><span class="nick" style="color:#234e69"><a href="#042450" label="[04:24:50]">&lt;muurkha&gt;</a></span><span class="message">SiFive board names are hard to remember</span></div><div class="line" id="042500"><span class="nick" style="color:#bc80bd"><a href="#042500" label="[04:25:00]">&lt;dnm&gt;</a></span><span class="message">Yeah. I have plenty of RISC-V gripes of varying degrees.</span></div><div class="line" id="042506"><span class="nick" style="color:#bc80bd"><a href="#042506" label="[04:25:06]">&lt;dnm&gt;</a></span><span class="message">But hey, whatever.</span></div><div class="line" id="042524"><span class="nick" style="color:#234e69"><a href="#042524" label="[04:25:24]">&lt;muurkha&gt;</a></span><span class="message">IIRC there's at least one RISC-V core that synthesizes fine with yosys/nextpnr and can run on an icestick</span></div><div class="line" id="042530"><span class="nick" style="color:#2e2a4a"><a href="#042530" label="[04:25:30]">&lt;oriansj&gt;</a></span><span class="message">dnm: everyone who looks closely at RISC-V have issues with it</span></div><div class="line" id="042552"><span class="nick" style="color:#bc80bd"><a href="#042552" label="[04:25:52]">&lt;dnm&gt;</a></span><span class="message">Everyone who looks closely at any ISA has issues with it.</span></div><div class="line" id="042601"><span class="nick" style="color:#bc80bd"><a href="#042601" label="[04:26:01]">&lt;dnm&gt;</a></span><span class="message">Tale as old as time.</span></div><div class="line" id="042716"><span class="nick" style="color:#2e2a4a"><a href="#042716" label="[04:27:16]">&lt;oriansj&gt;</a></span><span class="message">dnm: well yes. to love something means to see its flaws and to feel safe enough to speak openly about them.</span></div><div class="line" id="042752"><span class="nick" style="color:#234e69"><a href="#042752" label="[04:27:52]">&lt;muurkha&gt;</a></span><span class="message">heh, it's nice to see you mellowing on RISC-V :)</span></div><div class="line" id="042821"><span class="nick" style="color:#2e2a4a"><a href="#042821" label="[04:28:21]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well stikonas really saved me a great deal of pain and now it isn't so bad to work with</span></div><div class="line" id="043113"><span class="nick" style="color:#bc80bd"><a href="#043113" label="[04:31:13]">&lt;dnm&gt;</a></span><span class="message">Hrm...</span></div><div class="line" id="043124"><span class="nick" style="color:#bc80bd"><a href="#043124" label="[04:31:24]">&lt;dnm&gt;</a></span><span class="message">I *think* this will work, but need to do more digging &amp; reading.</span></div><div class="line" id="043129"><span class="nick" style="color:#234e69"><a href="#043129" label="[04:31:29]">&lt;muurkha&gt;</a></span><span class="message">?</span></div><div class="line" id="043132"><span class="nick" style="color:#bc80bd"><a href="#043132" label="[04:31:32]">&lt;dnm&gt;</a></span><span class="message">OK, anyway, that was kind of a tangent.</span></div><div class="line" id="043137"><span class="nick" style="color:#234e69"><a href="#043137" label="[04:31:37]">&lt;muurkha&gt;</a></span><span class="message">dnm: reading the Symbolics 3600 instruction set papers the other week I was thinking it might be interesting to try something in that direction on a modern FPGA</span></div><div class="line" id="043204"><span class="nick" style="color:#bc80bd"><a href="#043204" label="[04:32:04]">&lt;dnm&gt;</a></span><span class="message">Ah, a dream I've occasionally returned to over the last ~20 years or so.</span></div><div class="line" id="043213"><span class="nick" style="color:#bc80bd"><a href="#043213" label="[04:32:13]">&lt;dnm&gt;</a></span><span class="message">I'm sure it's eminently doable really, Just a lot of work.</span></div><div class="line" id="043235"><span class="nick" style="color:#2e2a4a"><a href="#043235" label="[04:32:35]">&lt;oriansj&gt;</a></span><span class="message">dnm: nothing worth doing is easy</span></div><div class="line" id="043242"><span class="nick" style="color:#bc80bd"><a href="#043242" label="[04:32:42]">&lt;dnm&gt;</a></span><span class="message">Though I was thinking more Ivory class machines, but same diff.</span></div><div class="line" id="043254"><span class="nick" style="color:#234e69"><a href="#043254" label="[04:32:54]">&lt;muurkha&gt;</a></span><span class="message">have you found ISA-level docs on them?</span></div><div class="line" id="043301"><span class="nick" style="color:#bc80bd"><a href="#043301" label="[04:33:01]">&lt;dnm&gt;</a></span><span class="message">i.e., just implement the Ivory VLM in RTL</span></div><div class="line" id="043303"><span class="nick" style="color:#bc80bd"><a href="#043303" label="[04:33:03]">&lt;dnm&gt;</a></span><span class="message">&quot;just&quot;</span></div><div class="line" id="043306"><span class="nick" style="color:#234e69"><a href="#043306" label="[04:33:06]">&lt;muurkha&gt;</a></span><span class="message">haha</span></div><div class="line" id="043314"><span class="nick" style="color:#234e69"><a href="#043314" label="[04:33:14]">&lt;muurkha&gt;</a></span><span class="message">might be less work with something like Migen or Bluespec than it would be in Verilog</span></div><div class="line" id="043324"><span class="nick" style="color:#bc80bd"><a href="#043324" label="[04:33:24]">&lt;dnm&gt;</a></span><span class="message">Maybe.</span></div><div class="line" id="043335"><span class="nick" style="color:#bc80bd"><a href="#043335" label="[04:33:35]">&lt;dnm&gt;</a></span><span class="message">Doubt that would be the hard part regardless.</span></div><div class="line" id="043352"><span class="nick" style="color:#bc80bd"><a href="#043352" label="[04:33:52]">&lt;dnm&gt;</a></span><span class="message">oriansj: Totally agreed.</span></div><div class="line" id="043421"><span class="nick" style="color:#234e69"><a href="#043421" label="[04:34:21]">&lt;muurkha&gt;</a></span><span class="message">watering the plants is worth doing</span></div><div class="line" id="043432"><span class="nick" style="color:#bc80bd"><a href="#043432" label="[04:34:32]">&lt;dnm&gt;</a></span><span class="message">(Well, maybe not *totally*, but yeah, I get the sentiment)</span></div><div class="line" id="043439"><span class="nick" style="color:#bc80bd"><a href="#043439" label="[04:34:39]">&lt;dnm&gt;</a></span><span class="message">Hah, Kragen beat me to it.</span></div><div class="line" id="043444"><span class="nick" style="color:#234e69"><a href="#043444" label="[04:34:44]">&lt;muurkha&gt;</a></span><span class="message">breathing, too</span></div><div class="line" id="043508"><span class="nick" style="color:#234e69"><a href="#043508" label="[04:35:08]">&lt;muurkha&gt;</a></span><span class="message">but I get what you mean</span></div><div class="line" id="043539"><span class="nick" style="color:#2e2a4a"><a href="#043539" label="[04:35:39]">&lt;oriansj&gt;</a></span><span class="message">muurkha: minor bug fixes too if we want to start undermining the perspective</span></div><div class="line" id="043602"><span class="nick" style="color:#bc80bd"><a href="#043602" label="[04:36:02]">&lt;dnm&gt;</a></span><span class="message">Hrm.</span></div><div class="line" id="043609"><span class="nick" style="color:#2e2a4a"><a href="#043609" label="[04:36:09]">&lt;oriansj&gt;</a></span><span class="message">those are super important to making real progress</span></div><div class="line" id="043628"><span class="nick" style="color:#234e69"><a href="#043628" label="[04:36:28]">&lt;muurkha&gt;</a></span><span class="message">oh shit</span></div><div class="line" id="043650"><span class="nick" style="color:#3c5b35"><a href="#043650" label="[04:36:50]">*</a></span><span class="message">dnm idly wonders how to get some nominal amount of funding to do some of this stuff, probably thinking that way just because he just remembered to file state business tax filings (&quot;no revenue&quot;) earlier today.</span></div><div class="line" id="043708"><span class="nick" style="color:#bc80bd"><a href="#043708" label="[04:37:08]">&lt;dnm&gt;</a></span><span class="message">Not that funding is at all required.</span></div><div class="line" id="043709"><span class="nick" style="color:#234e69"><a href="#043709" label="[04:37:09]">&lt;muurkha&gt;</a></span><span class="message">yesterday I was chatting with a guy who was using a thing called PVS for some parser synthesis</span></div><div class="line" id="043713"><span class="nick" style="color:#bc80bd"><a href="#043713" label="[04:37:13]">&lt;dnm&gt;</a></span><span class="message">But would make it nice.</span></div><div class="line" id="043717"><span class="nick" style="color:#234e69"><a href="#043717" label="[04:37:17]">&lt;muurkha&gt;</a></span><span class="message">working on this project I've been working on</span></div><div class="line" id="043732"><span class="nick" style="color:#bc80bd"><a href="#043732" label="[04:37:32]">&lt;dnm&gt;</a></span><span class="message">The prover?</span></div><div class="line" id="043737"><span class="nick" style="color:#234e69"><a href="#043737" label="[04:37:37]">&lt;muurkha&gt;</a></span><span class="message">yeah</span></div><div class="line" id="043742"><span class="nick" style="color:#bc80bd"><a href="#043742" label="[04:37:42]">&lt;dnm&gt;</a></span><span class="message">Or the static source code analyzer?</span></div><div class="line" id="043743"><span class="nick" style="color:#bc80bd"><a href="#043743" label="[04:37:43]">&lt;dnm&gt;</a></span><span class="message">Ah</span></div><div class="line" id="043749"><span class="nick" style="color:#234e69"><a href="#043749" label="[04:37:49]">&lt;muurkha&gt;</a></span><span class="message">coincidentally PVS is mentioned in the DLX page on WP so I followed the link</span></div><div class="line" id="043749"><span class="nick" style="color:#2e2a4a"><a href="#043749" label="[04:37:49]">&lt;oriansj&gt;</a></span><span class="message">dnm: you might want to talk to janneke as he did get funding for this work</span></div><div class="line" id="043752"><span class="nick" style="color:#bc80bd"><a href="#043752" label="[04:37:52]">&lt;dnm&gt;</a></span><span class="message">Yeah</span></div><div class="line" id="043757"><span class="nick" style="color:#bc80bd"><a href="#043757" label="[04:37:57]">&lt;dnm&gt;</a></span><span class="message">muurkha: I dug all that up years ago</span></div><div class="line" id="043802"><span class="nick" style="color:#bc80bd"><a href="#043802" label="[04:38:02]">&lt;dnm&gt;</a></span><span class="message">The work in germany at that uni</span></div><div class="line" id="043808"><span class="nick" style="color:#bc80bd"><a href="#043808" label="[04:38:08]">&lt;dnm&gt;</a></span><span class="message">On the DLX clone/variant</span></div><div class="line" id="043811"><span class="nick" style="color:#bc80bd"><a href="#043811" label="[04:38:11]">&lt;dnm&gt;</a></span><span class="message">That they verified</span></div><div class="line" id="043823"><span class="nick" style="color:#bc80bd"><a href="#043823" label="[04:38:23]">&lt;dnm&gt;</a></span><span class="message">Glad you found it and had that reaction!</span></div><div class="line" id="043827"><span class="nick" style="color:#234e69"><a href="#043827" label="[04:38:27]">&lt;muurkha&gt;</a></span><span class="message">guy named Shankar, nice guy, doing good work</span></div><div class="line" id="043829"><span class="nick" style="color:#bc80bd"><a href="#043829" label="[04:38:29]">&lt;dnm&gt;</a></span><span class="message">Assuming that's what you're gonna say</span></div><div class="line" id="043836"><span class="nick" style="color:#bc80bd"><a href="#043836" label="[04:38:36]">&lt;dnm&gt;</a></span><span class="message">I could be totally wrong</span></div><div class="line" id="043843"><span class="nick" style="color:#234e69"><a href="#043843" label="[04:38:43]">&lt;muurkha&gt;</a></span><span class="message">on the Wikipedia page for PVS it cites a paper on PVS from 01992</span></div><div class="line" id="043854"><span class="nick" style="color:#234e69"><a href="#043854" label="[04:38:54]">&lt;muurkha&gt;</a></span><span class="message">by Owre, Shankar, Rushby</span></div><div class="line" id="043906"><span class="nick" style="color:#bc80bd"><a href="#043906" label="[04:39:06]">&lt;dnm&gt;</a></span><span class="message">Oh, maybe I jumped the gun</span></div><div class="line" id="043918"><span class="nick" style="color:#234e69"><a href="#043918" label="[04:39:18]">&lt;muurkha&gt;</a></span><span class="message">mouseover: &quot;Natarajan Shankar is a computer scientist working at SRI International in Menlo Park, California, where he leads the Symbolic Analysis Laboratory.&quot;</span></div><div class="line" id="043928"><span class="nick" style="color:#234e69"><a href="#043928" label="[04:39:28]">&lt;muurkha&gt;</a></span><span class="message">uh wow</span></div><div class="line" id="043946"><span class="nick" style="color:#234e69"><a href="#043946" label="[04:39:46]">&lt;muurkha&gt;</a></span><span class="message">advisors: boyer and moore</span></div><div class="line" id="044021"><span class="nick" style="color:#234e69"><a href="#044021" label="[04:40:21]">&lt;muurkha&gt;</a></span><span class="message">I'm retrospectively starstruck</span></div><div class="line" id="044033"><span class="nick" style="color:#bc80bd"><a href="#044033" label="[04:40:33]">&lt;dnm&gt;</a></span><span class="message">I'm surprised he hasn't decamped to Kestrel</span></div><div class="line" id="044037"><span class="nick" style="color:#234e69"><a href="#044037" label="[04:40:37]">&lt;muurkha&gt;</a></span><span class="message">hope I didn't say anything too arrogant</span></div><div class="line" id="044047"><span class="nick" style="color:#bc80bd"><a href="#044047" label="[04:40:47]">&lt;dnm&gt;</a></span><span class="message">Well, not really; I don't know him at all.</span></div><div class="line" id="044049"><span class="nick" style="color:#234e69"><a href="#044049" label="[04:40:49]">&lt;muurkha&gt;</a></span><span class="message">why, what's compelling about Kestrel?</span></div><div class="line" id="044119"><span class="nick" style="color:#bc80bd"><a href="#044119" label="[04:41:19]">&lt;dnm&gt;</a></span><span class="message">I only have unduly snarky answers. I should say the folks I've interacted with there seem to be doing interesting work, and doing it well.</span></div><div class="line" id="044129"><span class="nick" style="color:#234e69"><a href="#044129" label="[04:41:29]">&lt;muurkha&gt;</a></span><span class="message">haha</span></div><div class="line" id="044133"><span class="nick" style="color:#234e69"><a href="#044133" label="[04:41:33]">&lt;muurkha&gt;</a></span><span class="message">you didn't like PVS?</span></div><div class="line" id="044136"><span class="nick" style="color:#bc80bd"><a href="#044136" label="[04:41:36]">&lt;dnm&gt;</a></span><span class="message">But the undue snark begins with &quot;block&quot; and ends with &quot;chain&quot;.</span></div><div class="line" id="044139"><span class="nick" style="color:#bc80bd"><a href="#044139" label="[04:41:39]">&lt;dnm&gt;</a></span><span class="message">I like PVS fine.</span></div><div class="line" id="044146"><span class="nick" style="color:#bc80bd"><a href="#044146" label="[04:41:46]">&lt;dnm&gt;</a></span><span class="message">Kestrel *is* more of an ACL2 shop, also.</span></div><div class="line" id="044230"><span class="nick" style="color:#234e69"><a href="#044230" label="[04:42:30]">&lt;muurkha&gt;</a></span><span class="message">I'm glad I accepted his correction about when Schorre published META-II, I'd said 1968 or something, and he said it was actually the early 60s</span></div><div class="line" id="044314"><span class="nick" style="color:#bc80bd"><a href="#044314" label="[04:43:14]">&lt;dnm&gt;</a></span><span class="message">muurkha: So if you're interested, I did find the work that was published at one point as a book on a verified essentially DLX core, where that work was done in PVS of the era. I can unearth it out of my Downloads folder from a few years ago and post it somewhere.</span></div><div class="line" id="044324"><span class="nick" style="color:#234e69"><a href="#044324" label="[04:43:24]">&lt;muurkha&gt;</a></span><span class="message">sure!</span></div><div class="line" id="044358"><span class="nick" style="color:#bc80bd"><a href="#044358" label="[04:43:58]">&lt;dnm&gt;</a></span><span class="message">I had grandiose ideas/thoughts/dreams a few years back of trying to move the industry in a particular way with essentially a derivative thing of it.</span></div><div class="line" id="044413"><span class="nick" style="color:#bc80bd"><a href="#044413" label="[04:44:13]">&lt;dnm&gt;</a></span><span class="message">Back when I arguably gave more of a crap.</span></div><div class="line" id="044428"><span class="nick" style="color:#234e69"><a href="#044428" label="[04:44:28]">&lt;muurkha&gt;</a></span><span class="message">well, Waterman and Krstić did exactly that</span></div><div class="line" id="044551"><span class="nick" style="color:#bc80bd"><a href="#044551" label="[04:45:51]">&lt;dnm&gt;</a></span><span class="message">I wish I and others were successful internally in open sourcing some of the ACL2-related work we did on some ISA verification activity, but alas.</span></div><div class="line" id="044554"><span class="nick" style="color:#bc80bd"><a href="#044554" label="[04:45:54]">&lt;dnm&gt;</a></span><span class="message">Neither here nor there.</span></div><div class="line" id="045050"><span class="nick" style="color:#234e69"><a href="#045050" label="[04:50:50]">&lt;muurkha&gt;</a></span><span class="message">he also corrected me about the termination properties of PEG parsing</span></div><div class="line" id="045205"><span class="nick" style="color:#234e69"><a href="#045205" label="[04:52:05]">&lt;muurkha&gt;</a></span><span class="message">because it's undecidable whether a PEG nonterminal can match the empty string, it's also undecidable whether a PEG is secretly left-recursive, which means it's undecidable whether it can loop infinitely</span></div><div class="line" id="045238"><span class="nick" style="color:#bc80bd"><a href="#045238" label="[04:52:38]">&lt;dnm&gt;</a></span><span class="message">Speaking of parsing, have an old, very hard-to-find paper (or at least, it was), courtesy of Ira Baxter (and less importantly, me, I guess): <a rel="nofollow" href="https://dnm.s3.amazonaws.com/DROP/McKeemanParallelLR82.pdf">https://dnm.s3.amazonaws.com/DROP/McKeemanParallelLR82.pdf</a> </span></div><div class="line" id="045257"><span class="nick" style="color:#234e69"><a href="#045257" label="[04:52:57]">&lt;muurkha&gt;</a></span><span class="message">I suspect that even if Shankar thought he could convert Kestrel to PVS (or that he'd be willing to invest his time in ACL2 instead), he'd have to take a demotion if he left SRI</span></div><div class="line" id="045313"><span class="nick" style="color:#234e69"><a href="#045313" label="[04:53:13]">&lt;muurkha&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="045352"><span class="nick" style="color:#bc80bd"><a href="#045352" label="[04:53:52]">&lt;dnm&gt;</a></span><span class="message">Doesn't everyone want those sweet sweet crypto consulting dollars?</span></div><div class="line" id="045418"><span class="nick" style="color:#234e69"><a href="#045418" label="[04:54:18]">&lt;muurkha&gt;</a></span><span class="message">he's been an SRI Fellow for 13 years</span></div><div class="line" id="045502"><span class="nick" style="color:#234e69"><a href="#045502" label="[04:55:02]">&lt;muurkha&gt;</a></span><span class="message">he's basically a tenured department chair at one of the most prestigious research institutions in the world</span></div><div class="line" id="045503"><span class="nick" style="color:#2e2a4a"><a href="#045503" label="[04:55:03]">&lt;oriansj&gt;</a></span><span class="message">dnm: my grant total of crypto contributations has been $10 from nixo and a series of death threats</span></div><div class="line" id="045506"><span class="nick" style="color:#bc80bd"><a href="#045506" label="[04:55:06]">&lt;dnm&gt;</a></span><span class="message">Kestrel's been an SRI spin off since '81, so what? 41 years? I know none of this matters.</span></div><div class="line" id="045513"><span class="nick" style="color:#2e2a4a"><a href="#045513" label="[04:55:13]">&lt;oriansj&gt;</a></span><span class="message">^grant^grand^</span></div><div class="line" id="045634"><span class="nick" style="color:#2e2a4a"><a href="#045634" label="[04:56:34]">&lt;oriansj&gt;</a></span><span class="message">as reward for *checks watch* 6 years of hard work and community building</span></div><div class="line" id="045741"><span class="nick" style="color:#2e2a4a"><a href="#045741" label="[04:57:41]">&lt;oriansj&gt;</a></span><span class="message">but outside of money, I have had lots of fun and got to spend time with lots of amazing people (of whom I would gladly call friend)</span></div><div class="line" id="045908"><span class="nick" style="color:#234e69"><a href="#045908" label="[04:59:08]">&lt;muurkha&gt;</a></span><span class="message">oriansj: &lt;3</span></div><div class="line" id="045914"><span class="nick" style="color:#6b8072"><a href="#045914" label="[04:59:14]">&lt;achaninja&gt;</a></span><span class="message">I saw the NLnet funding, that is cool, you demonstrated everything works and</span></div><div class="line" id="045935"><span class="nick" style="color:#6b8072"><a href="#045935" label="[04:59:35]">&lt;achaninja&gt;</a></span><span class="message">it seems some things sort of need the final tweaks</span></div><div class="line" id="045944"><span class="nick" style="color:#6b8072"><a href="#045944" label="[04:59:44]">&lt;achaninja&gt;</a></span><span class="message">but its really awesome</span></div><div class="line" id="050006"><span class="nick" style="color:#6b8072"><a href="#050006" label="[05:00:06]">&lt;achaninja&gt;</a></span><span class="message">well and the kernel is the new big thing</span></div><div class="line" id="050025"><span class="nick" style="color:#2e2a4a"><a href="#050025" label="[05:00:25]">&lt;oriansj&gt;</a></span><span class="message">achaninja: well bootstrapping is a marathon and there is no done to reach</span></div><div class="line" id="050038"><span class="nick" style="color:#6b8072"><a href="#050038" label="[05:00:38]">&lt;achaninja&gt;</a></span><span class="message">yeah</span></div><div class="line" id="050054"><span class="nick" style="color:#2e2a4a"><a href="#050054" label="[05:00:54]">&lt;oriansj&gt;</a></span><span class="message">there will always be new and exciting things to do and achieve and build and share</span></div><div class="line" id="050057"><span class="nick" style="color:#6b8072"><a href="#050057" label="[05:00:57]">&lt;achaninja&gt;</a></span><span class="message">i guess it can always be made faster and shorter</span></div><div class="line" id="050124"><span class="nick" style="color:#2e2a4a"><a href="#050124" label="[05:01:24]">&lt;oriansj&gt;</a></span><span class="message">achaninja: it can be made to suit *YOU*</span></div><div class="line" id="050137"><span class="nick" style="color:#2e2a4a"><a href="#050137" label="[05:01:37]">&lt;oriansj&gt;</a></span><span class="message">and the fun things you want to do</span></div><div class="line" id="050203"><span class="nick" style="color:#2e2a4a"><a href="#050203" label="[05:02:03]">&lt;oriansj&gt;</a></span><span class="message">If someone wants to pick up doing scheme in assembly to run Mescc, they can do it</span></div><div class="line" id="050233"><span class="nick" style="color:#2e2a4a"><a href="#050233" label="[05:02:33]">&lt;oriansj&gt;</a></span><span class="message">if someone wants to do a kernel in FORTH, go forth and create wonders</span></div><div class="line" id="050246"><span class="nick" style="color:#6b8072"><a href="#050246" label="[05:02:46]">&lt;achaninja&gt;</a></span><span class="message">I am most interested in improving mescc atm - though my scheme is pretty bad its gonna take a while before i can help</span></div><div class="line" id="050314"><span class="nick" style="color:#2e2a4a"><a href="#050314" label="[05:03:14]">&lt;oriansj&gt;</a></span><span class="message">if you just wanna play and learn; we encourage that too</span></div><div class="line" id="050346"><span class="nick" style="color:#6b8072"><a href="#050346" label="[05:03:46]">&lt;achaninja&gt;</a></span><span class="message">haha</span></div><div class="line" id="050407"><span class="nick" style="color:#6b8072"><a href="#050407" label="[05:04:07]">&lt;achaninja&gt;</a></span><span class="message">i don't really see a reason why mescc can't compile bitfields or 64 bit or anything else other than getting the funding/manpower</span></div><div class="line" id="050419"><span class="nick" style="color:#bc80bd"><a href="#050419" label="[05:04:19]">&lt;dnm&gt;</a></span><span class="message">Link to whatever mescc is?</span></div><div class="line" id="050434"><span class="nick" style="color:#bc80bd"><a href="#050434" label="[05:04:34]">&lt;dnm&gt;</a></span><span class="message">Sorry, I'm coming in cold.</span></div><div class="line" id="050440"><span class="nick" style="color:#2e2a4a"><a href="#050440" label="[05:04:40]">&lt;oriansj&gt;</a></span><span class="message">dnm: <a rel="nofollow" href="https://www.gnu.org/software/mes/">https://www.gnu.org/software/mes/</a> </span></div><div class="line" id="050443"><span class="nick" style="color:#6b8072"><a href="#050443" label="[05:04:43]">&lt;achaninja&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.gnu.org/software/mes/">https://www.gnu.org/software/mes/</a> </span></div><div class="line" id="050447"><span class="nick" style="color:#6b8072"><a href="#050447" label="[05:04:47]">&lt;achaninja&gt;</a></span><span class="message">its part of the mes project</span></div><div class="line" id="050450"><span class="nick" style="color:#bc80bd"><a href="#050450" label="[05:04:50]">&lt;dnm&gt;</a></span><span class="message">thx</span></div><div class="line" id="050454"><span class="nick" style="color:#6b8072"><a href="#050454" label="[05:04:54]">&lt;achaninja&gt;</a></span><span class="message">its a C compiler written in scheme</span></div><div class="line" id="050513"><span class="nick" style="color:#2e2a4a"><a href="#050513" label="[05:05:13]">&lt;oriansj&gt;</a></span><span class="message">that can build its own interpreter written in C</span></div><div class="line" id="050524"><span class="nick" style="color:#2e2a4a"><a href="#050524" label="[05:05:24]">&lt;oriansj&gt;</a></span><span class="message">and a modified version of TCC</span></div><div class="line" id="050550"><span class="nick" style="color:#2e2a4a"><a href="#050550" label="[05:05:50]">&lt;oriansj&gt;</a></span><span class="message">which enabled us to bridge the gap from hex to GCC+Guile</span></div><div class="line" id="050559"><span class="nick" style="color:#6b8072"><a href="#050559" label="[05:05:59]">&lt;achaninja&gt;</a></span><span class="message">a short and reliable path from assembly to scheme exists</span></div><div class="line" id="050606"><span class="nick" style="color:#6b8072"><a href="#050606" label="[05:06:06]">&lt;achaninja&gt;</a></span><span class="message">well short as in, it builds quickly</span></div><div class="line" id="050620"><span class="nick" style="color:#6b8072"><a href="#050620" label="[05:06:20]">&lt;achaninja&gt;</a></span><span class="message">the path from scheme to a fully functional C compiler works, but is a bit fiddly</span></div><div class="line" id="050651"><span class="nick" style="color:#6b8072"><a href="#050651" label="[05:06:51]">&lt;achaninja&gt;</a></span><span class="message">at least, from what I can see</span></div><div class="line" id="050654"><span class="nick" style="color:#2e2a4a"><a href="#050654" label="[05:06:54]">&lt;oriansj&gt;</a></span><span class="message">dnm: have you seen my talk notes yet?</span></div><div class="line" id="050701"><span class="nick" style="color:#bc80bd"><a href="#050701" label="[05:07:01]">&lt;dnm&gt;</a></span><span class="message">Nope</span></div><div class="line" id="050725"><span class="nick" style="color:#2e2a4a"><a href="#050725" label="[05:07:25]">&lt;oriansj&gt;</a></span><span class="message">you might enjoy: <a rel="nofollow" href="https://github.com/oriansj/talk-notes">https://github.com/oriansj/talk-notes</a> </span></div><div class="line" id="050802"><span class="nick" style="color:#2e2a4a"><a href="#050802" label="[05:08:02]">&lt;oriansj&gt;</a></span><span class="message">it is a little behind on details but the brush strokes are there</span></div><div class="line" id="050810"><span class="nick" style="color:#bc80bd"><a href="#050810" label="[05:08:10]">&lt;dnm&gt;</a></span><span class="message">thx</span></div><div class="line" id="050828"><span class="nick" style="color:#6b8072"><a href="#050828" label="[05:08:28]">&lt;achaninja&gt;</a></span><span class="message">oriansj: I also know the guys working on <a rel="nofollow" href="https://git.simple-cc.org/scc/">https://git.simple-cc.org/scc/</a> </span></div><div class="line" id="050841"><span class="nick" style="color:#6b8072"><a href="#050841" label="[05:08:41]">&lt;achaninja&gt;</a></span><span class="message">which aims to be a C compiler, linker, assembler and libc</span></div><div class="line" id="050938"><span class="nick" style="color:#6b8072"><a href="#050938" label="[05:09:38]">&lt;achaninja&gt;</a></span><span class="message">so i have quite a few experiments to run haha</span></div><div class="line" id="050944"><span class="nick" style="color:#6b8072"><a href="#050944" label="[05:09:44]">&lt;achaninja&gt;</a></span><span class="message">with different bootstrap paths</span></div><div class="line" id="051037"><span class="nick" style="color:#2e2a4a"><a href="#051037" label="[05:10:37]">&lt;oriansj&gt;</a></span><span class="message">achaninja: good because the more there are, the more places a trusting trust attack would have to deal with</span></div><div class="line" id="051255"><span class="nick" style="color:#6b8072"><a href="#051255" label="[05:12:55]">&lt;achaninja&gt;</a></span><span class="message">diverse n way compilation :D</span></div><div class="line" id="051508"><span class="nick" style="color:#2e2a4a"><a href="#051508" label="[05:15:08]">&lt;oriansj&gt;</a></span><span class="message">cross-platform reproducible diverse n way compilation with m way seed possiblity space</span></div><div class="line" id="051822"><span class="nick" style="color:#2e2a4a"><a href="#051822" label="[05:18:22]">&lt;oriansj&gt;</a></span><span class="message">I wonder if a formal proof of Trusting Trust impossibility can be created by us just making the problem space that much fun</span></div><div class="line" id="054407"><span class="nick" style="color:#6b8072"><a href="#054407" label="[05:44:07]">&lt;achaninja&gt;</a></span><span class="message">yeah, actually I'm not sure but maybe it is possible to prove it</span></div><div class="line" id="054435"><span class="nick" style="color:#6b8072"><a href="#054435" label="[05:44:35]">&lt;achaninja&gt;</a></span><span class="message">or at least define the assumptions that make it impossible</span></div><div class="line" id="115208"><span class="nick" style="color:#af8d2f"><a href="#115208" label="[11:52:08]">&lt;stikonas[m]&gt;</a></span><span class="message">achaninja: scc is in principle interesting but how are you going to build it?</span></div><div class="line" id="115332"><span class="nick" style="color:#af8d2f"><a href="#115332" label="[11:53:32]">&lt;stikonas[m]&gt;</a></span><span class="message">the problem is that we don't really have make this early, so one would have to write some kaem script</span></div><div class="line" id="115818"><span class="nick" style="color:#af8d2f"><a href="#115818" label="[11:58:18]">&lt;stikonas[m]&gt;</a></span><span class="message">mes also has a bit of this, but it's build script is much shorter and it was possible to write by hand. tcc is actually simpler in this regard because it's only 1 file to compile</span></div><div class="line" id="120040"><span class="nick" style="color:#6d2462"><a href="#120040" label="[12:00:40]">&lt;stikonas&gt;</a></span><span class="message">I guess building scc after make would probably be easy</span></div><div class="line" id="121350"><span class="nick" style="color:#6d2462"><a href="#121350" label="[12:13:50]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'm thinking about cleaning sysc /usr a bit. So instead of transfering the whole /usr from sysa, we can just reinstall only a subset of .tar.bz2 packages from sysa</span></div><div class="line" id="121445"><span class="nick" style="color:#6d2462"><a href="#121445" label="[12:14:45]">&lt;stikonas&gt;</a></span><span class="message">which would be manually specified as we don't need to transfer everything, i.e. stuff like tcc and some old versions of other software can be dropped</span></div><div class="line" id="122831"><span class="nick" style="color:#6d2462"><a href="#122831" label="[12:28:31]">&lt;stikonas&gt;</a></span><span class="message">achaninja: though if we build scc after make, it might still be immediately useful it we can use it to build heirloom-tools</span></div><div class="line" id="125916"><span class="nick" style="color:#6b8072"><a href="#125916" label="[12:59:16]">&lt;achaninja&gt;</a></span><span class="message">stikonas i would like to build things with mescc</span></div><div class="line" id="125919"><span class="nick" style="color:#6b8072"><a href="#125919" label="[12:59:19]">&lt;achaninja&gt;</a></span><span class="message">Make it unnessary, I can write my own build scripts</span></div><div class="line" id="125925"><span class="nick" style="color:#6b8072"><a href="#125925" label="[12:59:25]">&lt;achaninja&gt;</a></span><span class="message">using kaem</span></div><div class="line" id="125955"><span class="nick" style="color:#6b8072"><a href="#125955" label="[12:59:55]">&lt;achaninja&gt;</a></span><span class="message">make is*</span></div><div class="line" id="130015"><span class="nick" style="color:#6b8072"><a href="#130015" label="[13:00:15]">&lt;achaninja&gt;</a></span><span class="message">scc is not yet ready though, the linker is just a stup</span></div><div class="line" id="130018"><span class="nick" style="color:#6b8072"><a href="#130018" label="[13:00:18]">&lt;achaninja&gt;</a></span><span class="message">stub*</span></div><div class="line" id="130124"><span class="nick" style="color:#6b8072"><a href="#130124" label="[13:01:24]">&lt;achaninja&gt;</a></span><span class="message">My goal is basically to make tcc unnecssary</span></div><div class="line" id="130147"><span class="nick" style="color:#6b8072"><a href="#130147" label="[13:01:47]">&lt;achaninja&gt;</a></span><span class="message">for my uses, (forgive the typing, I'm on a bad keyboard)</span></div><div class="line" id="130217"><span class="nick" style="color:#6b8072"><a href="#130217" label="[13:02:17]">&lt;achaninja&gt;</a></span><span class="message">nothing against tcc, I just think an alternative would be cool</span></div><div class="line" id="130234"><span class="nick" style="color:#6b8072"><a href="#130234" label="[13:02:34]">&lt;achaninja&gt;</a></span><span class="message">especially a more capable alternative</span></div><div class="line" id="130557"><span class="nick" style="color:#389600"><a href="#130557" label="[13:05:57]">&lt;janneke&gt;</a></span><span class="message">#hu</span></div><div class="line" id="130609"><span class="nick" style="color:#389600"><a href="#130609" label="[13:06:09]">&lt;janneke&gt;</a></span><span class="message">oops</span></div><div class="line" id="132304"><span class="nick" style="color:#6d2462"><a href="#132304" label="[13:23:04]">&lt;stikonas&gt;</a></span><span class="message">oh, no linker yet. So do people use some other linker in the meantime? Or is it just not possible to do anything yet</span></div><div class="line" id="133329"><span class="nick" style="color:#6b8072"><a href="#133329" label="[13:33:29]">&lt;achaninja&gt;</a></span><span class="message">it uses the system linker atm</span></div><div class="line" id="133801"><span class="nick" style="color:#6b8072"><a href="#133801" label="[13:38:01]">&lt;achaninja&gt;</a></span><span class="message">its not more capable then tcc atm - it depends largely on what you are compiling and if you have an assembler/linker via other means</span></div><div class="line" id="133819"><span class="nick" style="color:#6b8072"><a href="#133819" label="[13:38:19]">&lt;achaninja&gt;</a></span><span class="message">I'm still working on some things to deal with that haha</span></div><div class="line" id="135410"><span class="nick" style="color:#6d2462"><a href="#135410" label="[13:54:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, then you might need to wait for more capable linker. Very early bootstrap uses hex2 as a linker, so it's completely incompatible with other compilers not designed for hex2. Later tcc itself is used until binutils when we switch to its linker</span></div><div class="line" id="140956"><span class="nick" style="color:#6b8072"><a href="#140956" label="[14:09:56]">&lt;achaninja&gt;</a></span><span class="message">Yeah I know</span></div><div class="line" id="141017"><span class="nick" style="color:#6b8072"><a href="#141017" label="[14:10:17]">&lt;achaninja&gt;</a></span><span class="message">I might be able to implement the things I need</span></div><div class="line" id="143816"><span class="nick" style="color:#8dd3c7"><a href="#143816" label="[14:38:16]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah, that sounds reasonable to me</span></div><div class="line" id="143834"><span class="nick" style="color:#8dd3c7"><a href="#143834" label="[14:38:34]">&lt;fossy&gt;</a></span><span class="message">i would like to just install tar/bash and reinstall the packages in sysc rather than transfer /usr, that would be nice</span></div><div class="line" id="145620"><span class="nick" style="color:#6d2462"><a href="#145620" label="[14:56:20]">&lt;stikonas&gt;</a></span><span class="message">fossy: so we need tar bash and bzip2</span></div><div class="line" id="145635"><span class="nick" style="color:#6d2462"><a href="#145635" label="[14:56:35]">&lt;stikonas&gt;</a></span><span class="message">actually also gzip because we don't have any package for it</span></div><div class="line" id="145714"><span class="nick" style="color:#6d2462"><a href="#145714" label="[14:57:14]">&lt;stikonas&gt;</a></span><span class="message">I have some early code but having some issue</span></div><div class="line" id="145749"><span class="nick" style="color:#6d2462"><a href="#145749" label="[14:57:49]">&lt;stikonas&gt;</a></span><span class="message">somehow autoconf does not work (or to be more precise autom4te-2.61)</span></div><div class="line" id="145857"><span class="nick" style="color:#6d2462"><a href="#145857" label="[14:58:57]">&lt;stikonas&gt;</a></span><span class="message">fossy: <a rel="nofollow" href="https://paste.debian.net/1240176/">https://paste.debian.net/1240176/</a> </span></div><div class="line" id="145900"><span class="nick" style="color:#6d2462"><a href="#145900" label="[14:59:00]">&lt;stikonas&gt;</a></span><span class="message">any ideas?</span></div><div class="line" id="150029"><span class="nick" style="color:#6d2462"><a href="#150029" label="[15:00:29]">&lt;stikonas&gt;</a></span><span class="message">it comes from <a rel="nofollow" href="https://git.savannah.gnu.org/gitweb/?p=autoconf.git;a=blob;f=bin/autom4te.in;h=7ebe419c2f0179155d1cf0d3ea68ee7ec49c755b;hb=HEAD#l96">https://git.savannah.gnu.org/gitweb/?p=autoconf.git;a=blob;f=bin/autom4te.in;h=7ebe419c2f0179155d1cf0d3ea68ee7ec49c755b;hb=HEAD#l96</a> </span></div><div class="line" id="150044"><span class="nick" style="color:#6d2462"><a href="#150044" label="[15:00:44]">&lt;stikonas&gt;</a></span><span class="message">but I don't see why...</span></div><div class="line" id="150044"><span class="nick" style="color:#6d2462"><a href="#150044" label="[15:00:44]">&lt;stikonas&gt;</a></span><span class="message">I did install grep package</span></div><div class="line" id="150057"><span class="nick" style="color:#6d2462"><a href="#150057" label="[15:00:57]">&lt;stikonas&gt;</a></span><span class="message">and device nodes are populated</span></div><div class="line" id="150911"><span class="nick" style="color:#8dd3c7"><a href="#150911" label="[15:09:11]">&lt;fossy&gt;</a></span><span class="message">ummm....</span></div><div class="line" id="150916"><span class="nick" style="color:#8dd3c7"><a href="#150916" label="[15:09:16]">&lt;fossy&gt;</a></span><span class="message">m4 does point ot /usr/bin/m4</span></div><div class="line" id="150918"><span class="nick" style="color:#8dd3c7"><a href="#150918" label="[15:09:18]">&lt;fossy&gt;</a></span><span class="message">don</span></div><div class="line" id="150924"><span class="nick" style="color:#8dd3c7"><a href="#150924" label="[15:09:24]">&lt;fossy&gt;</a></span><span class="message">'t know where else it could...</span></div><div class="line" id="150959"><span class="nick" style="color:#6d2462"><a href="#150959" label="[15:09:59]">&lt;stikonas&gt;</a></span><span class="message">oh, that might be it</span></div><div class="line" id="151008"><span class="nick" style="color:#6d2462"><a href="#151008" label="[15:10:08]">&lt;stikonas&gt;</a></span><span class="message">/usr/src/bash-5.1/build/bash-5.1 # command -v m4</span></div><div class="line" id="151010"><span class="nick" style="color:#6d2462"><a href="#151010" label="[15:10:10]">&lt;stikonas&gt;</a></span><span class="message">/usr/sbin/m4</span></div><div class="line" id="151016"><span class="nick" style="color:#8dd3c7"><a href="#151016" label="[15:10:16]">&lt;fossy&gt;</a></span><span class="message">oh, yeah that'd do it</span></div><div class="line" id="151025"><span class="nick" style="color:#6d2462"><a href="#151025" label="[15:10:25]">&lt;stikonas&gt;</a></span><span class="message">though why does it only happen when installing from packages</span></div><div class="line" id="151040"><span class="nick" style="color:#8dd3c7"><a href="#151040" label="[15:10:40]">&lt;fossy&gt;</a></span><span class="message">because pre-package i made it transfer sbin over to bin at sysc</span></div><div class="line" id="151046"><span class="nick" style="color:#8dd3c7"><a href="#151046" label="[15:10:46]">&lt;fossy&gt;</a></span><span class="message">so it still did that after package</span></div><div class="line" id="151137"><span class="nick" style="color:#8dd3c7"><a href="#151137" label="[15:11:37]">&lt;fossy&gt;</a></span><span class="message">i guess we should just make usr/sbin symlink to usr/bin from as soon as we can</span></div><div class="line" id="151251"><span class="nick" style="color:#6d2462"><a href="#151251" label="[15:12:51]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll make a symlink as part of my changes</span></div><div class="line" id="151254"><span class="nick" style="color:#6d2462"><a href="#151254" label="[15:12:54]">&lt;stikonas&gt;</a></span><span class="message">let me test it first</span></div><div class="line" id="151338"><span class="nick" style="color:#6d2462"><a href="#151338" label="[15:13:38]">&lt;stikonas&gt;</a></span><span class="message">I'm installing coreutils first then sed then rest is in any order</span></div><div class="line" id="151346"><span class="nick" style="color:#6d2462"><a href="#151346" label="[15:13:46]">&lt;stikonas&gt;</a></span><span class="message">so I can make symlink after coreutils is done</span></div><div class="line" id="151434"><span class="nick" style="color:#6d2462"><a href="#151434" label="[15:14:34]">&lt;stikonas&gt;</a></span><span class="message">fossy: I also noticed something strange with automake, so I created an issue</span></div><div class="line" id="151506"><span class="nick" style="color:#6d2462"><a href="#151506" label="[15:15:06]">&lt;stikonas&gt;</a></span><span class="message">oh, we already have symlink</span></div><div class="line" id="151533"><span class="nick" style="color:#6d2462"><a href="#151533" label="[15:15:33]">&lt;stikonas&gt;</a></span><span class="message">&quot;/usr/bin/m4 --version&quot; also works</span></div><div class="line" id="151636"><span class="nick" style="color:#6d2462"><a href="#151636" label="[15:16:36]">&lt;stikonas&gt;</a></span><span class="message">it's actually installed to /usr/bin, so that's fine, not sure why command -v picked up sbin</span></div><div class="line" id="151725"><span class="nick" style="color:#2e2a4a"><a href="#151725" label="[15:17:25]">&lt;oriansj&gt;</a></span><span class="message">m4 really doesn't belong in /usr/sbin</span></div><div class="line" id="151753"><span class="nick" style="color:#6d2462"><a href="#151753" label="[15:17:53]">&lt;stikonas&gt;</a></span><span class="message">no, it is in bin</span></div><div class="line" id="151812"><span class="nick" style="color:#6d2462"><a href="#151812" label="[15:18:12]">&lt;stikonas&gt;</a></span><span class="message">it's just that `command -v` got confused by /usr/sbin -&gt; /usr/bin symlink</span></div><div class="line" id="152023"><span class="nick" style="color:#2e2a4a"><a href="#152023" label="[15:20:23]">&lt;oriansj&gt;</a></span><span class="message">I get symlinks from /bin -&gt;/usr/bin and /sbin -&gt; /usr/sbin but i don't get why link /usr/sbin -&gt; /usr/bin</span></div><div class="line" id="152443"><span class="nick" style="color:#6d2462"><a href="#152443" label="[15:24:43]">&lt;stikonas&gt;</a></span><span class="message">I think fossy created that symlink <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysc/run.sh#L23">https://github.com/fosslinux/live-bootstrap/blob/master/sysc/run.sh#L23</a> </span></div><div class="line" id="152650"><span class="nick" style="color:#6d2462"><a href="#152650" label="[15:26:50]">&lt;stikonas&gt;</a></span><span class="message">anyway, it's not the symlink that is breaking autom4te, something else</span></div><div class="line" id="152758"><span class="nick" style="color:#2e2a4a"><a href="#152758" label="[15:27:58]">&lt;oriansj&gt;</a></span><span class="message">ok then that is a minor mistake: <a rel="nofollow" href="https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html">https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html</a> </span></div><div class="line" id="152835"><span class="nick" style="color:#2e2a4a"><a href="#152835" label="[15:28:35]">&lt;oriansj&gt;</a></span><span class="message">bin and sbin are supposed to be kept separate for security and administration reasons</span></div><div class="line" id="152918"><span class="nick" style="color:#6d2462"><a href="#152918" label="[15:29:18]">&lt;stikonas&gt;</a></span><span class="message">well, it's somewhat less of an issue in tightly controlled environment</span></div><div class="line" id="152926"><span class="nick" style="color:#6d2462"><a href="#152926" label="[15:29:26]">&lt;stikonas&gt;</a></span><span class="message">but yeah, I don't think we need that symlink</span></div><div class="line" id="153300"><span class="nick" style="color:#2e2a4a"><a href="#153300" label="[15:33:00]">&lt;oriansj&gt;</a></span><span class="message">or even the sbin folder until you need to start making filesystems</span></div><div class="line" id="153432"><span class="nick" style="color:#2e2a4a"><a href="#153432" label="[15:34:32]">&lt;oriansj&gt;</a></span><span class="message">(or a new /sbin/init)</span></div><div class="line" id="153505"><span class="nick" style="color:#2e2a4a"><a href="#153505" label="[15:35:05]">&lt;oriansj&gt;</a></span><span class="message">(or mounting of filesystems)</span></div><div class="line" id="153517"><span class="nick" style="color:#6d2462"><a href="#153517" label="[15:35:17]">&lt;stikonas&gt;</a></span><span class="message">fossy: while looking at packages, I've also noticed that bzip2 package is broken</span></div><div class="line" id="153522"><span class="nick" style="color:#6d2462"><a href="#153522" label="[15:35:22]">&lt;stikonas&gt;</a></span><span class="message">it's empty</span></div><div class="line" id="153541"><span class="nick" style="color:#6d2462"><a href="#153541" label="[15:35:41]">&lt;stikonas&gt;</a></span><span class="message">let me open an issue, so that we don't forget</span></div><div class="line" id="161757"><span class="nick" style="color:#6d2462"><a href="#161757" label="[16:17:57]">&lt;stikonas&gt;</a></span><span class="message">hmm, something bad is happening when perl calls system command</span></div><div class="line" id="161807"><span class="nick" style="color:#6d2462"><a href="#161807" label="[16:18:07]">&lt;stikonas&gt;</a></span><span class="message">somehow pipes/redirections there are broken</span></div><div class="line" id="164004"><span class="nick" style="color:#6d2462"><a href="#164004" label="[16:40:04]">&lt;stikonas&gt;</a></span><span class="message">hmm, so it's indeed pipes...</span></div><div class="line" id="164018"><span class="nick" style="color:#6d2462"><a href="#164018" label="[16:40:18]">&lt;stikonas&gt;</a></span><span class="message">my $cmd = system(&quot;true | ls&quot;);</span></div><div class="line" id="164018"><span class="nick" style="color:#6d2462"><a href="#164018" label="[16:40:18]">&lt;stikonas&gt;</a></span><span class="message">print &quot;$cmd\n&quot;</span></div><div class="line" id="164018"><span class="nick" style="color:#6d2462"><a href="#164018" label="[16:40:18]">&lt;stikonas&gt;</a></span><span class="message">is already broken</span></div><div class="line" id="164020"><span class="nick" style="color:#6d2462"><a href="#164020" label="[16:40:20]">&lt;stikonas&gt;</a></span><span class="message">prints 65280 for me</span></div><div class="line" id="164044"><span class="nick" style="color:#6d2462"><a href="#164044" label="[16:40:44]">&lt;stikonas&gt;</a></span><span class="message">but works fine in bash</span></div><div class="line" id="180445"><span class="nick" style="color:#234e69"><a href="#180445" label="[18:04:45]">&lt;muurkha&gt;</a></span><span class="message">aha!  and in particular spw20.langsec.org/papers/parsley-langsec2020.pdf is the paper that describes the work Shankar was describing on Thursday (though two years ago)</span></div><div class="line" id="220522"><span class="nick">***</span><span class="message notice">bandali_ is now known as bandali</span></div><br /></div></body></html>