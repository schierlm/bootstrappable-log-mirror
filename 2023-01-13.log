<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-01-13.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="014743"><span class="nick" style="color:#389600"><a href="#014743" label="[01:47:43]">&lt;oriansj&gt;</a></span><span class="message">doras: actually I believe you probably could hit that stretch goal in 5 years with some help</span></div><div class="line" id="014954"><span class="nick" style="color:#8dd3c7"><a href="#014954" label="[01:49:54]">&lt;stikonas&gt;</a></span><span class="message">well, at least if you don't care about pregenerated files then bootstrapping buildstream dependencies is probably fairly simple</span></div><div class="line" id="015057"><span class="nick" style="color:#8dd3c7"><a href="#015057" label="[01:50:57]">&lt;stikonas&gt;</a></span><span class="message">python is already wip</span></div><div class="line" id="015118"><span class="nick" style="color:#8dd3c7"><a href="#015118" label="[01:51:18]">&lt;stikonas&gt;</a></span><span class="message">podman just needs go but that comes almost for free with either GCC or bootstrap via G o 1.4</span></div><div class="line" id="015853"><span class="nick" style="color:#389600"><a href="#015853" label="[01:58:53]">&lt;oriansj&gt;</a></span><span class="message">well if one ignores the pregenerated bits in original Go release, the Go bootstrap should be easy with even gcc 4.7</span></div><div class="line" id="021504"><span class="nick" style="color:#2e2a4a"><a href="#021504" label="[02:15:04]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: I've removed tar installation hack and fixed tar package, now it contains tar...</span></div><div class="line" id="021611"><span class="nick" style="color:#2e2a4a"><a href="#021611" label="[02:16:11]">&lt;stikonas[m]&gt;</a></span><span class="message">Though I noticed some other issue, somehow my after.she hook was not launched (at least in presseed mode)</span></div><div class="line" id="113457"><span class="nick" style="color:#6b8072"><a href="#113457" label="[11:34:57]">&lt;doras&gt;</a></span><span class="message">stikonas, fossy, do you expect us to ever need to download different sources depending on the bootstrap mode or other parameters passed to ./rootfs?</span></div><div class="line" id="113546"><span class="nick" style="color:#6b8072"><a href="#113546" label="[11:35:46]">&lt;doras&gt;</a></span><span class="message">I'm trying to decide if my --source-manifest command argument should always come with the rest of the existing arguments, or sort of be completely separate from them.</span></div><div class="line" id="113632"><span class="nick" style="color:#8dd3c7"><a href="#113632" label="[11:36:32]">&lt;stikonas&gt;</a></span><span class="message">well, there is already some difference in sysa based on mode</span></div><div class="line" id="113645"><span class="nick" style="color:#8dd3c7"><a href="#113645" label="[11:36:45]">&lt;stikonas&gt;</a></span><span class="message">qemu mode builds kexec and linux kernel</span></div><div class="line" id="113709"><span class="nick" style="color:#8dd3c7"><a href="#113709" label="[11:37:09]">&lt;stikonas&gt;</a></span><span class="message">might need similar things to other kernel transitions</span></div><div class="line" id="115533"><span class="nick" style="color:#80b1d3"><a href="#115533" label="[11:55:33]">&lt;fossy&gt;</a></span><span class="message">stikonas: i've been playing with MACHDEP but for later pythons there seems to be a bit of weird behaviour, im trying -DPLATFORM in CFLAGS (PLATFORM seems to be where most stuff is hardcoded)</span></div><div class="line" id="115552"><span class="nick" style="color:#8dd3c7"><a href="#115552" label="[11:55:52]">&lt;stikonas&gt;</a></span><span class="message">oh I see</span></div><div class="line" id="115623"><span class="nick" style="color:#80b1d3"><a href="#115623" label="[11:56:23]">&lt;fossy&gt;</a></span><span class="message">im going to be a few days before i do any real work on python though, had wisdom teeth extraction yesterday so still not 100%</span></div><div class="line" id="115827"><span class="nick" style="color:#80b1d3"><a href="#115827" label="[11:58:27]">&lt;fossy&gt;</a></span><span class="message">doras: differences in what packages are built, eg kexec can be expected, but not nessecary to avoid downloading tarballs, imo</span></div><div class="line" id="115940"><span class="nick" style="color:#6b8072"><a href="#115940" label="[11:59:40]">&lt;doras&gt;</a></span><span class="message">Yeah, it only complicates the concept.</span></div><div class="line" id="120030"><span class="nick" style="color:#8dd3c7"><a href="#120030" label="[12:00:30]">&lt;stikonas&gt;</a></span><span class="message">yes, definitely take some rest and recover first</span></div><div class="line" id="120047"><span class="nick" style="color:#6b8072"><a href="#120047" label="[12:00:47]">&lt;doras&gt;</a></span><span class="message">It's actually easier to require all the existing command arguments code-wise, but I prefer to do the refactoring to avoid this and keep the code simple.</span></div><div class="line" id="120217"><span class="nick" style="color:#80b1d3"><a href="#120217" label="[12:02:17]">&lt;fossy&gt;</a></span><span class="message">i don't have any problems with it being in a separate script either, if that makes more sense</span></div><div class="line" id="120452"><span class="nick" style="color:#6b8072"><a href="#120452" label="[12:04:52]">&lt;doras&gt;</a></span><span class="message">fossy: I'm also contemplating this option too, but the refactoring would be needed regardless to avoid logic duplication around SysX/SysGeneral and the potential new script.</span></div><div class="line" id="120631"><span class="nick" style="color:#80b1d3"><a href="#120631" label="[12:06:31]">&lt;fossy&gt;</a></span><span class="message">yeah, that is quite possibly true</span></div><div class="line" id="120655"><span class="nick" style="color:#6b8072"><a href="#120655" label="[12:06:55]">&lt;doras&gt;</a></span><span class="message">Basically, I want the function that generates the manifest to be a static class function. We don't need an class instance for it, and I'm not happy with the idea of creating a dummy instance.</span></div><div class="line" id="120831"><span class="nick" style="color:#6b8072"><a href="#120831" label="[12:08:31]">&lt;doras&gt;</a></span><span class="message">i.e., I want this to be enough to prepare a manifest: SysA.get_source_manifest()</span></div><div class="line" id="124437"><span class="nick" style="color:#6b8072"><a href="#124437" label="[12:44:37]">&lt;doras&gt;</a></span><span class="message">fossy: is this an acceptable source manifest format?</span></div><div class="line" id="124437"><span class="nick" style="color:#6b8072"><a href="#124437" label="[12:44:37]">&lt;doras&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.gnome.org/-/snippets/5162/raw/main/sysa-source-manifest">https://gitlab.gnome.org/-/snippets/5162/raw/main/sysa-source-manifest</a> </span></div><div class="line" id="124505"><span class="nick" style="color:#6b8072"><a href="#124505" label="[12:45:05]">&lt;doras&gt;</a></span><span class="message">Would you like to have the values ordered differently?</span></div><div class="line" id="124603"><span class="nick" style="color:#6b8072"><a href="#124603" label="[12:46:03]">&lt;doras&gt;</a></span><span class="message">This is currently &quot;&lt;destination&gt; &lt;url&gt; &lt;sha256&gt; [filename]&quot;</span></div><div class="line" id="124854"><span class="nick" style="color:#6b8072"><a href="#124854" label="[12:48:54]">&lt;doras&gt;</a></span><span class="message">Very similar to the source file format in packages, with the addition of &lt;destination&gt; of where files should be placed in the source tree.</span></div><div class="line" id="124859"><span class="nick" style="color:#6d2462"><a href="#124859" label="[12:48:59]">&lt;sam_&gt;</a></span><span class="message">in gentoo, we do: filename size hash1 [hash2..]</span></div><div class="line" id="124913"><span class="nick" style="color:#6b8072"><a href="#124913" label="[12:49:13]">&lt;doras&gt;</a></span><span class="message">Actually, I called it &lt;directory&gt; in the source code.</span></div><div class="line" id="125944"><span class="nick" style="color:#6b8072"><a href="#125944" label="[12:59:44]">&lt;doras&gt;</a></span><span class="message">sam_: size is interesting. I guess an optimization. In our case the manifest must describe from where a particular source should be downloaded and where it should be placed in the source tree.</span></div><div class="line" id="130004"><span class="nick" style="color:#6d2462"><a href="#130004" label="[13:00:04]">&lt;sam_&gt;</a></span><span class="message">ACTION nods</span></div><div class="line" id="130036"><span class="nick" style="color:#6b8072"><a href="#130036" label="[13:00:36]">&lt;doras&gt;</a></span><span class="message">fossy: an alternative with &lt;directory&gt; moved before [filename]: <a rel="nofollow" href="https://gitlab.gnome.org/-/snippets/5163/raw/main/sysa-source-manifest-alternative">https://gitlab.gnome.org/-/snippets/5163/raw/main/sysa-source-manifest-alternative</a> </span></div><div class="line" id="130202"><span class="nick" style="color:#6b8072"><a href="#130202" label="[13:02:02]">&lt;doras&gt;</a></span><span class="message">A bit less human-readable, but potentially more logical since the filename is next to the destination directory.</span></div><div class="line" id="130227"><span class="nick" style="color:#6b8072"><a href="#130227" label="[13:02:27]">&lt;doras&gt;</a></span><span class="message">I'm fine with either approach personally.</span></div><div class="line" id="130250"><span class="nick" style="color:#6b8072"><a href="#130250" label="[13:02:50]">&lt;doras&gt;</a></span><span class="message">... but would appreciate an opinion so I know what to do :)</span></div><div class="line" id="130827"><span class="nick" style="color:#8dd3c7"><a href="#130827" label="[13:08:27]">&lt;stikonas&gt;</a></span><span class="message">doras: actually it might be more human readable if you put url last</span></div><div class="line" id="130846"><span class="nick" style="color:#8dd3c7"><a href="#130846" label="[13:08:46]">&lt;stikonas&gt;</a></span><span class="message">though logically the order is a bit &quot;wrong&quot; in that case</span></div><div class="line" id="130912"><span class="nick" style="color:#8dd3c7"><a href="#130912" label="[13:09:12]">&lt;stikonas&gt;</a></span><span class="message">but length of URI is the field whose length changes most</span></div><div class="line" id="130946"><span class="nick" style="color:#6b8072"><a href="#130946" label="[13:09:46]">&lt;doras&gt;</a></span><span class="message">stikonas: also true</span></div><div class="line" id="131512"><span class="nick" style="color:#6b8072"><a href="#131512" label="[13:15:12]">&lt;doras&gt;</a></span><span class="message">fossy, stikonas: another alternative with &quot;&lt;sha256&gt; &lt;directory&gt; &lt;url&gt; [filename]&quot;: <a rel="nofollow" href="https://gitlab.gnome.org/-/snippets/5164/raw/main/sysa-source-manifest-alternative2">https://gitlab.gnome.org/-/snippets/5164/raw/main/sysa-source-manifest-alternative2</a> </span></div><div class="line" id="131532"><span class="nick" style="color:#8dd3c7"><a href="#131532" label="[13:15:32]">&lt;stikonas&gt;</a></span><span class="message">yeah, I would say this is more human readable...</span></div><div class="line" id="131638"><span class="nick" style="color:#6b8072"><a href="#131638" label="[13:16:38]">&lt;doras&gt;</a></span><span class="message">I mostly sticked with what we had in the package source files in the first option. I don't mind doing something completely different for the manifest.</span></div><div class="line" id="131710"><span class="nick" style="color:#6b8072"><a href="#131710" label="[13:17:10]">&lt;doras&gt;</a></span><span class="message">I'll go with the last option unless someone stops me :)</span></div><div class="line" id="132134"><span class="nick" style="color:#389600"><a href="#132134" label="[13:21:34]">&lt;oriansj&gt;</a></span><span class="message">sam_: the multiple hash bit probably allows one to choose hashes that make a preimage attack much harder computationally.</span></div><div class="line" id="132239"><span class="nick" style="color:#389600"><a href="#132239" label="[13:22:39]">&lt;oriansj&gt;</a></span><span class="message">doras: no one will ever stop you from doing awesome work for improving the bootstrapping process for others.</span></div><div class="line" id="135101"><span class="nick" style="color:#8dd3c7"><a href="#135101" label="[13:51:01]">&lt;stikonas&gt;</a></span><span class="message">oriansj: and it also allows to migrate hashes in Gentoo</span></div><div class="line" id="135114"><span class="nick" style="color:#8dd3c7"><a href="#135114" label="[13:51:14]">&lt;stikonas&gt;</a></span><span class="message">some years ago different set of hashes was used</span></div><div class="line" id="135141"><span class="nick" style="color:#8dd3c7"><a href="#135141" label="[13:51:41]">&lt;stikonas&gt;</a></span><span class="message">possibly something like MD5, SHA1 but I don't remember exactly now</span></div><div class="line" id="144816"><span class="nick" style="color:#389600"><a href="#144816" label="[14:48:16]">&lt;oriansj&gt;</a></span><span class="message">stikonas: that is a good operational point</span></div><div class="line" id="151319"><span class="nick" style="color:#234e69"><a href="#151319" label="[15:13:19]">&lt;rickmasters&gt;</a></span><span class="message">I have a quick update on kernel bootstrapping.</span></div><div class="line" id="151421"><span class="nick" style="color:#234e69"><a href="#151421" label="[15:14:21]">&lt;rickmasters&gt;</a></span><span class="message">tcc 0.9.27 inside live-bootstrap can build Fiwix and the resulting kernel works.</span></div><div class="line" id="151430"><span class="nick" style="color:#8dd3c7"><a href="#151430" label="[15:14:30]">&lt;stikonas&gt;</a></span><span class="message">nice!</span></div><div class="line" id="151456"><span class="nick" style="color:#234e69"><a href="#151456" label="[15:14:56]">&lt;rickmasters&gt;</a></span><span class="message">This was done with Fiwix as the driving kernel - so it's self hosting.</span></div><div class="line" id="151519"><span class="nick" style="color:#234e69"><a href="#151519" label="[15:15:19]">&lt;rickmasters&gt;</a></span><span class="message">But using builder-hex0 does not work.</span></div><div class="line" id="151602"><span class="nick" style="color:#8dd3c7"><a href="#151602" label="[15:16:02]">&lt;stikonas&gt;</a></span><span class="message">any idea why?</span></div><div class="line" id="151620"><span class="nick" style="color:#234e69"><a href="#151620" label="[15:16:20]">&lt;rickmasters&gt;</a></span><span class="message">I need to implement file descriptors better to make it work.</span></div><div class="line" id="151704"><span class="nick" style="color:#234e69"><a href="#151704" label="[15:17:04]">&lt;rickmasters&gt;</a></span><span class="message">This was something I was probably going to do anyway since it would eliminate the need to patch mes.</span></div><div class="line" id="151819"><span class="nick" style="color:#234e69"><a href="#151819" label="[15:18:19]">&lt;rickmasters&gt;</a></span><span class="message">Basically builder-hex0 only supports one file descriptor per file.</span></div><div class="line" id="151951"><span class="nick" style="color:#234e69"><a href="#151951" label="[15:19:51]">&lt;rickmasters&gt;</a></span><span class="message">Building Fiwix ends up opening the same header file twice which requires two separate file descriptors using different offsets into the file.</span></div><div class="line" id="152155"><span class="nick" style="color:#234e69"><a href="#152155" label="[15:21:55]">&lt;rickmasters&gt;</a></span><span class="message">It shouldn't be too hard to implement but it's going to take a day.</span></div><div class="line" id="152205"><span class="nick" style="color:#8dd3c7"><a href="#152205" label="[15:22:05]">&lt;stikonas&gt;</a></span><span class="message">well, hex0 code is hard to edit...</span></div><div class="line" id="152216"><span class="nick" style="color:#8dd3c7"><a href="#152216" label="[15:22:16]">&lt;stikonas&gt;</a></span><span class="message">all those jumps...</span></div><div class="line" id="152257"><span class="nick" style="color:#234e69"><a href="#152257" label="[15:22:57]">&lt;rickmasters&gt;</a></span><span class="message">I'm leaving on a trip so I'll probably start on it Tuesday.</span></div><div class="line" id="152405"><span class="nick" style="color:#6b8072"><a href="#152405" label="[15:24:05]">&lt;doras&gt;</a></span><span class="message">fossy, stikonas: I opened a MR for the source manifest: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/225">https://github.com/fosslinux/live-bootstrap/pull/225</a> </span></div><div class="line" id="152433"><span class="nick" style="color:#234e69"><a href="#152433" label="[15:24:33]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I've relaxed my principles on hex0. Previously I only hand edited the hex0...</span></div><div class="line" id="152500"><span class="nick" style="color:#234e69"><a href="#152500" label="[15:25:00]">&lt;rickmasters&gt;</a></span><span class="message">Now I edit in hex2 and run a python script to convert to hex0 and then I review the diffs.</span></div><div class="line" id="152516"><span class="nick" style="color:#8dd3c7"><a href="#152516" label="[15:25:16]">&lt;stikonas&gt;</a></span><span class="message">well, hex2 is better for development...</span></div><div class="line" id="152540"><span class="nick" style="color:#8dd3c7"><a href="#152540" label="[15:25:40]">&lt;stikonas&gt;</a></span><span class="message">perhaps we should keep it in hex2 for now and if somebody wants, we can do hand conversion once everything is working</span></div><div class="line" id="152644"><span class="nick" style="color:#8dd3c7"><a href="#152644" label="[15:26:44]">&lt;stikonas&gt;</a></span><span class="message">doras: I'll take a look in the evening</span></div><div class="line" id="152731"><span class="nick" style="color:#234e69"><a href="#152731" label="[15:27:31]">&lt;rickmasters&gt;</a></span><span class="message">I'm currently checking in the hex2 and hex0 edits simultaneously. For the last 17 commits or so since end of August</span></div><div class="line" id="153325"><span class="nick" style="color:#8dd3c7"><a href="#153325" label="[15:33:25]">&lt;stikonas&gt;</a></span><span class="message">oh ok, then it should be fine</span></div><div class="line" id="153729"><span class="nick" style="color:#8dd3c7"><a href="#153729" label="[15:37:29]">&lt;stikonas&gt;</a></span><span class="message">unfortunately, switching kernels is somewhat harder than compilers</span></div><div class="line" id="153803"><span class="nick" style="color:#8dd3c7"><a href="#153803" label="[15:38:03]">&lt;stikonas&gt;</a></span><span class="message">otherwise we would be able to use builder-hex0 to build e.g. builder-hex2</span></div><div class="line" id="155208"><span class="nick" style="color:#389600"><a href="#155208" label="[15:52:08]">&lt;oriansj&gt;</a></span><span class="message">rickmasters: how about we make life even easier for you and we do a half step?</span></div><div class="line" id="162204"><span class="nick" style="color:#234e69"><a href="#162204" label="[16:22:04]">&lt;rickmasters&gt;</a></span><span class="message">oriansj: what did you have in mind?</span></div><div class="line" id="164914"><span class="nick" style="color:#234e69"><a href="#164914" label="[16:49:14]">&lt;rickmasters&gt;</a></span><span class="message">i have to go but will check back later</span></div><div class="line" id="171307"><span class="nick" style="color:#389600"><a href="#171307" label="[17:13:07]">&lt;oriansj&gt;</a></span><span class="message">rickmasters: Wouldn't working in M1 be much easier?</span></div><div class="line" id="180729"><span class="nick" style="color:#6c3d55"><a href="#180729" label="[18:07:29]">&lt;acrow&gt;</a></span><span class="message">nckx: Do you know if it is possible to run a xapian search on the log.guix files?  Well, at least without needing to individually download each day's log.</span></div><div class="line" id="181543"><span class="nick" style="color:#d9d9d9"><a href="#181543" label="[18:15:43]">&lt;nckx&gt;</a></span><span class="message">acrow: That's exactly what the search box is supposed to do!  However… it seems like the DB hasn't been updated since… oh dear.</span></div><div class="line" id="181609"><span class="nick" style="color:#d9d9d9"><a href="#181609" label="[18:16:09]">&lt;nckx&gt;</a></span><span class="message">I'll SSH in later &amp; look for obvious errors.</span></div><div class="line" id="181909"><span class="nick" style="color:#6b8072"><a href="#181909" label="[18:19:09]">&lt;doras&gt;</a></span><span class="message">stikonas: I'm contemplating always having the expected filename in the source manifest. The Python logic that comes up with the file name when it's not listed in the package source file is to call `os.path.basename(url)`. I think it may be best to keep this an implementation detail of live-bootstrap as well and not expect users to have an equivalent implementation at their disposal.</span></div><div class="line" id="184303"><span class="nick" style="color:#8dd3c7"><a href="#184303" label="[18:43:03]">&lt;stikonas&gt;</a></span><span class="message">doras: up to you but keep in mind that manifest is tied to a particular commit of live-bootstrap (or a short set)</span></div><div class="line" id="184328"><span class="nick" style="color:#8dd3c7"><a href="#184328" label="[18:43:28]">&lt;stikonas&gt;</a></span><span class="message">so you wouldn't gain that much by hiding this implementation detail</span></div><div class="line" id="184557"><span class="nick" style="color:#6b8072"><a href="#184557" label="[18:45:57]">&lt;doras&gt;</a></span><span class="message">stikonas: my intention is that the manifest would be simple and explicit enough so its format can remain the same despite any internal changes in live-bootstrap around how package source files are managed.</span></div><div class="line" id="184703"><span class="nick" style="color:#8dd3c7"><a href="#184703" label="[18:47:03]">&lt;stikonas&gt;</a></span><span class="message">true, manifest itself might change, but if format stays the same, then other tools processing it don't need changes</span></div><div class="line" id="184722"><span class="nick" style="color:#8dd3c7"><a href="#184722" label="[18:47:22]">&lt;stikonas&gt;</a></span><span class="message">sure, if you want to add a name, add it</span></div><div class="line" id="184733"><span class="nick" style="color:#8dd3c7"><a href="#184733" label="[18:47:33]">&lt;stikonas&gt;</a></span><span class="message">so &quot;hash dir url name&quot; ?</span></div><div class="line" id="184758"><span class="nick" style="color:#6b8072"><a href="#184758" label="[18:47:58]">&lt;doras&gt;</a></span><span class="message">I think so.</span></div><div class="line" id="185642"><span class="nick" style="color:#6b8072"><a href="#185642" label="[18:56:42]">&lt;doras&gt;</a></span><span class="message">I uploaded a new revision with this change.</span></div><div class="line" id="211743"><span class="nick" style="color:#8dd3c7"><a href="#211743" label="[21:17:43]">&lt;stikonas&gt;</a></span><span class="message">doras: can you fix pylint?</span></div><div class="line" id="212336"><span class="nick" style="color:#2e2a4a"><a href="#212336" label="[21:23:36]">&lt;stikonas[m]&gt;</a></span><span class="message">In general looks good</span></div><div class="line" id="223354"><span class="nick" style="color:#6b8072"><a href="#223354" label="[22:33:54]">&lt;doras&gt;</a></span><span class="message">stikonas: thanks for the review! It seems pylint caught a small leftover, phew.</span></div><div class="line" id="224001"><span class="nick" style="color:#8dd3c7"><a href="#224001" label="[22:40:01]">&lt;stikonas&gt;</a></span><span class="message">ok, merged</span></div><div class="line" id="224317"><span class="nick" style="color:#6b8072"><a href="#224317" label="[22:43:17]">&lt;doras&gt;</a></span><span class="message">Thanks again :)</span></div><div class="line" id="232417"><span class="nick" style="color:#8dd3c7"><a href="#232417" label="[23:24:17]">&lt;stikonas&gt;</a></span><span class="message">I guess you are integrating it here <a rel="nofollow" href="https://gitlab.com/freedesktop-sdk/freedesktop-sdk-binary-seed">https://gitlab.com/freedesktop-sdk/freedesktop-sdk-binary-seed</a> </span></div><div class="line" id="232508"><span class="nick" style="color:#8dd3c7"><a href="#232508" label="[23:25:08]">&lt;stikonas&gt;</a></span><span class="message">doras: and then freedesktop-sdk is used to build freedesktop-gnome and freedesktop-kde?</span></div><div class="line" id="232650"><span class="nick" style="color:#6b8072"><a href="#232650" label="[23:26:50]">&lt;doras&gt;</a></span><span class="message">stikonas: yes. And almost all Flatpak apps. Also GNOME OS.</span></div><br /></div></body></html>