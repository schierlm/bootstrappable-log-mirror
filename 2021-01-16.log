<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="002953"><span class="nick" style="color:#8dd3c7"><a href="#002953" label="[00:29:53]">&lt;fossy&gt;</a></span><span class="message">stikonas: the fix was quite trivial, it was one define</span></div><div class="line" id="003001"><span class="nick" style="color:#8dd3c7"><a href="#003001" label="[00:30:01]">&lt;fossy&gt;</a></span><span class="message">however, we don't have an interactive shell until we can mount /dev</span></div><div class="line" id="003011"><span class="nick" style="color:#8dd3c7"><a href="#003011" label="[00:30:11]">&lt;fossy&gt;</a></span><span class="message">(this will be the same for dash)</span></div><div class="line" id="003028"><span class="nick" style="color:#2e2a4a"><a href="#003028" label="[00:30:28]">&lt;stikonas&gt;</a></span><span class="message">oh, because of tty?</span></div><div class="line" id="003031"><span class="nick" style="color:#8dd3c7"><a href="#003031" label="[00:30:31]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="003039"><span class="nick" style="color:#8dd3c7"><a href="#003039" label="[00:30:39]">&lt;fossy&gt;</a></span><span class="message">/dev/tty is nonexistent</span></div><div class="line" id="003043"><span class="nick" style="color:#2e2a4a"><a href="#003043" label="[00:30:43]">&lt;stikonas&gt;</a></span><span class="message">ok, I see...</span></div><div class="line" id="003102"><span class="nick" style="color:#8dd3c7"><a href="#003102" label="[00:31:02]">&lt;fossy&gt;</a></span><span class="message">right so now dash</span></div><div class="line" id="003108"><span class="nick" style="color:#2e2a4a"><a href="#003108" label="[00:31:08]">&lt;stikonas&gt;</a></span><span class="message">so I briefly looked at it...</span></div><div class="line" id="003113"><span class="nick" style="color:#8dd3c7"><a href="#003113" label="[00:31:13]">&lt;fossy&gt;</a></span><span class="message">a</span></div><div class="line" id="003114"><span class="nick" style="color:#2e2a4a"><a href="#003114" label="[00:31:14]">&lt;stikonas&gt;</a></span><span class="message">at least gio's fork</span></div><div class="line" id="003116"><span class="nick" style="color:#8dd3c7"><a href="#003116" label="[00:31:16]">&lt;fossy&gt;</a></span><span class="message">yta</span></div><div class="line" id="003123"><span class="nick" style="color:#8dd3c7"><a href="#003123" label="[00:31:23]">&lt;fossy&gt;</a></span><span class="message">wait looked at what, bison or dash</span></div><div class="line" id="003125"><span class="nick" style="color:#2e2a4a"><a href="#003125" label="[00:31:25]">&lt;stikonas&gt;</a></span><span class="message">that seems to use some symbols that we don't have</span></div><div class="line" id="003128"><span class="nick" style="color:#2e2a4a"><a href="#003128" label="[00:31:28]">&lt;stikonas&gt;</a></span><span class="message">dash...</span></div><div class="line" id="003133"><span class="nick" style="color:#2e2a4a"><a href="#003133" label="[00:31:33]">&lt;stikonas&gt;</a></span><span class="message">just very briefly</span></div><div class="line" id="003133"><span class="nick" style="color:#8dd3c7"><a href="#003133" label="[00:31:33]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="003140"><span class="nick" style="color:#2e2a4a"><a href="#003140" label="[00:31:40]">&lt;stikonas&gt;</a></span><span class="message">e.g. strtok</span></div><div class="line" id="003209"><span class="nick" style="color:#8dd3c7"><a href="#003209" label="[00:32:09]">&lt;fossy&gt;</a></span><span class="message">hm, ok</span></div><div class="line" id="003216"><span class="nick" style="color:#2e2a4a"><a href="#003216" label="[00:32:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe we should try musl?</span></div><div class="line" id="003233"><span class="nick" style="color:#2e2a4a"><a href="#003233" label="[00:32:33]">&lt;stikonas&gt;</a></span><span class="message">somehow progressing further is hard :(</span></div><div class="line" id="003241"><span class="nick" style="color:#2e2a4a"><a href="#003241" label="[00:32:41]">&lt;stikonas&gt;</a></span><span class="message">I thought after tcc we will be able to move quite fast</span></div><div class="line" id="003300"><span class="nick" style="color:#2e2a4a"><a href="#003300" label="[00:33:00]">&lt;stikonas&gt;</a></span><span class="message">but every package is a big struggle...</span></div><div class="line" id="003305"><span class="nick" style="color:#8dd3c7"><a href="#003305" label="[00:33:05]">&lt;fossy&gt;</a></span><span class="message">i doubt we will be able to compile musl easily</span></div><div class="line" id="003325"><span class="nick">***</span><span class="message notice">cbaines_ is now known as cbaines</span></div><div class="line" id="003334"><span class="nick" style="color:#8dd3c7"><a href="#003334" label="[00:33:34]">&lt;fossy&gt;</a></span><span class="message">i'll take a quick look at musl</span></div><div class="line" id="003341"><span class="nick" style="color:#8dd3c7"><a href="#003341" label="[00:33:41]">&lt;fossy&gt;</a></span><span class="message">and dash</span></div><div class="line" id="003409"><span class="nick" style="color:#2e2a4a"><a href="#003409" label="[00:34:09]">&lt;stikonas&gt;</a></span><span class="message">musl might also help with those heirloom lex and yacc</span></div><div class="line" id="003416"><span class="nick" style="color:#8dd3c7"><a href="#003416" label="[00:34:16]">&lt;fossy&gt;</a></span><span class="message">what is issue with those?</span></div><div class="line" id="003441"><span class="nick" style="color:#2e2a4a"><a href="#003441" label="[00:34:41]">&lt;stikonas&gt;</a></span><span class="message">well, I haven't finished looking but they use at least quite a few incldues that we don't have</span></div><div class="line" id="003505"><span class="nick" style="color:#8dd3c7"><a href="#003505" label="[00:35:05]">&lt;fossy&gt;</a></span><span class="message">hm ok</span></div><div class="line" id="003520"><span class="nick" style="color:#2e2a4a"><a href="#003520" label="[00:35:20]">&lt;stikonas&gt;</a></span><span class="message">last thing I hit was getopt</span></div><div class="line" id="003523"><span class="nick" style="color:#2e2a4a"><a href="#003523" label="[00:35:23]">&lt;stikonas&gt;</a></span><span class="message">is missing...</span></div><div class="line" id="003532"><span class="nick" style="color:#2e2a4a"><a href="#003532" label="[00:35:32]">&lt;stikonas&gt;</a></span><span class="message">but maybe I can get it from somewhere else</span></div><div class="line" id="003620"><span class="nick" style="color:#2e2a4a"><a href="#003620" label="[00:36:20]">&lt;stikonas&gt;</a></span><span class="message">fossy: so musl is here <a rel="nofollow" href="https://gitlab.com/giomasce/musl/-/tree/58f2f63aab655c47ff998201408b3c5aa4042ea0">https://gitlab.com/giomasce/musl/-/tree/58f2f63aab655c47ff998201408b3c5aa4042ea0</a> </span></div><div class="line" id="003624"><span class="nick" style="color:#2e2a4a"><a href="#003624" label="[00:36:24]">&lt;stikonas&gt;</a></span><span class="message">but I also couldn't build it with tcc</span></div><div class="line" id="003632"><span class="nick" style="color:#2e2a4a"><a href="#003632" label="[00:36:32]">&lt;stikonas&gt;</a></span><span class="message">maybe I'm missing something</span></div><div class="line" id="003641"><span class="nick" style="color:#8dd3c7"><a href="#003641" label="[00:36:41]">&lt;fossy&gt;</a></span><span class="message">stikonas: we have getopt in libgetopt.a</span></div><div class="line" id="003646"><span class="nick" style="color:#8dd3c7"><a href="#003646" label="[00:36:46]">&lt;fossy&gt;</a></span><span class="message">you just need to link with -lgetopt</span></div><div class="line" id="003717"><span class="nick" style="color:#2e2a4a"><a href="#003717" label="[00:37:17]">&lt;stikonas&gt;</a></span><span class="message">which package was that?</span></div><div class="line" id="003720"><span class="nick" style="color:#2e2a4a"><a href="#003720" label="[00:37:20]">&lt;stikonas&gt;</a></span><span class="message">mescc?</span></div><div class="line" id="003740"><span class="nick" style="color:#8dd3c7"><a href="#003740" label="[00:37:40]">&lt;fossy&gt;</a></span><span class="message">yes mes.kaem</span></div><div class="line" id="003742"><span class="nick" style="color:#8dd3c7"><a href="#003742" label="[00:37:42]">&lt;fossy&gt;</a></span><span class="message">no wait</span></div><div class="line" id="003745"><span class="nick" style="color:#8dd3c7"><a href="#003745" label="[00:37:45]">&lt;fossy&gt;</a></span><span class="message">tcc.kaem</span></div><div class="line" id="003745"><span class="nick" style="color:#2e2a4a"><a href="#003745" label="[00:37:45]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll take a look</span></div><div class="line" id="003746"><span class="nick" style="color:#8dd3c7"><a href="#003746" label="[00:37:46]">&lt;fossy&gt;</a></span><span class="message">is where it is built</span></div><div class="line" id="003817"><span class="nick" style="color:#2e2a4a"><a href="#003817" label="[00:38:17]">&lt;stikonas&gt;</a></span><span class="message">so musl I was trying to build with CC=tcc ./configure --target=i386</span></div><div class="line" id="003828"><span class="nick" style="color:#2e2a4a"><a href="#003828" label="[00:38:28]">&lt;stikonas&gt;</a></span><span class="message">(configure can be replaced later, I don't think it is essential</span></div><div class="line" id="003839"><span class="nick" style="color:#2e2a4a"><a href="#003839" label="[00:38:39]">&lt;stikonas&gt;</a></span><span class="message">but then I got ./src/internal/syscall.h:237: error: identifier expected</span></div><div class="line" id="003947"><span class="nick" style="color:#2e2a4a"><a href="#003947" label="[00:39:47]">&lt;stikonas&gt;</a></span><span class="message">oh, sorry, yacc was actually complaining about optarg, but maybe we can still find it</span></div><div class="line" id="004010"><span class="nick" style="color:#6b8072"><a href="#004010" label="[00:40:10]">&lt;OriansJ&gt;</a></span><span class="message">optarg is just a struct</span></div><div class="line" id="004029"><span class="nick" style="color:#2e2a4a"><a href="#004029" label="[00:40:29]">&lt;stikonas&gt;</a></span><span class="message">yeah, it's defined in getopt.h</span></div><div class="line" id="004046"><span class="nick" style="color:#6b8072"><a href="#004046" label="[00:40:46]">&lt;OriansJ&gt;</a></span><span class="message">and TCC should be able to handle that</span></div><div class="line" id="004202"><span class="nick" style="color:#2e2a4a"><a href="#004202" label="[00:42:02]">&lt;stikonas&gt;</a></span><span class="message">ok, I've got passed compile stage after patching some stuff... Now linking</span></div><div class="line" id="004213"><span class="nick" style="color:#2e2a4a"><a href="#004213" label="[00:42:13]">&lt;stikonas&gt;</a></span><span class="message">hmm, it's those wide functions...</span></div><div class="line" id="004240"><span class="nick" style="color:#2e2a4a"><a href="#004240" label="[00:42:40]">&lt;stikonas&gt;</a></span><span class="message">probably need to patch them out too</span></div><div class="line" id="004249"><span class="nick" style="color:#2e2a4a"><a href="#004249" label="[00:42:49]">&lt;stikonas&gt;</a></span><span class="message">not sure how functional or even working binary will be...</span></div><div class="line" id="004339"><span class="nick" style="color:#6b8072"><a href="#004339" label="[00:43:39]">&lt;OriansJ&gt;</a></span><span class="message">all this tells me I need to find time to work on the M3 solution</span></div><div class="line" id="004745"><span class="nick" style="color:#8dd3c7"><a href="#004745" label="[00:47:45]">&lt;fossy&gt;</a></span><span class="message">lmaoooo old bash + new configure script = autoconf has an absolute fk you moment</span></div><div class="line" id="004907"><span class="nick" style="color:#8dd3c7"><a href="#004907" label="[00:49:07]">&lt;fossy&gt;</a></span><span class="message">oh fk</span></div><div class="line" id="004915"><span class="nick" style="color:#8dd3c7"><a href="#004915" label="[00:49:15]">&lt;fossy&gt;</a></span><span class="message">autotools absolutely *requires* /dev</span></div><div class="line" id="005004"><span class="nick" style="color:#2e2a4a"><a href="#005004" label="[00:50:04]">&lt;stikonas&gt;</a></span><span class="message">hmm, so we need mount</span></div><div class="line" id="005007"><span class="nick" style="color:#2e2a4a"><a href="#005007" label="[00:50:07]">&lt;stikonas&gt;</a></span><span class="message">from coreutils?</span></div><div class="line" id="005018"><span class="nick" style="color:#8dd3c7"><a href="#005018" label="[00:50:18]">&lt;fossy&gt;</a></span><span class="message">yeah....</span></div><div class="line" id="005023"><span class="nick" style="color:#8dd3c7"><a href="#005023" label="[00:50:23]">&lt;fossy&gt;</a></span><span class="message">not too hard</span></div><div class="line" id="005026"><span class="nick" style="color:#2e2a4a"><a href="#005026" label="[00:50:26]">&lt;stikonas&gt;</a></span><span class="message">what are you building? dash?</span></div><div class="line" id="005048"><span class="nick" style="color:#8dd3c7"><a href="#005048" label="[00:50:48]">&lt;fossy&gt;</a></span><span class="message">yes</span></div><div class="line" id="005054"><span class="nick" style="color:#8dd3c7"><a href="#005054" label="[00:50:54]">&lt;fossy&gt;</a></span><span class="message">i'm just testing</span></div><div class="line" id="005112"><span class="nick" style="color:#2e2a4a"><a href="#005112" label="[00:51:12]">&lt;stikonas&gt;</a></span><span class="message">yeah, I understand...</span></div><div class="line" id="005215"><span class="nick" style="color:#8dd3c7"><a href="#005215" label="[00:52:15]">&lt;fossy&gt;</a></span><span class="message">dash is a no-go rn</span></div><div class="line" id="005222"><span class="nick" style="color:#8dd3c7"><a href="#005222" label="[00:52:22]">&lt;fossy&gt;</a></span><span class="message">mkbuiltins is a shell script</span></div><div class="line" id="005238"><span class="nick" style="color:#8dd3c7"><a href="#005238" label="[00:52:38]">&lt;fossy&gt;</a></span><span class="message">so we would have to either reimplement it in C or otherwise rewirte it for kaem</span></div><div class="line" id="005331"><span class="nick" style="color:#2e2a4a"><a href="#005331" label="[00:53:31]">&lt;stikonas&gt;</a></span><span class="message">ok, I think I managed to build yacc by basically replacing all wide functions with normal</span></div><div class="line" id="005345"><span class="nick" style="color:#8dd3c7"><a href="#005345" label="[00:53:45]">&lt;fossy&gt;</a></span><span class="message">what is a wide function</span></div><div class="line" id="005349"><span class="nick" style="color:#2e2a4a"><a href="#005349" label="[00:53:49]">&lt;stikonas&gt;</a></span><span class="message">wchars</span></div><div class="line" id="005356"><span class="nick" style="color:#2e2a4a"><a href="#005356" label="[00:53:56]">&lt;stikonas&gt;</a></span><span class="message">e.g. iswdigit</span></div><div class="line" id="005400"><span class="nick" style="color:#2e2a4a"><a href="#005400" label="[00:54:00]">&lt;stikonas&gt;</a></span><span class="message">takes wchar</span></div><div class="line" id="005402"><span class="nick" style="color:#8dd3c7"><a href="#005402" label="[00:54:02]">&lt;fossy&gt;</a></span><span class="message">ohh</span></div><div class="line" id="005403"><span class="nick" style="color:#8dd3c7"><a href="#005403" label="[00:54:03]">&lt;fossy&gt;</a></span><span class="message">i c</span></div><div class="line" id="005403"><span class="nick" style="color:#2e2a4a"><a href="#005403" label="[00:54:03]">&lt;stikonas&gt;</a></span><span class="message">instead of isdigit(char)</span></div><div class="line" id="005409"><span class="nick" style="color:#2e2a4a"><a href="#005409" label="[00:54:09]">&lt;stikonas&gt;</a></span><span class="message">I've never used them myself...</span></div><div class="line" id="005413"><span class="nick" style="color:#8dd3c7"><a href="#005413" label="[00:54:13]">&lt;fossy&gt;</a></span><span class="message">me netierh</span></div><div class="line" id="005417"><span class="nick" style="color:#8dd3c7"><a href="#005417" label="[00:54:17]">&lt;fossy&gt;</a></span><span class="message">idk why youd want that but whatever</span></div><div class="line" id="005434"><span class="nick" style="color:#8dd3c7"><a href="#005434" label="[00:54:34]">&lt;fossy&gt;</a></span><span class="message">ohhh</span></div><div class="line" id="005437"><span class="nick" style="color:#8dd3c7"><a href="#005437" label="[00:54:37]">&lt;fossy&gt;</a></span><span class="message">unicode</span></div><div class="line" id="005439"><span class="nick" style="color:#8dd3c7"><a href="#005439" label="[00:54:39]">&lt;fossy&gt;</a></span><span class="message">that's why</span></div><div class="line" id="005502"><span class="nick" style="color:#8dd3c7"><a href="#005502" label="[00:55:02]">&lt;fossy&gt;</a></span><span class="message">furthermore dash has a .y file too</span></div><div class="line" id="005726"><span class="nick" style="color:#8dd3c7"><a href="#005726" label="[00:57:26]">&lt;fossy&gt;</a></span><span class="message">hm, not in newer versions tho?</span></div><div class="line" id="005806"><span class="nick" style="color:#2e2a4a"><a href="#005806" label="[00:58:06]">&lt;stikonas&gt;</a></span><span class="message">fossy: which dash di you look at?</span></div><div class="line" id="005815"><span class="nick" style="color:#2e2a4a"><a href="#005815" label="[00:58:15]">&lt;stikonas&gt;</a></span><span class="message">not <a rel="nofollow" href="https://gitlab.com/giomasce/dash/-/tree/31ae7b15a2004bb16508ce5df85818faeaa14264/src">https://gitlab.com/giomasce/dash/-/tree/31ae7b15a2004bb16508ce5df85818faeaa14264/src</a>  ?</span></div><div class="line" id="005826"><span class="nick" style="color:#8dd3c7"><a href="#005826" label="[00:58:26]">&lt;fossy&gt;</a></span><span class="message">no, i was using upstream</span></div><div class="line" id="005829"><span class="nick" style="color:#8dd3c7"><a href="#005829" label="[00:58:29]">&lt;fossy&gt;</a></span><span class="message">let me try that</span></div><div class="line" id="010006"><span class="nick" style="color:#2e2a4a"><a href="#010006" label="[01:00:06]">&lt;stikonas&gt;</a></span><span class="message">fossy: this is my yacc patch <a rel="nofollow" href="https://stikonas.eu/files/yacc.patch.txt">https://stikonas.eu/files/yacc.patch.txt</a> </span></div><div class="line" id="010014"><span class="nick" style="color:#2e2a4a"><a href="#010014" label="[01:00:14]">&lt;stikonas&gt;</a></span><span class="message">although, mostly craeted with sed</span></div><div class="line" id="010048"><span class="nick" style="color:#8dd3c7"><a href="#010048" label="[01:00:48]">&lt;fossy&gt;</a></span><span class="message">i can live with that</span></div><div class="line" id="010355"><span class="nick" style="color:#2e2a4a"><a href="#010355" label="[01:03:55]">&lt;stikonas&gt;</a></span><span class="message">ok, that yacc is too weak to build bash parse.y</span></div><div class="line" id="010425"><span class="nick" style="color:#2e2a4a"><a href="#010425" label="[01:04:25]">&lt;stikonas&gt;</a></span><span class="message">or maybe I don't know how to use yacc... which is more likely</span></div><div class="line" id="010559"><span class="nick" style="color:#2e2a4a"><a href="#010559" label="[01:05:59]">&lt;stikonas&gt;</a></span><span class="message">hmm, I think all in all, coreutils is probably the easiest next thing</span></div><div class="line" id="010604"><span class="nick" style="color:#2e2a4a"><a href="#010604" label="[01:06:04]">&lt;stikonas&gt;</a></span><span class="message">given that you already have some experience building it</span></div><div class="line" id="011408"><span class="nick" style="color:#2e2a4a"><a href="#011408" label="[01:14:08]">&lt;stikonas&gt;</a></span><span class="message"> fossy: hmm, mount is not in coreutils</span></div><div class="line" id="011411"><span class="nick" style="color:#2e2a4a"><a href="#011411" label="[01:14:11]">&lt;stikonas&gt;</a></span><span class="message">it's in util-linux</span></div><div class="line" id="011455"><span class="nick" style="color:#2e2a4a"><a href="#011455" label="[01:14:55]">&lt;stikonas&gt;</a></span><span class="message">although, I don't think we can just mount /dev</span></div><div class="line" id="011503"><span class="nick" style="color:#2e2a4a"><a href="#011503" label="[01:15:03]">&lt;stikonas&gt;</a></span><span class="message">it's not like proc or sysfs</span></div><div class="line" id="011523"><span class="nick" style="color:#8dd3c7"><a href="#011523" label="[01:15:23]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh yeah its mknod</span></div><div class="line" id="011533"><span class="nick" style="color:#8dd3c7"><a href="#011533" label="[01:15:33]">&lt;fossy&gt;</a></span><span class="message">that's the one we need</span></div><div class="line" id="011542"><span class="nick" style="color:#2e2a4a"><a href="#011542" label="[01:15:42]">&lt;stikonas&gt;</a></span><span class="message">yeah</span></div><div class="line" id="011544"><span class="nick" style="color:#8dd3c7"><a href="#011544" label="[01:15:44]">&lt;fossy&gt;</a></span><span class="message">stikonas: no, we have to do the full bootstrap, yacc is too weak</span></div><div class="line" id="011559"><span class="nick" style="color:#2e2a4a"><a href="#011559" label="[01:15:59]">&lt;stikonas&gt;</a></span><span class="message">well, hopefully that patch didn't break it...</span></div><div class="line" id="011608"><span class="nick" style="color:#2e2a4a"><a href="#011608" label="[01:16:08]">&lt;stikonas&gt;</a></span><span class="message">need to do the same thing fo flex...</span></div><div class="line" id="011610"><span class="nick" style="color:#2e2a4a"><a href="#011610" label="[01:16:10]">&lt;stikonas&gt;</a></span><span class="message">I guess</span></div><div class="line" id="011613"><span class="nick" style="color:#2e2a4a"><a href="#011613" label="[01:16:13]">&lt;stikonas&gt;</a></span><span class="message">probably tomorrow...</span></div><div class="line" id="011618"><span class="nick" style="color:#2e2a4a"><a href="#011618" label="[01:16:18]">&lt;stikonas&gt;</a></span><span class="message">unless you want to look at it while I sleep</span></div><div class="line" id="011624"><span class="nick" style="color:#8dd3c7"><a href="#011624" label="[01:16:24]">&lt;fossy&gt;</a></span><span class="message">i might</span></div><div class="line" id="011630"><span class="nick" style="color:#8dd3c7"><a href="#011630" label="[01:16:30]">&lt;fossy&gt;</a></span><span class="message">if you want to push to a branch thatd be great</span></div><div class="line" id="011630"><span class="nick" style="color:#2e2a4a"><a href="#011630" label="[01:16:30]">&lt;stikonas&gt;</a></span><span class="message">and it's not even in live environment</span></div><div class="line" id="011638"><span class="nick" style="color:#2e2a4a"><a href="#011638" label="[01:16:38]">&lt;stikonas&gt;</a></span><span class="message">well, I only have that patch...</span></div><div class="line" id="011641"><span class="nick" style="color:#2e2a4a"><a href="#011641" label="[01:16:41]">&lt;stikonas&gt;</a></span><span class="message">nothing else yet...</span></div><div class="line" id="011645"><span class="nick" style="color:#8dd3c7"><a href="#011645" label="[01:16:45]">&lt;fossy&gt;</a></span><span class="message">ok that's cool</span></div><div class="line" id="011650"><span class="nick" style="color:#8dd3c7"><a href="#011650" label="[01:16:50]">&lt;fossy&gt;</a></span><span class="message">i'll try and get it into a makefile</span></div><div class="line" id="011657"><span class="nick" style="color:#2e2a4a"><a href="#011657" label="[01:16:57]">&lt;stikonas&gt;</a></span><span class="message">we migth want to tar those utils</span></div><div class="line" id="011702"><span class="nick" style="color:#8dd3c7"><a href="#011702" label="[01:17:02]">&lt;fossy&gt;</a></span><span class="message">i'll also merge bash, given that dash seems to be a PITA</span></div><div class="line" id="011703"><span class="nick" style="color:#2e2a4a"><a href="#011703" label="[01:17:03]">&lt;stikonas&gt;</a></span><span class="message">can't add cvs submodule...</span></div><div class="line" id="011710"><span class="nick" style="color:#2e2a4a"><a href="#011710" label="[01:17:10]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="011716"><span class="nick" style="color:#8dd3c7"><a href="#011716" label="[01:17:16]">&lt;fossy&gt;</a></span><span class="message">thought</span></div><div class="line" id="011720"><span class="nick" style="color:#8dd3c7"><a href="#011720" label="[01:17:20]">&lt;fossy&gt;</a></span><span class="message">instead of using a patch</span></div><div class="line" id="011721"><span class="nick" style="color:#2e2a4a"><a href="#011721" label="[01:17:21]">&lt;stikonas&gt;</a></span><span class="message">although, we haven't reallly bootstrapped bash yet</span></div><div class="line" id="011724"><span class="nick" style="color:#2e2a4a"><a href="#011724" label="[01:17:24]">&lt;stikonas&gt;</a></span><span class="message">sed?</span></div><div class="line" id="011727"><span class="nick" style="color:#8dd3c7"><a href="#011727" label="[01:17:27]">&lt;fossy&gt;</a></span><span class="message">what if we did like -Dwchar=char</span></div><div class="line" id="011734"><span class="nick" style="color:#2e2a4a"><a href="#011734" label="[01:17:34]">&lt;stikonas&gt;</a></span><span class="message">oh, that might work</span></div><div class="line" id="011736"><span class="nick" style="color:#2e2a4a"><a href="#011736" label="[01:17:36]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="011742"><span class="nick" style="color:#2e2a4a"><a href="#011742" label="[01:17:42]">&lt;stikonas&gt;</a></span><span class="message">there are some other things I patched</span></div><div class="line" id="011750"><span class="nick" style="color:#2e2a4a"><a href="#011750" label="[01:17:50]">&lt;stikonas&gt;</a></span><span class="message">(makefile and maybe a couple of others)</span></div><div class="line" id="011757"><span class="nick" style="color:#8dd3c7"><a href="#011757" label="[01:17:57]">&lt;fossy&gt;</a></span><span class="message">yeah ik,  but for the wide stuff</span></div><div class="line" id="011802"><span class="nick" style="color:#8dd3c7"><a href="#011802" label="[01:18:02]">&lt;fossy&gt;</a></span><span class="message">would be much easier to read</span></div><div class="line" id="011826"><span class="nick" style="color:#80b1d3"><a href="#011826" label="[01:18:26]">&lt;justinmoon&gt;</a></span><span class="message">Hey. I'm looking for an explanation of all steps involved in building guix from hex0. Thanks.</span></div><div class="line" id="011846"><span class="nick" style="color:#8dd3c7"><a href="#011846" label="[01:18:46]">&lt;fossy&gt;</a></span><span class="message">ERRNOTFOUND</span></div><div class="line" id="011857"><span class="nick" style="color:#8dd3c7"><a href="#011857" label="[01:18:57]">&lt;fossy&gt;</a></span><span class="message">it is really not very simple</span></div><div class="line" id="011901"><span class="nick" style="color:#2e2a4a"><a href="#011901" label="[01:19:01]">&lt;stikonas&gt;</a></span><span class="message">oh ok...</span></div><div class="line" id="011902"><span class="nick" style="color:#8dd3c7"><a href="#011902" label="[01:19:02]">&lt;fossy&gt;</a></span><span class="message">start by reading <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm</a> </span></div><div class="line" id="011905"><span class="nick" style="color:#2e2a4a"><a href="#011905" label="[01:19:05]">&lt;stikonas&gt;</a></span><span class="message">well, try my patch...</span></div><div class="line" id="011916"><span class="nick" style="color:#8dd3c7"><a href="#011916" label="[01:19:16]">&lt;fossy&gt;</a></span><span class="message">stikonas: (directed at justinmoon)</span></div><div class="line" id="011926"><span class="nick" style="color:#2e2a4a"><a href="#011926" label="[01:19:26]">&lt;stikonas&gt;</a></span><span class="message">yeah, I understand</span></div><div class="line" id="011933"><span class="nick" style="color:#8dd3c7"><a href="#011933" label="[01:19:33]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'll use your patch first</span></div><div class="line" id="011937"><span class="nick" style="color:#2e2a4a"><a href="#011937" label="[01:19:37]">&lt;stikonas&gt;</a></span><span class="message">justinmoon: guix takes quite a few cheats to get from hex0 to there</span></div><div class="line" id="011949"><span class="nick" style="color:#8dd3c7"><a href="#011949" label="[01:19:49]">&lt;fossy&gt;</a></span><span class="message">then if the build succeeds i'll try replacing some hunks with -D</span></div><div class="line" id="011957"><span class="nick" style="color:#2e2a4a"><a href="#011957" label="[01:19:57]">&lt;stikonas&gt;</a></span><span class="message">fossy and I are discussing some of these issues now</span></div><div class="line" id="012146"><span class="nick" style="color:#80b1d3"><a href="#012146" label="[01:21:46]">&lt;justinmoon&gt;</a></span><span class="message">fossy: thanks!</span></div><div class="line" id="012159"><span class="nick" style="color:#8dd3c7"><a href="#012159" label="[01:21:59]">&lt;fossy&gt;</a></span><span class="message">justinmoon: for the lower mescc-tools-seed steps, basically</span></div><div class="line" id="012232"><span class="nick" style="color:#8dd3c7"><a href="#012232" label="[01:22:32]">&lt;fossy&gt;</a></span><span class="message">hex0 compiles hex1 which compiles hex2. then hex2 compiles M0 then M1 then M2. M2 compiles M2-Planet, which is the cross platform C compiler. it recompiles better versions of hex2 and M1</span></div><div class="line" id="012248"><span class="nick" style="color:#8dd3c7"><a href="#012248" label="[01:22:48]">&lt;fossy&gt;</a></span><span class="message">then from M2-Planet we can build things like a scheme interpreter (mes)</span></div><div class="line" id="012339"><span class="nick" style="color:#2e2a4a"><a href="#012339" label="[01:23:39]">&lt;stikonas&gt;</a></span><span class="message">and after that it follows <a rel="nofollow" href="https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html">https://guix.gnu.org/manual/en/html_node/Reduced-Binary-Seed-Bootstrap.html</a> </span></div><div class="line" id="012401"><span class="nick" style="color:#2e2a4a"><a href="#012401" label="[01:24:01]">&lt;stikonas&gt;</a></span><span class="message">(which does a few cheats but it's better than anybody else right now)</span></div><div class="line" id="012432"><span class="nick" style="color:#2e2a4a"><a href="#012432" label="[01:24:32]">&lt;stikonas&gt;</a></span><span class="message">e.g. stuff like ./configure scripts are not really source...</span></div><div class="line" id="012533"><span class="nick" style="color:#80b1d3"><a href="#012533" label="[01:25:33]">&lt;justinmoon&gt;</a></span><span class="message">Perfect. Is guile-bootstrap the full guile implementation that can build guix? I understand mes scheme is less capable than guile?</span></div><div class="line" id="012536"><span class="nick" style="color:#2e2a4a"><a href="#012536" label="[01:25:36]">&lt;stikonas&gt;</a></span><span class="message">justinmoon: some of the things are done similarly in <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/">https://github.com/fosslinux/live-bootstrap/</a> </span></div><div class="line" id="012549"><span class="nick" style="color:#2e2a4a"><a href="#012549" label="[01:25:49]">&lt;stikonas&gt;</a></span><span class="message">justinmoon: guile is scheme implementation</span></div><div class="line" id="012559"><span class="nick" style="color:#2e2a4a"><a href="#012559" label="[01:25:59]">&lt;stikonas&gt;</a></span><span class="message">it's full implementation unlike mes which is partial</span></div><div class="line" id="012611"><span class="nick" style="color:#80b1d3"><a href="#012611" label="[01:26:11]">&lt;justinmoon&gt;</a></span><span class="message">understood. thanks a ton!</span></div><div class="line" id="012627"><span class="nick" style="color:#2e2a4a"><a href="#012627" label="[01:26:27]">&lt;stikonas&gt;</a></span><span class="message">e.g. mes can't run those tools from that graph (bootar, gash, etc...)</span></div><div class="line" id="012645"><span class="nick" style="color:#2e2a4a"><a href="#012645" label="[01:26:45]">&lt;stikonas&gt;</a></span><span class="message">and since we don't have guile, we don't use it in live-bootstrap project either</span></div><div class="line" id="013010"><span class="nick" style="color:#80b1d3"><a href="#013010" label="[01:30:10]">&lt;justinmoon&gt;</a></span><span class="message">makes sense</span></div><div class="line" id="020918"><span class="nick" style="color:#6b8072"><a href="#020918" label="[02:09:18]">&lt;OriansJ&gt;</a></span><span class="message">justinmoon: The steps below mes-m2 in the following is correct: The steps above are corrently being  sorted out by fossy and stikonas <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.pdf</a> </span></div><div class="line" id="021029"><span class="nick" style="color:#6b8072"><a href="#021029" label="[02:10:29]">&lt;OriansJ&gt;</a></span><span class="message">fossy: I'll later need your help updating: <a rel="nofollow" href="https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.dot">https://github.com/oriansj/talk-notes/blob/master/Current%20bootstrap%20map.dot</a>  when you finally get live-bootstrap working well.</span></div><div class="line" id="023034"><span class="nick" style="color:#6d2462"><a href="#023034" label="[02:30:34]">&lt;xentrac&gt;</a></span><span class="message">rain1: thanks for the planckforth link!  it seems more perspicuous than most tiny forths</span></div><div class="line" id="023117"><span class="nick" style="color:#6d2462"><a href="#023117" label="[02:31:17]">&lt;xentrac&gt;</a></span><span class="message">fossy: flex, bison, automake, and autoconf are frequent let's-check-in-build-artifact offenders</span></div><div class="line" id="023226"><span class="nick" style="color:#6d2462"><a href="#023226" label="[02:32:26]">&lt;xentrac&gt;</a></span><span class="message">stikonas[m]: I don't think GNU was designed for our kind of auditability-focused bootstrapping at all; rather the contrary, they believed that if a programming language wasn't even good enough to write its own compiler in, it was a toy</span></div><div class="line" id="023309"><span class="nick" style="color:#6d2462"><a href="#023309" label="[02:33:09]">&lt;xentrac&gt;</a></span><span class="message">so we should count ourselves lucky that they wrote as much in C as they did, which was largely a matter of encouraging people on proprietary Unices to adopt their tooling</span></div><div class="line" id="023414"><span class="nick" style="color:#6d2462"><a href="#023414" label="[02:34:14]">&lt;xentrac&gt;</a></span><span class="message">fossy: autoconf configure scripts are designed to run on proprietary Unixes (and VMS!) that don't have bash installed, so any reasonable bourne shell ought to be enough, although maybe that's slipped a bit in the last 20 years</span></div><div class="line" id="023540"><span class="nick" style="color:#6d2462"><a href="#023540" label="[02:35:40]">&lt;xentrac&gt;</a></span><span class="message">stikonas[m]: every package is a struggle, but progress is astoundingly fast now</span></div><div class="line" id="023607"><span class="nick" style="color:#234e69"><a href="#023607" label="[02:36:07]">&lt;vagrantc&gt;</a></span><span class="message">any wild guesses as to why mescc-tools started failing on Debian in version 1.1.0 ... seems to be Kaem/test/test14/ ... which just calls printf</span></div><div class="line" id="023650"><span class="nick" style="color:#6d2462"><a href="#023650" label="[02:36:50]">&lt;xentrac&gt;</a></span><span class="message">(running autoconf itself I think might require bash, though, even if its configure output runs okay in SunOS 4 ksh or whatever)</span></div><div class="line" id="023652"><span class="nick" style="color:#234e69"><a href="#023652" label="[02:36:52]">&lt;vagrantc&gt;</a></span><span class="message"> <a rel="nofollow" href="https://tests.reproducible-builds.org/debian/history/mescc-tools.html">https://tests.reproducible-builds.org/debian/history/mescc-tools.html</a>  ... it built fine on buildd.debian.org/mescc-tools and I haven't been able to reproduce it</span></div><div class="line" id="023724"><span class="nick" style="color:#234e69"><a href="#023724" label="[02:37:24]">&lt;vagrantc&gt;</a></span><span class="message">my main guess is the user's shell being /bin/sh vs. /bin/bash, or /bin/sh pointing to /bin/bash vs. /bin/dash</span></div><div class="line" id="023736"><span class="nick" style="color:#234e69"><a href="#023736" label="[02:37:36]">&lt;vagrantc&gt;</a></span><span class="message">but i haven't figured out how to trigger it with any of those combinations</span></div><div class="line" id="023757"><span class="nick" style="color:#234e69"><a href="#023757" label="[02:37:57]">&lt;vagrantc&gt;</a></span><span class="message">although &quot;talking&quot; it out is giving me some ideas to try :)</span></div><div class="line" id="023842"><span class="nick" style="color:#6d2462"><a href="#023842" label="[02:38:42]">&lt;xentrac&gt;</a></span><span class="message">fossy: wchar_t functions are for if you have a character set of more than 256 characters, such as Unicode or ISO-2022 character sets; there's a fuller explanation in <a rel="nofollow" href="https://www.gnu.org/software/libc/manual/html_node/Extended-Char-Intro.html">https://www.gnu.org/software/libc/manual/html_node/Extended-Char-Intro.html</a>  for when you want to read it</span></div><div class="line" id="024012"><span class="nick" style="color:#6d2462"><a href="#024012" label="[02:40:12]">&lt;xentrac&gt;</a></span><span class="message">vagrantc: hmm, nothing obvious comes to mind</span></div><div class="line" id="024223"><span class="nick" style="color:#8dd3c7"><a href="#024223" label="[02:42:23]">&lt;fossy&gt;</a></span><span class="message">good day vagrantc, let's see</span></div><div class="line" id="024256"><span class="nick" style="color:#8dd3c7"><a href="#024256" label="[02:42:56]">&lt;fossy&gt;</a></span><span class="message">vagrantc: how do i access the logfile</span></div><div class="line" id="024323"><span class="nick" style="color:#234e69"><a href="#024323" label="[02:43:23]">&lt;vagrantc&gt;</a></span><span class="message">oooh! i've seen it fail with a local build for the first time</span></div><div class="line" id="024337"><span class="nick" style="color:#8dd3c7"><a href="#024337" label="[02:43:37]">&lt;fossy&gt;</a></span><span class="message">vagrantc: well, i wrote these tests</span></div><div class="line" id="024421"><span class="nick" style="color:#234e69"><a href="#024421" label="[02:44:21]">&lt;vagrantc&gt;</a></span><span class="message">fossy: which logfile?</span></div><div class="line" id="024435"><span class="nick" style="color:#8dd3c7"><a href="#024435" label="[02:44:35]">&lt;fossy&gt;</a></span><span class="message">vagrantc: do you have a logfile of the failure</span></div><div class="line" id="024445"><span class="nick" style="color:#234e69"><a href="#024445" label="[02:44:45]">&lt;vagrantc&gt;</a></span><span class="message"> <a rel="nofollow" href="https://tests.reproducible-builds.org/debian/rbuild/unstable/amd64/mescc-tools_1.1.0-1.rbuild.log.gz">https://tests.reproducible-builds.org/debian/rbuild/unstable/amd64/mescc-tools_1.1.0-1.rbuild.log.gz</a> </span></div><div class="line" id="024452"><span class="nick" style="color:#8dd3c7"><a href="#024452" label="[02:44:52]">&lt;fossy&gt;</a></span><span class="message">thanks</span></div><div class="line" id="024507"><span class="nick" style="color:#234e69"><a href="#024507" label="[02:45:07]">&lt;vagrantc&gt;</a></span><span class="message">but that's the build log ... not much information in there</span></div><div class="line" id="024518"><span class="nick" style="color:#8dd3c7"><a href="#024518" label="[02:45:18]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="024528"><span class="nick" style="color:#8dd3c7"><a href="#024528" label="[02:45:28]">&lt;fossy&gt;</a></span><span class="message">but you said you just reproduced it loally?</span></div><div class="line" id="024704"><span class="nick" style="color:#234e69"><a href="#024704" label="[02:47:04]">&lt;vagrantc&gt;</a></span><span class="message">$ LANG=C /usr/bin/kaem -f &quot;test/test14/kaem.test&quot;</span></div><div class="line" id="024704"><span class="nick" style="color:#234e69"><a href="#024704" label="[02:47:04]">&lt;vagrantc&gt;</a></span><span class="message">hiprintf: warning: ignoring excess arguments, starting with ''</span></div><div class="line" id="024902"><span class="nick" style="color:#8dd3c7"><a href="#024902" label="[02:49:02]">&lt;fossy&gt;</a></span><span class="message">vagrantc: interesting</span></div><div class="line" id="024929"><span class="nick" style="color:#8dd3c7"><a href="#024929" label="[02:49:29]">&lt;fossy&gt;</a></span><span class="message">i can repro</span></div><div class="line" id="024945"><span class="nick" style="color:#234e69"><a href="#024945" label="[02:49:45]">&lt;vagrantc&gt;</a></span><span class="message">but when i build the package normally, it works fine...</span></div><div class="line" id="025001"><span class="nick" style="color:#8dd3c7"><a href="#025001" label="[02:50:01]">&lt;fossy&gt;</a></span><span class="message">are the printf versions the same?</span></div><div class="line" id="025002"><span class="nick" style="color:#234e69"><a href="#025002" label="[02:50:02]">&lt;vagrantc&gt;</a></span><span class="message">but something in the reproducible builds environment triggers it</span></div><div class="line" id="025037"><span class="nick" style="color:#234e69"><a href="#025037" label="[02:50:37]">&lt;vagrantc&gt;</a></span><span class="message">my first hunch is an issue with /usr/bin/printf vs. a bash printf builtin</span></div><div class="line" id="025049"><span class="nick" style="color:#8dd3c7"><a href="#025049" label="[02:50:49]">&lt;fossy&gt;</a></span><span class="message">how would kaem be calling a bash printcf builtin</span></div><div class="line" id="025108"><span class="nick" style="color:#234e69"><a href="#025108" label="[02:51:08]">&lt;vagrantc&gt;</a></span><span class="message">ah, right... it's kaem</span></div><div class="line" id="025124"><span class="nick" style="color:#8dd3c7"><a href="#025124" label="[02:51:24]">&lt;fossy&gt;</a></span><span class="message">it is def calling /usr/bin/printf</span></div><div class="line" id="025143"><span class="nick" style="color:#8dd3c7"><a href="#025143" label="[02:51:43]">&lt;fossy&gt;</a></span><span class="message">oooh, i think i know</span></div><div class="line" id="025157"><span class="nick" style="color:#8dd3c7"><a href="#025157" label="[02:51:57]">&lt;fossy&gt;</a></span><span class="message">dont think that i made kaem strip empty tokens</span></div><div class="line" id="025210"><span class="nick" style="color:#8dd3c7"><a href="#025210" label="[02:52:10]">&lt;fossy&gt;</a></span><span class="message">not sure how that explains the difference tho</span></div><div class="line" id="025233"><span class="nick" style="color:#234e69"><a href="#025233" label="[02:52:33]">&lt;vagrantc&gt;</a></span><span class="message">still haven't figured out the difference between a working environment and a non-working one...</span></div><div class="line" id="025240"><span class="nick" style="color:#8dd3c7"><a href="#025240" label="[02:52:40]">&lt;fossy&gt;</a></span><span class="message">no</span></div><div class="line" id="025335"><span class="nick" style="color:#8dd3c7"><a href="#025335" label="[02:53:35]">&lt;fossy&gt;</a></span><span class="message">what debian version is reproducible-builds running on vagrantc ?</span></div><div class="line" id="025449"><span class="nick" style="color:#234e69"><a href="#025449" label="[02:54:49]">&lt;vagrantc&gt;</a></span><span class="message">the host is buster in all cases, same as buildd.debian.org, the chroots are their respective releases</span></div><div class="line" id="025510"><span class="nick" style="color:#234e69"><a href="#025510" label="[02:55:10]">&lt;vagrantc&gt;</a></span><span class="message">or pre-releases, etc.</span></div><div class="line" id="025518"><span class="nick" style="color:#8dd3c7"><a href="#025518" label="[02:55:18]">&lt;fossy&gt;</a></span><span class="message">oh i see</span></div><div class="line" id="025536"><span class="nick" style="color:#234e69"><a href="#025536" label="[02:55:36]">&lt;vagrantc&gt;</a></span><span class="message">so, i'm seeing it in an environment where i have stdin/stdout ...</span></div><div class="line" id="025549"><span class="nick" style="color:#8dd3c7"><a href="#025549" label="[02:55:49]">&lt;fossy&gt;</a></span><span class="message">uh</span></div><div class="line" id="025733"><span class="nick" style="color:#234e69"><a href="#025733" label="[02:57:33]">&lt;vagrantc&gt;</a></span><span class="message">coreutils hasn't been updated since october, and I only uploaded a few days ago, so that is essentially the same version</span></div><div class="line" id="030323"><span class="nick" style="color:#234e69"><a href="#030323" label="[03:03:23]">&lt;vagrantc&gt;</a></span><span class="message">oooh, got different tests to fail from reprotest...</span></div><div class="line" id="030341"><span class="nick" style="color:#8dd3c7"><a href="#030341" label="[03:03:41]">&lt;fossy&gt;</a></span><span class="message">:|</span></div><div class="line" id="030443"><span class="nick" style="color:#234e69"><a href="#030443" label="[03:04:43]">&lt;vagrantc&gt;</a></span><span class="message">LANG=C ../bin/kaem -f &quot;test/test14/kaem.test&quot;</span></div><div class="line" id="030445"><span class="nick" style="color:#234e69"><a href="#030445" label="[03:04:45]">&lt;vagrantc&gt;</a></span><span class="message">oops</span></div><div class="line" id="030525"><span class="nick" style="color:#234e69"><a href="#030525" label="[03:05:25]">&lt;vagrantc&gt;</a></span><span class="message">+ out=test/test8/proof: ɹ</span></div><div class="line" id="030526"><span class="nick" style="color:#234e69"><a href="#030526" label="[03:05:26]">&lt;vagrantc&gt;</a></span><span class="message">+ [ test/test8/proof: ɹ = test/test8/proof: OK ]</span></div><div class="line" id="030544"><span class="nick" style="color:#6c3d55"><a href="#030544" label="[03:05:44]">*</a></span><span class="message">vagrantc tries without crazy locales</span></div><div class="line" id="030707"><span class="nick" style="color:#234e69"><a href="#030707" label="[03:07:07]">&lt;vagrantc&gt;</a></span><span class="message">built fine without varying locales ... which is unfortunate, i was hoping to use reprotest to triage what is breaking the other issue</span></div><div class="line" id="031049"><span class="nick" style="color:#234e69"><a href="#031049" label="[03:10:49]">&lt;vagrantc&gt;</a></span><span class="message">same chroot, built from interactive shell and Kaem/test/test14 fails, from automated build process succeeds...</span></div><div class="line" id="031332"><span class="nick" style="color:#234e69"><a href="#031332" label="[03:13:32]">&lt;vagrantc&gt;</a></span><span class="message">well... i'll /o\ a bit more and move on to other things :/</span></div><div class="line" id="034641"><span class="nick" style="color:#234e69"><a href="#034641" label="[03:46:41]">&lt;vagrantc&gt;</a></span><span class="message">fossy: you're gonna love this: -hiprintf: warning: ignoring excess arguments, starting with ''</span></div><div class="line" id="034644"><span class="nick" style="color:#234e69"><a href="#034644" label="[03:46:44]">&lt;vagrantc&gt;</a></span><span class="message">+hiprintf: warning: ignoring excess arguments, starting with ‘’</span></div><div class="line" id="034723"><span class="nick" style="color:#234e69"><a href="#034723" label="[03:47:23]">&lt;vagrantc&gt;</a></span><span class="message">the difference appears to be the use of '' vs. ‘’</span></div><div class="line" id="034928"><span class="nick" style="color:#234e69"><a href="#034928" label="[03:49:28]">&lt;vagrantc&gt;</a></span><span class="message">it does prefix with LANG=C ... but i think there are other variables that can affect the locale and override lang</span></div><div class="line" id="035335"><span class="nick" style="color:#234e69"><a href="#035335" label="[03:53:35]">&lt;vagrantc&gt;</a></span><span class="message">LANG=en_US.UTF-8 ./bin/kaem -f &quot;Kaem/test/test14/kaem.test&quot;</span></div><div class="line" id="035341"><span class="nick" style="color:#234e69"><a href="#035341" label="[03:53:41]">&lt;vagrantc&gt;</a></span><span class="message">hiprintf: warning: ignoring excess arguments, starting with ‘’</span></div><div class="line" id="035404"><span class="nick" style="color:#234e69"><a href="#035404" label="[03:54:04]">&lt;vagrantc&gt;</a></span><span class="message">LANG=C ./bin/kaem -f &quot;Kaem/test/test14/kaem.test&quot;</span></div><div class="line" id="035410"><span class="nick" style="color:#234e69"><a href="#035410" label="[03:54:10]">&lt;vagrantc&gt;</a></span><span class="message">hiprintf: warning: ignoring excess arguments, starting with ''</span></div><div class="line" id="035421"><span class="nick" style="color:#234e69"><a href="#035421" label="[03:54:21]">&lt;vagrantc&gt;</a></span><span class="message">now for a magic trick, since they're called with LANG=C</span></div><div class="line" id="035447"><span class="nick" style="color:#234e69"><a href="#035447" label="[03:54:47]">&lt;vagrantc&gt;</a></span><span class="message">LC_ALL=en_US.UTF-8 LANG=C ./bin/kaem -f &quot;Kaem/test/test14/kaem.test&quot;</span></div><div class="line" id="035451"><span class="nick" style="color:#234e69"><a href="#035451" label="[03:54:51]">&lt;vagrantc&gt;</a></span><span class="message">hiprintf: warning: ignoring excess arguments, starting with ‘’</span></div><div class="line" id="035749"><span class="nick" style="color:#234e69"><a href="#035749" label="[03:57:49]">&lt;vagrantc&gt;</a></span><span class="message">the test expects the UTF-8 locale variant</span></div><div class="line" id="040558"><span class="nick" style="color:#234e69"><a href="#040558" label="[04:05:58]">&lt;vagrantc&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/mescc-tools/issues/16">https://github.com/oriansj/mescc-tools/issues/16</a> </span></div><div class="line" id="042934"><span class="nick" style="color:#6b8072"><a href="#042934" label="[04:29:34]">&lt;OriansJ&gt;</a></span><span class="message">how the heck does printf \</span></div><div class="line" id="042937"><span class="nick" style="color:#6b8072"><a href="#042937" label="[04:29:37]">&lt;OriansJ&gt;</a></span><span class="message">    &quot;hi&quot;</span></div><div class="line" id="042956"><span class="nick" style="color:#6b8072"><a href="#042956" label="[04:29:56]">&lt;OriansJ&gt;</a></span><span class="message">have local specific behavior?</span></div><div class="line" id="043040"><span class="nick" style="color:#234e69"><a href="#043040" label="[04:30:40]">&lt;vagrantc&gt;</a></span><span class="message">because the error message that's part of the test includes different content</span></div><div class="line" id="043744"><span class="nick" style="color:#80b1d3"><a href="#043744" label="[04:37:44]">&lt;justinmoon&gt;</a></span><span class="message">Oriansj: thanks for the graphic! really helps :)</span></div><div class="line" id="044111"><span class="nick" style="color:#6b8072"><a href="#044111" label="[04:41:11]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: I think I should figure out what is causing the behavior to be different that what bash would do given that input and fix it.</span></div><div class="line" id="044153"><span class="nick" style="color:#234e69"><a href="#044153" label="[04:41:53]">&lt;vagrantc&gt;</a></span><span class="message">yeah, the other option would be to fix the printf error output :)</span></div><div class="line" id="044614"><span class="nick" style="color:#6b8072"><a href="#044614" label="[04:46:14]">&lt;OriansJ&gt;</a></span><span class="message">it is easier to fix kaem than printf</span></div><div class="line" id="045455"><span class="nick" style="color:#234e69"><a href="#045455" label="[04:54:55]">&lt;vagrantc&gt;</a></span><span class="message">why does the test explicitly capture the stderr ?</span></div><div class="line" id="045507"><span class="nick" style="color:#234e69"><a href="#045507" label="[04:55:07]">&lt;vagrantc&gt;</a></span><span class="message">you want to actually check that it catches the error correctly?</span></div><div class="line" id="045635"><span class="nick" style="color:#234e69"><a href="#045635" label="[04:56:35]">&lt;vagrantc&gt;</a></span><span class="message">at any rate, i've done my part, come up with a workaround, look forward to a &quot;correct&quot; resolution :)</span></div><div class="line" id="045723"><span class="nick" style="color:#6b8072"><a href="#045723" label="[04:57:23]">&lt;OriansJ&gt;</a></span><span class="message">well test/results/test04-output would be the one checking if it catches the error correctly</span></div><div class="line" id="045926"><span class="nick" style="color:#6b8072"><a href="#045926" label="[04:59:26]">&lt;OriansJ&gt;</a></span><span class="message">as test 14 is just supposed to test end-of-line escapes according to note in the header</span></div><div class="line" id="050446"><span class="nick" style="color:#6c3d55"><a href="#050446" label="[05:04:46]">*</a></span><span class="message">vagrantc waves</span></div><div class="line" id="063538"><span class="nick" style="color:#6b8072"><a href="#063538" label="[06:35:38]">&lt;OriansJ&gt;</a></span><span class="message">vagrantc: please test the latest mescc-tools to verify that I have addressed your issue.</span></div><div class="line" id="081003"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="081005"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="110502"><span class="nick" style="color:#d9d9d9"><a href="#110502" label="[11:05:02]">&lt;stikonas[m]&gt;</a></span><span class="message">foosy: do we need m4 before bash. Those bison bootstrap steps had it there, although I don't know why...</span></div><div class="line" id="113635"><span class="nick" style="color:#bc80bd"><a href="#113635" label="[11:36:35]">&lt;malina&gt;</a></span><span class="message">I would suspect so,</span></div><div class="line" id="113655"><span class="nick" style="color:#bc80bd"><a href="#113655" label="[11:36:55]">&lt;malina&gt;</a></span><span class="message">I am literally doing my first musl bootstrap at the moment and just did bash, after doing m4 and bison or maybe bison was after bash</span></div><div class="line" id="113657"><span class="nick" style="color:#bc80bd"><a href="#113657" label="[11:36:57]">&lt;malina&gt;</a></span><span class="message">:)</span></div><div class="line" id="113723"><span class="nick" style="color:#8dd3c7"><a href="#113723" label="[11:37:23]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: i believe bison makes use of m4.</span></div><div class="line" id="113728"><span class="nick" style="color:#8dd3c7"><a href="#113728" label="[11:37:28]">&lt;fossy&gt;</a></span><span class="message">but i am not sure of that</span></div><div class="line" id="113741"><span class="nick" style="color:#8dd3c7"><a href="#113741" label="[11:37:41]">&lt;fossy&gt;</a></span><span class="message">gio: can you confirm if m4 is needed for bison/flex bootstrap as implemented in nbs?</span></div><div class="line" id="113748"><span class="nick" style="color:#bc80bd"><a href="#113748" label="[11:37:48]">&lt;malina&gt;</a></span><span class="message">but m4 is part of most gnu automake tools and what not. you can make do without but I suspect it can get a bit hairy without.. , after all, you are trying to bootstrap into a stand alone thing so you want gnu tools</span></div><div class="line" id="113759"><span class="nick" style="color:#bc80bd"><a href="#113759" label="[11:37:59]">&lt;malina&gt;</a></span><span class="message">unless of ocurse you intend to bootstrap something more posixly or so</span></div><div class="line" id="113809"><span class="nick" style="color:#8dd3c7"><a href="#113809" label="[11:38:09]">&lt;fossy&gt;</a></span><span class="message">bison is used in bash</span></div><div class="line" id="113856"><span class="nick" style="color:#bc80bd"><a href="#113856" label="[11:38:56]">&lt;malina&gt;</a></span><span class="message">i did bash/bison just now. in that order.</span></div><div class="line" id="113913"><span class="nick" style="color:#bc80bd"><a href="#113913" label="[11:39:13]">&lt;malina&gt;</a></span><span class="message">i am not in a chroot though</span></div><div class="line" id="114513"><span class="nick" style="color:#6d2462"><a href="#114513" label="[11:45:13]">&lt;xentrac&gt;</a></span><span class="message">did you use the prebuilt grammar C file that ships with the bash source, but which is rebuilt by bison when you change the grammar?</span></div><div class="line" id="114554"><span class="nick" style="color:#3c5b35"><a href="#114554" label="[11:45:54]">&lt;gio&gt;</a></span><span class="message">fossy: I don't think I use it. For sure it is already bootstrapped by that time, but bison is compiled with a custom Makefile: <a rel="nofollow" href="https://gitlab.com/giomasce/nbs-src/-/blob/100cd90f72df9a43a4fade2bdc81bf9809f8047f/bison/src/Makefile">https://gitlab.com/giomasce/nbs-src/-/blob/100cd90f72df9a43a4fade2bdc81bf9809f8047f/bison/src/Makefile</a> </span></div><div class="line" id="114618"><span class="nick" style="color:#3c5b35"><a href="#114618" label="[11:46:18]">&lt;gio&gt;</a></span><span class="message">(I did this stuff years ago, so I don't remember all the details without checking the source code again!)</span></div><div class="line" id="114705"><span class="nick" style="color:#bc80bd"><a href="#114705" label="[11:47:05]">&lt;malina&gt;</a></span><span class="message">xentrac,  no idea, I did <a rel="nofollow" href="https://termbin.com/ub6w">https://termbin.com/ub6w</a> </span></div><div class="line" id="114711"><span class="nick" style="color:#bc80bd"><a href="#114711" label="[11:47:11]">&lt;malina&gt;</a></span><span class="message">then make and make install</span></div><div class="line" id="114740"><span class="nick" style="color:#3c5b35"><a href="#114740" label="[11:47:40]">&lt;gio&gt;</a></span><span class="message">I also use this config.h: <a rel="nofollow" href="https://gitlab.com/giomasce/nbs-src/-/blob/100cd90f72df9a43a4fade2bdc81bf9809f8047f/bison/config.h">https://gitlab.com/giomasce/nbs-src/-/blob/100cd90f72df9a43a4fade2bdc81bf9809f8047f/bison/config.h</a> </span></div><div class="line" id="114804"><span class="nick" style="color:#bc80bd"><a href="#114804" label="[11:48:04]">&lt;malina&gt;</a></span><span class="message">after cross compiling from glibc into musl with gcc, and erm i did m4, expect , bsd-curses (I think or maybe I still used ncurses.. &quot;musl&quot; will be my totally experimental sandbox :D),</span></div><div class="line" id="114806"><span class="nick" style="color:#bc80bd"><a href="#114806" label="[11:48:06]">&lt;malina&gt;</a></span><span class="message">then bash</span></div><div class="line" id="114808"><span class="nick" style="color:#bc80bd"><a href="#114808" label="[11:48:08]">&lt;malina&gt;</a></span><span class="message">and that's it.</span></div><div class="line" id="114812"><span class="nick" style="color:#bc80bd"><a href="#114812" label="[11:48:12]">&lt;malina&gt;</a></span><span class="message">oh, and file</span></div><div class="line" id="114816"><span class="nick" style="color:#2e2a4a"><a href="#114816" label="[11:48:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the wya, have you started looking at yacc? or should I look at it while you sleep?</span></div><div class="line" id="114817"><span class="nick" style="color:#3c5b35"><a href="#114817" label="[11:48:17]">&lt;gio&gt;</a></span><span class="message">Technically that is autogenerated, that's true. I leave it for a future improvement to cherry pick which of those lines are really required and make the file more auditable.</span></div><div class="line" id="114830"><span class="nick" style="color:#3c5b35"><a href="#114830" label="[11:48:30]">&lt;gio&gt;</a></span><span class="message">Though it's not the kind of file that would make an audit complicated.</span></div><div class="line" id="114906"><span class="nick" style="color:#2e2a4a"><a href="#114906" label="[11:49:06]">&lt;stikonas&gt;</a></span><span class="message">well, we were mostly adding those defines to CFLAGS for now...</span></div><div class="line" id="114933"><span class="nick" style="color:#bc80bd"><a href="#114933" label="[11:49:33]">&lt;malina&gt;</a></span><span class="message">although the next step, I did toybox instead of coreutils, so I expect from now on, things will start to break pretty randomly :p and I will go again</span></div><div class="line" id="115015"><span class="nick" style="color:#2e2a4a"><a href="#115015" label="[11:50:15]">&lt;stikonas&gt;</a></span><span class="message">you need bison to build bash from source... bash source contains &quot;non-source&quot; y.tab.c, so we need to generate that first</span></div><div class="line" id="115153"><span class="nick" style="color:#6d2462"><a href="#115153" label="[11:51:53]">&lt;xentrac&gt;</a></span><span class="message">it's extreemely non-source</span></div><div class="line" id="115211"><span class="nick" style="color:#6d2462"><a href="#115211" label="[11:52:11]">&lt;xentrac&gt;</a></span><span class="message">I defy anyone to modify y.tab.c by hand to update bash's grammar</span></div><div class="line" id="115248"><span class="nick" style="color:#6d2462"><a href="#115248" label="[11:52:48]">&lt;xentrac&gt;</a></span><span class="message">or to spot a number that's been changed from its correct value</span></div><div class="line" id="115250"><span class="nick" style="color:#2e2a4a"><a href="#115250" label="[11:52:50]">&lt;stikonas&gt;</a></span><span class="message">and I guess distros don't rebuild y.tab.c before compiling bash...</span></div><div class="line" id="115403"><span class="nick" style="color:#6d2462"><a href="#115403" label="[11:54:03]">&lt;xentrac&gt;</a></span><span class="message">they certainly could; they'd have to if they have their own patches to the .y</span></div><div class="line" id="115438"><span class="nick" style="color:#2e2a4a"><a href="#115438" label="[11:54:38]">&lt;stikonas&gt;</a></span><span class="message">oh yeah, I understand that they could, they already have bison installed, it's just that they don't...</span></div><div class="line" id="115503"><span class="nick" style="color:#2e2a4a"><a href="#115503" label="[11:55:03]">&lt;stikonas&gt;</a></span><span class="message">hopefully .y file is at least reproducible. although, it probably depends on which version of bison you use</span></div><div class="line" id="115552"><span class="nick" style="color:#6d2462"><a href="#115552" label="[11:55:52]">&lt;xentrac&gt;</a></span><span class="message">and possibly, though hopefully not, on which version of libc it's linked against, on which CPU architecture, on which kernel, and compiled with which compiler and which compiler options</span></div><div class="line" id="121308"><span class="nick" style="color:#8dd3c7"><a href="#121308" label="[12:13:08]">&lt;fossy&gt;</a></span><span class="message">&lt;~anton&gt; unfortunately we don't have the old user data as deepend deleted the vm already</span></div><div class="line" id="121314"><span class="nick" style="color:#8dd3c7"><a href="#121314" label="[12:13:14]">&lt;fossy&gt;</a></span><span class="message">Uh</span></div><div class="line" id="121316"><span class="nick" style="color:#8dd3c7"><a href="#121316" label="[12:13:16]">&lt;fossy&gt;</a></span><span class="message">Bad paste</span></div><div class="line" id="121319"><span class="nick" style="color:#8dd3c7"><a href="#121319" label="[12:13:19]">&lt;fossy&gt;</a></span><span class="message">Sorry</span></div><div class="line" id="121329"><span class="nick" style="color:#8dd3c7"><a href="#121329" label="[12:13:29]">&lt;fossy&gt;</a></span><span class="message">&lt;stikonas&gt; fossy: by the wya, have you started looking at yacc? or should I look at it while you sleep?</span></div><div class="line" id="121333"><span class="nick" style="color:#8dd3c7"><a href="#121333" label="[12:13:33]">&lt;fossy&gt;</a></span><span class="message">stikonas: not yet</span></div><div class="line" id="121340"><span class="nick" style="color:#8dd3c7"><a href="#121340" label="[12:13:40]">&lt;fossy&gt;</a></span><span class="message">I spent some time writing a readme</span></div><div class="line" id="121352"><span class="nick" style="color:#8dd3c7"><a href="#121352" label="[12:13:52]">&lt;fossy&gt;</a></span><span class="message">And doing other things</span></div><div class="line" id="121411"><span class="nick" style="color:#8dd3c7"><a href="#121411" label="[12:14:11]">&lt;fossy&gt;</a></span><span class="message">Tomorrow im going to push a restructure too (kaem files in a diff location etc)</span></div><div class="line" id="121513"><span class="nick" style="color:#2e2a4a"><a href="#121513" label="[12:15:13]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, I can try to take a look</span></div><div class="line" id="121520"><span class="nick" style="color:#2e2a4a"><a href="#121520" label="[12:15:20]">&lt;stikonas&gt;</a></span><span class="message">since I already looked at yacc a bit yesterday</span></div><div class="line" id="121533"><span class="nick" style="color:#2e2a4a"><a href="#121533" label="[12:15:33]">&lt;stikonas&gt;</a></span><span class="message">but yeah, we definitely need some restructuring</span></div><div class="line" id="122919"><span class="nick" style="color:#2e2a4a"><a href="#122919" label="[12:29:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, you last commit doesn't copy all makefiles into sysa</span></div><div class="line" id="122929"><span class="nick" style="color:#2e2a4a"><a href="#122929" label="[12:29:29]">&lt;stikonas&gt;</a></span><span class="message">well, I guess you'll restructure everything tomorrow anyway</span></div><div class="line" id="123158"><span class="nick" style="color:#2e2a4a"><a href="#123158" label="[12:31:58]">&lt;stikonas&gt;</a></span><span class="message">probably the simplest fix for no is to remove &quot;.&quot; before globbing in get_file function</span></div><div class="line" id="123302"><span class="nick" style="color:#8dd3c7"><a href="#123302" label="[12:33:02]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh what</span></div><div class="line" id="123416"><span class="nick" style="color:#8dd3c7"><a href="#123416" label="[12:34:16]">&lt;fossy&gt;</a></span><span class="message">ohh</span></div><div class="line" id="123418"><span class="nick" style="color:#8dd3c7"><a href="#123418" label="[12:34:18]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="123419"><span class="nick" style="color:#2e2a4a"><a href="#123419" label="[12:34:19]">&lt;stikonas&gt;</a></span><span class="message">yeah, bash-2.05b-builtins.mk and common were not copied</span></div><div class="line" id="123420"><span class="nick" style="color:#8dd3c7"><a href="#123420" label="[12:34:20]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="123718"><span class="nick" style="color:#bc80bd"><a href="#123718" label="[12:37:18]">&lt;malina&gt;</a></span><span class="message">(btw, ye bison isn'tneeded, my bad, i should have known sigh, Just happend ot be doing some old scripts).</span></div><div class="line" id="135647"><span class="nick" style="color:#6b8072"><a href="#135647" label="[13:56:47]">&lt;OriansJ&gt;</a></span><span class="message">gio: Proper documentation is always a love letter to yourself in the future. Be kinder to yourself and take the time to write one.</span></div><div class="line" id="135951"><span class="nick" style="color:#2e2a4a"><a href="#135951" label="[13:59:51]">&lt;stikonas&gt;</a></span><span class="message">janneke: I have a question regarding mes c lib. It looks to be GPLv3, isn't it?</span></div><div class="line" id="140004"><span class="nick" style="color:#2e2a4a"><a href="#140004" label="[14:00:04]">&lt;stikonas&gt;</a></span><span class="message">I'm worried that this would cause problems with static linking</span></div><div class="line" id="140024"><span class="nick" style="color:#2e2a4a"><a href="#140024" label="[14:00:24]">&lt;stikonas&gt;</a></span><span class="message">that we do during bootstrap</span></div><div class="line" id="140046"><span class="nick" style="color:#2e2a4a"><a href="#140046" label="[14:00:46]">&lt;stikonas&gt;</a></span><span class="message">i.e. if we link mes libc with non-gpl v3 application</span></div><div class="line" id="140046"><span class="nick" style="color:#af8d2f"><a href="#140046" label="[14:00:46]">&lt;janneke&gt;</a></span><span class="message">stikonas: no, it is GPLv3+</span></div><div class="line" id="140106"><span class="nick" style="color:#af8d2f"><a href="#140106" label="[14:01:06]">&lt;janneke&gt;</a></span><span class="message">ah, hmm</span></div><div class="line" id="140107"><span class="nick" style="color:#2e2a4a"><a href="#140107" label="[14:01:07]">&lt;stikonas&gt;</a></span><span class="message">yeah, but unless it's LGPL, I think I'll be stuck</span></div><div class="line" id="140115"><span class="nick" style="color:#2e2a4a"><a href="#140115" label="[14:01:15]">&lt;stikonas&gt;</a></span><span class="message">because tcc only builds static binaries</span></div><div class="line" id="140126"><span class="nick" style="color:#2e2a4a"><a href="#140126" label="[14:01:26]">&lt;stikonas&gt;</a></span><span class="message">(at least in early bootstrap)</span></div><div class="line" id="140144"><span class="nick" style="color:#2e2a4a"><a href="#140144" label="[14:01:44]">&lt;stikonas&gt;</a></span><span class="message">well, maybe that's the reason to build musl libc early...</span></div><div class="line" id="140145"><span class="nick" style="color:#2e2a4a"><a href="#140145" label="[14:01:45]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="140238"><span class="nick" style="color:#2e2a4a"><a href="#140238" label="[14:02:38]">&lt;stikonas&gt;</a></span><span class="message">janneke: maybe that's not critical, since we are not distributing those binaries...</span></div><div class="line" id="140258"><span class="nick" style="color:#af8d2f"><a href="#140258" label="[14:02:58]">&lt;janneke&gt;</a></span><span class="message">static or dynamic linking makes no difference, btw</span></div><div class="line" id="140308"><span class="nick" style="color:#2e2a4a"><a href="#140308" label="[14:03:08]">&lt;stikonas&gt;</a></span><span class="message">oh that's right...</span></div><div class="line" id="140333"><span class="nick" style="color:#6b8072"><a href="#140333" label="[14:03:33]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: it doesn't apply to non-distribution where you have the source code</span></div><div class="line" id="140349"><span class="nick" style="color:#2e2a4a"><a href="#140349" label="[14:03:49]">&lt;stikonas&gt;</a></span><span class="message">yeah, so I guess we can still do bootstrap...</span></div><div class="line" id="140411"><span class="nick" style="color:#6b8072"><a href="#140411" label="[14:04:11]">&lt;OriansJ&gt;</a></span><span class="message">and we shouldn't be distributing bootstrap binaries anyways</span></div><div class="line" id="140415"><span class="nick" style="color:#2e2a4a"><a href="#140415" label="[14:04:15]">&lt;stikonas&gt;</a></span><span class="message">we'll discard those temporary executables</span></div><div class="line" id="140420"><span class="nick" style="color:#2e2a4a"><a href="#140420" label="[14:04:20]">&lt;stikonas&gt;</a></span><span class="message">once we get gcc/glibc</span></div><div class="line" id="140430"><span class="nick" style="color:#2e2a4a"><a href="#140430" label="[14:04:30]">&lt;stikonas&gt;</a></span><span class="message">yeah, ok...</span></div><div class="line" id="140454"><span class="nick" style="color:#6b8072"><a href="#140454" label="[14:04:54]">&lt;OriansJ&gt;</a></span><span class="message">as only the bootstrap seeds and the final binaries might be distributed.</span></div><div class="line" id="140502"><span class="nick" style="color:#6b8072"><a href="#140502" label="[14:05:02]">&lt;OriansJ&gt;</a></span><span class="message">the rest is pure source.</span></div><div class="line" id="140531"><span class="nick" style="color:#2e2a4a"><a href="#140531" label="[14:05:31]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's fine</span></div><div class="line" id="140543"><span class="nick" style="color:#2e2a4a"><a href="#140543" label="[14:05:43]">&lt;stikonas&gt;</a></span><span class="message">and final binaries don't use mes libc</span></div><div class="line" id="140645"><span class="nick" style="color:#6b8072"><a href="#140645" label="[14:06:45]">&lt;OriansJ&gt;</a></span><span class="message">if needed janneke and I can make M2libc LGPLv3 and get it to cover the bootstrap libc needs</span></div><div class="line" id="141224"><span class="nick" style="color:#2e2a4a"><a href="#141224" label="[14:12:24]">&lt;stikonas&gt;</a></span><span class="message">well, I'll have some non-distibutable binaries for now</span></div><div class="line" id="141327"><span class="nick" style="color:#2e2a4a"><a href="#141327" label="[14:13:27]">&lt;stikonas&gt;</a></span><span class="message">e.g. heirloom yacc is CDDL v1</span></div><div class="line" id="141331"><span class="nick" style="color:#6b8072"><a href="#141331" label="[14:13:31]">&lt;OriansJ&gt;</a></span><span class="message">but <a rel="nofollow" href="https://www.gnu.org/licenses/gpl-faq.html">https://www.gnu.org/licenses/gpl-faq.html</a>  basically indicates it is only an issue if you don't don't distribute the source</span></div><div class="line" id="141332"><span class="nick" style="color:#af8d2f"><a href="#141332" label="[14:13:32]">&lt;janneke&gt;</a></span><span class="message">maybe a better solution is to ask upstream to relicene their code gplv3+-compatible?</span></div><div class="line" id="141348"><span class="nick" style="color:#af8d2f"><a href="#141348" label="[14:13:48]">&lt;janneke&gt;</a></span><span class="message">*relicense</span></div><div class="line" id="141353"><span class="nick" style="color:#2e2a4a"><a href="#141353" label="[14:13:53]">&lt;stikonas&gt;</a></span><span class="message">janneke: I think no chance of that happening</span></div><div class="line" id="141359"><span class="nick" style="color:#2e2a4a"><a href="#141359" label="[14:13:59]">&lt;stikonas&gt;</a></span><span class="message">ZFS is also stuck with CDDL...</span></div><div class="line" id="141415"><span class="nick" style="color:#6b8072"><a href="#141415" label="[14:14:15]">&lt;OriansJ&gt;</a></span><span class="message">and the compile local work around</span></div><div class="line" id="141435"><span class="nick" style="color:#af8d2f"><a href="#141435" label="[14:14:35]">&lt;janneke&gt;</a></span><span class="message">well, if upstream does not want to play nice, should we give in on our free software prinicples?</span></div><div class="line" id="141507"><span class="nick" style="color:#2e2a4a"><a href="#141507" label="[14:15:07]">&lt;stikonas&gt;</a></span><span class="message">well, yacc is only needed to bootstrap bison</span></div><div class="line" id="141510"><span class="nick" style="color:#af8d2f"><a href="#141510" label="[14:15:10]">&lt;janneke&gt;</a></span><span class="message">it's always best to ask, right?</span></div><div class="line" id="141543"><span class="nick" style="color:#2e2a4a"><a href="#141543" label="[14:15:43]">&lt;stikonas&gt;</a></span><span class="message">but whom do we right?</span></div><div class="line" id="141548"><span class="nick" style="color:#2e2a4a"><a href="#141548" label="[14:15:48]">&lt;stikonas&gt;</a></span><span class="message">s/right/write/</span></div><div class="line" id="141638"><span class="nick" style="color:#af8d2f"><a href="#141638" label="[14:16:38]">&lt;janneke&gt;</a></span><span class="message">anyway, we need to make the right choice when the need arises</span></div><div class="line" id="141706"><span class="nick" style="color:#af8d2f"><a href="#141706" label="[14:17:06]">&lt;janneke&gt;</a></span><span class="message">any specific package that you are thinking about right now?</span></div><div class="line" id="141801"><span class="nick" style="color:#2e2a4a"><a href="#141801" label="[14:18:01]">&lt;stikonas&gt;</a></span><span class="message">janneke: well, yacc and lex</span></div><div class="line" id="141810"><span class="nick" style="color:#6b8072"><a href="#141810" label="[14:18:10]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well no one here will be asked to compromise their free software prinicples.</span></div><div class="line" id="141832"><span class="nick" style="color:#2e2a4a"><a href="#141832" label="[14:18:32]">&lt;stikonas&gt;</a></span><span class="message">janneke: some early versions from AT&amp;T</span></div><div class="line" id="141843"><span class="nick" style="color:#6b8072"><a href="#141843" label="[14:18:43]">&lt;OriansJ&gt;</a></span><span class="message">Everything must have source code and the 4 essential freedoms</span></div><div class="line" id="141844"><span class="nick" style="color:#2e2a4a"><a href="#141844" label="[14:18:44]">&lt;stikonas&gt;</a></span><span class="message">those are needed to bootstrap flex/bison from GNU</span></div><div class="line" id="141911"><span class="nick" style="color:#2e2a4a"><a href="#141911" label="[14:19:11]">&lt;stikonas&gt;</a></span><span class="message">yeah, either you consume final binaries as end user, so you still have 4 freedoms</span></div><div class="line" id="141927"><span class="nick" style="color:#af8d2f"><a href="#141927" label="[14:19:27]">&lt;janneke&gt;</a></span><span class="message">stikonas: well, this could be a great way to raise awaress within GNU about bootstrappability</span></div><div class="line" id="141948"><span class="nick" style="color:#2e2a4a"><a href="#141948" label="[14:19:48]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="142005"><span class="nick" style="color:#af8d2f"><a href="#142005" label="[14:20:05]">&lt;janneke&gt;</a></span><span class="message">it's not our problem if bison cannot be bootstrapped</span></div><div class="line" id="142015"><span class="nick" style="color:#af8d2f"><a href="#142015" label="[14:20:15]">&lt;janneke&gt;</a></span><span class="message">or only with non-gplv3+ compatible package</span></div><div class="line" id="142058"><span class="nick" style="color:#af8d2f"><a href="#142058" label="[14:20:58]">&lt;janneke&gt;</a></span><span class="message">it could be a feature to address this problem to GNU and the bison maintainers</span></div><div class="line" id="142158"><span class="nick" style="color:#6b8072"><a href="#142158" label="[14:21:58]">&lt;OriansJ&gt;</a></span><span class="message">related: <a rel="nofollow" href="https://www.fsf.org/licensing/zfs-and-linux">https://www.fsf.org/licensing/zfs-and-linux</a>  on CDDL and GPL</span></div><div class="line" id="142223"><span class="nick" style="color:#af8d2f"><a href="#142223" label="[14:22:23]">&lt;janneke&gt;</a></span><span class="message">OriansJ: in general the advise is against using the lesser gpl</span></div><div class="line" id="142259"><span class="nick" style="color:#af8d2f"><a href="#142259" label="[14:22:59]">&lt;janneke&gt;</a></span><span class="message">for strategic purposes, we could make that choice, but i would not make it lightly</span></div><div class="line" id="142308"><span class="nick" style="color:#2e2a4a"><a href="#142308" label="[14:23:08]">&lt;stikonas&gt;</a></span><span class="message">well, in any case we don't distribute combined CDDL and GPL stuff</span></div><div class="line" id="142328"><span class="nick" style="color:#6b8072"><a href="#142328" label="[14:23:28]">&lt;OriansJ&gt;</a></span><span class="message">janneke: well M2libc is just a C library</span></div><div class="line" id="142352"><span class="nick" style="color:#2e2a4a"><a href="#142352" label="[14:23:52]">&lt;stikonas&gt;</a></span><span class="message">well, glibc was LGPL I guess for exactly that reason</span></div><div class="line" id="142357"><span class="nick" style="color:#2e2a4a"><a href="#142357" label="[14:23:57]">&lt;stikonas&gt;</a></span><span class="message">everything on the system uses it</span></div><div class="line" id="142438"><span class="nick" style="color:#6b8072"><a href="#142438" label="[14:24:38]">&lt;OriansJ&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.gnu.org/licenses/why-not-lgpl.html">https://www.gnu.org/licenses/why-not-lgpl.html</a> </span></div><div class="line" id="142533"><span class="nick" style="color:#6b8072"><a href="#142533" label="[14:25:33]">&lt;OriansJ&gt;</a></span><span class="message">and I quote: The most common case is when a free library's features are readily available for proprietary software through other libraries. In that case, the library cannot give free software any particular advantage, so it is better to use the Lesser GPL for that library.</span></div><div class="line" id="142609"><span class="nick" style="color:#6b8072"><a href="#142609" label="[14:26:09]">&lt;OriansJ&gt;</a></span><span class="message">M2libc is the bare minimal C library with nothing special inside.</span></div><div class="line" id="142657"><span class="nick" style="color:#6b8072"><a href="#142657" label="[14:26:57]">&lt;OriansJ&gt;</a></span><span class="message">It can be sacrificed</span></div><div class="line" id="142944"><span class="nick" style="color:#6b8072"><a href="#142944" label="[14:29:44]">&lt;OriansJ&gt;</a></span><span class="message">janneke: everything else is GPLv3+ (except blynn-compiler which is only GPLv3)</span></div><div class="line" id="143427"><span class="nick" style="color:#af8d2f"><a href="#143427" label="[14:34:27]">&lt;janneke&gt;</a></span><span class="message">OriansJ: right, so let's see where this goes</span></div><div class="line" id="143550"><span class="nick" style="color:#6b8072"><a href="#143550" label="[14:35:50]">&lt;OriansJ&gt;</a></span><span class="message">indeed. We will leave M2libc as GPLv3+ for now and if it becomes an issue we convert M2libc to LGPLv3+ and have everything that is a problem use it</span></div><div class="line" id="144214"><span class="nick" style="color:#6d2462"><a href="#144214" label="[14:42:14]">&lt;xentrac&gt;</a></span><span class="message">stikonas: no chance of that happening today</span></div><div class="line" id="144325"><span class="nick" style="color:#6d2462"><a href="#144325" label="[14:43:25]">&lt;xentrac&gt;</a></span><span class="message">but I think the ownership of yacc in the last 25 years has belonged to AT&amp;T, Novell, Caldera, SCO (the real one, not the evil one), Sun, and Oracle</span></div><div class="line" id="144342"><span class="nick" style="color:#6d2462"><a href="#144342" label="[14:43:42]">&lt;xentrac&gt;</a></span><span class="message">so in five years it might have a new owner and they might be more open to relicensing</span></div><div class="line" id="144944"><span class="nick" style="color:#6b8072"><a href="#144944" label="[14:49:44]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: well Oracle grade evil is easier to deal with. Just pay them enough money and their license it anyway you want.</span></div><div class="line" id="145936"><span class="nick" style="color:#bc80bd"><a href="#145936" label="[14:59:36]">&lt;malina&gt;</a></span><span class="message">I have a hard time imagining a ful bootstrap chain as this as anything but open sourced, for one. GPL curbs freedoms to deal with the posit of &quot;evil, greedy businesses and people&quot;. Again, can't really see that being a thing for 'source strapping', so licensing shouldn't be particularly interesting here.. I mean.. what.. &quot;Try our totally verifiable strapping from source source, for only 10.99, mind you, it's a closed binary&quot;. lol. you can  try</span></div><div class="line" id="145936"><span class="nick" style="color:#bc80bd"><a href="#145936" label="[14:59:36]">&lt;malina&gt;</a></span><span class="message">licensing a binary/ies from the bootstrap, but truth is, the method to deduce any binary from such bootstrap is hard to license. (as in, a specific solution you can licence). it will never prevent someone to decide to make another solution with prior steps and so whatever they want. which after all, is the point of somehting free, you say? it's like yacc, lex , flex and bison. none of the parsers or so which are generated are bound by the</span></div><div class="line" id="145937"><span class="nick" style="color:#bc80bd"><a href="#145937" label="[14:59:37]">&lt;malina&gt;</a></span><span class="message">same licence.</span></div><div class="line" id="150108"><span class="nick" style="color:#6d2462"><a href="#150108" label="[15:01:08]">&lt;xentrac&gt;</a></span><span class="message">hmm, do you think Larry Ellison is motivated by profit?  I thought he was motivated by power and winning</span></div><div class="line" id="150127"><span class="nick" style="color:#bc80bd"><a href="#150127" label="[15:01:27]">&lt;malina&gt;</a></span><span class="message">don't know who that is</span></div><div class="line" id="150134"><span class="nick" style="color:#bc80bd"><a href="#150134" label="[15:01:34]">&lt;malina&gt;</a></span><span class="message">anyone of interest?</span></div><div class="line" id="150135"><span class="nick" style="color:#6d2462"><a href="#150135" label="[15:01:35]">&lt;xentrac&gt;</a></span><span class="message">I wasn't asking you</span></div><div class="line" id="150138"><span class="nick" style="color:#bc80bd"><a href="#150138" label="[15:01:38]">&lt;malina&gt;</a></span><span class="message">ah</span></div><div class="line" id="150203"><span class="nick" style="color:#6d2462"><a href="#150203" label="[15:02:03]">&lt;xentrac&gt;</a></span><span class="message">it's possible that I just don't know anyone who has enough money to bribe Larry Ellison</span></div><div class="line" id="150235"><span class="nick" style="color:#6d2462"><a href="#150235" label="[15:02:35]">&lt;xentrac&gt;</a></span><span class="message">but that such a quantity of money might exist</span></div><div class="line" id="150825"><span class="nick" style="color:#6b8072"><a href="#150825" label="[15:08:25]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: think of him like a lawn mower. when given a choice between $xK and $0; he chooses money everytime.</span></div><div class="line" id="150830"><span class="nick" style="color:#6d2462"><a href="#150830" label="[15:08:30]">&lt;xentrac&gt;</a></span><span class="message">I'm not sure that's necessarily a practical solution to the problem, though.  Oracle is seeking US$8.8 billion in damages in Google v. Oracle, and if they prevail, they miight be in a position to file similar lawsuits against anyone who has ever implemented, say, the Unix API or Oracle extensions to SQL</span></div><div class="line" id="150920"><span class="nick" style="color:#6d2462"><a href="#150920" label="[15:09:20]">&lt;xentrac&gt;</a></span><span class="message">it might take a similar sum of money to get them to see yacc as worth releasing from their arsenal</span></div><div class="line" id="150928"><span class="nick" style="color:#6d2462"><a href="#150928" label="[15:09:28]">&lt;xentrac&gt;</a></span><span class="message">(if they really are yacc's owner, which I'm not totally sure of)</span></div><div class="line" id="151029"><span class="nick" style="color:#6b8072"><a href="#151029" label="[15:10:29]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: worst case, someone here rewrites yacc in Haskell</span></div><div class="line" id="151042"><span class="nick" style="color:#6d2462"><a href="#151042" label="[15:10:42]">&lt;xentrac&gt;</a></span><span class="message">or Scheme ;)</span></div><div class="line" id="151109"><span class="nick" style="color:#6b8072"><a href="#151109" label="[15:11:09]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: or C or even assembly if they want</span></div><div class="line" id="151123"><span class="nick" style="color:#6d2462"><a href="#151123" label="[15:11:23]">&lt;xentrac&gt;</a></span><span class="message">yeah, but Scheme is more practical</span></div><div class="line" id="151137"><span class="nick" style="color:#6b8072"><a href="#151137" label="[15:11:37]">&lt;OriansJ&gt;</a></span><span class="message">we will figure it out like we always do</span></div><div class="line" id="151152"><span class="nick" style="color:#6b8072"><a href="#151152" label="[15:11:52]">&lt;OriansJ&gt;</a></span><span class="message">Nothing is going to stop the bootstrap from happening</span></div><div class="line" id="151219"><span class="nick" style="color:#6b8072"><a href="#151219" label="[15:12:19]">&lt;OriansJ&gt;</a></span><span class="message">The worst that happens is it gets slowed down by something</span></div><div class="line" id="151243"><span class="nick" style="color:#6d2462"><a href="#151243" label="[15:12:43]">&lt;xentrac&gt;</a></span><span class="message">actually another approach that might be adequate might be to use simpler, less efficient parsing algorithms.  not sure if that can be call-compatible</span></div><div class="line" id="151321"><span class="nick" style="color:#6d2462"><a href="#151321" label="[15:13:21]">&lt;xentrac&gt;</a></span><span class="message">but I mean it's quite straightforward to do general context-free parsing with backtracking for example.  it just has an exponential-time worst case</span></div><div class="line" id="151327"><span class="nick" style="color:#6b8072"><a href="#151327" label="[15:13:27]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: nyacc!!</span></div><div class="line" id="151340"><span class="nick" style="color:#6b8072"><a href="#151340" label="[15:13:40]">&lt;OriansJ&gt;</a></span><span class="message">mes.c runs nyacc</span></div><div class="line" id="151341"><span class="nick" style="color:#6d2462"><a href="#151341" label="[15:13:41]">&lt;xentrac&gt;</a></span><span class="message">oh right, nyacc</span></div><div class="line" id="151345"><span class="nick" style="color:#6d2462"><a href="#151345" label="[15:13:45]">&lt;xentrac&gt;</a></span><span class="message">I forgot all about it</span></div><div class="line" id="151351"><span class="nick" style="color:#6b8072"><a href="#151351" label="[15:13:51]">&lt;OriansJ&gt;</a></span><span class="message">siraben: nyacc</span></div><div class="line" id="151403"><span class="nick" style="color:#6b8072"><a href="#151403" label="[15:14:03]">&lt;OriansJ&gt;</a></span><span class="message">Removes the need for yacc</span></div><div class="line" id="151420"><span class="nick" style="color:#6b8072"><a href="#151420" label="[15:14:20]">&lt;OriansJ&gt;</a></span><span class="message">entirely</span></div><div class="line" id="151457"><span class="nick" style="color:#6b8072"><a href="#151457" label="[15:14:57]">&lt;OriansJ&gt;</a></span><span class="message">and gash-utils should have sed as well</span></div><div class="line" id="151510"><span class="nick" style="color:#6b8072"><a href="#151510" label="[15:15:10]">&lt;OriansJ&gt;</a></span><span class="message">They are all supposed to run on mes.c</span></div><div class="line" id="151535"><span class="nick" style="color:#6d2462"><a href="#151535" label="[15:15:35]">&lt;xentrac&gt;</a></span><span class="message">malina: it's entirely plausible to imagine, for example, BAE Systems producing a proprietary derivative of our bootstrapping toolchain.  they would of course need to provide the source to their customers, but they could want to forbid those customers to redistribute it --- or, worse, to modify it.  So strong copyleft is doing its usual share of work in this case</span></div><div class="line" id="151604"><span class="nick" style="color:#6b8072"><a href="#151604" label="[15:16:04]">&lt;OriansJ&gt;</a></span><span class="message">so is gash if I remember correctly (correct me if I am wrong janneke)</span></div><div class="line" id="151633"><span class="nick" style="color:#6d2462"><a href="#151633" label="[15:16:33]">&lt;xentrac&gt;</a></span><span class="message">(I'm currently doing work with a subcontractor to BAE Systems, and it is a great deal of headache to deal with them; they are quite ruthless)</span></div><div class="line" id="151937"><span class="nick" style="color:#6b8072"><a href="#151937" label="[15:19:37]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: military contractors are never fun to work with and for obvious reasons.</span></div><div class="line" id="152131"><span class="nick" style="color:#6d2462"><a href="#152131" label="[15:21:31]">&lt;xentrac&gt;</a></span><span class="message">that hasn't been my experience in the past at all</span></div><div class="line" id="152222"><span class="nick" style="color:#6d2462"><a href="#152222" label="[15:22:22]">&lt;xentrac&gt;</a></span><span class="message">but certainly many of them would love to sell their special security sauce to security-hungry clients with deep pockets and an appetite for long-shot research that might pay off</span></div><div class="line" id="152354"><span class="nick" style="color:#6b8072"><a href="#152354" label="[15:23:54]">&lt;OriansJ&gt;</a></span><span class="message">In the words of the movie Pentagon wars. In baseball the losing team isn't killed.</span></div><div class="line" id="152456"><span class="nick" style="color:#6b8072"><a href="#152456" label="[15:24:56]">&lt;OriansJ&gt;</a></span><span class="message">correction: In baseball, the losing team isn't killed by their opponents.</span></div><div class="line" id="152521"><span class="nick" style="color:#2e2a4a"><a href="#152521" label="[15:25:21]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: gash currently doesn'trun on mes.c</span></div><div class="line" id="152733"><span class="nick" style="color:#6b8072"><a href="#152733" label="[15:27:33]">&lt;OriansJ&gt;</a></span><span class="message">&gt;.&lt; ok</span></div><div class="line" id="152821"><span class="nick" style="color:#2e2a4a"><a href="#152821" label="[15:28:21]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: that's why we didn't use it in live-bootstrap...</span></div><div class="line" id="152832"><span class="nick" style="color:#2e2a4a"><a href="#152832" label="[15:28:32]">&lt;stikonas&gt;</a></span><span class="message">at the moment we are still using kaem for scripting</span></div><div class="line" id="152844"><span class="nick" style="color:#2e2a4a"><a href="#152844" label="[15:28:44]">&lt;stikonas&gt;</a></span><span class="message">although we have now switched to Makefiles for building</span></div><div class="line" id="152855"><span class="nick" style="color:#2e2a4a"><a href="#152855" label="[15:28:55]">&lt;stikonas&gt;</a></span><span class="message">makes building a bit nicer than writing kaem commands...</span></div><div class="line" id="152931"><span class="nick" style="color:#2e2a4a"><a href="#152931" label="[15:29:31]">&lt;stikonas&gt;</a></span><span class="message">non-interactive bash is close too but we need to sort out bison first</span></div><div class="line" id="153037"><span class="nick" style="color:#6b8072"><a href="#153037" label="[15:30:37]">&lt;OriansJ&gt;</a></span><span class="message">hopefully nyacc will give you that</span></div><div class="line" id="153103"><span class="nick" style="color:#6d2462"><a href="#153103" label="[15:31:03]">&lt;xentrac&gt;</a></span><span class="message">hopefully nyacc can build bison</span></div><div class="line" id="153104"><span class="nick" style="color:#2e2a4a"><a href="#153104" label="[15:31:04]">&lt;stikonas&gt;</a></span><span class="message">well, I think I'll first try to get that AT&amp;T yacc working</span></div><div class="line" id="153110"><span class="nick" style="color:#6b8072"><a href="#153110" label="[15:31:10]">&lt;OriansJ&gt;</a></span><span class="message">as it is needed by MesCC to run</span></div><div class="line" id="153113"><span class="nick" style="color:#2e2a4a"><a href="#153113" label="[15:31:13]">&lt;stikonas&gt;</a></span><span class="message">maybe later nyacc...</span></div><div class="line" id="153129"><span class="nick" style="color:#6b8072"><a href="#153129" label="[15:31:29]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: if not we know who to bug</span></div><div class="line" id="153215"><span class="nick" style="color:#2e2a4a"><a href="#153215" label="[15:32:15]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: basically trying to build <a rel="nofollow" href="https://gitlab.com/giomasce/nbs#what-happens-then">https://gitlab.com/giomasce/nbs#what-happens-then</a> </span></div><div class="line" id="153235"><span class="nick" style="color:#6d2462"><a href="#153235" label="[15:32:35]">&lt;xentrac&gt;</a></span><span class="message">:)</span></div><div class="line" id="153259"><span class="nick" style="color:#2e2a4a"><a href="#153259" label="[15:32:59]">&lt;stikonas&gt;</a></span><span class="message">well, if anybody knows nyacc, feel free to join too :)</span></div><div class="line" id="153307"><span class="nick" style="color:#2e2a4a"><a href="#153307" label="[15:33:07]">&lt;stikonas&gt;</a></span><span class="message">that might be nicer solution in the long term</span></div><div class="line" id="155341"><span class="nick" style="color:#6b8072"><a href="#155341" label="[15:53:41]">&lt;OriansJ&gt;</a></span><span class="message">well janneke should know nyacc as he uses it in MesCC</span></div><div class="line" id="155736"><span class="nick" style="color:#2e2a4a"><a href="#155736" label="[15:57:36]">&lt;stikonas&gt;</a></span><span class="message">janneke: do you have any idea how hard would it be to bootstrap flex/bison in nyacc?</span></div><div class="line" id="160149"><span class="nick" style="color:#af8d2f"><a href="#160149" label="[16:01:49]">&lt;janneke&gt;</a></span><span class="message">stikonas: i'm really only using nyacc, the c-parser was fully written by mwette</span></div><div class="line" id="160210"><span class="nick" style="color:#2e2a4a"><a href="#160210" label="[16:02:10]">&lt;stikonas&gt;</a></span><span class="message">ok, I see...</span></div><div class="line" id="161335"><span class="nick" style="color:#af8d2f"><a href="#161335" label="[16:13:35]">&lt;janneke&gt;</a></span><span class="message">i suspect that yacc is a lot simpler than c, though</span></div><div class="line" id="173051"><span class="nick" style="color:#389600"><a href="#173051" label="[17:30:51]">&lt;bauen1&gt;</a></span><span class="message">speaking of formal proofs, apparently c++ grammar is undecidable <a rel="nofollow" href="https://medium.com/@mujjingun_23509/full-proof-that-c-grammar-is-undecidable-34e22dd8b664">https://medium.com/@mujjingun_23509/full-proof-that-c-grammar-is-undecidable-34e22dd8b664</a>  i don't fully understand it but yeah :D</span></div><div class="line" id="173159"><span class="nick" style="color:#389600"><a href="#173159" label="[17:31:59]">&lt;bauen1&gt;</a></span><span class="message">found on some discord server</span></div><div class="line" id="173456"><span class="nick" style="color:#8dd3c7"><a href="#173456" label="[17:34:56]">&lt;rain1&gt;</a></span><span class="message">pretty much everything is accidentally turing complete</span></div><div class="line" id="173628"><span class="nick" style="color:#389600"><a href="#173628" label="[17:36:28]">&lt;bauen1&gt;</a></span><span class="message">rain1: or a half-complete implementation of common lisp - someone i don't know the name of</span></div><div class="line" id="174733"><span class="nick">***</span><span class="message notice">roptat_ is now known as roptat</span></div><div class="line" id="182339"><span class="nick" style="color:#2e2a4a"><a href="#182339" label="[18:23:39]">&lt;deesix&gt;</a></span><span class="message">OriansJ, the 'TMP' branch of my M2-Planet repo updates the M2libc submodule and uses the standard naming that comes with it; in the test scripts. If you think it's OK, feel free to cherry-pick 89829fc38eba16fcbd09d0eb5f1e8a04a76c7e47</span></div><div class="line" id="203257"><span class="nick" style="color:#6b8072"><a href="#203257" label="[20:32:57]">&lt;OriansJ&gt;</a></span><span class="message">thank you deesix</span></div><div class="line" id="203328"><span class="nick" style="color:#6b8072"><a href="#203328" label="[20:33:28]">&lt;OriansJ&gt;</a></span><span class="message">merged</span></div><div class="line" id="212012"><span class="nick" style="color:#2e2a4a"><a href="#212012" label="[21:20:12]">&lt;deesix&gt;</a></span><span class="message">OriansJ, sorry. It turns out it's not OK. I'm preparing a replacement commit.</span></div><div class="line" id="214842"><span class="nick" style="color:#2e2a4a"><a href="#214842" label="[21:48:42]">&lt;deesix&gt;</a></span><span class="message">OriansJ, please use e9553d5f1344752d31e157c33f1cc790843d24c6 _instead_. Sorry for the inconvenience!! :(</span></div><div class="line" id="215109"><span class="nick" style="color:#2e2a4a"><a href="#215109" label="[21:51:09]">&lt;deesix&gt;</a></span><span class="message">The change is about test0101, creating some x86 proof, which uses the renamed ELF.</span></div><div class="line" id="220655"><span class="nick">***</span><span class="message notice">civodul` is now known as civoudl</span></div><div class="line" id="220657"><span class="nick">***</span><span class="message notice">civoudl is now known as civodul</span></div><div class="line" id="220752"><span class="nick" style="color:#2e2a4a"><a href="#220752" label="[22:07:52]">&lt;deesix&gt;</a></span><span class="message">I found it during unification, as those cross-arch situations needs some extra care.</span></div><div class="line" id="221751"><span class="nick" style="color:#8dd3c7"><a href="#221751" label="[22:17:51]">&lt;fossy&gt;</a></span><span class="message">stikonas: afaict it is fine</span></div><div class="line" id="221832"><span class="nick" style="color:#8dd3c7"><a href="#221832" label="[22:18:32]">&lt;fossy&gt;</a></span><span class="message">many distributions link together zfs on computer side, I.e. it is compiled and installed by the end user as we are doing</span></div><div class="line" id="221834"><span class="nick" style="color:#2e2a4a"><a href="#221834" label="[22:18:34]">&lt;stikonas&gt;</a></span><span class="message">yeah, we are not redistributing...</span></div><div class="line" id="221851"><span class="nick" style="color:#2e2a4a"><a href="#221851" label="[22:18:51]">&lt;stikonas&gt;</a></span><span class="message">and we are not installing, we already discussed this with other people here...</span></div><div class="line" id="221911"><span class="nick" style="color:#2e2a4a"><a href="#221911" label="[22:19:11]">&lt;stikonas&gt;</a></span><span class="message">fossy: anyway, I briefly tested that yacc binary and something is broken...</span></div><div class="line" id="221920"><span class="nick" style="color:#2e2a4a"><a href="#221920" label="[22:19:20]">&lt;stikonas&gt;</a></span><span class="message">probably patch broke something</span></div><div class="line" id="222001"><span class="nick" style="color:#8dd3c7"><a href="#222001" label="[22:20:01]">&lt;fossy&gt;</a></span><span class="message">bauen1: does bash/make run on myunix or does it need too many syscalls</span></div><div class="line" id="222012"><span class="nick" style="color:#8dd3c7"><a href="#222012" label="[22:20:12]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm, what fails?</span></div><div class="line" id="222032"><span class="nick" style="color:#2e2a4a"><a href="#222032" label="[22:20:32]">&lt;stikonas&gt;</a></span><span class="message">it complained that token on line 3 is unrecognized keyword</span></div><div class="line" id="222056"><span class="nick" style="color:#2e2a4a"><a href="#222056" label="[22:20:56]">&lt;stikonas&gt;</a></span><span class="message">I also tried building yacc with gcc and it still failed but quite a bit later</span></div><div class="line" id="222109"><span class="nick" style="color:#8dd3c7"><a href="#222109" label="[22:21:09]">&lt;fossy&gt;</a></span><span class="message">hmmm</span></div><div class="line" id="222116"><span class="nick" style="color:#2e2a4a"><a href="#222116" label="[22:21:16]">&lt;stikonas&gt;</a></span><span class="message">but maybe I was missing something</span></div><div class="line" id="222121"><span class="nick" style="color:#8dd3c7"><a href="#222121" label="[22:21:21]">&lt;fossy&gt;</a></span><span class="message">was this for bash?</span></div><div class="line" id="222124"><span class="nick" style="color:#8dd3c7"><a href="#222124" label="[22:21:24]">&lt;fossy&gt;</a></span><span class="message">or following nbs</span></div><div class="line" id="222125"><span class="nick" style="color:#2e2a4a"><a href="#222125" label="[22:21:25]">&lt;stikonas&gt;</a></span><span class="message">anyway, the patch does break more things</span></div><div class="line" id="222130"><span class="nick" style="color:#2e2a4a"><a href="#222130" label="[22:21:30]">&lt;stikonas&gt;</a></span><span class="message">no, this is following nbs</span></div><div class="line" id="222136"><span class="nick" style="color:#2e2a4a"><a href="#222136" label="[22:21:36]">&lt;stikonas&gt;</a></span><span class="message">i.e. on flex 2.5.1</span></div><div class="line" id="222145"><span class="nick" style="color:#8dd3c7"><a href="#222145" label="[22:21:45]">&lt;fossy&gt;</a></span><span class="message">I see</span></div><div class="line" id="222215"><span class="nick" style="color:#2e2a4a"><a href="#222215" label="[22:22:15]">&lt;stikonas&gt;</a></span><span class="message">maybe it's possible to fix that patch...</span></div><div class="line" id="222220"><span class="nick" style="color:#2e2a4a"><a href="#222220" label="[22:22:20]">&lt;stikonas&gt;</a></span><span class="message">I haven't tried yet</span></div><div class="line" id="222234"><span class="nick" style="color:#2e2a4a"><a href="#222234" label="[22:22:34]">&lt;stikonas&gt;</a></span><span class="message">fossy: bash segfaults, but I guess you know that</span></div><div class="line" id="222248"><span class="nick" style="color:#2e2a4a"><a href="#222248" label="[22:22:48]">&lt;stikonas&gt;</a></span><span class="message">and we need bison first anyway...</span></div><div class="line" id="222810"><span class="nick" style="color:#8dd3c7"><a href="#222810" label="[22:28:10]">&lt;fossy&gt;</a></span><span class="message">stikonas: yes in an interactive shell</span></div><div class="line" id="222820"><span class="nick" style="color:#8dd3c7"><a href="#222820" label="[22:28:20]">&lt;fossy&gt;</a></span><span class="message">not if u use it to run a script</span></div><div class="line" id="222834"><span class="nick" style="color:#2e2a4a"><a href="#222834" label="[22:28:34]">&lt;stikonas&gt;</a></span><span class="message">oh I see...</span></div><div class="line" id="222845"><span class="nick" style="color:#2e2a4a"><a href="#222845" label="[22:28:45]">&lt;stikonas&gt;</a></span><span class="message">so is it just node missing?</span></div><div class="line" id="222854"><span class="nick" style="color:#8dd3c7"><a href="#222854" label="[22:28:54]">&lt;fossy&gt;</a></span><span class="message">I believe so</span></div><div class="line" id="222859"><span class="nick" style="color:#2e2a4a"><a href="#222859" label="[22:28:59]">&lt;stikonas&gt;</a></span><span class="message">we can probably do it in a couple of lines</span></div><div class="line" id="222913"><span class="nick" style="color:#8dd3c7"><a href="#222913" label="[22:29:13]">&lt;fossy&gt;</a></span><span class="message">I patched the tty check out which allowed normal scripts to succeed</span></div><div class="line" id="222936"><span class="nick" style="color:#2e2a4a"><a href="#222936" label="[22:29:36]">&lt;stikonas&gt;</a></span><span class="message">let me see which device node it expects</span></div><div class="line" id="223014"><span class="nick" style="color:#6b8072"><a href="#223014" label="[22:30:14]">&lt;OriansJ&gt;</a></span><span class="message">deesix: the revised commit has been uploaded</span></div><div class="line" id="223031"><span class="nick" style="color:#2e2a4a"><a href="#223031" label="[22:30:31]">&lt;stikonas&gt;</a></span><span class="message">ok, just /dev/tty</span></div><div class="line" id="223608"><span class="nick" style="color:#8dd3c7"><a href="#223608" label="[22:36:08]">&lt;fossy&gt;</a></span><span class="message">we need util linux no,</span></div><div class="line" id="223609"><span class="nick" style="color:#8dd3c7"><a href="#223609" label="[22:36:09]">&lt;fossy&gt;</a></span><span class="message">?</span></div><div class="line" id="223724"><span class="nick" style="color:#2e2a4a"><a href="#223724" label="[22:37:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: we need mknod</span></div><div class="line" id="223742"><span class="nick" style="color:#2e2a4a"><a href="#223742" label="[22:37:42]">&lt;stikonas&gt;</a></span><span class="message">but I think I'll try to write a few liner c app that created /dev/tty</span></div><div class="line" id="223748"><span class="nick" style="color:#2e2a4a"><a href="#223748" label="[22:37:48]">&lt;stikonas&gt;</a></span><span class="message">at least to test</span></div><div class="line" id="223753"><span class="nick" style="color:#2e2a4a"><a href="#223753" label="[22:37:53]">&lt;stikonas&gt;</a></span><span class="message">but first I need to rebuild my chroot</span></div><div class="line" id="224153"><span class="nick" style="color:#2e2a4a"><a href="#224153" label="[22:41:53]">&lt;deesix&gt;</a></span><span class="message">OriansJ, I see, thank you very much.</span></div><div class="line" id="232932"><span class="nick" style="color:#8dd3c7"><a href="#232932" label="[23:29:32]">&lt;fossy&gt;</a></span><span class="message">stikonas: heirloom yacc is cddl 1.0 yeah? not 1.1?</span></div><div class="line" id="233819"><span class="nick" style="color:#2e2a4a"><a href="#233819" label="[23:38:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah</span></div><div class="line" id="233827"><span class="nick" style="color:#2e2a4a"><a href="#233827" label="[23:38:27]">&lt;stikonas&gt;</a></span><span class="message">is cddl 1.0 not free?</span></div><div class="line" id="233846"><span class="nick" style="color:#2e2a4a"><a href="#233846" label="[23:38:46]">&lt;stikonas&gt;</a></span><span class="message">hmm, it is</span></div><div class="line" id="233855"><span class="nick" style="color:#2e2a4a"><a href="#233855" label="[23:38:55]">&lt;stikonas&gt;</a></span><span class="message">it's free software license</span></div><div class="line" id="233857"><span class="nick" style="color:#2e2a4a"><a href="#233857" label="[23:38:57]">&lt;stikonas&gt;</a></span><span class="message">just annoying one</span></div><div class="line" id="233910"><span class="nick" style="color:#2e2a4a"><a href="#233910" label="[23:39:10]">&lt;stikonas&gt;</a></span><span class="message">oh that's 1.1</span></div><div class="line" id="233945"><span class="nick" style="color:#2e2a4a"><a href="#233945" label="[23:39:45]">&lt;stikonas&gt;</a></span><span class="message">ok, so 1.0 is fine</span></div><div class="line" id="233948"><span class="nick" style="color:#2e2a4a"><a href="#233948" label="[23:39:48]">&lt;stikonas&gt;</a></span><span class="message">1.1 is not...</span></div><div class="line" id="234001"><span class="nick" style="color:#2e2a4a"><a href="#234001" label="[23:40:01]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://en.wikipedia.org/wiki/Common_Development_and_Distribution_License">https://en.wikipedia.org/wiki/Common_Development_and_Distribution_License</a> </span></div><div class="line" id="234543"><span class="nick" style="color:#2e2a4a"><a href="#234543" label="[23:45:43]">&lt;stikonas&gt;</a></span><span class="message">fossy: anyway, it's not just missing tty...</span></div><div class="line" id="234554"><span class="nick" style="color:#2e2a4a"><a href="#234554" label="[23:45:54]">&lt;stikonas&gt;</a></span><span class="message">bash crashes even if /dev/tty is there</span></div><div class="line" id="234608"><span class="nick" style="color:#2e2a4a"><a href="#234608" label="[23:46:08]">&lt;stikonas&gt;</a></span><span class="message">actually even with /dev bind mounted from host system it crashes</span></div><div class="line" id="234923"><span class="nick" style="color:#2e2a4a"><a href="#234923" label="[23:49:23]">&lt;stikonas&gt;</a></span><span class="message">I think it refuses to run even empty script... Only bash --help and bash --version work</span></div><div class="line" id="235112"><span class="nick" style="color:#2e2a4a"><a href="#235112" label="[23:51:12]">&lt;stikonas&gt;</a></span><span class="message">so I'm a bit out of ideas now...</span></div><div class="line" id="235116"><span class="nick" style="color:#2e2a4a"><a href="#235116" label="[23:51:16]">&lt;stikonas&gt;</a></span><span class="message">how we can proceed</span></div><div class="line" id="235205"><span class="nick" style="color:#2e2a4a"><a href="#235205" label="[23:52:05]">&lt;stikonas&gt;</a></span><span class="message">well, I can try to build lex but it probably also needs all those wchar functions</span></div><div class="line" id="235936"><span class="nick" style="color:#8dd3c7"><a href="#235936" label="[23:59:36]">&lt;fossy&gt;</a></span><span class="message">stikonas: uhhh</span></div><div class="line" id="235950"><span class="nick" style="color:#8dd3c7"><a href="#235950" label="[23:59:50]">&lt;fossy&gt;</a></span><span class="message">I ran a script inside live enviroment using the bash...</span></div><br /></div></body></html>