<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-02-14.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000637"><span class="nick" style="color:#389600"><a href="#000637" label="[00:06:37]">&lt;Googulator&gt;</a></span><span class="message">stikonas_: yes, &quot;make bootstrap2&quot;</span></div><div class="line" id="000702"><span class="nick" style="color:#8dd3c7"><a href="#000702" label="[00:07:02]">&lt;stikonas_&gt;</a></span><span class="message">ekaitz: ^^</span></div><div class="line" id="001024"><span class="nick" style="color:#2e2a4a"><a href="#001024" label="[00:10:24]">&lt;ekaitz&gt;</a></span><span class="message">Googulator: so instead of just make, make boostrap2?</span></div><div class="line" id="001025"><span class="nick" style="color:#2e2a4a"><a href="#001025" label="[00:10:25]">&lt;ekaitz&gt;</a></span><span class="message">good</span></div><div class="line" id="081800"><span class="nick" style="color:#6b8072"><a href="#081800" label="[08:18:00]">&lt;Guest000&gt;</a></span><span class="message">Hello, I created an img with this command ./rootfs.py -b -a x86 --cores 4 on bare metal, then I flashed it on the USB driver and run from the bios, when does it go and the computer returns? it can be</span></div><div class="line" id="082249"><span class="nick" style="color:#80b1d3"><a href="#082249" label="[08:22:49]">&lt;euleritian&gt;</a></span><span class="message">About self-hostig, how much work is it with the tools provided in <a rel="nofollow" href="https://fosdem.org/2024/schedule/event/fosdem-2024-2560-self-hosting-and-autonomy-using-guix-forge/">https://fosdem.org/2024/schedule/event/fosdem-2024-2560-self-hosting-and-autonomy-using-guix-forge/</a>  ?</span></div><div class="line" id="090949"><span class="nick" style="color:#6b8072"><a href="#090949" label="[09:09:49]">&lt;Guest000&gt;</a></span><span class="message">Hello, I created an img with this command ./rootfs.py -b -a x86 --cores 4 on bare metal, then I flashed it on the USB driver and run from the bios, when does it go and the computer returns? it can be</span></div><div class="line" id="091301"><span class="nick" style="color:#6d2462"><a href="#091301" label="[09:13:01]">&lt;Guest36&gt;</a></span><span class="message">Hello, I created an img with this command ./rootfs.py -b -a x86 --cores 4 on bare metal, then I flashed it on the USB driver and run from the bios, when does it go and the computer returns? it can be</span></div><div class="line" id="091301"><span class="nick" style="color:#234e69"><a href="#091301" label="[09:13:01]">&lt;efraim&gt;</a></span><span class="message">so I don't forget for later, re early patch in live-bootstrap and possibly elsewhere, has anyone thought about using ed and an ed script instead of patch? IIRC there's a way to turn a diff/patch into a file you can pass to ed and that might help with ... something</span></div><div class="line" id="093023"><span class="nick" style="color:#6b8072"><a href="#093023" label="[09:30:23]">&lt;Guest000&gt;</a></span><span class="message">Hi,  created an img with this command ./rootfs.py -b -a x86 --cores 4 on bare metal, then I flashed it on the USB driver and run from the bios, when does it go and the computer returns? it can be</span></div><div class="line" id="111358"><span class="nick" style="color:#6b8072"><a href="#111358" label="[11:13:58]">&lt;Guest000&gt;</a></span><span class="message">Hi,  created an img with this command ./rootfs.py -b -a x86 --cores 4 on bare metal, then I f it on the USB driver and run from the bios, when does it go and the computer restart. what could it be?</span></div><div class="line" id="113248"><span class="nick" style="color:#6c3d55"><a href="#113248" label="[11:32:48]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Guest000: you should provide more info</span></div><div class="line" id="113301"><span class="nick" style="color:#6c3d55"><a href="#113301" label="[11:33:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; What so you see, etc...</span></div><div class="line" id="113307"><span class="nick" style="color:#6c3d55"><a href="#113307" label="[11:33:07]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Any logs on the screen</span></div><div class="line" id="113338"><span class="nick" style="color:#6c3d55"><a href="#113338" label="[11:33:38]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: have we merged USB support?</span></div><div class="line" id="113403"><span class="nick" style="color:#6c3d55"><a href="#113403" label="[11:34:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; In any case USB would still be very fresh and might be buggy</span></div><div class="line" id="114100"><span class="nick" style="color:#6b8072"><a href="#114100" label="[11:41:00]">&lt;Guest000&gt;</a></span><span class="message">Am i using the right command  to make the img for bare metal?  ./rootfs.py -b -a x86 --cores 4</span></div><div class="line" id="114337"><span class="nick" style="color:#6b8072"><a href="#114337" label="[11:43:37]">&lt;Guest000&gt;</a></span><span class="message">1 step.   ./rootfs.py -b -a x86 --cores 4 create img step 2. USB drive dd if=init.img of/dev/sda  step 3. USB drive turn on in BIOS but half past restart all computer</span></div><div class="line" id="131126"><span class="nick" style="color:#6c3d55"><a href="#131126" label="[13:11:26]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; The command looks fine</span></div><div class="line" id="131156"><span class="nick" style="color:#6c3d55"><a href="#131156" label="[13:11:56]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But baremetal is quite experimental</span></div><div class="line" id="131221"><span class="nick" style="color:#6c3d55"><a href="#131221" label="[13:12:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; So at the very least try to find out what happens just before restart</span></div><div class="line" id="131247"><span class="nick" style="color:#6c3d55"><a href="#131247" label="[13:12:47]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Now nobody can even see which step you reached before restart</span></div><div class="line" id="131326"><span class="nick" style="color:#6c3d55"><a href="#131326" label="[13:13:26]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; (That said I personally haven't yet tried baremetal bootstrap on BIOS)</span></div><div class="line" id="133905"><span class="nick" style="color:#6b8072"><a href="#133905" label="[13:39:05]">&lt;Guest000&gt;</a></span><span class="message">Am i using the right command  to make the img for bare metal?  ./rootfs.py -b -a x86 --cores 4</span></div><div class="line" id="134532"><span class="nick" style="color:#d9d9d9"><a href="#134532" label="[13:45:32]">&lt;Guest60&gt;</a></span><span class="message">HI how to create live-bootstrap ․իmg on bare metal</span></div><div class="line" id="134544"><span class="nick" style="color:#d9d9d9"><a href="#134544" label="[13:45:44]">&lt;Guest60&gt;</a></span><span class="message">HI, how to create live-bootstrap ․img on bare metal</span></div><div class="line" id="172348"><span class="nick" style="color:#bc80bd"><a href="#172348" label="[17:23:48]">&lt;mid-kid&gt;</a></span><span class="message">Is it me or does the chroot bootstrap not work under WSL</span></div><div class="line" id="172419"><span class="nick" style="color:#bc80bd"><a href="#172419" label="[17:24:19]">&lt;mid-kid&gt;</a></span><span class="message">I'm just messing around with the bootstrap, I know it's kinda worthless to do it on WSL but eh</span></div><div class="line" id="182035"><span class="nick" style="color:#3c5b35"><a href="#182035" label="[18:20:35]">&lt;rickmasters&gt;</a></span><span class="message">mid-kid: That's not surprising. I doubt anyone is testing WSL. What happens? Does it get very far?</span></div><div class="line" id="182209"><span class="nick" style="color:#6c3d55"><a href="#182209" label="[18:22:09]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator was testing WSL</span></div><div class="line" id="182221"><span class="nick" style="color:#6c3d55"><a href="#182221" label="[18:22:21]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But bash globbing was broken there</span></div><div class="line" id="182258"><span class="nick" style="color:#6c3d55"><a href="#182258" label="[18:22:58]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/379">https://github.com/fosslinux/live-bootstrap/issues/379</a> </span></div><div class="line" id="182300"><span class="nick" style="color:#389600"><a href="#182300" label="[18:23:00]">&lt;Googulator&gt;</a></span><span class="message">yeah, bash will need to be rebuilt using its real build system (and/or with musl) to fix a mysterious globbing bug</span></div><div class="line" id="182331"><span class="nick" style="color:#389600"><a href="#182331" label="[18:23:31]">&lt;Googulator&gt;</a></span><span class="message">WSL2 with a custom kernel might work, as I believe it's dependent on the kernel used</span></div><div class="line" id="182444"><span class="nick" style="color:#389600"><a href="#182444" label="[18:24:44]">&lt;Googulator&gt;</a></span><span class="message">stikonas: how attached are we to the FSFLA deblob scripts for Linux?</span></div><div class="line" id="182544"><span class="nick" style="color:#bc80bd"><a href="#182544" label="[18:25:44]">&lt;mid-kid&gt;</a></span><span class="message">rickmasters: <a rel="nofollow" href="http://0x0.st/HdnG.txt">http://0x0.st/HdnG.txt</a> </span></div><div class="line" id="182621"><span class="nick" style="color:#389600"><a href="#182621" label="[18:26:21]">&lt;Googulator&gt;</a></span><span class="message">I'm hoping to replace it with a patch to just remove genuinely problematic drivers (that actually ship blobs inline with sources), since to me, the mere ability to load firmware doesn't look dangerous from a bootstrap trust perspective</span></div><div class="line" id="182657"><span class="nick" style="color:#bc80bd"><a href="#182657" label="[18:26:57]">&lt;mid-kid&gt;</a></span><span class="message">rickmasters: It stops when trying to use a wildcard in the shell. I think there's probably something in the WSL kernel that mes-libc doesn't support</span></div><div class="line" id="182717"><span class="nick" style="color:#389600"><a href="#182717" label="[18:27:17]">&lt;Googulator&gt;</a></span><span class="message">most of what deblob-4.9 removes, even without --force, is features FSFLA considers &quot;Free-baiting&quot;, rather than actual blobs</span></div><div class="line" id="182746"><span class="nick" style="color:#389600"><a href="#182746" label="[18:27:46]">&lt;Googulator&gt;</a></span><span class="message">so unless we need/want FSF compliance, it's doing more harm than good</span></div><div class="line" id="182803"><span class="nick" style="color:#6c3d55"><a href="#182803" label="[18:28:03]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Googulator: I think fossy was fine with removing it...</span></div><div class="line" id="182813"><span class="nick" style="color:#6c3d55"><a href="#182813" label="[18:28:13]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But let's confirm with him again</span></div><div class="line" id="182854"><span class="nick" style="color:#6c3d55"><a href="#182854" label="[18:28:54]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; But yes, I guess these days all blobs live in linux-firmware tree</span></div><div class="line" id="183014"><span class="nick" style="color:#389600"><a href="#183014" label="[18:30:14]">&lt;Googulator&gt;</a></span><span class="message">the only instances of actual code blobs masquerading as source that I could find are in the vs6624 i2c driver (which looks like just a long list of register init values), and in the AppleTalk driver (the 2 blobs here are indeed firmware, which apparently once had source code, that has since then been lost to posterity)</span></div><div class="line" id="183124"><span class="nick" style="color:#389600"><a href="#183124" label="[18:31:24]">&lt;Googulator&gt;</a></span><span class="message">plus, there's a microcode update embedded in arch/powerpc/sysdev/micropatch.c, but we don't support POWER / PowerPC / PowerISA, and I doubt we ever want to</span></div><div class="line" id="183152"><span class="nick" style="color:#389600"><a href="#183152" label="[18:31:52]">&lt;Googulator&gt;</a></span><span class="message">4.9 additionally has some .ihex files in /firmware - they are all gone in 4.14, which I hope to upgrade to</span></div><div class="line" id="183225"><span class="nick" style="color:#6c3d55"><a href="#183225" label="[18:32:25]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Yeah, I agree, we should update kernel</span></div><div class="line" id="183226"><span class="nick" style="color:#389600"><a href="#183226" label="[18:32:26]">&lt;Googulator&gt;</a></span><span class="message">4.14 is the last version of Linux we can hope to build using gcc-4.0.4, and unlike 4.9, it's only gone EOL a few weeks ago</span></div><div class="line" id="183239"><span class="nick" style="color:#6c3d55"><a href="#183239" label="[18:32:39]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; Though we might want to upgrade GCC too</span></div><div class="line" id="183301"><span class="nick" style="color:#6c3d55"><a href="#183301" label="[18:33:01]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; 4.6 might have riscv support</span></div><div class="line" id="183307"><span class="nick" style="color:#389600"><a href="#183307" label="[18:33:07]">&lt;Googulator&gt;</a></span><span class="message">close enough that we could just backport security-relevant patches from the still-supported 4.19 until we can move on to a newer gcc</span></div><div class="line" id="183316"><span class="nick" style="color:#6c3d55"><a href="#183316" label="[18:33:16]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; which ekaitz back ported...</span></div><div class="line" id="183330"><span class="nick" style="color:#6c3d55"><a href="#183330" label="[18:33:30]">&lt;matrix_bridge&gt;</a></span><span class="message">&lt;Andrius Štikonas&gt; OK, we can start with kernel...</span></div><div class="line" id="183442"><span class="nick" style="color:#389600"><a href="#183442" label="[18:34:42]">&lt;Googulator&gt;</a></span><span class="message">in 4.14, we can be sure that a patch removing those 2 drivers is enough to prevent blob hazard - unless someone involved actually wants all the political parts of linux-libre's deblob</span></div><div class="line" id="183512"><span class="nick" style="color:#389600"><a href="#183512" label="[18:35:12]">&lt;Googulator&gt;</a></span><span class="message">(e.g. the script tries, although fails, to replace the framebuffer penguin logo with a gnu / wildebeest because &quot;GNU is more important than Linux&quot;)</span></div><div class="line" id="184210"><span class="nick" style="color:#3c5b35"><a href="#184210" label="[18:42:10]">&lt;rickmasters&gt;</a></span><span class="message">wow.</span></div><div class="line" id="185007"><span class="nick" style="color:#389600"><a href="#185007" label="[18:50:07]">&lt;Googulator&gt;</a></span><span class="message">deblob-4.9 doesn't actually remove the vs6624 and PowerPC microcode patch code, so it's probably considered to be a false positive by the FSF</span></div><div class="line" id="185133"><span class="nick" style="color:#389600"><a href="#185133" label="[18:51:33]">&lt;Googulator&gt;</a></span><span class="message">there's also drivers/media/usb/dvb-usb/af9005-script.h - this one is removed; it does seem similar to vs6624, but at the same time, it's clearly a pregen file</span></div><div class="line" id="185236"><span class="nick" style="color:#389600"><a href="#185236" label="[18:52:36]">&lt;Googulator&gt;</a></span><span class="message">none of these are major functionality losses - I doubt DVB tuners are a usecase for live-bootstrap</span></div><div class="line" id="190453"><span class="nick" style="color:#3c5b35"><a href="#190453" label="[19:04:53]">&lt;rickmasters&gt;</a></span><span class="message">fossy: I have an update on the m4 upgrade that broke the libtools package on Fiwix.</span></div><div class="line" id="190521"><span class="nick" style="color:#3c5b35"><a href="#190521" label="[19:05:21]">&lt;rickmasters&gt;</a></span><span class="message">So m4 was producing a much smaller configure script for libtools, which didn't work.</span></div><div class="line" id="190540"><span class="nick" style="color:#3c5b35"><a href="#190540" label="[19:05:40]">&lt;rickmasters&gt;</a></span><span class="message">I'm glad that was reverted because even though I was trying to figure it out</span></div><div class="line" id="190552"><span class="nick" style="color:#3c5b35"><a href="#190552" label="[19:05:52]">&lt;rickmasters&gt;</a></span><span class="message">it was a hard problem and it was taking me a long time to make progress.</span></div><div class="line" id="190618"><span class="nick" style="color:#3c5b35"><a href="#190618" label="[19:06:18]">&lt;rickmasters&gt;</a></span><span class="message">The failure occurs pretty far into the build and autotools has many opaque layers</span></div><div class="line" id="190631"><span class="nick" style="color:#3c5b35"><a href="#190631" label="[19:06:31]">&lt;rickmasters&gt;</a></span><span class="message">and it's not clear exactly at what point m4 was doing the wrong thing.</span></div><div class="line" id="190657"><span class="nick" style="color:#3c5b35"><a href="#190657" label="[19:06:57]">&lt;rickmasters&gt;</a></span><span class="message">Even though the upgrade was reverted and the problem was super tedious to resolve,</span></div><div class="line" id="190708"><span class="nick" style="color:#3c5b35"><a href="#190708" label="[19:07:08]">&lt;rickmasters&gt;</a></span><span class="message">I decided that I wanted to get to the bottom of it, if only to learn autotools and m4 better.</span></div><div class="line" id="190722"><span class="nick" style="color:#3c5b35"><a href="#190722" label="[19:07:22]">&lt;rickmasters&gt;</a></span><span class="message">By making detailed comparisons of m4 output between chroot and kernel bootstrap I was able to figure it out.</span></div><div class="line" id="190735"><span class="nick" style="color:#3c5b35"><a href="#190735" label="[19:07:35]">&lt;rickmasters&gt;</a></span><span class="message">M4 can &quot;divert&quot; output to a temporary file and then insert those files back into the output.</span></div><div class="line" id="190754"><span class="nick" style="color:#3c5b35"><a href="#190754" label="[19:07:54]">&lt;rickmasters&gt;</a></span><span class="message">m4-1.4.10 has a function for opening temporary files which is uses for both reading and writing.</span></div><div class="line" id="190819"><span class="nick" style="color:#3c5b35"><a href="#190819" label="[19:08:19]">&lt;rickmasters&gt;</a></span><span class="message">It opens the file using append mode so writes will go to the end of the file.</span></div><div class="line" id="190834"><span class="nick" style="color:#3c5b35"><a href="#190834" label="[19:08:34]">&lt;rickmasters&gt;</a></span><span class="message">The interesting part is that, on Linux, if you read a file that was opened in append mode it</span></div><div class="line" id="190851"><span class="nick" style="color:#3c5b35"><a href="#190851" label="[19:08:51]">&lt;rickmasters&gt;</a></span><span class="message">actually starts reading from the start of the file. m4-1.4.10 depends on this.</span></div><div class="line" id="190903"><span class="nick" style="color:#3c5b35"><a href="#190903" label="[19:09:03]">&lt;rickmasters&gt;</a></span><span class="message">But on Fiwix, these reads start at the end of the file.</span></div><div class="line" id="190915"><span class="nick" style="color:#3c5b35"><a href="#190915" label="[19:09:15]">&lt;rickmasters&gt;</a></span><span class="message">I submitted an Issue and PR to Fiwix so it will behave the same way Linux does.</span></div><div class="line" id="190921"><span class="nick" style="color:#3c5b35"><a href="#190921" label="[19:09:21]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/mikaku/Fiwix/issues/76">https://github.com/mikaku/Fiwix/issues/76</a> </span></div><div class="line" id="190951"><span class="nick" style="color:#3c5b35"><a href="#190951" label="[19:09:51]">&lt;rickmasters&gt;</a></span><span class="message">If/when that gets into live-bootstrap we will be able to update m4 on Fiwix if we need to in the future.</span></div><div class="line" id="201707"><span class="nick" style="color:#389600"><a href="#201707" label="[20:17:07]">&lt;Googulator&gt;</a></span><span class="message">oriansj: a quick heads up, linux-4.14.306.tar.xz triggers a bug in unxz</span></div><div class="line" id="201751"><span class="nick" style="color:#389600"><a href="#201751" label="[20:17:51]">&lt;Googulator&gt;</a></span><span class="message">if we do upgrade the kernel, it will need a stage0-posix commit with the fix included (or a temporary switch back to gz for the kernel sources)</span></div><br /></div></body></html>