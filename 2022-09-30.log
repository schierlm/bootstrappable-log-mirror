<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-09-30.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="011915"><span class="nick" style="color:#8dd3c7"><a href="#011915" label="[01:19:15]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well __DATE__ and __TIME__ wouldn't have been a problem if they would have be set to the modification time of the files (which would have been fixed values in tarballs and source control commits)</span></div><div class="line" id="012939"><span class="nick" style="color:#2e2a4a"><a href="#012939" label="[01:29:39]">&lt;vagrantc&gt;</a></span><span class="message">when i do a fresh git checkout, the timestamps are usually recent timestamps, not the last modified time</span></div><div class="line" id="013017"><span class="nick" style="color:#2e2a4a"><a href="#013017" label="[01:30:17]">&lt;vagrantc&gt;</a></span><span class="message">and some files get generated during a build ... which will likely have a current timepstamp as well</span></div><div class="line" id="013613"><span class="nick" style="color:#8dd3c7"><a href="#013613" label="[01:36:13]">&lt;oriansj&gt;</a></span><span class="message">vagrantc: even if you do stat?</span></div><div class="line" id="013645"><span class="nick" style="color:#8dd3c7"><a href="#013645" label="[01:36:45]">&lt;oriansj&gt;</a></span><span class="message">feel free to leverage touch -t 200805101024 foo in your testing</span></div><div class="line" id="013739"><span class="nick" style="color:#6b8072"><a href="#013739" label="[01:37:39]">&lt;muurkha&gt;</a></span><span class="message">generally source control systems update the mtime when you check out files</span></div><div class="line" id="013743"><span class="nick" style="color:#6b8072"><a href="#013743" label="[01:37:43]">&lt;muurkha&gt;</a></span><span class="message">if they didn't, make might not rebuild them</span></div><div class="line" id="013841"><span class="nick" style="color:#8dd3c7"><a href="#013841" label="[01:38:41]">&lt;oriansj&gt;</a></span><span class="message">muurkha: but if the files didn't change in the checkout why would they need to rebuild them?</span></div><div class="line" id="013922"><span class="nick" style="color:#8dd3c7"><a href="#013922" label="[01:39:22]">&lt;oriansj&gt;</a></span><span class="message">I will grant you that they would need to set a proper create date but that is done by the kernel for audit purposes</span></div><div class="line" id="014002"><span class="nick" style="color:#8dd3c7"><a href="#014002" label="[01:40:02]">&lt;oriansj&gt;</a></span><span class="message">and access date would have to be updated on every access (unless a flag inhibiting that is set)</span></div><div class="line" id="014120"><span class="nick" style="color:#8dd3c7"><a href="#014120" label="[01:41:20]">&lt;oriansj&gt;</a></span><span class="message">but I can't imagine any reason why to update the modification date to be anything different than what was checked in to version control.</span></div><div class="line" id="014125"><span class="nick" style="color:#6b8072"><a href="#014125" label="[01:41:25]">&lt;muurkha&gt;</a></span><span class="message">oriansj: yeah, that flag is almost always set nowadays</span></div><div class="line" id="014211"><span class="nick" style="color:#6b8072"><a href="#014211" label="[01:42:11]">&lt;muurkha&gt;</a></span><span class="message">but the reason to to update the modification date to be anything different than what was checked in to version control is scenarios like the following:</span></div><div class="line" id="014430"><span class="nick" style="color:#6b8072"><a href="#014430" label="[01:44:30]">&lt;muurkha&gt;</a></span><span class="message">t=1: modify foo.c; t=2: compile foo.c; t=3: check in foo.c; t=4: modify foo.h; t=5: coworker modifies foo.c; t=6: coworker checks in foo.c; t=7: compile foo.c (because of new foo.h); t=8: check out foo.c (to prepare for checking in foo.h); t=9: compile</span></div><div class="line" id="014540"><span class="nick" style="color:#6b8072"><a href="#014540" label="[01:45:40]">&lt;muurkha&gt;</a></span><span class="message">before this last step, foo.o's mtime is 7, the modification time of foo.c in source control is 6, but foo.o does not yet incorporate the changes from this other foo.c</span></div><div class="line" id="014629"><span class="nick" style="color:#6b8072"><a href="#014629" label="[01:46:29]">&lt;muurkha&gt;</a></span><span class="message">so if at t=8 the source control system sets foo.c's mtime to 6 instead of 8, you are in a world of hurt, maybe checking in a broken tree that doesn't even build</span></div><div class="line" id="014645"><span class="nick" style="color:#6b8072"><a href="#014645" label="[01:46:45]">&lt;muurkha&gt;</a></span><span class="message">a simpler but less common scenario is the following:</span></div><div class="line" id="014749"><span class="nick" style="color:#6b8072"><a href="#014749" label="[01:47:49]">&lt;muurkha&gt;</a></span><span class="message">t=1: check in modified foo.c; t=2: check in modified foo.c; t=3: compile foo.c, noticing a bug; t=4: check out the version of foo.c from time 1; t=5: compile</span></div><div class="line" id="014848"><span class="nick" style="color:#6b8072"><a href="#014848" label="[01:48:48]">&lt;muurkha&gt;</a></span><span class="message">if at t=4 the source control system sets foo.c's mtime to 1 instead of 4, the compile at time 5 will be a no-op</span></div><div class="line" id="014924"><span class="nick" style="color:#6b8072"><a href="#014924" label="[01:49:24]">&lt;muurkha&gt;</a></span><span class="message">~</span></div><div class="line" id="014939"><span class="nick" style="color:#6b8072"><a href="#014939" label="[01:49:39]">&lt;muurkha&gt;</a></span><span class="message">at least in that case you would probably notice and do a make clean</span></div><div class="line" id="014950"><span class="nick" style="color:#6b8072"><a href="#014950" label="[01:49:50]">&lt;muurkha&gt;</a></span><span class="message">but it would still be an annoyance</span></div><div class="line" id="015032"><span class="nick" style="color:#6b8072"><a href="#015032" label="[01:50:32]">&lt;muurkha&gt;</a></span><span class="message">build systems that use SHA-2 sums or something instead of mtimes avoid this problem, but</span></div><div class="line" id="015039"><span class="nick" style="color:#6b8072"><a href="#015039" label="[01:50:39]">&lt;muurkha&gt;</a></span><span class="message">does that make sense?</span></div><div class="line" id="021342"><span class="nick" style="color:#8dd3c7"><a href="#021342" label="[02:13:42]">&lt;oriansj&gt;</a></span><span class="message">muurkha: but the create date being updated by the version control on checkout would actually logically map to what the change is. (checking out a new file) and build tools can simply use the largest of the two values to determine if a build was needed.</span></div><div class="line" id="021453"><span class="nick" style="color:#8dd3c7"><a href="#021453" label="[02:14:53]">&lt;oriansj&gt;</a></span><span class="message">but I can grant you that odds are that most version control systems don't even bother to set the modification date at all and just are doing an fopen and the kernel will be default set access/modify/create all to the exact same value.</span></div><div class="line" id="021941"><span class="nick" style="color:#6b8072"><a href="#021941" label="[02:19:41]">&lt;muurkha&gt;</a></span><span class="message">what do you mean by &quot;the largest of the two values&quot; and &quot;would logically map to what the change is&quot;?  sorry, I'm stupid tonight</span></div><div class="line" id="022122"><span class="nick" style="color:#6b8072"><a href="#022122" label="[02:21:22]">&lt;muurkha&gt;</a></span><span class="message">oh, the largest of mtime and ctime?  hmm, could be</span></div><div class="line" id="022159"><span class="nick" style="color:#6b8072"><a href="#022159" label="[02:21:59]">&lt;muurkha&gt;</a></span><span class="message">although that will be pretty unpleasant if the mtime is set several minutes or hours in the future because your coworker's machine is suffering clock skew</span></div><div class="line" id="022317"><span class="nick" style="color:#6b8072"><a href="#022317" label="[02:23:17]">&lt;muurkha&gt;</a></span><span class="message">it's also the case that utime() and utimes() don't offer a way to change the ctime</span></div><div class="line" id="022341"><span class="nick" style="color:#8dd3c7"><a href="#022341" label="[02:23:41]">&lt;oriansj&gt;</a></span><span class="message">muurkha: true but a couple hours in the future would be a definite sign of a serious configuration problem. (probably completely broken ntp setup)</span></div><div class="line" id="022438"><span class="nick" style="color:#8dd3c7"><a href="#022438" label="[02:24:38]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well removing the old file and creating a new one would certainly do that and then you just dump the calculated contents</span></div><div class="line" id="022443"><span class="nick" style="color:#6b8072"><a href="#022443" label="[02:24:43]">&lt;muurkha&gt;</a></span><span class="message">similarly for utimensat() and futimens()</span></div><div class="line" id="022909"><span class="nick" style="color:#8dd3c7"><a href="#022909" label="[02:29:09]">&lt;oriansj&gt;</a></span><span class="message">or creating a new tempfile with the new contents and then replacing the old file with the tempfile (which would be more atomic of a change and reduce the risk of a partial checkout)</span></div><div class="line" id="022920"><span class="nick" style="color:#6b8072"><a href="#022920" label="[02:29:20]">&lt;muurkha&gt;</a></span><span class="message">yeah</span></div><div class="line" id="022939"><span class="nick" style="color:#6b8072"><a href="#022939" label="[02:29:39]">&lt;muurkha&gt;</a></span><span class="message">I haven't looked to see how git checks files out but I would be surprised if that isn't what it does</span></div><div class="line" id="023336"><span class="nick" style="color:#8dd3c7"><a href="#023336" label="[02:33:36]">&lt;oriansj&gt;</a></span><span class="message">hence why the create date would map best to when the file was checked out (not the modify date, which should map to when *you* modified it last)</span></div><div class="line" id="023454"><span class="nick" style="color:#8dd3c7"><a href="#023454" label="[02:34:54]">&lt;oriansj&gt;</a></span><span class="message">but I also grant you some build systems might just look at the modify date and nothing else and fail to build if only the create date was changed on checkout.</span></div><div class="line" id="023516"><span class="nick" style="color:#6b8072"><a href="#023516" label="[02:35:16]">&lt;muurkha&gt;</a></span><span class="message">well, it's true that if you did it that way, and your build system took max(st.st_mtime, st.st_ctime), then it would work fine</span></div><div class="line" id="023525"><span class="nick" style="color:#6b8072"><a href="#023525" label="[02:35:25]">&lt;muurkha&gt;</a></span><span class="message">I don't know what GNU make looks at</span></div><div class="line" id="025327"><span class="nick" style="color:#8dd3c7"><a href="#025327" label="[02:53:27]">&lt;oriansj&gt;</a></span><span class="message">well looking at make v3.82 (from live-bootstrap) in the file filedef.h the definition of struct file only has MTIME but no CTIME or ATIME</span></div><div class="line" id="025346"><span class="nick" style="color:#8dd3c7"><a href="#025346" label="[02:53:46]">&lt;oriansj&gt;</a></span><span class="message">&quot;struct file&quot;</span></div><div class="line" id="025411"><span class="nick" style="color:#8dd3c7"><a href="#025411" label="[02:54:11]">&lt;oriansj&gt;</a></span><span class="message">so logically, they are only looking at MTIME and nothing else</span></div><div class="line" id="025509"><span class="nick" style="color:#8dd3c7"><a href="#025509" label="[02:55:09]">&lt;oriansj&gt;</a></span><span class="message">but I do know tar for exmaple will set the mtime to match the mtime of the file in the tarball when extracting</span></div><div class="line" id="025622"><span class="nick" style="color:#8dd3c7"><a href="#025622" label="[02:56:22]">&lt;oriansj&gt;</a></span><span class="message">so your example using version control would also occur if 2 people were sending each other tarballs in separate directories as make isn't looking at the ctime (which would be later than the mtime)</span></div><div class="line" id="025824"><span class="nick" style="color:#8dd3c7"><a href="#025824" label="[02:58:24]">&lt;oriansj&gt;</a></span><span class="message">but that is also why my makefiles include all of the source code needed in the build (including the .h) so that the modification of the .h would have forced the rebuild of the .o for the .c file</span></div><div class="line" id="031209"><span class="nick" style="color:#6b8072"><a href="#031209" label="[03:12:09]">&lt;muurkha&gt;</a></span><span class="message">yeah, tar does do that (because it's designed for making backups)</span></div><div class="line" id="031241"><span class="nick" style="color:#6b8072"><a href="#031241" label="[03:12:41]">&lt;muurkha&gt;</a></span><span class="message">and it is indeed a potential problem if you untar a tarball on top of files you've been workign on</span></div><div class="line" id="031256"><span class="nick" style="color:#6b8072"><a href="#031256" label="[03:12:56]">&lt;muurkha&gt;</a></span><span class="message">but usually you try not to do that for other reasons</span></div><div class="line" id="031321"><span class="nick" style="color:#6b8072"><a href="#031321" label="[03:13:21]">&lt;muurkha&gt;</a></span><span class="message">do you know about gcc -D btw?</span></div><div class="line" id="031350"><span class="nick" style="color:#6b8072"><a href="#031350" label="[03:13:50]">&lt;muurkha&gt;</a></span><span class="message">uh</span></div><div class="line" id="031408"><span class="nick" style="color:#6b8072"><a href="#031408" label="[03:14:08]">&lt;muurkha&gt;</a></span><span class="message">I mean gcc -MM</span></div><div class="line" id="031552"><span class="nick" style="color:#6b8072"><a href="#031552" label="[03:15:52]">&lt;muurkha&gt;</a></span><span class="message">or gcc -M in general, though sometimes that's unwieldy</span></div><div class="line" id="031912"><span class="nick" style="color:#8dd3c7"><a href="#031912" label="[03:19:12]">&lt;oriansj&gt;</a></span><span class="message">I knew about gcc -D (and implemented -D in M2-Planet as well) but gcc -M is new and interesting to me</span></div><div class="line" id="031938"><span class="nick" style="color:#8dd3c7"><a href="#031938" label="[03:19:38]">&lt;oriansj&gt;</a></span><span class="message">as is gcc -MM</span></div><div class="line" id="032036"><span class="nick" style="color:#6b8072"><a href="#032036" label="[03:20:36]">&lt;muurkha&gt;</a></span><span class="message">I misremembered -M as -D for some reason, but obviously -D is #define</span></div><div class="line" id="032238"><span class="nick" style="color:#6b8072"><a href="#032238" label="[03:22:38]">&lt;muurkha&gt;</a></span><span class="message">there's a section in the GNU Make manual about how to use -MM to automatically generate dependency files that will automatically be included into your makefile</span></div><div class="line" id="032346"><span class="nick" style="color:#8dd3c7"><a href="#032346" label="[03:23:46]">&lt;oriansj&gt;</a></span><span class="message">I can see the logic and usefulness of the combo</span></div><div class="line" id="032446"><span class="nick" style="color:#8dd3c7"><a href="#032446" label="[03:24:46]">&lt;oriansj&gt;</a></span><span class="message">and if I wanted to speed up my builds, I probably could leverage that going forward.</span></div><div class="line" id="032502"><span class="nick" style="color:#8dd3c7"><a href="#032502" label="[03:25:02]">&lt;oriansj&gt;</a></span><span class="message">I wonder if there is a similar trick for Java</span></div><div class="line" id="032712"><span class="nick" style="color:#6b8072"><a href="#032712" label="[03:27:12]">&lt;muurkha&gt;</a></span><span class="message">I think the Java compiler is supposed to compile only the things that need to be recompiled</span></div><div class="line" id="032729"><span class="nick" style="color:#6b8072"><a href="#032729" label="[03:27:29]">&lt;muurkha&gt;</a></span><span class="message">but for whatever reason people have written a bunch of build systems for it</span></div><div class="line" id="032931"><span class="nick" style="color:#8dd3c7"><a href="#032931" label="[03:29:31]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well I know people who do insane things with Java builds. Like recursively depend on previous binary releases to be able to build the new release</span></div><div class="line" id="033018"><span class="nick" style="color:#6b8072"><a href="#033018" label="[03:30:18]">&lt;muurkha&gt;</a></span><span class="message">that's often convenient for development</span></div><div class="line" id="033153"><span class="nick" style="color:#8dd3c7"><a href="#033153" label="[03:31:53]">&lt;oriansj&gt;</a></span><span class="message">muurkha: nothing about 14 hour long builds sounds convenient to me (but then again I was the one trying to convince them to convert to 2 minute non-recursive builds)</span></div><div class="line" id="035728"><span class="nick" style="color:#6b8072"><a href="#035728" label="[03:57:28]">&lt;muurkha&gt;</a></span><span class="message">were they frequently waiting 14 hours for their builds?</span></div><div class="line" id="035912"><span class="nick" style="color:#8dd3c7"><a href="#035912" label="[03:59:12]">&lt;oriansj&gt;</a></span><span class="message">yep</span></div><div class="line" id="035942"><span class="nick" style="color:#8dd3c7"><a href="#035942" label="[03:59:42]">&lt;oriansj&gt;</a></span><span class="message">and still do til this day</span></div><div class="line" id="040929"><span class="nick" style="color:#6b8072"><a href="#040929" label="[04:09:29]">&lt;muurkha&gt;</a></span><span class="message">huh, that does sound inconvneinet</span></div><div class="line" id="040952"><span class="nick" style="color:#6b8072"><a href="#040952" label="[04:09:52]">&lt;muurkha&gt;</a></span><span class="message">but using an existing compiled artifact to compile the current version is often pretty convenient</span></div><div class="line" id="041358"><span class="nick" style="color:#8dd3c7"><a href="#041358" label="[04:13:58]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well they are also contractors paid by the hour so consider the possible reasons why they wanted to retain control of the build process and not change anything</span></div><div class="line" id="041622"><span class="nick" style="color:#6b8072"><a href="#041622" label="[04:16:22]">&lt;muurkha&gt;</a></span><span class="message">heh</span></div><div class="line" id="051154"><span class="nick" style="color:#8dd3c7"><a href="#051154" label="[05:11:54]">&lt;oriansj&gt;</a></span><span class="message">greetings one</span></div><div class="line" id="051208"><span class="nick" style="color:#80b1d3"><a href="#051208" label="[05:12:08]">&lt;one&gt;</a></span><span class="message">hahaha, yello!</span></div><div class="line" id="051308"><span class="nick" style="color:#8dd3c7"><a href="#051308" label="[05:13:08]">&lt;oriansj&gt;</a></span><span class="message">and yes you can ask your questions here, you will likely find live-bootstrap <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap">https://github.com/fosslinux/live-bootstrap</a>  a place where you can learn a great deal about what makes a modern distro work and why</span></div><div class="line" id="051449"><span class="nick" style="color:#80b1d3"><a href="#051449" label="[05:14:49]">&lt;one&gt;</a></span><span class="message">I found guix bc I'm a liberty freak, and found my way into pc's via crypto currency(history of economics/monetary background). GNU was the best learning without a doubt. But the way I learn, i decided I needed to try shit to get a real lay of the land, like i would investing...</span></div><div class="line" id="051524"><span class="nick" style="color:#8dd3c7"><a href="#051524" label="[05:15:24]">&lt;oriansj&gt;</a></span><span class="message">stage0-posix <a rel="nofollow" href="https://github.com/oriansj/stage0-posix">https://github.com/oriansj/stage0-posix</a>   literally starts with the assumption of only a kernel and builds up linkers, assemblers, compilers, a shell and is the starting place for live-bootstrap so you can quickly learn about all the major pieces of a modern system and how they fit together.</span></div><div class="line" id="051606"><span class="nick" style="color:#80b1d3"><a href="#051606" label="[05:16:06]">&lt;one&gt;</a></span><span class="message">&quot;what are my actual tradeoffs question, led me from Linux to GNU to BSD to Haiku-OS etc...</span></div><div class="line" id="051623"><span class="nick" style="color:#8dd3c7"><a href="#051623" label="[05:16:23]">&lt;oriansj&gt;</a></span><span class="message">oh and yes it is the root of trust for all cryptocurrencies that don't want to be vulnerable to the Trusting Trust attack</span></div><div class="line" id="051644"><span class="nick" style="color:#80b1d3"><a href="#051644" label="[05:16:44]">&lt;one&gt;</a></span><span class="message">&quot;Simpler&quot; systems in old ones, helped demistify why things are as they are for me personally</span></div><div class="line" id="051709"><span class="nick" style="color:#80b1d3"><a href="#051709" label="[05:17:09]">&lt;one&gt;</a></span><span class="message">But, i found i love computing, even fascist like unopen powershell is fun...</span></div><div class="line" id="051746"><span class="nick" style="color:#80b1d3"><a href="#051746" label="[05:17:46]">&lt;one&gt;</a></span><span class="message">But, i really started thinking aobut guix on BSD, and haiku... windows would be cool... and it looks like some folks are on that already I guess..</span></div><div class="line" id="051844"><span class="nick" style="color:#8dd3c7"><a href="#051844" label="[05:18:44]">&lt;oriansj&gt;</a></span><span class="message">actually powershell is under the MIT license these days: <a rel="nofollow" href="https://github.com/powershell/powershell">https://github.com/powershell/powershell</a>  and why distros like Ubuntu have it packaged.</span></div><div class="line" id="051853"><span class="nick" style="color:#80b1d3"><a href="#051853" label="[05:18:53]">&lt;one&gt;</a></span><span class="message">But was curious with haiku, which is really a single user pc by design, but does have a multiuser work around on github... it looked like there needed to be a getent</span></div><div class="line" id="051942"><span class="nick" style="color:#80b1d3"><a href="#051942" label="[05:19:42]">&lt;one&gt;</a></span><span class="message">yeah,you are right... LOL. Still kinda feels like an ex police officer opening up a pot shop</span></div><div class="line" id="052036"><span class="nick" style="color:#80b1d3"><a href="#052036" label="[05:20:36]">&lt;one&gt;</a></span><span class="message">But, I did rationalize it's use on the open source basis. haha</span></div><div class="line" id="052036"><span class="nick" style="color:#80b1d3"><a href="#052036" label="[05:20:36]">&lt;one&gt;</a></span><span class="message">chocolatey is a lot of fun too</span></div><div class="line" id="052049"><span class="nick" style="color:#80b1d3"><a href="#052049" label="[05:20:49]">&lt;one&gt;</a></span><span class="message">But, haiku-os is also very unique, kinda curious on thoughts about it being a single user/root user platform etc...</span></div><div class="line" id="052117"><span class="nick" style="color:#80b1d3"><a href="#052117" label="[05:21:17]">&lt;one&gt;</a></span><span class="message">uses pkgman</span></div><div class="line" id="052117"><span class="nick" style="color:#8dd3c7"><a href="#052117" label="[05:21:17]">&lt;oriansj&gt;</a></span><span class="message">well Microsoft is like a shark; if replacing the NT kernel with Linux would make more profit, they would do it.</span></div><div class="line" id="052143"><span class="nick" style="color:#80b1d3"><a href="#052143" label="[05:21:43]">&lt;one&gt;</a></span><span class="message">for sure</span></div><div class="line" id="052217"><span class="nick" style="color:#80b1d3"><a href="#052217" label="[05:22:17]">&lt;one&gt;</a></span><span class="message">I don't hate profit motive as much as I hate the use of really dumb incentives</span></div><div class="line" id="052256"><span class="nick" style="color:#8dd3c7"><a href="#052256" label="[05:22:56]">&lt;oriansj&gt;</a></span><span class="message">Well Haiku like the BeOS it was based on was a good idea but it came too late and without a willingness to bring a baseball bat to the fight.</span></div><div class="line" id="052426"><span class="nick" style="color:#80b1d3"><a href="#052426" label="[05:24:26]">&lt;one&gt;</a></span><span class="message">It's hard to win out against the Bank of international settlement. They literally got shelved bc asia 96 led into dot com plus a hangover. It's amazingly complete, but given its a ground up build, makes sense.</span></div><div class="line" id="052455"><span class="nick" style="color:#8dd3c7"><a href="#052455" label="[05:24:55]">&lt;oriansj&gt;</a></span><span class="message">the Be Filesystem is probably the most innovative bit of the user experience. Some people in the Data curation space even have tools to replicate that functionality on Windows and Linux these days (if a good bit slower)</span></div><div class="line" id="052654"><span class="nick" style="color:#80b1d3"><a href="#052654" label="[05:26:54]">&lt;one&gt;</a></span><span class="message">I just really like it from a dev standpoint. I don't know what percentage, but it has like 13k packages, all of which(damn near all) are useful, especially to mom and pop stature individuals and business. Feels like people need more choice. And for sirst time, it might be possible to skirt money printing like GNU has with only 3% of funds being corporate. Also, very much like linux in being less interesting to bad hats</span></div><div class="line" id="052858"><span class="nick" style="color:#8dd3c7"><a href="#052858" label="[05:28:58]">&lt;oriansj&gt;</a></span><span class="message">one: well any problem space where peope can engage in non-zero sum exchanges; money isn't required to encourage cooperative behavior. As everyone would recieve a multiple of the effort they invested on average.</span></div><div class="line" id="053037"><span class="nick" style="color:#80b1d3"><a href="#053037" label="[05:30:37]">&lt;one&gt;</a></span><span class="message">I really wish I was bright enough to bring the BE kernel or a reverse engineered prototype. SO much that could be fulfilled there. haiku bootloader is also interesting....</span></div><div class="line" id="053135"><span class="nick" style="color:#8dd3c7"><a href="#053135" label="[05:31:35]">&lt;oriansj&gt;</a></span><span class="message">one: well if you want a strong education on how a kernel can work builder-hex0 might be of interest: <a rel="nofollow" href="https://github.com/ironmeld/builder-hex0">https://github.com/ironmeld/builder-hex0</a> </span></div><div class="line" id="053157"><span class="nick" style="color:#8dd3c7"><a href="#053157" label="[05:31:57]">&lt;oriansj&gt;</a></span><span class="message">a POSIX kernel in less than 2K of assembly</span></div><div class="line" id="053521"><span class="nick" style="color:#80b1d3"><a href="#053521" label="[05:35:21]">&lt;one&gt;</a></span><span class="message">oriansj: Because I'm insane, my goal is actually to become a super user before I'm dead. So I'll definitely be checking this all out. Started code and realized I could be a monkey pushing buttons building for systems i didn't understand, or I could take the long route to be closer to a computer scientist than a well paid cog</span></div><div class="line" id="053624"><span class="nick" style="color:#80b1d3"><a href="#053624" label="[05:36:24]">&lt;one&gt;</a></span><span class="message">And, i don't mean to marginalize bootcamps, just that a lot of new talent doesn't necessarily get the whole picture</span></div><div class="line" id="053743"><span class="nick" style="color:#80b1d3"><a href="#053743" label="[05:37:43]">&lt;one&gt;</a></span><span class="message">I know, bc a business person,  I was always translating between tech and biz nerds and learning on the fly... its hard to get everyone rowing in the same direction, but i'm hoping that's what i'll be able to do...</span></div><div class="line" id="053835"><span class="nick" style="color:#8dd3c7"><a href="#053835" label="[05:38:35]">&lt;oriansj&gt;</a></span><span class="message">one: to fully understand how computers and software work will not take someone who cares to learn very long.</span></div><div class="line" id="053908"><span class="nick" style="color:#8dd3c7"><a href="#053908" label="[05:39:08]">&lt;oriansj&gt;</a></span><span class="message">but that doesn't mean you will know all software as it tends to be a reflection of the values of the people writing it.</span></div><div class="line" id="054437"><span class="nick" style="color:#80b1d3"><a href="#054437" label="[05:44:37]">&lt;one&gt;</a></span><span class="message">right. Just figuring out what within the space that's one's priority, let alone the tools that get you there as envisioned. I mean, I thought I was a crypto guy, until it dawned on me i could work on decentralized and freedom enhancing things in all kinds of spheres... Crypto is cool, but it's also SO narrow.</span></div><div class="line" id="054838"><span class="nick" style="color:#8dd3c7"><a href="#054838" label="[05:48:38]">&lt;oriansj&gt;</a></span><span class="message">one: well starting from the basics usually is a good idea. Then you can bootstrap your understanding upon universal truths that don't shift like sand under your feet.</span></div><div class="line" id="055045"><span class="nick" style="color:#80b1d3"><a href="#055045" label="[05:50:45]">&lt;one&gt;</a></span><span class="message">That was my thought.... LOL. Why I gravitated to GUIX... I guess I could have gone full mental in the interest of short term pay and decided to learn COBOL hahahahaha</span></div><div class="line" id="055047"><span class="nick" style="color:#80b1d3"><a href="#055047" label="[05:50:47]">&lt;one&gt;</a></span><span class="message">JK</span></div><div class="line" id="055130"><span class="nick" style="color:#8dd3c7"><a href="#055130" label="[05:51:30]">&lt;oriansj&gt;</a></span><span class="message">one: learning COBOL is fine if that actually interests you</span></div><div class="line" id="055317"><span class="nick" style="color:#8dd3c7"><a href="#055317" label="[05:53:17]">&lt;oriansj&gt;</a></span><span class="message">but honestly what is your goal, or hope to achieve once you become that super user.</span></div><div class="line" id="055325"><span class="nick" style="color:#80b1d3"><a href="#055325" label="[05:53:25]">&lt;one&gt;</a></span><span class="message">Does a $90k salary count as an interest? I mostly kid, and jokes are half truths. I said it bc being a money nerd, I did think about it. :D</span></div><div class="line" id="055511"><span class="nick" style="color:#8dd3c7"><a href="#055511" label="[05:55:11]">&lt;oriansj&gt;</a></span><span class="message">one: yes it is but if your goal is making money $90K/year would be on the low end if you are willing to do what is required to learn skills people need to solve their problems.</span></div><div class="line" id="055721"><span class="nick" style="color:#80b1d3"><a href="#055721" label="[05:57:21]">&lt;one&gt;</a></span><span class="message">I mean, I think we are in an era of change and fascism. I hope that I cn get up to speed to contribute to projects I like, to build my own ventures, and  to help re-frame what choice(or tradeoffs) looks like. If I hit the lottery, it would be as a programmer for an open or free source project. One that thinks big but local</span></div><div class="line" id="055820"><span class="nick" style="color:#8dd3c7"><a href="#055820" label="[05:58:20]">&lt;oriansj&gt;</a></span><span class="message">one: so you wish for a meaningful life of purpose and connection to others where you will feel welcomed and accepted for who you are.</span></div><div class="line" id="060141"><span class="nick" style="color:#80b1d3"><a href="#060141" label="[06:01:41]">&lt;one&gt;</a></span><span class="message">Nobody has as much knowledge about global trade, emergin markets, the history that forged those environments, or about monetary policy both historical &amp; current. I intend to capitalize on all of that, by learning the vocab and tools/processes to begin actually building solutions. That work for everyone, and not just work for those that can write policy or contribute donations. I guess I want to take &quot;intranets&quot; style community to global scope.</span></div><div class="line" id="060318"><span class="nick" style="color:#8dd3c7"><a href="#060318" label="[06:03:18]">&lt;oriansj&gt;</a></span><span class="message">one: what about that is the thing you most want to share and create?</span></div><div class="line" id="060759"><span class="nick" style="color:#80b1d3"><a href="#060759" label="[06:07:59]">&lt;one&gt;</a></span><span class="message">a few things seem paramount. Global thinking isn't accompanied by planning that treats users locally. I tend to think about whole cities(think city states) utilizing decentralized tech to fulfill tasks that could only reach price equilibrium through mass use previously. The fact that google build a server center in Henderson NV for example. In LV, we have huge industry and plenty of locals that could fulfill their needs by themselves. We</span></div><div class="line" id="060759"><span class="nick" style="color:#80b1d3"><a href="#060759" label="[06:07:59]">&lt;one&gt;</a></span><span class="message">could easily have 1 million or more with servelets, desktop servers etc... that could build all their local services around those nodes...</span></div><div class="line" id="061005"><span class="nick" style="color:#8dd3c7"><a href="#061005" label="[06:10:05]">&lt;oriansj&gt;</a></span><span class="message">and I assume you considered the EROEI problem right?</span></div><div class="line" id="061043"><span class="nick" style="color:#6d2462"><a href="#061043" label="[06:10:43]">&lt;ilmu[m]&gt;</a></span><span class="message">err one I am sorry to toot my own horn but please check out [datalisp.is](<a rel="nofollow" href="https://matrix.to/#/#datalisp:matrix.org">https://matrix.to/#/#datalisp:matrix.org</a>) </span></div><div class="line" id="061129"><span class="nick" style="color:#6b8072"><a href="#061129" label="[06:11:29]">&lt;muurkha&gt;</a></span><span class="message">ilmu[m]: what's datalisp.is?</span></div><div class="line" id="061156"><span class="nick" style="color:#6d2462"><a href="#061156" label="[06:11:56]">&lt;ilmu[m]&gt;</a></span><span class="message">it's what I believe is a sensible way forward</span></div><div class="line" id="061220"><span class="nick" style="color:#6b8072"><a href="#061220" label="[06:12:20]">&lt;muurkha&gt;</a></span><span class="message">what do you believe is a sensible way forward?</span></div><div class="line" id="061248"><span class="nick" style="color:#6d2462"><a href="#061248" label="[06:12:48]">&lt;ilmu[m]&gt;</a></span><span class="message">there's a bunch of things that care about authenticated datastructures ... reproducible builds, version control, cryptocurrencies, ... and a good way to build authenticated datastructures is to have a canonical encoding</span></div><div class="line" id="061304"><span class="nick" style="color:#6d2462"><a href="#061304" label="[06:13:04]">&lt;ilmu[m]&gt;</a></span><span class="message">so basically the first step would be to find a good general purpose encoding for building these systems</span></div><div class="line" id="061316"><span class="nick" style="color:#6d2462"><a href="#061316" label="[06:13:16]">&lt;ilmu[m]&gt;</a></span><span class="message">thankfully that problem is long since solved: canonical S-expressions</span></div><div class="line" id="061408"><span class="nick" style="color:#6d2462"><a href="#061408" label="[06:14:08]">&lt;ilmu[m]&gt;</a></span><span class="message">so okay, done, we have an encoding for the data interchange happening on the internet. Now what we need is a way to manage the contexts for interpreting said data. That is; a name system that lets you refer to a context in a way that can receive updates.</span></div><div class="line" id="061419"><span class="nick" style="color:#6d2462"><a href="#061419" label="[06:14:19]">&lt;ilmu[m]&gt;</a></span><span class="message">Okay but updates you say, that is not an easy problem, how can we do them in a decentralized manner?</span></div><div class="line" id="061436"><span class="nick" style="color:#6d2462"><a href="#061436" label="[06:14:36]">&lt;ilmu[m]&gt;</a></span><span class="message">bam we've reached the infinite dollar question that spawned democracy and all that jazz</span></div><div class="line" id="061544"><span class="nick" style="color:#80b1d3"><a href="#061544" label="[06:15:44]">&lt;one&gt;</a></span><span class="message">I guess the simplest way to frame change that should occur according to actual dynamics and choice, just relates to thinking based on flagging business practices that aren't requisite. Not to mention printed money and cost to maintain large infrastructure.</span></div><div class="line" id="061617"><span class="nick" style="color:#80b1d3"><a href="#061617" label="[06:16:17]">&lt;one&gt;</a></span><span class="message">I don't know,  ican go buy a soda at a soda machine...</span></div><div class="line" id="061633"><span class="nick" style="color:#6d2462"><a href="#061633" label="[06:16:33]">&lt;ilmu[m]&gt;</a></span><span class="message">I would amend your phrasing; you can access soda from a soda machine</span></div><div class="line" id="061641"><span class="nick" style="color:#6d2462"><a href="#061641" label="[06:16:41]">&lt;ilmu[m]&gt;</a></span><span class="message">it's actually access control this money thing</span></div><div class="line" id="061724"><span class="nick" style="color:#6d2462"><a href="#061724" label="[06:17:24]">&lt;ilmu[m]&gt;</a></span><span class="message">muurkha: thanks for the prompt :P</span></div><div class="line" id="061731"><span class="nick" style="color:#80b1d3"><a href="#061731" label="[06:17:31]">&lt;one&gt;</a></span><span class="message">hash sigs, qr codes etc, solar photovolic cells, use of blockchains</span></div><div class="line" id="061744"><span class="nick" style="color:#80b1d3"><a href="#061744" label="[06:17:44]">&lt;one&gt;</a></span><span class="message">all centralized money is access control.</span></div><div class="line" id="061820"><span class="nick" style="color:#80b1d3"><a href="#061820" label="[06:18:20]">&lt;one&gt;</a></span><span class="message">but amazingly, even that could be simplified. You could automate barter just a a really lame brain example of a different approcah</span></div><div class="line" id="061829"><span class="nick" style="color:#8dd3c7"><a href="#061829" label="[06:18:29]">&lt;oriansj&gt;</a></span><span class="message">well a social set of rules which effectively provide access control and punishment for those who violate those controls</span></div><div class="line" id="061907"><span class="nick" style="color:#80b1d3"><a href="#061907" label="[06:19:07]">&lt;one&gt;</a></span><span class="message">I'm not arguing in favor, just pointing out that the technological if well conceived can act as the bridge between the actual process, and that felt by a user</span></div><div class="line" id="061943"><span class="nick" style="color:#80b1d3"><a href="#061943" label="[06:19:43]">&lt;one&gt;</a></span><span class="message">China... and the USA, and anyone else with legislation meant to nudge..</span></div><div class="line" id="062006"><span class="nick" style="color:#80b1d3"><a href="#062006" label="[06:20:06]">&lt;one&gt;</a></span><span class="message">Scope is the crux</span></div><div class="line" id="062021"><span class="nick" style="color:#6b8072"><a href="#062021" label="[06:20:21]">&lt;muurkha&gt;</a></span><span class="message">ilmu[m]: hmm, it's an alternative to JSON coupled with a namespacing system for data dictionaries?</span></div><div class="line" id="062029"><span class="nick" style="color:#6d2462"><a href="#062029" label="[06:20:29]">&lt;ilmu[m]&gt;</a></span><span class="message">meh</span></div><div class="line" id="062036"><span class="nick" style="color:#80b1d3"><a href="#062036" label="[06:20:36]">&lt;one&gt;</a></span><span class="message">A monopoly makes sense if scope allows(trains competing over single set of rails isn't cheaper)</span></div><div class="line" id="062058"><span class="nick" style="color:#80b1d3"><a href="#062058" label="[06:20:58]">&lt;one&gt;</a></span><span class="message">So does decentralization.</span></div><div class="line" id="062059"><span class="nick" style="color:#6d2462"><a href="#062059" label="[06:20:59]">&lt;ilmu[m]&gt;</a></span><span class="message">I think a lot of us agree on the platitudes, it's the concrete implementation that we struggle iwth.</span></div><div class="line" id="062110"><span class="nick" style="color:#6d2462"><a href="#062110" label="[06:21:10]">&lt;ilmu[m]&gt;</a></span><span class="message">usually the easiest thing to agree on is the simplest thing</span></div><div class="line" id="062114"><span class="nick" style="color:#80b1d3"><a href="#062114" label="[06:21:14]">&lt;one&gt;</a></span><span class="message">for sure, but that's also a scope thing</span></div><div class="line" id="062140"><span class="nick" style="color:#80b1d3"><a href="#062140" label="[06:21:40]">&lt;one&gt;</a></span><span class="message">or the local thing where all participants are only subject to those they can reach</span></div><div class="line" id="062202"><span class="nick" style="color:#8dd3c7"><a href="#062202" label="[06:22:02]">&lt;oriansj&gt;</a></span><span class="message">scaling laws exist and bring hard questions about when is it better to cap sizes of industries</span></div><div class="line" id="062205"><span class="nick" style="color:#80b1d3"><a href="#062205" label="[06:22:05]">&lt;one&gt;</a></span><span class="message">If a solution mus be everywhere at once, its probably not a solution</span></div><div class="line" id="062209"><span class="nick" style="color:#6d2462"><a href="#062209" label="[06:22:09]">&lt;ilmu[m]&gt;</a></span><span class="message">json has the same problem as C strings; escaping. Prefix length strings are not deficient in the same way. Therefore we will eventually use them. S-expressions are well established and anything else would be equivalent anyway so let's just keep it simple.</span></div><div class="line" id="062224"><span class="nick" style="color:#80b1d3"><a href="#062224" label="[06:22:24]">&lt;one&gt;</a></span><span class="message">scaling and scope aren't exactly the same</span></div><div class="line" id="062235"><span class="nick" style="color:#6d2462"><a href="#062235" label="[06:22:35]">&lt;ilmu[m]&gt;</a></span><span class="message">building a distributed system requires you to think about how you will do communication between the parts.</span></div><div class="line" id="062247"><span class="nick" style="color:#6d2462"><a href="#062247" label="[06:22:47]">&lt;ilmu[m]&gt;</a></span><span class="message">therefore fixing some standard encoding is important.</span></div><div class="line" id="062309"><span class="nick" style="color:#6d2462"><a href="#062309" label="[06:23:09]">&lt;ilmu[m]&gt;</a></span><span class="message">and yeah the namespacing and data dictionaries are basically on point</span></div><div class="line" id="062327"><span class="nick" style="color:#6d2462"><a href="#062327" label="[06:23:27]">&lt;ilmu[m]&gt;</a></span><span class="message">but really the key is that we need to finish packaging software if we want to have any hope of regular people using it.</span></div><div class="line" id="062340"><span class="nick" style="color:#6d2462"><a href="#062340" label="[06:23:40]">&lt;ilmu[m]&gt;</a></span><span class="message">that means we aren't done just by building it, we also need to index the ways we can invoke it</span></div><div class="line" id="062348"><span class="nick" style="color:#6d2462"><a href="#062348" label="[06:23:48]">&lt;ilmu[m]&gt;</a></span><span class="message">that way regular people can access it</span></div><div class="line" id="062352"><span class="nick" style="color:#8dd3c7"><a href="#062352" label="[06:23:52]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: if one assumes a single program/protocol rather than a series of competing implementations upon the same good idea (Nix package definitions vs Guix package definitions as an example)</span></div><div class="line" id="062402"><span class="nick" style="color:#6d2462"><a href="#062402" label="[06:24:02]">&lt;ilmu[m]&gt;</a></span><span class="message">then we can start doing some probability theories and economics around updating the definitions.</span></div><div class="line" id="062447"><span class="nick" style="color:#6d2462"><a href="#062447" label="[06:24:47]">&lt;ilmu[m]&gt;</a></span><span class="message">oriansj: I don't see why we'd actively want to seek out the tragedy of the commons..</span></div><div class="line" id="062448"><span class="nick" style="color:#6b8072"><a href="#062448" label="[06:24:48]">&lt;muurkha&gt;</a></span><span class="message">I think JSON is better established at this point than S-expressions, and it has better chances of avoiding clashes between independent format extensions</span></div><div class="line" id="062502"><span class="nick" style="color:#6d2462"><a href="#062502" label="[06:25:02]">&lt;ilmu[m]&gt;</a></span><span class="message">json is deficient.</span></div><div class="line" id="062507"><span class="nick" style="color:#6b8072"><a href="#062507" label="[06:25:07]">&lt;muurkha&gt;</a></span><span class="message">sure, everything is</span></div><div class="line" id="062512"><span class="nick" style="color:#6d2462"><a href="#062512" label="[06:25:12]">&lt;ilmu[m]&gt;</a></span><span class="message">no.</span></div><div class="line" id="062516"><span class="nick" style="color:#6d2462"><a href="#062516" label="[06:25:16]">&lt;ilmu[m]&gt;</a></span><span class="message">not everything.</span></div><div class="line" id="062517"><span class="nick" style="color:#8dd3c7"><a href="#062517" label="[06:25:17]">&lt;oriansj&gt;</a></span><span class="message">novelty first search the space will probably result in better outcomes but I can't be certain.</span></div><div class="line" id="062521"><span class="nick" style="color:#80b1d3"><a href="#062521" label="[06:25:21]">&lt;one&gt;</a></span><span class="message">translations and efficacy can make an output standard even if the the inputs aren't. Depending upon the need, which language? For what industry? With what geographical requisites?</span></div><div class="line" id="062524"><span class="nick" style="color:#6d2462"><a href="#062524" label="[06:25:24]">&lt;ilmu[m]&gt;</a></span><span class="message">the math says: prefix strings are adequate. we can't do better.</span></div><div class="line" id="062602"><span class="nick" style="color:#6b8072"><a href="#062602" label="[06:26:02]">&lt;muurkha&gt;</a></span><span class="message">math doesn't say &quot;better&quot; or &quot;worse&quot;; that's a question of values</span></div><div class="line" id="062603"><span class="nick" style="color:#6d2462"><a href="#062603" label="[06:26:03]">&lt;ilmu[m]&gt;</a></span><span class="message">oriansj: yeah exactly, so we're done searching, now we need to rework the foundations and use the stable solutions that will also be just as good in a thousand years.</span></div><div class="line" id="062613"><span class="nick" style="color:#6d2462"><a href="#062613" label="[06:26:13]">&lt;ilmu[m]&gt;</a></span><span class="message">pythagoras theorem is still true today</span></div><div class="line" id="062635"><span class="nick" style="color:#6b8072"><a href="#062635" label="[06:26:35]">&lt;muurkha&gt;</a></span><span class="message">the tragedy of the commons is a conflict over scarce resources; free software doesn't need any significant resources</span></div><div class="line" id="062640"><span class="nick" style="color:#8dd3c7"><a href="#062640" label="[06:26:40]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: only under a set of assumptions that are not always true.</span></div><div class="line" id="062658"><span class="nick" style="color:#6d2462"><a href="#062658" label="[06:26:58]">&lt;ilmu[m]&gt;</a></span><span class="message">muurkha: no it's mismatched incentives in the local vs global scopes</span></div><div class="line" id="062726"><span class="nick" style="color:#6d2462"><a href="#062726" label="[06:27:26]">&lt;ilmu[m]&gt;</a></span><span class="message">oriansj: sure but the set of assumptions we have with computers as they are today is that we need to serialize data to send it somewhere</span></div><div class="line" id="062830"><span class="nick" style="color:#6b8072"><a href="#062830" label="[06:28:30]">&lt;muurkha&gt;</a></span><span class="message">you mean, individual interests that conflict with collective interests?</span></div><div class="line" id="062839"><span class="nick" style="color:#6d2462"><a href="#062839" label="[06:28:39]">&lt;ilmu[m]&gt;</a></span><span class="message">yes</span></div><div class="line" id="062840"><span class="nick" style="color:#8dd3c7"><a href="#062840" label="[06:28:40]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: or just send the data in its current form, no need to serialize at all</span></div><div class="line" id="062858"><span class="nick" style="color:#6d2462"><a href="#062858" label="[06:28:58]">&lt;ilmu[m]&gt;</a></span><span class="message">could you expand on that a bit</span></div><div class="line" id="062918"><span class="nick" style="color:#6b8072"><a href="#062918" label="[06:29:18]">&lt;muurkha&gt;</a></span><span class="message">I think the tragedy of the commons is generally understood to be something much more specific: an argument to privatize scarce resources to prevent them from being oversubscribed</span></div><div class="line" id="062935"><span class="nick" style="color:#8dd3c7"><a href="#062935" label="[06:29:35]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: if I send you an sqlite database file, I don't serialize anything.</span></div><div class="line" id="062939"><span class="nick" style="color:#6d2462"><a href="#062939" label="[06:29:39]">&lt;ilmu[m]&gt;</a></span><span class="message">muurkha: sure that is a common way to explain it</span></div><div class="line" id="062951"><span class="nick" style="color:#80b1d3"><a href="#062951" label="[06:29:51]">&lt;one&gt;</a></span><span class="message">we need to serialize data based on less geographically independent data(global massive data centers) w/ more grouped data. The point of most of what I was saying, is about approaches being probably the biggest part, more so than available code that works</span></div><div class="line" id="063003"><span class="nick" style="color:#6d2462"><a href="#063003" label="[06:30:03]">&lt;ilmu[m]&gt;</a></span><span class="message">oriansj: yes you do, the database is a file, that &quot;file&quot; is a stream... serialized</span></div><div class="line" id="063027"><span class="nick" style="color:#80b1d3"><a href="#063027" label="[06:30:27]">&lt;one&gt;</a></span><span class="message">I'm talking the extent of serialization</span></div><div class="line" id="063043"><span class="nick" style="color:#80b1d3"><a href="#063043" label="[06:30:43]">&lt;one&gt;</a></span><span class="message">not whether it's required sum total</span></div><div class="line" id="063058"><span class="nick" style="color:#8dd3c7"><a href="#063058" label="[06:30:58]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: you can download that file from not a single stream but hundreds or thousands in parallel based on only the length and page sizes</span></div><div class="line" id="063112"><span class="nick" style="color:#6b8072"><a href="#063112" label="[06:31:12]">&lt;muurkha&gt;</a></span><span class="message">it's sort of true that oversubscribing public scarce resources is a conflict between individual and group interests, but actually the individuals in Hardin's parable aren't getting their needs met either.  but it's definitely much more specific than tradeoffs between the needs of the many and the needs of the few</span></div><div class="line" id="063129"><span class="nick" style="color:#6d2462"><a href="#063129" label="[06:31:29]">&lt;ilmu[m]&gt;</a></span><span class="message">oriansj: okay but we are gradually missing the point here</span></div><div class="line" id="063203"><span class="nick" style="color:#6b8072"><a href="#063203" label="[06:32:03]">&lt;muurkha&gt;</a></span><span class="message">WP: &quot;In economic science, the tragedy of the commons is a situation in which individual users, who have open access to a resource unhampered by shared social structures or formal rules that govern access and use,[1][2] act independently according to their own self-interest and, contrary to the common good of all users, cause depletion of the resource through their uncoordinated action.&quot;</span></div><div class="line" id="063215"><span class="nick" style="color:#6d2462"><a href="#063215" label="[06:32:15]">&lt;ilmu[m]&gt;</a></span><span class="message">ilmu[m]: the point I want to make is that once you receive this data (which of course is serialized, no matter if you share it via torrent or whatever, you will reconstruct it to be some file or some bits on your hard drive) then you need to understand that it is a sqlite file, that is what a name system is for.</span></div><div class="line" id="063215"><span class="nick" style="color:#80b1d3"><a href="#063215" label="[06:32:15]">&lt;one&gt;</a></span><span class="message">GEOGRAPHY. What economic is exactly the same based on geography alone? Even businesses in the same region with the same model could skin the cat differently</span></div><div class="line" id="063333"><span class="nick" style="color:#6b8072"><a href="#063333" label="[06:33:33]">&lt;muurkha&gt;</a></span><span class="message">usually people use the term &quot;serialization&quot; to mean the transformation from a useful data structure to a flat series of bytes.  in oriansj's sqlite story the serialization happened at an earlier stage of the story: when he inserted or updated rows in the database, not when he sends you the file</span></div><div class="line" id="063345"><span class="nick" style="color:#6d2462"><a href="#063345" label="[06:33:45]">&lt;ilmu[m]&gt;</a></span><span class="message">one: I feel what you are pointing out is the need for a namesystem to be decentralized (i.e. I don't need permission from some central authority to decide how I skin the cat)</span></div><div class="line" id="063356"><span class="nick" style="color:#8dd3c7"><a href="#063356" label="[06:33:56]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: well that is the type inference problem and name systems can't solve that because of the bad actor problem and the bob likes the .xlxx file extension problem</span></div><div class="line" id="063400"><span class="nick" style="color:#6b8072"><a href="#063400" label="[06:34:00]">&lt;muurkha&gt;</a></span><span class="message">WP: &quot;In computing, serialization (US and Oxford spelling) or serialisation (UK spelling) is the process of translating a data structure or object state into a format that can be stored (for example, in a file or memory data buffer) or transmitted (for example, over a computer network) and reconstructed later (possibly in a different computer environment).&quot;</span></div><div class="line" id="063402"><span class="nick" style="color:#80b1d3"><a href="#063402" label="[06:34:02]">&lt;one&gt;</a></span><span class="message">But useful data comes from all kinds of single entries that get scooped up and formulated into many things.</span></div><div class="line" id="063405"><span class="nick" style="color:#6d2462"><a href="#063405" label="[06:34:05]">&lt;ilmu[m]&gt;</a></span><span class="message">&gt; &lt;@one:libera.chat&gt; GEOGRAPHY. What economic is exactly the same based on geography alone? Even businesses in the same region with the same model could skin the cat differently</span></div><div class="line" id="063405"><span class="nick" style="color:#6d2462"><a href="#063405" label="[06:34:05]">&lt;ilmu[m]&gt;</a></span><span class="message"> * I feel what you are pointing out is the need for a namesystem to be decentralized (i.e. I don't need permission from some central authority to decide how I **name my method for** skinning the cat)</span></div><div class="line" id="063434"><span class="nick" style="color:#6d2462"><a href="#063434" label="[06:34:34]">&lt;ilmu[m]&gt;</a></span><span class="message">oriansj: sorry but why such a strong result? **can't** really?</span></div><div class="line" id="063608"><span class="nick" style="color:#6d2462"><a href="#063608" label="[06:36:08]">&lt;ilmu[m]&gt;</a></span><span class="message">so the bad actor problem is being reasoned about with these byzantine fault tolerant things in the crypto world but it boils down to tragedy of the commons (i.e. you'd want everyone to have local incentives that are compatible with the global incentives ... preservation of planet, survival, etc.)</span></div><div class="line" id="063618"><span class="nick" style="color:#80b1d3"><a href="#063618" label="[06:36:18]">&lt;one&gt;</a></span><span class="message">I think it's as simple as in C How to Program (fourth Edition). Why reinvent the wheel? Open source is innately that..</span></div><div class="line" id="063728"><span class="nick" style="color:#6d2462"><a href="#063728" label="[06:37:28]">&lt;ilmu[m]&gt;</a></span><span class="message">Hmm, well anyway, I will be around. I need to go sleep now since I need to wake up in a few hours. I've written some incoherent things on how we can chip away at some of these problems that we just started discussing here, and I'd be happy to discuss these things more.</span></div><div class="line" id="063740"><span class="nick" style="color:#6d2462"><a href="#063740" label="[06:37:40]">&lt;ilmu[m]&gt;</a></span><span class="message">...but it'll be this weekend :)</span></div><div class="line" id="063747"><span class="nick" style="color:#80b1d3"><a href="#063747" label="[06:37:47]">&lt;one&gt;</a></span><span class="message">Well yeah, just look at how tribal crypto(sadly distros too) is. Nobody wants to row together and want's to be the next bitcoin, which is shit mind you. Why not just start tracking all your activity and just mailing it directly to Utah?</span></div><div class="line" id="063904"><span class="nick" style="color:#8dd3c7"><a href="#063904" label="[06:39:04]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: the reason why is if you imagine a society which assumes all people are greedy and sets up perfect rules. The system will break when a few people are generous</span></div><div class="line" id="063907"><span class="nick" style="color:#80b1d3"><a href="#063907" label="[06:39:07]">&lt;one&gt;</a></span><span class="message">if locals work together using tech tools to bridge information gaps(what made industrial revolution and  city life real, was be close to info AKA the city)</span></div><div class="line" id="063937"><span class="nick" style="color:#80b1d3"><a href="#063937" label="[06:39:37]">&lt;one&gt;</a></span><span class="message">There is actually no need for atiquated practices built around tradeoffs we no longer have to make.</span></div><div class="line" id="064021"><span class="nick" style="color:#80b1d3"><a href="#064021" label="[06:40:21]">&lt;one&gt;</a></span><span class="message">Frederic Bastiat could live his same life now, and be trendy. You can actually live on a farm and be up to date on damn near everything</span></div><div class="line" id="064033"><span class="nick" style="color:#8dd3c7"><a href="#064033" label="[06:40:33]">&lt;oriansj&gt;</a></span><span class="message">one: assuming the chesterton fence does no longer serve a purpose...</span></div><div class="line" id="064125"><span class="nick" style="color:#80b1d3"><a href="#064125" label="[06:41:25]">&lt;one&gt;</a></span><span class="message">I used it to learn computers...</span></div><div class="line" id="064305"><span class="nick" style="color:#8dd3c7"><a href="#064305" label="[06:43:05]">&lt;oriansj&gt;</a></span><span class="message">well that is the greatest strength of the internet and the source of its greatest danger. It will show you exactly what you want to see.</span></div><div class="line" id="064314"><span class="nick" style="color:#80b1d3"><a href="#064314" label="[06:43:14]">&lt;one&gt;</a></span><span class="message">I'm definitely much more informed than I was before that. And I have already be able to use a handful of give away pc's to literally roll through all GNU, LINUX, BSD, Haiku etc... And I was raised a hockey playing jock that no educator ever though to show a computer...</span></div><div class="line" id="064424"><span class="nick" style="color:#80b1d3"><a href="#064424" label="[06:44:24]">&lt;one&gt;</a></span><span class="message">I mean, I literally have thousands of dollars in functioning pc if not in price</span></div><div class="line" id="064537"><span class="nick" style="color:#8dd3c7"><a href="#064537" label="[06:45:37]">&lt;oriansj&gt;</a></span><span class="message">well the price of one's computer doesn't make it good or bad. But the software and the user's mastery of it will make it impressive or sad.</span></div><div class="line" id="064730"><span class="nick" style="color:#80b1d3"><a href="#064730" label="[06:47:30]">&lt;one&gt;</a></span><span class="message">Is being able to run windows, haiku os, solaris, and  linux/gnu on a system a sign of knowing anything, or just dumb luck?</span></div><div class="line" id="064819"><span class="nick" style="color:#80b1d3"><a href="#064819" label="[06:48:19]">&lt;one&gt;</a></span><span class="message">Kinda kidding, but I literally have been trying to fix and blowup my pc's so i can fix them again...</span></div><div class="line" id="064834"><span class="nick" style="color:#8dd3c7"><a href="#064834" label="[06:48:34]">&lt;oriansj&gt;</a></span><span class="message">one: it is a sign that you were curious enough to play around and get comfortable.</span></div><div class="line" id="064841"><span class="nick" style="color:#80b1d3"><a href="#064841" label="[06:48:41]">&lt;one&gt;</a></span><span class="message">Or, i just didn't get dissuaded with every failure</span></div><div class="line" id="064853"><span class="nick" style="color:#80b1d3"><a href="#064853" label="[06:48:53]">&lt;one&gt;</a></span><span class="message">LOL</span></div><div class="line" id="064929"><span class="nick" style="color:#8dd3c7"><a href="#064929" label="[06:49:29]">&lt;oriansj&gt;</a></span><span class="message">if something is fun for someone, it doesn't matter how hard it is. They will probably find a way to get really good at it</span></div><div class="line" id="065024"><span class="nick" style="color:#80b1d3"><a href="#065024" label="[06:50:24]">&lt;one&gt;</a></span><span class="message">That's what i kept telling myself...</span></div><div class="line" id="065143"><span class="nick" style="color:#8dd3c7"><a href="#065143" label="[06:51:43]">&lt;oriansj&gt;</a></span><span class="message">well, give yourself time to absorb and ask and share and you might find what you are looking for and maybe even find something even better along the way. ^_^</span></div><div class="line" id="065643"><span class="nick" style="color:#80b1d3"><a href="#065643" label="[06:56:43]">&lt;one&gt;</a></span><span class="message">I think you hit the nail on the head. For example, I only found guix after getting cornered on a GhostBSD build(which is almost always like plug and go for BSD). So I was annoyed, but it led me into guix/guile and lisp. Pretty good screw up long run.</span></div><div class="line" id="065712"><span class="nick" style="color:#80b1d3"><a href="#065712" label="[06:57:12]">&lt;one&gt;</a></span><span class="message">FEELS like the right approach. But IS SLOWWW</span></div><div class="line" id="065917"><span class="nick" style="color:#80b1d3"><a href="#065917" label="[06:59:17]">&lt;one&gt;</a></span><span class="message">I gotta get focused and do linuxfoundation stuff so, I have to get out of here before I get too sidetracked. But thanks for all the talk from everyone. Hope you all are doing great and feeling great! Peace!</span></div><div class="line" id="070524"><span class="nick" style="color:#80b1d3"><a href="#070524" label="[07:05:24]">&lt;one&gt;</a></span><span class="message">I meant ot really say this, but it had escaped me.... when a lot of &quot;old&quot; tech was sold as outdated, it was against the wrong scope and approach. My major thought, is what percentage of what was abandoned was done so erroneously bc of bad thinking</span></div><div class="line" id="070640"><span class="nick" style="color:#80b1d3"><a href="#070640" label="[07:06:40]">&lt;one&gt;</a></span><span class="message">even atarish MiNT servers using eifel have amazing promise if rein-visioned for the right project.</span></div><div class="line" id="073635"><span class="nick" style="color:#6b8072"><a href="#073635" label="[07:36:35]">&lt;muurkha&gt;</a></span><span class="message">atari MiNT servers using Eiffel?</span></div><div class="line" id="102210"><span class="nick" style="color:#6d2462"><a href="#102210" label="[10:22:10]">&lt;ilmu[m]&gt;</a></span><span class="message">&lt;oriansj&gt; &quot;ilmu: the reason why is if you...&quot; &lt;- I don't know how you managed to prove that but even if it was unconditionally true then it would still be a pretty odd thing to say about what I am doing. My whole premise is that each individual should be allowed to choose who and what to trust (basically FOSS: run whatever code you want) all I want is to make tools that simplify automatic updates and accessibility of software for the</span></div><div class="line" id="102212"><span class="nick" style="color:#6d2462"><a href="#102212" label="[10:22:12]">&lt;ilmu[m]&gt;</a></span><span class="message">&quot;normal people&quot; - if it is so bad to base things on what we know about math and economics then I am afraid the powers that be have eroded trust to an absurd extent.</span></div><div class="line" id="140422"><span class="nick" style="color:#8dd3c7"><a href="#140422" label="[14:04:22]">&lt;oriansj&gt;</a></span><span class="message">ilmu[m]: well as long as you allow them to override and choose badly if they wanted, then yes your idea can be quite useful.</span></div><div class="line" id="142806"><span class="nick" style="color:#234e69"><a href="#142806" label="[14:28:06]">&lt;fossy&gt;</a></span><span class="message">stikonas: i'm pretty happy with autogen pr now. merged - cant find any further repro issues</span></div><div class="line" id="142831"><span class="nick" style="color:#6c3d55"><a href="#142831" label="[14:28:31]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok good, the only slightly messy thing is dynamic linking now</span></div><div class="line" id="142841"><span class="nick" style="color:#6c3d55"><a href="#142841" label="[14:28:41]">&lt;stikonas&gt;</a></span><span class="message">but I'll move musl .so build after autogen for now</span></div><div class="line" id="142849"><span class="nick" style="color:#6c3d55"><a href="#142849" label="[14:28:49]">&lt;stikonas&gt;</a></span><span class="message">and later after newer GCC</span></div><div class="line" id="142858"><span class="nick" style="color:#6c3d55"><a href="#142858" label="[14:28:58]">&lt;stikonas&gt;</a></span><span class="message">but maybe after you merge your changes...</span></div><div class="line" id="142931"><span class="nick" style="color:#6c3d55"><a href="#142931" label="[14:29:31]">&lt;stikonas&gt;</a></span><span class="message">otherwise there will be too many conflicts (and there are also 2 work in progress PRs by doras)</span></div><div class="line" id="143509"><span class="nick" style="color:#234e69"><a href="#143509" label="[14:35:09]">&lt;fossy&gt;</a></span><span class="message">yea</span></div><div class="line" id="143531"><span class="nick" style="color:#234e69"><a href="#143531" label="[14:35:31]">&lt;fossy&gt;</a></span><span class="message">wait, can we do += in M2-Planet now?</span></div><div class="line" id="143538"><span class="nick" style="color:#234e69"><a href="#143538" label="[14:35:38]">&lt;fossy&gt;</a></span><span class="message">perhaps i just misremembered...</span></div><div class="line" id="145114"><span class="nick" style="color:#d9d9d9"><a href="#145114" label="[14:51:14]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: yes all operator= compont operators are now implemented</span></div><div class="line" id="145139"><span class="nick" style="color:#d9d9d9"><a href="#145139" label="[14:51:39]">&lt;stikonas[m]&gt;</a></span><span class="message">Maybe not in the most efficient way but it works</span></div><div class="line" id="145228"><span class="nick" style="color:#d9d9d9"><a href="#145228" label="[14:52:28]">&lt;stikonas[m]&gt;</a></span><span class="message">(I think they have their own copy of assembly output rather than reusing it from +, - etc</span></div><div class="line" id="145243"><span class="nick" style="color:#d9d9d9"><a href="#145243" label="[14:52:43]">&lt;stikonas[m]&gt;</a></span><span class="message">s/compont/compound/</span></div><div class="line" id="153132"><span class="nick" style="color:#234e69"><a href="#153132" label="[15:31:32]">&lt;fossy&gt;</a></span><span class="message">i see, makes sense</span></div><div class="line" id="154145"><span class="nick" style="color:#6c3d55"><a href="#154145" label="[15:41:45]">&lt;stikonas&gt;</a></span><span class="message">fossy: though obviously we can't use them in M2-Planet itself</span></div><div class="line" id="154211"><span class="nick" style="color:#6c3d55"><a href="#154211" label="[15:42:11]">&lt;stikonas&gt;</a></span><span class="message">as it has to be buildable by cc_*</span></div><div class="line" id="190235"><span class="nick" style="color:#80b1d3"><a href="#190235" label="[19:02:35]">&lt;one&gt;</a></span><span class="message">muurkha, there are neat mini server setups that use eifel and busybee pc's.... they are very low key and small projects..  but, everything is like that until it catches on. I think the group that was still active was in southern france..</span></div><div class="line" id="190606"><span class="nick" style="color:#80b1d3"><a href="#190606" label="[19:06:06]">&lt;one&gt;</a></span><span class="message">Looks like a lot of it has transitioned into EmuTOS</span></div><div class="line" id="190702"><span class="nick" style="color:#80b1d3"><a href="#190702" label="[19:07:02]">&lt;one&gt;</a></span><span class="message">really, modular, intranet is being reborn via integration</span></div><div class="line" id="190957"><span class="nick" style="color:#80b1d3"><a href="#190957" label="[19:09:57]">&lt;one&gt;</a></span><span class="message">Without corporate oversight and top down management. that's my take.</span></div><div class="line" id="191337"><span class="nick" style="color:#80b1d3"><a href="#191337" label="[19:13:37]">&lt;one&gt;</a></span><span class="message">It's important to note strauss-how archetypes, credit cycles, and &quot;human century&quot;: about 10 yrs longer than the lifespan. The constatnt erasure of collective memories, and the epigenetic trauma of present regardless.</span></div><div class="line" id="191406"><span class="nick" style="color:#80b1d3"><a href="#191406" label="[19:14:06]">&lt;one&gt;</a></span><span class="message">-&quot;of&quot; +&quot;that's&quot;</span></div><div class="line" id="200658"><span class="nick" style="color:#6b8072"><a href="#200658" label="[20:06:58]">&lt;muurkha&gt;</a></span><span class="message">one: I promised not to debate the nature of truth anymore in here</span></div><div class="line" id="225336"><span class="nick" style="color:#8dd3c7"><a href="#225336" label="[22:53:36]">&lt;oriansj&gt;</a></span><span class="message">one: it tends to lead to non-productive discussions</span></div><div class="line" id="225357"><span class="nick" style="color:#8dd3c7"><a href="#225357" label="[22:53:57]">&lt;oriansj&gt;</a></span><span class="message">but technical discussions and learning about how things work and why certainly is</span></div><div class="line" id="235110"><span class="nick" style="color:#6c3d55"><a href="#235110" label="[23:51:10]">&lt;stikonas&gt;</a></span><span class="message">oriansj: speaking of technical discussions, I'm now working on position independent cc_amd64</span></div><div class="line" id="235134"><span class="nick" style="color:#6c3d55"><a href="#235134" label="[23:51:34]">&lt;stikonas&gt;</a></span><span class="message">I probably won't upstream it back to stage0-posix but it's still necessary as intermediate step in porting to UEFI</span></div><div class="line" id="235231"><span class="nick" style="color:#6c3d55"><a href="#235231" label="[23:52:31]">&lt;stikonas&gt;</a></span><span class="message">it's partially working but segfaults on more complicated stuff</span></div><div class="line" id="235247"><span class="nick" style="color:#6c3d55"><a href="#235247" label="[23:52:47]">&lt;stikonas&gt;</a></span><span class="message">(I think test005 now from M2-Planet test suite)</span></div><div class="line" id="235347"><span class="nick" style="color:#8dd3c7"><a href="#235347" label="[23:53:47]">&lt;oriansj&gt;</a></span><span class="message">oh, it isn't expected to work on any M2-Planet tests</span></div><div class="line" id="235414"><span class="nick" style="color:#8dd3c7"><a href="#235414" label="[23:54:14]">&lt;oriansj&gt;</a></span><span class="message">just M2-Planet using the bootstrap C code</span></div><div class="line" id="235423"><span class="nick" style="color:#6c3d55"><a href="#235423" label="[23:54:23]">&lt;stikonas&gt;</a></span><span class="message">yes, but at least with stage0-posix version I get useful error message</span></div><div class="line" id="235431"><span class="nick" style="color:#6c3d55"><a href="#235431" label="[23:54:31]">&lt;stikonas&gt;</a></span><span class="message">with cc_amd64 it's segfaulting</span></div><div class="line" id="235443"><span class="nick" style="color:#6c3d55"><a href="#235443" label="[23:54:43]">&lt;stikonas&gt;</a></span><span class="message">(though some simple stuff compiles)</span></div><div class="line" id="235458"><span class="nick" style="color:#6c3d55"><a href="#235458" label="[23:54:58]">&lt;stikonas&gt;</a></span><span class="message">I might have missed some absolute addressing</span></div><div class="line" id="235459"><span class="nick" style="color:#8dd3c7"><a href="#235459" label="[23:54:59]">&lt;oriansj&gt;</a></span><span class="message">did you get the debug function operational?</span></div><div class="line" id="235504"><span class="nick" style="color:#6c3d55"><a href="#235504" label="[23:55:04]">&lt;stikonas&gt;</a></span><span class="message">or maybe introduced a bug</span></div><div class="line" id="235507"><span class="nick" style="color:#6c3d55"><a href="#235507" label="[23:55:07]">&lt;stikonas&gt;</a></span><span class="message">debug function should work</span></div><div class="line" id="235524"><span class="nick" style="color:#6c3d55"><a href="#235524" label="[23:55:24]">&lt;stikonas&gt;</a></span><span class="message">it's probably the type stuff that is partially broken</span></div><div class="line" id="235527"><span class="nick" style="color:#8dd3c7"><a href="#235527" label="[23:55:27]">&lt;oriansj&gt;</a></span><span class="message">no, it is the first function you need to test in cc_*</span></div><div class="line" id="235532"><span class="nick" style="color:#6c3d55"><a href="#235532" label="[23:55:32]">&lt;stikonas&gt;</a></span><span class="message">cause that was the trickiest test</span></div><div class="line" id="235548"><span class="nick" style="color:#8dd3c7"><a href="#235548" label="[23:55:48]">&lt;oriansj&gt;</a></span><span class="message">as it will enable to to figure out what is going wrong</span></div><div class="line" id="235554"><span class="nick" style="color:#6c3d55"><a href="#235554" label="[23:55:54]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll enable it</span></div><div class="line" id="235617"><span class="nick" style="color:#8dd3c7"><a href="#235617" label="[23:56:17]">&lt;oriansj&gt;</a></span><span class="message">then you can do tiny tests and know what is causing problems</span></div><div class="line" id="235804"><span class="nick" style="color:#6c3d55"><a href="#235804" label="[23:58:04]">&lt;stikonas&gt;</a></span><span class="message">might be more than one thing</span></div><div class="line" id="235836"><span class="nick" style="color:#6c3d55"><a href="#235836" label="[23:58:36]">&lt;stikonas&gt;</a></span><span class="message">I already found one missed &quot;mov register, label&quot; instruction with gdb (after which more stuff started working)</span></div><br /></div></body></html>