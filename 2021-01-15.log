<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-15.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000236"><span class="nick" style="color:#8dd3c7"><a href="#000236" label="[00:02:36]">&lt;stikonas&gt;</a></span><span class="message">probably should build perl first...</span></div><div class="line" id="000251"><span class="nick" style="color:#8dd3c7"><a href="#000251" label="[00:02:51]">&lt;stikonas&gt;</a></span><span class="message">although, that might not be any easier</span></div><div class="line" id="000509"><span class="nick" style="color:#2e2a4a"><a href="#000509" label="[00:05:09]">&lt;fossy&gt;</a></span><span class="message">dosen't really matter the order</span></div><div class="line" id="001310"><span class="nick" style="color:#8dd3c7"><a href="#001310" label="[00:13:10]">&lt;stikonas&gt;</a></span><span class="message">hmm, perl has some Configure file to do build</span></div><div class="line" id="001316"><span class="nick" style="color:#8dd3c7"><a href="#001316" label="[00:13:16]">&lt;stikonas&gt;</a></span><span class="message">let's see if it's handwritten</span></div><div class="line" id="001327"><span class="nick" style="color:#8dd3c7"><a href="#001327" label="[00:13:27]">&lt;stikonas&gt;</a></span><span class="message">it's not autotools configure</span></div><div class="line" id="001727"><span class="nick" style="color:#6b8072"><a href="#001727" label="[00:17:27]">&lt;OriansJ&gt;</a></span><span class="message">*Is confused how M1/M0/hex2/hex1/hex0 is hard to verify*</span></div><div class="line" id="001816"><span class="nick" style="color:#2e2a4a"><a href="#001816" label="[00:18:16]">&lt;fossy&gt;</a></span><span class="message">OriansJ: hard to understand without appropriate background knowledge of the architecture</span></div><div class="line" id="001818"><span class="nick" style="color:#6b8072"><a href="#001818" label="[00:18:18]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: cc_* is always in M0-macro assembly (as indicated by the DEFINEs and lack of crossplatform support)</span></div><div class="line" id="001830"><span class="nick" style="color:#2e2a4a"><a href="#001830" label="[00:18:30]">&lt;fossy&gt;</a></span><span class="message">but that is just the nature of such low level</span></div><div class="line" id="001834"><span class="nick" style="color:#2e2a4a"><a href="#001834" label="[00:18:34]">&lt;fossy&gt;</a></span><span class="message">languages</span></div><div class="line" id="001847"><span class="nick" style="color:#6b8072"><a href="#001847" label="[00:18:47]">&lt;OriansJ&gt;</a></span><span class="message">fossy: and the NASM versions probably don't help much either</span></div><div class="line" id="001900"><span class="nick" style="color:#6b8072"><a href="#001900" label="[00:19:00]">&lt;OriansJ&gt;</a></span><span class="message">but I do have C code versions of all of the steps as well</span></div><div class="line" id="001910"><span class="nick" style="color:#2e2a4a"><a href="#001910" label="[00:19:10]">&lt;fossy&gt;</a></span><span class="message">OriansJ: not if you want to verify the bootstrap from teh ground up</span></div><div class="line" id="001925"><span class="nick" style="color:#6b8072"><a href="#001925" label="[00:19:25]">&lt;OriansJ&gt;</a></span><span class="message">markjenkinsznc has some python version if I remember correctly.</span></div><div class="line" id="002623"><span class="nick" style="color:#6b8072"><a href="#002623" label="[00:26:23]">&lt;OriansJ&gt;</a></span><span class="message">to civodul's question about source; nothing lower than M2-Planet in the bootstrapping stack is in a preferred form for modifications. As writing Assembly always sucks; it just sucks less than trying to write those pieces in FORTH.</span></div><div class="line" id="002746"><span class="nick" style="color:#6b8072"><a href="#002746" label="[00:27:46]">&lt;OriansJ&gt;</a></span><span class="message">hence why hex0, hex1, hex2, M0 and cc_* are barely touched after creation.</span></div><div class="line" id="002755"><span class="nick" style="color:#8dd3c7"><a href="#002755" label="[00:27:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: small question about m4</span></div><div class="line" id="002802"><span class="nick" style="color:#2e2a4a"><a href="#002802" label="[00:28:02]">&lt;fossy&gt;</a></span><span class="message">stikonas: go ahead</span></div><div class="line" id="002910"><span class="nick" style="color:#8dd3c7"><a href="#002910" label="[00:29:10]">&lt;stikonas&gt;</a></span><span class="message">it uses &lt;sys/signal.h&gt; but we only install it to signal.h, should I patch / sed it or do we want to install it there too?</span></div><div class="line" id="003221"><span class="nick" style="color:#80b1d3"><a href="#003221" label="[00:32:21]">&lt;ericonr&gt;</a></span><span class="message">stikonas: if you install something into sys/signal.h, it should be a header that just does &quot;#include &lt;signal.h&gt;&quot;</span></div><div class="line" id="003247"><span class="nick" style="color:#8dd3c7"><a href="#003247" label="[00:32:47]">&lt;stikonas&gt;</a></span><span class="message">ericonr: yeah, but m4 includes #include &lt;sys/signal.h&gt;</span></div><div class="line" id="003258"><span class="nick" style="color:#2e2a4a"><a href="#003258" label="[00:32:58]">&lt;fossy&gt;</a></span><span class="message">stikonas: patch it</span></div><div class="line" id="003307"><span class="nick" style="color:#8dd3c7"><a href="#003307" label="[00:33:07]">&lt;stikonas&gt;</a></span><span class="message">with patch or sed?</span></div><div class="line" id="003312"><span class="nick" style="color:#80b1d3"><a href="#003312" label="[00:33:12]">&lt;ericonr&gt;</a></span><span class="message">but yeah, that also works :P</span></div><div class="line" id="003315"><span class="nick" style="color:#2e2a4a"><a href="#003315" label="[00:33:15]">&lt;fossy&gt;</a></span><span class="message">i dont really care, whatever you like</span></div><div class="line" id="004059"><span class="nick" style="color:#8dd3c7"><a href="#004059" label="[00:40:59]">&lt;stikonas&gt;</a></span><span class="message">ok, I think Perl's Configure is handwritten</span></div><div class="line" id="004107"><span class="nick" style="color:#8dd3c7"><a href="#004107" label="[00:41:07]">&lt;stikonas&gt;</a></span><span class="message">but it's 25K lines of shell scripting...</span></div><div class="line" id="004123"><span class="nick" style="color:#6d2462"><a href="#004123" label="[00:41:23]">&lt;xentrac&gt;</a></span><span class="message">what, did the &quot;Congratulations, you're not running Eunice.&quot; tip you off?</span></div><div class="line" id="004206"><span class="nick" style="color:#8dd3c7"><a href="#004206" label="[00:42:06]">&lt;stikonas&gt;</a></span><span class="message">no, I just ran git blame :D</span></div><div class="line" id="004317"><span class="nick" style="color:#8dd3c7"><a href="#004317" label="[00:43:17]">&lt;stikonas&gt;</a></span><span class="message">hmm, actually maybe it's not manual...</span></div><div class="line" id="004329"><span class="nick" style="color:#8dd3c7"><a href="#004329" label="[00:43:29]">&lt;stikonas&gt;</a></span><span class="message">there is this thing: +# Generated on Tue Sep 12 17:23:02 EET DST 2000 [metaconfig 3.0 PL70]</span></div><div class="line" id="004510"><span class="nick" style="color:#8dd3c7"><a href="#004510" label="[00:45:10]">&lt;stikonas&gt;</a></span><span class="message">ok, so we need to build this first <a rel="nofollow" href="https://github.com/Perl/metaconfig">https://github.com/Perl/metaconfig</a> </span></div><div class="line" id="004534"><span class="nick" style="color:#8dd3c7"><a href="#004534" label="[00:45:34]">&lt;stikonas&gt;</a></span><span class="message">and of course it's written in Perl</span></div><div class="line" id="004757"><span class="nick" style="color:#8dd3c7"><a href="#004757" label="[00:47:57]">&lt;stikonas&gt;</a></span><span class="message">ok, I think I'll have to work with much older perl</span></div><div class="line" id="004810"><span class="nick" style="color:#8dd3c7"><a href="#004810" label="[00:48:10]">&lt;stikonas&gt;</a></span><span class="message">which have very few c files and can probably be built manually</span></div><div class="line" id="010728"><span class="nick" style="color:#8dd3c7"><a href="#010728" label="[01:07:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: patch format fixed and tested</span></div><div class="line" id="014927"><span class="nick" style="color:#6d2462"><a href="#014927" label="[01:49:27]">&lt;xentrac&gt;</a></span><span class="message">stikonas: the Perl building process starts by building a thing called &quot;miniperl&quot;</span></div><div class="line" id="014945"><span class="nick" style="color:#6d2462"><a href="#014945" label="[01:49:45]">&lt;xentrac&gt;</a></span><span class="message">at least last time I ran it, which I'm pretty sure was more recent than Perl 5</span></div><div class="line" id="015018"><span class="nick" style="color:#6d2462"><a href="#015018" label="[01:50:18]">&lt;xentrac&gt;</a></span><span class="message">not sure if it's powerful enough to build Configure with</span></div><div class="line" id="015053"><span class="nick" style="color:#8dd3c7"><a href="#015053" label="[01:50:53]">&lt;stikonas&gt;</a></span><span class="message">xentrac: oh do you have any links?</span></div><div class="line" id="015105"><span class="nick" style="color:#8dd3c7"><a href="#015105" label="[01:51:05]">&lt;stikonas&gt;</a></span><span class="message">I might try to look at it tomorrow</span></div><div class="line" id="015446"><span class="nick" style="color:#6d2462"><a href="#015446" label="[01:54:46]">&lt;xentrac&gt;</a></span><span class="message">no, but if you run Configure I think you'll probably observe it</span></div><div class="line" id="015643"><span class="nick" style="color:#8dd3c7"><a href="#015643" label="[01:56:43]">&lt;stikonas&gt;</a></span><span class="message">hmm, it looks like miniperl is perl without ability to load dynamic shared modules</span></div><div class="line" id="015954"><span class="nick" style="color:#6b8072"><a href="#015954" label="[01:59:54]">&lt;OriansJ&gt;</a></span><span class="message">so static perl</span></div><div class="line" id="020039"><span class="nick" style="color:#8dd3c7"><a href="#020039" label="[02:00:39]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="020058"><span class="nick" style="color:#8dd3c7"><a href="#020058" label="[02:00:58]">&lt;stikonas&gt;</a></span><span class="message">maybe that's good enough to drive autotools...</span></div><div class="line" id="020113"><span class="nick" style="color:#6d2462"><a href="#020113" label="[02:01:13]">&lt;xentrac&gt;</a></span><span class="message">how much of configure do you need to run before you can build minnie pearl?</span></div><div class="line" id="020119"><span class="nick" style="color:#6d2462"><a href="#020119" label="[02:01:19]">&lt;xentrac&gt;</a></span><span class="message">*miniperl</span></div><div class="line" id="020126"><span class="nick" style="color:#8dd3c7"><a href="#020126" label="[02:01:26]">&lt;stikonas&gt;</a></span><span class="message">I guess the whole...</span></div><div class="line" id="020130"><span class="nick" style="color:#8dd3c7"><a href="#020130" label="[02:01:30]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="020133"><span class="nick" style="color:#6d2462"><a href="#020133" label="[02:01:33]">&lt;xentrac&gt;</a></span><span class="message">really?</span></div><div class="line" id="020137"><span class="nick" style="color:#8dd3c7"><a href="#020137" label="[02:01:37]">&lt;stikonas&gt;</a></span><span class="message">well, in principle we can run configure...</span></div><div class="line" id="020139"><span class="nick" style="color:#8dd3c7"><a href="#020139" label="[02:01:39]">&lt;stikonas&gt;</a></span><span class="message">if we have bash</span></div><div class="line" id="020145"><span class="nick" style="color:#8dd3c7"><a href="#020145" label="[02:01:45]">&lt;stikonas&gt;</a></span><span class="message">but it's not really &quot;source&quot;</span></div><div class="line" id="020207"><span class="nick" style="color:#8dd3c7"><a href="#020207" label="[02:02:07]">&lt;stikonas&gt;</a></span><span class="message">well, maybe one can write makefile to build miniperl...</span></div><div class="line" id="020350"><span class="nick" style="color:#8dd3c7"><a href="#020350" label="[02:03:50]">&lt;stikonas&gt;</a></span><span class="message">altough, perl's configure is still more &quot;source'y</span></div><div class="line" id="020355"><span class="nick" style="color:#8dd3c7"><a href="#020355" label="[02:03:55]">&lt;stikonas&gt;</a></span><span class="message">than autotools configure</span></div><div class="line" id="020440"><span class="nick" style="color:#8dd3c7"><a href="#020440" label="[02:04:40]">&lt;stikonas&gt;</a></span><span class="message">but I guess not good enough for &quot;full&quot; bootstrapping</span></div><div class="line" id="020757"><span class="nick" style="color:#8dd3c7"><a href="#020757" label="[02:07:57]">&lt;stikonas&gt;</a></span><span class="message">well, I guess the way to go is to write custom makefile for miniperl...</span></div><div class="line" id="020805"><span class="nick" style="color:#8dd3c7"><a href="#020805" label="[02:08:05]">&lt;stikonas&gt;</a></span><span class="message">and see if it's useful</span></div><div class="line" id="020948"><span class="nick" style="color:#8dd3c7"><a href="#020948" label="[02:09:48]">&lt;stikonas&gt;</a></span><span class="message">miniperl is built fairly early when you run make</span></div><div class="line" id="021155"><span class="nick" style="color:#2e2a4a"><a href="#021155" label="[02:11:55]">&lt;fossy&gt;</a></span><span class="message">stikonas: do you have any idea why i might be getting an absolute ton of undefined symbols wehn linking bash</span></div><div class="line" id="021206"><span class="nick" style="color:#2e2a4a"><a href="#021206" label="[02:12:06]">&lt;fossy&gt;</a></span><span class="message">my rule is $(CC) -o bash $(LDFLAGS) $(LIBRARIES) $(OBJS) -lsh -lbuiltins -lglob -ltilde</span></div><div class="line" id="021220"><span class="nick" style="color:#8dd3c7"><a href="#021220" label="[02:12:20]">&lt;stikonas&gt;</a></span><span class="message">fossy: do you have .a library there?</span></div><div class="line" id="021225"><span class="nick" style="color:#8dd3c7"><a href="#021225" label="[02:12:25]">&lt;stikonas&gt;</a></span><span class="message">in $LIBRARIES I guess?</span></div><div class="line" id="021232"><span class="nick" style="color:#2e2a4a"><a href="#021232" label="[02:12:32]">&lt;fossy&gt;</a></span><span class="message">stikonas: yeah</span></div><div class="line" id="021234"><span class="nick" style="color:#8dd3c7"><a href="#021234" label="[02:12:34]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="021239"><span class="nick" style="color:#2e2a4a"><a href="#021239" label="[02:12:39]">&lt;fossy&gt;</a></span><span class="message">libsh.a libbuiltins.a libglob.a libtilde.a</span></div><div class="line" id="021242"><span class="nick" style="color:#8dd3c7"><a href="#021242" label="[02:12:42]">&lt;stikonas&gt;</a></span><span class="message">I would grep for thoose symbols</span></div><div class="line" id="021252"><span class="nick" style="color:#2e2a4a"><a href="#021252" label="[02:12:52]">&lt;fossy&gt;</a></span><span class="message">i have</span></div><div class="line" id="021254"><span class="nick" style="color:#8dd3c7"><a href="#021254" label="[02:12:54]">&lt;stikonas&gt;</a></span><span class="message">and see where in the source they are</span></div><div class="line" id="021300"><span class="nick" style="color:#2e2a4a"><a href="#021300" label="[02:13:00]">&lt;fossy&gt;</a></span><span class="message">the only relation i can find between all of them is that they all have externs</span></div><div class="line" id="021311"><span class="nick" style="color:#8dd3c7"><a href="#021311" label="[02:13:11]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="021322"><span class="nick" style="color:#2e2a4a"><a href="#021322" label="[02:13:22]">&lt;fossy&gt;</a></span><span class="message">some arent even in libraries</span></div><div class="line" id="021327"><span class="nick" style="color:#8dd3c7"><a href="#021327" label="[02:13:27]">&lt;stikonas&gt;</a></span><span class="message">and what is in LDFLAGS?</span></div><div class="line" id="021336"><span class="nick" style="color:#2e2a4a"><a href="#021336" label="[02:13:36]">&lt;fossy&gt;</a></span><span class="message">just -L.</span></div><div class="line" id="021343"><span class="nick" style="color:#8dd3c7"><a href="#021343" label="[02:13:43]">&lt;stikonas&gt;</a></span><span class="message">I guess that should be sufficient...</span></div><div class="line" id="021358"><span class="nick" style="color:#8dd3c7"><a href="#021358" label="[02:13:58]">&lt;stikonas&gt;</a></span><span class="message">well, maybe push something to work branch</span></div><div class="line" id="021406"><span class="nick" style="color:#8dd3c7"><a href="#021406" label="[02:14:06]">&lt;stikonas&gt;</a></span><span class="message">or paste makefile...</span></div><div class="line" id="021406"><span class="nick" style="color:#2e2a4a"><a href="#021406" label="[02:14:06]">&lt;fossy&gt;</a></span><span class="message">ya i will i guess</span></div><div class="line" id="021418"><span class="nick" style="color:#8dd3c7"><a href="#021418" label="[02:14:18]">&lt;stikonas&gt;</a></span><span class="message">I'll try to push m4 too...</span></div><div class="line" id="021423"><span class="nick" style="color:#8dd3c7"><a href="#021423" label="[02:14:23]">&lt;stikonas&gt;</a></span><span class="message">testing it now</span></div><div class="line" id="022124"><span class="nick" style="color:#8dd3c7"><a href="#022124" label="[02:21:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: ok, I have working m4, do you want a new PR?</span></div><div class="line" id="022128"><span class="nick" style="color:#8dd3c7"><a href="#022128" label="[02:21:28]">&lt;stikonas&gt;</a></span><span class="message">or should I just push on top of bzip</span></div><div class="line" id="022133"><span class="nick" style="color:#2e2a4a"><a href="#022133" label="[02:21:33]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/12">https://github.com/fosslinux/live-bootstrap/pull/12</a> </span></div><div class="line" id="022137"><span class="nick" style="color:#2e2a4a"><a href="#022137" label="[02:21:37]">&lt;fossy&gt;</a></span><span class="message">stikonas: new pr</span></div><div class="line" id="022142"><span class="nick" style="color:#2e2a4a"><a href="#022142" label="[02:21:42]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="022144"><span class="nick" style="color:#8dd3c7"><a href="#022144" label="[02:21:44]">&lt;stikonas&gt;</a></span><span class="message">can you merge bzip then?</span></div><div class="line" id="022145"><span class="nick" style="color:#2e2a4a"><a href="#022145" label="[02:21:45]">&lt;fossy&gt;</a></span><span class="message">well</span></div><div class="line" id="022147"><span class="nick" style="color:#8dd3c7"><a href="#022147" label="[02:21:47]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="022148"><span class="nick" style="color:#2e2a4a"><a href="#022148" label="[02:21:48]">&lt;fossy&gt;</a></span><span class="message">ill merge bzip rn</span></div><div class="line" id="022150"><span class="nick" style="color:#8dd3c7"><a href="#022150" label="[02:21:50]">&lt;stikonas&gt;</a></span><span class="message">ok</span></div><div class="line" id="022156"><span class="nick" style="color:#8dd3c7"><a href="#022156" label="[02:21:56]">&lt;stikonas&gt;</a></span><span class="message">otherwise it's hard to do PR on top of PR...</span></div><div class="line" id="022505"><span class="nick" style="color:#8dd3c7"><a href="#022505" label="[02:25:05]">&lt;stikonas&gt;</a></span><span class="message">ok, m4 is here <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/13">https://github.com/fosslinux/live-bootstrap/pull/13</a> </span></div><div class="line" id="022532"><span class="nick" style="color:#8dd3c7"><a href="#022532" label="[02:25:32]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way you can probably delete &quot;patch&quot; branch now</span></div><div class="line" id="022540"><span class="nick" style="color:#2e2a4a"><a href="#022540" label="[02:25:40]">&lt;fossy&gt;</a></span><span class="message">stikonas:oh yeah</span></div><div class="line" id="023056"><span class="nick" style="color:#8dd3c7"><a href="#023056" label="[02:30:56]">&lt;stikonas&gt;</a></span><span class="message">fossy: I'm getting ./mksyntax -o syntax.c</span></div><div class="line" id="023109"><span class="nick" style="color:#8dd3c7"><a href="#023109" label="[02:31:09]">&lt;stikonas&gt;</a></span><span class="message">probably something bad in Makefile withthat mksyntax object</span></div><div class="line" id="023121"><span class="nick" style="color:#8dd3c7"><a href="#023121" label="[02:31:21]">&lt;stikonas&gt;</a></span><span class="message">even before linking</span></div><div class="line" id="023148"><span class="nick" style="color:#2e2a4a"><a href="#023148" label="[02:31:48]">&lt;fossy&gt;</a></span><span class="message">oh whoops</span></div><div class="line" id="023250"><span class="nick" style="color:#8dd3c7"><a href="#023250" label="[02:32:50]">&lt;stikonas&gt;</a></span><span class="message">hmm, I don't see what's wrong...</span></div><div class="line" id="023259"><span class="nick" style="color:#2e2a4a"><a href="#023259" label="[02:32:59]">&lt;fossy&gt;</a></span><span class="message">pushed fix</span></div><div class="line" id="023310"><span class="nick" style="color:#2e2a4a"><a href="#023310" label="[02:33:10]">&lt;fossy&gt;</a></span><span class="message">it was MKBUILTINS instead of MKSYNTAX_OBJS</span></div><div class="line" id="023424"><span class="nick" style="color:#8dd3c7"><a href="#023424" label="[02:34:24]">&lt;stikonas&gt;</a></span><span class="message">ok, I'm getting getopt optarg and optind undefind symbols here</span></div><div class="line" id="023439"><span class="nick" style="color:#8dd3c7"><a href="#023439" label="[02:34:39]">&lt;stikonas&gt;</a></span><span class="message">when building mksyntax</span></div><div class="line" id="023508"><span class="nick" style="color:#8dd3c7"><a href="#023508" label="[02:35:08]">&lt;stikonas&gt;</a></span><span class="message">are these the same?</span></div><div class="line" id="024221"><span class="nick" style="color:#8dd3c7"><a href="#024221" label="[02:42:21]">&lt;stikonas&gt;</a></span><span class="message">fossy: probably something tcc related</span></div><div class="line" id="024232"><span class="nick" style="color:#8dd3c7"><a href="#024232" label="[02:42:32]">&lt;stikonas&gt;</a></span><span class="message">I get the same error when running normal configure</span></div><div class="line" id="024242"><span class="nick" style="color:#2e2a4a"><a href="#024242" label="[02:42:42]">&lt;fossy&gt;</a></span><span class="message">stikonas: oh</span></div><div class="line" id="024245"><span class="nick" style="color:#2e2a4a"><a href="#024245" label="[02:42:45]">&lt;fossy&gt;</a></span><span class="message">another whoops</span></div><div class="line" id="024305"><span class="nick" style="color:#8dd3c7"><a href="#024305" label="[02:43:05]">&lt;stikonas&gt;</a></span><span class="message">probably more patching is needed</span></div><div class="line" id="024308"><span class="nick" style="color:#2e2a4a"><a href="#024308" label="[02:43:08]">&lt;fossy&gt;</a></span><span class="message">pushing...</span></div><div class="line" id="024315"><span class="nick" style="color:#2e2a4a"><a href="#024315" label="[02:43:15]">&lt;fossy&gt;</a></span><span class="message">stikonas: i know what the mksyntax problem was</span></div><div class="line" id="024324"><span class="nick" style="color:#2e2a4a"><a href="#024324" label="[02:43:24]">&lt;fossy&gt;</a></span><span class="message">i forgot to link against getopt (did it in testing but not in the makefile)</span></div><div class="line" id="024327"><span class="nick" style="color:#2e2a4a"><a href="#024327" label="[02:43:27]">&lt;fossy&gt;</a></span><span class="message">dere</span></div><div class="line" id="024334"><span class="nick" style="color:#8dd3c7"><a href="#024334" label="[02:43:34]">&lt;stikonas&gt;</a></span><span class="message">oh ok</span></div><div class="line" id="024339"><span class="nick" style="color:#8dd3c7"><a href="#024339" label="[02:43:39]">&lt;stikonas&gt;</a></span><span class="message">well, it should work in the end...</span></div><div class="line" id="024340"><span class="nick" style="color:#8dd3c7"><a href="#024340" label="[02:43:40]">&lt;stikonas&gt;</a></span><span class="message">guix builds it</span></div><div class="line" id="024354"><span class="nick" style="color:#2e2a4a"><a href="#024354" label="[02:43:54]">&lt;fossy&gt;</a></span><span class="message">yeah it should</span></div><div class="line" id="024359"><span class="nick" style="color:#2e2a4a"><a href="#024359" label="[02:43:59]">&lt;fossy&gt;</a></span><span class="message">idk what im missing tho</span></div><div class="line" id="024603"><span class="nick" style="color:#8dd3c7"><a href="#024603" label="[02:46:03]">&lt;stikonas&gt;</a></span><span class="message">tcc: error: file 'bash.c' not found</span></div><div class="line" id="024634"><span class="nick" style="color:#2e2a4a"><a href="#024634" label="[02:46:34]">&lt;fossy&gt;</a></span><span class="message">what, that didn't happen even when i ran the makefile in the thing</span></div><div class="line" id="024638"><span class="nick" style="color:#2e2a4a"><a href="#024638" label="[02:46:38]">&lt;fossy&gt;</a></span><span class="message">live environment</span></div><div class="line" id="024644"><span class="nick" style="color:#8dd3c7"><a href="#024644" label="[02:46:44]">&lt;stikonas&gt;</a></span><span class="message">oh</span></div><div class="line" id="024644"><span class="nick" style="color:#2e2a4a"><a href="#024644" label="[02:46:44]">&lt;fossy&gt;</a></span><span class="message">and this is a direct copy of it now...</span></div><div class="line" id="024647"><span class="nick" style="color:#8dd3c7"><a href="#024647" label="[02:46:47]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="024647"><span class="nick" style="color:#2e2a4a"><a href="#024647" label="[02:46:47]">&lt;fossy&gt;</a></span><span class="message">hmmm</span></div><div class="line" id="024656"><span class="nick" style="color:#8dd3c7"><a href="#024656" label="[02:46:56]">&lt;stikonas&gt;</a></span><span class="message">maybe make is older there</span></div><div class="line" id="024700"><span class="nick" style="color:#8dd3c7"><a href="#024700" label="[02:47:00]">&lt;stikonas&gt;</a></span><span class="message">I'm testing with newer make</span></div><div class="line" id="024709"><span class="nick" style="color:#8dd3c7"><a href="#024709" label="[02:47:09]">&lt;stikonas&gt;</a></span><span class="message">but $@.c on the last line is suspicious</span></div><div class="line" id="024724"><span class="nick" style="color:#8dd3c7"><a href="#024724" label="[02:47:24]">&lt;stikonas&gt;</a></span><span class="message">why is there .c  file in linking stage?</span></div><div class="line" id="024729"><span class="nick" style="color:#2e2a4a"><a href="#024729" label="[02:47:29]">&lt;fossy&gt;</a></span><span class="message">oh yeah</span></div><div class="line" id="024731"><span class="nick" style="color:#2e2a4a"><a href="#024731" label="[02:47:31]">&lt;fossy&gt;</a></span><span class="message">why is that there</span></div><div class="line" id="024741"><span class="nick" style="color:#2e2a4a"><a href="#024741" label="[02:47:41]">&lt;fossy&gt;</a></span><span class="message">i'm thinking the copy-paste was not completely successfull</span></div><div class="line" id="024743"><span class="nick" style="color:#2e2a4a"><a href="#024743" label="[02:47:43]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="024759"><span class="nick" style="color:#2e2a4a"><a href="#024759" label="[02:47:59]">&lt;fossy&gt;</a></span><span class="message">i think this is better</span></div><div class="line" id="024844"><span class="nick" style="color:#8dd3c7"><a href="#024844" label="[02:48:44]">&lt;stikonas&gt;</a></span><span class="message">ok, got those symbols</span></div><div class="line" id="024851"><span class="nick" style="color:#8dd3c7"><a href="#024851" label="[02:48:51]">&lt;stikonas&gt;</a></span><span class="message">not sure if I'll have time before bed though</span></div><div class="line" id="024854"><span class="nick" style="color:#8dd3c7"><a href="#024854" label="[02:48:54]">&lt;stikonas&gt;</a></span><span class="message">but let me quickly see</span></div><div class="line" id="024911"><span class="nick" style="color:#2e2a4a"><a href="#024911" label="[02:49:11]">&lt;fossy&gt;</a></span><span class="message">that's fine, i'll look at it later today anyway</span></div><div class="line" id="025024"><span class="nick" style="color:#8dd3c7"><a href="#025024" label="[02:50:24]">&lt;stikonas&gt;</a></span><span class="message">fossy: looks like missing defines</span></div><div class="line" id="025028"><span class="nick" style="color:#8dd3c7"><a href="#025028" label="[02:50:28]">&lt;stikonas&gt;</a></span><span class="message">those are all inside defines</span></div><div class="line" id="025037"><span class="nick" style="color:#2e2a4a"><a href="#025037" label="[02:50:37]">&lt;fossy&gt;</a></span><span class="message">oh...</span></div><div class="line" id="025040"><span class="nick" style="color:#2e2a4a"><a href="#025040" label="[02:50:40]">&lt;fossy&gt;</a></span><span class="message">fk</span></div><div class="line" id="025046"><span class="nick" style="color:#2e2a4a"><a href="#025046" label="[02:50:46]">&lt;fossy&gt;</a></span><span class="message">ok</span></div><div class="line" id="025126"><span class="nick" style="color:#8dd3c7"><a href="#025126" label="[02:51:26]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll let you look at it later...</span></div><div class="line" id="025140"><span class="nick" style="color:#2e2a4a"><a href="#025140" label="[02:51:40]">&lt;fossy&gt;</a></span><span class="message">yeah i will</span></div><div class="line" id="025247"><span class="nick" style="color:#8dd3c7"><a href="#025247" label="[02:52:47]">&lt;stikonas&gt;</a></span><span class="message">I'll check tomorrow if you are still not done</span></div><div class="line" id="043226"><span class="nick" style="color:#234e69"><a href="#043226" label="[04:32:26]">&lt;deesix&gt;</a></span><span class="message">OriansJ, the 'TMP' branch of my M2-Planet repo has test0021 adapted to use M2libc. Feel free to cherry-pick bcd0f498591521ddbcb43456142c8beab964a9f0</span></div><div class="line" id="043405"><span class="nick" style="color:#234e69"><a href="#043405" label="[04:34:05]">&lt;deesix&gt;</a></span><span class="message">*AArch64 test0021</span></div><div class="line" id="043537"><span class="nick" style="color:#234e69"><a href="#043537" label="[04:35:37]">&lt;deesix&gt;</a></span><span class="message">Now that all (but test1000) are done, I'll use AArch64 as the base of script unification, during the following days.</span></div><div class="line" id="043614"><span class="nick" style="color:#234e69"><a href="#043614" label="[04:36:14]">&lt;deesix&gt;</a></span><span class="message">yt_ ^ FYI too.</span></div><div class="line" id="062812"><span class="nick" style="color:#6d2462"><a href="#062812" label="[06:28:12]">&lt;xentrac&gt;</a></span><span class="message">this is an interesting bootstrapping project: <a rel="nofollow" href="https://slawekk.wordpress.com/2019/11/10/lean-and-metamath-zero/">https://slawekk.wordpress.com/2019/11/10/lean-and-metamath-zero/</a> </span></div><div class="line" id="062927"><span class="nick" style="color:#6d2462"><a href="#062927" label="[06:29:27]">&lt;xentrac&gt;</a></span><span class="message">metamath zero is a proof checker; you feed it proofs you have constructed by some other means (probably an interactive proof assistant) and it verifies that they prove what you say they do.  the proposal there is to formalize enough of the x86 instruction set that MM0 can verify itself</span></div><div class="line" id="070924"><span class="nick" style="color:#6c3d55"><a href="#070924" label="[07:09:24]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: live bootstrap should work on arm too, if have seen e.g. <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-seed/blob/master/armv7l/GAS/hex0_armv7l.S">https://github.com/oriansj/mescc-tools-seed/blob/master/armv7l/GAS/hex0_armv7l.S</a> </span></div><div class="line" id="084013"><span class="nick" style="color:#2e2a4a"><a href="#084013" label="[08:40:13]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: yes, but none of the required code is there</span></div><div class="line" id="084035"><span class="nick" style="color:#2e2a4a"><a href="#084035" label="[08:40:35]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: for example, we only copy x86/ in, and idk if wip-m2 works on arm fully, or if tcc is up to the required standard</span></div><div class="line" id="084254"><span class="nick" style="color:#2e2a4a"><a href="#084254" label="[08:42:54]">&lt;fossy&gt;</a></span><span class="message">signfiicant progress on bash</span></div><div class="line" id="084301"><span class="nick" style="color:#2e2a4a"><a href="#084301" label="[08:43:01]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: it was not defines</span></div><div class="line" id="084313"><span class="nick" style="color:#2e2a4a"><a href="#084313" label="[08:43:13]">&lt;fossy&gt;</a></span><span class="message">it was simply the required symbols were not there, for whatever reason</span></div><div class="line" id="084345"><span class="nick" style="color:#2e2a4a"><a href="#084345" label="[08:43:45]">&lt;fossy&gt;</a></span><span class="message">(including: a missing object on the command line, mkbuiltins clobbering files, etc</span></div><div class="line" id="090227"><span class="nick" style="color:#6c3d55"><a href="#090227" label="[09:02:27]">&lt;gforce_d11977&gt;</a></span><span class="message">fossy: ok, but the progress for aarch64 is more complete, is'nt it?</span></div><div class="line" id="090257"><span class="nick" style="color:#6c3d55"><a href="#090257" label="[09:02:57]">&lt;gforce_d11977&gt;</a></span><span class="message">(good morning to everyone!)</span></div><div class="line" id="090311"><span class="nick" style="color:#6c3d55"><a href="#090311" label="[09:03:11]">&lt;gforce_d11977&gt;</a></span><span class="message">(sorry, at least in germany)</span></div><div class="line" id="093711"><span class="nick" style="color:#2e2a4a"><a href="#093711" label="[09:37:11]">&lt;fossy&gt;</a></span><span class="message">gforce_d11977: idk.. more so than arm in M2-Planet/mescc-tools, but i think less so in tinycc, janneke can correct me on that</span></div><div class="line" id="093722"><span class="nick" style="color:#2e2a4a"><a href="#093722" label="[09:37:22]">&lt;fossy&gt;</a></span><span class="message">but much less complete than x86 for sure</span></div><div class="line" id="094426"><span class="nick" style="color:#d9d9d9"><a href="#094426" label="[09:44:26]">&lt;janneke&gt;</a></span><span class="message">right, mes, mes libc and bootstrappable-tinycc have support for arm, although gcc-4 isn't bootstrapped yet</span></div><div class="line" id="095112"><span class="nick" style="color:#bc80bd"><a href="#095112" label="[09:51:12]">&lt;malina&gt;</a></span><span class="message">morning</span></div><div class="line" id="095123"><span class="nick" style="color:#bc80bd"><a href="#095123" label="[09:51:23]">&lt;malina&gt;</a></span><span class="message">gforce_d11977,</span></div><div class="line" id="105252"><span class="nick" style="color:#3c5b35"><a href="#105252" label="[10:52:52]">&lt;bauen1&gt;</a></span><span class="message">xentrac: that's very intersting, reminds me of how some math problem was solved, a huge complicated automated proof assistant (?) that nobody really understood, and a very small well understood and verified proof checker (i think coq)</span></div><div class="line" id="105539"><span class="nick" style="color:#8dd3c7"><a href="#105539" label="[10:55:39]">&lt;stikonas&gt;</a></span><span class="message">fossy: nice, so does bash link now?</span></div><div class="line" id="111639"><span class="nick" style="color:#3c5b35"><a href="#111639" label="[11:16:39]">&lt;bauen1&gt;</a></span><span class="message">would a bootstrap kernel need to support SSE or floating point operations, or can you compile linux (and its dependencies) without it ?</span></div><div class="line" id="111726"><span class="nick" style="color:#3c5b35"><a href="#111726" label="[11:17:26]">&lt;bauen1&gt;</a></span><span class="message">or rather does printf need to support the 'e', 'f' values</span></div><div class="line" id="112118"><span class="nick" style="color:#8dd3c7"><a href="#112118" label="[11:21:18]">&lt;stikonas&gt;</a></span><span class="message">hmm, probably not...</span></div><div class="line" id="112254"><span class="nick" style="color:#8dd3c7"><a href="#112254" label="[11:22:54]">&lt;stikonas&gt;</a></span><span class="message">although, I'm not sure about linux...</span></div><div class="line" id="112400"><span class="nick" style="color:#3c5b35"><a href="#112400" label="[11:24:00]">&lt;bauen1&gt;</a></span><span class="message">just needing to decided if i want to implement sse userspace support or just strip out anything &quot;float&quot; related from musl libc</span></div><div class="line" id="112808"><span class="nick" style="color:#3c5b35"><a href="#112808" label="[11:28:08]">&lt;bauen1&gt;</a></span><span class="message">alright, wasn't too hard to strip it out, so i'll just go that way for now</span></div><div class="line" id="114226"><span class="nick" style="color:#2e2a4a"><a href="#114226" label="[11:42:26]">&lt;fossy&gt;</a></span><span class="message">stikonas: very nearly almost</span></div><div class="line" id="114238"><span class="nick" style="color:#2e2a4a"><a href="#114238" label="[11:42:38]">&lt;fossy&gt;</a></span><span class="message">3 undefineds left</span></div><div class="line" id="114325"><span class="nick" style="color:#8dd3c7"><a href="#114325" label="[11:43:25]">&lt;stikonas&gt;</a></span><span class="message">ok, that's indeed very close</span></div><div class="line" id="114428"><span class="nick" style="color:#8dd3c7"><a href="#114428" label="[11:44:28]">&lt;stikonas&gt;</a></span><span class="message">can you also merge m4 at some point?</span></div><div class="line" id="114431"><span class="nick" style="color:#2e2a4a"><a href="#114431" label="[11:44:31]">&lt;fossy&gt;</a></span><span class="message">ya</span></div><div class="line" id="114458"><span class="nick" style="color:#2e2a4a"><a href="#114458" label="[11:44:58]">&lt;fossy&gt;</a></span><span class="message">after i merge bash i'll move m4 to the bash script</span></div><div class="line" id="114510"><span class="nick" style="color:#8dd3c7"><a href="#114510" label="[11:45:10]">&lt;stikonas&gt;</a></span><span class="message">yeah, that's fine</span></div><div class="line" id="114538"><span class="nick" style="color:#8dd3c7"><a href="#114538" label="[11:45:38]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe I should split m4 patch</span></div><div class="line" id="114540"><span class="nick" style="color:#8dd3c7"><a href="#114540" label="[11:45:40]">&lt;stikonas&gt;</a></span><span class="message">into two</span></div><div class="line" id="114540"><span class="nick" style="color:#2e2a4a"><a href="#114540" label="[11:45:40]">&lt;fossy&gt;</a></span><span class="message">one thought, maybe we should include a mk/ directory like we do for patches</span></div><div class="line" id="114554"><span class="nick" style="color:#2e2a4a"><a href="#114554" label="[11:45:54]">&lt;fossy&gt;</a></span><span class="message">i see only one hunk</span></div><div class="line" id="114602"><span class="nick" style="color:#8dd3c7"><a href="#114602" label="[11:46:02]">&lt;stikonas&gt;</a></span><span class="message">yeah, that @if hunk</span></div><div class="line" id="114617"><span class="nick" style="color:#2e2a4a"><a href="#114617" label="[11:46:17]">&lt;fossy&gt;</a></span><span class="message">?</span></div><div class="line" id="114618"><span class="nick" style="color:#8dd3c7"><a href="#114618" label="[11:46:18]">&lt;stikonas&gt;</a></span><span class="message">hmm, maybe we need to think how to put everything, not just make files</span></div><div class="line" id="114620"><span class="nick" style="color:#8dd3c7"><a href="#114620" label="[11:46:20]">&lt;stikonas&gt;</a></span><span class="message">kaem too</span></div><div class="line" id="114628"><span class="nick" style="color:#8dd3c7"><a href="#114628" label="[11:46:28]">&lt;stikonas&gt;</a></span><span class="message">fossy: @if hunk needs bash in makefile</span></div><div class="line" id="114643"><span class="nick" style="color:#af8d2f"><a href="#114643" label="[11:46:43]">*</a></span><span class="message">fossy is confused what patch you mean</span></div><div class="line" id="114645"><span class="nick" style="color:#8dd3c7"><a href="#114645" label="[11:46:45]">&lt;stikonas&gt;</a></span><span class="message">oh, nevermind</span></div><div class="line" id="114650"><span class="nick" style="color:#8dd3c7"><a href="#114650" label="[11:46:50]">&lt;stikonas&gt;</a></span><span class="message">I was confused</span></div><div class="line" id="114654"><span class="nick" style="color:#2e2a4a"><a href="#114654" label="[11:46:54]">&lt;fossy&gt;</a></span><span class="message">i only see this patch</span></div><div class="line" id="114654"><span class="nick" style="color:#8dd3c7"><a href="#114654" label="[11:46:54]">&lt;stikonas&gt;</a></span><span class="message">that was probablybzip2</span></div><div class="line" id="114656"><span class="nick" style="color:#2e2a4a"><a href="#114656" label="[11:46:56]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/54a39c2e33c8dc99b5b18099a76c681e39929553/sysa/patches/m4-1.4/m4-signal-include.patch">https://github.com/fosslinux/live-bootstrap/blob/54a39c2e33c8dc99b5b18099a76c681e39929553/sysa/patches/m4-1.4/m4-signal-include.patch</a> </span></div><div class="line" id="114700"><span class="nick" style="color:#8dd3c7"><a href="#114700" label="[11:47:00]">&lt;stikonas&gt;</a></span><span class="message">yeah, this is fine</span></div><div class="line" id="114711"><span class="nick" style="color:#2e2a4a"><a href="#114711" label="[11:47:11]">&lt;fossy&gt;</a></span><span class="message">there merged</span></div><div class="line" id="114736"><span class="nick" style="color:#8dd3c7"><a href="#114736" label="[11:47:36]">&lt;stikonas&gt;</a></span><span class="message">ok, thanks</span></div><div class="line" id="114740"><span class="nick" style="color:#8dd3c7"><a href="#114740" label="[11:47:40]">&lt;stikonas&gt;</a></span><span class="message">I mixed it up with <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/patches/bzip2-1.0.8/bzip2-1.0.8.patch#L40">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/patches/bzip2-1.0.8/bzip2-1.0.8.patch#L40</a> </span></div><div class="line" id="114744"><span class="nick" style="color:#2e2a4a"><a href="#114744" label="[11:47:44]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="114753"><span class="nick" style="color:#8dd3c7"><a href="#114753" label="[11:47:53]">&lt;stikonas&gt;</a></span><span class="message">too much building :D</span></div><div class="line" id="114942"><span class="nick" style="color:#8dd3c7"><a href="#114942" label="[11:49:42]">&lt;stikonas&gt;</a></span><span class="message">fossy: so I'm fine with mk directory, although, it might be nice to put all build scripts there...</span></div><div class="line" id="115002"><span class="nick" style="color:#8dd3c7"><a href="#115002" label="[11:50:02]">&lt;stikonas&gt;</a></span><span class="message">otherwise after folder is getting messy</span></div><div class="line" id="115041"><span class="nick" style="color:#8dd3c7"><a href="#115041" label="[11:50:41]">&lt;stikonas&gt;</a></span><span class="message">hmm, on the other hand, some kaem files are more complicated (tcc kaem files work with multiple folders)</span></div><div class="line" id="115051"><span class="nick" style="color:#8dd3c7"><a href="#115051" label="[11:50:51]">&lt;stikonas&gt;</a></span><span class="message">ok, maybe just keep mk for makefiles...</span></div><div class="line" id="122418"><span class="nick" style="color:#389600"><a href="#122418" label="[12:24:18]">&lt;siraben&gt;</a></span><span class="message">xentrac: Haskell is definitely powerful enough to implement a metamath checker</span></div><div class="line" id="122438"><span class="nick" style="color:#389600"><a href="#122438" label="[12:24:38]">&lt;siraben&gt;</a></span><span class="message">heh wouldn't that be fun later, bootstrap mathematics AND compilers</span></div><div class="line" id="122638"><span class="nick" style="color:#3c5b35"><a href="#122638" label="[12:26:38]">&lt;bauen1&gt;</a></span><span class="message">siraben: i think that would be a very good idea, from my limited understanding of formal methods they also rely on all the underlying compilers / kernels / libcs to be &quot;bug-free&quot;</span></div><div class="line" id="122704"><span class="nick" style="color:#389600"><a href="#122704" label="[12:27:04]">&lt;siraben&gt;</a></span><span class="message">yes, they also need trusted cores. Coq's core is only a few hundreds lines IIRC</span></div><div class="line" id="122742"><span class="nick" style="color:#389600"><a href="#122742" label="[12:27:42]">&lt;siraben&gt;</a></span><span class="message">You can't prove the consistency and completeness of a sufficiently expressive theorem prover within itself, Gödel strikes again!</span></div><div class="line" id="125559"><span class="nick" style="color:#8dd3c7"><a href="#125559" label="[12:55:59]">&lt;stikonas&gt;</a></span><span class="message">fossy: we also need bison before autotools</span></div><div class="line" id="125809"><span class="nick" style="color:#8dd3c7"><a href="#125809" label="[12:58:09]">&lt;stikonas&gt;</a></span><span class="message">I'll see if I can workaround it with different versions...</span></div><div class="line" id="145242"><span class="nick" style="color:#6d2462"><a href="#145242" label="[14:52:42]">&lt;xentrac&gt;</a></span><span class="message">siraben: you can implement a metamath checker in any programming language pretty easily</span></div><div class="line" id="150916"><span class="nick" style="color:#8dd3c7"><a href="#150916" label="[15:09:16]">&lt;rain1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/nineties/planckforth">https://github.com/nineties/planckforth</a> </span></div><div class="line" id="150946"><span class="nick" style="color:#8dd3c7"><a href="#150946" label="[15:09:46]">&lt;rain1&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/nineties/planckforth/blob/main/others/planck.c#L74">https://github.com/nineties/planckforth/blob/main/others/planck.c#L74</a>  yes</span></div><div class="line" id="154500"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="154502"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="171547"><span class="nick" style="color:#389600"><a href="#171547" label="[17:15:47]">&lt;siraben&gt;</a></span><span class="message">xentrac: oh interesting</span></div><div class="line" id="172141"><span class="nick" style="color:#6d2462"><a href="#172141" label="[17:21:41]">&lt;xentrac&gt;</a></span><span class="message">one of the smallest metamath verifiers is this one by raph levien: <a rel="nofollow" href="https://github.com/david-a-wheeler/mmverify.py/blob/master/mmverify.py">https://github.com/david-a-wheeler/mmverify.py/blob/master/mmverify.py</a> </span></div><div class="line" id="172227"><span class="nick" style="color:#6d2462"><a href="#172227" label="[17:22:27]">&lt;xentrac&gt;</a></span><span class="message">there's a variant at <a rel="nofollow" href="http://us.metamath.org/downloads/mmverify.py">http://us.metamath.org/downloads/mmverify.py</a> </span></div><div class="line" id="172311"><span class="nick" style="color:#6d2462"><a href="#172311" label="[17:23:11]">&lt;xentrac&gt;</a></span><span class="message">there are a lot of different metamath verifiers, the idea being that we'd like to not depend on a single possibly buggy and exploitable program to check a metamath proof</span></div><div class="line" id="172437"><span class="nick" style="color:#6d2462"><a href="#172437" label="[17:24:37]">&lt;xentrac&gt;</a></span><span class="message">to tackle the problem bauen1 mentioned, the current proofs of seL4 (in Coq) verify not just the source code (of the kernel!) but the executable code, although they fail to verify if you use sufficiently high optimization levels</span></div><div class="line" id="172510"><span class="nick" style="color:#6d2462"><a href="#172510" label="[17:25:10]">&lt;xentrac&gt;</a></span><span class="message">and related to the blog post I linked above, Carneiro is trying to do something similar with Metamath: <a rel="nofollow" href="https://arxiv.org/abs/1907.01283">https://arxiv.org/abs/1907.01283</a> </span></div><div class="line" id="172654"><span class="nick" style="color:#6d2462"><a href="#172654" label="[17:26:54]">&lt;xentrac&gt;</a></span><span class="message">the idea there is that by presenting a proof of correctness of a particular Metamath verifier (in x86 machine code, again, not source code) you can use any other Metamath verifier on *one* proof to verify that the x86 executable is correct for *all* proofs</span></div><div class="line" id="172747"><span class="nick" style="color:#6d2462"><a href="#172747" label="[17:27:47]">&lt;xentrac&gt;</a></span><span class="message">I don't know if there's a proof of consistency of the Metamath Zero core language that these verifiers verify, but certainly it is not intended to be complete</span></div><div class="line" id="172830"><span class="nick" style="color:#6d2462"><a href="#172830" label="[17:28:30]">&lt;xentrac&gt;</a></span><span class="message">so there are presumably theorems that are true but which Metamath Zero cannot prove; we hope that those theorems don't happen include too many theorems of interest</span></div><div class="line" id="183306"><span class="nick" style="color:#6b8072"><a href="#183306" label="[18:33:06]">&lt;OriansJ&gt;</a></span><span class="message">deesix: your commit has been merged</span></div><div class="line" id="183425"><span class="nick" style="color:#6b8072"><a href="#183425" label="[18:34:25]">&lt;OriansJ&gt;</a></span><span class="message">gforce_d11977: although I have prototyped the steps for armv7l; I have not actually converted them into hex0, hex1, hex2 and M0.</span></div><div class="line" id="183503"><span class="nick" style="color:#6b8072"><a href="#183503" label="[18:35:03]">&lt;OriansJ&gt;</a></span><span class="message">Which is not a small task and is rather tedious</span></div><div class="line" id="183542"><span class="nick" style="color:#6b8072"><a href="#183542" label="[18:35:42]">&lt;OriansJ&gt;</a></span><span class="message">which at this moment isn't a top priority to get it done.</span></div><div class="line" id="184128"><span class="nick" style="color:#6b8072"><a href="#184128" label="[18:41:28]">&lt;OriansJ&gt;</a></span><span class="message">bauen1: well in absolute terms. Compilers don't require floating point support from an engineering standpoint but some compilers do use it for fuzzy approximation to do some things faster.</span></div><div class="line" id="184236"><span class="nick" style="color:#6d2462"><a href="#184236" label="[18:42:36]">&lt;xentrac&gt;</a></span><span class="message">or for compile-time constant folding</span></div><div class="line" id="184248"><span class="nick" style="color:#6d2462"><a href="#184248" label="[18:42:48]">&lt;xentrac&gt;</a></span><span class="message">when they're compiling code that uses floating-point support</span></div><div class="line" id="184328"><span class="nick" style="color:#6b8072"><a href="#184328" label="[18:43:28]">&lt;OriansJ&gt;</a></span><span class="message">xentrac:  wouldn't that fall under doing some things faster?</span></div><div class="line" id="184343"><span class="nick" style="color:#389600"><a href="#184343" label="[18:43:43]">&lt;siraben&gt;</a></span><span class="message">xentrac: thanks for that information, I'll look into it</span></div><div class="line" id="184516"><span class="nick" style="color:#3c5b35"><a href="#184516" label="[18:45:16]">&lt;bauen1&gt;</a></span><span class="message">OriansJ: true, in absolute terms you also don't need a compiler :)</span></div><div class="line" id="190016"><span class="nick" style="color:#6d2462"><a href="#190016" label="[19:00:16]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: yes, but not by way of fuzzy approximation</span></div><div class="line" id="193405"><span class="nick" style="color:#6c3d55"><a href="#193405" label="[19:34:05]">&lt;gforce_d11977&gt;</a></span><span class="message">OriansJ: sorry no pressure, armv7l comes later 8-) for now, there enough polishing to do for x86_64, x86, the rest comes later, and maybe *someday* i will do the lowlevel stuff for MOS6502 and m68k 8-)))</span></div><div class="line" id="214934"><span class="nick" style="color:#2e2a4a"><a href="#214934" label="[21:49:34]">&lt;fossy&gt;</a></span><span class="message">stikonas: hm</span></div><div class="line" id="214957"><span class="nick" style="color:#2e2a4a"><a href="#214957" label="[21:49:57]">&lt;fossy&gt;</a></span><span class="message">wrt bison, I just realised bash and patch are shipping precompiled bison parsers</span></div><div class="line" id="215018"><span class="nick" style="color:#2e2a4a"><a href="#215018" label="[21:50:18]">&lt;fossy&gt;</a></span><span class="message">we should follow gios bootstrapping path for flex and bison</span></div><div class="line" id="215053"><span class="nick" style="color:#8dd3c7"><a href="#215053" label="[21:50:53]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, yeah</span></div><div class="line" id="215104"><span class="nick" style="color:#8dd3c7"><a href="#215104" label="[21:51:04]">&lt;stikonas&gt;</a></span><span class="message">I noticed that when I tried to build gawk</span></div><div class="line" id="215116"><span class="nick" style="color:#8dd3c7"><a href="#215116" label="[21:51:16]">&lt;stikonas&gt;</a></span><span class="message">fossy: bison is a bit tricky but probably not impossible</span></div><div class="line" id="215125"><span class="nick" style="color:#8dd3c7"><a href="#215125" label="[21:51:25]">&lt;stikonas&gt;</a></span><span class="message">it's quite a new bison</span></div><div class="line" id="215131"><span class="nick" style="color:#8dd3c7"><a href="#215131" label="[21:51:31]">&lt;stikonas&gt;</a></span><span class="message">easy to do that with gcc and autotools</span></div><div class="line" id="215219"><span class="nick" style="color:#8dd3c7"><a href="#215219" label="[21:52:19]">&lt;stikonas&gt;</a></span><span class="message">fossy: what file is precompiled in patch?</span></div><div class="line" id="215233"><span class="nick" style="color:#8dd3c7"><a href="#215233" label="[21:52:33]">&lt;stikonas&gt;</a></span><span class="message">I don't see anything in patch at first glance</span></div><div class="line" id="215316"><span class="nick" style="color:#2e2a4a"><a href="#215316" label="[21:53:16]">&lt;fossy&gt;</a></span><span class="message">stikonas: I think it is called y.tab.c</span></div><div class="line" id="215321"><span class="nick" style="color:#2e2a4a"><a href="#215321" label="[21:53:21]">&lt;fossy&gt;</a></span><span class="message">Or parse.c</span></div><div class="line" id="215342"><span class="nick" style="color:#8dd3c7"><a href="#215342" label="[21:53:42]">&lt;stikonas&gt;</a></span><span class="message">hmm, I don't see these files in patch</span></div><div class="line" id="215359"><span class="nick" style="color:#8dd3c7"><a href="#215359" label="[21:53:59]">&lt;stikonas&gt;</a></span><span class="message">parse.y in bash indeed</span></div><div class="line" id="215404"><span class="nick" style="color:#8dd3c7"><a href="#215404" label="[21:54:04]">&lt;stikonas&gt;</a></span><span class="message">maybe only bash then?</span></div><div class="line" id="215449"><span class="nick" style="color:#8dd3c7"><a href="#215449" label="[21:54:49]">&lt;stikonas&gt;</a></span><span class="message">fossy: there is one in tar though</span></div><div class="line" id="215509"><span class="nick" style="color:#8dd3c7"><a href="#215509" label="[21:55:09]">&lt;stikonas&gt;</a></span><span class="message">I ran in our sources dir for file in *; do lsar $file | grep '\.y'; done</span></div><div class="line" id="215515"><span class="nick" style="color:#8dd3c7"><a href="#215515" label="[21:55:15]">&lt;stikonas&gt;</a></span><span class="message">tar-1.12/lib/getdate.y</span></div><div class="line" id="215610"><span class="nick" style="color:#8dd3c7"><a href="#215610" label="[21:56:10]">&lt;stikonas&gt;</a></span><span class="message">and getdate.y is used...</span></div><div class="line" id="215828"><span class="nick" style="color:#2e2a4a"><a href="#215828" label="[21:58:28]">&lt;fossy&gt;</a></span><span class="message">oh what</span></div><div class="line" id="215834"><span class="nick" style="color:#2e2a4a"><a href="#215834" label="[21:58:34]">&lt;fossy&gt;</a></span><span class="message">well we cab disable that, surely</span></div><div class="line" id="215955"><span class="nick" style="color:#8dd3c7"><a href="#215955" label="[21:59:55]">&lt;stikonas&gt;</a></span><span class="message">fossy: yeah</span></div><div class="line" id="220001"><span class="nick" style="color:#8dd3c7"><a href="#220001" label="[22:00:01]">&lt;stikonas&gt;</a></span><span class="message">I was able to patch it out locally</span></div><div class="line" id="220005"><span class="nick" style="color:#8dd3c7"><a href="#220005" label="[22:00:05]">&lt;stikonas&gt;</a></span><span class="message">I'll prepare a proper patch</span></div><div class="line" id="220012"><span class="nick" style="color:#8dd3c7"><a href="#220012" label="[22:00:12]">&lt;stikonas&gt;</a></span><span class="message">and I think I can do it with just sed</span></div><div class="line" id="220016"><span class="nick" style="color:#8dd3c7"><a href="#220016" label="[22:00:16]">&lt;stikonas&gt;</a></span><span class="message">so good that we didn't move sed after tar</span></div><div class="line" id="220026"><span class="nick" style="color:#2e2a4a"><a href="#220026" label="[22:00:26]">&lt;fossy&gt;</a></span><span class="message">yeah lol</span></div><div class="line" id="220035"><span class="nick" style="color:#8dd3c7"><a href="#220035" label="[22:00:35]">&lt;stikonas&gt;</a></span><span class="message">bash is more annoying...</span></div><div class="line" id="220051"><span class="nick" style="color:#8dd3c7"><a href="#220051" label="[22:00:51]">&lt;stikonas&gt;</a></span><span class="message">anyway, we need to bootstrap bison 3.4.1</span></div><div class="line" id="220058"><span class="nick" style="color:#2e2a4a"><a href="#220058" label="[22:00:58]">&lt;fossy&gt;</a></span><span class="message">bash is nearly done, I didnt get anything more done since my last status update</span></div><div class="line" id="220111"><span class="nick" style="color:#8dd3c7"><a href="#220111" label="[22:01:11]">&lt;stikonas&gt;</a></span><span class="message">but I guess parse.c is essential there?</span></div><div class="line" id="220114"><span class="nick" style="color:#2e2a4a"><a href="#220114" label="[22:01:14]">&lt;fossy&gt;</a></span><span class="message">yea</span></div><div class="line" id="220125"><span class="nick" style="color:#8dd3c7"><a href="#220125" label="[22:01:25]">&lt;stikonas&gt;</a></span><span class="message">ok, I think it's not the end of the world...</span></div><div class="line" id="220132"><span class="nick" style="color:#8dd3c7"><a href="#220132" label="[22:01:32]">&lt;stikonas&gt;</a></span><span class="message">bison should be compilable with tcc</span></div><div class="line" id="220136"><span class="nick" style="color:#8dd3c7"><a href="#220136" label="[22:01:36]">&lt;stikonas&gt;</a></span><span class="message">although, might need some small patches</span></div><div class="line" id="220150"><span class="nick" style="color:#8dd3c7"><a href="#220150" label="[22:01:50]">&lt;stikonas&gt;</a></span><span class="message">some quick attempt showed some problems with getprogname</span></div><div class="line" id="220218"><span class="nick" style="color:#8dd3c7"><a href="#220218" label="[22:02:18]">&lt;stikonas&gt;</a></span><span class="message">anyway, tar first...</span></div><div class="line" id="220221"><span class="nick" style="color:#2e2a4a"><a href="#220221" label="[22:02:21]">&lt;fossy&gt;</a></span><span class="message">1 sec im getting a link</span></div><div class="line" id="220237"><span class="nick" style="color:#8dd3c7"><a href="#220237" label="[22:02:37]">&lt;stikonas&gt;</a></span><span class="message">it's here <a rel="nofollow" href="https://gitlab.com/giomasce/bison-bootstrap">https://gitlab.com/giomasce/bison-bootstrap</a> </span></div><div class="line" id="220245"><span class="nick" style="color:#8dd3c7"><a href="#220245" label="[22:02:45]">&lt;stikonas&gt;</a></span><span class="message">oh, link for bash?</span></div><div class="line" id="220332"><span class="nick" style="color:#8dd3c7"><a href="#220332" label="[22:03:32]">&lt;stikonas&gt;</a></span><span class="message">and I thought people in early days of GNU cared about bootstrapping more than now...</span></div><div class="line" id="220339"><span class="nick" style="color:#8dd3c7"><a href="#220339" label="[22:03:39]">&lt;stikonas&gt;</a></span><span class="message">now I can see it's so entangled...</span></div><div class="line" id="220459"><span class="nick" style="color:#2e2a4a"><a href="#220459" label="[22:04:59]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/giomasce/nbs/#what-happens-then">https://gitlab.com/giomasce/nbs/#what-happens-then</a> </span></div><div class="line" id="220506"><span class="nick" style="color:#2e2a4a"><a href="#220506" label="[22:05:06]">&lt;fossy&gt;</a></span><span class="message">no not for bash</span></div><div class="line" id="220515"><span class="nick" style="color:#2e2a4a"><a href="#220515" label="[22:05:15]">&lt;fossy&gt;</a></span><span class="message">read the last 4 dot points in that section</span></div><div class="line" id="220520"><span class="nick" style="color:#2e2a4a"><a href="#220520" label="[22:05:20]">&lt;fossy&gt;</a></span><span class="message">thats the easiest path</span></div><div class="line" id="220558"><span class="nick" style="color:#8dd3c7"><a href="#220558" label="[22:05:58]">&lt;stikonas&gt;</a></span><span class="message">ok, we already have m4</span></div><div class="line" id="220638"><span class="nick" style="color:#8dd3c7"><a href="#220638" label="[22:06:38]">&lt;stikonas&gt;</a></span><span class="message">fossy: what about dash?</span></div><div class="line" id="220641"><span class="nick" style="color:#8dd3c7"><a href="#220641" label="[22:06:41]">&lt;stikonas&gt;</a></span><span class="message">instead of bash?</span></div><div class="line" id="220818"><span class="nick" style="color:#2e2a4a"><a href="#220818" label="[22:08:18]">&lt;fossy&gt;</a></span><span class="message">like before bash?</span></div><div class="line" id="220831"><span class="nick" style="color:#2e2a4a"><a href="#220831" label="[22:08:31]">&lt;fossy&gt;</a></span><span class="message">we need bash for autotools I think</span></div><div class="line" id="220844"><span class="nick" style="color:#2e2a4a"><a href="#220844" label="[22:08:44]">&lt;fossy&gt;</a></span><span class="message">but dash would work for a bit</span></div><div class="line" id="221054"><span class="nick" style="color:#2e2a4a"><a href="#221054" label="[22:10:54]">&lt;fossy&gt;</a></span><span class="message">so the primary issue is bash...</span></div><div class="line" id="221057"><span class="nick" style="color:#2e2a4a"><a href="#221057" label="[22:10:57]">&lt;fossy&gt;</a></span><span class="message">➜ find . -name &quot;*.y&quot;</span></div><div class="line" id="221059"><span class="nick" style="color:#2e2a4a"><a href="#221059" label="[22:10:59]">&lt;fossy&gt;</a></span><span class="message">./tar-1.12/lib/getdate.y</span></div><div class="line" id="221101"><span class="nick" style="color:#2e2a4a"><a href="#221101" label="[22:11:01]">&lt;fossy&gt;</a></span><span class="message">./bash-2.05b/parse.y</span></div><div class="line" id="221128"><span class="nick" style="color:#8dd3c7"><a href="#221128" label="[22:11:28]">&lt;stikonas&gt;</a></span><span class="message">ok, I'm already testing tar</span></div><div class="line" id="221137"><span class="nick" style="color:#2e2a4a"><a href="#221137" label="[22:11:37]">&lt;fossy&gt;</a></span><span class="message">hm, maybe dash is sufficient to run a configure script</span></div><div class="line" id="221144"><span class="nick" style="color:#8dd3c7"><a href="#221144" label="[22:11:44]">&lt;stikonas&gt;</a></span><span class="message">dash might be sufficient</span></div><div class="line" id="221151"><span class="nick" style="color:#2e2a4a"><a href="#221151" label="[22:11:51]">&lt;fossy&gt;</a></span><span class="message">it seems to be on my host system</span></div><div class="line" id="221152"><span class="nick" style="color:#8dd3c7"><a href="#221152" label="[22:11:52]">&lt;stikonas&gt;</a></span><span class="message">but that doesn't solve autotools bootstrap issue</span></div><div class="line" id="221159"><span class="nick" style="color:#8dd3c7"><a href="#221159" label="[22:11:59]">&lt;stikonas&gt;</a></span><span class="message">it's just that we can get some shell earlier</span></div><div class="line" id="221204"><span class="nick" style="color:#8dd3c7"><a href="#221204" label="[22:12:04]">&lt;stikonas&gt;</a></span><span class="message">no shell is a bit annoying</span></div><div class="line" id="221207"><span class="nick" style="color:#2e2a4a"><a href="#221207" label="[22:12:07]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="221217"><span class="nick" style="color:#2e2a4a"><a href="#221217" label="[22:12:17]">&lt;fossy&gt;</a></span><span class="message">we need a shell for a number of features</span></div><div class="line" id="221222"><span class="nick" style="color:#2e2a4a"><a href="#221222" label="[22:12:22]">&lt;fossy&gt;</a></span><span class="message">and we need bison for autotools</span></div><div class="line" id="221238"><span class="nick" style="color:#2e2a4a"><a href="#221238" label="[22:12:38]">&lt;fossy&gt;</a></span><span class="message">well, i guess i'll finish bash and leave the PR open</span></div><div class="line" id="221249"><span class="nick" style="color:#8dd3c7"><a href="#221249" label="[22:12:49]">&lt;stikonas&gt;</a></span><span class="message">yeah...</span></div><div class="line" id="221255"><span class="nick" style="color:#2e2a4a"><a href="#221255" label="[22:12:55]">&lt;fossy&gt;</a></span><span class="message">then i'll do dash instead, then we can do the flex/yacc/bison dance</span></div><div class="line" id="221341"><span class="nick" style="color:#8dd3c7"><a href="#221341" label="[22:13:41]">&lt;stikonas&gt;</a></span><span class="message">I'll let you know once my tar testing is done (<a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/14">https://github.com/fosslinux/live-bootstrap/pull/14</a>) </span></div><div class="line" id="221357"><span class="nick" style="color:#8dd3c7"><a href="#221357" label="[22:13:57]">&lt;stikonas&gt;</a></span><span class="message">and maybe looke a bit at bison</span></div><div class="line" id="221409"><span class="nick" style="color:#8dd3c7"><a href="#221409" label="[22:14:09]">&lt;stikonas&gt;</a></span><span class="message">since I already have submodule imported in a local branch</span></div><div class="line" id="221633"><span class="nick" style="color:#8dd3c7"><a href="#221633" label="[22:16:33]">&lt;stikonas&gt;</a></span><span class="message">fossy: or actually any other shell would work too... but I guess dash might be simplest...</span></div><div class="line" id="222838"><span class="nick" style="color:#2e2a4a"><a href="#222838" label="[22:28:38]">&lt;fossy&gt;</a></span><span class="message">stikonas: dash is probably simplest, yea</span></div><div class="line" id="225036"><span class="nick" style="color:#8dd3c7"><a href="#225036" label="[22:50:36]">&lt;stikonas&gt;</a></span><span class="message">fossy: I think our libc is insufficient to compile heirloom tools lex/yacc</span></div><div class="line" id="225150"><span class="nick" style="color:#8dd3c7"><a href="#225150" label="[22:51:50]">&lt;stikonas&gt;</a></span><span class="message">ldefs.c:46: error: include file 'wctype.h' not found</span></div><div class="line" id="225231"><span class="nick" style="color:#8dd3c7"><a href="#225231" label="[22:52:31]">&lt;stikonas&gt;</a></span><span class="message">let me see if it depends a lot on it...</span></div><div class="line" id="230436"><span class="nick" style="color:#2e2a4a"><a href="#230436" label="[23:04:36]">&lt;fossy&gt;</a></span><span class="message">stikonas: odd, might be able to disable it...</span></div><div class="line" id="230505"><span class="nick" style="color:#8dd3c7"><a href="#230505" label="[23:05:05]">&lt;stikonas&gt;</a></span><span class="message">possibly...</span></div><div class="line" id="230515"><span class="nick" style="color:#8dd3c7"><a href="#230515" label="[23:05:15]">&lt;stikonas&gt;</a></span><span class="message">there are other problems though...</span></div><div class="line" id="230535"><span class="nick" style="color:#8dd3c7"><a href="#230535" label="[23:05:35]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, tar change succeeded</span></div><div class="line" id="230537"><span class="nick" style="color:#8dd3c7"><a href="#230537" label="[23:05:37]">&lt;stikonas&gt;</a></span><span class="message">you can merge now</span></div><div class="line" id="230548"><span class="nick" style="color:#2e2a4a"><a href="#230548" label="[23:05:48]">&lt;fossy&gt;</a></span><span class="message">cool</span></div><div class="line" id="232645"><span class="nick" style="color:#6b8072"><a href="#232645" label="[23:26:45]">&lt;OriansJ&gt;</a></span><span class="message">gforce_d11977: well the 68K could definitely run the steps for bootstrapping GCC but the 6502 would have to do a sweet-16 to run cc_* without some serious modifications as the 6502 has a rather small hardware stack (256Bytes)</span></div><div class="line" id="234414"><span class="nick" style="color:#2e2a4a"><a href="#234414" label="[23:44:14]">&lt;fossy&gt;</a></span><span class="message">not cool</span></div><div class="line" id="234422"><span class="nick" style="color:#2e2a4a"><a href="#234422" label="[23:44:22]">&lt;fossy&gt;</a></span><span class="message">bash links now but segfaults on startup</span></div><div class="line" id="235410"><span class="nick" style="color:#8dd3c7"><a href="#235410" label="[23:54:10]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, we need bison for bash anyway...</span></div><div class="line" id="235500"><span class="nick" style="color:#8dd3c7"><a href="#235500" label="[23:55:00]">&lt;stikonas&gt;</a></span><span class="message">maybe then leave it for now?</span></div><div class="line" id="235510"><span class="nick" style="color:#8dd3c7"><a href="#235510" label="[23:55:10]">&lt;stikonas&gt;</a></span><span class="message">if we dash is enough to run autotools</span></div><div class="line" id="235515"><span class="nick" style="color:#8dd3c7"><a href="#235515" label="[23:55:15]">&lt;stikonas&gt;</a></span><span class="message">we can later compile bash using configure</span></div><br /></div></body></html>