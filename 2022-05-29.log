<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2022-05-29.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="010915"><span class="nick" style="color:#8dd3c7"><a href="#010915" label="[01:09:15]">&lt;stikonas[m]&gt;</a></span><span class="message">mihi: thanks coreutils 6 is probably fine but 8.34 would also have these issues</span></div><div class="line" id="011028"><span class="nick" style="color:#2e2a4a"><a href="#011028" label="[01:10:28]">&lt;mihi&gt;</a></span><span class="message">stikonas[m], ah ok, I haven't looked past sysa at all :)</span></div><div class="line" id="020014"><span class="nick" style="color:#6b8072"><a href="#020014" label="[02:00:14]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: yeah, sometimes shellcheck makes solutions that don't actually work</span></div><div class="line" id="020801"><span class="nick" style="color:#80b1d3"><a href="#020801" label="[02:08:01]">&lt;oriansj&gt;</a></span><span class="message">or introduce security vulnerabilities</span></div><div class="line" id="020942"><span class="nick" style="color:#80b1d3"><a href="#020942" label="[02:09:42]">&lt;oriansj&gt;</a></span><span class="message">see the Debian/Valgrid incident as an example: <a rel="nofollow" href="https://research.swtch.com/openssl">https://research.swtch.com/openssl</a> </span></div><div class="line" id="020956"><span class="nick" style="color:#6b8072"><a href="#020956" label="[02:09:56]">&lt;fossy&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/177">https://github.com/fosslinux/live-bootstrap/issues/177</a>  -- thoughts appreciated</span></div><div class="line" id="030721"><span class="nick" style="color:#80b1d3"><a href="#030721" label="[03:07:21]">&lt;oriansj&gt;</a></span><span class="message">fossy: that is a really hard problem to solve in automation</span></div><div class="line" id="040017"><span class="nick" style="color:#6b8072"><a href="#040017" label="[04:00:17]">&lt;fossy&gt;</a></span><span class="message">oriansj: how do you mean?</span></div><div class="line" id="041206"><span class="nick" style="color:#80b1d3"><a href="#041206" label="[04:12:06]">&lt;oriansj&gt;</a></span><span class="message">fossy: well not everyone labels their generated files as generated</span></div><div class="line" id="041221"><span class="nick" style="color:#80b1d3"><a href="#041221" label="[04:12:21]">&lt;oriansj&gt;</a></span><span class="message">if they did, this would be a simple grep and done</span></div><div class="line" id="041720"><span class="nick" style="color:#80b1d3"><a href="#041720" label="[04:17:20]">&lt;oriansj&gt;</a></span><span class="message">literally grep -iR &quot;generated file&quot; $package/</span></div><div class="line" id="042408"><span class="nick" style="color:#6b8072"><a href="#042408" label="[04:24:08]">&lt;fossy&gt;</a></span><span class="message">oh right</span></div><div class="line" id="042422"><span class="nick" style="color:#6b8072"><a href="#042422" label="[04:24:22]">&lt;fossy&gt;</a></span><span class="message">yeah i'm trying to minimise the existance of them to try to not have them in the first place</span></div><div class="line" id="042432"><span class="nick" style="color:#6b8072"><a href="#042432" label="[04:24:32]">&lt;fossy&gt;</a></span><span class="message">it is almost impossible to automate finding generated files</span></div><div class="line" id="053915"><span class="nick" style="color:#6d2462"><a href="#053915" label="[05:39:15]">&lt;pabs3&gt;</a></span><span class="message">we need a proper tool to find generated files. there is suspicious-source in Debian's devscripts, but it isn't well maintained and doesn't have a lot of coverage nor a good design really</span></div><div class="line" id="064405"><span class="nick" style="color:#6d2462"><a href="#064405" label="[06:44:05]">&lt;pabs3&gt;</a></span><span class="message">&quot;A dependently-typed proof language intended to make provably correct bare metal code possible for working software engineers&quot; <a rel="nofollow" href="https://github.com/magmide/magmide">https://github.com/magmide/magmide</a>  <a rel="nofollow" href="https://news.ycombinator.com/item?id=31543953">https://news.ycombinator.com/item?id=31543953</a> </span></div><div class="line" id="064421"><span class="nick" style="color:#6d2462"><a href="#064421" label="[06:44:21]">&lt;pabs3&gt;</a></span><span class="message">&quot;Magmide is purely a research project at this point&quot;</span></div><div class="line" id="103719"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o janneke</span></div><div class="line" id="141234"><span class="nick" style="color:#80b1d3"><a href="#141234" label="[14:12:34]">&lt;oriansj&gt;</a></span><span class="message">fossy: perhaps patches upstream that will result in predictable tags in generated files</span></div><div class="line" id="143224"><span class="nick" style="color:#80b1d3"><a href="#143224" label="[14:32:24]">&lt;oriansj&gt;</a></span><span class="message">unfortunately, I don't see a way to keep the code free of generated files without people putting in work, especially now that AI's trained on source code are now being used to generate &quot;code&quot;</span></div><div class="line" id="143628"><span class="nick" style="color:#80b1d3"><a href="#143628" label="[14:36:28]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.fsf.org/licensing/copilot/on-the-nature-of-ai-code-copilots">https://www.fsf.org/licensing/copilot/on-the-nature-of-ai-code-copilots</a> </span></div><div class="line" id="150005"><span class="nick" style="color:#234e69"><a href="#150005" label="[15:00:05]">&lt;Irvise_&gt;</a></span><span class="message">pabs3: if you like proofs and low level, there is Ada/SPARK :)</span></div><div class="line" id="150126"><span class="nick" style="color:#234e69"><a href="#150126" label="[15:01:26]">&lt;Irvise_&gt;</a></span><span class="message">Ada being the Ada programming language with all of its wonders and SPARK being the subset that can actually proves correctness before compilation.</span></div><div class="line" id="150145"><span class="nick" style="color:#6c3d55"><a href="#150145" label="[15:01:45]">&lt;unmatched-paren&gt;</a></span><span class="message">Irvise_: ...which has not yet been bootstrapped :P</span></div><div class="line" id="150154"><span class="nick" style="color:#234e69"><a href="#150154" label="[15:01:54]">&lt;Irvise_&gt;</a></span><span class="message">It mostly uses the Ada type-system and its contracts :P</span></div><div class="line" id="150205"><span class="nick" style="color:#234e69"><a href="#150205" label="[15:02:05]">&lt;Irvise_&gt;</a></span><span class="message">unmatched-paren: theruran and I are on it ;)</span></div><div class="line" id="150213"><span class="nick" style="color:#234e69"><a href="#150213" label="[15:02:13]">&lt;Irvise_&gt;</a></span><span class="message">It will take years however.</span></div><div class="line" id="150258"><span class="nick" style="color:#234e69"><a href="#150258" label="[15:02:58]">&lt;Irvise_&gt;</a></span><span class="message">We have basically settled with Chibi Scheme as the platform to bootstrap Ada/GNAT.</span></div><div class="line" id="150338"><span class="nick" style="color:#6c3d55"><a href="#150338" label="[15:03:38]">&lt;unmatched-paren&gt;</a></span><span class="message">interesting! I wish you luck, despite the fact that Ada.Does_Not_Particularly_Appeal_To_Me</span></div><div class="line" id="150413"><span class="nick" style="color:#6c3d55"><a href="#150413" label="[15:04:13]">&lt;unmatched-paren&gt;</a></span><span class="message">But -.o.- people can use whatever language they want to :) unless it's cobol.</span></div><div class="line" id="150526"><span class="nick" style="color:#234e69"><a href="#150526" label="[15:05:26]">&lt;Irvise_&gt;</a></span><span class="message">Hehehe, I understand what you mean. But once I saw it being used to abstract away a PWM controller... I just fell in love. And it has been an ever giving language, the more I learn it, the more it gives back.</span></div><div class="line" id="150619"><span class="nick" style="color:#6c3d55"><a href="#150619" label="[15:06:19]">&lt;unmatched-paren&gt;</a></span><span class="message">Ada.Text_IO.Put_Line (&quot;Well, I might take a look. Worth learning as many as possible :P&quot;)</span></div><div class="line" id="150633"><span class="nick" style="color:#6c3d55"><a href="#150633" label="[15:06:33]">&lt;unmatched-paren&gt;</a></span><span class="message">Languages, that is.</span></div><div class="line" id="150805"><span class="nick" style="color:#6c3d55"><a href="#150805" label="[15:08:05]">&lt;unmatched-paren&gt;</a></span><span class="message">But really, the overly verbose names are quite offputting. Ada.Text_IO.Put_Line could be reduced to just io.putln.</span></div><div class="line" id="150924"><span class="nick" style="color:#6c3d55"><a href="#150924" label="[15:09:24]">&lt;unmatched-paren&gt;</a></span><span class="message">Also the Fortran-like `if ... end if` thing. The trailing if could easily be dropped. But to each their own :)</span></div><div class="line" id="151939"><span class="nick" style="color:#d9d9d9"><a href="#151939" label="[15:19:39]">&lt;furrymcgee&gt;</a></span><span class="message">a tool to find generated files? do generated files even exist?</span></div><div class="line" id="153638"><span class="nick" style="color:#80b1d3"><a href="#153638" label="[15:36:38]">&lt;oriansj&gt;</a></span><span class="message">Irvise: I am glad to hear that you are one that problem, I wish you would share your progress more</span></div><div class="line" id="153820"><span class="nick" style="color:#80b1d3"><a href="#153820" label="[15:38:20]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: Bootstrapping cobol will be a billion dollar support contract for financial institutions and it is going to be a boatload of hard work. I actively encourage anyone who wants to get paid to look into getting good at cobol and converting legacy cobol to modern cobol</span></div><div class="line" id="153954"><span class="nick" style="color:#80b1d3"><a href="#153954" label="[15:39:54]">&lt;oriansj&gt;</a></span><span class="message">furrymcgee: based on your question, I think you might have an alternate understanding of what the phrase generated files means. Will you please clarify what you mean when you say that term?</span></div><div class="line" id="154031"><span class="nick" style="color:#d9d9d9"><a href="#154031" label="[15:40:31]">&lt;furrymcgee&gt;</a></span><span class="message">ai generated files</span></div><div class="line" id="154108"><span class="nick" style="color:#80b1d3"><a href="#154108" label="[15:41:08]">&lt;oriansj&gt;</a></span><span class="message">furrymcgee: have you not heard of copilot?</span></div><div class="line" id="154130"><span class="nick" style="color:#80b1d3"><a href="#154130" label="[15:41:30]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://www.fsf.org/licensing/copilot">https://www.fsf.org/licensing/copilot</a> </span></div><div class="line" id="154205"><span class="nick" style="color:#d9d9d9"><a href="#154205" label="[15:42:05]">&lt;furrymcgee&gt;</a></span><span class="message">yes a lot of hype</span></div><div class="line" id="154315"><span class="nick" style="color:#80b1d3"><a href="#154315" label="[15:43:15]">&lt;oriansj&gt;</a></span><span class="message">and here when we say generated files, we mean any text file that isn't written by a human that could based on the FSF standards be called source code</span></div><div class="line" id="154321"><span class="nick" style="color:#6c3d55"><a href="#154321" label="[15:43:21]">&lt;unmatched-paren&gt;</a></span><span class="message">oriansj: Whoever bootstraps first will get a lifetime pass to visit a professional psychiatrist any time they like for the rest of their life.</span></div><div class="line" id="154328"><span class="nick" style="color:#6c3d55"><a href="#154328" label="[15:43:28]">&lt;unmatched-paren&gt;</a></span><span class="message">*bootstraps Cobol.</span></div><div class="line" id="154409"><span class="nick" style="color:#80b1d3"><a href="#154409" label="[15:44:09]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: well that usually comes with a good benefits package</span></div><div class="line" id="154513"><span class="nick" style="color:#80b1d3"><a href="#154513" label="[15:45:13]">&lt;oriansj&gt;</a></span><span class="message">if you are willing and able to do the work that other people are not willing or able to do; you can ask for what other people can't</span></div><div class="line" id="154516"><span class="nick" style="color:#234e69"><a href="#154516" label="[15:45:16]">&lt;Irvise_&gt;</a></span><span class="message">oriansj: well... Current progress was deciding on a Scheme implementation to use... Here is what came out of it: <a rel="nofollow" href="https://irvise.xyz/Blog/scheme-implementation-comparison.html">https://irvise.xyz/Blog/scheme-implementation-comparison.html</a> </span></div><div class="line" id="154549"><span class="nick" style="color:#234e69"><a href="#154549" label="[15:45:49]">&lt;Irvise_&gt;</a></span><span class="message">Obviously, all that work was aimed with the #bootstrappable:libera.chat criteria :)</span></div><div class="line" id="154628"><span class="nick" style="color:#80b1d3"><a href="#154628" label="[15:46:28]">&lt;oriansj&gt;</a></span><span class="message">Irvise: nicely done and looks rather complete of a search</span></div><div class="line" id="154722"><span class="nick" style="color:#234e69"><a href="#154722" label="[15:47:22]">&lt;Irvise_&gt;</a></span><span class="message">After all that work (which was quite a bit). I went on to talk to the S7 and Chibi people to ask them questions regarding some &quot;in-depth&quot; testing. Mainly &quot;Is it easy to compile and bootstrap?&quot; &quot;Is it easy to run on RISC-V?&quot; &quot;How complete they are?&quot; and some quality-of-live questions.</span></div><div class="line" id="154734"><span class="nick" style="color:#234e69"><a href="#154734" label="[15:47:34]">&lt;Irvise_&gt;</a></span><span class="message">oriansj: that was my aim :)</span></div><div class="line" id="154755"><span class="nick" style="color:#d9d9d9"><a href="#154755" label="[15:47:55]">&lt;furrymcgee&gt;</a></span><span class="message">I suspect copilot wont tell you if and how a file was generated</span></div><div class="line" id="154837"><span class="nick" style="color:#234e69"><a href="#154837" label="[15:48:37]">&lt;Irvise_&gt;</a></span><span class="message">In the end we settled for S7 and Chibi. Yesterday (see <a rel="nofollow" href="https://github.com/ashinn/chibi-scheme/issues/836">https://github.com/ashinn/chibi-scheme/issues/836</a>),  our main pain was lifted for Chibi, so I suppose we are ready to go with it.</span></div><div class="line" id="154857"><span class="nick" style="color:#80b1d3"><a href="#154857" label="[15:48:57]">&lt;oriansj&gt;</a></span><span class="message">Irvise: you should feel proud about that work and with that level of attention to detail, I am sure Ada is in good hands</span></div><div class="line" id="154913"><span class="nick" style="color:#6c3d55"><a href="#154913" label="[15:49:13]">&lt;unmatched-paren&gt;</a></span><span class="message">I expect that Copilot won't gain traction in the areas we are aiming at; i.e. not web developers.</span></div><div class="line" id="154938"><span class="nick" style="color:#234e69"><a href="#154938" label="[15:49:38]">&lt;Irvise_&gt;</a></span><span class="message">Although x-compiling Chibi is not very straight forward, as it requires to manually patch a line in the Makefile, but that is easily doable.</span></div><div class="line" id="154941"><span class="nick" style="color:#6c3d55"><a href="#154941" label="[15:49:41]">&lt;unmatched-paren&gt;</a></span><span class="message">Or ENTERPRISE CLOUD SCALE MOVE FAST AND BREAK THINGS developers.</span></div><div class="line" id="155015"><span class="nick" style="color:#234e69"><a href="#155015" label="[15:50:15]">&lt;Irvise_&gt;</a></span><span class="message">We were aiming to get as close to the seed as possible. That is not really so important was we probably could have moved up to steps ~60 or so, but still.</span></div><div class="line" id="155017"><span class="nick" style="color:#80b1d3"><a href="#155017" label="[15:50:17]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: I very much hope so but I try not to bank on that.</span></div><div class="line" id="155021"><span class="nick" style="color:#234e69"><a href="#155021" label="[15:50:21]">&lt;Irvise_&gt;</a></span><span class="message">oriansj: thanks :)</span></div><div class="line" id="155053"><span class="nick" style="color:#234e69"><a href="#155053" label="[15:50:53]">&lt;Irvise_&gt;</a></span><span class="message">s/was/as</span></div><div class="line" id="155101"><span class="nick" style="color:#6c3d55"><a href="#155101" label="[15:51:01]">&lt;unmatched-paren&gt;</a></span><span class="message">Most systems programmers will probably just stick to their vi/emacs, possibly with autocompletion, but that doesn't really count as generated, does it?</span></div><div class="line" id="155252"><span class="nick" style="color:#80b1d3"><a href="#155252" label="[15:52:52]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: I wouldn't count tab completion as generated code but where exactly to draw that line is a very good question that requires more consideration.</span></div><div class="line" id="155432"><span class="nick" style="color:#6c3d55"><a href="#155432" label="[15:54:32]">&lt;unmatched-paren&gt;</a></span><span class="message">The user of autocompletion generally chooses which of a choice of options they want to write themselves. The completion system doesn't analyze the code enough to be generated, imo.</span></div><div class="line" id="155613"><span class="nick" style="color:#80b1d3"><a href="#155613" label="[15:56:13]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: also it only populates a single word and not a 500 line block of text</span></div><div class="line" id="155625"><span class="nick" style="color:#6c3d55"><a href="#155625" label="[15:56:25]">&lt;unmatched-paren&gt;</a></span><span class="message">Bad wording. It isn't based on the rest of the code, it's just chosen based on what you've typed. It's a shortcut, not a way to generate code for you. Therefore not generated.</span></div><div class="line" id="155636"><span class="nick" style="color:#6c3d55"><a href="#155636" label="[15:56:36]">&lt;unmatched-paren&gt;</a></span><span class="message">(I meant I had bad wording, not you :P)</span></div><div class="line" id="155701"><span class="nick" style="color:#6c3d55"><a href="#155701" label="[15:57:01]">&lt;unmatched-paren&gt;</a></span><span class="message">oriansj: Well, unless you're using snippet systems...</span></div><div class="line" id="155749"><span class="nick" style="color:#6c3d55"><a href="#155749" label="[15:57:49]">&lt;unmatched-paren&gt;</a></span><span class="message">you might type `if|` and have it completed to `if (|)`, then type a condition and then `)` and have it completed to `if (...) { | }`. Still not generated.</span></div><div class="line" id="155916"><span class="nick" style="color:#80b1d3"><a href="#155916" label="[15:59:16]">&lt;oriansj&gt;</a></span><span class="message">unmatched-paren: well if you write those snips yourself, is that any different than doing C-x (/C-x ) and C-x e</span></div><div class="line" id="155947"><span class="nick" style="color:#6c3d55"><a href="#155947" label="[15:59:47]">&lt;unmatched-paren&gt;</a></span><span class="message">what's C-x/C-x e? I am not emacs :)</span></div><div class="line" id="160000"><span class="nick" style="color:#80b1d3"><a href="#160000" label="[16:00:00]">&lt;oriansj&gt;</a></span><span class="message">super useful when writting a FORTH in assembly because of how repetitive the function headers are</span></div><div class="line" id="160024"><span class="nick" style="color:#80b1d3"><a href="#160024" label="[16:00:24]">&lt;oriansj&gt;</a></span><span class="message">record macro and run macro</span></div><div class="line" id="160135"><span class="nick" style="color:#6c3d55"><a href="#160135" label="[16:01:35]">&lt;unmatched-paren&gt;</a></span><span class="message">ah. (In vim that's q&lt;key&gt; and @&lt;key&gt; respectively)</span></div><div class="line" id="160541"><span class="nick" style="color:#234e69"><a href="#160541" label="[16:05:41]">&lt;Irvise_&gt;</a></span><span class="message">Isn't that record macro, execute macro?</span></div><div class="line" id="160618"><span class="nick" style="color:#6c3d55"><a href="#160618" label="[16:06:18]">&lt;unmatched-paren&gt;</a></span><span class="message">yes</span></div><div class="line" id="160632"><span class="nick" style="color:#6c3d55"><a href="#160632" label="[16:06:32]">&lt;unmatched-paren&gt;</a></span><span class="message">              oriansj  record macro and run macro</span></div><div class="line" id="163258"><span class="nick" style="color:#234e69"><a href="#163258" label="[16:32:58]">&lt;Irvise_&gt;</a></span><span class="message">Oh, I think orians was referring to Emacs having that already built into the language mode :)</span></div><div class="line" id="163405"><span class="nick" style="color:#234e69"><a href="#163405" label="[16:34:05]">&lt;Irvise_&gt;</a></span><span class="message">In Emacs a macro starts with C-x (     Which I find pretty nice, since it looks like you are writing an emacs-lisp expression (macros-are-code).</span></div><div class="line" id="163418"><span class="nick" style="color:#6c3d55"><a href="#163418" label="[16:34:18]">&lt;unmatched-paren&gt;</a></span><span class="message">ahhh</span></div><div class="line" id="183109"><span class="nick" style="color:#234e69"><a href="#183109" label="[18:31:09]">&lt;Irvise_&gt;</a></span><span class="message">Following oriansj recommendation to share my progress... I think we are going to use Chibi 100%! Here is chibi running the its test-suite on RISC-V (ULX3S FPGA, 50MHz, 32-bit IMACFD) :D</span></div><div class="line" id="183118"><span class="nick" style="color:#234e69"><a href="#183118" label="[18:31:18]">&lt;Irvise_&gt;</a></span><span class="message">No modifications were done to the src :) <a rel="nofollow" href="https://github.com/ashinn/chibi-scheme/issues/836#issuecomment-1140276734">https://github.com/ashinn/chibi-scheme/issues/836#issuecomment-1140276734</a> </span></div><div class="line" id="183127"><span class="nick" style="color:#234e69"><a href="#183127" label="[18:31:27]">&lt;Irvise_&gt;</a></span><span class="message">theruran: ^</span></div><div class="line" id="183134"><span class="nick" style="color:#234e69"><a href="#183134" label="[18:31:34]">&lt;Irvise_&gt;</a></span><span class="message">:D</span></div><div class="line" id="183247"><span class="nick" style="color:#234e69"><a href="#183247" label="[18:32:47]">&lt;Irvise_&gt;</a></span><span class="message">Arg, it is this comment (the other link was to the previous one) <a rel="nofollow" href="https://github.com/ashinn/chibi-scheme/issues/836#issuecomment-1140482393">https://github.com/ashinn/chibi-scheme/issues/836#issuecomment-1140482393</a> </span></div><div class="line" id="192153"><span class="nick" style="color:#80b1d3"><a href="#192153" label="[19:21:53]">&lt;oriansj&gt;</a></span><span class="message">neat</span></div><div class="line" id="210915"><span class="nick" style="color:#bc80bd"><a href="#210915" label="[21:09:15]">&lt;Hagfish&gt;</a></span><span class="message">i don't know what's more impressive:  getting chibi running, having a RISC-V on an FPGA, or the fact it has a proper test-suite :)</span></div><div class="line" id="210933"><span class="nick" style="color:#bc80bd"><a href="#210933" label="[21:09:33]">&lt;Hagfish&gt;</a></span><span class="message">anyway, it sounds like some great work and wisdom has gone into reaching that milestone</span></div><div class="line" id="212218"><span class="nick" style="color:#234e69"><a href="#212218" label="[21:22:18]">&lt;Irvise_&gt;</a></span><span class="message">The ULX3S is difficult to get nowdays, but it is fully open silicon :)</span></div><div class="line" id="212241"><span class="nick" style="color:#234e69"><a href="#212241" label="[21:22:41]">&lt;Irvise_&gt;</a></span><span class="message">Sorry, not silicon as the silicon schematics. But at the PBC level.</span></div><div class="line" id="212306"><span class="nick" style="color:#234e69"><a href="#212306" label="[21:23:06]">&lt;Irvise_&gt;</a></span><span class="message">It also uses a fully open toolchain :D The core it is running, SaxonSOC, is fully open too :D</span></div><div class="line" id="212417"><span class="nick" style="color:#234e69"><a href="#212417" label="[21:24:17]">&lt;Irvise_&gt;</a></span><span class="message">And it seems that the opinion on Chibi is that &quot;isn't it supposed to be a playing ground Scheme?&quot;. But from my experience, that opinion must have come from the beginning of Chibi, it is fairly mature nowdays :)</span></div><div class="line" id="212517"><span class="nick" style="color:#234e69"><a href="#212517" label="[21:25:17]">&lt;Irvise_&gt;</a></span><span class="message">S7 Scheme and Chibi did also run flawlessly in RISC-V without changes to the src. Small, well-written programs with little dependence on the OS/Arch does have its advantages :P</span></div><div class="line" id="212857"><span class="nick" style="color:#234e69"><a href="#212857" label="[21:28:57]">&lt;Irvise_&gt;</a></span><span class="message">The main shortcoming of the ULX3S is that it only has 32MB of RAM... The new ULX4 will have less &quot;electronics&quot; (GPIO, switches, buttons, etc), but will rock a much larger RAM (I think 1-2GB) with the 84k LUTs from the 85F version of the FPGA. I am saying this in case someone is interested in this.</span></div><div class="line" id="213403"><span class="nick" style="color:#234e69"><a href="#213403" label="[21:34:03]">&lt;Irvise_&gt;</a></span><span class="message">(though for the price of the ULX3S-85F to run RISC-V, you could probably get one of the new RISC-V SBCs that are coming out. Same price or lower price, much higher performance, more memory, more basically everything)</span></div><div class="line" id="213410"><span class="nick" style="color:#3c5b35"><a href="#213410" label="[21:34:10]">*</a></span><span class="message">Irvise_ shuts up :P</span></div><div class="line" id="213456"><span class="nick" style="color:#6c3d55"><a href="#213456" label="[21:34:56]">&lt;unmatched-paren&gt;</a></span><span class="message">No, don't shut up! This is all really interesting :)</span></div><div class="line" id="213604"><span class="nick" style="color:#80b1d3"><a href="#213604" label="[21:36:04]">&lt;oriansj&gt;</a></span><span class="message">Irvise: well those wanting an FPGA are a different group of people than those who just want a CPU.</span></div><div class="line" id="213636"><span class="nick" style="color:#234e69"><a href="#213636" label="[21:36:36]">&lt;Irvise_&gt;</a></span><span class="message">I obviated the obvious :P</span></div><div class="line" id="213921"><span class="nick" style="color:#234e69"><a href="#213921" label="[21:39:21]">&lt;Irvise_&gt;</a></span><span class="message">A few links in case you want to look into this (I know there is some interest in RISC-V here): ULX3S <a rel="nofollow" href="https://ulx3s.github.io/">https://ulx3s.github.io/</a>  Nezha SBC (quite powerful, supports the V extension) <a rel="nofollow" href="https://www.youtube.com/watch?v=613yEF6SrNo">https://www.youtube.com/watch?v=613yEF6SrNo</a>  and VisionFIVE (powerful, but seems to aim IoT) <a rel="nofollow" href="https://www.youtube.com/watch?v=4PoWAsBOsFs">https://www.youtube.com/watch?v=4PoWAsBOsFs</a> </span></div><div class="line" id="214449"><span class="nick" style="color:#234e69"><a href="#214449" label="[21:44:49]">&lt;Irvise_&gt;</a></span><span class="message">And if you like Smartphones, RISC-V and hacking: <a rel="nofollow" href="https://www.crowdsupply.com/sutajio-kosagi/precursor">https://www.crowdsupply.com/sutajio-kosagi/precursor</a> </span></div><div class="line" id="221457"><span class="nick" style="color:#bc80bd"><a href="#221457" label="[22:14:57]">&lt;Hagfish&gt;</a></span><span class="message">yeah, thanks for the details.  it's great to hear that it even has a fully open toolchain</span></div><div class="line" id="221527"><span class="nick" style="color:#bc80bd"><a href="#221527" label="[22:15:27]">&lt;Hagfish&gt;</a></span><span class="message">too often i see people say &quot;well, it doesn't matter how much you audit the software because you can't trust the hardware&quot;</span></div><div class="line" id="221638"><span class="nick" style="color:#bc80bd"><a href="#221638" label="[22:16:38]">&lt;Hagfish&gt;</a></span><span class="message">it sounds like the sort of attacks they are imagining are close to becoming unrealistic</span></div><div class="line" id="221710"><span class="nick" style="color:#bc80bd"><a href="#221710" label="[22:17:10]">&lt;Hagfish&gt;</a></span><span class="message">i mean, maybe the NSA has spent billions infiltrating every FPGA fab out there to hide quantum nanobots under the surface of the silicon...</span></div><div class="line" id="221831"><span class="nick" style="color:#bc80bd"><a href="#221831" label="[22:18:31]">&lt;Hagfish&gt;</a></span><span class="message">but i think Occam's razor will be on the side of the bootstrappers (and reproducible builders, and auditors, etc.), and not the naysayers</span></div><div class="line" id="225637"><span class="nick" style="color:#80b1d3"><a href="#225637" label="[22:56:37]">&lt;oriansj&gt;</a></span><span class="message">Hagfish: well once we figure out how to build lithography fabs in our garages, if the NSA can compromise all of those, well then. I guess we need to start bootstrapping society too</span></div><div class="line" id="234302"><span class="nick" style="color:#af8d2f"><a href="#234302" label="[23:43:02]">&lt;vagrantc&gt;</a></span><span class="message">/29/29</span></div><br /></div></body></html>