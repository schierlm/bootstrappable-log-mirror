<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-03-31.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="020740"><span class="nick" style="color:#389600"><a href="#020740" label="[02:07:40]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: not sure if you saw but most people here suggested that you wouldn't spend time getting fiwix hard disk working if it's not fun</span></div><div class="line" id="020822"><span class="nick" style="color:#389600"><a href="#020822" label="[02:08:22]">&lt;stikonas&gt;</a></span><span class="message">we'll just try to fit withing limits</span></div><div class="line" id="050521"><span class="nick" style="color:#8dd3c7"><a href="#050521" label="[05:05:21]">&lt;aggi&gt;</a></span><span class="message">weird ... // ticks = jiffies; while (ticks == jiffies);</span></div><div class="line" id="050541"><span class="nick" style="color:#8dd3c7"><a href="#050541" label="[05:05:41]">&lt;aggi&gt;</a></span><span class="message">how could i have missed this? stupid me.</span></div><div class="line" id="050842"><span class="nick" style="color:#8dd3c7"><a href="#050842" label="[05:08:42]">&lt;aggi&gt;</a></span><span class="message">it isn't the only problem however</span></div><div class="line" id="052259"><span class="nick" style="color:#8dd3c7"><a href="#052259" label="[05:22:59]">&lt;aggi&gt;</a></span><span class="message">well, i inserted an asm nop instead... then it passes beyond the delay loop, and crashes as usual elsewhere</span></div><div class="line" id="052317"><span class="nick" style="color:#8dd3c7"><a href="#052317" label="[05:23:17]">&lt;aggi&gt;</a></span><span class="message">depends, if apic support is present, or not, when it crashes</span></div><div class="line" id="052457"><span class="nick" style="color:#8dd3c7"><a href="#052457" label="[05:24:57]">&lt;aggi&gt;</a></span><span class="message">and what should this do other than blocking indefinitely...  while (ticks == jiffies); ???</span></div><div class="line" id="052531"><span class="nick" style="color:#8dd3c7"><a href="#052531" label="[05:25:31]">&lt;aggi&gt;</a></span><span class="message">anyway... there is something else, fundementally wrong and it seems related to interrupt handling</span></div><div class="line" id="052608"><span class="nick" style="color:#8dd3c7"><a href="#052608" label="[05:26:08]">&lt;aggi&gt;</a></span><span class="message">i'll try another day or two... and then see to fiwix kernel instead</span></div><div class="line" id="061725"><span class="nick" style="color:#2e2a4a"><a href="#061725" label="[06:17:25]">&lt;lilyp&gt;</a></span><span class="message">could it be that either ticks or jiffies is meant to be volatile?</span></div><div class="line" id="064437"><span class="nick" style="color:#6b8072"><a href="#064437" label="[06:44:37]">&lt;muurkha&gt;</a></span><span class="message">presumably jiffies is the volatile counter of how many jiffies have passed since kernel boot?  I forget how Linux works</span></div><div class="line" id="065924"><span class="nick" style="color:#8dd3c7"><a href="#065924" label="[06:59:24]">&lt;aggi&gt;</a></span><span class="message">who knows, the problem is the malfunctioning interrupting handling...</span></div><div class="line" id="070323"><span class="nick" style="color:#8dd3c7"><a href="#070323" label="[07:03:23]">&lt;aggi&gt;</a></span><span class="message">and some peculiarities with extern inline definitions, which causes duplicate definition warnings with tcc, and depending on how this is coped with missing symbols with gcc-4.7</span></div><div class="line" id="071559"><span class="nick" style="color:#8dd3c7"><a href="#071559" label="[07:15:59]">&lt;aggi&gt;</a></span><span class="message">i'll expand the related macros in i8259.c to see what is going on</span></div><div class="line" id="122942"><span class="nick" style="color:#80b1d3"><a href="#122942" label="[12:29:42]">&lt;avih&gt;</a></span><span class="message">when aggi shows up, someone point him please to <a rel="nofollow" href="https://bellard.org/tcc/tccboot-0.1.tar.gz">https://bellard.org/tcc/tccboot-0.1.tar.gz</a>  , specifically the file linux-2.4.26-tcc.patch inside, which seem to patch the kernel around the areas he had problems with (interrupts, asm, etc).</span></div><div class="line" id="123457"><span class="nick" style="color:#80b1d3"><a href="#123457" label="[12:34:57]">&lt;avih&gt;</a></span><span class="message">also, the README <a rel="nofollow" href="https://bellard.org/tcc/tccboot_readme.html">https://bellard.org/tcc/tccboot_readme.html</a>  seem informative, describes the process, and also addresses some of the issues related to interrupts and asm</span></div><div class="line" id="131125"><span class="nick" style="color:#6d2462"><a href="#131125" label="[13:11:25]">&lt;oriansj&gt;</a></span><span class="message">gforce_de1977: also one on my backlog along with the Commander X16.</span></div><div class="line" id="131445"><span class="nick" style="color:#6d2462"><a href="#131445" label="[13:14:45]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well it certainly shifts most of the hardware design into software where changes becomemuch easier to do; as the Transmeta work clearly showed, it has excellent design potential as it wasoneof the few platforms which one could fix defects rather than being forced to patch around buggy hardware.</span></div><div class="line" id="131617"><span class="nick" style="color:#6d2462"><a href="#131617" label="[13:16:17]">&lt;oriansj&gt;</a></span><span class="message">but I am partial to minimal -&gt; no microcode processors;</span></div><div class="line" id="131849"><span class="nick" style="color:#6d2462"><a href="#131849" label="[13:18:49]">&lt;oriansj&gt;</a></span><span class="message">and if I wasn't sure, I'd stick to FPGAs until I slowly firm up my ideas. Which is surprisingly hard in the hardware space.</span></div><div class="line" id="132925"><span class="nick" style="color:#6d2462"><a href="#132925" label="[13:29:25]">&lt;oriansj&gt;</a></span><span class="message">and the most frustrating bit is knowing that there are probably good design secrets out there that you want before you begin.</span></div><div class="line" id="140908"><span class="nick" style="color:#6b8072"><a href="#140908" label="[14:09:08]">&lt;muurkha&gt;</a></span><span class="message">yeah, my4th definitely doesn't qualify as &quot;minimal to no microcode&quot; :)</span></div><div class="line" id="150849"><span class="nick" style="color:#234e69"><a href="#150849" label="[15:08:49]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: thanks, yes, I've seen the messages regarding Fiwix and hard drive.</span></div><div class="line" id="150953"><span class="nick" style="color:#234e69"><a href="#150953" label="[15:09:53]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I did make some progress but I've moved back to using a ram drive for the time being.</span></div><div class="line" id="151052"><span class="nick" style="color:#234e69"><a href="#151052" label="[15:10:52]">&lt;rickmasters&gt;</a></span><span class="message">I'm working on an updated PR which may be available today.</span></div><div class="line" id="151210"><span class="nick" style="color:#234e69"><a href="#151210" label="[15:12:10]">&lt;rickmasters&gt;</a></span><span class="message">I also spent some time on patches that allow running live-bootstrap from the start using Fiwix, with either ram drive or hard drive.</span></div><div class="line" id="151437"><span class="nick" style="color:#234e69"><a href="#151437" label="[15:14:37]">&lt;rickmasters&gt;</a></span><span class="message">Those patches allow for easier testing of different Fiwix kernel builds and switching between ram drive and hard drive.</span></div><div class="line" id="151542"><span class="nick" style="color:#234e69"><a href="#151542" label="[15:15:42]">&lt;rickmasters&gt;</a></span><span class="message">With that I'm hoping Mikaku can take a look at the hard drive issues. Mikaku: I'll open an Issue for that soon.</span></div><div class="line" id="151734"><span class="nick" style="color:#234e69"><a href="#151734" label="[15:17:34]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I've been able to determine that hard drive requests are timing out on Fiwix when running live-bootstrap with qemu.</span></div><div class="line" id="151831"><span class="nick" style="color:#234e69"><a href="#151831" label="[15:18:31]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: The failure rates are greatly affected by changing the WAIT_FOR_DISK definition. I'll provide the details in an Issue I'll file soon.</span></div><div class="line" id="183746"><span class="nick" style="color:#6c3d55"><a href="#183746" label="[18:37:46]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: ok, I'll be glad to read new issues on this subject</span></div><div class="line" id="183815"><span class="nick" style="color:#6c3d55"><a href="#183815" label="[18:38:15]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: as I said before, I rebuild several times per week all the FiwixOS packages and I only experience one or two disk timeouts that doesn't affect the whole process</span></div><div class="line" id="184016"><span class="nick" style="color:#6c3d55"><a href="#184016" label="[18:40:16]">&lt;Mikaku&gt;</a></span><span class="message">rebuilding all FiwixOS packages takes more than an hour and has a heavy disk and filesystem use. Sincerely having only a pair of disk timeouts is enough stable for me right now</span></div><div class="line" id="184223"><span class="nick" style="color:#6c3d55"><a href="#184223" label="[18:42:23]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: in the other hand, I'm finishing the kexec functionality in Fiwix. It doesn't use a system call like in the Linux, so there is no need of userland programs. In fact, I was unable to port to Fiwix the 'kexec-tools' from Linux and that's the reason why the kexec mechanism in Fiwix is different than in Linux</span></div><div class="line" id="184339"><span class="nick" style="color:#6c3d55"><a href="#184339" label="[18:43:39]">&lt;Mikaku&gt;</a></span><span class="message">I'm using Multiboot1 protocol so far, and the Fiwix kernel boots successfully. Once the kexec be integrated completely in the kernel, the next step will be to include support to be able to kexec the Linux kernel which I presume it needs some special tweaks</span></div><div class="line" id="184540"><span class="nick" style="color:#6c3d55"><a href="#184540" label="[18:45:40]">&lt;Mikaku&gt;</a></span><span class="message">having the kexec already working in Fiwix will accelerate things and will make path easier to include support to kexec Linux</span></div><div class="line" id="192336"><span class="nick" style="color:#d9d9d9"><a href="#192336" label="[19:23:36]">&lt;stikonas[m]&gt;</a></span><span class="message">It doesn't have to be the same syscall</span></div><div class="line" id="192511"><span class="nick" style="color:#6c3d55"><a href="#192511" label="[19:25:11]">&lt;Mikaku&gt;</a></span><span class="message">stikonas[m]: yes, but having a system call implies having a userland program like in 'kexec-tools'. Since I was unable to port such package because it's too Linux dependent, I decided to take a different path</span></div><div class="line" id="192540"><span class="nick" style="color:#d9d9d9"><a href="#192540" label="[19:25:40]">&lt;stikonas[m]&gt;</a></span><span class="message">Yes, I mean mechanism is up to you</span></div><div class="line" id="192642"><span class="nick" style="color:#d9d9d9"><a href="#192642" label="[19:26:42]">&lt;stikonas[m]&gt;</a></span><span class="message">In the worst case we could just do full reboot, but that would drop us back to BIOS, so harder to ensure that we'll boot successfully</span></div><div class="line" id="192653"><span class="nick" style="color:#d9d9d9"><a href="#192653" label="[19:26:53]">&lt;stikonas[m]&gt;</a></span><span class="message">E.g. if boot order is changed</span></div><div class="line" id="192720"><span class="nick" style="color:#6c3d55"><a href="#192720" label="[19:27:20]">&lt;Mikaku&gt;</a></span><span class="message">yes, I'm aware of the importance of kexec in this project</span></div><div class="line" id="192730"><span class="nick" style="color:#6c3d55"><a href="#192730" label="[19:27:30]">&lt;Mikaku&gt;</a></span><span class="message">that's why I wanted to include such support in Fiwix</span></div><div class="line" id="192748"><span class="nick" style="color:#d9d9d9"><a href="#192748" label="[19:27:48]">&lt;stikonas[m]&gt;</a></span><span class="message">But the mechanism is entirely up to you</span></div><div class="line" id="192804"><span class="nick" style="color:#6c3d55"><a href="#192804" label="[19:28:04]">&lt;Mikaku&gt;</a></span><span class="message">so far, I can kexec the Fiwix kernel successfully with almost no effort</span></div><div class="line" id="192811"><span class="nick" style="color:#d9d9d9"><a href="#192811" label="[19:28:11]">&lt;stikonas[m]&gt;</a></span><span class="message">E.g. builder-hex0 also doesn't use kexec</span></div><div class="line" id="222035"><span class="nick" style="color:#8dd3c7"><a href="#222035" label="[22:20:35]">&lt;aggi&gt;</a></span><span class="message">narrowed down further why/how kernel-2.4 compiled with tcc crashes ... include/asm-i386/current.h</span></div><div class="line" id="222059"><span class="nick" style="color:#80b1d3"><a href="#222059" label="[22:20:59]">&lt;avih&gt;</a></span><span class="message">&lt;avih&gt; when aggi shows up, someone point him please to <a rel="nofollow" href="https://bellard.org/tcc/tccboot-0.1.tar.gz">https://bellard.org/tcc/tccboot-0.1.tar.gz</a>  , specifically the file linux-2.4.26-tcc.patch inside, which seem to patch the kernel around the areas he had problems with (interrupts, asm, etc).</span></div><div class="line" id="222059"><span class="nick" style="color:#80b1d3"><a href="#222059" label="[22:20:59]">&lt;avih&gt;</a></span><span class="message">&lt;avih&gt; also, the README <a rel="nofollow" href="https://bellard.org/tcc/tccboot_readme.html">https://bellard.org/tcc/tccboot_readme.html</a>  seem informative, describes the process, and also addresses some of the issues related to interrupts and asm</span></div><div class="line" id="224414"><span class="nick" style="color:#8dd3c7"><a href="#224414" label="[22:44:14]">&lt;aggi&gt;</a></span><span class="message">kernel/exit.c:do_exit() ... thats the place, which calls task_struct * get_current(void)</span></div><div class="line" id="224445"><span class="nick" style="color:#8dd3c7"><a href="#224445" label="[22:44:45]">&lt;aggi&gt;</a></span><span class="message">this obviously points to some gibberish causing -&gt; panic(&quot;Attempted to kill the idle task!&quot;);</span></div><div class="line" id="224523"><span class="nick" style="color:#8dd3c7"><a href="#224523" label="[22:45:23]">&lt;aggi&gt;</a></span><span class="message">when this happens, depends on the kernel-config used (with or without apic.c involved); but it does happen in any case</span></div><div class="line" id="224613"><span class="nick" style="color:#8dd3c7"><a href="#224613" label="[22:46:13]">&lt;aggi&gt;</a></span><span class="message">the get_current task call, is some asm</span></div><div class="line" id="224804"><span class="nick" style="color:#8dd3c7"><a href="#224804" label="[22:48:04]">&lt;aggi&gt;</a></span><span class="message">the whole process call-flow is just not clarified upon... if the task_struct wasn't correctly saved before, an isr not processed correctly</span></div><div class="line" id="224841"><span class="nick" style="color:#8dd3c7"><a href="#224841" label="[22:48:41]">&lt;aggi&gt;</a></span><span class="message">in any case... do_exit() on an errornously initialized task/context is causing the panic()</span></div><div class="line" id="224909"><span class="nick" style="color:#8dd3c7"><a href="#224909" label="[22:49:09]">&lt;aggi&gt;</a></span><span class="message">anyhow; what i don't understand is, how the original tccboot.iso could ever have compiled/booted correctly with any tcc-compiler version involved</span></div><div class="line" id="224944"><span class="nick" style="color:#8dd3c7"><a href="#224944" label="[22:49:44]">&lt;aggi&gt;</a></span><span class="message">as a consequence, i don't have a reliably identified _baseline_ for kernel/compiler-version to diff/bisect against</span></div><div class="line" id="225113"><span class="nick" style="color:#8dd3c7"><a href="#225113" label="[22:51:13]">&lt;aggi&gt;</a></span><span class="message">besides; linux-2.4.26 (bellard), and linux-2.4.37.11 (seyko2) show the _same_ problem</span></div><div class="line" id="225211"><span class="nick" style="color:#8dd3c7"><a href="#225211" label="[22:52:11]">&lt;aggi&gt;</a></span><span class="message">2.3.37-11-seyko2 just gets stuck in the delay calibration loop, that's why the do_exit() panic() isn't arrived at without some hacks (altering kconfig or skipping the delay loop calibration)</span></div><div class="line" id="225252"><span class="nick" style="color:#8dd3c7"><a href="#225252" label="[22:52:52]">&lt;aggi&gt;</a></span><span class="message">and i can't rule-out, the whole interrupt setup/handling has a problem - it's a nasty side-effect/symptom</span></div><div class="line" id="225714"><span class="nick" style="color:#80b1d3"><a href="#225714" label="[22:57:14]">&lt;avih&gt;</a></span><span class="message">aggi: did you see my links above?</span></div><div class="line" id="225753"><span class="nick" style="color:#80b1d3"><a href="#225753" label="[22:57:53]">&lt;avih&gt;</a></span><span class="message">can anyone read this?</span></div><div class="line" id="225819"><span class="nick" style="color:#8dd3c7"><a href="#225819" label="[22:58:19]">&lt;aggi&gt;</a></span><span class="message">avih: yes of cause</span></div><div class="line" id="225835"><span class="nick" style="color:#80b1d3"><a href="#225835" label="[22:58:35]">&lt;avih&gt;</a></span><span class="message">k, so the patch doesn't makes things better?</span></div><div class="line" id="225908"><span class="nick" style="color:#8dd3c7"><a href="#225908" label="[22:59:08]">&lt;aggi&gt;</a></span><span class="message">the patch doesn't suffice, nor any tcc-version or compiler-version tested... same problem remains</span></div><div class="line" id="225921"><span class="nick" style="color:#80b1d3"><a href="#225921" label="[22:59:21]">&lt;avih&gt;</a></span><span class="message">k</span></div><div class="line" id="225936"><span class="nick" style="color:#8dd3c7"><a href="#225936" label="[22:59:36]">&lt;aggi&gt;</a></span><span class="message">linux-2.4.37-seyko2 already contains all patches, and some other extras</span></div><div class="line" id="225950"><span class="nick" style="color:#8dd3c7"><a href="#225950" label="[22:59:50]">&lt;aggi&gt;</a></span><span class="message">i checked all kernel/compiler-versions, diffed all patches, debugged</span></div><div class="line" id="230019"><span class="nick" style="color:#8dd3c7"><a href="#230019" label="[23:00:19]">&lt;aggi&gt;</a></span><span class="message">the conclusio with regards to this: tccboot.iso from Bellard may not have worked with any of the publicly available sources</span></div><div class="line" id="230042"><span class="nick" style="color:#80b1d3"><a href="#230042" label="[23:00:42]">&lt;avih&gt;</a></span><span class="message">why not just ask him them?</span></div><div class="line" id="230114"><span class="nick" style="color:#80b1d3"><a href="#230114" label="[23:01:14]">&lt;avih&gt;</a></span><span class="message">surely he knows better than anyone else...</span></div><div class="line" id="230153"><span class="nick" style="color:#80b1d3"><a href="#230153" label="[23:01:53]">&lt;avih&gt;</a></span><span class="message">unless you think that figuring this on your own has good value to you...</span></div><div class="line" id="230154"><span class="nick" style="color:#8dd3c7"><a href="#230154" label="[23:01:54]">&lt;aggi&gt;</a></span><span class="message">avih: because i do not know, how to summarize this comprehensively</span></div><div class="line" id="230227"><span class="nick" style="color:#8dd3c7"><a href="#230227" label="[23:02:27]">&lt;aggi&gt;</a></span><span class="message">because, i don't have a reliably identified _baseline_ for kernel/compiler-version to diff/bisect against</span></div><div class="line" id="230253"><span class="nick" style="color:#80b1d3"><a href="#230253" label="[23:02:53]">&lt;avih&gt;</a></span><span class="message">you can still describe what you tried and why, together with your results.</span></div><div class="line" id="230423"><span class="nick" style="color:#80b1d3"><a href="#230423" label="[23:04:23]">&lt;avih&gt;</a></span><span class="message">hmm.. looks like the tcc maintainer is considering a new release...</span></div><div class="line" id="230438"><span class="nick" style="color:#80b1d3"><a href="#230438" label="[23:04:38]">&lt;avih&gt;</a></span><span class="message">(current maintainer, not bellard)</span></div><div class="line" id="230518"><span class="nick" style="color:#8dd3c7"><a href="#230518" label="[23:05:18]">&lt;aggi&gt;</a></span><span class="message">avih: i am willing to publish the test-setup some place</span></div><div class="line" id="230555"><span class="nick" style="color:#8dd3c7"><a href="#230555" label="[23:05:55]">&lt;aggi&gt;</a></span><span class="message">for quick-starting this... it was a notable amount of work, to review and tinify a kconfig, testing all variants and combinations of tcc/gcc preprocessing/compiling/linking in separate stages</span></div><div class="line" id="230619"><span class="nick" style="color:#8dd3c7"><a href="#230619" label="[23:06:19]">&lt;aggi&gt;</a></span><span class="message">to keep it as simple as possible</span></div><div class="line" id="230657"><span class="nick" style="color:#8dd3c7"><a href="#230657" label="[23:06:57]">&lt;aggi&gt;</a></span><span class="message">the patchset too required cleanup for simplicity</span></div><div class="line" id="230731"><span class="nick" style="color:#8dd3c7"><a href="#230731" label="[23:07:31]">&lt;aggi&gt;</a></span><span class="message">and i think 2.4.37.11 kernel may be used instead of the older version, because the bug/problem is the same with each</span></div><div class="line" id="230836"><span class="nick" style="color:#80b1d3"><a href="#230836" label="[23:08:36]">&lt;avih&gt;</a></span><span class="message">right, in the email so you can describe briefly what you tried and why, and conclude that you couldn't find a combination of kernel/tcc/patches which work together and end up in a bootable system. you can provide more details if he requests (or link to a page with more details, if you have one). and maybe that would be enough. maybe he has some sources stached someplace unpublished. maybe he'll recall some hack which needs to be applied and is not at</span></div><div class="line" id="230836"><span class="nick" style="color:#80b1d3"><a href="#230836" label="[23:08:36]">&lt;avih&gt;</a></span><span class="message">the public sources, etc.</span></div><div class="line" id="230952"><span class="nick" style="color:#8dd3c7"><a href="#230952" label="[23:09:52]">&lt;aggi&gt;</a></span><span class="message">i think, i must have missed something trivial</span></div><div class="line" id="231004"><span class="nick" style="color:#80b1d3"><a href="#231004" label="[23:10:04]">&lt;avih&gt;</a></span><span class="message">he's still very much interested in linux boot, and afaik his most (not very) recent related project is (the amazing) jslinux</span></div><div class="line" id="231252"><span class="nick" style="color:#80b1d3"><a href="#231252" label="[23:12:52]">&lt;avih&gt;</a></span><span class="message">if you missed something trivial, it would be even easier for him to get you back on track ;)</span></div><div class="line" id="231459"><span class="nick" style="color:#8dd3c7"><a href="#231459" label="[23:14:59]">&lt;aggi&gt;</a></span><span class="message">meanwhile, i gave Fiwix a try with tcc-compiler too... no luck, this requires extensive review and some patching too</span></div><div class="line" id="233535"><span class="nick" style="color:#8dd3c7"><a href="#233535" label="[23:35:35]">&lt;aggi&gt;</a></span><span class="message">the timer interrupt seems to not fire-up and/or not initialized correctly before too... although this doesn't crash the system, the calibration loop later is stuck</span></div><div class="line" id="233631"><span class="nick" style="color:#8dd3c7"><a href="#233631" label="[23:36:31]">&lt;aggi&gt;</a></span><span class="message">and the do_exit panic() too may seem a secondary symptom of interrupt/contexts not configured</span></div><div class="line" id="234047"><span class="nick" style="color:#8dd3c7"><a href="#234047" label="[23:40:47]">&lt;aggi&gt;</a></span><span class="message">arch/i386/kernel/entry.S ...</span></div><div class="line" id="234229"><span class="nick" style="color:#8dd3c7"><a href="#234229" label="[23:42:29]">&lt;aggi&gt;</a></span><span class="message">i'll dump the asm .S files into binutils-as, instead of i386-tcc... and see what happens</span></div><div class="line" id="014304"><span class="nick" style="color:#389600"><a href="#014304" label="[01:43:04]">&lt;stikonas&gt;</a></span><span class="message">aggi: have you checked rickmasters scripts</span></div><div class="line" id="014313"><span class="nick" style="color:#389600"><a href="#014313" label="[01:43:13]">&lt;stikonas&gt;</a></span><span class="message">he was able to build fiwix using tcc</span></div><div class="line" id="021332"><span class="nick" style="color:#234e69"><a href="#021332" label="[02:13:32]">&lt;rickmasters&gt;</a></span><span class="message">aggi: this branch of Fiwix builds with tcc: <a rel="nofollow" href="https://github.com/rick-masters/Fiwix/tree/fiwix-1.4.0-lb1">https://github.com/rick-masters/Fiwix/tree/fiwix-1.4.0-lb1</a> </span></div><div class="line" id="021439"><span class="nick" style="color:#234e69"><a href="#021439" label="[02:14:39]">&lt;rickmasters&gt;</a></span><span class="message">Set CCEXE=tcc in the Makefile</span></div><div class="line" id="021831"><span class="nick" style="color:#234e69"><a href="#021831" label="[02:18:31]">&lt;rickmasters&gt;</a></span><span class="message">aggi: sorry, forgot to mention you need a small patch to tcc - just two lines</span></div><div class="line" id="022024"><span class="nick" style="color:#8dd3c7"><a href="#022024" label="[02:20:24]">&lt;aggi&gt;</a></span><span class="message">rickmasters: thanks for the notice</span></div><div class="line" id="022141"><span class="nick" style="color:#234e69"><a href="#022141" label="[02:21:41]">&lt;rickmasters&gt;</a></span><span class="message">aggi: in tccelf.c, after the line &quot;ph-&gt;p_paddr = ph-&gt;p_vaddr;&quot; add these lines:</span></div><div class="line" id="022152"><span class="nick" style="color:#234e69"><a href="#022152" label="[02:21:52]">&lt;rickmasters&gt;</a></span><span class="message">                       if (ph-&gt;p_paddr &gt;= 0xC0000000)</span></div><div class="line" id="022158"><span class="nick" style="color:#234e69"><a href="#022158" label="[02:21:58]">&lt;rickmasters&gt;</a></span><span class="message">                            ph-&gt;p_paddr = ph-&gt;p_paddr - 0xC0000000;</span></div><div class="line" id="023251"><span class="nick" style="color:#8dd3c7"><a href="#023251" label="[02:32:51]">&lt;aggi&gt;</a></span><span class="message">rickmasters: interesting</span></div><div class="line" id="023322"><span class="nick" style="color:#8dd3c7"><a href="#023322" label="[02:33:22]">&lt;aggi&gt;</a></span><span class="message">is it several spots which this had to be added to?</span></div><div class="line" id="023647"><span class="nick" style="color:#234e69"><a href="#023647" label="[02:36:47]">&lt;rickmasters&gt;</a></span><span class="message">aggi: no just the one spot</span></div><div class="line" id="023713"><span class="nick" style="color:#8dd3c7"><a href="#023713" label="[02:37:13]">&lt;aggi&gt;</a></span><span class="message">there is two candidates fill_phdr() and layout_sections()</span></div><div class="line" id="023834"><span class="nick" style="color:#234e69"><a href="#023834" label="[02:38:34]">&lt;rickmasters&gt;</a></span><span class="message">sorry, you're right, its the one in layout_sections()</span></div><div class="line" id="023851"><span class="nick" style="color:#8dd3c7"><a href="#023851" label="[02:38:51]">&lt;aggi&gt;</a></span><span class="message">ok</span></div><div class="line" id="023902"><span class="nick" style="color:#8dd3c7"><a href="#023902" label="[02:39:02]">&lt;aggi&gt;</a></span><span class="message">rickmasters: i don't want to waste your time</span></div><div class="line" id="024018"><span class="nick" style="color:#234e69"><a href="#024018" label="[02:40:18]">&lt;rickmasters&gt;</a></span><span class="message">That patch does the same thing as Fiwix's gcc linker script: <a rel="nofollow" href="https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb1/fiwix.ld">https://github.com/rick-masters/Fiwix/blob/fiwix-1.4.0-lb1/fiwix.ld</a> </span></div><div class="line" id="024022"><span class="nick" style="color:#8dd3c7"><a href="#024022" label="[02:40:22]">&lt;aggi&gt;</a></span><span class="message">it's just, i suspect a similar issue with linux-2.4/tcc; adress-translations and layout having issues (when testing a combination of compiling-linking with tcc and gcc)</span></div><div class="line" id="024049"><span class="nick" style="color:#8dd3c7"><a href="#024049" label="[02:40:49]">&lt;aggi&gt;</a></span><span class="message">rickmasters: yes, gcc-linker for kernel too utilizes a linker script, while tcc just sets the base-address</span></div><div class="line" id="024136"><span class="nick" style="color:#234e69"><a href="#024136" label="[02:41:36]">&lt;rickmasters&gt;</a></span><span class="message">Right, and Fiwix uses different physical than virtual so the two-line patch sets the physical address appropriately in the elf headers</span></div><div class="line" id="024346"><span class="nick" style="color:#8dd3c7"><a href="#024346" label="[02:43:46]">&lt;aggi&gt;</a></span><span class="message">i recall, susematz (testing tcc with linux-4.6), too mentioned some issue while linking the kernel with tcc</span></div><div class="line" id="024356"><span class="nick" style="color:#8dd3c7"><a href="#024356" label="[02:43:56]">&lt;aggi&gt;</a></span><span class="message">anyway</span></div><div class="line" id="040525"><span class="nick" style="color:#8dd3c7"><a href="#040525" label="[04:05:25]">&lt;aggi&gt;</a></span><span class="message">there was notable changes in tcc related to this tiny diff</span></div><div class="line" id="040730"><span class="nick" style="color:#8dd3c7"><a href="#040730" label="[04:07:30]">&lt;aggi&gt;</a></span><span class="message">hence i would be curious, to which tcc-version the patch had to be applied</span></div><div class="line" id="085701"><span class="nick" style="color:#8dd3c7"><a href="#085701" label="[08:57:01]">&lt;aggi&gt;</a></span><span class="message">quickly patched tcc-compiler with the proposal, re-compiled linux-2.4.37.11 with it... crash</span></div><div class="line" id="085808"><span class="nick" style="color:#8dd3c7"><a href="#085808" label="[08:58:08]">&lt;aggi&gt;</a></span><span class="message">there's a principle issue, the adress-mappings and translations, in conjunction with linking and layouts, is indeterministic with tcc-compiler/linker - with the test-setup described, compiling linux AoT with tcc-toolchain</span></div><div class="line" id="085855"><span class="nick" style="color:#8dd3c7"><a href="#085855" label="[08:58:55]">&lt;aggi&gt;</a></span><span class="message">amdmitted, i didn't know what i was doing whan testing the patch, i doubt anyone else knew with certainty</span></div><div class="line" id="105237"><span class="nick" style="color:#bc80bd"><a href="#105237" label="[10:52:37]">&lt;gforce_de1977&gt;</a></span><span class="message">@oriansj: the Commander X16 looks great! (and i just caught myself thinking about bootstrapping GCC a 6502-path on this machine with 2MB RAM 8-)))) <a rel="nofollow" href="https://cx16forum.github.io/faq.html">https://cx16forum.github.io/faq.html</a> </span></div><div class="line" id="105427"><span class="nick" style="color:#bc80bd"><a href="#105427" label="[10:54:27]">&lt;gforce_de1977&gt;</a></span><span class="message">@oriansj but ofcourse this is also possible with a REU <a rel="nofollow" href="https://en.wikipedia.org/wiki/Commodore_REU">https://en.wikipedia.org/wiki/Commodore_REU</a>  and 16MB RAM 8-) with an original Commodore 64</span></div><div class="line" id="135252"><span class="nick" style="color:#6d2462"><a href="#135252" label="[13:52:52]">&lt;oriansj&gt;</a></span><span class="message">gforce_de1977: well with 8MB, you should be able to bootstrap to M2-Planet without much trouble</span></div><div class="line" id="135352"><span class="nick" style="color:#6d2462"><a href="#135352" label="[13:53:52]">&lt;oriansj&gt;</a></span><span class="message">Mescc and TCC on a 6502 however would require a good deal of work.</span></div><div class="line" id="140839"><span class="nick" style="color:#d9d9d9"><a href="#140839" label="[14:08:39]">&lt;stikonas[m]&gt;</a></span><span class="message">You would still need to optimise cc and M2-Planet</span></div><div class="line" id="140905"><span class="nick" style="color:#d9d9d9"><a href="#140905" label="[14:09:05]">&lt;stikonas[m]&gt;</a></span><span class="message">They need well over 8 MiB right now</span></div><div class="line" id="140936"><span class="nick" style="color:#d9d9d9"><a href="#140936" label="[14:09:36]">&lt;stikonas[m]&gt;</a></span><span class="message">Probably just in stack usage we are close to 8</span></div><div class="line" id="141436"><span class="nick" style="color:#bc80bd"><a href="#141436" label="[14:14:36]">&lt;gforce_de1977&gt;</a></span><span class="message">the biggest dealbreaker is, that you have to bankswitch 64k - it is not really continuous memory - but lets keep the dream, maybe sometimes somebody will do it...lets concentrate on Motorola 68000 first 8-)</span></div><div class="line" id="155106"><span class="nick" style="color:#234e69"><a href="#155106" label="[15:51:06]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I have finally filed an Issue for the Fiwix hard drive problem: <a rel="nofollow" href="https://github.com/mikaku/Fiwix/issues/27">https://github.com/mikaku/Fiwix/issues/27</a> </span></div><div class="line" id="155359"><span class="nick" style="color:#234e69"><a href="#155359" label="[15:53:59]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: Sorry for the delay but I had to prepare forks to make it somewhat easy for you to reproduce with somewhat recent Fiwix code.</span></div><div class="line" id="185026"><span class="nick" style="color:#6c3d55"><a href="#185026" label="[18:50:26]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: ok, I'll take a look</span></div><div class="line" id="190446"><span class="nick" style="color:#234e69"><a href="#190446" label="[19:04:46]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: thanks</span></div><div class="line" id="192955"><span class="nick" style="color:#6c3d55"><a href="#192955" label="[19:29:55]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: I followed the steps in the issue #27 but when I execute the last step it prompts with:</span></div><div class="line" id="193001"><span class="nick" style="color:#6c3d55"><a href="#193001" label="[19:30:01]">&lt;Mikaku&gt;</a></span><span class="message">Bootstrapping x86 -- SysA</span></div><div class="line" id="193001"><span class="nick" style="color:#6c3d55"><a href="#193001" label="[19:30:01]">&lt;Mikaku&gt;</a></span><span class="message">[sudo] password for mikaku:</span></div><div class="line" id="193033"><span class="nick" style="color:#6c3d55"><a href="#193033" label="[19:30:33]">&lt;Mikaku&gt;</a></span><span class="message">after typing the password, I get: Bootstrapping failed</span></div><div class="line" id="193139"><span class="nick" style="color:#6c3d55"><a href="#193139" label="[19:31:39]">&lt;Mikaku&gt;</a></span><span class="message">I don't use 'sudo' in my system at all, I'm from the old school and I still use 'su -' when I need too :-)</span></div><div class="line" id="193154"><span class="nick" style="color:#6c3d55"><a href="#193154" label="[19:31:54]">&lt;Mikaku&gt;</a></span><span class="message">s/too/root/</span></div><div class="line" id="193309"><span class="nick" style="color:#234e69"><a href="#193309" label="[19:33:09]">&lt;rickmasters&gt;</a></span><span class="message">Ok, I just assumed you'd have that working - I believe live-bootstrap depends on sudo: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/issues/123">https://github.com/fosslinux/live-bootstrap/issues/123</a> </span></div><div class="line" id="193338"><span class="nick" style="color:#234e69"><a href="#193338" label="[19:33:38]">&lt;rickmasters&gt;</a></span><span class="message">Give me a few minutes and I'll see what I can do</span></div><div class="line" id="193428"><span class="nick" style="color:#6c3d55"><a href="#193428" label="[19:34:28]">&lt;Mikaku&gt;</a></span><span class="message">ok</span></div><div class="line" id="193612"><span class="nick" style="color:#234e69"><a href="#193612" label="[19:36:12]">&lt;rickmasters&gt;</a></span><span class="message">I know it's not ideal but could you do su and then run it?</span></div><div class="line" id="193704"><span class="nick" style="color:#234e69"><a href="#193704" label="[19:37:04]">&lt;rickmasters&gt;</a></span><span class="message">If so, then I could tell you how to remove the sudo before the commands</span></div><div class="line" id="193716"><span class="nick" style="color:#6c3d55"><a href="#193716" label="[19:37:16]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: ok, let me see</span></div><div class="line" id="193723"><span class="nick" style="color:#234e69"><a href="#193723" label="[19:37:23]">&lt;rickmasters&gt;</a></span><span class="message">See, it runs mount -t ext2 and that requires root I think</span></div><div class="line" id="193839"><span class="nick" style="color:#6c3d55"><a href="#193839" label="[19:38:39]">&lt;Mikaku&gt;</a></span><span class="message">now it runs and it is downloading a lot of packages</span></div><div class="line" id="193859"><span class="nick" style="color:#6c3d55"><a href="#193859" label="[19:38:59]">&lt;Mikaku&gt;</a></span><span class="message">but it does it in my local disk, not in a virtual disk</span></div><div class="line" id="193902"><span class="nick" style="color:#6c3d55"><a href="#193902" label="[19:39:02]">&lt;Mikaku&gt;</a></span><span class="message">is this correct?</span></div><div class="line" id="193939"><span class="nick" style="color:#389600"><a href="#193939" label="[19:39:39]">&lt;stikonas&gt;</a></span><span class="message">Mikaku: yes, it will first download to local cache</span></div><div class="line" id="193947"><span class="nick" style="color:#389600"><a href="#193947" label="[19:39:47]">&lt;stikonas&gt;</a></span><span class="message">and then creates virtual disk out of it</span></div><div class="line" id="193955"><span class="nick" style="color:#6c3d55"><a href="#193955" label="[19:39:55]">&lt;Mikaku&gt;</a></span><span class="message">stikonas: I see, thanks</span></div><div class="line" id="193958"><span class="nick" style="color:#389600"><a href="#193958" label="[19:39:58]">&lt;stikonas&gt;</a></span><span class="message">(if you are in qemu mode)</span></div><div class="line" id="194011"><span class="nick" style="color:#389600"><a href="#194011" label="[19:40:11]">&lt;stikonas&gt;</a></span><span class="message">which is the mode where kernel is needed</span></div><div class="line" id="194022"><span class="nick" style="color:#6c3d55"><a href="#194022" label="[19:40:22]">&lt;Mikaku&gt;</a></span><span class="message">well, you are using QEMU in a way I've never used before</span></div><div class="line" id="194027"><span class="nick" style="color:#389600"><a href="#194027" label="[19:40:27]">&lt;stikonas&gt;</a></span><span class="message">we do have other modes, e.g. chroot or bwrap mode but those are entirely userspace</span></div><div class="line" id="194039"><span class="nick" style="color:#389600"><a href="#194039" label="[19:40:39]">&lt;stikonas&gt;</a></span><span class="message">oh, how is it different?</span></div><div class="line" id="194044"><span class="nick" style="color:#389600"><a href="#194044" label="[19:40:44]">&lt;stikonas&gt;</a></span><span class="message">I think fossy set it up initially</span></div><div class="line" id="194050"><span class="nick" style="color:#389600"><a href="#194050" label="[19:40:50]">&lt;stikonas&gt;</a></span><span class="message">but I thought it's fairly standard</span></div><div class="line" id="194103"><span class="nick" style="color:#6c3d55"><a href="#194103" label="[19:41:03]">&lt;Mikaku&gt;</a></span><span class="message">I just run 'qemu-system-i386' ...</span></div><div class="line" id="194134"><span class="nick" style="color:#234e69"><a href="#194134" label="[19:41:34]">&lt;rickmasters&gt;</a></span><span class="message">that's what the fiwix qemu scripts use</span></div><div class="line" id="194155"><span class="nick" style="color:#234e69"><a href="#194155" label="[19:41:55]">&lt;rickmasters&gt;</a></span><span class="message">see bootfiwix-rd and bootfiwix-hd</span></div><div class="line" id="194304"><span class="nick" style="color:#234e69"><a href="#194304" label="[19:43:04]">&lt;rickmasters&gt;</a></span><span class="message">It will probably help to get familiar with those scripts. You could modify them to save the file system and then later just run those scripts</span></div><div class="line" id="194444"><span class="nick" style="color:#6c3d55"><a href="#194444" label="[19:44:44]">&lt;Mikaku&gt;</a></span><span class="message">yes, I see it now, thanks</span></div><div class="line" id="194508"><span class="nick" style="color:#6c3d55"><a href="#194508" label="[19:45:08]">&lt;Mikaku&gt;</a></span><span class="message">hmm, it stopped</span></div><div class="line" id="194517"><span class="nick" style="color:#6c3d55"><a href="#194517" label="[19:45:17]">&lt;Mikaku&gt;</a></span><span class="message">ioctl(KVM_CREATE_VM) failed: 16 Device or resource busy</span></div><div class="line" id="194517"><span class="nick" style="color:#6c3d55"><a href="#194517" label="[19:45:17]">&lt;Mikaku&gt;</a></span><span class="message">qemu-system-i386: failed to initialize kvm: Device or resource busy</span></div><div class="line" id="194517"><span class="nick" style="color:#6c3d55"><a href="#194517" label="[19:45:17]">&lt;Mikaku&gt;</a></span><span class="message">Detaching /dev/loop0</span></div><div class="line" id="194517"><span class="nick" style="color:#6c3d55"><a href="#194517" label="[19:45:17]">&lt;Mikaku&gt;</a></span><span class="message">Removing /home/mikaku/github/live-bootstrap/tmp</span></div><div class="line" id="194524"><span class="nick" style="color:#6c3d55"><a href="#194524" label="[19:45:24]">&lt;Mikaku&gt;</a></span><span class="message">(sorry for pasting these lines here)</span></div><div class="line" id="194534"><span class="nick" style="color:#6c3d55"><a href="#194534" label="[19:45:34]">&lt;Mikaku&gt;</a></span><span class="message">I can use a pastebin service</span></div><div class="line" id="194725"><span class="nick" style="color:#6c3d55"><a href="#194725" label="[19:47:25]">&lt;Mikaku&gt;</a></span><span class="message">these error messages appear right after creating a filesystem with mke2fs</span></div><div class="line" id="194804"><span class="nick" style="color:#234e69"><a href="#194804" label="[19:48:04]">&lt;rickmasters&gt;</a></span><span class="message">That sounds like a failure of qemu -enable-kvm</span></div><div class="line" id="194822"><span class="nick" style="color:#234e69"><a href="#194822" label="[19:48:22]">&lt;rickmasters&gt;</a></span><span class="message">Have you used -enable-kvm with qemu on that machine before?</span></div><div class="line" id="194835"><span class="nick" style="color:#6c3d55"><a href="#194835" label="[19:48:35]">&lt;Mikaku&gt;</a></span><span class="message">of course, every day :-)</span></div><div class="line" id="194918"><span class="nick" style="color:#389600"><a href="#194918" label="[19:49:18]">&lt;stikonas&gt;</a></span><span class="message">hmm, we can use more than 1 KVM client per host, can't we</span></div><div class="line" id="194932"><span class="nick" style="color:#6c3d55"><a href="#194932" label="[19:49:32]">&lt;Mikaku&gt;</a></span><span class="message">I've VirtualBox running FiwixOS building some packages, do you think this could be a problem?</span></div><div class="line" id="194955"><span class="nick" style="color:#389600"><a href="#194955" label="[19:49:55]">&lt;stikonas&gt;</a></span><span class="message">hmm, I thought it shouldn't matter</span></div><div class="line" id="195005"><span class="nick" style="color:#6c3d55"><a href="#195005" label="[19:50:05]">&lt;Mikaku&gt;</a></span><span class="message">yep</span></div><div class="line" id="195014"><span class="nick" style="color:#389600"><a href="#195014" label="[19:50:14]">&lt;stikonas&gt;</a></span><span class="message">at least with qemu you can create multiple VMs</span></div><div class="line" id="195036"><span class="nick" style="color:#389600"><a href="#195036" label="[19:50:36]">&lt;stikonas&gt;</a></span><span class="message">but I have never tried simultaneously using different hypervisors</span></div><div class="line" id="195046"><span class="nick" style="color:#6c3d55"><a href="#195046" label="[19:50:46]">&lt;Mikaku&gt;</a></span><span class="message">let me stop VirtualBox and try it again ...</span></div><div class="line" id="195129"><span class="nick" style="color:#234e69"><a href="#195129" label="[19:51:29]">&lt;rickmasters&gt;</a></span><span class="message">The &quot;internet&quot; seemms to think that running VB is the most common reason for that error</span></div><div class="line" id="195213"><span class="nick" style="color:#6c3d55"><a href="#195213" label="[19:52:13]">&lt;Mikaku&gt;</a></span><span class="message">it seems to work this time :-)</span></div><div class="line" id="195229"><span class="nick" style="color:#234e69"><a href="#195229" label="[19:52:29]">&lt;rickmasters&gt;</a></span><span class="message"> <a rel="nofollow" href="https://bugzilla.redhat.com/show_bug.cgi?id=1277744">https://bugzilla.redhat.com/show_bug.cgi?id=1277744</a> </span></div><div class="line" id="195308"><span class="nick" style="color:#6c3d55"><a href="#195308" label="[19:53:08]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: you mean I'm bugged here? :-)</span></div><div class="line" id="195320"><span class="nick" style="color:#6c3d55"><a href="#195320" label="[19:53:20]">&lt;Mikaku&gt;</a></span><span class="message">nice</span></div><div class="line" id="195353"><span class="nick" style="color:#6c3d55"><a href="#195353" label="[19:53:53]">&lt;Mikaku&gt;</a></span><span class="message">well, I see a lot of lines like if some packages are being built</span></div><div class="line" id="195512"><span class="nick" style="color:#389600"><a href="#195512" label="[19:55:12]">&lt;stikonas&gt;</a></span><span class="message">early packages are stage0-posix, those are reasonably fast steps, later mes/mescc starts building libc/itself/tcc. Those are fairly slow steps</span></div><div class="line" id="195521"><span class="nick" style="color:#389600"><a href="#195521" label="[19:55:21]">&lt;stikonas&gt;</a></span><span class="message">(because mes is an interpreter)</span></div><div class="line" id="195551"><span class="nick" style="color:#6c3d55"><a href="#195551" label="[19:55:51]">&lt;Mikaku&gt;</a></span><span class="message">who is building these packages, host or guest?</span></div><div class="line" id="195629"><span class="nick" style="color:#389600"><a href="#195629" label="[19:56:29]">&lt;stikonas&gt;</a></span><span class="message">guest</span></div><div class="line" id="195633"><span class="nick" style="color:#389600"><a href="#195633" label="[19:56:33]">&lt;stikonas&gt;</a></span><span class="message">host is not building anything</span></div><div class="line" id="195652"><span class="nick" style="color:#389600"><a href="#195652" label="[19:56:52]">&lt;stikonas&gt;</a></span><span class="message">(only creates a disk image with sources)</span></div><div class="line" id="195714"><span class="nick" style="color:#6c3d55"><a href="#195714" label="[19:57:14]">&lt;Mikaku&gt;</a></span><span class="message">ok, thanks</span></div><div class="line" id="195807"><span class="nick" style="color:#6c3d55"><a href="#195807" label="[19:58:07]">&lt;Mikaku&gt;</a></span><span class="message">is there a way to login to the guest system using the serial device?</span></div><div class="line" id="195830"><span class="nick" style="color:#389600"><a href="#195830" label="[19:58:30]">&lt;stikonas&gt;</a></span><span class="message">I don't think so</span></div><div class="line" id="195944"><span class="nick" style="color:#389600"><a href="#195944" label="[19:59:44]">&lt;stikonas&gt;</a></span><span class="message">and only towards the end of sysa we get an interactive bash</span></div><div class="line" id="200014"><span class="nick" style="color:#389600"><a href="#200014" label="[20:00:14]">&lt;stikonas&gt;</a></span><span class="message">you could probably hack some steps, inject some other shell from the host (maybe busybox?)</span></div><div class="line" id="200107"><span class="nick" style="color:#389600"><a href="#200107" label="[20:01:07]">&lt;stikonas&gt;</a></span><span class="message">unfortunately qemu mode is the hardest to debug :(</span></div><div class="line" id="200130"><span class="nick" style="color:#234e69"><a href="#200130" label="[20:01:30]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: with significant work one could probably run live-bootstrap on top of FiwixOS</span></div><div class="line" id="200131"><span class="nick" style="color:#389600"><a href="#200131" label="[20:01:31]">&lt;stikonas&gt;</a></span><span class="message">well, in the late stages of the process things are in disk and we also have interactive bash with traps</span></div><div class="line" id="200155"><span class="nick" style="color:#389600"><a href="#200155" label="[20:01:55]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: do we actually need significant work?</span></div><div class="line" id="200202"><span class="nick" style="color:#389600"><a href="#200202" label="[20:02:02]">&lt;stikonas&gt;</a></span><span class="message">what changes on fiwix os?</span></div><div class="line" id="200214"><span class="nick" style="color:#389600"><a href="#200214" label="[20:02:14]">&lt;stikonas&gt;</a></span><span class="message">I guess we need chroot?</span></div><div class="line" id="200237"><span class="nick" style="color:#389600"><a href="#200237" label="[20:02:37]">&lt;stikonas&gt;</a></span><span class="message">but that seems to be supported</span></div><div class="line" id="200246"><span class="nick" style="color:#234e69"><a href="#200246" label="[20:02:46]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I'm not sure, it could probably run as a normal process</span></div><div class="line" id="200300"><span class="nick" style="color:#6c3d55"><a href="#200300" label="[20:03:00]">&lt;Mikaku&gt;</a></span><span class="message">stikonas: chroot is supported but not much tested it</span></div><div class="line" id="200302"><span class="nick" style="color:#389600"><a href="#200302" label="[20:03:02]">&lt;stikonas&gt;</a></span><span class="message">maybe chroot mode would trigger similar issues</span></div><div class="line" id="200304"><span class="nick" style="color:#389600"><a href="#200304" label="[20:03:04]">&lt;stikonas&gt;</a></span><span class="message">I see...</span></div><div class="line" id="200319"><span class="nick" style="color:#389600"><a href="#200319" label="[20:03:19]">&lt;stikonas&gt;</a></span><span class="message">well, bwrap more would not work, I don't think you support user namespaces</span></div><div class="line" id="200352"><span class="nick" style="color:#389600"><a href="#200352" label="[20:03:52]">&lt;stikonas&gt;</a></span><span class="message">but chroot might be worth trying</span></div><div class="line" id="200401"><span class="nick" style="color:#389600"><a href="#200401" label="[20:04:01]">&lt;stikonas&gt;</a></span><span class="message">might be easier to debug it then qemu mode</span></div><div class="line" id="200504"><span class="nick" style="color:#389600"><a href="#200504" label="[20:05:04]">&lt;stikonas&gt;</a></span><span class="message">well, rootfs.py also needs python but it's not hard to create a disk image manually</span></div><div class="line" id="200550"><span class="nick" style="color:#389600"><a href="#200550" label="[20:05:50]">&lt;stikonas&gt;</a></span><span class="message">it's mostly getting two git repos and downloading source tarballs from internet</span></div><div class="line" id="200552"><span class="nick" style="color:#234e69"><a href="#200552" label="[20:05:52]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: if it runs as a normal process I think it would eventually start overwriting FiwixOS executables but if the system is disposable maybe its not a problem</span></div><div class="line" id="200615"><span class="nick" style="color:#389600"><a href="#200615" label="[20:06:15]">&lt;stikonas&gt;</a></span><span class="message">oh you mean completely in the system</span></div><div class="line" id="200618"><span class="nick" style="color:#389600"><a href="#200618" label="[20:06:18]">&lt;stikonas&gt;</a></span><span class="message">without any chroot</span></div><div class="line" id="200621"><span class="nick" style="color:#234e69"><a href="#200621" label="[20:06:21]">&lt;rickmasters&gt;</a></span><span class="message">right</span></div><div class="line" id="200630"><span class="nick" style="color:#389600"><a href="#200630" label="[20:06:30]">&lt;stikonas&gt;</a></span><span class="message">that could work too in a disposable system</span></div><div class="line" id="200649"><span class="nick" style="color:#389600"><a href="#200649" label="[20:06:49]">&lt;stikonas&gt;</a></span><span class="message">so chroot wouldn't be necessary then</span></div><div class="line" id="200732"><span class="nick" style="color:#6c3d55"><a href="#200732" label="[20:07:32]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: for the disk drives I use the QEMU line: '-drive file=hda.img,format=raw,if=ide,cache=writeback,index=0'</span></div><div class="line" id="200815"><span class="nick" style="color:#234e69"><a href="#200815" label="[20:08:15]">&lt;rickmasters&gt;</a></span><span class="message">I can try that for sure</span></div><div class="line" id="200816"><span class="nick" style="color:#6c3d55"><a href="#200816" label="[20:08:16]">&lt;Mikaku&gt;</a></span><span class="message">ah, I see that writeback is the default cache</span></div><div class="line" id="200850"><span class="nick" style="color:#389600"><a href="#200850" label="[20:08:50]">&lt;stikonas&gt;</a></span><span class="message">so it's mostly a normal drive then</span></div><div class="line" id="200905"><span class="nick" style="color:#6c3d55"><a href="#200905" label="[20:09:05]">&lt;Mikaku&gt;</a></span><span class="message">according qemu manpage, yes</span></div><div class="line" id="200915"><span class="nick" style="color:#6c3d55"><a href="#200915" label="[20:09:15]">&lt;Mikaku&gt;</a></span><span class="message">&quot;The default mode is cache=writeback.&quot;</span></div><div class="line" id="201356"><span class="nick" style="color:#6c3d55"><a href="#201356" label="[20:13:56]">&lt;Mikaku&gt;</a></span><span class="message">is there a way to have a separate terminal to see only the kernel messages? I mean, with all the lines scrolling so faster is impossible to see if there was a kernel message in the middle</span></div><div class="line" id="201412"><span class="nick" style="color:#6c3d55"><a href="#201412" label="[20:14:12]">&lt;Mikaku&gt;</a></span><span class="message">(sorry for all those newbie questions)</span></div><div class="line" id="201439"><span class="nick" style="color:#6c3d55"><a href="#201439" label="[20:14:39]">&lt;Mikaku&gt;</a></span><span class="message">I normally use a separate ttyS1 for kernel messages to not miss anything</span></div><div class="line" id="201453"><span class="nick" style="color:#6c3d55"><a href="#201453" label="[20:14:53]">&lt;Mikaku&gt;</a></span><span class="message">specially when building a lot of packages and the screen scrolls so fast</span></div><div class="line" id="201529"><span class="nick" style="color:#234e69"><a href="#201529" label="[20:15:29]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: can that be specified with a kernel option?</span></div><div class="line" id="201544"><span class="nick" style="color:#6c3d55"><a href="#201544" label="[20:15:44]">&lt;Mikaku&gt;</a></span><span class="message">console=/dev/ttyS1</span></div><div class="line" id="201550"><span class="nick" style="color:#6c3d55"><a href="#201550" label="[20:15:50]">&lt;Mikaku&gt;</a></span><span class="message">oh, I see</span></div><div class="line" id="201629"><span class="nick" style="color:#6c3d55"><a href="#201629" label="[20:16:29]">&lt;Mikaku&gt;</a></span><span class="message">you are already using console=/dev/ttyS0</span></div><div class="line" id="201658"><span class="nick" style="color:#6c3d55"><a href="#201658" label="[20:16:58]">&lt;Mikaku&gt;</a></span><span class="message">but the way how QEMU is being used all messages are displayed together in the same terminal</span></div><div class="line" id="201929"><span class="nick" style="color:#234e69"><a href="#201929" label="[20:19:29]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: we run live-bootstrap in text mode so there is no graphics console to work with</span></div><div class="line" id="202346"><span class="nick" style="color:#6c3d55"><a href="#202346" label="[20:23:46]">&lt;Mikaku&gt;</a></span><span class="message">well, &quot;Page Fault at 0x00000000 (reading) with error code 0x00000004 (0b100)&quot;</span></div><div class="line" id="202509"><span class="nick" style="color:#6c3d55"><a href="#202509" label="[20:25:09]">&lt;Mikaku&gt;</a></span><span class="message">Process '/usr/bin/make' with pid 16</span></div><div class="line" id="202822"><span class="nick" style="color:#234e69"><a href="#202822" label="[20:28:22]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I believe I've seen it fail that way</span></div><div class="line" id="202954"><span class="nick" style="color:#6c3d55"><a href="#202954" label="[20:29:54]">&lt;Mikaku&gt;</a></span><span class="message">yes, this will be hard to debug</span></div><div class="line" id="203001"><span class="nick" style="color:#6c3d55"><a href="#203001" label="[20:30:01]">&lt;Mikaku&gt;</a></span><span class="message">it happened while building binutils-2.30</span></div><div class="line" id="203042"><span class="nick" style="color:#234e69"><a href="#203042" label="[20:30:42]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: Yes, it's difficult because it fails in so many different ways</span></div><div class="line" id="203332"><span class="nick" style="color:#8dd3c7"><a href="#203332" label="[20:33:32]">&lt;aggi&gt;</a></span><span class="message">rickmasters: tried the tcc-patch quickly</span></div><div class="line" id="203347"><span class="nick" style="color:#8dd3c7"><a href="#203347" label="[20:33:47]">&lt;aggi&gt;</a></span><span class="message">which version of tcc was used with it in your test-setup?</span></div><div class="line" id="203419"><span class="nick" style="color:#234e69"><a href="#203419" label="[20:34:19]">&lt;rickmasters&gt;</a></span><span class="message">It was the 0.9.27 release - not the latest mob</span></div><div class="line" id="203427"><span class="nick" style="color:#8dd3c7"><a href="#203427" label="[20:34:27]">&lt;aggi&gt;</a></span><span class="message">ok</span></div><div class="line" id="203537"><span class="nick" style="color:#6c3d55"><a href="#203537" label="[20:35:37]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: yes, it looks like after some heavy use the kernel is choosing an incorrect buffer (from the cache) for a specific block</span></div><div class="line" id="203802"><span class="nick" style="color:#234e69"><a href="#203802" label="[20:38:02]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: I'm curious how you figured that out so quickly</span></div><div class="line" id="204718"><span class="nick" style="color:#6c3d55"><a href="#204718" label="[20:47:18]">&lt;Mikaku&gt;</a></span><span class="message">I'm not completely sure, but a possible cause is that since that page-fault was in user-mode (in 'eip: 0x08078057'), this belongs to the .text section of '/usr/bin/make'. So, the original page that was loaded from the disk during the normal page-demand execution was probably changed erroneously by the contents of another page (from a buffer)</span></div><div class="line" id="204820"><span class="nick" style="color:#6c3d55"><a href="#204820" label="[20:48:20]">&lt;Mikaku&gt;</a></span><span class="message">this is a long-standing bug that happens from time to time during a heavy kernel use</span></div><div class="line" id="205036"><span class="nick" style="color:#6c3d55"><a href="#205036" label="[20:50:36]">&lt;Mikaku&gt;</a></span><span class="message">I have been living with this bug because it not happens really often, but it appears from time to time indeed</span></div><div class="line" id="205538"><span class="nick" style="color:#234e69"><a href="#205538" label="[20:55:38]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: ok, I was speculating that there was a disk timeout on the page-demand and so the executable was not populated</span></div><div class="line" id="205726"><span class="nick" style="color:#234e69"><a href="#205726" label="[20:57:26]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: ... mainly because I saw better behavior with a higher WAIT_FOR_DISK timeout but I also increased MAX_IDE_ERR but I was just guessing</span></div><div class="line" id="205742"><span class="nick" style="color:#6c3d55"><a href="#205742" label="[20:57:42]">&lt;Mikaku&gt;</a></span><span class="message">hmm</span></div><div class="line" id="205803"><span class="nick" style="color:#6c3d55"><a href="#205803" label="[20:58:03]">&lt;Mikaku&gt;</a></span><span class="message">I don't see they are related with that page fault</span></div><div class="line" id="205839"><span class="nick" style="color:#6c3d55"><a href="#205839" label="[20:58:39]">&lt;Mikaku&gt;</a></span><span class="message">if I could re-run this /usr/bin/make again it probably succeed</span></div><div class="line" id="205900"><span class="nick" style="color:#6c3d55"><a href="#205900" label="[20:59:00]">&lt;Mikaku&gt;</a></span><span class="message">but I don't even know how to exit from this QEMU mode, d'oh</span></div><div class="line" id="205905"><span class="nick" style="color:#234e69"><a href="#205905" label="[20:59:05]">&lt;rickmasters&gt;</a></span><span class="message">Ok. Maybe there is more than one problem.</span></div><div class="line" id="205911"><span class="nick" style="color:#234e69"><a href="#205911" label="[20:59:11]">&lt;rickmasters&gt;</a></span><span class="message">Ctrl-a then x</span></div><div class="line" id="205917"><span class="nick" style="color:#6c3d55"><a href="#205917" label="[20:59:17]">&lt;Mikaku&gt;</a></span><span class="message">nope, it doesn't work</span></div><div class="line" id="210001"><span class="nick" style="color:#6c3d55"><a href="#210001" label="[21:00:01]">&lt;Mikaku&gt;</a></span><span class="message">I'd prefer not use kill but ...</span></div><div class="line" id="210004"><span class="nick" style="color:#234e69"><a href="#210004" label="[21:00:04]">&lt;rickmasters&gt;</a></span><span class="message">Ok pushing the keys harder might work (april fools)</span></div><div class="line" id="210012"><span class="nick" style="color:#6c3d55"><a href="#210012" label="[21:00:12]">&lt;Mikaku&gt;</a></span><span class="message">haha</span></div><div class="line" id="210036"><span class="nick" style="color:#234e69"><a href="#210036" label="[21:00:36]">&lt;rickmasters&gt;</a></span><span class="message">I've had to use kill from time to time</span></div><div class="line" id="210037"><span class="nick" style="color:#d9d9d9"><a href="#210037" label="[21:00:37]">&lt;stikonas[m]&gt;</a></span><span class="message">Strange C-a x works here</span></div><div class="line" id="210132"><span class="nick" style="color:#6c3d55"><a href="#210132" label="[21:01:32]">&lt;Mikaku&gt;</a></span><span class="message">Ctrl-a then x is not working, Ctrl-C neither works</span></div><div class="line" id="210200"><span class="nick" style="color:#6c3d55"><a href="#210200" label="[21:02:00]">&lt;Mikaku&gt;</a></span><span class="message">'kill' did the job, as always</span></div><div class="line" id="210250"><span class="nick" style="color:#234e69"><a href="#210250" label="[21:02:50]">&lt;rickmasters&gt;</a></span><span class="message">Sometimes the terminal is borked so &quot;stty sane&quot; can bring it back</span></div><div class="line" id="210333"><span class="nick" style="color:#6c3d55"><a href="#210333" label="[21:03:33]">&lt;Mikaku&gt;</a></span><span class="message">yes, I've had to run 'reset' to sane the terminal</span></div><div class="line" id="210417"><span class="nick" style="color:#6c3d55"><a href="#210417" label="[21:04:17]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: if I run the command again './rootfs.py --qemu --kernel kernel --kernel-fiwix-hd' it will continue where it stopped or it will start from zero?</span></div><div class="line" id="210457"><span class="nick" style="color:#234e69"><a href="#210457" label="[21:04:57]">&lt;rickmasters&gt;</a></span><span class="message">It will start from zero and likely fail when trying to mkdir existing directories</span></div><div class="line" id="210510"><span class="nick" style="color:#6c3d55"><a href="#210510" label="[21:05:10]">&lt;Mikaku&gt;</a></span><span class="message">ok</span></div><div class="line" id="210719"><span class="nick" style="color:#234e69"><a href="#210719" label="[21:07:19]">&lt;rickmasters&gt;</a></span><span class="message">as I mentioned, if you modify bootfiwix-hd you can copy the hda.img before launching qemu so you don't have to run the downloads and disk prep again</span></div><div class="line" id="210813"><span class="nick" style="color:#6c3d55"><a href="#210813" label="[21:08:13]">&lt;Mikaku&gt;</a></span><span class="message">ok, thanks</span></div><div class="line" id="211039"><span class="nick" style="color:#234e69"><a href="#211039" label="[21:10:39]">&lt;rickmasters&gt;</a></span><span class="message">Of course you'll have to run rootfs.py again but only once to create a master image that you can copy each time you run bootfiwix-hd</span></div><div class="line" id="211358"><span class="nick" style="color:#6c3d55"><a href="#211358" label="[21:13:58]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: well, unfortunately this is a known bug so I don't need to use live-bootstrap tools to see it. As I said, it also appears to me from time to time when building all FiwixOS packages</span></div><div class="line" id="211546"><span class="nick" style="color:#6c3d55"><a href="#211546" label="[21:15:46]">&lt;Mikaku&gt;</a></span><span class="message">the good news here is that there is not a problem with the disk driver, at least not directly reading/writing as I understood</span></div><div class="line" id="211655"><span class="nick" style="color:#6c3d55"><a href="#211655" label="[21:16:55]">&lt;Mikaku&gt;</a></span><span class="message">as a very talented guy said some time ago, many eyeballs make all bugs shallow :-)</span></div><div class="line" id="211853"><span class="nick" style="color:#6c3d55"><a href="#211853" label="[21:18:53]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: so, you said that this bug doesn't appear using the ram disk?</span></div><div class="line" id="211916"><span class="nick" style="color:#234e69"><a href="#211916" label="[21:19:16]">&lt;rickmasters&gt;</a></span><span class="message">Yes, the ram drive works fine.</span></div><div class="line" id="211938"><span class="nick" style="color:#6c3d55"><a href="#211938" label="[21:19:38]">&lt;Mikaku&gt;</a></span><span class="message">this is really interesting</span></div><div class="line" id="212147"><span class="nick" style="color:#6c3d55"><a href="#212147" label="[21:21:47]">&lt;Mikaku&gt;</a></span><span class="message">I mean, the buffer and page cache doesn't know from where the data comes</span></div><div class="line" id="212341"><span class="nick" style="color:#234e69"><a href="#212341" label="[21:23:41]">&lt;rickmasters&gt;</a></span><span class="message">maybe the ram requests are synchronous so there is no opportunity for something else to mess with it</span></div><div class="line" id="212501"><span class="nick" style="color:#6c3d55"><a href="#212501" label="[21:25:01]">&lt;Mikaku&gt;</a></span><span class="message">yes, disk driver puts the process to sleep until the data arrives, this not happens using the ram disk</span></div><div class="line" id="213731"><span class="nick" style="color:#8dd3c7"><a href="#213731" label="[21:37:31]">&lt;aggi&gt;</a></span><span class="message">i think i found another bug, inside tcc-compiler (mob branch december/2022) ... can't track/bisect it where this is coming from tcc_error_noabort(&quot;'%s' defined twice&quot;, name);</span></div><div class="line" id="213756"><span class="nick" style="color:#8dd3c7"><a href="#213756" label="[21:37:56]">&lt;aggi&gt;</a></span><span class="message">i'll stick to 0.9.27-version for a little while now</span></div><div class="line" id="213942"><span class="nick" style="color:#8dd3c7"><a href="#213942" label="[21:39:42]">&lt;aggi&gt;</a></span><span class="message">anyway</span></div><div class="line" id="214028"><span class="nick" style="color:#8dd3c7"><a href="#214028" label="[21:40:28]">&lt;aggi&gt;</a></span><span class="message">rickmasters: fyi, the proposed patch didn't help with linux-2.4.37.11-seyko2/TCC</span></div><div class="line" id="214107"><span class="nick" style="color:#234e69"><a href="#214107" label="[21:41:07]">&lt;rickmasters&gt;</a></span><span class="message">aggi: I'm not surprised - it was for Fiwix.</span></div><div class="line" id="214126"><span class="nick" style="color:#8dd3c7"><a href="#214126" label="[21:41:26]">&lt;aggi&gt;</a></span><span class="message">yep</span></div><div class="line" id="214228"><span class="nick" style="color:#8dd3c7"><a href="#214228" label="[21:42:28]">&lt;aggi&gt;</a></span><span class="message">and this raises some more principle concerns over this; because if i can't clarify upon adress-layout/mappings/translatios with linux-2.4 reliably, in conjunction with any compiler/linker magic</span></div><div class="line" id="214327"><span class="nick" style="color:#8dd3c7"><a href="#214327" label="[21:43:27]">&lt;aggi&gt;</a></span><span class="message">rickmasters: i fear this patch may affect/break any ordinary i386-tcc emitted binaries other than fiwix kernel?</span></div><div class="line" id="214439"><span class="nick" style="color:#234e69"><a href="#214439" label="[21:44:39]">&lt;rickmasters&gt;</a></span><span class="message">Yes, it's possible but not likely since binaries typically don't use virtual addresses over 0xC0000000.</span></div><div class="line" id="214503"><span class="nick" style="color:#8dd3c7"><a href="#214503" label="[21:45:03]">&lt;aggi&gt;</a></span><span class="message">anyway, i may give linux-2.4 another try, together with the tccboot-loader sequence; however, this won't solve the principle issue mentioned either</span></div><div class="line" id="214506"><span class="nick" style="color:#234e69"><a href="#214506" label="[21:45:06]">&lt;rickmasters&gt;</a></span><span class="message">And this patch was specific to live-bootstrap which is only used for bootstrapping.</span></div><div class="line" id="214519"><span class="nick" style="color:#8dd3c7"><a href="#214519" label="[21:45:19]">&lt;aggi&gt;</a></span><span class="message">rickmasters: no need to excuse; thanks for the hint</span></div><div class="line" id="214616"><span class="nick" style="color:#8dd3c7"><a href="#214616" label="[21:46:16]">&lt;aggi&gt;</a></span><span class="message">yet, to confirm the suspicion i have, i had to follow the tccboot-loader sequence, which won't solve the principle issue, and i'm not interested in JIT-compilation of kernel</span></div><div class="line" id="214632"><span class="nick" style="color:#234e69"><a href="#214632" label="[21:46:32]">&lt;rickmasters&gt;</a></span><span class="message">aggi: No its a valid issue that is worth raising. If the tcc package built by live-bootstrap is used elsewhere and creates a problem it may need to be rebuilt without that patch after Fiwix is built.</span></div><div class="line" id="214731"><span class="nick" style="color:#8dd3c7"><a href="#214731" label="[21:47:31]">&lt;aggi&gt;</a></span><span class="message">allright, i think fiwix and linux-2.4 are affected by the same problem, yet for linux-2.4 i had to confirm this with tccboot-loader (if this changes anything)</span></div><div class="line" id="214838"><span class="nick" style="color:#8dd3c7"><a href="#214838" label="[21:48:38]">&lt;aggi&gt;</a></span><span class="message">and, if Fiwix works, this may be very interesting, in any case</span></div><div class="line" id="214939"><span class="nick" style="color:#234e69"><a href="#214939" label="[21:49:39]">&lt;rickmasters&gt;</a></span><span class="message">aggi: Well I hope it helps you in some way.</span></div><div class="line" id="214954"><span class="nick" style="color:#8dd3c7"><a href="#214954" label="[21:49:54]">&lt;aggi&gt;</a></span><span class="message">for example, i too considered linux-2.2 (which uses some older as86 syntax bootsec/setup asm code, instead of gas), and i am concerned about the binutils/gas-asm</span></div><div class="line" id="215033"><span class="nick" style="color:#8dd3c7"><a href="#215033" label="[21:50:33]">&lt;aggi&gt;</a></span><span class="message">rickmasters: i am thinking to terminate, due to principle feasibility issues</span></div><div class="line" id="215054"><span class="nick" style="color:#8dd3c7"><a href="#215054" label="[21:50:54]">&lt;aggi&gt;</a></span><span class="message">intersecting with bootstrappable</span></div><div class="line" id="215105"><span class="nick" style="color:#234e69"><a href="#215105" label="[21:51:05]">&lt;rickmasters&gt;</a></span><span class="message">aggi: As we both have discovered, tccboot is a demo - not an open source project. I couldn't get it to work with the sources and tools provided.</span></div><div class="line" id="215153"><span class="nick" style="color:#234e69"><a href="#215153" label="[21:51:53]">&lt;rickmasters&gt;</a></span><span class="message">The ISO seems to do something that builds and boots linux but it is not at all clear how to built it yourself.</span></div><div class="line" id="215238"><span class="nick" style="color:#8dd3c7"><a href="#215238" label="[21:52:38]">&lt;aggi&gt;</a></span><span class="message">well, i can build tccboot (although it's a little more complicated, because i am crosscompiling from HOST=arm/aarch32, as another sanity check if anything is wrong)</span></div><div class="line" id="215342"><span class="nick" style="color:#8dd3c7"><a href="#215342" label="[21:53:42]">&lt;aggi&gt;</a></span><span class="message">however, tccboot-loader won't solve the clarification issue of address-layout/mappings/translations and support with tcc-linker, it will only confirm this is what's crashing interrupt-handling with linux-2.4</span></div><div class="line" id="215510"><span class="nick" style="color:#8dd3c7"><a href="#215510" label="[21:55:10]">&lt;aggi&gt;</a></span><span class="message">and tccboot-loader can't solve the problem with AoT compilation of linux-2.4 either, it won't solve the GNU gas/16bit/asm related problems, with which the whole procedure is locked against binutils-gas</span></div><div class="line" id="215525"><span class="nick" style="color:#8dd3c7"><a href="#215525" label="[21:55:25]">&lt;aggi&gt;</a></span><span class="message">which is one principle criteria, to avoid just them one day, binutils</span></div><div class="line" id="215713"><span class="nick" style="color:#234e69"><a href="#215713" label="[21:57:13]">&lt;rickmasters&gt;</a></span><span class="message">I'm not sure I follow everything you are saying but I just couldn't figure out what tools and steps were used to create the tccboot ISO.</span></div><div class="line" id="215720"><span class="nick" style="color:#234e69"><a href="#215720" label="[21:57:20]">&lt;rickmasters&gt;</a></span><span class="message">I didn't try contacting the author because I'm shy and didn't want to be a bother and I doubted the author had more to provide.</span></div><div class="line" id="215829"><span class="nick" style="color:#234e69"><a href="#215829" label="[21:58:29]">&lt;rickmasters&gt;</a></span><span class="message">Yeah, I was cross compiling from a x86_64 machine which probably didn't help either.</span></div><div class="line" id="215903"><span class="nick" style="color:#8dd3c7"><a href="#215903" label="[21:59:03]">&lt;aggi&gt;</a></span><span class="message">rickmasters: allright, i'll re-iterate over tccboot, to compile that one from source entirely; with both linux-2.4.26(100% identical to the sources from Bellard), and linux-2.4.37.11</span></div><div class="line" id="215919"><span class="nick" style="color:#234e69"><a href="#215919" label="[21:59:19]">&lt;rickmasters&gt;</a></span><span class="message">All I was able to do was build the Linux kernel without obvious errors. I had no idea how to boot it though.</span></div><div class="line" id="220110"><span class="nick" style="color:#234e69"><a href="#220110" label="[22:01:10]">&lt;rickmasters&gt;</a></span><span class="message">But what tcc? It wasn't clear what bellard used. I don't think I was able to just pull it off the ISO because of missing libraries.</span></div><div class="line" id="220123"><span class="nick" style="color:#8dd3c7"><a href="#220123" label="[22:01:23]">&lt;aggi&gt;</a></span><span class="message">well, i (cross)-compiled both linux-2.4.26 and linux-2.4.37.11 with various versions of tcc-compiler/linker (for bootsect/setup parts i set AS=i686-binutils-as only); this compiles, this boots, and then kernel crashes related to interrupt handling</span></div><div class="line" id="220151"><span class="nick" style="color:#234e69"><a href="#220151" label="[22:01:51]">&lt;rickmasters&gt;</a></span><span class="message">How did you boot it?</span></div><div class="line" id="220210"><span class="nick" style="color:#8dd3c7"><a href="#220210" label="[22:02:10]">&lt;aggi&gt;</a></span><span class="message">yes, on the ISO, the tcc-version is stamped 0.9.21, which i suspect may not be identical to the release-tag in git-repositories, due to build-errors i encountered which did require some commits _after_ 0.9.21 was tagged</span></div><div class="line" id="220240"><span class="nick" style="color:#8dd3c7"><a href="#220240" label="[22:02:40]">&lt;aggi&gt;</a></span><span class="message">rickmasters: booted as an ISO, syslinux bootloader, that's all confirmed and working, except for the crashes</span></div><div class="line" id="220255"><span class="nick" style="color:#8dd3c7"><a href="#220255" label="[22:02:55]">&lt;aggi&gt;</a></span><span class="message">meaning, kernel does execute as it should</span></div><div class="line" id="220347"><span class="nick" style="color:#8dd3c7"><a href="#220347" label="[22:03:47]">&lt;aggi&gt;</a></span><span class="message">i'll test tccboot-loader next; to see if this makes any difference, if kernel crashes then, or not</span></div><div class="line" id="220400"><span class="nick" style="color:#8dd3c7"><a href="#220400" label="[22:04:00]">&lt;aggi&gt;</a></span><span class="message">if it does crash, then it's a tcc-compiler/version related issue</span></div><div class="line" id="220536"><span class="nick" style="color:#234e69"><a href="#220536" label="[22:05:36]">&lt;rickmasters&gt;</a></span><span class="message">That's a good data point. I gave up when I realized it couldn't be booted _at all_ with a recent qemu.</span></div><div class="line" id="220557"><span class="nick" style="color:#234e69"><a href="#220557" label="[22:05:57]">&lt;rickmasters&gt;</a></span><span class="message">Since I needed to write the boot loader I was depending on using qemu as a guide but that didn't work out.</span></div><div class="line" id="220737"><span class="nick" style="color:#234e69"><a href="#220737" label="[22:07:37]">&lt;rickmasters&gt;</a></span><span class="message">So, unless you have to tccboot-loader source that will be a challenge to figure out</span></div><div class="line" id="220855"><span class="nick" style="color:#234e69"><a href="#220855" label="[22:08:55]">&lt;rickmasters&gt;</a></span><span class="message">I was able to boot Fiwix with qemu so I know I could write a boot loader for it and that worked out better from a boot perspective.</span></div><div class="line" id="220938"><span class="nick" style="color:#8dd3c7"><a href="#220938" label="[22:09:38]">&lt;aggi&gt;</a></span><span class="message">linux-2.4/tcc os booting on real-hardware even, already tested highmem-support, with 16GiB RAM reported ...; and then crashes...</span></div><div class="line" id="221246"><span class="nick" style="color:#8dd3c7"><a href="#221246" label="[22:12:46]">&lt;aggi&gt;</a></span><span class="message">and linux-2.4 has one benefit, over Fiwix: hardware support (USB, ACPI, real-hardware etc...); even when it's not the prime target of bootstrappable</span></div><div class="line" id="221422"><span class="nick" style="color:#6b8072"><a href="#221422" label="[22:14:22]">&lt;muurkha&gt;</a></span><span class="message">so you couldn't get it to boot in qemu either, aggi?</span></div><div class="line" id="221508"><span class="nick" style="color:#8dd3c7"><a href="#221508" label="[22:15:08]">&lt;aggi&gt;</a></span><span class="message">muurkha: i just didn't test with qemu</span></div><div class="line" id="221538"><span class="nick" style="color:#8dd3c7"><a href="#221538" label="[22:15:38]">&lt;aggi&gt;</a></span><span class="message">muurkha: and since i follow a strict no-C++ policy, that's why i don't bother with qemu and many other</span></div><div class="line" id="221554"><span class="nick" style="color:#6b8072"><a href="#221554" label="[22:15:54]">&lt;muurkha&gt;</a></span><span class="message">oh! okay</span></div><div class="line" id="222422"><span class="nick" style="color:#8dd3c7"><a href="#222422" label="[22:24:22]">&lt;aggi&gt;</a></span><span class="message">this no-C++ policy affects bootstrapping, of cause: no qemu as mentioned, no &gt;gcc-4.7, hence no aarch64, no risc-v, even u-boot loader is gone due to some transitive dependencies against c++/python-swig</span></div><div class="line" id="222451"><span class="nick" style="color:#8dd3c7"><a href="#222451" label="[22:24:51]">&lt;aggi&gt;</a></span><span class="message">furthermore, no llvm/clang (!), just in case</span></div><div class="line" id="222631"><span class="nick" style="color:#8dd3c7"><a href="#222631" label="[22:26:31]">&lt;aggi&gt;</a></span><span class="message">and i tightened at other frontlines too: no python, no perl, no bash, no gnu autotools (which one day will leave me without binutils, if i don't re-integrate this similar to oasis linux did)</span></div><div class="line" id="222750"><span class="nick" style="color:#6b8072"><a href="#222750" label="[22:27:50]">&lt;muurkha&gt;</a></span><span class="message">that's interesting, why don't you like python, perl, and bash?</span></div><div class="line" id="222812"><span class="nick" style="color:#8dd3c7"><a href="#222812" label="[22:28:12]">&lt;aggi&gt;</a></span><span class="message">muurkha: there is different issues with each, which can't be solved anymore</span></div><div class="line" id="222831"><span class="nick" style="color:#6b8072"><a href="#222831" label="[22:28:31]">&lt;muurkha&gt;</a></span><span class="message">this is reminding me of the novel A Void</span></div><div class="line" id="222844"><span class="nick" style="color:#8dd3c7"><a href="#222844" label="[22:28:44]">&lt;aggi&gt;</a></span><span class="message">muurkha: i am way beyond void, surprisingly</span></div><div class="line" id="222858"><span class="nick" style="color:#8dd3c7"><a href="#222858" label="[22:28:58]">&lt;aggi&gt;</a></span><span class="message">because, there seems other niche fringe projects, concerned with this, related to bootstrapping</span></div><div class="line" id="222905"><span class="nick" style="color:#6b8072"><a href="#222905" label="[22:29:05]">&lt;muurkha&gt;</a></span><span class="message">cool!</span></div><div class="line" id="223106"><span class="nick" style="color:#8dd3c7"><a href="#223106" label="[22:31:06]">&lt;aggi&gt;</a></span><span class="message">with perl gone... the gnu autotools/automake are gone...; that's how i arrived at the idea of oasis linux, which strongly intersects with alot of issues i had encounted surrounding GNU</span></div><div class="line" id="223145"><span class="nick" style="color:#8dd3c7"><a href="#223145" label="[22:31:45]">&lt;aggi&gt;</a></span><span class="message">and, it's not their license, it's the problematic bootstrapping why i will abandon GNU-toolchain and GNU-buildsystem</span></div><div class="line" id="223205"><span class="nick" style="color:#8dd3c7"><a href="#223205" label="[22:32:05]">&lt;aggi&gt;</a></span><span class="message">yet, this is still blocked: at kernel, libc, and an assembler</span></div><div class="line" id="223206"><span class="nick" style="color:#6b8072"><a href="#223206" label="[22:32:06]">&lt;muurkha&gt;</a></span><span class="message"> <a rel="nofollow" href="https://en.wikipedia.org/wiki/A_Void">https://en.wikipedia.org/wiki/A_Void</a> </span></div><div class="line" id="224554"><span class="nick" style="color:#389600"><a href="#224554" label="[22:45:54]">&lt;stikonas&gt;</a></span><span class="message">well, if we keep fiwix in RAM (as is currently is) hardware support for bootstrapping wouldn't matter too much</span></div><div class="line" id="224610"><span class="nick" style="color:#389600"><a href="#224610" label="[22:46:10]">&lt;stikonas&gt;</a></span><span class="message">it would only matter if you want to use it as a daily driver</span></div><div class="line" id="224654"><span class="nick" style="color:#389600"><a href="#224654" label="[22:46:54]">&lt;stikonas&gt;</a></span><span class="message">but fiwix kernel being small is what makes it a good target for intermediate bootstrap kernel</span></div><div class="line" id="224714"><span class="nick" style="color:#389600"><a href="#224714" label="[22:47:14]">&lt;stikonas&gt;</a></span><span class="message">at least on x86</span></div><div class="line" id="224728"><span class="nick" style="color:#8dd3c7"><a href="#224728" label="[22:47:28]">&lt;aggi&gt;</a></span><span class="message">stikonas: yes, that's another difference; i do not consider linux-2.x and tcc-compiler as an intermediate step of bootstrapping; i intend to emit a production-ready system with it, on x86, with decent hardware support</span></div><div class="line" id="224747"><span class="nick" style="color:#389600"><a href="#224747" label="[22:47:47]">&lt;stikonas&gt;</a></span><span class="message">yes, so your goal is a bit different</span></div><div class="line" id="224804"><span class="nick" style="color:#8dd3c7"><a href="#224804" label="[22:48:04]">&lt;aggi&gt;</a></span><span class="message">well, Fiwix isn't far away from linux-2.x ;)</span></div><div class="line" id="224846"><span class="nick" style="color:#8dd3c7"><a href="#224846" label="[22:48:46]">&lt;aggi&gt;</a></span><span class="message">and the real difference, is the no-c++ policy</span></div><div class="line" id="224850"><span class="nick" style="color:#389600"><a href="#224850" label="[22:48:50]">&lt;stikonas&gt;</a></span><span class="message">yes, but old versions of linux are not very suitable for live-bootstrap</span></div><div class="line" id="224905"><span class="nick" style="color:#389600"><a href="#224905" label="[22:49:05]">&lt;stikonas&gt;</a></span><span class="message">as live-bootstrap avoids pregenerated files</span></div><div class="line" id="224925"><span class="nick" style="color:#389600"><a href="#224925" label="[22:49:25]">&lt;stikonas&gt;</a></span><span class="message">and linux-libre scripts have not existed back then</span></div><div class="line" id="225157"><span class="nick" style="color:#8dd3c7"><a href="#225157" label="[22:51:57]">&lt;aggi&gt;</a></span><span class="message">i recall, some early hex0.bin required llvm x86_64? could be worse; i would acept this hex0.bin as pre-generated on my part then.</span></div><div class="line" id="225214"><span class="nick" style="color:#8dd3c7"><a href="#225214" label="[22:52:14]">&lt;aggi&gt;</a></span><span class="message">and trust the bootstrapping path to tcc-compiler is clean otherwise.</span></div><div class="line" id="225604"><span class="nick" style="color:#8dd3c7"><a href="#225604" label="[22:56:04]">&lt;aggi&gt;</a></span><span class="message">oasis linux showcased, GNU-autotools/automake aren't necessary, tcc/linux/toybox/sbase/ubase won't need them; to avoid just this problem of pre-generated files</span></div><div class="line" id="225856"><span class="nick" style="color:#389600"><a href="#225856" label="[22:58:56]">&lt;stikonas&gt;</a></span><span class="message">aggi: no, hex0 never needed anything</span></div><div class="line" id="225918"><span class="nick" style="color:#389600"><a href="#225918" label="[22:59:18]">&lt;stikonas&gt;</a></span><span class="message">oh I think you are thinking of my prototypes for UEFI</span></div><div class="line" id="225936"><span class="nick" style="color:#389600"><a href="#225936" label="[22:59:36]">&lt;stikonas&gt;</a></span><span class="message">for hex0 stuff we usually write in stages</span></div><div class="line" id="225942"><span class="nick" style="color:#389600"><a href="#225942" label="[22:59:42]">&lt;stikonas&gt;</a></span><span class="message">write some high level prototype</span></div><div class="line" id="225949"><span class="nick" style="color:#389600"><a href="#225949" label="[22:59:49]">&lt;stikonas&gt;</a></span><span class="message">then assembly</span></div><div class="line" id="230001"><span class="nick" style="color:#389600"><a href="#230001" label="[23:00:01]">&lt;stikonas&gt;</a></span><span class="message">then convert to hex2 and then to hex0</span></div><div class="line" id="230014"><span class="nick" style="color:#8dd3c7"><a href="#230014" label="[23:00:14]">&lt;aggi&gt;</a></span><span class="message">stikonas: amazing; so earlier bootstrapping stages won't violate the no-c++ policy then</span></div><div class="line" id="230017"><span class="nick" style="color:#389600"><a href="#230017" label="[23:00:17]">&lt;stikonas&gt;</a></span><span class="message">(depending on ISA and some other factors, some stages might be skipped)</span></div><div class="line" id="230024"><span class="nick" style="color:#389600"><a href="#230024" label="[23:00:24]">&lt;stikonas&gt;</a></span><span class="message">there is no C either</span></div><div class="line" id="230027"><span class="nick" style="color:#389600"><a href="#230027" label="[23:00:27]">&lt;stikonas&gt;</a></span><span class="message">it's bootstrapping</span></div><div class="line" id="230034"><span class="nick" style="color:#389600"><a href="#230034" label="[23:00:34]">&lt;stikonas&gt;</a></span><span class="message">so you start with machine code</span></div><div class="line" id="230049"><span class="nick" style="color:#389600"><a href="#230049" label="[23:00:49]">&lt;stikonas&gt;</a></span><span class="message">let me show you hex0 for x86</span></div><div class="line" id="230119"><span class="nick" style="color:#8dd3c7"><a href="#230119" label="[23:01:19]">&lt;aggi&gt;</a></span><span class="message">sorry, misunderstanding; i was just confused then over the uefi-related path, which required llvm</span></div><div class="line" id="230124"><span class="nick" style="color:#389600"><a href="#230124" label="[23:01:24]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/stage0-posix-x86/blob/master/hex0_x86.hex0">https://github.com/oriansj/stage0-posix-x86/blob/master/hex0_x86.hex0</a> </span></div><div class="line" id="230133"><span class="nick" style="color:#389600"><a href="#230133" label="[23:01:33]">&lt;stikonas&gt;</a></span><span class="message">no, it's only for development purposes</span></div><div class="line" id="230155"><span class="nick" style="color:#389600"><a href="#230155" label="[23:01:55]">&lt;stikonas&gt;</a></span><span class="message">it's easier to prototype in C</span></div><div class="line" id="230229"><span class="nick" style="color:#389600"><a href="#230229" label="[23:02:29]">&lt;stikonas&gt;</a></span><span class="message">and for UEFI llvm was helpful as it can output UEFI binaries directly</span></div><div class="line" id="230233"><span class="nick" style="color:#389600"><a href="#230233" label="[23:02:33]">&lt;stikonas&gt;</a></span><span class="message">unlike gcc which needs some hacks</span></div><div class="line" id="230236"><span class="nick" style="color:#8dd3c7"><a href="#230236" label="[23:02:36]">&lt;aggi&gt;</a></span><span class="message">ok</span></div><div class="line" id="230242"><span class="nick" style="color:#389600"><a href="#230242" label="[23:02:42]">&lt;stikonas&gt;</a></span><span class="message">but that's for prototype only</span></div><div class="line" id="230302"><span class="nick" style="color:#389600"><a href="#230302" label="[23:03:02]">&lt;stikonas&gt;</a></span><span class="message">2nd prototype was written in assembly</span></div><div class="line" id="230315"><span class="nick" style="color:#389600"><a href="#230315" label="[23:03:15]">&lt;stikonas&gt;</a></span><span class="message">then 3rd was stage0 style M1 assembly</span></div><div class="line" id="230321"><span class="nick" style="color:#389600"><a href="#230321" label="[23:03:21]">&lt;stikonas&gt;</a></span><span class="message">and then actual hex0</span></div><div class="line" id="230336"><span class="nick" style="color:#8dd3c7"><a href="#230336" label="[23:03:36]">&lt;aggi&gt;</a></span><span class="message">and that's where i see another blocker, assembly/gas: binutils</span></div><div class="line" id="230415"><span class="nick" style="color:#8dd3c7"><a href="#230415" label="[23:04:15]">&lt;aggi&gt;</a></span><span class="message">but i think, you may be talking about a different type of assmbler in early stages</span></div><div class="line" id="230507"><span class="nick" style="color:#389600"><a href="#230507" label="[23:05:07]">&lt;stikonas&gt;</a></span><span class="message">well, 2nd prototype was built with clang but 3rd one is using only M1</span></div><div class="line" id="230553"><span class="nick" style="color:#389600"><a href="#230553" label="[23:05:53]">&lt;stikonas&gt;</a></span><span class="message">but it's easier to write it in stages</span></div><div class="line" id="230603"><span class="nick" style="color:#389600"><a href="#230603" label="[23:06:03]">&lt;stikonas&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.S">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.S</a>  vs <a rel="nofollow" href="https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.M1">https://git.stikonas.eu/andrius/stage0-uefi/src/branch/main/amd64/Development/hex0.M1</a> </span></div><div class="line" id="230717"><span class="nick" style="color:#8dd3c7"><a href="#230717" label="[23:07:17]">&lt;aggi&gt;</a></span><span class="message">i am not sure yet, which assemblers bootstrappable.org requires at which stages</span></div><div class="line" id="230759"><span class="nick" style="color:#8dd3c7"><a href="#230759" label="[23:07:59]">&lt;aggi&gt;</a></span><span class="message">i only know, which assembly parts exist for linux/bootloader/libc - and how this locks and blocks against GNU-autotools/binutils</span></div><div class="line" id="230810"><span class="nick" style="color:#389600"><a href="#230810" label="[23:08:10]">&lt;stikonas&gt;</a></span><span class="message">well, hex0 binary builds hex1 then hex2 then M0. You can call M0 a macro assembler</span></div><div class="line" id="230826"><span class="nick" style="color:#389600"><a href="#230826" label="[23:08:26]">&lt;stikonas&gt;</a></span><span class="message">M0 can do replacements like DEFINE add_eax,edi 01F8</span></div><div class="line" id="230836"><span class="nick" style="color:#389600"><a href="#230836" label="[23:08:36]">&lt;stikonas&gt;</a></span><span class="message">and also knows how to encode constant numbers</span></div><div class="line" id="230945"><span class="nick" style="color:#389600"><a href="#230945" label="[23:09:45]">&lt;stikonas&gt;</a></span><span class="message">and everything is described here: <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="231037"><span class="nick" style="color:#8dd3c7"><a href="#231037" label="[23:10:37]">&lt;aggi&gt;</a></span><span class="message">i think, i could cross/compile both gcc-4.7 and binutils with tcc... however. the real question are the asm parts themselves</span></div><div class="line" id="231057"><span class="nick" style="color:#8dd3c7"><a href="#231057" label="[23:10:57]">&lt;aggi&gt;</a></span><span class="message">which tools are required, and when (to avoid a circular dependency)</span></div><div class="line" id="231212"><span class="nick" style="color:#8dd3c7"><a href="#231212" label="[23:12:12]">&lt;aggi&gt;</a></span><span class="message">i too would consider qemu itself such a circular dependency</span></div><div class="line" id="231318"><span class="nick" style="color:#8dd3c7"><a href="#231318" label="[23:13:18]">&lt;aggi&gt;</a></span><span class="message">which intersects with hardware-development, and required tooling</span></div><div class="line" id="231346"><span class="nick" style="color:#389600"><a href="#231346" label="[23:13:46]">&lt;stikonas&gt;</a></span><span class="message">well, qemu is not required, it's again a development tool</span></div><div class="line" id="231352"><span class="nick" style="color:#389600"><a href="#231352" label="[23:13:52]">&lt;stikonas&gt;</a></span><span class="message">you can run everything on hardware</span></div><div class="line" id="231426"><span class="nick" style="color:#8dd3c7"><a href="#231426" label="[23:14:26]">&lt;aggi&gt;</a></span><span class="message">ok. which hardware, and tooling required for this... that's the context of Z80 or Gigatron TTL type systems; and what can deployed onto those</span></div><div class="line" id="231508"><span class="nick" style="color:#8dd3c7"><a href="#231508" label="[23:15:08]">&lt;aggi&gt;</a></span><span class="message">i recall, someone departed to FuzixOS 16bit due to this problem</span></div><div class="line" id="231522"><span class="nick" style="color:#8dd3c7"><a href="#231522" label="[23:15:22]">&lt;aggi&gt;</a></span><span class="message">or CP/M</span></div><div class="line" id="231637"><span class="nick" style="color:#8dd3c7"><a href="#231637" label="[23:16:37]">&lt;aggi&gt;</a></span><span class="message">however, Z80 parts, and the former soviet clones, are gone almost entirely too, nowadays...</span></div><div class="line" id="231643"><span class="nick" style="color:#234e69"><a href="#231643" label="[23:16:43]">&lt;rickmasters&gt;</a></span><span class="message">aggi: for kernel bootstrap you need to &quot;dd&quot; an image to a hard drive and boot it. That obviously requires existing system.</span></div><div class="line" id="231707"><span class="nick" style="color:#234e69"><a href="#231707" label="[23:17:07]">&lt;rickmasters&gt;</a></span><span class="message">aggi: You cannot truly bootstrap from scratch. More on that here: <a rel="nofollow" href="https://github.com/ironmeld/boot2now/blob/main/TRUST.md">https://github.com/ironmeld/boot2now/blob/main/TRUST.md</a> </span></div><div class="line" id="232146"><span class="nick" style="color:#8dd3c7"><a href="#232146" label="[23:21:46]">&lt;aggi&gt;</a></span><span class="message">ironically, a relevant compiler, for Z80, SDCC, is written in C++; that's why i abandoned the idea to target Z80 with a C-compiler</span></div><div class="line" id="232233"><span class="nick" style="color:#8dd3c7"><a href="#232233" label="[23:22:33]">&lt;aggi&gt;</a></span><span class="message">... ironically, a relevant compiler, for Z80, SDCC, is written in C++; that's why i abandoned the idea to target Z80 with a C-compiler</span></div><div class="line" id="232308"><span class="nick" style="color:#234e69"><a href="#232308" label="[23:23:08]">&lt;rickmasters&gt;</a></span><span class="message">It should be possible to get down to a bootstrap HD image of a small binary (smaller than an MBR) followed by only source that can build to a modern OS.</span></div><div class="line" id="232318"><span class="nick" style="color:#234e69"><a href="#232318" label="[23:23:18]">&lt;rickmasters&gt;</a></span><span class="message">We're not there yet but we're getting close.</span></div><div class="line" id="232401"><span class="nick" style="color:#8dd3c7"><a href="#232401" label="[23:24:01]">&lt;aggi&gt;</a></span><span class="message">with Gigatron TTL however, the situation is different, there it's a binary.rom to accept (which i didn't inspect yet), and some crucial hardware parts are closed (PS/2 and VGA); so you couldn't terminate VT100 with free software and free hardware currently</span></div><div class="line" id="232435"><span class="nick" style="color:#8dd3c7"><a href="#232435" label="[23:24:35]">&lt;aggi&gt;</a></span><span class="message">another, Geoff's VT100, too required closed parts, to terminate VT100 at least</span></div><div class="line" id="232609"><span class="nick" style="color:#8dd3c7"><a href="#232609" label="[23:26:09]">&lt;aggi&gt;</a></span><span class="message">so, in the end, even when it's a tiniest 512Byte bootloader... it's thrown at hardware, raising questions over &quot;strictness of your bootstrapping strategy&quot;</span></div><div class="line" id="232718"><span class="nick" style="color:#8dd3c7"><a href="#232718" label="[23:27:18]">&lt;aggi&gt;</a></span><span class="message">to keep it simple, with simulators/emultators, that's why i set the no-c++ policy blocking against qemu</span></div><div class="line" id="232733"><span class="nick" style="color:#d9d9d9"><a href="#232733" label="[23:27:33]">&lt;stikonas[m]&gt;</a></span><span class="message">rickmasters: well, you can bootstrap from scratch but then you need custom made non x86 systems with physical I/O</span></div><div class="line" id="232755"><span class="nick" style="color:#8dd3c7"><a href="#232755" label="[23:27:55]">&lt;aggi&gt;</a></span><span class="message">Z80 or Gigatron TTL, too got emulators/simulators, written in C</span></div><div class="line" id="232807"><span class="nick" style="color:#d9d9d9"><a href="#232807" label="[23:28:07]">&lt;stikonas[m]&gt;</a></span><span class="message">Like it was done in early days if computing</span></div><div class="line" id="232837"><span class="nick" style="color:#8dd3c7"><a href="#232837" label="[23:28:37]">&lt;aggi&gt;</a></span><span class="message">with x86, for ao486, this introduces a GIANT circular dependency graph against Altera tooling and similar...</span></div><div class="line" id="232941"><span class="nick" style="color:#8dd3c7"><a href="#232941" label="[23:29:41]">&lt;aggi&gt;</a></span><span class="message">and there was some other i8086 project, deploying onto Altera, with similar problems</span></div><div class="line" id="232941"><span class="nick" style="color:#234e69"><a href="#232941" label="[23:29:41]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: I suppose in theory you could build a system without trusting any software but in practice it would be ... difficult</span></div><div class="line" id="233133"><span class="nick" style="color:#389600"><a href="#233133" label="[23:31:33]">&lt;stikonas&gt;</a></span><span class="message">yes, in practice it's difficult, probably more difficult than I'm willing to invest</span></div><div class="line" id="233142"><span class="nick" style="color:#389600"><a href="#233142" label="[23:31:42]">&lt;stikonas&gt;</a></span><span class="message">but some people had to do it once</span></div><div class="line" id="233157"><span class="nick" style="color:#389600"><a href="#233157" label="[23:31:57]">&lt;stikonas&gt;</a></span><span class="message">though probaby not individually but big government projects</span></div><div class="line" id="233227"><span class="nick" style="color:#389600"><a href="#233227" label="[23:32:27]">&lt;stikonas&gt;</a></span><span class="message">those early computers were as big as a few rooms</span></div><div class="line" id="233244"><span class="nick" style="color:#8dd3c7"><a href="#233244" label="[23:32:44]">&lt;aggi&gt;</a></span><span class="message">the east-german U880 manufacturing, that's gone entirely nowadays... seems this is one missing piece here</span></div><div class="line" id="233329"><span class="nick" style="color:#8dd3c7"><a href="#233329" label="[23:33:29]">&lt;aggi&gt;</a></span><span class="message">because, they too had the whole hardware-manufacturing for this, and the universities</span></div><div class="line" id="233349"><span class="nick" style="color:#389600"><a href="#233349" label="[23:33:49]">&lt;stikonas&gt;</a></span><span class="message">in practice today even manufacturing uses software</span></div><div class="line" id="233355"><span class="nick" style="color:#389600"><a href="#233355" label="[23:33:55]">&lt;stikonas&gt;</a></span><span class="message">probably both C and C++...</span></div><div class="line" id="233358"><span class="nick" style="color:#8dd3c7"><a href="#233358" label="[23:33:58]">&lt;aggi&gt;</a></span><span class="message">nowadays, there might be some manufacturing remaining, in Belarus close nearby Chernobyl some place</span></div><div class="line" id="000839"><span class="nick" style="color:#6d2462"><a href="#000839" label="[00:08:39]">&lt;oriansj&gt;</a></span><span class="message">aggi: well you either can trust software to build hardware/program FPGAs or you need to go to individual gates (I like that plan)</span></div><div class="line" id="000924"><span class="nick" style="color:#6d2462"><a href="#000924" label="[00:09:24]">&lt;oriansj&gt;</a></span><span class="message">My long term plan is to make Knight hardware real again.</span></div><div class="line" id="000942"><span class="nick" style="color:#6d2462"><a href="#000942" label="[00:09:42]">&lt;oriansj&gt;</a></span><span class="message">and then you can use that to build up any architecture you desire.</span></div><div class="line" id="001028"><span class="nick" style="color:#6d2462"><a href="#001028" label="[00:10:28]">&lt;oriansj&gt;</a></span><span class="message">and once you get up to icestorm and then you can just program FPGAs you trust or wait until libresilicon produces FPGAs</span></div><div class="line" id="001250"><span class="nick" style="color:#6d2462"><a href="#001250" label="[00:12:50]">&lt;oriansj&gt;</a></span><span class="message">or we could build on Sam Zeloof's work and build gates at home for the core logic and buy old core RAM off ebay</span></div><div class="line" id="005237"><span class="nick" style="color:#8dd3c7"><a href="#005237" label="[00:52:37]">&lt;aggi&gt;</a></span><span class="message">i remember General Electric and NASA reported similar problems, the latter dumpster diving for i8086 spare parts on ebay</span></div><div class="line" id="005248"><span class="nick" style="color:#8dd3c7"><a href="#005248" label="[00:52:48]">&lt;aggi&gt;</a></span><span class="message">and GE relying on weird emulators for their PDP-11 stuff</span></div><div class="line" id="005255"><span class="nick" style="color:#8dd3c7"><a href="#005255" label="[00:52:55]">&lt;aggi&gt;</a></span><span class="message">inside nuclear plants</span></div><div class="line" id="005333"><span class="nick" style="color:#8dd3c7"><a href="#005333" label="[00:53:33]">&lt;aggi&gt;</a></span><span class="message">among German Railway, i followed other stories of several total outages, since when their X.25 signalling moved onto some virtualized networking</span></div><div class="line" id="005359"><span class="nick" style="color:#8dd3c7"><a href="#005359" label="[00:53:59]">&lt;aggi&gt;</a></span><span class="message">X.25 and access to _all_ OSI networking layers down to physical and link layer is another aspect of this</span></div><div class="line" id="005445"><span class="nick" style="color:#8dd3c7"><a href="#005445" label="[00:54:45]">&lt;aggi&gt;</a></span><span class="message">direwolf, implemented some software-modem stuff, for this, it's written in C at least, with CMake(c++) build-system clutter around it</span></div><div class="line" id="005504"><span class="nick" style="color:#8dd3c7"><a href="#005504" label="[00:55:04]">&lt;aggi&gt;</a></span><span class="message">linux-kernels to retained some X.25 stuff</span></div><div class="line" id="005646"><span class="nick" style="color:#8dd3c7"><a href="#005646" label="[00:56:46]">&lt;aggi&gt;</a></span><span class="message">and with posix 32bit, year2038,... that's another todo, with a roll-back to linux-2.x/x86</span></div><div class="line" id="005659"><span class="nick" style="color:#8dd3c7"><a href="#005659" label="[00:56:59]">&lt;aggi&gt;</a></span><span class="message">it's just too much</span></div><div class="line" id="005854"><span class="nick" style="color:#8dd3c7"><a href="#005854" label="[00:58:54]">&lt;aggi&gt;</a></span><span class="message">few days ago, just another job placement letter of mine was rejected... so why would i care?</span></div><div class="line" id="011713"><span class="nick" style="color:#6d2462"><a href="#011713" label="[01:17:13]">&lt;oriansj&gt;</a></span><span class="message">well those cases tend to have more to due with certification processes and their associated costs</span></div><div class="line" id="011912"><span class="nick" style="color:#6d2462"><a href="#011912" label="[01:19:12]">&lt;oriansj&gt;</a></span><span class="message">businesses with shareholders tend to only get away with crazy shit if they can justify it as improving future profits. Bootstrapping and needing old hardware for trust tends to be more of a military thing.</span></div><div class="line" id="012054"><span class="nick" style="color:#6d2462"><a href="#012054" label="[01:20:54]">&lt;oriansj&gt;</a></span><span class="message">Most crypto-businesses barely get past reproducible builds and only because of dongcarl did bitcoin actually get an actual bootstrappable chain of trust via Guix.</span></div><div class="line" id="014124"><span class="nick" style="color:#389600"><a href="#014124" label="[01:41:24]">&lt;stikonas&gt;</a></span><span class="message">yeah, don't expect to see bootstrappable builds in businesses</span></div><div class="line" id="014204"><span class="nick" style="color:#389600"><a href="#014204" label="[01:42:04]">&lt;stikonas&gt;</a></span><span class="message">even reproducible builds are often not there</span></div><div class="line" id="014236"><span class="nick" style="color:#389600"><a href="#014236" label="[01:42:36]">&lt;stikonas&gt;</a></span><span class="message">sometimes people there want reproducible builds but various obstacles are in a way</span></div><div class="line" id="014457"><span class="nick" style="color:#3c5b35"><a href="#014457" label="[01:44:57]">&lt;vagrantc&gt;</a></span><span class="message">yeah ...</span></div><div class="line" id="044527"><span class="nick" style="color:#6d2462"><a href="#044527" label="[04:45:27]">&lt;oriansj&gt;</a></span><span class="message">eventually one has to sit down and honestly figure out what level of bootstrap they can trust. Some people find off the shelf Linux distros are fine. Others use live-bootstrap. A handful crazies hit hex0. Even fewer will design their own hardware on FPGA/Individual gates/Individual transistors. Because if you can't do that you'll end up spending a day reading: <a rel="nofollow" href="https://www.dbc.wroc.pl/Content/2070/Drzymala_mineral.pdf">https://www.dbc.wroc.pl/Content/2070/Drzymala_mineral.pdf</a>  and trying to</span></div><div class="line" id="044528"><span class="nick" style="color:#6d2462"><a href="#044528" label="[04:45:28]">&lt;oriansj&gt;</a></span><span class="message">figure out how to get the yield for Molybdenite from porphyry deposits to 3.8% so that the lead bath separation becomes something that you could skip as your budget isn't unlimited.</span></div><div class="line" id="044723"><span class="nick" style="color:#6b8072"><a href="#044723" label="[04:47:23]">&lt;muurkha&gt;</a></span><span class="message">that sounds like fun</span></div><div class="line" id="044735"><span class="nick" style="color:#6b8072"><a href="#044735" label="[04:47:35]">&lt;muurkha&gt;</a></span><span class="message">but can you maybe get away without molybdenum?</span></div><div class="line" id="044827"><span class="nick" style="color:#6d2462"><a href="#044827" label="[04:48:27]">&lt;oriansj&gt;</a></span><span class="message">muurkha: depends on if you want to buy or build your own optics for photolithography</span></div><div class="line" id="044920"><span class="nick" style="color:#6b8072"><a href="#044920" label="[04:49:20]">&lt;muurkha&gt;</a></span><span class="message">why optics?</span></div><div class="line" id="045116"><span class="nick" style="color:#6d2462"><a href="#045116" label="[04:51:16]">&lt;oriansj&gt;</a></span><span class="message">well it appears required for the making of glass of the grade required to do sub 900nm lithography</span></div><div class="line" id="045204"><span class="nick" style="color:#6b8072"><a href="#045204" label="[04:52:04]">&lt;muurkha&gt;</a></span><span class="message">you could use mirrors or, if you're using a single wavelength, holographic optics</span></div><div class="line" id="045422"><span class="nick" style="color:#6d2462"><a href="#045422" label="[04:54:22]">&lt;oriansj&gt;</a></span><span class="message">well if you are willing to do the slow route, I believe you can do single atom etching but then it'll take years to make a single wafer</span></div><div class="line" id="045446"><span class="nick" style="color:#6b8072"><a href="#045446" label="[04:54:46]">&lt;muurkha&gt;</a></span><span class="message">FIB etching?  yeah, but not years, days</span></div><div class="line" id="045500"><span class="nick" style="color:#6b8072"><a href="#045500" label="[04:55:00]">&lt;muurkha&gt;</a></span><span class="message">also by &quot;sub 900nm&quot; do you mean longer wavelengths than 900 nm, like, further from visible?  because usually &quot;sub&quot; means &quot;less than&quot;, and regular visible light is less than 900 nm in wavelength</span></div><div class="line" id="045520"><span class="nick" style="color:#6b8072"><a href="#045520" label="[04:55:20]">&lt;muurkha&gt;</a></span><span class="message">and ordinary soda-lime glass or lead glass work pretty well for visible-light optics</span></div><div class="line" id="045530"><span class="nick" style="color:#6d2462"><a href="#045530" label="[04:55:30]">&lt;oriansj&gt;</a></span><span class="message">muurkha: I was thinking of the lower tech version which one could build at home; speed is a good deal slower</span></div><div class="line" id="045555"><span class="nick" style="color:#6b8072"><a href="#045555" label="[04:55:55]">&lt;muurkha&gt;</a></span><span class="message">I do know someone with a FIB machine in his garage</span></div><div class="line" id="045614"><span class="nick" style="color:#6d2462"><a href="#045614" label="[04:56:14]">&lt;oriansj&gt;</a></span><span class="message">neat</span></div><div class="line" id="045832"><span class="nick" style="color:#6d2462"><a href="#045832" label="[04:58:32]">&lt;oriansj&gt;</a></span><span class="message">not to be confused with: Proton beam writing</span></div><div class="line" id="050135"><span class="nick" style="color:#6d2462"><a href="#050135" label="[05:01:35]">&lt;oriansj&gt;</a></span><span class="message">although refining tungsten to make a needle for liquid metal ion source generation doesn't sound like an easier problem to solve.</span></div><div class="line" id="050333"><span class="nick" style="color:#6b8072"><a href="#050333" label="[05:03:33]">&lt;muurkha&gt;</a></span><span class="message">tungsten is a pretty important thing to be able to refine</span></div><div class="line" id="050400"><span class="nick" style="color:#6b8072"><a href="#050400" label="[05:04:00]">&lt;muurkha&gt;</a></span><span class="message">it's one of those extreme substances: very hard, very dense, very refractory</span></div><div class="line" id="050429"><span class="nick" style="color:#6b8072"><a href="#050429" label="[05:04:29]">&lt;muurkha&gt;</a></span><span class="message">I think the standard process reduces WO₃?</span></div><div class="line" id="050456"><span class="nick" style="color:#6d2462"><a href="#050456" label="[05:04:56]">&lt;oriansj&gt;</a></span><span class="message">well it is usually  collected from Wolframite (Fe,Mn)WO4 in skarns and in porphyry along with sulphide minerals</span></div><div class="line" id="050532"><span class="nick" style="color:#6b8072"><a href="#050532" label="[05:05:32]">&lt;muurkha&gt;</a></span><span class="message">right, but to separate the tungsten I think it goes through a WO₃ stage, and that's what's mostly sold from the mines I think</span></div><div class="line" id="050611"><span class="nick" style="color:#6d2462"><a href="#050611" label="[05:06:11]">&lt;oriansj&gt;</a></span><span class="message">well not the mines but the first phase processing companies</span></div><div class="line" id="050700"><span class="nick" style="color:#6d2462"><a href="#050700" label="[05:07:00]">&lt;oriansj&gt;</a></span><span class="message">as most ore deposits are no where close to the commercial grade one would want in a smelting process.</span></div><div class="line" id="050746"><span class="nick" style="color:#6b8072"><a href="#050746" label="[05:07:46]">&lt;muurkha&gt;</a></span><span class="message">I see</span></div><div class="line" id="050827"><span class="nick" style="color:#6b8072"><a href="#050827" label="[05:08:27]">&lt;muurkha&gt;</a></span><span class="message">what I don't know is how you separate the leachate from the ore into tungstates and other materials</span></div><div class="line" id="050848"><span class="nick" style="color:#6d2462"><a href="#050848" label="[05:08:48]">&lt;oriansj&gt;</a></span><span class="message">it gets crushed, separated and refined to bulk grade which is then sold and depending on the target metal either gets further refined or used as is.</span></div><div class="line" id="050951"><span class="nick" style="color:#6d2462"><a href="#050951" label="[05:09:51]">&lt;oriansj&gt;</a></span><span class="message">usually by physical properties such as density, grain size, etc</span></div><div class="line" id="051017"><span class="nick" style="color:#6b8072"><a href="#051017" label="[05:10:17]">&lt;muurkha&gt;</a></span><span class="message">because if you crush some skarn and leach it with hydrochloric acid you're going to dissolve a lot of other things that don't have tungsten in them</span></div><div class="line" id="051137"><span class="nick" style="color:#6d2462"><a href="#051137" label="[05:11:37]">&lt;oriansj&gt;</a></span><span class="message">chemical separation is more expensive than just simply separating the bits that float in oil and those that sink given the target specific density</span></div><div class="line" id="051225"><span class="nick" style="color:#6d2462"><a href="#051225" label="[05:12:25]">&lt;oriansj&gt;</a></span><span class="message">The exact optimal path to isolation is crazy specific as far as I can tell.</span></div><div class="line" id="051248"><span class="nick" style="color:#6b8072"><a href="#051248" label="[05:12:48]">&lt;muurkha&gt;</a></span><span class="message">oh, so froth flotation gets you most of the way to pure wolframite?</span></div><div class="line" id="051255"><span class="nick" style="color:#6d2462"><a href="#051255" label="[05:12:55]">&lt;oriansj&gt;</a></span><span class="message">There are whole volumes based on the properties of just a single rock and how to separate it from things it is commonly found with.</span></div><div class="line" id="051319"><span class="nick" style="color:#6b8072"><a href="#051319" label="[05:13:19]">&lt;muurkha&gt;</a></span><span class="message">and I guess you can probably leach wolframite with lye and leave insoluble hydroxides of iron and manganese behind</span></div><div class="line" id="051358"><span class="nick" style="color:#6d2462"><a href="#051358" label="[05:13:58]">&lt;oriansj&gt;</a></span><span class="message">well I don't know the  exact steps off the top of my head but possibly</span></div><div class="line" id="051559"><span class="nick" style="color:#6d2462"><a href="#051559" label="[05:15:59]">&lt;oriansj&gt;</a></span><span class="message">one has to remember, depending on the makeup of the waste material in the ore, there are different methods which are more efficient to extract that which you want.</span></div><div class="line" id="051722"><span class="nick" style="color:#6d2462"><a href="#051722" label="[05:17:22]">&lt;oriansj&gt;</a></span><span class="message">and there are good reasons why one would want a whole team of specialists just to cover the extraction of just a handful of core elements.</span></div><div class="line" id="051906"><span class="nick" style="color:#6d2462"><a href="#051906" label="[05:19:06]">&lt;oriansj&gt;</a></span><span class="message">If nothing else, a deep look at what is actually required to just get the basics needed to make individual transistors; makes one appreciate and value the huge volume of services provided by civilization at such cheap prices.</span></div><div class="line" id="051947"><span class="nick" style="color:#6b8072"><a href="#051947" label="[05:19:47]">&lt;muurkha&gt;</a></span><span class="message">there's a tradeoff between efficiency and simplicity</span></div><div class="line" id="052108"><span class="nick" style="color:#6d2462"><a href="#052108" label="[05:21:08]">&lt;oriansj&gt;</a></span><span class="message">sometimes</span></div><div class="line" id="052200"><span class="nick" style="color:#6b8072"><a href="#052200" label="[05:22:00]">&lt;muurkha&gt;</a></span><span class="message">usually :)</span></div><div class="line" id="052219"><span class="nick" style="color:#6d2462"><a href="#052219" label="[05:22:19]">&lt;oriansj&gt;</a></span><span class="message">sometimes the simple method is efficient enough that is just the process used. Eg Bauxite Al(OH)3 for Aluminum extraction</span></div><div class="line" id="052252"><span class="nick" style="color:#6b8072"><a href="#052252" label="[05:22:52]">&lt;muurkha&gt;</a></span><span class="message">but people have been extracting tungsten on an industrial basis for something like 150 years, so you can do it with 150-year-old knowledge</span></div><div class="line" id="052314"><span class="nick" style="color:#6b8072"><a href="#052314" label="[05:23:14]">&lt;muurkha&gt;</a></span><span class="message">you probably couldn't be economically competitive with those methods today, and they might not be acceptably safe</span></div><div class="line" id="052331"><span class="nick" style="color:#6b8072"><a href="#052331" label="[05:23:31]">&lt;muurkha&gt;</a></span><span class="message">bauxite as found on the ground has impurities too</span></div><div class="line" id="052336"><span class="nick" style="color:#6d2462"><a href="#052336" label="[05:23:36]">&lt;oriansj&gt;</a></span><span class="message">if you have a copy of that 150-year-old knowledge and know how to understand it</span></div><div class="line" id="052338"><span class="nick" style="color:#6b8072"><a href="#052338" label="[05:23:38]">&lt;muurkha&gt;</a></span><span class="message">that's why the red mud problem exists</span></div><div class="line" id="052415"><span class="nick" style="color:#6b8072"><a href="#052415" label="[05:24:15]">&lt;muurkha&gt;</a></span><span class="message">yes, but what I mean is, refining tungsten doesn't depend on all the stuff discovered in the 20th century to work at all</span></div><div class="line" id="052612"><span class="nick" style="color:#6b8072"><a href="#052612" label="[05:26:12]">&lt;muurkha&gt;</a></span><span class="message">there are some pretty generic purification procedures that will work on most materials</span></div><div class="line" id="052657"><span class="nick" style="color:#6d2462"><a href="#052657" label="[05:26:57]">&lt;oriansj&gt;</a></span><span class="message">I get that point; I was more towards computers are a product of only very social civilizations.</span></div><div class="line" id="052659"><span class="nick" style="color:#6b8072"><a href="#052659" label="[05:26:59]">&lt;muurkha&gt;</a></span><span class="message">like, you can dissolve them in nitric or hydrochloric acid, neutralize the acid with lye, then recrystallize the nitrate or chloride of the metal</span></div><div class="line" id="052735"><span class="nick" style="color:#6b8072"><a href="#052735" label="[05:27:35]">&lt;muurkha&gt;</a></span><span class="message">well, so far computers are only a product of one civilization</span></div><div class="line" id="052752"><span class="nick" style="color:#6b8072"><a href="#052752" label="[05:27:52]">&lt;muurkha&gt;</a></span><span class="message">it happened to be very social, so it makes them in a very social way</span></div><div class="line" id="052918"><span class="nick" style="color:#6d2462"><a href="#052918" label="[05:29:18]">&lt;oriansj&gt;</a></span><span class="message">and I don't know of a non-social way to get even a fraction of the way to a VIC-20</span></div><div class="line" id="053020"><span class="nick" style="color:#6b8072"><a href="#053020" label="[05:30:20]">&lt;muurkha&gt;</a></span><span class="message">it's hard to imagine a non-social way to even survive in the wild</span></div><div class="line" id="053051"><span class="nick" style="color:#6b8072"><a href="#053051" label="[05:30:51]">&lt;muurkha&gt;</a></span><span class="message">a few people have done it, like the Man of the Hole, or Alexander Selkirk</span></div><div class="line" id="053053"><span class="nick" style="color:#6d2462"><a href="#053053" label="[05:30:53]">&lt;oriansj&gt;</a></span><span class="message">to refine ore (literally any of them) while defending from outside parties</span></div><div class="line" id="053054"><span class="nick" style="color:#6b8072"><a href="#053054" label="[05:30:54]">&lt;muurkha&gt;</a></span><span class="message">or Ishi</span></div><div class="line" id="053149"><span class="nick" style="color:#6b8072"><a href="#053149" label="[05:31:49]">&lt;muurkha&gt;</a></span><span class="message">but if you somehow have basic survival covered, John Plant has succeeded in refining iron from ore in only a few years from scratch</span></div><div class="line" id="053248"><span class="nick" style="color:#6b8072"><a href="#053248" label="[05:32:48]">&lt;muurkha&gt;</a></span><span class="message">A mechanical computer device might count as a fraction of the way to a VIC-20, even if it could only be clocked at 100 Hz, no?</span></div><div class="line" id="053405"><span class="nick" style="color:#6d2462"><a href="#053405" label="[05:34:05]">&lt;oriansj&gt;</a></span><span class="message">hmmm depending on how you define a fraction in the context, there are paper computers that are turing complete</span></div><div class="line" id="053405"><span class="nick" style="color:#6b8072"><a href="#053405" label="[05:34:05]">&lt;muurkha&gt;</a></span><span class="message">you can build a relatively conventional bit-serial CPU in something like 700 NAND gates, and there are plausible mechanical computing devices that work in higher radices</span></div><div class="line" id="053451"><span class="nick" style="color:#6d2462"><a href="#053451" label="[05:34:51]">&lt;oriansj&gt;</a></span><span class="message">granted</span></div><div class="line" id="053522"><span class="nick" style="color:#6d2462"><a href="#053522" label="[05:35:22]">&lt;oriansj&gt;</a></span><span class="message">I was thinking more Dr Stone reboot but completely alone; how far could one really get.</span></div><div class="line" id="053646"><span class="nick" style="color:#6b8072"><a href="#053646" label="[05:36:46]">&lt;muurkha&gt;</a></span><span class="message">Dr. Stone is not intended to be realistic</span></div><div class="line" id="053702"><span class="nick" style="color:#6d2462"><a href="#053702" label="[05:37:02]">&lt;oriansj&gt;</a></span><span class="message">agreed</span></div><div class="line" id="053719"><span class="nick" style="color:#6b8072"><a href="#053719" label="[05:37:19]">&lt;muurkha&gt;</a></span><span class="message">I think you could probably build a mechanical computer with 128 moving parts, not counting the memory</span></div><div class="line" id="053731"><span class="nick" style="color:#6d2462"><a href="#053731" label="[05:37:31]">&lt;oriansj&gt;</a></span><span class="message">but as a thought experiment to the question of how much could one achieve on that path entirely alone</span></div><div class="line" id="053824"><span class="nick" style="color:#6d2462"><a href="#053824" label="[05:38:24]">&lt;oriansj&gt;</a></span><span class="message">well one would have to build the tools to build the tools to build the parts</span></div><div class="line" id="053847"><span class="nick" style="color:#6d2462"><a href="#053847" label="[05:38:47]">&lt;oriansj&gt;</a></span><span class="message">and making a screw is a very hard thing to do by hand.</span></div><div class="line" id="053912"><span class="nick" style="color:#6b8072"><a href="#053912" label="[05:39:12]">&lt;muurkha&gt;</a></span><span class="message">yeah, that's what's interesting about Plant's experiment</span></div><div class="line" id="053921"><span class="nick" style="color:#6b8072"><a href="#053921" label="[05:39:21]">&lt;muurkha&gt;</a></span><span class="message">I don't think it is, actually</span></div><div class="line" id="054003"><span class="nick" style="color:#6b8072"><a href="#054003" label="[05:40:03]">&lt;muurkha&gt;</a></span><span class="message">I mean it depends on your starting point, but a wire plus a dowel gives you a screw</span></div><div class="line" id="054102"><span class="nick" style="color:#6d2462"><a href="#054102" label="[05:41:02]">&lt;oriansj&gt;</a></span><span class="message">well a dowl depends on a lathe</span></div><div class="line" id="054131"><span class="nick" style="color:#6b8072"><a href="#054131" label="[05:41:31]">&lt;muurkha&gt;</a></span><span class="message">yes, and a wire probalby depends on drawing dies</span></div><div class="line" id="054148"><span class="nick" style="color:#6b8072"><a href="#054148" label="[05:41:48]">&lt;muurkha&gt;</a></span><span class="message">you wrap the wire around the dowel in a helix; the wire thickness sets the thread pitch</span></div><div class="line" id="054237"><span class="nick" style="color:#6b8072"><a href="#054237" label="[05:42:37]">&lt;muurkha&gt;</a></span><span class="message">once you have one screw, you can use it to make more screws with the same pitch pretty easily</span></div><div class="line" id="054239"><span class="nick" style="color:#6d2462"><a href="#054239" label="[05:42:39]">&lt;oriansj&gt;</a></span><span class="message">you also had to have pulled the wire to approximately a uniform thickness</span></div><div class="line" id="054249"><span class="nick" style="color:#6b8072"><a href="#054249" label="[05:42:49]">&lt;muurkha&gt;</a></span><span class="message">drawing dies make sure the thickness is uniform</span></div><div class="line" id="054302"><span class="nick" style="color:#6b8072"><a href="#054302" label="[05:43:02]">&lt;muurkha&gt;</a></span><span class="message">the size of the hole in the last die</span></div><div class="line" id="054327"><span class="nick" style="color:#6b8072"><a href="#054327" label="[05:43:27]">&lt;muurkha&gt;</a></span><span class="message">lathes date back to at least Old Kingdom Egypt; Grandpa Amu demonstrated how to build one out of wood</span></div><div class="line" id="054343"><span class="nick" style="color:#6b8072"><a href="#054343" label="[05:43:43]">&lt;muurkha&gt;</a></span><span class="message">are you familiar with Grandpa Amu's woodworking videos?</span></div><div class="line" id="054350"><span class="nick" style="color:#6b8072"><a href="#054350" label="[05:43:50]">&lt;muurkha&gt;</a></span><span class="message">you'd probably enjoy them</span></div><div class="line" id="054401"><span class="nick" style="color:#6d2462"><a href="#054401" label="[05:44:01]">&lt;oriansj&gt;</a></span><span class="message">nope; never heardof them before</span></div><div class="line" id="054421"><span class="nick" style="color:#6b8072"><a href="#054421" label="[05:44:21]">&lt;muurkha&gt;</a></span><span class="message">I think he uploaded them originally to Youku but they're on YouTube now too</span></div><div class="line" id="054600"><span class="nick" style="color:#6d2462"><a href="#054600" label="[05:46:00]">&lt;oriansj&gt;</a></span><span class="message">I'll add it to my queue</span></div><div class="line" id="054913"><span class="nick" style="color:#6b8072"><a href="#054913" label="[05:49:13]">&lt;muurkha&gt;</a></span><span class="message">they're relaxing, similar to Primitive Technology</span></div><div class="line" id="054932"><span class="nick" style="color:#6b8072"><a href="#054932" label="[05:49:32]">&lt;muurkha&gt;</a></span><span class="message">not exciting and engaging like How To Make Everything or Real Engineering</span></div><div class="line" id="055246"><span class="nick" style="color:#6d2462"><a href="#055246" label="[05:52:46]">&lt;oriansj&gt;</a></span><span class="message">the problem of too much good content out there</span></div><div class="line" id="055258"><span class="nick" style="color:#6d2462"><a href="#055258" label="[05:52:58]">&lt;oriansj&gt;</a></span><span class="message">hard to find the gems</span></div><div class="line" id="061615"><span class="nick" style="color:#6b8072"><a href="#061615" label="[06:16:15]">&lt;muurkha&gt;</a></span><span class="message">memory and reliability are problems</span></div><div class="line" id="061744"><span class="nick" style="color:#6b8072"><a href="#061744" label="[06:17:44]">&lt;muurkha&gt;</a></span><span class="message">electricity helps a lot because it allows your computing device to run 30 times faster at a given scale and power budget</span></div><div class="line" id="061912"><span class="nick" style="color:#6b8072"><a href="#061912" label="[06:19:12]">&lt;muurkha&gt;</a></span><span class="message">but it's totally plausible that you could build a mechanical computer out of spiderwebs that would run at several MHz, for example, as fast as TTL</span></div><div class="line" id="070222"><span class="nick" style="color:#af8d2f"><a href="#070222" label="[07:02:22]">&lt;fossy&gt;</a></span><span class="message">rickmasters: is there anything else *you* think is missing from #272 before merge (I am reviewing right now)?</span></div><div class="line" id="070249"><span class="nick" style="color:#af8d2f"><a href="#070249" label="[07:02:49]">&lt;fossy&gt;</a></span><span class="message">obviously, sysa -&gt; sysb is still missing, i haven't decided on whether i think that should be needed before merge</span></div><div class="line" id="070308"><span class="nick" style="color:#af8d2f"><a href="#070308" label="[07:03:08]">&lt;fossy&gt;</a></span><span class="message">(leaning towards no, and using a reboot instead in the interim)</span></div><div class="line" id="070321"><span class="nick" style="color:#af8d2f"><a href="#070321" label="[07:03:21]">&lt;fossy&gt;</a></span><span class="message">(but before 1.0 release, add kexec)</span></div><div class="line" id="124735"><span class="nick" style="color:#bc80bd"><a href="#124735" label="[12:47:35]">&lt;gforce_de1977&gt;</a></span><span class="message">aggi: U880 - <a rel="nofollow" href="https://en.wikipedia.org/wiki/U880">https://en.wikipedia.org/wiki/U880</a>  - i know a now ~50 years old woman in my hometown which was involved in cloning / dissecting / reverse-engineering the Z80 line by line - maybe she can explain me some more details</span></div><div class="line" id="130421"><span class="nick" style="color:#bc80bd"><a href="#130421" label="[13:04:21]">&lt;gforce_de1977&gt;</a></span><span class="message">aggi: are you from germany? (i just ask because of a job offer, i work remotely as sysadmin for a company in hamburg)</span></div><div class="line" id="131851"><span class="nick" style="color:#6d2462"><a href="#131851" label="[13:18:51]">&lt;oriansj&gt;</a></span><span class="message">muurkha: spider webs would be a new one for me; I've seen the crab based computer though.</span></div><div class="line" id="131914"><span class="nick" style="color:#234e69"><a href="#131914" label="[13:19:14]">&lt;rickmasters&gt;</a></span><span class="message">fossy: thank you for reviewing <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/272">https://github.com/fosslinux/live-bootstrap/pull/272</a> </span></div><div class="line" id="132131"><span class="nick" style="color:#234e69"><a href="#132131" label="[13:21:31]">&lt;rickmasters&gt;</a></span><span class="message">fossy: as mentioned in the Issue, the checksumming fixes revealed that the checksums of the tcc-0.9.26 binaries are different under builder-hex0</span></div><div class="line" id="132235"><span class="nick" style="color:#234e69"><a href="#132235" label="[13:22:35]">&lt;rickmasters&gt;</a></span><span class="message">so, that's the biggest remaining problem to resolve before merge.</span></div><div class="line" id="140750"><span class="nick" style="color:#6b8072"><a href="#140750" label="[14:07:50]">&lt;muurkha&gt;</a></span><span class="message">oriansj: crab-based computer?</span></div><div class="line" id="141018"><span class="nick" style="color:#6b8072"><a href="#141018" label="[14:10:18]">&lt;muurkha&gt;</a></span><span class="message">spider silk is typically 1–5μm in diameter; Willard Wigan has used it in his sculptures when he needs thin ropes</span></div><div class="line" id="170424"><span class="nick" style="color:#234e69"><a href="#170424" label="[17:04:24]">&lt;rickmasters&gt;</a></span><span class="message">fossy: I've resolved the checksum differences.</span></div><div class="line" id="170457"><span class="nick" style="color:#234e69"><a href="#170457" label="[17:04:57]">&lt;rickmasters&gt;</a></span><span class="message">The builder-hex0 kernel was returning the current directory with a trailing slash which ended up in the debug strings of tcc-0.9.26</span></div><div class="line" id="170648"><span class="nick" style="color:#234e69"><a href="#170648" label="[17:06:48]">&lt;rickmasters&gt;</a></span><span class="message">All tcc-0.9.26 stages are compiled with -g so it was only an issue for those binaries.</span></div><div class="line" id="170752"><span class="nick" style="color:#234e69"><a href="#170752" label="[17:07:52]">&lt;rickmasters&gt;</a></span><span class="message">Anyway I'll try to provide an update to the PR soon, including your other feedback as well.</span></div><div class="line" id="175757"><span class="nick" style="color:#d9d9d9"><a href="#175757" label="[17:57:57]">&lt;stikonas[m]&gt;</a></span><span class="message">Removing -g might have been simpler...</span></div><div class="line" id="181619"><span class="nick" style="color:#234e69"><a href="#181619" label="[18:16:19]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: Oh definitely but fixing builder-hex0 felt like the right thing to do to avoid any future problems.</span></div><div class="line" id="181655"><span class="nick" style="color:#389600"><a href="#181655" label="[18:16:55]">&lt;stikonas&gt;</a></span><span class="message">yeah, longer term your solution is better...</span></div><div class="line" id="181708"><span class="nick" style="color:#389600"><a href="#181708" label="[18:17:08]">&lt;stikonas&gt;</a></span><span class="message">I also want to try to see if I can get tcc to output trampoline code...</span></div><div class="line" id="181712"><span class="nick" style="color:#389600"><a href="#181712" label="[18:17:12]">&lt;stikonas&gt;</a></span><span class="message">testing some stuff now</span></div><div class="line" id="182607"><span class="nick" style="color:#389600"><a href="#182607" label="[18:26:07]">&lt;stikonas&gt;</a></span><span class="message">maybe tcc can't do that...</span></div><div class="line" id="183258"><span class="nick" style="color:#389600"><a href="#183258" label="[18:32:58]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: mayeb we should coordinate with janneke regarding base address?</span></div><div class="line" id="183313"><span class="nick" style="color:#389600"><a href="#183313" label="[18:33:13]">&lt;stikonas&gt;</a></span><span class="message">it would make things simpler if we didn't have to patch it\</span></div><div class="line" id="183413"><span class="nick" style="color:#234e69"><a href="#183413" label="[18:34:13]">&lt;rickmasters&gt;</a></span><span class="message">yes, that should be upstreamed</span></div><div class="line" id="183434"><span class="nick" style="color:#389600"><a href="#183434" label="[18:34:34]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: I've left another comment, it should be possible to use alias for tcc</span></div><div class="line" id="183443"><span class="nick" style="color:#389600"><a href="#183443" label="[18:34:43]">&lt;stikonas&gt;</a></span><span class="message">rather than using very long build lines over and over again...</span></div><div class="line" id="183743"><span class="nick" style="color:#234e69"><a href="#183743" label="[18:37:43]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: oh that would be great. I tried using a master variable but failed. I'll try alias</span></div><div class="line" id="184016"><span class="nick" style="color:#389600"><a href="#184016" label="[18:40:16]">&lt;stikonas&gt;</a></span><span class="message">yes, I've added alias to kaem after I got tired of huge walls of text when building mes</span></div><div class="line" id="184110"><span class="nick" style="color:#389600"><a href="#184110" label="[18:41:10]">&lt;stikonas&gt;</a></span><span class="message">it's only supported by full kaem (not kaem-minimal) but that should be fine</span></div><div class="line" id="204211"><span class="nick" style="color:#6d2462"><a href="#204211" label="[20:42:11]">&lt;oriansj&gt;</a></span><span class="message">muurkha: <a rel="nofollow" href="https://hackaday.com/2012/09/28/making-logic-gates-out-of-crabs/">https://hackaday.com/2012/09/28/making-logic-gates-out-of-crabs/</a> </span></div><div class="line" id="204243"><span class="nick" style="color:#6d2462"><a href="#204243" label="[20:42:43]">&lt;oriansj&gt;</a></span><span class="message">one only needs about 16 Billion crabs to play doom</span></div><div class="line" id="005855"><span class="nick" style="color:#389600"><a href="#005855" label="[00:58:55]">&lt;stikonas&gt;</a></span><span class="message">hmm, I'v</span></div><div class="line" id="005903"><span class="nick" style="color:#389600"><a href="#005903" label="[00:59:03]">&lt;stikonas&gt;</a></span><span class="message">I've managed to get as to segfault...</span></div><div class="line" id="010518"><span class="nick" style="color:#389600"><a href="#010518" label="[01:05:18]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://stikonas.eu/files/cc_x86.S">https://stikonas.eu/files/cc_x86.S</a>  seems to crash it (it's not a valid GAS file but still)</span></div><div class="line" id="025442"><span class="nick" style="color:#6d2462"><a href="#025442" label="[02:54:42]">&lt;oriansj&gt;</a></span><span class="message">well if cc_x86.S crashes an assembler, you don't have much to go to reduce that crash to a tiny test</span></div><div class="line" id="032230"><span class="nick" style="color:#d9d9d9"><a href="#032230" label="[03:22:30]">&lt;stikonas[m]&gt;</a></span><span class="message">I can probably make it abit smaller</span></div><div class="line" id="032242"><span class="nick" style="color:#d9d9d9"><a href="#032242" label="[03:22:42]">&lt;stikonas[m]&gt;</a></span><span class="message">We'll see tomorrow...</span></div><div class="line" id="032259"><span class="nick" style="color:#d9d9d9"><a href="#032259" label="[03:22:59]">&lt;stikonas[m]&gt;</a></span><span class="message">Then I can report it to bugzilla</span></div><div class="line" id="032412"><span class="nick" style="color:#d9d9d9"><a href="#032412" label="[03:24:12]">&lt;stikonas[m]&gt;</a></span><span class="message">Having a tiny test to submit would be better...</span></div><div class="line" id="040235"><span class="nick" style="color:#6b8072"><a href="#040235" label="[04:02:35]">&lt;muurkha&gt;</a></span><span class="message">oriansj: aha</span></div><div class="line" id="040333"><span class="nick" style="color:#af8d2f"><a href="#040333" label="[04:03:33]">&lt;fossy&gt;</a></span><span class="message">yeah, assemblers shouldnt segfault on bad code..</span></div><div class="line" id="040344"><span class="nick" style="color:#6b8072"><a href="#040344" label="[04:03:44]">&lt;muurkha&gt;</a></span><span class="message">or good code either</span></div><div class="line" id="040351"><span class="nick" style="color:#6b8072"><a href="#040351" label="[04:03:51]">&lt;muurkha&gt;</a></span><span class="message">but that's less controversial usually</span></div><div class="line" id="040357"><span class="nick" style="color:#af8d2f"><a href="#040357" label="[04:03:57]">&lt;fossy&gt;</a></span><span class="message">:D</span></div><div class="line" id="040416"><span class="nick" style="color:#6b8072"><a href="#040416" label="[04:04:16]">&lt;muurkha&gt;</a></span><span class="message">oriansj: they didn't make a not gate, or even an and-not (abjunction) gate</span></div><div class="line" id="040814"><span class="nick" style="color:#6b8072"><a href="#040814" label="[04:08:14]">&lt;muurkha&gt;</a></span><span class="message">(abjunction is &quot;falsehood-preserving&quot; in the sense that if all the inputs to a circuit made out of abjunction gates are false, the output will always be false, which is a convenient property in cases like this where the alternative would be to manufacture crabs out of nothing; nevertheless in the presence of a source of truth it's just as functionally complete as nand or nor)</span></div><div class="line" id="041856"><span class="nick" style="color:#6d2462"><a href="#041856" label="[04:18:56]">&lt;oriansj&gt;</a></span><span class="message">well a crab  spawning circuit is probably more complex than a silicon transistor</span></div><div class="line" id="042714"><span class="nick" style="color:#6b8072"><a href="#042714" label="[04:27:14]">&lt;muurkha&gt;</a></span><span class="message">perhaps less reliable too</span></div><div class="line" id="223742"><span class="nick" style="color:#8dd3c7"><a href="#223742" label="[22:37:42]">&lt;aggi&gt;</a></span><span class="message">so, decided to take the route of tccboot quickly, and picked v0.9.27 for this... surprise... the headers/defines changed since v0.9.22 which complicates this further</span></div><div class="line" id="224055"><span class="nick" style="color:#8dd3c7"><a href="#224055" label="[22:40:55]">&lt;aggi&gt;</a></span><span class="message">tccboot-0.1 is not compatible with tcc-0.9.27; this isn't a problem which couldn't be solved, it just complicates the test-setup considerably, and the amount of test-cases to verify</span></div><div class="line" id="225331"><span class="nick" style="color:#8dd3c7"><a href="#225331" label="[22:53:31]">&lt;aggi&gt;</a></span><span class="message">another problem, i did verify userspace-compilation/linking with a most recent tcc (git HEAD dec-2021), and i am not willing to rollback to a 20year old development branch</span></div><div class="line" id="225348"><span class="nick" style="color:#8dd3c7"><a href="#225348" label="[22:53:48]">&lt;aggi&gt;</a></span><span class="message">ok, i'll have to repair tccboot for tcc-0.9.27 or later then, which isn't trivial</span></div><div class="line" id="225350"><span class="nick" style="color:#8dd3c7"><a href="#225350" label="[22:53:50]">&lt;aggi&gt;</a></span><span class="message">probably</span></div><div class="line" id="233439"><span class="nick" style="color:#8dd3c7"><a href="#233439" label="[23:34:39]">&lt;aggi&gt;</a></span><span class="message">ok... i'll skip the tccboot-bootstrapping part; it's just too much fiddling currently, to support tcc-0.9.27 with tccboot-0.1</span></div><div class="line" id="233945"><span class="nick" style="color:#389600"><a href="#233945" label="[23:39:45]">&lt;stikonas&gt;</a></span><span class="message">oriansj: so I've isolated minimal example that triggers that crash <a rel="nofollow" href="https://paste.debian.net/1276228/">https://paste.debian.net/1276228/</a>  This is probably good enough for bug report</span></div><div class="line" id="234040"><span class="nick" style="color:#389600"><a href="#234040" label="[23:40:40]">&lt;stikonas&gt;</a></span><span class="message">I guess it chokes on &quot;comment&quot; (as ; is not really a comment but still, crash shouldn't happen)</span></div><div class="line" id="234355"><span class="nick" style="color:#389600"><a href="#234355" label="[23:43:55]">&lt;stikonas&gt;</a></span><span class="message">oh it's a = a that crashes it...</span></div><div class="line" id="234359"><span class="nick" style="color:#389600"><a href="#234359" label="[23:43:59]">&lt;stikonas&gt;</a></span><span class="message">probably goes into recursion</span></div><div class="line" id="234607"><span class="nick" style="color:#389600"><a href="#234607" label="[23:46:07]">&lt;stikonas&gt;</a></span><span class="message">slightly smaller example then <a rel="nofollow" href="https://paste.debian.net/1276229/">https://paste.debian.net/1276229/</a> </span></div><div class="line" id="234622"><span class="nick" style="color:#6d2462"><a href="#234622" label="[23:46:22]">&lt;oriansj&gt;</a></span><span class="message">it should have just stopped at a is not defined.</span></div><div class="line" id="234749"><span class="nick" style="color:#6d2462"><a href="#234749" label="[23:47:49]">&lt;oriansj&gt;</a></span><span class="message">that class of bug should have been found with the most basic of fuzzing</span></div><div class="line" id="235000"><span class="nick" style="color:#389600"><a href="#235000" label="[23:50:00]">&lt;stikonas&gt;</a></span><span class="message">hmm, I'm not actually sure what = even means in gas context...</span></div><div class="line" id="235013"><span class="nick" style="color:#389600"><a href="#235013" label="[23:50:13]">&lt;stikonas&gt;</a></span><span class="message">but yes, this is a fairly simple reproducer</span></div><div class="line" id="235434"><span class="nick" style="color:#6d2462"><a href="#235434" label="[23:54:34]">&lt;oriansj&gt;</a></span><span class="message">it is variable assignment (in this case a variable named a)</span></div><div class="line" id="235546"><span class="nick" style="color:#389600"><a href="#235546" label="[23:55:46]">&lt;stikonas&gt;</a></span><span class="message">ok, reported it here <a rel="nofollow" href="https://sourceware.org/bugzilla/show_bug.cgi?id=30308">https://sourceware.org/bugzilla/show_bug.cgi?id=30308</a> </span></div><div class="line" id="022318"><span class="nick" style="color:#8dd3c7"><a href="#022318" label="[02:23:18]">&lt;aggi&gt;</a></span><span class="message">i think this is missing when tcc compiles/links the kernel -&gt; linux-2.4.37/arch/i386/vmlinux.lds:  __start___ex_table = .;</span></div><div class="line" id="093245"><span class="nick" style="color:#af8d2f"><a href="#093245" label="[09:32:45]">&lt;fossy&gt;</a></span><span class="message">rickmasters: can I confirm that it is correct for all your contributions in #272 to be MIT licensed (different to the rest of the repo which is GPL, but since these are substantative contributions, particularly builder-hex0, i don't mind if it stays MIT)</span></div><div class="line" id="093746"><span class="nick" style="color:#8dd3c7"><a href="#093746" label="[09:37:46]">&lt;aggi&gt;</a></span><span class="message">i'll try something else; compiling tccboot-0.1 with an original/old version of tcc-0.9.21|22 ... which _should_ behave identical to what the original tccboot.iso/kernel-2.4.26</span></div><div class="line" id="094107"><span class="nick" style="color:#8dd3c7"><a href="#094107" label="[09:41:07]">&lt;aggi&gt;</a></span><span class="message">meaning, the jit-compiled kernel must not crash, and i narrowed down where it crashes, and probably why (missing/mis-placed __ex_table, entry.S)</span></div><div class="line" id="094238"><span class="nick" style="color:#8dd3c7"><a href="#094238" label="[09:42:38]">&lt;aggi&gt;</a></span><span class="message">the objdump of entry.S.o either tcc-compiled or gcc-compiled differ considerably, which may or may not be relevant, depending on if i can re-produce the _original_ status of tccboot-0.1 from source</span></div><div class="line" id="094252"><span class="nick" style="color:#8dd3c7"><a href="#094252" label="[09:42:52]">&lt;aggi&gt;</a></span><span class="message">and then, i can precisely ask Bellard, what errors i may have made</span></div><br /></div></body></html>