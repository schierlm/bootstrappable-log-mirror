<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2024-02-11.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000118"><span class="nick" style="color:#389600"><a href="#000118" label="[00:01:18]">&lt;stikonas&gt;</a></span><span class="message">deesix: but why does it matter what was committed before</span></div><div class="line" id="000131"><span class="nick" style="color:#389600"><a href="#000131" label="[00:01:31]">&lt;stikonas&gt;</a></span><span class="message">say you clone from the new forge</span></div><div class="line" id="000136"><span class="nick" style="color:#389600"><a href="#000136" label="[00:01:36]">&lt;stikonas&gt;</a></span><span class="message">including submodules</span></div><div class="line" id="000158"><span class="nick" style="color:#389600"><a href="#000158" label="[00:01:58]">&lt;stikonas&gt;</a></span><span class="message">if you need some older commit, git will just check out earlier local commits</span></div><div class="line" id="000238"><span class="nick" style="color:#8dd3c7"><a href="#000238" label="[00:02:38]">&lt;deesix&gt;</a></span><span class="message">Which might point to an older submodule that needs to download.</span></div><div class="line" id="000238"><span class="nick" style="color:#389600"><a href="#000238" label="[00:02:38]">&lt;stikonas&gt;</a></span><span class="message">and it's not like we need to go to earlier commits that much...</span></div><div class="line" id="000254"><span class="nick" style="color:#389600"><a href="#000254" label="[00:02:54]">&lt;stikonas&gt;</a></span><span class="message">deesix: no, it doesn't need downloading</span></div><div class="line" id="000258"><span class="nick" style="color:#389600"><a href="#000258" label="[00:02:58]">&lt;stikonas&gt;</a></span><span class="message">it's already downloaded</span></div><div class="line" id="000315"><span class="nick" style="color:#389600"><a href="#000315" label="[00:03:15]">&lt;stikonas&gt;</a></span><span class="message">at least if you originally clone with</span></div><div class="line" id="000325"><span class="nick" style="color:#389600"><a href="#000325" label="[00:03:25]">&lt;stikonas&gt;</a></span><span class="message">git clone --recursive new_forge/repo</span></div><div class="line" id="000328"><span class="nick" style="color:#8dd3c7"><a href="#000328" label="[00:03:28]">&lt;deesix&gt;</a></span><span class="message">I don't think so, if is not a submodule &quot;now&quot;.</span></div><div class="line" id="000346"><span class="nick" style="color:#389600"><a href="#000346" label="[00:03:46]">&lt;stikonas&gt;</a></span><span class="message">but git clone will have the whole repo of M2libc</span></div><div class="line" id="000400"><span class="nick" style="color:#389600"><a href="#000400" label="[00:04:00]">&lt;stikonas&gt;</a></span><span class="message">and if you do git checkout of older commit of stage0-posix</span></div><div class="line" id="000406"><span class="nick" style="color:#389600"><a href="#000406" label="[00:04:06]">&lt;stikonas&gt;</a></span><span class="message">it will require older M2libc</span></div><div class="line" id="000411"><span class="nick" style="color:#389600"><a href="#000411" label="[00:04:11]">&lt;stikonas&gt;</a></span><span class="message">but that is already local</span></div><div class="line" id="000418"><span class="nick" style="color:#389600"><a href="#000418" label="[00:04:18]">&lt;stikonas&gt;</a></span><span class="message">I don't think it will redownloade anything at all</span></div><div class="line" id="000542"><span class="nick" style="color:#389600"><a href="#000542" label="[00:05:42]">&lt;stikonas&gt;</a></span><span class="message">it will be just taken from stage0-posix/.git/modules/M2lic</span></div><div class="line" id="000648"><span class="nick" style="color:#389600"><a href="#000648" label="[00:06:48]">&lt;stikonas&gt;</a></span><span class="message">anyway, submodule is just a git repo</span></div><div class="line" id="000655"><span class="nick" style="color:#389600"><a href="#000655" label="[00:06:55]">&lt;stikonas&gt;</a></span><span class="message">you can even have multiple remotes there</span></div><div class="line" id="000929"><span class="nick" style="color:#389600"><a href="#000929" label="[00:09:29]">&lt;stikonas&gt;</a></span><span class="message">only if you checkout older commit, manually cd into submodule and do git fetch</span></div><div class="line" id="000936"><span class="nick" style="color:#389600"><a href="#000936" label="[00:09:36]">&lt;stikonas&gt;</a></span><span class="message">then you might download stuff from the old forge</span></div><div class="line" id="000941"><span class="nick" style="color:#8dd3c7"><a href="#000941" label="[00:09:41]">&lt;deesix&gt;</a></span><span class="message">I was thinking somethig like this: commit1 has submodule forge1/foo. That submodule is removed later (let's say commit100). At that moment the submodule is forge2/bar. A while later, I clone recursive. Does it get forge1/foo just in case I checkout a commit &lt; 100?</span></div><div class="line" id="001050"><span class="nick" style="color:#389600"><a href="#001050" label="[00:10:50]">&lt;stikonas&gt;</a></span><span class="message">no, I don't think it will get forge1/foo</span></div><div class="line" id="001054"><span class="nick" style="color:#389600"><a href="#001054" label="[00:10:54]">&lt;stikonas&gt;</a></span><span class="message">unless you check out old commit</span></div><div class="line" id="001119"><span class="nick" style="color:#8dd3c7"><a href="#001119" label="[00:11:19]">&lt;deesix&gt;</a></span><span class="message">Yeah, I'm checking it out (say... for bisect or whatever).</span></div><div class="line" id="001130"><span class="nick" style="color:#389600"><a href="#001130" label="[00:11:30]">&lt;stikonas&gt;</a></span><span class="message">which is why you need to git init submodules again if new submodule if added</span></div><div class="line" id="001138"><span class="nick" style="color:#389600"><a href="#001138" label="[00:11:38]">&lt;stikonas&gt;</a></span><span class="message">but did we even have anything removed</span></div><div class="line" id="001147"><span class="nick" style="color:#389600"><a href="#001147" label="[00:11:47]">&lt;stikonas&gt;</a></span><span class="message">in any case not anytime recently</span></div><div class="line" id="001208"><span class="nick" style="color:#389600"><a href="#001208" label="[00:12:08]">&lt;stikonas&gt;</a></span><span class="message">it's a minor point I think...</span></div><div class="line" id="001216"><span class="nick" style="color:#2e2a4a"><a href="#001216" label="[00:12:16]">&lt;oriansj&gt;</a></span><span class="message">deesix: there is no need to replace already commited URLs in history, any more than we would need to replace references to freenode in our histories.</span></div><div class="line" id="001235"><span class="nick" style="color:#389600"><a href="#001235" label="[00:12:35]">&lt;stikonas&gt;</a></span><span class="message">also true...</span></div><div class="line" id="001257"><span class="nick" style="color:#389600"><a href="#001257" label="[00:12:57]">&lt;stikonas&gt;</a></span><span class="message">but I think it is even less of a problem than freenode</span></div><div class="line" id="001304"><span class="nick" style="color:#389600"><a href="#001304" label="[00:13:04]">&lt;stikonas&gt;</a></span><span class="message">as git is sufficiently decentralized</span></div><div class="line" id="001309"><span class="nick" style="color:#8dd3c7"><a href="#001309" label="[00:13:09]">&lt;deesix&gt;</a></span><span class="message">Well, oriansj; then one can get stuff from the &quot;old forge&quot; kind of unexpectedly (which makes the move not really complete).</span></div><div class="line" id="001332"><span class="nick" style="color:#2e2a4a"><a href="#001332" label="[00:13:32]">&lt;oriansj&gt;</a></span><span class="message">deesix: well the old forge will just be an updated mirror of the master forge</span></div><div class="line" id="001405"><span class="nick" style="color:#2e2a4a"><a href="#001405" label="[00:14:05]">&lt;oriansj&gt;</a></span><span class="message">all of my commits are signed</span></div><div class="line" id="001416"><span class="nick" style="color:#8dd3c7"><a href="#001416" label="[00:14:16]">&lt;deesix&gt;</a></span><span class="message">I'm not worried about the content, but the server serving it (the move out).</span></div><div class="line" id="001426"><span class="nick" style="color:#2e2a4a"><a href="#001426" label="[00:14:26]">&lt;oriansj&gt;</a></span><span class="message">so, it is trivial for anyone to detect bad behavior on old forges</span></div><div class="line" id="001448"><span class="nick" style="color:#2e2a4a"><a href="#001448" label="[00:14:48]">&lt;oriansj&gt;</a></span><span class="message">(assuming they are not breaking git tags too)</span></div><div class="line" id="001610"><span class="nick" style="color:#2e2a4a"><a href="#001610" label="[00:16:10]">&lt;oriansj&gt;</a></span><span class="message">and if they are breaking git tags, we have a much bigger problem than old forges acting badly.</span></div><div class="line" id="001701"><span class="nick" style="color:#2e2a4a"><a href="#001701" label="[00:17:01]">&lt;oriansj&gt;</a></span><span class="message">(hmmm looks like I will need to do a sys/socket.h if I want a minimal wget/curl in mescc-tools-extra)</span></div><div class="line" id="001730"><span class="nick" style="color:#389600"><a href="#001730" label="[00:17:30]">&lt;stikonas&gt;</a></span><span class="message">but is that even useful in mescc-tools-extrea</span></div><div class="line" id="001742"><span class="nick" style="color:#389600"><a href="#001742" label="[00:17:42]">&lt;stikonas&gt;</a></span><span class="message">we are unlikely to have any kernel support for networking so early...</span></div><div class="line" id="001758"><span class="nick" style="color:#2e2a4a"><a href="#001758" label="[00:17:58]">&lt;oriansj&gt;</a></span><span class="message">entirely good point</span></div><div class="line" id="001800"><span class="nick" style="color:#389600"><a href="#001800" label="[00:18:00]">&lt;stikonas&gt;</a></span><span class="message">one could of course bypass the kernel and use userspace tcp stack too</span></div><div class="line" id="001803"><span class="nick" style="color:#389600"><a href="#001803" label="[00:18:03]">&lt;stikonas&gt;</a></span><span class="message">but we still need some drivers</span></div><div class="line" id="001807"><span class="nick" style="color:#2e2a4a"><a href="#001807" label="[00:18:07]">&lt;oriansj&gt;</a></span><span class="message">but we also have wrap.c</span></div><div class="line" id="001832"><span class="nick" style="color:#389600"><a href="#001832" label="[00:18:32]">&lt;stikonas&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="https://www.nongnu.org/lwip/2_1_x/index.html">https://www.nongnu.org/lwip/2_1_x/index.html</a>  implements tcp in userspace I think]</span></div><div class="line" id="001915"><span class="nick" style="color:#389600"><a href="#001915" label="[00:19:15]">&lt;stikonas&gt;</a></span><span class="message">well, true</span></div><div class="line" id="001925"><span class="nick" style="color:#389600"><a href="#001925" label="[00:19:25]">&lt;stikonas&gt;</a></span><span class="message">wrap.c is also only useful for posix bootstrap</span></div><div class="line" id="001959"><span class="nick" style="color:#389600"><a href="#001959" label="[00:19:59]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'm not opposing in any case to minimal wget/curl</span></div><div class="line" id="002047"><span class="nick" style="color:#389600"><a href="#002047" label="[00:20:47]">&lt;stikonas&gt;</a></span><span class="message">just saying that it's hard to get meaning ful network in kernel bootstrapping case until we are quite far in the bootstrap chain</span></div><div class="line" id="002112"><span class="nick" style="color:#2e2a4a"><a href="#002112" label="[00:21:12]">&lt;oriansj&gt;</a></span><span class="message">and at which point there isn't any benefit to having M2-Planet compile it</span></div><div class="line" id="002130"><span class="nick" style="color:#389600"><a href="#002130" label="[00:21:30]">&lt;stikonas&gt;</a></span><span class="message">well, perhaps there might be some usecase</span></div><div class="line" id="002138"><span class="nick" style="color:#389600"><a href="#002138" label="[00:21:38]">&lt;stikonas&gt;</a></span><span class="message">if we say do UEFI bootstrap</span></div><div class="line" id="002142"><span class="nick" style="color:#389600"><a href="#002142" label="[00:21:42]">&lt;stikonas&gt;</a></span><span class="message">and UEFI includes network drivers</span></div><div class="line" id="002208"><span class="nick" style="color:#389600"><a href="#002208" label="[00:22:08]">&lt;stikonas&gt;</a></span><span class="message">UEFI could be any implementation (EDK2/u-boot or anything else)</span></div><div class="line" id="002235"><span class="nick" style="color:#2e2a4a"><a href="#002235" label="[00:22:35]">&lt;oriansj&gt;</a></span><span class="message">we can shelve the idea until someone comes up with an actual use case. As gcc can definitely handle wget/curl and those should be good enough to download any files we wish to remotely pull</span></div><div class="line" id="002257"><span class="nick" style="color:#389600"><a href="#002257" label="[00:22:57]">&lt;stikonas&gt;</a></span><span class="message">well, downloading stuff early in UEFI might be insteresting</span></div><div class="line" id="002304"><span class="nick" style="color:#389600"><a href="#002304" label="[00:23:04]">&lt;stikonas&gt;</a></span><span class="message">but I haven't looked at all into networking there</span></div><div class="line" id="002436"><span class="nick" style="color:#389600"><a href="#002436" label="[00:24:36]">&lt;stikonas&gt;</a></span><span class="message">there is quite a bit here <a rel="nofollow" href="https://uefi.org/specs/UEFI/2.10/28_Network_Protocols_TCP_IP_and_Configuration.html#efi-tcpv4-protocol">https://uefi.org/specs/UEFI/2.10/28_Network_Protocols_TCP_IP_and_Configuration.html#efi-tcpv4-protocol</a> </span></div><div class="line" id="002504"><span class="nick" style="color:#389600"><a href="#002504" label="[00:25:04]">&lt;stikonas&gt;</a></span><span class="message">but unless I get some help with UEFI bootstrapping, I won't have time to look into this any time soon</span></div><div class="line" id="002609"><span class="nick" style="color:#389600"><a href="#002609" label="[00:26:09]">&lt;stikonas&gt;</a></span><span class="message">and also how safe is it to run networking in ring 0...</span></div><div class="line" id="002722"><span class="nick" style="color:#389600"><a href="#002722" label="[00:27:22]">&lt;stikonas&gt;</a></span><span class="message">hmm, on the other hand Linux kernel also handles some parts of networking in ring0</span></div><div class="line" id="014627"><span class="nick" style="color:#2e2a4a"><a href="#014627" label="[01:46:27]">&lt;oriansj&gt;</a></span><span class="message">stikonas: well that is a good question.</span></div><div class="line" id="014739"><span class="nick" style="color:#389600"><a href="#014739" label="[01:47:39]">&lt;stikonas&gt;</a></span><span class="message">anyway, I think small downloader might have some uses after all</span></div><div class="line" id="014740"><span class="nick" style="color:#2e2a4a"><a href="#014740" label="[01:47:40]">&lt;oriansj&gt;</a></span><span class="message">and atleast in bare metal making true memory ring buffers is trivial and mean buffer overflow attacks become impossible.</span></div><div class="line" id="014807"><span class="nick" style="color:#389600"><a href="#014807" label="[01:48:07]">&lt;stikonas&gt;</a></span><span class="message">but integrating it all nicely is probably a lot of work</span></div><div class="line" id="014817"><span class="nick" style="color:#2e2a4a"><a href="#014817" label="[01:48:17]">&lt;oriansj&gt;</a></span><span class="message">well I will take a look at sys/socket.h; see what we need to support for a trivial download program</span></div><div class="line" id="014845"><span class="nick" style="color:#2e2a4a"><a href="#014845" label="[01:48:45]">&lt;oriansj&gt;</a></span><span class="message">and after we get it working in stage0-posix we can then figure out what is needed in UEFI.</span></div><div class="line" id="015236"><span class="nick" style="color:#389600"><a href="#015236" label="[01:52:36]">&lt;stikonas&gt;</a></span><span class="message">first for UEFI I need to figure out why cp bin/mes-m2 bin/mes works on QEMU but gets stuck on my real hw machine...</span></div><div class="line" id="081258"><span class="nick" style="color:#6b8072"><a href="#081258" label="[08:12:58]">&lt;janneke&gt;</a></span><span class="message">#guix-</span></div><div class="line" id="081304"><span class="nick" style="color:#6b8072"><a href="#081304" label="[08:13:04]">&lt;janneke&gt;</a></span><span class="message">oops &amp; good morning!</span></div><div class="line" id="081807"><span class="nick" style="color:#80b1d3"><a href="#081807" label="[08:18:07]">&lt;quassel&gt;</a></span><span class="message">Good Morning.</span></div><div class="line" id="081809"><span class="nick" style="color:#80b1d3"><a href="#081809" label="[08:18:09]">&lt;quassel&gt;</a></span><span class="message">I am interested in bootstrapping RPM-based distros (e.g. Fedora and RHEL-Clones).</span></div><div class="line" id="081811"><span class="nick" style="color:#80b1d3"><a href="#081811" label="[08:18:11]">&lt;quassel&gt;</a></span><span class="message">I hope to use GUIX or live-bootstrap as a starting point and use parts of the procedure that Fedora used to bootstrap new arches.</span></div><div class="line" id="081813"><span class="nick" style="color:#80b1d3"><a href="#081813" label="[08:18:13]">&lt;quassel&gt;</a></span><span class="message"> Is someone of you aware of prior work in this area?</span></div><div class="line" id="111215"><span class="nick" style="color:#389600"><a href="#111215" label="[11:12:15]">&lt;stikonas&gt;</a></span><span class="message">quassel: no, I don't think there were any attempts to bootstrap RPM based distros yet</span></div><div class="line" id="111247"><span class="nick" style="color:#389600"><a href="#111247" label="[11:12:47]">&lt;stikonas&gt;</a></span><span class="message">AlwinB: ^^</span></div><div class="line" id="111719"><span class="nick" style="color:#389600"><a href="#111719" label="[11:17:19]">&lt;stikonas&gt;</a></span><span class="message">some people are just starting to look at bootstrapping source based distros, e.g. Gentoo</span></div><div class="line" id="111757"><span class="nick" style="color:#389600"><a href="#111757" label="[11:17:57]">&lt;stikonas&gt;</a></span><span class="message">and for non-distro stuff, freedesktop-sdk is now bootstrapped off live-bootstrap</span></div><div class="line" id="111811"><span class="nick" style="color:#6d2462"><a href="#111811" label="[11:18:11]">&lt;sam_&gt;</a></span><span class="message">nice!</span></div><div class="line" id="112417"><span class="nick" style="color:#389600"><a href="#112417" label="[11:24:17]">&lt;stikonas&gt;</a></span><span class="message">well, fossy already merged some inprovements that should make bootstrapping gentoo a bit easier</span></div><div class="line" id="112439"><span class="nick" style="color:#389600"><a href="#112439" label="[11:24:39]">&lt;stikonas&gt;</a></span><span class="message">all that shadow / user support stuff is not merged</span></div><div class="line" id="112709"><span class="nick" style="color:#6b8072"><a href="#112709" label="[11:27:09]">&lt;janneke&gt;</a></span><span class="message">ACTION stumbles <a rel="nofollow" href="https://norcal.social/@UweHalfHand/111909127728404472">https://norcal.social/@UweHalfHand/111909127728404472</a>  over a simple scheme compiler</span></div><div class="line" id="112724"><span class="nick" style="color:#6b8072"><a href="#112724" label="[11:27:24]">&lt;janneke&gt;</a></span><span class="message">=&gt; <a rel="nofollow" href="https://github.com/uhollerbach/wile">https://github.com/uhollerbach/wile</a> </span></div><div class="line" id="112752"><span class="nick" style="color:#6b8072"><a href="#112752" label="[11:27:52]">&lt;janneke&gt;</a></span><span class="message">wondering if that could help to remove the dependency on tcc</span></div><div class="line" id="113700"><span class="nick" style="color:#389600"><a href="#113700" label="[11:37:00]">&lt;stikonas&gt;</a></span><span class="message">it does depend on boehm-gc though</span></div><div class="line" id="113747"><span class="nick" style="color:#6b8072"><a href="#113747" label="[11:37:47]">&lt;janneke&gt;</a></span><span class="message">ouch</span></div><div class="line" id="114255"><span class="nick" style="color:#389600"><a href="#114255" label="[11:42:55]">&lt;stikonas&gt;</a></span><span class="message">oh, cp in UEFI fails because it relies on getcwd call failing on non-directory input</span></div><div class="line" id="114321"><span class="nick" style="color:#389600"><a href="#114321" label="[11:43:21]">&lt;stikonas&gt;</a></span><span class="message">need to add a bit more logic to M2libc then...</span></div><div class="line" id="114405"><span class="nick" style="color:#389600"><a href="#114405" label="[11:44:05]">&lt;stikonas&gt;</a></span><span class="message">tried running mes's kaem.run and &quot;cp bin/mes-m2 bin/mes&quot; resolves to copying bin/mes-m2 to bin/mes/mes-m2 ...</span></div><div class="line" id="114607"><span class="nick" style="color:#389600"><a href="#114607" label="[11:46:07]">&lt;stikonas&gt;</a></span><span class="message">almost surely this happens here: <a rel="nofollow" href="https://github.com/oriansj/mescc-tools-extra/blob/8a0dc76e3d6aa287e74daadca86aace7fac3b326/cp.c#L108">https://github.com/oriansj/mescc-tools-extra/blob/8a0dc76e3d6aa287e74daadca86aace7fac3b326/cp.c#L108</a> </span></div><div class="line" id="114851"><span class="nick" style="color:#6b8072"><a href="#114851" label="[11:48:51]">&lt;janneke&gt;</a></span><span class="message">afaics wile can be compiled without boem-gc, and it will prolly just eat all your memory</span></div><div class="line" id="124512"><span class="nick" style="color:#234e69"><a href="#124512" label="[12:45:12]">&lt;AlwinB&gt;</a></span><span class="message">Thank you stikonas, for your answere.</span></div><div class="line" id="124719"><span class="nick" style="color:#6b8072"><a href="#124719" label="[12:47:19]">&lt;janneke&gt;</a></span><span class="message">it would be pretty interesting to see a full source bootstrap coming to fedora</span></div><div class="line" id="130107"><span class="nick" style="color:#6b8072"><a href="#130107" label="[13:01:07]">&lt;janneke&gt;</a></span><span class="message">AlwinB: any idea if the concept of reproducibility has landed in fedora yet?</span></div><div class="line" id="133613"><span class="nick" style="color:#234e69"><a href="#133613" label="[13:36:13]">&lt;AlwinB&gt;</a></span><span class="message">janneke: My cursory search only turned up pages and repos that seemed to be abandoned for years.</span></div><div class="line" id="133808"><span class="nick" style="color:#6b8072"><a href="#133808" label="[13:38:08]">&lt;janneke&gt;</a></span><span class="message">fwiw, suse (courtesy Bernhard M. Wiedemann) is the only rpm-based distro i've seen contributing to reproducible builds</span></div><div class="line" id="133956"><span class="nick" style="color:#234e69"><a href="#133956" label="[13:39:56]">&lt;AlwinB&gt;</a></span><span class="message">I am very new to this, but i would like to take a chance on enterprise linux.</span></div><div class="line" id="134055"><span class="nick" style="color:#6b8072"><a href="#134055" label="[13:40:55]">&lt;janneke&gt;</a></span><span class="message">linux isn't bootstrappable yet, we focus mainly on gnu/linux</span></div><div class="line" id="134100"><span class="nick" style="color:#6b8072"><a href="#134100" label="[13:41:00]">&lt;janneke&gt;</a></span><span class="message">for now</span></div><div class="line" id="134723"><span class="nick" style="color:#234e69"><a href="#134723" label="[13:47:23]">&lt;AlwinB&gt;</a></span><span class="message">I am surprised to hear that. When looking at GUIX and live-bootstrap, I was under the impression that you already made it somewhat possible.</span></div><div class="line" id="140547"><span class="nick" style="color:#6b8072"><a href="#140547" label="[14:05:47]">&lt;janneke&gt;</a></span><span class="message">no, most of us are not looking at the kernel for now</span></div><div class="line" id="140717"><span class="nick" style="color:#6b8072"><a href="#140717" label="[14:07:17]">&lt;janneke&gt;</a></span><span class="message">but yeah, linux will probably have to be addressed at some time</span></div><div class="line" id="155348"><span class="nick" style="color:#6c3d55"><a href="#155348" label="[15:53:48]">&lt;euleritian&gt;</a></span><span class="message">There was recently a discussion about whether to use github or not. Here's one more aspect: github is blocked in mainland China (<a rel="nofollow" href="https://en.m.wikipedia.org/wiki/List_of_websites_blocked_in_mainland_China">https://en.m.wikipedia.org/wiki/List_of_websites_blocked_in_mainland_China</a>).  I've been told that guix has a very active community in China, and I can imagine that there is a great interest in bootstrapping, too. Maybe, switching away from github enables support from the other half of the globe.</span></div><div class="line" id="160840"><span class="nick" style="color:#6b8072"><a href="#160840" label="[16:08:40]">&lt;janneke&gt;</a></span><span class="message">euleritian: yeah, github has been advised against by gnu even before the microsoft takeover</span></div><div class="line" id="160920"><span class="nick" style="color:#6b8072"><a href="#160920" label="[16:09:20]">&lt;janneke&gt;</a></span><span class="message">i've never understood why someone would choose to use it, but then again, i still don't understand how most people use their computers :)</span></div><div class="line" id="161141"><span class="nick" style="color:#6b8072"><a href="#161141" label="[16:11:41]">&lt;janneke&gt;</a></span><span class="message">note that nothing in guix's gnu/packages/commencement.scm references github</span></div><div class="line" id="171353"><span class="nick" style="color:#d9d9d9"><a href="#171353" label="[17:13:53]">&lt;mihi&gt;</a></span><span class="message">janneke, in my opinion GitHub shines when I'm *not* using my computer (i.e. I'm either using my phone or someone else's computer). The search, outline, xref features etc. in the code browser are just not comparable to other sites (most of them usable without logging in), and when logged in, you can fork, edit, run Actions, and do pull requests without being at your computer. And if the functionaltiy is not enough</span></div><div class="line" id="171353"><span class="nick" style="color:#d9d9d9"><a href="#171353" label="[17:13:53]">&lt;mihi&gt;</a></span><span class="message">you can use <a rel="nofollow" href="https://github1s.com/oriansj/stage0-posix">https://github1s.com/oriansj/stage0-posix</a>  unauthenticated or <a rel="nofollow" href="https://vscode.dev/oriansj/stage0-posix">https://vscode.dev/oriansj/stage0-posix</a>  authenticated. On your own repos there is also <a rel="nofollow" href="https://github.dev/">https://github.dev/</a>  (authenticated of course). And probably more ecosystem around it.</span></div><div class="line" id="171412"><span class="nick" style="color:#d9d9d9"><a href="#171412" label="[17:14:12]">&lt;mihi&gt;</a></span><span class="message">Also, the same factor why so many people are on Facebook (where I am not) - everybody else is already there :D</span></div><div class="line" id="171515"><span class="nick" style="color:#d9d9d9"><a href="#171515" label="[17:15:15]">&lt;mihi&gt;</a></span><span class="message">&lt;/offtopic&gt;</span></div><div class="line" id="171616"><span class="nick" style="color:#6b8072"><a href="#171616" label="[17:16:16]">&lt;janneke&gt;</a></span><span class="message">mihi: that could be, i try not to use non-free software, however shiny it may be</span></div><div class="line" id="171741"><span class="nick" style="color:#d9d9d9"><a href="#171741" label="[17:17:41]">&lt;mihi&gt;</a></span><span class="message">janneke, I accept that decision. I my ecosystem there is lots of non-free software (and non-free websites), while I try to avoid them, I only do if I either don't lose much functionality or if I feel it in my purse (i.e. the proprietary software is expensive)</span></div><div class="line" id="171839"><span class="nick" style="color:#2e2a4a"><a href="#171839" label="[17:18:39]">&lt;oriansj&gt;</a></span><span class="message">mihi: the only reason the master repos are on github is because savannah rejected hosting them</span></div><div class="line" id="171906"><span class="nick" style="color:#6b8072"><a href="#171906" label="[17:19:06]">&lt;janneke&gt;</a></span><span class="message">yeah, that's really terrible</span></div><div class="line" id="171914"><span class="nick" style="color:#6b8072"><a href="#171914" label="[17:19:14]">&lt;janneke&gt;</a></span><span class="message">the rejection, i mean</span></div><div class="line" id="171924"><span class="nick" style="color:#2e2a4a"><a href="#171924" label="[17:19:24]">&lt;oriansj&gt;</a></span><span class="message">5 minutes after savannah would approve, believe me when I say the master repos would all be moved.</span></div><div class="line" id="171940"><span class="nick" style="color:#2e2a4a"><a href="#171940" label="[17:19:40]">&lt;oriansj&gt;</a></span><span class="message">and all of the git submodules updated accordingly</span></div><div class="line" id="172124"><span class="nick" style="color:#2e2a4a"><a href="#172124" label="[17:21:24]">&lt;oriansj&gt;</a></span><span class="message">I am using an x200, running gnu guix. (my configuration is readily available) given the option of doing the right thing, I will do it.</span></div><div class="line" id="172238"><span class="nick" style="color:#2e2a4a"><a href="#172238" label="[17:22:38]">&lt;oriansj&gt;</a></span><span class="message">but I don't have any method of getting them to change their mind and unless someone else does and is willing to help me; I am stuck between a set of less than optimal choices.</span></div><div class="line" id="172506"><span class="nick" style="color:#6b8072"><a href="#172506" label="[17:25:06]">&lt;janneke&gt;</a></span><span class="message">yes</span></div><div class="line" id="172559"><span class="nick" style="color:#6b8072"><a href="#172559" label="[17:25:59]">&lt;janneke&gt;</a></span><span class="message">i've been in a tedious process to try and change the guidelines for packages, that should make it clear that such things are OK, but there's been no tangible progress for over a year</span></div><div class="line" id="183726"><span class="nick" style="color:#8dd3c7"><a href="#183726" label="[18:37:26]">&lt;deesix&gt;</a></span><span class="message">github or savannah is a false dichotomy.</span></div><div class="line" id="185436"><span class="nick" style="color:#389600"><a href="#185436" label="[18:54:36]">&lt;stikonas&gt;</a></span><span class="message">janneke (cc AlwinB): why do you say linux is not bootstrappable?</span></div><div class="line" id="185447"><span class="nick" style="color:#389600"><a href="#185447" label="[18:54:47]">&lt;stikonas&gt;</a></span><span class="message">at least in some cases it is already done</span></div><div class="line" id="185507"><span class="nick" style="color:#389600"><a href="#185507" label="[18:55:07]">&lt;stikonas&gt;</a></span><span class="message">on x86 with BIOS systems we could use rickmaster's buidler-hex and Mikaku's Fiwix</span></div><div class="line" id="185537"><span class="nick" style="color:#6b8072"><a href="#185537" label="[18:55:37]">&lt;janneke&gt;</a></span><span class="message">stikonas: ah of course, my bad!</span></div><div class="line" id="185603"><span class="nick" style="color:#6b8072"><a href="#185603" label="[18:56:03]">&lt;janneke&gt;</a></span><span class="message">what i possibly should have said is that guix and live-bootstrap don't include linux yet</span></div><div class="line" id="185613"><span class="nick" style="color:#389600"><a href="#185613" label="[18:56:13]">&lt;stikonas&gt;</a></span><span class="message">oh live-bootstrap does include it</span></div><div class="line" id="185616"><span class="nick" style="color:#389600"><a href="#185616" label="[18:56:16]">&lt;stikonas&gt;</a></span><span class="message">only guix doesn't</span></div><div class="line" id="185623"><span class="nick" style="color:#389600"><a href="#185623" label="[18:56:23]">&lt;stikonas&gt;</a></span><span class="message">but it's hard to see how one can integrate dthat</span></div><div class="line" id="185630"><span class="nick" style="color:#6b8072"><a href="#185630" label="[18:56:30]">&lt;janneke&gt;</a></span><span class="message">ACTION so so far behind the curve</span></div><div class="line" id="185637"><span class="nick" style="color:#389600"><a href="#185637" label="[18:56:37]">&lt;stikonas&gt;</a></span><span class="message">for kernel bootstrapping you can't really start with package manager</span></div><div class="line" id="185709"><span class="nick" style="color:#389600"><a href="#185709" label="[18:57:09]">&lt;stikonas&gt;</a></span><span class="message">janneke: that said builder-hex0 does not work on some modern systems</span></div><div class="line" id="185718"><span class="nick" style="color:#389600"><a href="#185718" label="[18:57:18]">&lt;stikonas&gt;</a></span><span class="message">as those are starting to lose BIOS emulation layer</span></div><div class="line" id="185726"><span class="nick" style="color:#6b8072"><a href="#185726" label="[18:57:26]">&lt;janneke&gt;</a></span><span class="message">details! :)</span></div><div class="line" id="185752"><span class="nick" style="color:#389600"><a href="#185752" label="[18:57:52]">&lt;stikonas&gt;</a></span><span class="message">e.g. my laptop (with coreboot) only supports UEFI api but not BIOS api</span></div><div class="line" id="185856"><span class="nick" style="color:#389600"><a href="#185856" label="[18:58:56]">&lt;stikonas&gt;</a></span><span class="message">but at some point stage0-uefi should be able work there and replace builder-hex0</span></div><div class="line" id="185920"><span class="nick" style="color:#389600"><a href="#185920" label="[18:59:20]">&lt;stikonas&gt;</a></span><span class="message">but at least for now it needs x86_64 bootstrap path</span></div><div class="line" id="185930"><span class="nick" style="color:#389600"><a href="#185930" label="[18:59:30]">&lt;stikonas&gt;</a></span><span class="message">which as we know is not complete</span></div><div class="line" id="185938"><span class="nick" style="color:#6b8072"><a href="#185938" label="[18:59:38]">&lt;janneke&gt;</a></span><span class="message">oh my, so many things need to come together...</span></div><div class="line" id="190038"><span class="nick" style="color:#389600"><a href="#190038" label="[19:00:38]">&lt;stikonas&gt;</a></span><span class="message">well, there are different pathways...</span></div><div class="line" id="190039"><span class="nick" style="color:#389600"><a href="#190039" label="[19:00:39]">&lt;stikonas&gt;</a></span><span class="message">but yes...</span></div><div class="line" id="194933"><span class="nick" style="color:#bc80bd"><a href="#194933" label="[19:49:33]">&lt;Googulator&gt;</a></span><span class="message">stikonas: does't coreboot let you use SeaBIOS to get a BIOS API?</span></div><div class="line" id="195013"><span class="nick" style="color:#389600"><a href="#195013" label="[19:50:13]">&lt;stikonas&gt;</a></span><span class="message">Googulator: perhaps...</span></div><div class="line" id="195018"><span class="nick" style="color:#389600"><a href="#195018" label="[19:50:18]">&lt;stikonas&gt;</a></span><span class="message">I would have to reflash it though</span></div><div class="line" id="195033"><span class="nick" style="color:#389600"><a href="#195033" label="[19:50:33]">&lt;stikonas&gt;</a></span><span class="message">but it's a good opportunity to advance UEFI bootstrap too</span></div><div class="line" id="195052"><span class="nick" style="color:#389600"><a href="#195052" label="[19:50:52]">&lt;stikonas&gt;</a></span><span class="message">it does not include SeaBIOS out of box anyway</span></div><div class="line" id="195129"><span class="nick" style="color:#bc80bd"><a href="#195129" label="[19:51:29]">&lt;Googulator&gt;</a></span><span class="message">The problem with Savannah (besides refusing to host our projects) is no PR support</span></div><div class="line" id="195223"><span class="nick" style="color:#bc80bd"><a href="#195223" label="[19:52:23]">&lt;Googulator&gt;</a></span><span class="message">moving to Savannah means moving to an email-based workflow, which would be a huge step back</span></div><div class="line" id="195348"><span class="nick" style="color:#bc80bd"><a href="#195348" label="[19:53:48]">&lt;Googulator&gt;</a></span><span class="message">I wish there was some project hosting site offering Kallithea</span></div><div class="line" id="195548"><span class="nick" style="color:#bc80bd"><a href="#195548" label="[19:55:48]">&lt;Googulator&gt;</a></span><span class="message">can do almost everything GH can (forks, pull requests, you name it - not sure about code search), sometimes even better (e.g. GH can't properly visualize a merged history as a DAG), and can even do Mercurial besides Git - but unfortunately you have to host it yourself, or at least I'm not aware of a &quot;KallitheaHub&quot;</span></div><div class="line" id="195553"><span class="nick" style="color:#389600"><a href="#195553" label="[19:55:53]">&lt;stikonas&gt;</a></span><span class="message">out of self-hosted forges I think gitlab and gitea seem to be the most common</span></div><div class="line" id="195622"><span class="nick" style="color:#389600"><a href="#195622" label="[19:56:22]">&lt;stikonas&gt;</a></span><span class="message">(gitlab is quite resource hungry and harder to maintain, although probably has more features)</span></div><div class="line" id="195706"><span class="nick" style="color:#bc80bd"><a href="#195706" label="[19:57:06]">&lt;Googulator&gt;</a></span><span class="message">isn't GitLab proprietary?</span></div><div class="line" id="195738"><span class="nick" style="color:#bc80bd"><a href="#195738" label="[19:57:38]">&lt;Googulator&gt;</a></span><span class="message">IIRC free-as-in-beer for open-source projects, but paid otherwise</span></div><div class="line" id="200013"><span class="nick" style="color:#389600"><a href="#200013" label="[20:00:13]">&lt;stikonas&gt;</a></span><span class="message">Googulator: no, I think they follow free sofware core model (possibly they have some proprietary extensions on enterprise version and the one that they run)</span></div><div class="line" id="200131"><span class="nick" style="color:#389600"><a href="#200131" label="[20:01:31]">&lt;stikonas&gt;</a></span><span class="message">Googulator: <a rel="nofollow" href="https://repology.org/project/gitlab/badges">https://repology.org/project/gitlab/badges</a>  parabola even packages it</span></div><div class="line" id="200137"><span class="nick" style="color:#389600"><a href="#200137" label="[20:01:37]">&lt;stikonas&gt;</a></span><span class="message">and I think parabola is FSF approved distro</span></div><div class="line" id="200211"><span class="nick" style="color:#389600"><a href="#200211" label="[20:02:11]">&lt;stikonas&gt;</a></span><span class="message">at some point Debian was also shipping it but removed it due to vastly different release cycles of gitlab and debia</span></div><div class="line" id="200248"><span class="nick" style="color:#389600"><a href="#200248" label="[20:02:48]">&lt;stikonas&gt;</a></span><span class="message">but it's a big program written with ruby on rails I think</span></div><div class="line" id="200407"><span class="nick" style="color:#389600"><a href="#200407" label="[20:04:07]">&lt;stikonas&gt;</a></span><span class="message">gitea/forgjo on the other hand is a smaller program in Go</span></div><div class="line" id="200447"><span class="nick" style="color:#bc80bd"><a href="#200447" label="[20:04:47]">&lt;Googulator&gt;</a></span><span class="message">I seem to remember there are CCP/Chinese government concerns around Gitea</span></div><div class="line" id="200517"><span class="nick" style="color:#389600"><a href="#200517" label="[20:05:17]">&lt;stikonas&gt;</a></span><span class="message">I think originally it was forked from gogs which has originated from China...</span></div><div class="line" id="200639"><span class="nick" style="color:#bc80bd"><a href="#200639" label="[20:06:39]">&lt;Googulator&gt;</a></span><span class="message">back at my old employer we used <a rel="nofollow" href="https://scm-manager.org/">https://scm-manager.org/</a>  internally, also supports GitHub-like usage, but the UI is inferior</span></div><div class="line" id="200645"><span class="nick" style="color:#bc80bd"><a href="#200645" label="[20:06:45]">&lt;Googulator&gt;</a></span><span class="message">this one is Java-based</span></div><div class="line" id="203454"><span class="nick" style="color:#2e2a4a"><a href="#203454" label="[20:34:54]">&lt;oriansj&gt;</a></span><span class="message">sourcehut is another option</span></div><div class="line" id="203854"><span class="nick" style="color:#389600"><a href="#203854" label="[20:38:54]">&lt;stikonas&gt;</a></span><span class="message">oriansj: I think I have a fairly simple fix for cp problem</span></div><div class="line" id="204100"><span class="nick" style="color:#bc80bd"><a href="#204100" label="[20:41:00]">&lt;Googulator&gt;</a></span><span class="message">doesn't Sourcehut have the same problem (only supporting e-mail workflows)?</span></div><div class="line" id="204121"><span class="nick" style="color:#389600"><a href="#204121" label="[20:41:21]">&lt;stikonas&gt;</a></span><span class="message">oriansj: <a rel="nofollow" href="https://github.com/oriansj/M2libc/pull/57">https://github.com/oriansj/M2libc/pull/57</a> </span></div><div class="line" id="204353"><span class="nick" style="color:#2e2a4a"><a href="#204353" label="[20:43:53]">&lt;oriansj&gt;</a></span><span class="message">Googulator: I am good with email and irc;</span></div><div class="line" id="204456"><span class="nick" style="color:#2e2a4a"><a href="#204456" label="[20:44:56]">&lt;oriansj&gt;</a></span><span class="message">stikonas: merged</span></div><div class="line" id="204518"><span class="nick" style="color:#389600"><a href="#204518" label="[20:45:18]">&lt;stikonas&gt;</a></span><span class="message">thanks</span></div><div class="line" id="204529"><span class="nick" style="color:#2e2a4a"><a href="#204529" label="[20:45:29]">&lt;oriansj&gt;</a></span><span class="message">irc is good if you need to talk and have something addressed *now* and email is better for refection and deep discussion.</span></div><div class="line" id="204536"><span class="nick" style="color:#bc80bd"><a href="#204536" label="[20:45:36]">&lt;Googulator&gt;</a></span><span class="message">I think many of us wouldn't be happy to move from a PR-based workflow to one similar to the Linux kernel</span></div><div class="line" id="204634"><span class="nick" style="color:#2e2a4a"><a href="#204634" label="[20:46:34]">&lt;oriansj&gt;</a></span><span class="message">Googulator: well that is the thing about here. Who does decides. What ever works best for the developers doing the work is what will be done.</span></div><div class="line" id="204636"><span class="nick" style="color:#bc80bd"><a href="#204636" label="[20:46:36]">&lt;Googulator&gt;</a></span><span class="message">Email alone isn't the problem, but rather the requirement to use low-level SMTP</span></div><div class="line" id="204702"><span class="nick" style="color:#bc80bd"><a href="#204702" label="[20:47:02]">&lt;Googulator&gt;</a></span><span class="message">Linux kernel-style workflows are really unfriendly to GUI users</span></div><div class="line" id="204712"><span class="nick" style="color:#2e2a4a"><a href="#204712" label="[20:47:12]">&lt;oriansj&gt;</a></span><span class="message">completely fair issue</span></div><div class="line" id="204834"><span class="nick" style="color:#2e2a4a"><a href="#204834" label="[20:48:34]">&lt;oriansj&gt;</a></span><span class="message">I don't expect git patch files; just simply saying my repo is here: ${URL} pull tag ${tag_name}</span></div><div class="line" id="204906"><span class="nick" style="color:#2e2a4a"><a href="#204906" label="[20:49:06]">&lt;oriansj&gt;</a></span><span class="message">and I do git add remote ${username} ${url}</span></div><div class="line" id="204933"><span class="nick" style="color:#2e2a4a"><a href="#204933" label="[20:49:33]">&lt;oriansj&gt;</a></span><span class="message">git fetch to get your updates; git lola to figure out what it is to review and merge</span></div><div class="line" id="204948"><span class="nick" style="color:#2e2a4a"><a href="#204948" label="[20:49:48]">&lt;oriansj&gt;</a></span><span class="message">and git merge when I like what you have done.</span></div><div class="line" id="204958"><span class="nick" style="color:#bc80bd"><a href="#204958" label="[20:49:58]">&lt;Googulator&gt;</a></span><span class="message">that sounds reasonable</span></div><div class="line" id="205017"><span class="nick" style="color:#bc80bd"><a href="#205017" label="[20:50:17]">&lt;Googulator&gt;</a></span><span class="message">and unlike the Linux convention of patches in the body of emails, it preserves Git commit identity</span></div><div class="line" id="205030"><span class="nick" style="color:#bc80bd"><a href="#205030" label="[20:50:30]">&lt;Googulator&gt;</a></span><span class="message">which is my other big gripe with the Linux workflow</span></div><div class="line" id="205056"><span class="nick" style="color:#bc80bd"><a href="#205056" label="[20:50:56]">&lt;Googulator&gt;</a></span><span class="message">is Sourcehut read-accessible for non-contributors?</span></div><div class="line" id="205143"><span class="nick" style="color:#2e2a4a"><a href="#205143" label="[20:51:43]">&lt;oriansj&gt;</a></span><span class="message">You tell me: <a rel="nofollow" href="https://git.sr.ht/~oriansj/M2libc">https://git.sr.ht/~oriansj/M2libc</a> </span></div><div class="line" id="205220"><span class="nick" style="color:#bc80bd"><a href="#205220" label="[20:52:20]">&lt;Googulator&gt;</a></span><span class="message">oh, so it's come a long way since the Audacity/Tenacity split</span></div><div class="line" id="205248"><span class="nick" style="color:#2e2a4a"><a href="#205248" label="[20:52:48]">&lt;oriansj&gt;</a></span><span class="message">hut is included in guix</span></div><div class="line" id="205250"><span class="nick" style="color:#389600"><a href="#205250" label="[20:52:50]">&lt;stikonas&gt;</a></span><span class="message">anyway, looks like the main alternatives are sourcehut / gitea / gitlab (and each of these can be self-hosted or one can use one of the public instances)</span></div><div class="line" id="205257"><span class="nick" style="color:#2e2a4a"><a href="#205257" label="[20:52:57]">&lt;oriansj&gt;</a></span><span class="message">there are emacs integrations too</span></div><div class="line" id="205328"><span class="nick" style="color:#bc80bd"><a href="#205328" label="[20:53:28]">&lt;Googulator&gt;</a></span><span class="message">tbh, that sounds like a minus for me</span></div><div class="line" id="205329"><span class="nick" style="color:#389600"><a href="#205329" label="[20:53:29]">&lt;stikonas&gt;</a></span><span class="message">but self-hosting is probably not easy...</span></div><div class="line" id="205345"><span class="nick" style="color:#389600"><a href="#205345" label="[20:53:45]">&lt;stikonas&gt;</a></span><span class="message">if you keep registration open, you'll immediately get lots of spam</span></div><div class="line" id="205501"><span class="nick" style="color:#2e2a4a"><a href="#205501" label="[20:55:01]">&lt;oriansj&gt;</a></span><span class="message">well, we can use the lobste.rs user account model if we self-host.</span></div><div class="line" id="205548"><span class="nick" style="color:#2e2a4a"><a href="#205548" label="[20:55:48]">&lt;oriansj&gt;</a></span><span class="message">but I don't yet see a need for us to do so.</span></div><div class="line" id="205759"><span class="nick" style="color:#2e2a4a"><a href="#205759" label="[20:57:59]">&lt;oriansj&gt;</a></span><span class="message">everyone gets to do what they prefer; git remotes works around a great deal of those coordination problems and we need only agree on where the master repos should be located and if anything goes wrong the people actively working can collectively decide on the solution.</span></div><div class="line" id="210403"><span class="nick" style="color:#bc80bd"><a href="#210403" label="[21:04:03]">&lt;Googulator&gt;</a></span><span class="message">there's this option too: <a rel="nofollow" href="https://code.rhodecode.com/">https://code.rhodecode.com/</a> </span></div><div class="line" id="210638"><span class="nick" style="color:#bc80bd"><a href="#210638" label="[21:06:38]">&lt;Googulator&gt;</a></span><span class="message">very similar to Kallithea (in fact, Kallithea is a fork of RhodeCode), but unlike Kallithea, it has its own hosting option</span></div><div class="line" id="210955"><span class="nick" style="color:#2e2a4a"><a href="#210955" label="[21:09:55]">&lt;oriansj&gt;</a></span><span class="message">]</span></div><div class="line" id="211013"><span class="nick" style="color:#bc80bd"><a href="#211013" label="[21:10:13]">&lt;Googulator&gt;</a></span><span class="message">about sourcehut, there's an important caveat: <a rel="nofollow" href="https://sourcehut.org/alpha-details/">https://sourcehut.org/alpha-details/</a> </span></div><div class="line" id="211037"><span class="nick" style="color:#bc80bd"><a href="#211037" label="[21:10:37]">&lt;Googulator&gt;</a></span><span class="message">tl;dr: it's only free to use for now; will become paid later, even for open-source projects</span></div><div class="line" id="211210"><span class="nick" style="color:#2e2a4a"><a href="#211210" label="[21:12:10]">&lt;oriansj&gt;</a></span><span class="message">Oh, I have been paying to support development of AGPLv3 software</span></div><div class="line" id="211352"><span class="nick" style="color:#2e2a4a"><a href="#211352" label="[21:13:52]">&lt;oriansj&gt;</a></span><span class="message">just like I would have been willing to pay for savannah usage if it was an option.</span></div><div class="line" id="211601"><span class="nick" style="color:#2e2a4a"><a href="#211601" label="[21:16:01]">&lt;oriansj&gt;</a></span><span class="message">just like how I am willing to pay domain registration fees and VPS monthly costs to enable effective cooperation. (I just lack time to play administrator and am more than happy to give others the option to do so)</span></div><div class="line" id="211809"><span class="nick" style="color:#2e2a4a"><a href="#211809" label="[21:18:09]">&lt;oriansj&gt;</a></span><span class="message">I am certain a $50/Month VPS is plenty powerful to cover all of our collectively CI workflows and I am willing to pay for it. I just lack the time to setup and administrate it.</span></div><div class="line" id="211825"><span class="nick" style="color:#2e2a4a"><a href="#211825" label="[21:18:25]">&lt;oriansj&gt;</a></span><span class="message">^collectively^collective^</span></div><div class="line" id="212314"><span class="nick" style="color:#2e2a4a"><a href="#212314" label="[21:23:14]">&lt;oriansj&gt;</a></span><span class="message">I have the bootstrapping.world domain registered for the next decade for any thing we might want to setup infrastructure for. (only wiki.bootstrapping.world is kind of setup)</span></div><div class="line" id="212338"><span class="nick" style="color:#2e2a4a"><a href="#212338" label="[21:23:38]">&lt;oriansj&gt;</a></span><span class="message">(as a hedge against our main wiki getting lost)</span></div><div class="line" id="213331"><span class="nick" style="color:#389600"><a href="#213331" label="[21:33:31]">&lt;stikonas&gt;</a></span><span class="message">ok, with cp fixed, I think all of stage0-posix (except for kaem-optional-seed) and mes is working on UEFI (at least on my system, others might encounter some other issues as is common with new software)</span></div><div class="line" id="213444"><span class="nick" style="color:#389600"><a href="#213444" label="[21:34:44]">&lt;stikonas&gt;</a></span><span class="message">the next step is probably fix posix bootstrap on amd64...</span></div><div class="line" id="213621"><span class="nick" style="color:#2e2a4a"><a href="#213621" label="[21:36:21]">&lt;oriansj&gt;</a></span><span class="message">great work stikonas</span></div><div class="line" id="213658"><span class="nick" style="color:#389600"><a href="#213658" label="[21:36:58]">&lt;stikonas&gt;</a></span><span class="message">well, cp fix was fairly trivial...</span></div><div class="line" id="213735"><span class="nick" style="color:#2e2a4a"><a href="#213735" label="[21:37:35]">&lt;oriansj&gt;</a></span><span class="message">I was most excited about mes working on UEFI</span></div><div class="line" id="213929"><span class="nick" style="color:#389600"><a href="#213929" label="[21:39:29]">&lt;stikonas&gt;</a></span><span class="message">yes, though not directly\</span></div><div class="line" id="213936"><span class="nick" style="color:#389600"><a href="#213936" label="[21:39:36]">&lt;stikonas&gt;</a></span><span class="message">but perhaps this approach is better</span></div><div class="line" id="213957"><span class="nick" style="color:#389600"><a href="#213957" label="[21:39:57]">&lt;stikonas&gt;</a></span><span class="message">last year when I started stage0-uefi, I thought we'll have to port mes libc to uefi</span></div><div class="line" id="214035"><span class="nick" style="color:#bc80bd"><a href="#214035" label="[21:40:35]">&lt;Googulator&gt;</a></span><span class="message">stikonas: &quot;fix posix bootstrap on amd64&quot; - as in the known issue of mescc apparently miscompiling tcc?</span></div><div class="line" id="214036"><span class="nick" style="color:#389600"><a href="#214036" label="[21:40:36]">&lt;stikonas&gt;</a></span><span class="message">but now with a fairly simple program (posix-runner) we seem to be able to reuse M2libc's support for UEFI without needing to do new work</span></div><div class="line" id="214052"><span class="nick" style="color:#389600"><a href="#214052" label="[21:40:52]">&lt;stikonas&gt;</a></span><span class="message">Googulator: yes, it is miscompiling tcc on amd64 right now</span></div><div class="line" id="214102"><span class="nick" style="color:#389600"><a href="#214102" label="[21:41:02]">&lt;stikonas&gt;</a></span><span class="message">also reproducible on normal posix bootstrap</span></div><div class="line" id="214113"><span class="nick" style="color:#389600"><a href="#214113" label="[21:41:13]">&lt;stikonas&gt;</a></span><span class="message">well, we fixed it sufficiently for tcc-mes to build</span></div><div class="line" id="214124"><span class="nick" style="color:#389600"><a href="#214124" label="[21:41:24]">&lt;stikonas&gt;</a></span><span class="message">and even fixed it to build some C files</span></div><div class="line" id="214155"><span class="nick" style="color:#389600"><a href="#214155" label="[21:41:55]">&lt;stikonas&gt;</a></span><span class="message">Googulator: basically same issue right now if you try to build live-bootstrap with --arch amd64</span></div><div class="line" id="214157"><span class="nick" style="color:#bc80bd"><a href="#214157" label="[21:41:57]">&lt;Googulator&gt;</a></span><span class="message">last time I checked, tcc-mes couldn't even properly parse its command line</span></div><div class="line" id="214220"><span class="nick" style="color:#bc80bd"><a href="#214220" label="[21:42:20]">&lt;Googulator&gt;</a></span><span class="message">it just printed what it should print with --version, then went into an infinite malloc loop</span></div><div class="line" id="214226"><span class="nick" style="color:#389600"><a href="#214226" label="[21:42:26]">&lt;stikonas&gt;</a></span><span class="message">that might be the state in mes-0.25</span></div><div class="line" id="214234"><span class="nick" style="color:#389600"><a href="#214234" label="[21:42:34]">&lt;stikonas&gt;</a></span><span class="message">I fixed a few more things</span></div><div class="line" id="214245"><span class="nick" style="color:#389600"><a href="#214245" label="[21:42:45]">&lt;stikonas&gt;</a></span><span class="message">and mes-wip branch works quite a bit better</span></div><div class="line" id="214247"><span class="nick" style="color:#bc80bd"><a href="#214247" label="[21:42:47]">&lt;Googulator&gt;</a></span><span class="message">IIRC I tested that with 0.26</span></div><div class="line" id="214335"><span class="nick" style="color:#389600"><a href="#214335" label="[21:43:35]">&lt;stikonas&gt;</a></span><span class="message">Googulator: you would still be missing some fixes even with 0.26</span></div><div class="line" id="214344"><span class="nick" style="color:#389600"><a href="#214344" label="[21:43:44]">&lt;stikonas&gt;</a></span><span class="message">e.g. <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/commit/?h=wip&amp;id=e50d918842c61519000b0f3b39ea3e13d7cbbf76">https://git.savannah.gnu.org/cgit/mes.git/commit/?h=wip&amp;id=e50d918842c61519000b0f3b39ea3e13d7cbbf76</a> </span></div><div class="line" id="214400"><span class="nick" style="color:#389600"><a href="#214400" label="[21:44:00]">&lt;stikonas&gt;</a></span><span class="message">which admittedly breaks a test</span></div><div class="line" id="214406"><span class="nick" style="color:#389600"><a href="#214406" label="[21:44:06]">&lt;stikonas&gt;</a></span><span class="message">but it still a correct thing to do</span></div><div class="line" id="214505"><span class="nick" style="color:#389600"><a href="#214505" label="[21:45:05]">&lt;stikonas&gt;</a></span><span class="message">Googulator: this is what I was able to get to: <a rel="nofollow" href="https://paste.debian.net/1306993/">https://paste.debian.net/1306993/</a> </span></div><div class="line" id="214540"><span class="nick" style="color:#389600"><a href="#214540" label="[21:45:40]">&lt;stikonas&gt;</a></span><span class="message">one could also go to individual c files rather than unified-libc</span></div><div class="line" id="214556"><span class="nick" style="color:#389600"><a href="#214556" label="[21:45:56]">&lt;stikonas&gt;</a></span><span class="message">then some files build, some cause crash with a few different errors</span></div><div class="line" id="214625"><span class="nick" style="color:#389600"><a href="#214625" label="[21:46:25]">&lt;stikonas&gt;</a></span><span class="message">it's hard to debug though</span></div><div class="line" id="214648"><span class="nick" style="color:#389600"><a href="#214648" label="[21:46:48]">&lt;stikonas&gt;</a></span><span class="message">the debug info that blood-elf emits is not super helpful for complex programs</span></div><div class="line" id="214704"><span class="nick" style="color:#389600"><a href="#214704" label="[21:47:04]">&lt;stikonas&gt;</a></span><span class="message">it's just labels functions in assembly</span></div><div class="line" id="214719"><span class="nick" style="color:#389600"><a href="#214719" label="[21:47:19]">&lt;stikonas&gt;</a></span><span class="message">so adding debug prints is probably the way to go</span></div><div class="line" id="214746"><span class="nick" style="color:#bc80bd"><a href="#214746" label="[21:47:46]">&lt;Googulator&gt;</a></span><span class="message">is blood-elf still used by mes?</span></div><div class="line" id="215146"><span class="nick" style="color:#2e2a4a"><a href="#215146" label="[21:51:46]">&lt;oriansj&gt;</a></span><span class="message">Googulator: yep</span></div><div class="line" id="215206"><span class="nick" style="color:#2e2a4a"><a href="#215206" label="[21:52:06]">&lt;oriansj&gt;</a></span><span class="message">otherwise you get stripped binaries with no labels at all</span></div><div class="line" id="215219"><span class="nick" style="color:#2e2a4a"><a href="#215219" label="[21:52:19]">&lt;oriansj&gt;</a></span><span class="message">same for M2-Planet</span></div><div class="line" id="215254"><span class="nick" style="color:#2e2a4a"><a href="#215254" label="[21:52:54]">&lt;oriansj&gt;</a></span><span class="message">M1 and hex2 don't generate anything for gdb or objdump to leverage</span></div><div class="line" id="215410"><span class="nick" style="color:#bc80bd"><a href="#215410" label="[21:54:10]">&lt;Googulator&gt;</a></span><span class="message">M2-Planet yes, but I wasn't aware mescc also uses M1 as its backend</span></div><div class="line" id="215455"><span class="nick" style="color:#2e2a4a"><a href="#215455" label="[21:54:55]">&lt;oriansj&gt;</a></span><span class="message">why do you think mescc outputs M1 assembly?</span></div><div class="line" id="215522"><span class="nick" style="color:#2e2a4a"><a href="#215522" label="[21:55:22]">&lt;oriansj&gt;</a></span><span class="message">mescc-tools was orginally written for mescc</span></div><div class="line" id="215601"><span class="nick" style="color:#2e2a4a"><a href="#215601" label="[21:56:01]">&lt;oriansj&gt;</a></span><span class="message">and eliminated whole classes of bugs for mescc (as range checking and the like produced easy to debug messages)</span></div><div class="line" id="215653"><span class="nick" style="color:#2e2a4a"><a href="#215653" label="[21:56:53]">&lt;oriansj&gt;</a></span><span class="message">compile, assemble, link -&gt; binary is far easier to reason about and debug than  compile -&gt; binary</span></div><div class="line" id="215751"><span class="nick" style="color:#bc80bd"><a href="#215751" label="[21:57:51]">&lt;Googulator&gt;</a></span><span class="message">I thought mescc output straight binary code</span></div><div class="line" id="215819"><span class="nick" style="color:#2e2a4a"><a href="#215819" label="[21:58:19]">&lt;oriansj&gt;</a></span><span class="message">nope, it spawns M1, blood-elf and hex2 to create that illusion.</span></div><div class="line" id="215830"><span class="nick" style="color:#2e2a4a"><a href="#215830" label="[21:58:30]">&lt;oriansj&gt;</a></span><span class="message">much like M2-Mesoplanet</span></div><div class="line" id="220259"><span class="nick" style="color:#389600"><a href="#220259" label="[22:02:59]">&lt;stikonas&gt;</a></span><span class="message">it even hides things a bit better than mesoplanet</span></div><div class="line" id="220357"><span class="nick" style="color:#389600"><a href="#220357" label="[22:03:57]">&lt;stikonas&gt;</a></span><span class="message">and supports things like -llibc+tcc to add libc+tcc.s and libc+tcc.a in M1 and hex2 commnad lines</span></div><div class="line" id="220431"><span class="nick" style="color:#389600"><a href="#220431" label="[22:04:31]">&lt;stikonas&gt;</a></span><span class="message">Googulator: you probably mixed it up with tcc</span></div><div class="line" id="220437"><span class="nick" style="color:#389600"><a href="#220437" label="[22:04:37]">&lt;stikonas&gt;</a></span><span class="message">it's tcc that produces straight binary code</span></div><div class="line" id="221121"><span class="nick" style="color:#389600"><a href="#221121" label="[22:11:21]">&lt;stikonas&gt;</a></span><span class="message">tcc debut output is a bit better, but at least for bootstrappable tcc is also not fully working</span></div><div class="line" id="223958"><span class="nick" style="color:#6b8072"><a href="#223958" label="[22:39:58]">&lt;janneke&gt;</a></span><span class="message">fwiw, until v0.7 mescc also wrote binary code directly</span></div><div class="line" id="224100"><span class="nick" style="color:#6b8072"><a href="#224100" label="[22:41:00]">&lt;janneke&gt;</a></span><span class="message">around that time, oriansj convinced me to write hex2 and/or hex3 and later mescc switched to M1</span></div><div class="line" id="224106"><span class="nick" style="color:#6b8072"><a href="#224106" label="[22:41:06]">&lt;janneke&gt;</a></span><span class="message">that was a very good move</span></div><div class="line" id="224745"><span class="nick" style="color:#bc80bd"><a href="#224745" label="[22:47:45]">&lt;Googulator&gt;</a></span><span class="message">looks like we have a bit of a memory regression with Fiwix 1.5.0</span></div><div class="line" id="224758"><span class="nick" style="color:#bc80bd"><a href="#224758" label="[22:47:58]">&lt;Googulator&gt;</a></span><span class="message">large initrds are not being relocated anymore</span></div><div class="line" id="224816"><span class="nick" style="color:#bc80bd"><a href="#224816" label="[22:48:16]">&lt;Googulator&gt;</a></span><span class="message">so they impinge upon userspace-accessible memory</span></div><div class="line" id="224850"><span class="nick" style="color:#bc80bd"><a href="#224850" label="[22:48:50]">&lt;Googulator&gt;</a></span><span class="message">memory: total=2097152KB, user=431908KB, kernel=1664724KB, reserved=520KB</span></div><div class="line" id="224921"><span class="nick" style="color:#bc80bd"><a href="#224921" label="[22:49:21]">&lt;Googulator&gt;</a></span><span class="message">which explains why unxz was going OOM even after I fixed the memory leaks</span></div><div class="line" id="224934"><span class="nick" style="color:#bc80bd"><a href="#224934" label="[22:49:34]">&lt;Googulator&gt;</a></span><span class="message">requiring additional memory usage reduction beyond just leak fixing</span></div><div class="line" id="225042"><span class="nick" style="color:#bc80bd"><a href="#225042" label="[22:50:42]">&lt;Googulator&gt;</a></span><span class="message">by contrast, with 1.4.0-lb3, we had memory: total=1048576KB, user=705420KB, kernel=342756KB, reserved=408KB</span></div><div class="line" id="225202"><span class="nick" style="color:#bc80bd"><a href="#225202" label="[22:52:02]">&lt;Googulator&gt;</a></span><span class="message">Mikaku: also, it appears both versions allocate the kexec space within the 1 or 2 gigabytes of &quot;normal&quot; memory, but at least 1.4.0 clearly tolerates initrd being outside that range</span></div><div class="line" id="225250"><span class="nick" style="color:#bc80bd"><a href="#225250" label="[22:52:50]">&lt;Googulator&gt;</a></span><span class="message">so maybe it would be worth allocating the kexec ramdisk preferably outside &quot;normal&quot; memory</span></div><br /></div></body></html>