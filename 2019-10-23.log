<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2019-10-23.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="172920"><span class="nick" style="color:#8dd3c7"><a href="#172920" label="[17:29:20]">&lt;janneke&gt;</a></span><span class="message">OriansJ: yay, my first mes-m2 segfault!</span></div><div class="line" id="173023"><span class="nick" style="color:#8dd3c7"><a href="#173023" label="[17:30:23]">&lt;janneke&gt;</a></span><span class="message">pointer-based garbage collector compiles ... but still buggy/problematic</span></div><div class="line" id="214133"><span class="nick" style="color:#2e2a4a"><a href="#214133" label="[21:41:33]">&lt;OriansJ&gt;</a></span><span class="message">janneke: I am going to be adding a block based compressing garbage collector when I finish getting mes-m2 into the form I like</span></div><div class="line" id="214211"><span class="nick" style="color:#2e2a4a"><a href="#214211" label="[21:42:11]">&lt;OriansJ&gt;</a></span><span class="message">It'll significantly reduce the memory footprint and speed up compression</span></div><div class="line" id="215153"><span class="nick">***</span><span class="message notice">ng0_ is now known as ng0</span></div><div class="line" id="220741"><span class="nick" style="color:#8dd3c7"><a href="#220741" label="[22:07:41]">&lt;janneke&gt;</a></span><span class="message">OriansJ: oh!? wow...</span></div><div class="line" id="220946"><span class="nick" style="color:#8dd3c7"><a href="#220946" label="[22:09:46]">&lt;janneke&gt;</a></span><span class="message">OriansJ: i just found that &amp;&amp; does not seem to short-circuit in M2-Planet</span></div><div class="line" id="221004"><span class="nick" style="color:#8dd3c7"><a href="#221004" label="[22:10:04]">&lt;janneke&gt;</a></span><span class="message">ie, this segfaults: { char *a = 0; if (a &amp;&amp; a[0]) return 1; }</span></div><div class="line" id="221004"><span class="nick" style="color:#8dd3c7"><a href="#221004" label="[22:10:04]">&lt;janneke&gt;</a></span><span class="message"> </span></div><div class="line" id="222118"><span class="nick" style="color:#8dd3c7"><a href="#222118" label="[22:21:18]">&lt;janneke&gt;</a></span><span class="message">meanwhile, i haven't got my stop-and-copy garbage collector to fully work</span></div><div class="line" id="222126"><span class="nick" style="color:#2e2a4a"><a href="#222126" label="[22:21:26]">&lt;OriansJ&gt;</a></span><span class="message">janneke: yeah, nothing short-circuits at all</span></div><div class="line" id="222128"><span class="nick" style="color:#8dd3c7"><a href="#222128" label="[22:21:28]">&lt;janneke&gt;</a></span><span class="message">with pointer-based cells, that is</span></div><div class="line" id="222144"><span class="nick" style="color:#8dd3c7"><a href="#222144" label="[22:21:44]">&lt;janneke&gt;</a></span><span class="message">OriansJ: okay, that's not a problem...but very good to know!</span></div><div class="line" id="222147"><span class="nick" style="color:#8dd3c7"><a href="#222147" label="[22:21:47]">&lt;janneke&gt;</a></span><span class="message">:)</span></div><div class="line" id="222214"><span class="nick" style="color:#2e2a4a"><a href="#222214" label="[22:22:14]">&lt;OriansJ&gt;</a></span><span class="message">it also is the Wirth way of doing things I guess (how pascal does comparisons)</span></div><div class="line" id="222327"><span class="nick" style="color:#2e2a4a"><a href="#222327" label="[22:23:27]">&lt;OriansJ&gt;</a></span><span class="message">It was selected for simplicity of implementation.</span></div><div class="line" id="222526"><span class="nick" style="color:#2e2a4a"><a href="#222526" label="[22:25:26]">&lt;OriansJ&gt;</a></span><span class="message">You'll also find that goto's are naive gotos as well</span></div><div class="line" id="222555"><span class="nick" style="color:#2e2a4a"><a href="#222555" label="[22:25:55]">&lt;OriansJ&gt;</a></span><span class="message">aka gotos will jump to any label in any function but will not do any stack clean up at all</span></div><div class="line" id="222649"><span class="nick" style="color:#8dd3c7"><a href="#222649" label="[22:26:49]">&lt;janneke&gt;</a></span><span class="message">hah, we could use that to our advantage ... *evil grin*</span></div><div class="line" id="222714"><span class="nick" style="color:#2e2a4a"><a href="#222714" label="[22:27:14]">&lt;OriansJ&gt;</a></span><span class="message">only if you are careful</span></div><div class="line" id="222735"><span class="nick" style="color:#2e2a4a"><a href="#222735" label="[22:27:35]">&lt;OriansJ&gt;</a></span><span class="message">aka never do a int foo; inside of a goto</span></div><div class="line" id="222809"><span class="nick" style="color:#2e2a4a"><a href="#222809" label="[22:28:09]">&lt;OriansJ&gt;</a></span><span class="message">it will cause a stack offset that can cause problems</span></div><div class="line" id="222905"><span class="nick" style="color:#2e2a4a"><a href="#222905" label="[22:29:05]">&lt;OriansJ&gt;</a></span><span class="message">as it also does naive stack cleanup (it pops off the stack rather than simply reseting the pointer)</span></div><div class="line" id="222936"><span class="nick" style="color:#2e2a4a"><a href="#222936" label="[22:29:36]">&lt;OriansJ&gt;</a></span><span class="message">Which means there is a dirt cheap way to add speed to M2-Planet; that I left there for anyone who wants to make M2-Planet faster</span></div><div class="line" id="222946"><span class="nick" style="color:#2e2a4a"><a href="#222946" label="[22:29:46]">&lt;OriansJ&gt;</a></span><span class="message">(or M2-Planet generated binaries faster)</span></div><div class="line" id="223140"><span class="nick" style="color:#2e2a4a"><a href="#223140" label="[22:31:40]">&lt;OriansJ&gt;</a></span><span class="message">(I try to leave alot of fun ways to contribute in hope that new people see them and go hey I can do that in 5 minutes)</span></div><div class="line" id="223217"><span class="nick" style="color:#2e2a4a"><a href="#223217" label="[22:32:17]">&lt;OriansJ&gt;</a></span><span class="message">Trivial typos, grammar issues, obvious enhancements to performance or ports</span></div><div class="line" id="223246"><span class="nick" style="color:#2e2a4a"><a href="#223246" label="[22:32:46]">&lt;OriansJ&gt;</a></span><span class="message">the sort of thing that makes it easy to contribute and help make the world a better place</span></div><div class="line" id="224035"><span class="nick" style="color:#6b8072"><a href="#224035" label="[22:40:35]">&lt;stikonas&gt;</a></span><span class="message">my last typo fix required sed :D... too many to fix by hand</span></div><div class="line" id="225819"><span class="nick" style="color:#2e2a4a"><a href="#225819" label="[22:58:19]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: well that is because you have a far more impressive output than I do 0_0</span></div><div class="line" id="225918"><span class="nick" style="color:#80b1d3"><a href="#225918" label="[22:59:18]">&lt;xentrac&gt;</a></span><span class="message">you're both producing very impressive output</span></div><div class="line" id="230220"><span class="nick" style="color:#2e2a4a"><a href="#230220" label="[23:02:20]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: says the person behind dercuano ..... ^_-</span></div><div class="line" id="230450"><span class="nick" style="color:#80b1d3"><a href="#230450" label="[23:04:50]">&lt;xentrac&gt;</a></span><span class="message">have you been reading it?  I'd love to have your feedback!</span></div><div class="line" id="230812"><span class="nick" style="color:#2e2a4a"><a href="#230812" label="[23:08:12]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: yes but slowly</span></div><div class="line" id="230817"><span class="nick" style="color:#6b8072"><a href="#230817" label="[23:08:17]">&lt;stikonas&gt;</a></span><span class="message">my output is trivial... at least for this bootstrapping project :D OriansJ does bulk of the work</span></div><div class="line" id="230841"><span class="nick" style="color:#6b8072"><a href="#230841" label="[23:08:41]">&lt;stikonas&gt;</a></span><span class="message">I do work on some other projects though :D</span></div><div class="line" id="231017"><span class="nick" style="color:#2e2a4a"><a href="#231017" label="[23:10:17]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: every little bit helps ^_^</span></div><div class="line" id="231613"><span class="nick" style="color:#2e2a4a"><a href="#231613" label="[23:16:13]">&lt;OriansJ&gt;</a></span><span class="message">especially when I get stuck on such a trivial thing</span></div><div class="line" id="232321"><span class="nick" style="color:#80b1d3"><a href="#232321" label="[23:23:21]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: feel free to ask me about things or tell me things about it</span></div><div class="line" id="233149"><span class="nick" style="color:#2e2a4a"><a href="#233149" label="[23:31:49]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I'll be sure to do that from time to time ^_^</span></div><div class="line" id="233936"><span class="nick" style="color:#2e2a4a"><a href="#233936" label="[23:39:36]">&lt;OriansJ&gt;</a></span><span class="message">now that diff took a while to review</span></div><div class="line" id="234240"><span class="nick" style="color:#2e2a4a"><a href="#234240" label="[23:42:40]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: your M2-Planet commit failed to update the test100 answer; as that will be changed as the expected binary would be different</span></div><div class="line" id="234334"><span class="nick" style="color:#6b8072"><a href="#234334" label="[23:43:34]">&lt;stikonas&gt;</a></span><span class="message">OriansJ: oh I see, I'll fix it</span></div><div class="line" id="234406"><span class="nick" style="color:#2e2a4a"><a href="#234406" label="[23:44:06]">&lt;OriansJ&gt;</a></span><span class="message">thank you stikonas</span></div><div class="line" id="234406"><span class="nick" style="color:#6b8072"><a href="#234406" label="[23:44:06]">&lt;stikonas&gt;</a></span><span class="message">btw, I was a bit confused about some shared files... e.g. cc_x86 is present in many repos, are they simply synced to be the same?</span></div><div class="line" id="234441"><span class="nick" style="color:#2e2a4a"><a href="#234441" label="[23:44:41]">&lt;OriansJ&gt;</a></span><span class="message">currently yes but I probably should replace that by simply making them submodules in mescc-tools-seed</span></div><div class="line" id="234544"><span class="nick" style="color:#6b8072"><a href="#234544" label="[23:45:44]">&lt;stikonas&gt;</a></span><span class="message">is there a way to run all tests in M2-Planet?</span></div><div class="line" id="234557"><span class="nick" style="color:#2e2a4a"><a href="#234557" label="[23:45:57]">&lt;OriansJ&gt;</a></span><span class="message">stikonas: make clean test works pretty well</span></div><div class="line" id="234658"><span class="nick" style="color:#2e2a4a"><a href="#234658" label="[23:46:58]">&lt;OriansJ&gt;</a></span><span class="message">and export GET_MACHINE_FLAGS=&quot;--override x86&quot; will allow an AMD64 platform to test the x86 specific build tests too</span></div><div class="line" id="234723"><span class="nick" style="color:#6b8072"><a href="#234723" label="[23:47:23]">&lt;stikonas&gt;</a></span><span class="message">ok, I have AMD64 build here...</span></div><div class="line" id="234737"><span class="nick" style="color:#2e2a4a"><a href="#234737" label="[23:47:37]">&lt;OriansJ&gt;</a></span><span class="message">yep, most common platform for devs</span></div><div class="line" id="234804"><span class="nick" style="color:#6b8072"><a href="#234804" label="[23:48:04]">&lt;stikonas&gt;</a></span><span class="message">well, I have ARM64 machine too :D</span></div><div class="line" id="234812"><span class="nick" style="color:#6b8072"><a href="#234812" label="[23:48:12]">&lt;stikonas&gt;</a></span><span class="message">which nicely run without any blobs</span></div><div class="line" id="234854"><span class="nick" style="color:#2e2a4a"><a href="#234854" label="[23:48:54]">&lt;OriansJ&gt;</a></span><span class="message">well you could send --override armv7l if you wanted but then your processor would choke on trying to run an armv7l binary</span></div><div class="line" id="234924"><span class="nick" style="color:#6b8072"><a href="#234924" label="[23:49:24]">&lt;stikonas&gt;</a></span><span class="message">well, amd64 will be fine for now</span></div><div class="line" id="234933"><span class="nick" style="color:#2e2a4a"><a href="#234933" label="[23:49:33]">&lt;OriansJ&gt;</a></span><span class="message">but your aarch64 system should be able to handle that just fine</span></div><div class="line" id="235308"><span class="nick" style="color:#6b8072"><a href="#235308" label="[23:53:08]">&lt;stikonas&gt;</a></span><span class="message">hmm, need to build exec_enable before I can run all tests...</span></div><div class="line" id="235329"><span class="nick" style="color:#6b8072"><a href="#235329" label="[23:53:29]">&lt;stikonas&gt;</a></span><span class="message">test99 seems to require that</span></div><div class="line" id="235350"><span class="nick" style="color:#2e2a4a"><a href="#235350" label="[23:53:50]">&lt;OriansJ&gt;</a></span><span class="message">side effect of cc_500.c not supporting chmod</span></div><div class="line" id="235638"><span class="nick" style="color:#2e2a4a"><a href="#235638" label="[23:56:38]">&lt;OriansJ&gt;</a></span><span class="message">and I still have no idea why  kaem-optional-seed was changed; as the string rec* should not appear in the binary at all</span></div><br /></div></body></html>