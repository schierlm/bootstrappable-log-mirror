<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-12-29.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="001055"><span class="nick" style="color:#389600"><a href="#001055" label="[00:10:55]">&lt;nanonyme&gt;</a></span><span class="message">stikonas, I picked just older glibc</span></div><div class="line" id="001130"><span class="nick" style="color:#8dd3c7"><a href="#001130" label="[00:11:30]">&lt;stikonas&gt;</a></span><span class="message">yeah, older glibc does not need python</span></div><div class="line" id="001214"><span class="nick" style="color:#8dd3c7"><a href="#001214" label="[00:12:14]">&lt;stikonas&gt;</a></span><span class="message">although, if you need python later in your system, you'll still have to build it.</span></div><div class="line" id="001236"><span class="nick" style="color:#2e2a4a"><a href="#001236" label="[00:12:36]">&lt;muurkha&gt;</a></span><span class="message">driving a VGA in assembly isn't too hard; here's a 64-byte VGA graphics demo I wrote 13 years ago: <a rel="nofollow" href="https://www.mail-archive.com/kragen-hacks@canonical.org/msg00195.html">https://www.mail-archive.com/kragen-hacks@canonical.org/msg00195.html</a> </span></div><div class="line" id="001240"><span class="nick" style="color:#8dd3c7"><a href="#001240" label="[00:12:40]">&lt;stikonas&gt;</a></span><span class="message">it's probably from 2.27 or something like that</span></div><div class="line" id="001303"><span class="nick" style="color:#2e2a4a"><a href="#001303" label="[00:13:03]">&lt;muurkha&gt;</a></span><span class="message">although that does rely on the BIOS to set the video mode</span></div><div class="line" id="001353"><span class="nick" style="color:#8dd3c7"><a href="#001353" label="[00:13:53]">&lt;stikonas&gt;</a></span><span class="message">well, one one hand none of that is available on ARM</span></div><div class="line" id="001400"><span class="nick" style="color:#2e2a4a"><a href="#001400" label="[00:14:00]">&lt;muurkha&gt;</a></span><span class="message">T$'s Klappquadrat draws a visually more interesting pattern and also sets the palette in 64 bytes: <a rel="nofollow" href="http://canonical.org/~kragen/demo/klappquadrat.html">http://canonical.org/~kragen/demo/klappquadrat.html</a> </span></div><div class="line" id="001403"><span class="nick" style="color:#8dd3c7"><a href="#001403" label="[00:14:03]">&lt;stikonas&gt;</a></span><span class="message">on the other hand, ben eater's VGA card only has one mode</span></div><div class="line" id="001451"><span class="nick" style="color:#2e2a4a"><a href="#001451" label="[00:14:51]">&lt;muurkha&gt;</a></span><span class="message">yeah, if you're designing your graphics hardware yourself, you can choose to make it easier to initialize</span></div><div class="line" id="001539"><span class="nick" style="color:#6b8072"><a href="#001539" label="[00:15:39]">&lt;doras&gt;</a></span><span class="message">flex-2.5.11.tar.gz can't be download because the strange server hosting it is down: <a rel="nofollow" href="https://download.nust.na/pub2/openpkg1/sources/DST/flex/flex-2.5.11.tar.gz">https://download.nust.na/pub2/openpkg1/sources/DST/flex/flex-2.5.11.tar.gz</a> </span></div><div class="line" id="001619"><span class="nick" style="color:#6b8072"><a href="#001619" label="[00:16:19]">&lt;doras&gt;</a></span><span class="message">We really should download it from a more reliable location...</span></div><div class="line" id="001735"><span class="nick" style="color:#8dd3c7"><a href="#001735" label="[00:17:35]">&lt;stikonas&gt;</a></span><span class="message">doras: there is no other location</span></div><div class="line" id="001735"><span class="nick" style="color:#2e2a4a"><a href="#001735" label="[00:17:35]">&lt;muurkha&gt;</a></span><span class="message">not sure how complex setting the mode by hand is even on the VGA.  I'm guessing it's about six instructions</span></div><div class="line" id="001742"><span class="nick" style="color:#8dd3c7"><a href="#001742" label="[00:17:42]">&lt;stikonas&gt;</a></span><span class="message">doras: I do have a copy locally</span></div><div class="line" id="001746"><span class="nick" style="color:#6b8072"><a href="#001746" label="[00:17:46]">&lt;doras&gt;</a></span><span class="message">Oh wait, it's not available in https.</span></div><div class="line" id="001747"><span class="nick" style="color:#2e2a4a"><a href="#001747" label="[00:17:47]">&lt;muurkha&gt;</a></span><span class="message">oh dear :(</span></div><div class="line" id="001759"><span class="nick" style="color:#6b8072"><a href="#001759" label="[00:17:59]">&lt;doras&gt;</a></span><span class="message">Clear http works.</span></div><div class="line" id="001808"><span class="nick" style="color:#6b8072"><a href="#001808" label="[00:18:08]">&lt;doras&gt;</a></span><span class="message"> <a rel="nofollow" href="http://download.nust.na/pub2/openpkg1/sources/DST/flex/flex-2.5.11.tar.gz">http://download.nust.na/pub2/openpkg1/sources/DST/flex/flex-2.5.11.tar.gz</a> </span></div><div class="line" id="001817"><span class="nick" style="color:#8dd3c7"><a href="#001817" label="[00:18:17]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://stikonas.eu/files/bootstrap/flex-2.5.11.tar.gz">https://stikonas.eu/files/bootstrap/flex-2.5.11.tar.gz</a> </span></div><div class="line" id="001825"><span class="nick" style="color:#8dd3c7"><a href="#001825" label="[00:18:25]">&lt;stikonas&gt;</a></span><span class="message">well, I have https on my server</span></div><div class="line" id="001850"><span class="nick" style="color:#8dd3c7"><a href="#001850" label="[00:18:50]">&lt;stikonas&gt;</a></span><span class="message">and I suspect fossy also has a copy somewhere</span></div><div class="line" id="001913"><span class="nick" style="color:#8dd3c7"><a href="#001913" label="[00:19:13]">&lt;stikonas&gt;</a></span><span class="message">but it's on my home network, so only 18 Mbps upload</span></div><div class="line" id="002404"><span class="nick" style="color:#6b8072"><a href="#002404" label="[00:24:04]">&lt;doras&gt;</a></span><span class="message">GitHub/GitLab + Git LFS works great for mirroring tarballs, by the way.</span></div><div class="line" id="003126"><span class="nick" style="color:#80b1d3"><a href="#003126" label="[00:31:26]">&lt;bauen1&gt;</a></span><span class="message">aren't the tar balls also uploaded to <a rel="nofollow" href="https://www.softwareheritage.org/">https://www.softwareheritage.org/</a>  ?</span></div><div class="line" id="003200"><span class="nick" style="color:#8dd3c7"><a href="#003200" label="[00:32:00]">&lt;stikonas&gt;</a></span><span class="message">most of the tarballs are from GNU FTP mirror network, so are fairly well mirrored</span></div><div class="line" id="003424"><span class="nick" style="color:#80b1d3"><a href="#003424" label="[00:34:24]">&lt;bauen1&gt;</a></span><span class="message">muurkha: the challenge is having a trusted input/output peripheral, if you have that and a trusted cpu (with e.g. signed boot support and a little bit of secure storage) then if you trust your hdd / network adapter / other peripheral doesn't matter anymore</span></div><div class="line" id="003502"><span class="nick" style="color:#8dd3c7"><a href="#003502" label="[00:35:02]">&lt;stikonas&gt;</a></span><span class="message">well, software heritage can't find flex 2.5.11</span></div><div class="line" id="003701"><span class="nick" style="color:#2e2a4a"><a href="#003701" label="[00:37:01]">&lt;muurkha&gt;</a></span><span class="message">bauen1: it does become a problem in many fewer circumstances, yes.  you don't even need the trusted I/O for many applications if you have signed boot and secure storage for keys</span></div><div class="line" id="003805"><span class="nick" style="color:#80b1d3"><a href="#003805" label="[00:38:05]">&lt;bauen1&gt;</a></span><span class="message">muurkha: true, you only need trusted I/O if you're talking to a human, if you're talking to another computer then untrusted I/O (i.e. network) is usually enough ; but for bootstrapping you want some trusted I/O</span></div><div class="line" id="003834"><span class="nick" style="color:#80b1d3"><a href="#003834" label="[00:38:34]">&lt;bauen1&gt;</a></span><span class="message">but then actually getting a cpu you can trust is incredibly hard, basically impossible, so that probably shouldn't be your biggest worry</span></div><div class="line" id="003841"><span class="nick" style="color:#2e2a4a"><a href="#003841" label="[00:38:41]">&lt;muurkha&gt;</a></span><span class="message">yeah, if you want to use the computer to look at your source code</span></div><div class="line" id="003857"><span class="nick" style="color:#2e2a4a"><a href="#003857" label="[00:38:57]">&lt;muurkha&gt;</a></span><span class="message">I don't think it's that hard, it'll just take a few years of effort</span></div><div class="line" id="003920"><span class="nick" style="color:#2e2a4a"><a href="#003920" label="[00:39:20]">&lt;muurkha&gt;</a></span><span class="message">and you might be able to use existing microcontrollers</span></div><div class="line" id="004000"><span class="nick" style="color:#80b1d3"><a href="#004000" label="[00:40:00]">&lt;bauen1&gt;</a></span><span class="message">there's also this guy making ICs in his garagae, iirc he's up to 1000 transistors per chip, which should be enough to build a simple CPU</span></div><div class="line" id="004141"><span class="nick" style="color:#2e2a4a"><a href="#004141" label="[00:41:41]">&lt;muurkha&gt;</a></span><span class="message">Sam,</span></div><div class="line" id="004142"><span class="nick" style="color:#2e2a4a"><a href="#004142" label="[00:41:42]">&lt;muurkha&gt;</a></span><span class="message"> </span></div><div class="line" id="004142"><span class="nick" style="color:#2e2a4a"><a href="#004142" label="[00:41:42]">&lt;muurkha&gt;</a></span><span class="message">yeah</span></div><div class="line" id="004147"><span class="nick" style="color:#2e2a4a"><a href="#004147" label="[00:41:47]">&lt;muurkha&gt;</a></span><span class="message">oops, sorry</span></div><div class="line" id="004225"><span class="nick" style="color:#2e2a4a"><a href="#004225" label="[00:42:25]">&lt;muurkha&gt;</a></span><span class="message">I haven't been able to get a transistor CPU design much below 3000 transistors, and then you need some kind of RAM</span></div><div class="line" id="004314"><span class="nick" style="color:#80b1d3"><a href="#004314" label="[00:43:14]">&lt;bauen1&gt;</a></span><span class="message">muurkha: yes, you'll probably need a few of these chips to do it (including quite a few for RAM) (source: <a rel="nofollow" href="https://en.wikipedia.org/wiki/Transistor_count">https://en.wikipedia.org/wiki/Transistor_count</a>) </span></div><div class="line" id="004357"><span class="nick" style="color:#80b1d3"><a href="#004357" label="[00:43:57]">&lt;bauen1&gt;</a></span><span class="message">in theory you don't need too much ram if you can do authentication fast enough, then you could use some off the shell untrusted SRAM</span></div><div class="line" id="004451"><span class="nick" style="color:#6b8072"><a href="#004451" label="[00:44:51]">&lt;doras&gt;</a></span><span class="message">I wonder if it would be possible to ask the flex upstream (<a rel="nofollow" href="https://github.com/westes/flex">https://github.com/westes/flex</a>,  I think) to tag 2.5.11.</span></div><div class="line" id="004506"><span class="nick" style="color:#8dd3c7"><a href="#004506" label="[00:45:06]">&lt;stikonas&gt;</a></span><span class="message">doras: isn't it tagged?</span></div><div class="line" id="004523"><span class="nick" style="color:#8dd3c7"><a href="#004523" label="[00:45:23]">&lt;stikonas&gt;</a></span><span class="message">oh, maybe not on github</span></div><div class="line" id="004527"><span class="nick" style="color:#6b8072"><a href="#004527" label="[00:45:27]">&lt;doras&gt;</a></span><span class="message">It seems they have a tag for 2.5.10, but not 2.5.11</span></div><div class="line" id="004543"><span class="nick" style="color:#8dd3c7"><a href="#004543" label="[00:45:43]">&lt;stikonas&gt;</a></span><span class="message">I can find exact commit needed on gio's repository</span></div><div class="line" id="004639"><span class="nick" style="color:#8dd3c7"><a href="#004639" label="[00:46:39]">&lt;stikonas&gt;</a></span><span class="message">doras: <a rel="nofollow" href="https://gitlab.com/giomasce/flex/-/tree/506e9605baf4638ba47d37133c348df1385ef06c">https://gitlab.com/giomasce/flex/-/tree/506e9605baf4638ba47d37133c348df1385ef06c</a> </span></div><div class="line" id="004717"><span class="nick" style="color:#8dd3c7"><a href="#004717" label="[00:47:17]">&lt;stikonas&gt;</a></span><span class="message">actually this is with a few patches that we apply manually in live-bootstrap</span></div><div class="line" id="004718"><span class="nick" style="color:#8dd3c7"><a href="#004718" label="[00:47:18]">&lt;stikonas&gt;</a></span><span class="message">506e9605baf4638ba47d37133c348df1385ef06c</span></div><div class="line" id="004725"><span class="nick" style="color:#8dd3c7"><a href="#004725" label="[00:47:25]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/giomasce/flex/-/commits/506e9605baf4638ba47d37133c348df1385ef06c/">https://gitlab.com/giomasce/flex/-/commits/506e9605baf4638ba47d37133c348df1385ef06c/</a> </span></div><div class="line" id="004729"><span class="nick" style="color:#6b8072"><a href="#004729" label="[00:47:29]">&lt;doras&gt;</a></span><span class="message">It doesn't exist on github.</span></div><div class="line" id="004735"><span class="nick" style="color:#8dd3c7"><a href="#004735" label="[00:47:35]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://gitlab.com/giomasce/flex/-/commit/d160f0247ba1611aa59d28f027d6292ba24abb50">https://gitlab.com/giomasce/flex/-/commit/d160f0247ba1611aa59d28f027d6292ba24abb50</a> </span></div><div class="line" id="004737"><span class="nick" style="color:#8dd3c7"><a href="#004737" label="[00:47:37]">&lt;stikonas&gt;</a></span><span class="message">?</span></div><div class="line" id="004803"><span class="nick" style="color:#8dd3c7"><a href="#004803" label="[00:48:03]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/westes/flex/commits/d160f0247ba1611aa59d28f027d6292ba24abb50">https://github.com/westes/flex/commits/d160f0247ba1611aa59d28f027d6292ba24abb50</a> </span></div><div class="line" id="004806"><span class="nick" style="color:#8dd3c7"><a href="#004806" label="[00:48:06]">&lt;stikonas&gt;</a></span><span class="message">this one is there</span></div><div class="line" id="004820"><span class="nick" style="color:#8dd3c7"><a href="#004820" label="[00:48:20]">&lt;stikonas&gt;</a></span><span class="message">just not explicitely tagged</span></div><div class="line" id="004836"><span class="nick" style="color:#6b8072"><a href="#004836" label="[00:48:36]">&lt;doras&gt;</a></span><span class="message">That one does, yeah.</span></div><div class="line" id="005244"><span class="nick" style="color:#2e2a4a"><a href="#005244" label="[00:52:44]">&lt;muurkha&gt;</a></span><span class="message">bauen1: you probably need at least 1024 transistors of RAM, more likely 8192</span></div><div class="line" id="005458"><span class="nick" style="color:#80b1d3"><a href="#005458" label="[00:54:58]">&lt;bauen1&gt;</a></span><span class="message">muurkha: for how many bytes ?</span></div><div class="line" id="005523"><span class="nick" style="color:#2e2a4a"><a href="#005523" label="[00:55:23]">&lt;muurkha&gt;</a></span><span class="message">64–512</span></div><div class="line" id="005609"><span class="nick" style="color:#2e2a4a"><a href="#005609" label="[00:56:09]">&lt;muurkha&gt;</a></span><span class="message">I mean maybe there's a secure way to encrypt off-chip RAM that doesn't need that much memory?  I don't know of it</span></div><div class="line" id="005630"><span class="nick" style="color:#80b1d3"><a href="#005630" label="[00:56:30]">&lt;bauen1&gt;</a></span><span class="message">muurkha: wikipedia says 6 transistors per bit, so i assume much of that will also go to decoder logic ?</span></div><div class="line" id="005826"><span class="nick" style="color:#80b1d3"><a href="#005826" label="[00:58:26]">&lt;bauen1&gt;</a></span><span class="message">muurkha: you'd need authentication not encryption, but that probably doesn't make it much easier</span></div><div class="line" id="005931"><span class="nick" style="color:#80b1d3"><a href="#005931" label="[00:59:31]">&lt;bauen1&gt;</a></span><span class="message">or well, if you eventually need encryption then you'll need another 256 bits for your private key and whatever temporary storage you need ; that doesn't need to be very fast</span></div><div class="line" id="010014"><span class="nick" style="color:#2e2a4a"><a href="#010014" label="[01:00:14]">&lt;muurkha&gt;</a></span><span class="message">6 transistors per bit would make 64 bytes (512 bits) 1536 transistors, but that's SRAM; dynamic logic schemes can often manage less, and are a good fit with the bit-serial processing I applied to get Calculus Vaporis down below 3000 transistors (at a ruinous performance cost)</span></div><div class="line" id="010040"><span class="nick" style="color:#80b1d3"><a href="#010040" label="[01:00:40]">&lt;bauen1&gt;</a></span><span class="message">muurkha: i see i messed up bits / bytes once again</span></div><div class="line" id="010314"><span class="nick" style="color:#6b8072"><a href="#010314" label="[01:03:14]">&lt;doras&gt;</a></span><span class="message">Worth a shot: <a rel="nofollow" href="https://github.com/westes/flex/issues/512">https://github.com/westes/flex/issues/512</a> </span></div><div class="line" id="011144"><span class="nick" style="color:#80b1d3"><a href="#011144" label="[01:11:44]">&lt;bauen1&gt;</a></span><span class="message">muurkha: looks like OPTEE uses 1 sha256 hash per 4KB of memory, so for 4MB of external memory you'd need 32KB of trusted RAM, a few KB of cache and a fast sha256 implementation (either done by the CPU itself or implemented in hardware)</span></div><div class="line" id="011322"><span class="nick" style="color:#2e2a4a"><a href="#011322" label="[01:13:22]">&lt;muurkha&gt;</a></span><span class="message">yeah, as your cache drops below 4KiB that would get inefficient fast :)</span></div><div class="line" id="011730"><span class="nick" style="color:#80b1d3"><a href="#011730" label="[01:17:30]">&lt;bauen1&gt;</a></span><span class="message">so perhaphs you could get away with 1MB of SRAM, a hardware sha256 implementation (<a rel="nofollow" href="http://async.org.uk/tech-reports/NCL-EECE-MSD-TR-2011-170.pdf">http://async.org.uk/tech-reports/NCL-EECE-MSD-TR-2011-170.pdf</a>),  a riscv32 implementation (<a rel="nofollow" href="https://github.com/YosysHQ/picorv32">https://github.com/YosysHQ/picorv32</a>),  a simple gpu, a simple keyboard, and an SPI interface and you're good to go</span></div><div class="line" id="012051"><span class="nick" style="color:#2e2a4a"><a href="#012051" label="[01:20:51]">&lt;muurkha&gt;</a></span><span class="message">right, and you don't need a GPU, just some kind of framebuffer</span></div><div class="line" id="012139"><span class="nick" style="color:#2e2a4a"><a href="#012139" label="[01:21:39]">&lt;muurkha&gt;</a></span><span class="message">a J1A might be smaller and more verifiable than RV32</span></div><div class="line" id="012357"><span class="nick" style="color:#2e2a4a"><a href="#012357" label="[01:23:57]">&lt;muurkha&gt;</a></span><span class="message">but if you're spending 6 million transistors on SRAM it doesn't matter that much whether your CPU is 10k transistors or 100k, even if you want to verify the transistors and the CPU transistors are more difficult to verify</span></div><div class="line" id="012634"><span class="nick" style="color:#80b1d3"><a href="#012634" label="[01:26:34]">&lt;bauen1&gt;</a></span><span class="message">muurkha: i mean the end goal would probably be a trusted CPU and trusted peripherals (basically UART I/O) and a system that is fast enough to compile the linux kernel + gcc (i.e. bootstrap) in a reasonable time span, where that time span is probably anything less than 1 year</span></div><div class="line" id="012700"><span class="nick" style="color:#2e2a4a"><a href="#012700" label="[01:27:00]">&lt;muurkha&gt;</a></span><span class="message">1 year is fine once it's debugged, but it would make debugging it impossible</span></div><div class="line" id="012906"><span class="nick" style="color:#80b1d3"><a href="#012906" label="[01:29:06]">&lt;bauen1&gt;</a></span><span class="message">muurkha: there's imo ways to reduce the need for debugging: isolate hardware components and keep them simple (i.e. no fancy prefetching etc...) as much as you can get away with it, it will make it easier to verify and means less debugging ; you have untrusted but very fast computers available that can be used to run simulations of the cpu, probably much faster</span></div><div class="line" id="012938"><span class="nick" style="color:#2e2a4a"><a href="#012938" label="[01:29:38]">&lt;muurkha&gt;</a></span><span class="message">that is true</span></div><div class="line" id="013007"><span class="nick" style="color:#2e2a4a"><a href="#013007" label="[01:30:07]">&lt;muurkha&gt;</a></span><span class="message">but at some point you may have to figure out which instruction in the hardware doesn't work reliably</span></div><div class="line" id="013018"><span class="nick" style="color:#8dd3c7"><a href="#013018" label="[01:30:18]">&lt;stikonas&gt;</a></span><span class="message">doras: thanks. Let's see if the tag appears</span></div><div class="line" id="013031"><span class="nick" style="color:#80b1d3"><a href="#013031" label="[01:30:31]">&lt;bauen1&gt;</a></span><span class="message">you'd probably end up going a middle way, build your own architecture and then write an rv32 emulator (which can be extensively tested on a fast computer), that way you have a simple architecture that is relatively fast and comparatively easy to verify, but can use a bigger ecosystem already available</span></div><div class="line" id="013041"><span class="nick" style="color:#80b1d3"><a href="#013041" label="[01:30:41]">&lt;bauen1&gt;</a></span><span class="message">muurkha: that's true and that will be an absolute pain</span></div><div class="line" id="013053"><span class="nick" style="color:#234e69"><a href="#013053" label="[01:30:53]">&lt;fossy&gt;</a></span><span class="message">unfortunate about flex, i was hoping this wouldn't become a problem for a little while :\</span></div><div class="line" id="013100"><span class="nick" style="color:#234e69"><a href="#013100" label="[01:31:00]">&lt;fossy&gt;</a></span><span class="message">hopefully we do get a response on github</span></div><div class="line" id="013150"><span class="nick" style="color:#2e2a4a"><a href="#013150" label="[01:31:50]">&lt;muurkha&gt;</a></span><span class="message">that would be awesome, fossy!</span></div><div class="line" id="013154"><span class="nick" style="color:#80b1d3"><a href="#013154" label="[01:31:54]">&lt;bauen1&gt;</a></span><span class="message">muurkha: the real problem will probably be figuring out the sweet spot between too many transistors and too slow</span></div><div class="line" id="013210"><span class="nick" style="color:#80b1d3"><a href="#013210" label="[01:32:10]">&lt;bauen1&gt;</a></span><span class="message">nevermind any manufacturing defects</span></div><div class="line" id="013223"><span class="nick" style="color:#8dd3c7"><a href="#013223" label="[01:32:23]">&lt;stikonas&gt;</a></span><span class="message">fossy: the tarball is still available</span></div><div class="line" id="013225"><span class="nick" style="color:#8dd3c7"><a href="#013225" label="[01:32:25]">&lt;stikonas&gt;</a></span><span class="message">just not over https</span></div><div class="line" id="013228"><span class="nick" style="color:#234e69"><a href="#013228" label="[01:32:28]">&lt;fossy&gt;</a></span><span class="message">yeah</span></div><div class="line" id="013237"><span class="nick" style="color:#8dd3c7"><a href="#013237" label="[01:32:37]">&lt;stikonas&gt;</a></span><span class="message">well, at least not on that mirror, I have https on my server</span></div><div class="line" id="013239"><span class="nick" style="color:#234e69"><a href="#013239" label="[01:32:39]">&lt;fossy&gt;</a></span><span class="message">but link rot is a thing i was hoping wouldn't really happen</span></div><div class="line" id="013246"><span class="nick" style="color:#234e69"><a href="#013246" label="[01:32:46]">&lt;fossy&gt;</a></span><span class="message">naively</span></div><div class="line" id="013252"><span class="nick" style="color:#8dd3c7"><a href="#013252" label="[01:32:52]">&lt;stikonas&gt;</a></span><span class="message">yeah, so far we only had it with linux-libre</span></div><div class="line" id="013306"><span class="nick" style="color:#8dd3c7"><a href="#013306" label="[01:33:06]">&lt;stikonas&gt;</a></span><span class="message">but it works after we moved to /old/ subdirectory</span></div><div class="line" id="013322"><span class="nick" style="color:#234e69"><a href="#013322" label="[01:33:22]">&lt;fossy&gt;</a></span><span class="message">yeah, that was path move</span></div><div class="line" id="015015"><span class="nick" style="color:#8dd3c7"><a href="#015015" label="[01:50:15]">&lt;stikonas&gt;</a></span><span class="message">fossy: by the way, I've just noticed that old perl configuration files still point to /image directory</span></div><div class="line" id="015031"><span class="nick" style="color:#8dd3c7"><a href="#015031" label="[01:50:31]">&lt;stikonas&gt;</a></span><span class="message">luckily things somehow work</span></div><div class="line" id="015056"><span class="nick" style="color:#8dd3c7"><a href="#015056" label="[01:50:56]">&lt;stikonas&gt;</a></span><span class="message">see e.g. <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/sysa/perl-5.003/files/config.h#L71">https://github.com/fosslinux/live-bootstrap/blob/master/sysa/perl-5.003/files/config.h#L71</a> </span></div><div class="line" id="015114"><span class="nick" style="color:#8dd3c7"><a href="#015114" label="[01:51:14]">&lt;stikonas&gt;</a></span><span class="message">is this something we should fix?</span></div><div class="line" id="015246"><span class="nick" style="color:#8dd3c7"><a href="#015246" label="[01:52:46]">&lt;stikonas&gt;</a></span><span class="message">oh, it's actually only version 5.003 that has in wrong</span></div><div class="line" id="015523"><span class="nick" style="color:#8dd3c7"><a href="#015523" label="[01:55:23]">&lt;stikonas&gt;</a></span><span class="message">so shouldn't be too hard to fix, probably just 1 run of live-bootstrap to get checksums out</span></div><div class="line" id="020026"><span class="nick" style="color:#8dd3c7"><a href="#020026" label="[02:00:26]">&lt;stikonas&gt;</a></span><span class="message">fossy: also, I think things might be a bit simpler (from preparation perspective) if we rename /after directory as /sysa</span></div><div class="line" id="020028"><span class="nick" style="color:#8dd3c7"><a href="#020028" label="[02:00:28]">&lt;stikonas&gt;</a></span><span class="message">what do you think?</span></div><div class="line" id="020146"><span class="nick" style="color:#8dd3c7"><a href="#020146" label="[02:01:46]">&lt;stikonas&gt;</a></span><span class="message">that might make running live-bootstrap without rootfs.py a bit easier</span></div><div class="line" id="020753"><span class="nick" style="color:#8dd3c7"><a href="#020753" label="[02:07:53]">&lt;stikonas&gt;</a></span><span class="message">as for sources, I think we can put leave all sources in /sources directory and then have a kaem script to move them into correct locations...</span></div><div class="line" id="020854"><span class="nick" style="color:#8dd3c7"><a href="#020854" label="[02:08:54]">&lt;stikonas&gt;</a></span><span class="message">it's a tiny bit more annoying from the development perspective (need to maintain list of sources in two places) but would remove even more of rootfs.py</span></div><div class="line" id="024049"><span class="nick" style="color:#6c3d55"><a href="#024049" label="[02:40:49]">&lt;oriansj&gt;</a></span><span class="message">muurkha: actually if one makes the RAM 1x64K and uses 4096 of them; 32MB of RAM which only gets 1 bit per 4Kb of memory. then auditing of the RAM chips becomes a non-issue.</span></div><div class="line" id="024128"><span class="nick" style="color:#2e2a4a"><a href="#024128" label="[02:41:28]">&lt;muurkha&gt;</a></span><span class="message">oriansj: because when you've seen one chip, you've seen 'em all?</span></div><div class="line" id="024129"><span class="nick" style="color:#6c3d55"><a href="#024129" label="[02:41:29]">&lt;oriansj&gt;</a></span><span class="message">bauen1: if you do AArch64 bootstrapping on bare metal, it is something that stage0 proper would want to include (if you are interested of course)</span></div><div class="line" id="024140"><span class="nick" style="color:#2e2a4a"><a href="#024140" label="[02:41:40]">&lt;muurkha&gt;</a></span><span class="message">that's an interesting approach</span></div><div class="line" id="024229"><span class="nick" style="color:#6c3d55"><a href="#024229" label="[02:42:29]">&lt;oriansj&gt;</a></span><span class="message">muurkha: there is no way for a RAM chip to know which bit it would be altering in 4K</span></div><div class="line" id="024246"><span class="nick" style="color:#6c3d55"><a href="#024246" label="[02:42:46]">&lt;oriansj&gt;</a></span><span class="message">nor would it know which 512byte page of memory it was</span></div><div class="line" id="024634"><span class="nick" style="color:#2e2a4a"><a href="#024634" label="[02:46:34]">&lt;muurkha&gt;</a></span><span class="message">that's a good point</span></div><div class="line" id="024701"><span class="nick" style="color:#2e2a4a"><a href="#024701" label="[02:47:01]">&lt;muurkha&gt;</a></span><span class="message">sort of similar to bunnie's &quot;FPGAs are safer&quot; argument</span></div><div class="line" id="024740"><span class="nick" style="color:#6c3d55"><a href="#024740" label="[02:47:40]">&lt;oriansj&gt;</a></span><span class="message">muurkha: for various values of safe of course</span></div><div class="line" id="025236"><span class="nick" style="color:#6c3d55"><a href="#025236" label="[02:52:36]">&lt;oriansj&gt;</a></span><span class="message">not safe from a nation state having a remote disable all power functionality baked in</span></div><div class="line" id="025641"><span class="nick" style="color:#2e2a4a"><a href="#025641" label="[02:56:41]">&lt;muurkha&gt;</a></span><span class="message">or, more likely, the US</span></div><div class="line" id="025713"><span class="nick" style="color:#2e2a4a"><a href="#025713" label="[02:57:13]">&lt;muurkha&gt;</a></span><span class="message">(though the KKK would like to turn the US into a nation-state, they have so far been unsuccessful, and the trend has been very much in the opposite direction)</span></div><div class="line" id="030235"><span class="nick" style="color:#6c3d55"><a href="#030235" label="[03:02:35]">&lt;oriansj&gt;</a></span><span class="message">muurkha: well the US isn't actually making most chips these days and I am not sure if China could be considered a Nation state either.</span></div><div class="line" id="030357"><span class="nick" style="color:#2e2a4a"><a href="#030357" label="[03:03:57]">&lt;muurkha&gt;</a></span><span class="message">hmm, I think the mythology of Han ethnic identity is pretty strong in PRC nowadays</span></div><div class="line" id="030411"><span class="nick" style="color:#2e2a4a"><a href="#030411" label="[03:04:11]">&lt;muurkha&gt;</a></span><span class="message">and underlies things like the Uighur concentration camps</span></div><div class="line" id="030741"><span class="nick" style="color:#6c3d55"><a href="#030741" label="[03:07:41]">&lt;oriansj&gt;</a></span><span class="message">muurkha: so I retract the term nation state and replace it with just government to truncate the non-bootstrap related part of the conversation.</span></div><div class="line" id="101935"><span class="nick" style="color:#d9d9d9"><a href="#101935" label="[10:19:35]">&lt;nimaje&gt;</a></span><span class="message">about archiving tarballs and stuff needed for bootstraping, probably archiveteam (<a rel="nofollow" href="https://wiki.archiveteam.org/">https://wiki.archiveteam.org/</a>)  would help you could ask at hackint/#archiveteam-bs</span></div><div class="line" id="114129"><span class="nick" style="color:#234e69"><a href="#114129" label="[11:41:29]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: do you mind if we wait until i finish packaging to do those restructuring things?</span></div><div class="line" id="114145"><span class="nick" style="color:#234e69"><a href="#114145" label="[11:41:45]">&lt;fossy&gt;</a></span><span class="message">it shouldn't be too long until i finish that</span></div><div class="line" id="114157"><span class="nick" style="color:#234e69"><a href="#114157" label="[11:41:57]">&lt;fossy&gt;</a></span><span class="message">i agree with those restructures generally though</span></div><div class="line" id="114454"><span class="nick" style="color:#bc80bd"><a href="#114454" label="[11:44:54]">&lt;stikonas[m]&gt;</a></span><span class="message">Yeah, ok</span></div><div class="line" id="114501"><span class="nick" style="color:#bc80bd"><a href="#114501" label="[11:45:01]">&lt;stikonas[m]&gt;</a></span><span class="message">Let's wait a bit</span></div><div class="line" id="145902"><span class="nick" style="color:#389600"><a href="#145902" label="[14:59:02]">&lt;nanonyme&gt;</a></span><span class="message">Hmm, is it intended timestamp reset code tries to reset timestamps also for /proc?</span></div><div class="line" id="145919"><span class="nick" style="color:#389600"><a href="#145919" label="[14:59:19]">&lt;nanonyme&gt;</a></span><span class="message">That is, with live-bootstrap</span></div><div class="line" id="150402"><span class="nick" style="color:#8dd3c7"><a href="#150402" label="[15:04:02]">&lt;stikonas&gt;</a></span><span class="message">nanonyme: probably not</span></div><div class="line" id="150422"><span class="nick" style="color:#8dd3c7"><a href="#150422" label="[15:04:22]">&lt;stikonas&gt;</a></span><span class="message">don't remember who wrote that code, but it wasn't fossy or me</span></div><div class="line" id="150849"><span class="nick" style="color:#389600"><a href="#150849" label="[15:08:49]">&lt;nanonyme&gt;</a></span><span class="message">Ack. I'm for now discarding the parameter, it will not really work if live-bootstrap is run rootless and user won't have permission to mutate /proc</span></div><div class="line" id="151320"><span class="nick" style="color:#389600"><a href="#151320" label="[15:13:20]">&lt;nanonyme&gt;</a></span><span class="message">stikonas, I see there also is no cc binary (symlink to gcc). Is this intended?</span></div><div class="line" id="151516"><span class="nick" style="color:#8dd3c7"><a href="#151516" label="[15:15:16]">&lt;stikonas&gt;</a></span><span class="message">nanonyme: we probably juts didn't need it</span></div><div class="line" id="151533"><span class="nick" style="color:#8dd3c7"><a href="#151533" label="[15:15:33]">&lt;stikonas&gt;</a></span><span class="message">all configure scripts that we used simply worked fine with gcc</span></div><div class="line" id="151548"><span class="nick" style="color:#8dd3c7"><a href="#151548" label="[15:15:48]">&lt;stikonas&gt;</a></span><span class="message">and if make install didn't create it, then we don't have ti</span></div><div class="line" id="151557"><span class="nick" style="color:#8dd3c7"><a href="#151557" label="[15:15:57]">&lt;stikonas&gt;</a></span><span class="message">but we don't intentionally delete it</span></div><div class="line" id="151719"><span class="nick" style="color:#8dd3c7"><a href="#151719" label="[15:17:19]">&lt;stikonas&gt;</a></span><span class="message">nanonyme: are you building something that needs it?</span></div><div class="line" id="152051"><span class="nick" style="color:#389600"><a href="#152051" label="[15:20:51]">&lt;nanonyme&gt;</a></span><span class="message">stikonas, yeah, I don't remember which part of bootstrap requested it. We're building GCC+glibc toolchain</span></div><div class="line" id="152125"><span class="nick" style="color:#389600"><a href="#152125" label="[15:21:25]">&lt;nanonyme&gt;</a></span><span class="message">I can flush build cache and try again later. I've been currently focusing on getting stage1 GCC built, seems problematic</span></div><div class="line" id="152354"><span class="nick" style="color:#389600"><a href="#152354" label="[15:23:54]">&lt;nanonyme&gt;</a></span><span class="message">I'm basically trying to build a binary image that would make it simpler to build further toolchains for our distro</span></div><div class="line" id="152417"><span class="nick" style="color:#8dd3c7"><a href="#152417" label="[15:24:17]">&lt;stikonas&gt;</a></span><span class="message">nanonyme: well, either add symlink manually in live-bootstrap or in your further scripts</span></div><div class="line" id="152454"><span class="nick" style="color:#389600"><a href="#152454" label="[15:24:54]">&lt;nanonyme&gt;</a></span><span class="message">Yeah, no big deal. I'll add it in the further scripts</span></div><div class="line" id="152609"><span class="nick" style="color:#389600"><a href="#152609" label="[15:26:09]">&lt;nanonyme&gt;</a></span><span class="message">GCC9+glibc2.68 is currently the target goal, that is latest combination we have been using which doesn't require Python to build glibc</span></div><div class="line" id="152611"><span class="nick" style="color:#8dd3c7"><a href="#152611" label="[15:26:11]">&lt;stikonas&gt;</a></span><span class="message">nanonyme: if you use ln, I guess use -f argument in case symlink appears in live-bootstrap at some point later</span></div><div class="line" id="152621"><span class="nick" style="color:#389600"><a href="#152621" label="[15:26:21]">&lt;nanonyme&gt;</a></span><span class="message">Sure</span></div><div class="line" id="152631"><span class="nick" style="color:#8dd3c7"><a href="#152631" label="[15:26:31]">&lt;stikonas&gt;</a></span><span class="message">2.28 I guess</span></div><div class="line" id="152639"><span class="nick" style="color:#389600"><a href="#152639" label="[15:26:39]">&lt;nanonyme&gt;</a></span><span class="message">Oh, yes. 2.28</span></div><div class="line" id="152654"><span class="nick" style="color:#8dd3c7"><a href="#152654" label="[15:26:54]">&lt;stikonas&gt;</a></span><span class="message">well, GCC9 is almost the newest you can hope to go in one step</span></div><div class="line" id="152714"><span class="nick" style="color:#8dd3c7"><a href="#152714" label="[15:27:14]">&lt;stikonas&gt;</a></span><span class="message">GCC11 already needs newer C++ standard, so is definitely not buildable with GCC 4.8.4</span></div><div class="line" id="152724"><span class="nick" style="color:#8dd3c7"><a href="#152724" label="[15:27:24]">&lt;stikonas&gt;</a></span><span class="message">4.7.4</span></div><div class="line" id="152853"><span class="nick" style="color:#389600"><a href="#152853" label="[15:28:53]">&lt;nanonyme&gt;</a></span><span class="message">I see</span></div><div class="line" id="152906"><span class="nick" style="color:#389600"><a href="#152906" label="[15:29:06]">&lt;nanonyme&gt;</a></span><span class="message">Which GCC would you suggest?</span></div><div class="line" id="152925"><span class="nick" style="color:#389600"><a href="#152925" label="[15:29:25]">&lt;nanonyme&gt;</a></span><span class="message">Is 8 better?</span></div><div class="line" id="152949"><span class="nick" style="color:#389600"><a href="#152949" label="[15:29:49]">&lt;nanonyme&gt;</a></span><span class="message">Oh, never mind. You said it's fine</span></div><div class="line" id="153848"><span class="nick" style="color:#8dd3c7"><a href="#153848" label="[15:38:48]">&lt;stikonas&gt;</a></span><span class="message">i simply meant that GCC10 is the newest version you can jump to in one go</span></div><div class="line" id="153855"><span class="nick" style="color:#8dd3c7"><a href="#153855" label="[15:38:55]">&lt;stikonas&gt;</a></span><span class="message">so GCC9 is not too old compared to that</span></div><div class="line" id="184542"><span class="nick" style="color:#2e2a4a"><a href="#184542" label="[18:45:42]">&lt;muurkha&gt;</a></span><span class="message">oriansj: sorry to be so prone to go off on tangents</span></div><br /></div></body></html>