<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-02-07.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="033637"><span class="nick" style="color:#8dd3c7"><a href="#033637" label="[03:36:37]">&lt;oriansj&gt;</a></span><span class="message">fossy: here is what was thinking of doing tomorrow: I write <a rel="nofollow" href="https://github.com/fosslinux/mescc-tools/blob/minimal-debug/kaem.c">https://github.com/fosslinux/mescc-tools/blob/minimal-debug/kaem.c</a>  (with my suggested changes) in NASM and then convert to M1; which will drop the size probably by a factor of 2-4. Which should be small enough (and a low enough of a bootstrap unless you think I need to take it down to hex0; which will take an extra day to do)</span></div><div class="line" id="033704"><span class="nick" style="color:#2e2a4a"><a href="#033704" label="[03:37:04]">&lt;fossy&gt;</a></span><span class="message">oriansj: I think M1 would be fine</span></div><div class="line" id="033726"><span class="nick" style="color:#2e2a4a"><a href="#033726" label="[03:37:26]">&lt;fossy&gt;</a></span><span class="message">I will make those improvements you suggested tonighy</span></div><div class="line" id="033729"><span class="nick" style="color:#2e2a4a"><a href="#033729" label="[03:37:29]">&lt;fossy&gt;</a></span><span class="message">tonight</span></div><div class="line" id="033736"><span class="nick" style="color:#2e2a4a"><a href="#033736" label="[03:37:36]">&lt;fossy&gt;</a></span><span class="message">that will allow you to do that tomorrow</span></div><div class="line" id="033816"><span class="nick" style="color:#8dd3c7"><a href="#033816" label="[03:38:16]">&lt;oriansj&gt;</a></span><span class="message">sounds good;</span></div><div class="line" id="091849"><span class="nick" style="color:#2e2a4a"><a href="#091849" label="[09:18:49]">&lt;fossy&gt;</a></span><span class="message">there done</span></div><div class="line" id="111621"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado</span></div><div class="line" id="114635"><span class="nick" style="color:#8dd3c7"><a href="#114635" label="[11:46:35]">&lt;oriansj&gt;</a></span><span class="message">thank you fossy</span></div><div class="line" id="221532"><span class="nick" style="color:#8dd3c7"><a href="#221532" label="[22:15:32]">&lt;oriansj&gt;</a></span><span class="message">fossy: I think you are going to love the new kaem-minimal.M1</span></div><div class="line" id="221547"><span class="nick" style="color:#2e2a4a"><a href="#221547" label="[22:15:47]">&lt;fossy&gt;</a></span><span class="message">oriansj: link plz?</span></div><div class="line" id="221552"><span class="nick" style="color:#2e2a4a"><a href="#221552" label="[22:15:52]">&lt;fossy&gt;</a></span><span class="message">how many bytes</span></div><div class="line" id="221602"><span class="nick" style="color:#2e2a4a"><a href="#221602" label="[22:16:02]">&lt;fossy&gt;</a></span><span class="message">(Is the resulting binary)</span></div><div class="line" id="221620"><span class="nick" style="color:#8dd3c7"><a href="#221620" label="[22:16:20]">&lt;oriansj&gt;</a></span><span class="message">almost done with it</span></div><div class="line" id="221627"><span class="nick" style="color:#2e2a4a"><a href="#221627" label="[22:16:27]">&lt;fossy&gt;</a></span><span class="message">yay</span></div><div class="line" id="221634"><span class="nick" style="color:#2e2a4a"><a href="#221634" label="[22:16:34]">&lt;fossy&gt;</a></span><span class="message">im excited</span></div><div class="line" id="221644"><span class="nick" style="color:#8dd3c7"><a href="#221644" label="[22:16:44]">&lt;oriansj&gt;</a></span><span class="message">under 1024bytes</span></div><div class="line" id="221931"><span class="nick" style="color:#8dd3c7"><a href="#221931" label="[22:19:31]">&lt;oriansj&gt;</a></span><span class="message">THe NASM version is entirely complete; one second as I upload that for you</span></div><div class="line" id="222043"><span class="nick" style="color:#8dd3c7"><a href="#222043" label="[22:20:43]">&lt;oriansj&gt;</a></span><span class="message"> <a rel="nofollow" href="https://paste.debian.net/1129717/">https://paste.debian.net/1129717/</a> </span></div><div class="line" id="222124"><span class="nick" style="color:#8dd3c7"><a href="#222124" label="[22:21:24]">&lt;oriansj&gt;</a></span><span class="message">Now I found a bug in kaem where after the execve it should be EXIT_FAILURE not EXIT_SUCCESS</span></div><div class="line" id="222152"><span class="nick" style="color:#8dd3c7"><a href="#222152" label="[22:21:52]">&lt;oriansj&gt;</a></span><span class="message">So 362 lines of assembly with comments</span></div><div class="line" id="222204"><span class="nick" style="color:#8dd3c7"><a href="#222204" label="[22:22:04]">&lt;oriansj&gt;</a></span><span class="message">a few more for the macro definitions</span></div><div class="line" id="222643"><span class="nick" style="color:#2e2a4a"><a href="#222643" label="[22:26:43]">&lt;fossy&gt;</a></span><span class="message">o.O that's great under 1024 bytes</span></div><div class="line" id="222728"><span class="nick" style="color:#8dd3c7"><a href="#222728" label="[22:27:28]">&lt;oriansj&gt;</a></span><span class="message">depending if I wish to optimize inner function jumps I could get it under 800 bytes</span></div><div class="line" id="223410"><span class="nick" style="color:#8dd3c7"><a href="#223410" label="[22:34:10]">&lt;oriansj&gt;</a></span><span class="message">although there is only one bit of it that I am not sure I did correctly (preserving of envp and passing it)</span></div><div class="line" id="223434"><span class="nick" style="color:#8dd3c7"><a href="#223434" label="[22:34:34]">&lt;oriansj&gt;</a></span><span class="message">MOstly because I never had to deal with envp in assembly before</span></div><div class="line" id="223620"><span class="nick" style="color:#8dd3c7"><a href="#223620" label="[22:36:20]">&lt;oriansj&gt;</a></span><span class="message">But that'll be trivial to fix (if I did it wrong)</span></div><div class="line" id="224029"><span class="nick" style="color:#8dd3c7"><a href="#224029" label="[22:40:29]">&lt;oriansj&gt;</a></span><span class="message">I probably should add a hex0 version after you get a chance to play with it a bit</span></div><div class="line" id="224103"><span class="nick" style="color:#8dd3c7"><a href="#224103" label="[22:41:03]">&lt;oriansj&gt;</a></span><span class="message">build instructions are:</span></div><div class="line" id="224108"><span class="nick" style="color:#8dd3c7"><a href="#224108" label="[22:41:08]">&lt;oriansj&gt;</a></span><span class="message">M1 --architecture x86 --LittleEndian -f x86/Development/kaem-minimal.M1 -o bin/kaem-minimal.hex2</span></div><div class="line" id="224116"><span class="nick" style="color:#8dd3c7"><a href="#224116" label="[22:41:16]">&lt;oriansj&gt;</a></span><span class="message">hex2 --architecture x86 --LittleEndian --BaseAddress 0x8048000 -f x86/ELF-i386.hex2 -f bin/kaem-minimal.hex2 -o bin/kaem-minimal --exec_enable</span></div><div class="line" id="224210"><span class="nick" style="color:#8dd3c7"><a href="#224210" label="[22:42:10]">&lt;oriansj&gt;</a></span><span class="message">and patch up</span></div><div class="line" id="224232"><span class="nick" style="color:#8dd3c7"><a href="#224232" label="[22:42:32]">&lt;oriansj&gt;</a></span><span class="message">sha256sum 0581692a85a2149b5942b0648800d5deee76ace6ca12e669add1687043911718  bin/kaem-minimal</span></div><div class="line" id="224247"><span class="nick" style="color:#2e2a4a"><a href="#224247" label="[22:42:47]">&lt;fossy&gt;</a></span><span class="message">oriansj: which repo?</span></div><div class="line" id="224250"><span class="nick" style="color:#8dd3c7"><a href="#224250" label="[22:42:50]">&lt;oriansj&gt;</a></span><span class="message">736bytes total</span></div><div class="line" id="224256"><span class="nick" style="color:#8dd3c7"><a href="#224256" label="[22:42:56]">&lt;oriansj&gt;</a></span><span class="message">mescc-tools-seed</span></div><div class="line" id="224302"><span class="nick" style="color:#2e2a4a"><a href="#224302" label="[22:43:02]">&lt;fossy&gt;</a></span><span class="message">Ok</span></div><div class="line" id="224345"><span class="nick" style="color:#8dd3c7"><a href="#224345" label="[22:43:45]">&lt;oriansj&gt;</a></span><span class="message">fossy: please play with it and make sure you are happy with it</span></div><div class="line" id="224355"><span class="nick" style="color:#2e2a4a"><a href="#224355" label="[22:43:55]">&lt;fossy&gt;</a></span><span class="message">yes, i will</span></div><div class="line" id="224409"><span class="nick" style="color:#8dd3c7"><a href="#224409" label="[22:44:09]">&lt;oriansj&gt;</a></span><span class="message">while I add some neglected high level prototypes</span></div><div class="line" id="225306"><span class="nick" style="color:#2e2a4a"><a href="#225306" label="[22:53:06]">&lt;fossy&gt;</a></span><span class="message">oriansj: on a different matter, how many months of work do you think mes-m2 is away from running mescc/gash/gash-core-utils?</span></div><div class="line" id="225449"><span class="nick" style="color:#8dd3c7"><a href="#225449" label="[22:54:49]">&lt;oriansj&gt;</a></span><span class="message">fossy: that however is harder for me to estimate probably 1-4months depending how hard I go at it</span></div><div class="line" id="225503"><span class="nick" style="color:#2e2a4a"><a href="#225503" label="[22:55:03]">&lt;fossy&gt;</a></span><span class="message">oriansj: righto</span></div><div class="line" id="225519"><span class="nick" style="color:#2e2a4a"><a href="#225519" label="[22:55:19]">&lt;fossy&gt;</a></span><span class="message">would i be correct in saying that currently guile cannot run mescc?</span></div><div class="line" id="225541"><span class="nick" style="color:#2e2a4a"><a href="#225541" label="[22:55:41]">&lt;fossy&gt;</a></span><span class="message">so i'll just have both guile and mes avaliable for gcc-seed for now and then substitute mes-m2 for both when it is ready</span></div><div class="line" id="225551"><span class="nick" style="color:#2e2a4a"><a href="#225551" label="[22:55:51]">&lt;fossy&gt;</a></span><span class="message">because i'm moving gcc-seed from busybox to gash{,-core-utils}</span></div><div class="line" id="225644"><span class="nick" style="color:#8dd3c7"><a href="#225644" label="[22:56:44]">&lt;oriansj&gt;</a></span><span class="message">fossy: no; guile can run MesCC it just requires some environmental variables set if I remember correctly</span></div><div class="line" id="225650"><span class="nick" style="color:#2e2a4a"><a href="#225650" label="[22:56:50]">&lt;fossy&gt;</a></span><span class="message">oh, ok</span></div><div class="line" id="225700"><span class="nick" style="color:#2e2a4a"><a href="#225700" label="[22:57:00]">&lt;fossy&gt;</a></span><span class="message">that means we can have just the one binary</span></div><div class="line" id="225711"><span class="nick" style="color:#8dd3c7"><a href="#225711" label="[22:57:11]">&lt;oriansj&gt;</a></span><span class="message">correct</span></div><div class="line" id="225735"><span class="nick" style="color:#8dd3c7"><a href="#225735" label="[22:57:35]">&lt;oriansj&gt;</a></span><span class="message">and swap out that binary in a single step when mes-m2 is done</span></div><div class="line" id="225910"><span class="nick" style="color:#2e2a4a"><a href="#225910" label="[22:59:10]">&lt;fossy&gt;</a></span><span class="message">oh, that was easy</span></div><div class="line" id="225912"><span class="nick" style="color:#2e2a4a"><a href="#225912" label="[22:59:12]">&lt;fossy&gt;</a></span><span class="message">lol</span></div><div class="line" id="225935"><span class="nick" style="color:#2e2a4a"><a href="#225935" label="[22:59:35]">&lt;fossy&gt;</a></span><span class="message">it will be interesting to see which is faster, mes or guile</span></div><div class="line" id="225939"><span class="nick" style="color:#2e2a4a"><a href="#225939" label="[22:59:39]">&lt;fossy&gt;</a></span><span class="message">(or mes-m2)</span></div><div class="line" id="225942"><span class="nick" style="color:#2e2a4a"><a href="#225942" label="[22:59:42]">&lt;fossy&gt;</a></span><span class="message">at running mescc</span></div><div class="line" id="230104"><span class="nick" style="color:#2e2a4a"><a href="#230104" label="[23:01:04]">&lt;fossy&gt;</a></span><span class="message">o.O guile 3.0.x exists?</span></div><div class="line" id="230107"><span class="nick" style="color:#2e2a4a"><a href="#230107" label="[23:01:07]">&lt;fossy&gt;</a></span><span class="message">huh</span></div><div class="line" id="230313"><span class="nick" style="color:#8dd3c7"><a href="#230313" label="[23:03:13]">&lt;oriansj&gt;</a></span><span class="message">definitely guile</span></div><div class="line" id="230335"><span class="nick" style="color:#8dd3c7"><a href="#230335" label="[23:03:35]">&lt;oriansj&gt;</a></span><span class="message">bigger team and more time spent optimizing</span></div><div class="line" id="230409"><span class="nick" style="color:#8dd3c7"><a href="#230409" label="[23:04:09]">&lt;oriansj&gt;</a></span><span class="message">Oh it also JITs and Compiles; instead of just interprets</span></div><div class="line" id="230442"><span class="nick" style="color:#2e2a4a"><a href="#230442" label="[23:04:42]">&lt;fossy&gt;</a></span><span class="message">so i noticed</span></div><div class="line" id="230446"><span class="nick" style="color:#2e2a4a"><a href="#230446" label="[23:04:46]">&lt;fossy&gt;</a></span><span class="message">what does --no-auto-compile do?</span></div><div class="line" id="230608"><span class="nick" style="color:#8dd3c7"><a href="#230608" label="[23:06:08]">&lt;oriansj&gt;</a></span><span class="message">fossy: it turns off guile's default behavior to compile scheme files that it gets</span></div><div class="line" id="230611"><span class="nick" style="color:#2e2a4a"><a href="#230611" label="[23:06:11]">&lt;fossy&gt;</a></span><span class="message">ah</span></div><div class="line" id="230638"><span class="nick" style="color:#2e2a4a"><a href="#230638" label="[23:06:38]">&lt;fossy&gt;</a></span><span class="message">i hope that getting a statically linked guile will be less painful then mes was :|</span></div><div class="line" id="230720"><span class="nick" style="color:#8dd3c7"><a href="#230720" label="[23:07:20]">&lt;oriansj&gt;</a></span><span class="message">well that is guix's problem now</span></div><div class="line" id="230806"><span class="nick" style="color:#2e2a4a"><a href="#230806" label="[23:08:06]">&lt;fossy&gt;</a></span><span class="message">i guess guix and gcc-seed are almost both doing a full scheme bootstrap</span></div><div class="line" id="230825"><span class="nick" style="color:#2e2a4a"><a href="#230825" label="[23:08:25]">&lt;fossy&gt;</a></span><span class="message">however gcc-seed isn't using slow-utils, it's using the M1/hex2 etc from hex0-seed</span></div><div class="line" id="230918"><span class="nick" style="color:#8dd3c7"><a href="#230918" label="[23:09:18]">&lt;oriansj&gt;</a></span><span class="message">I just have to make a production grade scheme (probably mostly by myself) in a massively reduced C subset (that I have to bootstrap on a bunch of arbitrary platforms)</span></div><div class="line" id="230934"><span class="nick" style="color:#8dd3c7"><a href="#230934" label="[23:09:34]">&lt;oriansj&gt;</a></span><span class="message">So you know, simple right?</span></div><div class="line" id="231001"><span class="nick" style="color:#2e2a4a"><a href="#231001" label="[23:10:01]">&lt;fossy&gt;</a></span><span class="message">oriansj: of course, it's not going to be easy</span></div><div class="line" id="231006"><span class="nick" style="color:#2e2a4a"><a href="#231006" label="[23:10:06]">&lt;fossy&gt;</a></span><span class="message">i wish i could help more lol</span></div><div class="line" id="231012"><span class="nick" style="color:#2e2a4a"><a href="#231012" label="[23:10:12]">&lt;fossy&gt;</a></span><span class="message">but i don't know scheme :s</span></div><div class="line" id="231030"><span class="nick" style="color:#2e2a4a"><a href="#231030" label="[23:10:30]">&lt;fossy&gt;</a></span><span class="message">i could learn scheme but that would take me a while</span></div><div class="line" id="231038"><span class="nick" style="color:#8dd3c7"><a href="#231038" label="[23:10:38]">&lt;oriansj&gt;</a></span><span class="message">I just need scheme programmers willing to just make reasonable tests for the primitives</span></div><div class="line" id="231112"><span class="nick" style="color:#2e2a4a"><a href="#231112" label="[23:11:12]">&lt;fossy&gt;</a></span><span class="message">oriansj: if you can point me to a good scheme tutorial that you know of, i can likely try to make some tests for primitives</span></div><div class="line" id="231137"><span class="nick" style="color:#8dd3c7"><a href="#231137" label="[23:11:37]">&lt;oriansj&gt;</a></span><span class="message">fossy: now that is a bit of a problem</span></div><div class="line" id="231140"><span class="nick" style="color:#2e2a4a"><a href="#231140" label="[23:11:40]">&lt;fossy&gt;</a></span><span class="message">but, i come from a C background</span></div><div class="line" id="231152"><span class="nick" style="color:#2e2a4a"><a href="#231152" label="[23:11:52]">&lt;fossy&gt;</a></span><span class="message">so, i would have difficulty writing good tests in all likelihood</span></div><div class="line" id="231203"><span class="nick" style="color:#6b8072"><a href="#231203" label="[23:12:03]">&lt;pder&gt;</a></span><span class="message">Is there any desire to have armv71 and aarch64 ports of hex0, etc in mescc-tools-seed?</span></div><div class="line" id="231228"><span class="nick" style="color:#8dd3c7"><a href="#231228" label="[23:12:28]">&lt;oriansj&gt;</a></span><span class="message">pder: probably</span></div><div class="line" id="231247"><span class="nick" style="color:#8dd3c7"><a href="#231247" label="[23:12:47]">&lt;oriansj&gt;</a></span><span class="message">I wouldn't turn down someone wiling to help</span></div><div class="line" id="231555"><span class="nick" style="color:#6b8072"><a href="#231555" label="[23:15:55]">&lt;pder&gt;</a></span><span class="message">So for example with aarch64, support has been added to M2-Planet and cc_aarch64 now exists, so it would be a matter of implementing hex0, hex1, hex2 to be able to bootstrap similar to how x86 or AMD64 is done?</span></div><div class="line" id="231617"><span class="nick" style="color:#2e2a4a"><a href="#231617" label="[23:16:17]">&lt;fossy&gt;</a></span><span class="message">oriansj: also i think i need to say thank you to you... you've been so helpful in helping me to understand how all of this works and you've pulled the heavy lifting for almost all parts of the low-level bootstrap (hex0-&gt;mes-m2) and it seems like you will be the one who will finish the bootstrap with mes-m2</span></div><div class="line" id="231622"><span class="nick" style="color:#2e2a4a"><a href="#231622" label="[23:16:22]">&lt;fossy&gt;</a></span><span class="message">likely by yourself</span></div><div class="line" id="231630"><span class="nick" style="color:#2e2a4a"><a href="#231630" label="[23:16:30]">&lt;fossy&gt;</a></span><span class="message">so thank you</span></div><div class="line" id="231632"><span class="nick" style="color:#2e2a4a"><a href="#231632" label="[23:16:32]">&lt;fossy&gt;</a></span><span class="message">:D</span></div><div class="line" id="231724"><span class="nick" style="color:#2e2a4a"><a href="#231724" label="[23:17:24]">&lt;fossy&gt;</a></span><span class="message">hi amcclure</span></div><div class="line" id="231738"><span class="nick" style="color:#8dd3c7"><a href="#231738" label="[23:17:38]">&lt;oriansj&gt;</a></span><span class="message">pder: hex0, hex1, hex2, M0 and cc_aarch64.M1 (since the current cc_aarch64.s is not written in AArch64 assembly)</span></div><div class="line" id="231759"><span class="nick" style="color:#2e2a4a"><a href="#231759" label="[23:17:59]">&lt;fossy&gt;</a></span><span class="message">oriansj: what is cc_aarch64.s written in then?</span></div><div class="line" id="231831"><span class="nick" style="color:#8dd3c7"><a href="#231831" label="[23:18:31]">&lt;oriansj&gt;</a></span><span class="message">fossy: knight assembly language to run on bare metal when I implement in TTL</span></div><div class="line" id="231835"><span class="nick" style="color:#2e2a4a"><a href="#231835" label="[23:18:35]">&lt;fossy&gt;</a></span><span class="message">ahha</span></div><div class="line" id="231915"><span class="nick" style="color:#8dd3c7"><a href="#231915" label="[23:19:15]">&lt;oriansj&gt;</a></span><span class="message">that way I can jump to  M2-Planet and build a posix for AArch64 without having to depend anything but hardware</span></div><div class="line" id="231956"><span class="nick" style="color:#2e2a4a"><a href="#231956" label="[23:19:56]">&lt;fossy&gt;</a></span><span class="message">;)</span></div><div class="line" id="232005"><span class="nick" style="color:#2e2a4a"><a href="#232005" label="[23:20:05]">&lt;fossy&gt;</a></span><span class="message">knight is going to be great</span></div><div class="line" id="232012"><span class="nick" style="color:#8dd3c7"><a href="#232012" label="[23:20:12]">&lt;oriansj&gt;</a></span><span class="message">However no one is interested in the VM work yet (except for markjenkinswznc who is awesome)</span></div><div class="line" id="232029"><span class="nick" style="color:#8dd3c7"><a href="#232029" label="[23:20:29]">&lt;oriansj&gt;</a></span><span class="message">hence mescc-tools-seed</span></div><div class="line" id="232103"><span class="nick" style="color:#8dd3c7"><a href="#232103" label="[23:21:03]">&lt;oriansj&gt;</a></span><span class="message">and a bunch of posix work so that people can just leverage their existing hardware and operating systems</span></div><div class="line" id="232118"><span class="nick" style="color:#2e2a4a"><a href="#232118" label="[23:21:18]">&lt;fossy&gt;</a></span><span class="message">i see that bin/vm is good for testing stage0</span></div><div class="line" id="232159"><span class="nick" style="color:#8dd3c7"><a href="#232159" label="[23:21:59]">&lt;oriansj&gt;</a></span><span class="message">simpler target, no gotchas and oh yeah better hardware primitives</span></div><div class="line" id="232238"><span class="nick" style="color:#2e2a4a"><a href="#232238" label="[23:22:38]">&lt;fossy&gt;</a></span><span class="message">but im unsure how it is useful for the bootstrap on a non-knight system? wouldn't it still have the same kernel/microcode/firmware trust issues as hex0-seed and be a larger seed?</span></div><div class="line" id="232243"><span class="nick" style="color:#2e2a4a"><a href="#232243" label="[23:22:43]">&lt;fossy&gt;</a></span><span class="message">hm</span></div><div class="line" id="232256"><span class="nick" style="color:#2e2a4a"><a href="#232256" label="[23:22:56]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="232312"><span class="nick" style="color:#8dd3c7"><a href="#232312" label="[23:23:12]">&lt;oriansj&gt;</a></span><span class="message">but people want bootstraps on POSIX systems; hence why mescc-tools-seed was created</span></div><div class="line" id="232336"><span class="nick" style="color:#2e2a4a"><a href="#232336" label="[23:23:36]">&lt;fossy&gt;</a></span><span class="message">from knight you can build binaries for other architectures correct</span></div><div class="line" id="232355"><span class="nick" style="color:#2e2a4a"><a href="#232355" label="[23:23:55]">&lt;fossy&gt;</a></span><span class="message">so where is the ideal point to break from knight to the other architecture?</span></div><div class="line" id="232400"><span class="nick" style="color:#8dd3c7"><a href="#232400" label="[23:24:00]">&lt;oriansj&gt;</a></span><span class="message">sure it has to trust big fat kernals, huge bios and firmware blobs but atleast is hardware they have now</span></div><div class="line" id="232400"><span class="nick" style="color:#2e2a4a"><a href="#232400" label="[23:24:00]">&lt;fossy&gt;</a></span><span class="message">at mes-m2?</span></div><div class="line" id="232404"><span class="nick" style="color:#2e2a4a"><a href="#232404" label="[23:24:04]">&lt;fossy&gt;</a></span><span class="message">earlier?</span></div><div class="line" id="232438"><span class="nick" style="color:#8dd3c7"><a href="#232438" label="[23:24:38]">&lt;oriansj&gt;</a></span><span class="message">The point was at cc_x86.s</span></div><div class="line" id="232443"><span class="nick" style="color:#2e2a4a"><a href="#232443" label="[23:24:43]">&lt;fossy&gt;</a></span><span class="message">right</span></div><div class="line" id="232451"><span class="nick" style="color:#8dd3c7"><a href="#232451" label="[23:24:51]">&lt;oriansj&gt;</a></span><span class="message">however so much complaining</span></div><div class="line" id="232504"><span class="nick" style="color:#2e2a4a"><a href="#232504" label="[23:25:04]">&lt;fossy&gt;</a></span><span class="message">so the idea would be that from cc_* onwards you would use the target architecture?</span></div><div class="line" id="232519"><span class="nick" style="color:#8dd3c7"><a href="#232519" label="[23:25:19]">&lt;oriansj&gt;</a></span><span class="message">so I simply duplicated the effort and wrote the steps in POSIX x86</span></div><div class="line" id="232548"><span class="nick" style="color:#2e2a4a"><a href="#232548" label="[23:25:48]">&lt;fossy&gt;</a></span><span class="message">why dosen't mescc-tools-seed just leverage bin/vm up until cc_*?</span></div><div class="line" id="232553"><span class="nick" style="color:#2e2a4a"><a href="#232553" label="[23:25:53]">&lt;fossy&gt;</a></span><span class="message">beceause complaning?</span></div><div class="line" id="232626"><span class="nick" style="color:#8dd3c7"><a href="#232626" label="[23:26:26]">&lt;oriansj&gt;</a></span><span class="message">fossy: originally yes but as you can see; I am compromising so that other people can feel better about it all</span></div><div class="line" id="232700"><span class="nick" style="color:#2e2a4a"><a href="#232700" label="[23:27:00]">&lt;fossy&gt;</a></span><span class="message">oriansj: lol, i honestly don't get what people's problem is with using bin/vm up until cc_* when it is pretty much completely transparent to them</span></div><div class="line" id="232731"><span class="nick" style="color:#8dd3c7"><a href="#232731" label="[23:27:31]">&lt;oriansj&gt;</a></span><span class="message">because it is another new generated binary</span></div><div class="line" id="232750"><span class="nick" style="color:#8dd3c7"><a href="#232750" label="[23:27:50]">&lt;oriansj&gt;</a></span><span class="message">oh well; we are now past that</span></div><div class="line" id="232802"><span class="nick" style="color:#8dd3c7"><a href="#232802" label="[23:28:02]">&lt;oriansj&gt;</a></span><span class="message">the work has been done for x86 and amd64</span></div><div class="line" id="232822"><span class="nick" style="color:#2e2a4a"><a href="#232822" label="[23:28:22]">&lt;fossy&gt;</a></span><span class="message">you are right, leave those issues in the past</span></div><div class="line" id="232834"><span class="nick" style="color:#2e2a4a"><a href="#232834" label="[23:28:34]">&lt;fossy&gt;</a></span><span class="message">let's just keep moving forward</span></div><div class="line" id="232855"><span class="nick" style="color:#8dd3c7"><a href="#232855" label="[23:28:55]">&lt;oriansj&gt;</a></span><span class="message">anyone who wants to save me from the grief when ARM people start complain about how they have to depend upon x86 for their bootstrap; is more than free to do that work for me.</span></div><div class="line" id="232921"><span class="nick" style="color:#8dd3c7"><a href="#232921" label="[23:29:21]">&lt;oriansj&gt;</a></span><span class="message">because I know that is going to show up eventually</span></div><div class="line" id="232949"><span class="nick" style="color:#6b8072"><a href="#232949" label="[23:29:49]">&lt;pder&gt;</a></span><span class="message">I asked about that earlier because I thought it would be an interesting learning exercise for me</span></div><div class="line" id="233017"><span class="nick" style="color:#2e2a4a"><a href="#233017" label="[23:30:17]">&lt;fossy&gt;</a></span><span class="message">OH NO I HAVE TO USE A DIFFERENT ARCHITECTURE TO DO MY BOOTSTRAP</span></div><div class="line" id="233019"><span class="nick" style="color:#8dd3c7"><a href="#233019" label="[23:30:19]">&lt;oriansj&gt;</a></span><span class="message">pder: and you will absolutely learn alot about how ARM compilers lie</span></div><div class="line" id="233019"><span class="nick" style="color:#2e2a4a"><a href="#233019" label="[23:30:19]">&lt;fossy&gt;</a></span><span class="message">THE HORROR</span></div><div class="line" id="233022"><span class="nick" style="color:#2e2a4a"><a href="#233022" label="[23:30:22]">&lt;fossy&gt;</a></span><span class="message">:O</span></div><div class="line" id="233023"><span class="nick" style="color:#2e2a4a"><a href="#233023" label="[23:30:23]">&lt;fossy&gt;</a></span><span class="message">:P</span></div><div class="line" id="233026"><span class="nick" style="color:#2e2a4a"><a href="#233026" label="[23:30:26]">&lt;fossy&gt;</a></span><span class="message">/s</span></div><div class="line" id="233130"><span class="nick" style="color:#8dd3c7"><a href="#233130" label="[23:31:30]">&lt;oriansj&gt;</a></span><span class="message">honestly, it is fine if people don't like that and just do the work themselves (for fun, learning or whatever)</span></div><div class="line" id="233157"><span class="nick" style="color:#8dd3c7"><a href="#233157" label="[23:31:57]">&lt;oriansj&gt;</a></span><span class="message">It is when they feel entitled to my time, which annoys the crap out of me.</span></div><div class="line" id="233204"><span class="nick" style="color:#2e2a4a"><a href="#233204" label="[23:32:04]">&lt;fossy&gt;</a></span><span class="message">fair enough</span></div><div class="line" id="233216"><span class="nick" style="color:#2e2a4a"><a href="#233216" label="[23:32:16]">&lt;fossy&gt;</a></span><span class="message">your time is your time and you should be able to choose what you want to do with it</span></div><div class="line" id="233231"><span class="nick" style="color:#8dd3c7"><a href="#233231" label="[23:32:31]">&lt;oriansj&gt;</a></span><span class="message">asking nicely is fine; demanding  just makes them a dick</span></div><div class="line" id="233239"><span class="nick" style="color:#2e2a4a"><a href="#233239" label="[23:32:39]">&lt;fossy&gt;</a></span><span class="message">yep</span></div><div class="line" id="233346"><span class="nick" style="color:#8dd3c7"><a href="#233346" label="[23:33:46]">&lt;oriansj&gt;</a></span><span class="message">for the people who help out of the goodness of their own hearts (or any selfish reasons they have); thank you for sharing the work</span></div><div class="line" id="233355"><span class="nick" style="color:#8dd3c7"><a href="#233355" label="[23:33:55]">&lt;oriansj&gt;</a></span><span class="message">it makes things alot easier</span></div><div class="line" id="233509"><span class="nick" style="color:#8dd3c7"><a href="#233509" label="[23:35:09]">&lt;oriansj&gt;</a></span><span class="message">fossy: now if you wanted to leverage your C skills to path blaze the bootstrap to solve more; there is a task you might find challenging</span></div><div class="line" id="234431"><span class="nick" style="color:#2e2a4a"><a href="#234431" label="[23:44:31]">&lt;fossy&gt;</a></span><span class="message">yeS?</span></div><div class="line" id="234434"><span class="nick" style="color:#2e2a4a"><a href="#234434" label="[23:44:34]">&lt;fossy&gt;</a></span><span class="message">yes?</span></div><div class="line" id="234616"><span class="nick" style="color:#8dd3c7"><a href="#234616" label="[23:46:16]">&lt;oriansj&gt;</a></span><span class="message">well do need a posix that M2-Planet can build</span></div><div class="line" id="234658"><span class="nick" style="color:#8dd3c7"><a href="#234658" label="[23:46:58]">&lt;oriansj&gt;</a></span><span class="message">would you be perhaps interested in helping with that problem?</span></div><div class="line" id="234715"><span class="nick" style="color:#2e2a4a"><a href="#234715" label="[23:47:15]">&lt;fossy&gt;</a></span><span class="message">ie a posix kernel?</span></div><div class="line" id="234719"><span class="nick" style="color:#2e2a4a"><a href="#234719" label="[23:47:19]">&lt;fossy&gt;</a></span><span class="message">that would be very interesting</span></div><div class="line" id="234836"><span class="nick" style="color:#8dd3c7"><a href="#234836" label="[23:48:36]">&lt;oriansj&gt;</a></span><span class="message">indeed</span></div><div class="line" id="234853"><span class="nick" style="color:#8dd3c7"><a href="#234853" label="[23:48:53]">&lt;oriansj&gt;</a></span><span class="message">that way we can remove linux/BSDs from the bootstrap binaries</span></div><div class="line" id="234903"><span class="nick" style="color:#2e2a4a"><a href="#234903" label="[23:49:03]">&lt;fossy&gt;</a></span><span class="message">hm i would be happy to have a crack at that</span></div><div class="line" id="234913"><span class="nick" style="color:#2e2a4a"><a href="#234913" label="[23:49:13]">&lt;fossy&gt;</a></span><span class="message">i will need to read up a bit on kernels tho</span></div><div class="line" id="234924"><span class="nick" style="color:#8dd3c7"><a href="#234924" label="[23:49:24]">&lt;oriansj&gt;</a></span><span class="message">and if M2-Planet can build it; we can bootstrap it from metal</span></div><div class="line" id="234956"><span class="nick" style="color:#8dd3c7"><a href="#234956" label="[23:49:56]">&lt;oriansj&gt;</a></span><span class="message">indeed; hence background research</span></div><div class="line" id="235032"><span class="nick" style="color:#2e2a4a"><a href="#235032" label="[23:50:32]">&lt;fossy&gt;</a></span><span class="message">x86 + coreboot + this would be a good intermediete between x86 + bios + firmware + linux and knight</span></div><div class="line" id="235041"><span class="nick" style="color:#2e2a4a"><a href="#235041" label="[23:50:41]">&lt;fossy&gt;</a></span><span class="message">of course, knight would be better</span></div><div class="line" id="235104"><span class="nick" style="color:#80b1d3"><a href="#235104" label="[23:51:04]">&lt;dddddd&gt;</a></span><span class="message">kernel work is in my radar too, I'd be glad to help there.</span></div><div class="line" id="235112"><span class="nick" style="color:#2e2a4a"><a href="#235112" label="[23:51:12]">&lt;fossy&gt;</a></span><span class="message">but for those who don't have the time or money a open source bios + this would be better than having a fat-ass kernel</span></div><div class="line" id="235130"><span class="nick" style="color:#8dd3c7"><a href="#235130" label="[23:51:30]">&lt;oriansj&gt;</a></span><span class="message">good dddddd</span></div><div class="line" id="235133"><span class="nick" style="color:#2e2a4a"><a href="#235133" label="[23:51:33]">&lt;fossy&gt;</a></span><span class="message">dddddd: good</span></div><div class="line" id="235232"><span class="nick" style="color:#8dd3c7"><a href="#235232" label="[23:52:32]">&lt;oriansj&gt;</a></span><span class="message">It only needs to support the current M2-Planet syscalls</span></div><div class="line" id="235257"><span class="nick" style="color:#8dd3c7"><a href="#235257" label="[23:52:57]">&lt;oriansj&gt;</a></span><span class="message">virtual memory and round-robin multi-tasking</span></div><div class="line" id="235353"><span class="nick" style="color:#8dd3c7"><a href="#235353" label="[23:53:53]">&lt;oriansj&gt;</a></span><span class="message">possibly ext2 filesystem (or fat32 depending on difficulty)</span></div><div class="line" id="235413"><span class="nick" style="color:#2e2a4a"><a href="#235413" label="[23:54:13]">&lt;fossy&gt;</a></span><span class="message">ext2 &gt; fat32 likely</span></div><div class="line" id="235418"><span class="nick" style="color:#80b1d3"><a href="#235418" label="[23:54:18]">&lt;dddddd&gt;</a></span><span class="message">About the need for scheme tests, I still don't quite get the reason of not using some test suite (I guessing here, but they must exist) from some other implementation.</span></div><div class="line" id="235438"><span class="nick" style="color:#8dd3c7"><a href="#235438" label="[23:54:38]">&lt;oriansj&gt;</a></span><span class="message">It needs to work on multiple host architectures (which require different syscall numbers and methods)</span></div><div class="line" id="235552"><span class="nick" style="color:#8dd3c7"><a href="#235552" label="[23:55:52]">&lt;oriansj&gt;</a></span><span class="message">dddddd: yes there are and they are very implementation specific and sadly mes-m2 isn't able to support guile's yet</span></div><div class="line" id="235624"><span class="nick" style="color:#8dd3c7"><a href="#235624" label="[23:56:24]">&lt;oriansj&gt;</a></span><span class="message">as guile jumps straight to depending upon alot of features</span></div><div class="line" id="235720"><span class="nick" style="color:#80b1d3"><a href="#235720" label="[23:57:20]">&lt;dddddd&gt;</a></span><span class="message">maybe from [very] earlier versions...</span></div><br /></div></body></html>