<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-10-12.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="014701"><span class="nick" style="color:#8dd3c7"><a href="#014701" label="[01:47:01]">&lt;fossy&gt;</a></span><span class="message">i see</span></div><div class="line" id="014714"><span class="nick" style="color:#8dd3c7"><a href="#014714" label="[01:47:14]">&lt;fossy&gt;</a></span><span class="message">that is good stikonas[m]</span></div><div class="line" id="014740"><span class="nick" style="color:#8dd3c7"><a href="#014740" label="[01:47:40]">&lt;fossy&gt;</a></span><span class="message">stikonas[m]: when you wake up, do you mind having a look at the top commit on my PR, your kernel should completely work with it now</span></div><div class="line" id="014754"><span class="nick" style="color:#8dd3c7"><a href="#014754" label="[01:47:54]">&lt;fossy&gt;</a></span><span class="message">that kernel only supports 3G RAM with i386, which is why your kernel was failing</span></div><div class="line" id="014803"><span class="nick" style="color:#8dd3c7"><a href="#014803" label="[01:48:03]">&lt;fossy&gt;</a></span><span class="message">we want to support such kernels because they are smaller though</span></div><div class="line" id="025407"><span class="nick" style="color:#2e2a4a"><a href="#025407" label="[02:54:07]">&lt;stikonas[m]&gt;</a></span><span class="message">fossy: sure, I just had 2 hour internet outage, will take a look tomorrow</span></div><div class="line" id="025445"><span class="nick" style="color:#2e2a4a"><a href="#025445" label="[02:54:45]">&lt;stikonas[m]&gt;</a></span><span class="message">Oh, I didn't realise it only supported 3 GB...</span></div><div class="line" id="025520"><span class="nick" style="color:#2e2a4a"><a href="#025520" label="[02:55:20]">&lt;stikonas[m]&gt;</a></span><span class="message">I also wrote almost trivial match program, will do PR tomorrow too</span></div><div class="line" id="025537"><span class="nick" style="color:#2e2a4a"><a href="#025537" label="[02:55:37]">&lt;stikonas[m]&gt;</a></span><span class="message">It can go to mescc-tools-extra</span></div><div class="line" id="025623"><span class="nick" style="color:#2e2a4a"><a href="#025623" label="[02:56:23]">&lt;stikonas[m]&gt;</a></span><span class="message">Basically return !match(a,b);</span></div><div class="line" id="025651"><span class="nick" style="color:#2e2a4a"><a href="#025651" label="[02:56:51]">&lt;stikonas[m]&gt;</a></span><span class="message">But that will allow to do conditional kaem code</span></div><div class="line" id="032752"><span class="nick" style="color:#8dd3c7"><a href="#032752" label="[03:27:52]">&lt;fossy&gt;</a></span><span class="message">oh, i see</span></div><div class="line" id="090906"><span class="nick">***</span><span class="message notice">PurpleSym[m] is now known as PurpleSym</span></div><div class="line" id="112342"><span class="nick" style="color:#6b8072"><a href="#112342" label="[11:23:42]">&lt;stikonas&gt;</a></span><span class="message">fossy: looks good but you need to update guile checksum</span></div><div class="line" id="145634"><span class="nick" style="color:#80b1d3"><a href="#145634" label="[14:56:34]">&lt;ruffni&gt;</a></span><span class="message">what the best resource explaining the relationships on hex0, hex1, hex2, M1, mescc-tools and GNU Mes?</span></div><div class="line" id="150714"><span class="nick" style="color:#6d2462"><a href="#150714" label="[15:07:14]">&lt;janneke&gt;</a></span><span class="message">ruffni: i sent an outline to gnu-music-discuss a while ago which has a lot of pointers <a rel="nofollow" href="https://lists.gnu.org/archive/html/gnu-misc-discuss/2021-04/msg00057.html">https://lists.gnu.org/archive/html/gnu-misc-discuss/2021-04/msg00057.html</a> </span></div><div class="line" id="150805"><span class="nick" style="color:#80b1d3"><a href="#150805" label="[15:08:05]">&lt;ruffni&gt;</a></span><span class="message">thanks!</span></div><div class="line" id="162618"><span class="nick" style="color:#2e2a4a"><a href="#162618" label="[16:26:18]">&lt;stikonas[m]&gt;</a></span><span class="message">ruffni: also ask questions here, we can answer them too</span></div><div class="line" id="162640"><span class="nick" style="color:#2e2a4a"><a href="#162640" label="[16:26:40]">&lt;stikonas[m]&gt;</a></span><span class="message">Basically each step builds another</span></div><div class="line" id="162735"><span class="nick" style="color:#2e2a4a"><a href="#162735" label="[16:27:35]">&lt;stikonas[m]&gt;</a></span><span class="message">And each new step is longer and more complicated program but your also get to use more advanced tools</span></div><div class="line" id="163051"><span class="nick" style="color:#80b1d3"><a href="#163051" label="[16:30:51]">&lt;ruffni&gt;</a></span><span class="message">:) that's about as far as i got yet.</span></div><div class="line" id="163156"><span class="nick" style="color:#80b1d3"><a href="#163156" label="[16:31:56]">&lt;ruffni&gt;</a></span><span class="message">and just in this moment, i found what i was looking for.  the README files of the stage0 and stage0-posix repos contain the info!</span></div><div class="line" id="163218"><span class="nick" style="color:#80b1d3"><a href="#163218" label="[16:32:18]">&lt;ruffni&gt;</a></span><span class="message">i thought i saw that *somewhere* and kept crawling the docs for that</span></div><div class="line" id="163423"><span class="nick" style="color:#6b8072"><a href="#163423" label="[16:34:23]">&lt;stikonas&gt;</a></span><span class="message">just looking at what build scripts run tell you quite a bit</span></div><div class="line" id="163451"><span class="nick" style="color:#6b8072"><a href="#163451" label="[16:34:51]">&lt;stikonas&gt;</a></span><span class="message">e.g. if you start at <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/kaem.amd64">https://github.com/oriansj/stage0-posix/blob/master/kaem.amd64</a> </span></div><div class="line" id="163504"><span class="nick" style="color:#6b8072"><a href="#163504" label="[16:35:04]">&lt;stikonas&gt;</a></span><span class="message">(well, this one just kicks three other scripts)</span></div><div class="line" id="163546"><span class="nick" style="color:#6b8072"><a href="#163546" label="[16:35:46]">&lt;stikonas&gt;</a></span><span class="message">first one of those is rebuilding our binary seeds <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/AMD64/mescc-tools-seed-kaem.kaem">https://github.com/oriansj/stage0-posix/blob/master/AMD64/mescc-tools-seed-kaem.kaem</a>  (hex0-&gt;hex0 and hex0-&gt;kaem-minimel)</span></div><div class="line" id="163607"><span class="nick" style="color:#6b8072"><a href="#163607" label="[16:36:07]">&lt;stikonas&gt;</a></span><span class="message">then second is most insteresting <a rel="nofollow" href="https://github.com/oriansj/stage0-posix/blob/master/AMD64/mescc-tools-mini-kaem.kaem">https://github.com/oriansj/stage0-posix/blob/master/AMD64/mescc-tools-mini-kaem.kaem</a> </span></div><div class="line" id="163701"><span class="nick" style="color:#6b8072"><a href="#163701" label="[16:37:01]">&lt;stikonas&gt;</a></span><span class="message">it goes all the way to C compiler in C and builds &quot;shell engine&quot; with more features (kaem as opposed to kaem-minimal)</span></div><div class="line" id="164054"><span class="nick" style="color:#6b8072"><a href="#164054" label="[16:40:54]">&lt;stikonas&gt;</a></span><span class="message">ruffni: basically hex0 just converts text file into binary file (stripping of comments), each pair of bytes in a text file e.g. AF is converted into byte 0xAF</span></div><div class="line" id="164158"><span class="nick" style="color:#6b8072"><a href="#164158" label="[16:41:58]">&lt;stikonas&gt;</a></span><span class="message">hex1 is kind of optional but simplifies writing hex2. It's a stripped down version of hex2 and supports only single character labels (in hex0 code you have to manually calculate how many bytes your want to jump in your code when branching)</span></div><div class="line" id="164221"><span class="nick" style="color:#6b8072"><a href="#164221" label="[16:42:21]">&lt;stikonas&gt;</a></span><span class="message">then hex2 supports multi character labels and a few other features</span></div><div class="line" id="164351"><span class="nick" style="color:#6b8072"><a href="#164351" label="[16:43:51]">&lt;stikonas&gt;</a></span><span class="message">M0 is then macro assembler, instead of coding writing using hex numbers, your can write with some words, e.g. &quot;ADD&quot; instead of some hex number</span></div><div class="line" id="164404"><span class="nick" style="color:#6b8072"><a href="#164404" label="[16:44:04]">&lt;stikonas&gt;</a></span><span class="message">and cc_* is a simple C compiler</span></div><div class="line" id="164429"><span class="nick" style="color:#6b8072"><a href="#164429" label="[16:44:29]">&lt;stikonas&gt;</a></span><span class="message">it is still written in assembly but can bootstrap M2-Planet (C compiler in C)</span></div><div class="line" id="164603"><span class="nick" style="color:#6b8072"><a href="#164603" label="[16:46:03]">&lt;stikonas&gt;</a></span><span class="message">and after that we build some useful tools and then GNU Mes</span></div><div class="line" id="164702"><span class="nick" style="color:#80b1d3"><a href="#164702" label="[16:47:02]">&lt;ruffni&gt;</a></span><span class="message">thank you so much for clarifying!</span></div><div class="line" id="164859"><span class="nick" style="color:#6b8072"><a href="#164859" label="[16:48:59]">&lt;stikonas&gt;</a></span><span class="message">so those early steps are a bit arch specific. We have them for amd64, x86, aarch64 and risc-v for POSIX boostrap. And also some old &quot;knight&quot; architecture which can also run it on baremetal (we don't have any knight hardware though)</span></div><div class="line" id="165148"><span class="nick" style="color:#6b8072"><a href="#165148" label="[16:51:48]">&lt;stikonas&gt;</a></span><span class="message">ruffni: porting those steps to new arch helps a lot to understand them</span></div><div class="line" id="170324"><span class="nick" style="color:#80b1d3"><a href="#170324" label="[17:03:24]">&lt;ruffni&gt;</a></span><span class="message">i think what confused me most is that stage0 contains stage0, stage1, stage2 and stage3 :)</span></div><div class="line" id="170402"><span class="nick" style="color:#6b8072"><a href="#170402" label="[17:04:02]">&lt;stikonas&gt;</a></span><span class="message">well, there is stage0 repo and stage0-posix repo</span></div><div class="line" id="170412"><span class="nick" style="color:#80b1d3"><a href="#170412" label="[17:04:12]">&lt;ruffni&gt;</a></span><span class="message">yes</span></div><div class="line" id="170414"><span class="nick" style="color:#6b8072"><a href="#170414" label="[17:04:14]">&lt;stikonas&gt;</a></span><span class="message">stage0 is basically baremetal</span></div><div class="line" id="170428"><span class="nick" style="color:#6b8072"><a href="#170428" label="[17:04:28]">&lt;stikonas&gt;</a></span><span class="message">and it's dividede into those stage0-stage3</span></div><div class="line" id="170453"><span class="nick" style="color:#6b8072"><a href="#170453" label="[17:04:53]">&lt;stikonas&gt;</a></span><span class="message">bootstrap on POSIX kernel on the other hand is dividided into more parts...</span></div><div class="line" id="170502"><span class="nick" style="color:#6b8072"><a href="#170502" label="[17:05:02]">&lt;stikonas&gt;</a></span><span class="message">although the steps are similar</span></div><div class="line" id="170512"><span class="nick" style="color:#6b8072"><a href="#170512" label="[17:05:12]">&lt;stikonas&gt;</a></span><span class="message">it's a bit arbitrary how you subdivide those steps</span></div><div class="line" id="170542"><span class="nick" style="color:#80b1d3"><a href="#170542" label="[17:05:42]">&lt;ruffni&gt;</a></span><span class="message">i see that.  also: stage0-posix talks about phases</span></div><div class="line" id="170607"><span class="nick" style="color:#6b8072"><a href="#170607" label="[17:06:07]">&lt;stikonas&gt;</a></span><span class="message">I guess to reduce confusion</span></div><div class="line" id="170751"><span class="nick" style="color:#6b8072"><a href="#170751" label="[17:07:51]">&lt;stikonas&gt;</a></span><span class="message">ruffni: there is also this <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst">https://github.com/fosslinux/live-bootstrap/blob/master/parts.rst</a> </span></div><div class="line" id="170755"><span class="nick" style="color:#6b8072"><a href="#170755" label="[17:07:55]">&lt;stikonas&gt;</a></span><span class="message">but it's x86 only for now</span></div><div class="line" id="170813"><span class="nick" style="color:#6b8072"><a href="#170813" label="[17:08:13]">&lt;stikonas&gt;</a></span><span class="message">(because that's the only arch where everything works, not even amd64 works)</span></div><div class="line" id="171728"><span class="nick" style="color:#234e69"><a href="#171728" label="[17:17:28]">&lt;Hagfish&gt;</a></span><span class="message">ruffni: if you haven't seen that parts.rst before, it's well worth a look</span></div><div class="line" id="171744"><span class="nick" style="color:#234e69"><a href="#171744" label="[17:17:44]">&lt;Hagfish&gt;</a></span><span class="message">one day i think i might print it out to have a poster on my wall :)</span></div><div class="line" id="172419"><span class="nick" style="color:#80b1d3"><a href="#172419" label="[17:24:19]">&lt;ruffni&gt;</a></span><span class="message">it is, indeed! beautiful, yet terrifying ;)</span></div><div class="line" id="181046"><span class="nick" style="color:#6c3d55"><a href="#181046" label="[18:10:46]">&lt;xentrac&gt;</a></span><span class="message">probably of interest to many here: <a rel="nofollow" href="https://www.qubes-os.org/news/2021/10/08/reproducible-builds-for-debian-a-big-step-forward/">https://www.qubes-os.org/news/2021/10/08/reproducible-builds-for-debian-a-big-step-forward/</a> </span></div><div class="line" id="225621"><span class="nick" style="color:#d9d9d9"><a href="#225621" label="[22:56:21]">&lt;oriansj&gt;</a></span><span class="message">ruffni: we also have a wiki <a rel="nofollow" href="https://bootstrapping.miraheze.org/wiki/Stage0">https://bootstrapping.miraheze.org/wiki/Stage0</a>  but I'll probably have to update it to include the new RISC-V extensions.</span></div><div class="line" id="225657"><span class="nick" style="color:#d9d9d9"><a href="#225657" label="[22:56:57]">&lt;oriansj&gt;</a></span><span class="message">among a few other legacy pieces that have changed.</span></div><div class="line" id="225827"><span class="nick" style="color:#6c3d55"><a href="#225827" label="[22:58:27]">&lt;xentrac&gt;</a></span><span class="message">I think ruffni disappeared</span></div><br /></div></body></html>