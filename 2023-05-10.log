<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2023-05-10.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="035000"><span class="nick" style="color:#389600"><a href="#035000" label="[03:50:00]">&lt;emilytrau[m]&gt;</a></span><span class="message">first step towards nixos FSB is merged! wooooo! <a rel="nofollow" href="https://github.com/NixOS/nixpkgs/pull/227914">https://github.com/NixOS/nixpkgs/pull/227914</a> </span></div><div class="line" id="074638"><span class="nick" style="color:#8dd3c7"><a href="#074638" label="[07:46:38]">&lt;janneke&gt;</a></span><span class="message">emilytrau[m]: \o/</span></div><div class="line" id="075108"><span class="nick" style="color:#8dd3c7"><a href="#075108" label="[07:51:08]">&lt;janneke&gt;</a></span><span class="message">emilytrau[m]: what kernels does nixos support?a</span></div><div class="line" id="075227"><span class="nick" style="color:#8dd3c7"><a href="#075227" label="[07:52:27]">&lt;janneke&gt;</a></span><span class="message">fwiw, mes should run on the hurd too and there was a preliminary initial contribution for freebsd, but that's about it for now</span></div><div class="line" id="075410"><span class="nick" style="color:#389600"><a href="#075410" label="[07:54:10]">&lt;emilytrau[m]&gt;</a></span><span class="message">NixOS is built on linux+systemd, but nix and the nixpkgs package set support linux, macos, some BSDs, and many other platforms</span></div><div class="line" id="075444"><span class="nick" style="color:#389600"><a href="#075444" label="[07:54:44]">&lt;emilytrau[m]&gt;</a></span><span class="message">I've got a pull request open to even support SerenityOS in nixpkgs :D</span></div><div class="line" id="075755"><span class="nick" style="color:#389600"><a href="#075755" label="[07:57:55]">&lt;emilytrau[m]&gt;</a></span><span class="message">There isn't a hurd platform (yet) but that could be an interesting project. Although I'd guess maybe hurd users would already be using guix?</span></div><div class="line" id="080425"><span class="nick" style="color:#8dd3c7"><a href="#080425" label="[08:04:25]">&lt;janneke&gt;</a></span><span class="message">ah sure, as a package manager, nice</span></div><div class="line" id="080503"><span class="nick" style="color:#8dd3c7"><a href="#080503" label="[08:05:03]">&lt;janneke&gt;</a></span><span class="message">hurd is lagging behind on guix atm</span></div><div class="line" id="084117"><span class="nick" style="color:#2e2a4a"><a href="#084117" label="[08:41:17]">&lt;efraim&gt;</a></span><span class="message">janneke: building mes from git on riscv64-linux <a rel="nofollow" href="https://seashells.io/v/RFpDAC7p">https://seashells.io/v/RFpDAC7p</a> </span></div><div class="line" id="084318"><span class="nick" style="color:#2e2a4a"><a href="#084318" label="[08:43:18]">&lt;efraim&gt;</a></span><span class="message">(when it gets started, another build process grabbed that machine it looks like)</span></div><div class="line" id="084424"><span class="nick" style="color:#8dd3c7"><a href="#084424" label="[08:44:24]">&lt;janneke&gt;</a></span><span class="message">efraim: great, thanks</span></div><div class="line" id="084618"><span class="nick" style="color:#8dd3c7"><a href="#084618" label="[08:46:18]">&lt;janneke&gt;</a></span><span class="message">ACTION is meanwhile building substitutes using qemu</span></div><div class="line" id="092423"><span class="nick" style="color:#6b8072"><a href="#092423" label="[09:24:23]">&lt;fossy&gt;</a></span><span class="message">bridge die rip</span></div><div class="line" id="095550"><span class="nick" style="color:#2e2a4a"><a href="#095550" label="[09:55:50]">&lt;efraim&gt;</a></span><span class="message">ok I finished the other build and now it's starting</span></div><div class="line" id="100418"><span class="nick" style="color:#8dd3c7"><a href="#100418" label="[10:04:18]">&lt;janneke&gt;</a></span><span class="message">nice</span></div><div class="line" id="100443"><span class="nick" style="color:#8dd3c7"><a href="#100443" label="[10:04:43]">&lt;janneke&gt;</a></span><span class="message">ah, and with the m2-planet from git, mes-m2 runs \o/</span></div><div class="line" id="103802"><span class="nick" style="color:#80b1d3"><a href="#103802" label="[10:38:02]">&lt;stikonas_&gt;</a></span><span class="message">mes-m2 will run but mes will not...</span></div><div class="line" id="103811"><span class="nick" style="color:#80b1d3"><a href="#103811" label="[10:38:11]">&lt;stikonas_&gt;</a></span><span class="message"> <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/mes.git/tree/lib/linux/riscv64-mes-mescc/crt1.c?h=wip-riscv#n35">https://git.savannah.gnu.org/cgit/mes.git/tree/lib/linux/riscv64-mes-mescc/crt1.c?h=wip-riscv#n35</a>  is already wrong</span></div><div class="line" id="103830"><span class="nick" style="color:#80b1d3"><a href="#103830" label="[10:38:30]">&lt;stikonas_&gt;</a></span><span class="message">as !0x1 will not generate 01 with hex2 on riscv64</span></div><div class="line" id="103851"><span class="nick" style="color:#6d2462"><a href="#103851" label="[10:38:51]">&lt;stikonas&gt;</a></span><span class="message">so machine code generated by mescc is somewhat wrong</span></div><div class="line" id="103915"><span class="nick" style="color:#6d2462"><a href="#103915" label="[10:39:15]">&lt;stikonas&gt;</a></span><span class="message">(more precisely by the combination of messcc and hex2)</span></div><div class="line" id="103939"><span class="nick" style="color:#6d2462"><a href="#103939" label="[10:39:39]">&lt;stikonas&gt;</a></span><span class="message">(actually M1, not even hex2)</span></div><div class="line" id="103951"><span class="nick" style="color:#6d2462"><a href="#103951" label="[10:39:51]">&lt;stikonas&gt;</a></span><span class="message">so I expect final mes binary will segfault</span></div><div class="line" id="104013"><span class="nick" style="color:#8dd3c7"><a href="#104013" label="[10:40:13]">&lt;janneke&gt;</a></span><span class="message">stikonas: what about using --architecture amd64 for M1 on riscv, would that help?</span></div><div class="line" id="104031"><span class="nick" style="color:#8dd3c7"><a href="#104031" label="[10:40:31]">&lt;janneke&gt;</a></span><span class="message">it's great to know mes builds until here, at least</span></div><div class="line" id="104122"><span class="nick" style="color:#6d2462"><a href="#104122" label="[10:41:22]">&lt;stikonas&gt;</a></span><span class="message">janneke it might</span></div><div class="line" id="104200"><span class="nick" style="color:#6d2462"><a href="#104200" label="[10:42:00]">&lt;stikonas&gt;</a></span><span class="message">I want to fix it properly but it will take a bit of time...</span></div><div class="line" id="104244"><span class="nick" style="color:#8dd3c7"><a href="#104244" label="[10:42:44]">&lt;janneke&gt;</a></span><span class="message">iwbn to have something running, adapting mescc to the new M1 riscv immediates shouldn't be too hard?</span></div><div class="line" id="104337"><span class="nick" style="color:#6d2462"><a href="#104337" label="[10:43:37]">&lt;stikonas&gt;</a></span><span class="message">janneke: it's not too hard but it's not completely trivial either</span></div><div class="line" id="104407"><span class="nick" style="color:#6d2462"><a href="#104407" label="[10:44:07]">&lt;stikonas&gt;</a></span><span class="message">part of it is my unfamiliarity with mescc</span></div><div class="line" id="104424"><span class="nick" style="color:#6d2462"><a href="#104424" label="[10:44:24]">&lt;stikonas&gt;</a></span><span class="message">so I need to exactly understand what code we need to emit...</span></div><div class="line" id="104500"><span class="nick" style="color:#6d2462"><a href="#104500" label="[10:45:00]">&lt;stikonas&gt;</a></span><span class="message">anyway, I'll be back in the evening...</span></div><div class="line" id="104517"><span class="nick" style="color:#8dd3c7"><a href="#104517" label="[10:45:17]">&lt;janneke&gt;</a></span><span class="message">yeah, so i was hoping that using M1 in x86_64 mode would produce working code; then it would be easier to extrapolate from there</span></div><div class="line" id="113323"><span class="nick" style="color:#8dd3c7"><a href="#113323" label="[11:33:23]">&lt;janneke&gt;</a></span><span class="message">x</span></div><div class="line" id="134641"><span class="nick" style="color:#2e2a4a"><a href="#134641" label="[13:46:41]">&lt;efraim&gt;</a></span><span class="message">about 3 hours in on building mes and still going ...</span></div><div class="line" id="134804"><span class="nick" style="color:#8dd3c7"><a href="#134804" label="[13:48:04]">&lt;janneke&gt;</a></span><span class="message">efraim: it looks *much* (maybe an order?) slower than qemu on x86_64</span></div><div class="line" id="134900"><span class="nick" style="color:#8dd3c7"><a href="#134900" label="[13:49:00]">&lt;janneke&gt;</a></span><span class="message">but it seems qemu has problems, see my remark/branch on stack overflow tests <a rel="nofollow" href="https://lists.gnu.org/archive/html/guix-devel/2023-05/msg00123.html">https://lists.gnu.org/archive/html/guix-devel/2023-05/msg00123.html</a> </span></div><div class="line" id="134919"><span class="nick" style="color:#2e2a4a"><a href="#134919" label="[13:49:19]">&lt;efraim&gt;</a></span><span class="message">the truth is it doesn't get built that much, so it probably isn't that big of a problem</span></div><div class="line" id="134937"><span class="nick" style="color:#8dd3c7"><a href="#134937" label="[13:49:37]">&lt;janneke&gt;</a></span><span class="message">true</span></div><div class="line" id="135015"><span class="nick" style="color:#2e2a4a"><a href="#135015" label="[13:50:15]">&lt;efraim&gt;</a></span><span class="message">ah, yeah. that's why I deleted the wip-riscv branch, it was where I was staging patches when working on riscv64 support in guix</span></div><div class="line" id="135041"><span class="nick" style="color:#8dd3c7"><a href="#135041" label="[13:50:41]">&lt;janneke&gt;</a></span><span class="message">ah, ok</span></div><div class="line" id="135134"><span class="nick" style="color:#234e69"><a href="#135134" label="[13:51:34]">&lt;[exa]&gt;</a></span><span class="message">rv64 doesn't have any instruction/ramops decoding acceleration in qemu yet, right?</span></div><div class="line" id="135205"><span class="nick" style="color:#8dd3c7"><a href="#135205" label="[13:52:05]">&lt;janneke&gt;</a></span><span class="message">dunno</span></div><div class="line" id="135207"><span class="nick" style="color:#2e2a4a"><a href="#135207" label="[13:52:07]">&lt;efraim&gt;</a></span><span class="message">I've never checked</span></div><div class="line" id="161357"><span class="nick" style="color:#6c3d55"><a href="#161357" label="[16:13:57]">&lt;ericson2314&gt;</a></span><span class="message">emilytrau: did you see my comment on trying to use multiple derivations for parallelism?</span></div><div class="line" id="181259"><span class="nick" style="color:#d9d9d9"><a href="#181259" label="[18:12:59]">&lt;Irvise_&gt;</a></span><span class="message">One quick question. Has someone bootstrapped Erlang?</span></div><div class="line" id="181350"><span class="nick" style="color:#d9d9d9"><a href="#181350" label="[18:13:50]">&lt;Irvise_&gt;</a></span><span class="message">Afaik, it uses precompiled binaries that it runs on the C based VM (which is compiled as a first step). From what I saw in Guix, it seems that it is not bootrapped, but maybe I am not understanding things right.</span></div><div class="line" id="181451"><span class="nick" style="color:#d9d9d9"><a href="#181451" label="[18:14:51]">&lt;Irvise_&gt;</a></span><span class="message">To me it seems they are doing the same approach as the one in Zig. Or maybe I should say that Zig is following Erlang's approach.</span></div><div class="line" id="193157"><span class="nick" style="color:#bc80bd"><a href="#193157" label="[19:31:57]">&lt;rickmasters&gt;</a></span><span class="message">The PR to complete kernel bootstrapping has been submitted for review. <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/295">https://github.com/fosslinux/live-bootstrap/pull/295</a> </span></div><div class="line" id="194822"><span class="nick" style="color:#2e2a4a"><a href="#194822" label="[19:48:22]">&lt;efraim&gt;</a></span><span class="message">nice</span></div><div class="line" id="211454"><span class="nick" style="color:#3c5b35"><a href="#211454" label="[21:14:54]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: just let me know if you want to submit some PRs, in order to avoid keeping a separated fork of Fiwix for live-bootstrap</span></div><div class="line" id="211827"><span class="nick" style="color:#bc80bd"><a href="#211827" label="[21:18:27]">&lt;rickmasters&gt;</a></span><span class="message">Mikaku: yes, I'll try to submit some soon. I've put that off too long.</span></div><div class="line" id="214238"><span class="nick" style="color:#6d2462"><a href="#214238" label="[21:42:38]">&lt;stikonas&gt;</a></span><span class="message">rickmasters: maybe it's worth moving kernel seed to <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/">https://github.com/oriansj/bootstrap-seeds/</a>  ?</span></div><div class="line" id="214323"><span class="nick" style="color:#6d2462"><a href="#214323" label="[21:43:23]">&lt;stikonas&gt;</a></span><span class="message">(i.e. replace these files <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/tree/master/NATIVE/x86">https://github.com/oriansj/bootstrap-seeds/tree/master/NATIVE/x86</a>  that are not very useful)</span></div><div class="line" id="215721"><span class="nick" style="color:#3c5b35"><a href="#215721" label="[21:57:21]">&lt;Mikaku&gt;</a></span><span class="message">rickmasters: ok, great!</span></div><div class="line" id="220412"><span class="nick" style="color:#bc80bd"><a href="#220412" label="[22:04:12]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: i don't mind moving builder-hex0-x86-stage1.bin there. hopefully it would clear the reuse license lint error?</span></div><div class="line" id="220540"><span class="nick" style="color:#6d2462"><a href="#220540" label="[22:05:40]">&lt;stikonas&gt;</a></span><span class="message">yes, it will...</span></div><div class="line" id="220551"><span class="nick" style="color:#6d2462"><a href="#220551" label="[22:05:51]">&lt;stikonas&gt;</a></span><span class="message">we do have a mechanism of specifying license in a detached way</span></div><div class="line" id="220558"><span class="nick" style="color:#6d2462"><a href="#220558" label="[22:05:58]">&lt;stikonas&gt;</a></span><span class="message">but if we move then we don't need to worry about it</span></div><div class="line" id="220632"><span class="nick" style="color:#6d2462"><a href="#220632" label="[22:06:32]">&lt;stikonas&gt;</a></span><span class="message">(some detached licenses are listed in <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/blob/master/.reuse/dep5">https://github.com/fosslinux/live-bootstrap/blob/master/.reuse/dep5</a>) </span></div><div class="line" id="220821"><span class="nick" style="color:#bc80bd"><a href="#220821" label="[22:08:21]">&lt;rickmasters&gt;</a></span><span class="message">stikonas: ok I'll make the change soon</span></div><div class="line" id="223516"><span class="nick" style="color:#af8d2f"><a href="#223516" label="[22:35:16]">&lt;mihi&gt;</a></span><span class="message">emilytrau[m], in my opinion anyone who is interested in using the Hurd would probably use Debian Hurd. I evaluated Arch Hurd some time ago and the only way to actually use it is in a chroot inside Debian Hurd. I spent a few (too many) hours trying to get the startup and Shepherd scripts to boot my machine (VM) without manual intervention, and eventually gave up (probably due to lack of Shepherd</span></div><div class="line" id="223517"><span class="nick" style="color:#af8d2f"><a href="#223517" label="[22:35:17]">&lt;mihi&gt;</a></span><span class="message">knowledge). OTOH, Guix Hurd when I last evaluated it booted fine without issues (after adding some swap partition), but soon applications broke/segfaulted, including the build of gdb. So I decided to keep both parts :P</span></div><div class="line" id="223643"><span class="nick" style="color:#af8d2f"><a href="#223643" label="[22:36:43]">&lt;mihi&gt;</a></span><span class="message">My Debian Hurd VM is running here since at least 2016 and I boot it up every few weeks to either test something or install updates and see it getting better</span></div><div class="line" id="223646"><span class="nick" style="color:#af8d2f"><a href="#223646" label="[22:36:46]">&lt;mihi&gt;</a></span><span class="message">&lt;/offtopic&gt;</span></div><div class="line" id="223815"><span class="nick" style="color:#389600"><a href="#223815" label="[22:38:15]">&lt;FireFly&gt;</a></span><span class="message">or maybe guix with hurd? if that's a thing, IIRC it was at least originally meant to be a thing</span></div><div class="line" id="223853"><span class="nick" style="color:#8dd3c7"><a href="#223853" label="[22:38:53]">&lt;janneke&gt;</a></span><span class="message">mihi: yeah, it's not really feasible to build a new hurd outside of the debian build system, there are some problems wrt sharing their patches</span></div><div class="line" id="223921"><span class="nick" style="color:#8dd3c7"><a href="#223921" label="[22:39:21]">&lt;janneke&gt;</a></span><span class="message">i'm hoping this will get better once development is less in flux</span></div><div class="line" id="223944"><span class="nick" style="color:#8dd3c7"><a href="#223944" label="[22:39:44]">&lt;qyliss&gt;</a></span><span class="message">emilytrau[m]: HURD in Nixpkgs is on my long term todo list</span></div><div class="line" id="223956"><span class="nick" style="color:#8dd3c7"><a href="#223956" label="[22:39:56]">&lt;qyliss&gt;</a></span><span class="message">(if nobody gets there first, of course)</span></div><div class="line" id="224006"><span class="nick" style="color:#2e2a4a"><a href="#224006" label="[22:40:06]">&lt;civodul&gt;</a></span><span class="message">janneke: we do build a full GNU/Hurd in Guix though :-)</span></div><div class="line" id="224010"><span class="nick" style="color:#8dd3c7"><a href="#224010" label="[22:40:10]">&lt;qyliss&gt;</a></span><span class="message">I was thinking it would be cool to document it and use it as a way to make a tutorial on how to add a new platform</span></div><div class="line" id="224026"><span class="nick" style="color:#2e2a4a"><a href="#224026" label="[22:40:26]">&lt;civodul&gt;</a></span><span class="message">the situation re patches has vastly improved over the last couple of years</span></div><div class="line" id="224036"><span class="nick" style="color:#8dd3c7"><a href="#224036" label="[22:40:36]">&lt;janneke&gt;</a></span><span class="message">civodul: yeah, but our sources are ~2y old?</span></div><div class="line" id="224057"><span class="nick" style="color:#2e2a4a"><a href="#224057" label="[22:40:57]">&lt;civodul&gt;</a></span><span class="message">we've just updated them, so they're like 2m old now!</span></div><div class="line" id="224122"><span class="nick" style="color:#2e2a4a"><a href="#224122" label="[22:41:22]">&lt;civodul&gt;</a></span><span class="message">it wasn't easy though, because of the lack of releases upstream...</span></div><div class="line" id="224123"><span class="nick" style="color:#8dd3c7"><a href="#224123" label="[22:41:23]">&lt;janneke&gt;</a></span><span class="message">really, that's amazing?</span></div><div class="line" id="224128"><span class="nick" style="color:#8dd3c7"><a href="#224128" label="[22:41:28]">&lt;janneke&gt;</a></span><span class="message">ACTION stands corrected</span></div><div class="line" id="224138"><span class="nick" style="color:#2e2a4a"><a href="#224138" label="[22:41:38]">&lt;civodul&gt;</a></span><span class="message">jpoiret did most of the work</span></div><div class="line" id="224149"><span class="nick" style="color:#8dd3c7"><a href="#224149" label="[22:41:49]">&lt;janneke&gt;</a></span><span class="message">yeah, i thought there was this netbsd/rumpkernel/quilt patch problem</span></div><div class="line" id="224232"><span class="nick" style="color:#2e2a4a"><a href="#224232" label="[22:42:32]">&lt;civodul&gt;</a></span><span class="message">dunno, maybe we're just not building that part?</span></div><div class="line" id="224248"><span class="nick" style="color:#8dd3c7"><a href="#224248" label="[22:42:48]">&lt;janneke&gt;</a></span><span class="message">ah i should look into that</span></div><div class="line" id="224306"><span class="nick" style="color:#af8d2f"><a href="#224306" label="[22:43:06]">&lt;mihi&gt;</a></span><span class="message">FireFly: I wrote above about my last experience with guix hurd. At the moment (AFAIK), no native builds work due to last merge of core-bootstrap: <a rel="nofollow" href="https://data.guix.gnu.org/revision/e118b92cfe7a598b71dbbda2622b7551f4a72104/package-substitute-availability">https://data.guix.gnu.org/revision/e118b92cfe7a598b71dbbda2622b7551f4a72104/package-substitute-availability</a> </span></div><div class="line" id="224308"><span class="nick" style="color:#8dd3c7"><a href="#224308" label="[22:43:08]">&lt;janneke&gt;</a></span><span class="message">i had it on my list to follow up on <a rel="nofollow" href="https://lists.gnu.org/archive/html/bug-hurd/2022-02/msg00051.html">https://lists.gnu.org/archive/html/bug-hurd/2022-02/msg00051.html</a> </span></div><div class="line" id="224331"><span class="nick" style="color:#8dd3c7"><a href="#224331" label="[22:43:31]">&lt;janneke&gt;</a></span><span class="message">and ask for at least a synced git archive once or twice a year</span></div><div class="line" id="224348"><span class="nick" style="color:#389600"><a href="#224348" label="[22:43:48]">&lt;FireFly&gt;</a></span><span class="message">ah right, missed that bit</span></div><div class="line" id="224358"><span class="nick" style="color:#389600"><a href="#224358" label="[22:43:58]">&lt;FireFly&gt;</a></span><span class="message">(of the initial message)</span></div><div class="line" id="224501"><span class="nick" style="color:#af8d2f"><a href="#224501" label="[22:45:01]">&lt;mihi&gt;</a></span><span class="message">TBH I am also using Debian patched Hurd in <a rel="nofollow" href="https://github.com/schierlm/HurdRescue/">https://github.com/schierlm/HurdRescue/</a>  for their initrd patch.</span></div><div class="line" id="224535"><span class="nick" style="color:#af8d2f"><a href="#224535" label="[22:45:35]">&lt;mihi&gt;</a></span><span class="message">(and yes that is ~2y old, and I believe there were some changes in how translators are stored in the filesystem now. But last time I needed it, it worked well enough)</span></div><div class="line" id="224816"><span class="nick" style="color:#af8d2f"><a href="#224816" label="[22:48:16]">&lt;mihi&gt;</a></span><span class="message">I believe the most annoying bug in Hurd is cache invalidation when unmounting a loopback device. It used to be aptitude randomly deadlocking, but that deadlock was fixed somewhen last year by one of the security patches (which could not get merged upstream for some time due to missing FSF legal paperwork)</span></div><div class="line" id="224837"><span class="nick" style="color:#6b8072"><a href="#224837" label="[22:48:37]">&lt;sam_&gt;</a></span><span class="message">at some point I'll port gentoo to hurd again</span></div><div class="line" id="224920"><span class="nick" style="color:#af8d2f"><a href="#224920" label="[22:49:20]">&lt;mihi&gt;</a></span><span class="message">sam_, qyliss, when the resulting system boots, I will probably test it :D</span></div><div class="line" id="224931"><span class="nick" style="color:#6b8072"><a href="#224931" label="[22:49:31]">&lt;sam_&gt;</a></span><span class="message">&lt;3</span></div><div class="line" id="225422"><span class="nick" style="color:#80b1d3"><a href="#225422" label="[22:54:22]">&lt;drakonis&gt;</a></span><span class="message">i'm learning some assembly to bootstrap a forth, might be fun</span></div><div class="line" id="225956"><span class="nick" style="color:#6d2462"><a href="#225956" label="[22:59:56]">&lt;muurkha&gt;</a></span><span class="message">it is!</span></div><div class="line" id="230015"><span class="nick" style="color:#234e69"><a href="#230015" label="[23:00:15]">&lt;fitzsim&gt;</a></span><span class="message">has anyone considered bootstrapping from SectorLISP or SectorLambda? ( <a rel="nofollow" href="https://justine.lol/sectorlisp/">https://justine.lol/sectorlisp/</a>  or <a rel="nofollow" href="https://justine.lol/lambda/">https://justine.lol/lambda/</a>  )</span></div><div class="line" id="230038"><span class="nick" style="color:#80b1d3"><a href="#230038" label="[23:00:38]">&lt;drakonis&gt;</a></span><span class="message">ehhhh</span></div><div class="line" id="230122"><span class="nick" style="color:#80b1d3"><a href="#230122" label="[23:01:22]">&lt;drakonis&gt;</a></span><span class="message">these feel like a turing tarpit for this</span></div><div class="line" id="230136"><span class="nick" style="color:#234e69"><a href="#230136" label="[23:01:36]">&lt;fitzsim&gt;</a></span><span class="message">yeah, partially kidding</span></div><div class="line" id="230144"><span class="nick" style="color:#234e69"><a href="#230144" label="[23:01:44]">&lt;fitzsim&gt;</a></span><span class="message">neat projects though</span></div><div class="line" id="230206"><span class="nick" style="color:#234e69"><a href="#230206" label="[23:02:06]">&lt;fitzsim&gt;</a></span><span class="message">they'd need memory peek/poke extensions, at least</span></div><div class="line" id="230444"><span class="nick" style="color:#6c3d55"><a href="#230444" label="[23:04:44]">&lt;theruran&gt;</a></span><span class="message">fitzsim: I think oriansj has got some opinions about SectorLISP but also it is missing some important things for bootstrapping. I can't remember exactly</span></div><div class="line" id="230635"><span class="nick" style="color:#80b1d3"><a href="#230635" label="[23:06:35]">&lt;drakonis&gt;</a></span><span class="message">it requires too much energy to do anything basic</span></div><div class="line" id="230651"><span class="nick" style="color:#80b1d3"><a href="#230651" label="[23:06:51]">&lt;drakonis&gt;</a></span><span class="message">even if it has memory extensions</span></div><div class="line" id="231204"><span class="nick" style="color:#80b1d3"><a href="#231204" label="[23:12:04]">&lt;drakonis&gt;</a></span><span class="message">sectorforth, otoh seems usable due to not being a turing tarpit</span></div><div class="line" id="231511"><span class="nick" style="color:#6c3d55"><a href="#231511" label="[23:15:11]">&lt;theruran&gt;</a></span><span class="message">drakonis: have you looked at seedForth? I think the main contribution is pulling together the Forth words for a 'standard' Forth. would be nice to build from that</span></div><div class="line" id="231536"><span class="nick" style="color:#6c3d55"><a href="#231536" label="[23:15:36]">&lt;theruran&gt;</a></span><span class="message">it is currently bootstrapped from gforth though</span></div><div class="line" id="231626"><span class="nick" style="color:#80b1d3"><a href="#231626" label="[23:16:26]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://compilercrim.es/bootstrap/">https://compilercrim.es/bootstrap/</a> </span></div><div class="line" id="231652"><span class="nick" style="color:#80b1d3"><a href="#231652" label="[23:16:52]">&lt;drakonis&gt;</a></span><span class="message">i have just found out about seed and pre forth while looking at the wiki</span></div><div class="line" id="231738"><span class="nick" style="color:#80b1d3"><a href="#231738" label="[23:17:38]">&lt;drakonis&gt;</a></span><span class="message">so i havent looked in depth yet</span></div><div class="line" id="232000"><span class="nick" style="color:#6d2462"><a href="#232000" label="[23:20:00]">&lt;muurkha&gt;</a></span><span class="message">check out jonesforth</span></div><div class="line" id="232012"><span class="nick" style="color:#6d2462"><a href="#232012" label="[23:20:12]">&lt;muurkha&gt;</a></span><span class="message">it's the best read</span></div><div class="line" id="232041"><span class="nick" style="color:#6d2462"><a href="#232041" label="[23:20:41]">&lt;muurkha&gt;</a></span><span class="message">very few programs I've read from beginning to end</span></div><div class="line" id="232044"><span class="nick" style="color:#6d2462"><a href="#232044" label="[23:20:44]">&lt;muurkha&gt;</a></span><span class="message">it's one</span></div><div class="line" id="233047"><span class="nick" style="color:#80b1d3"><a href="#233047" label="[23:30:47]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://flatassembler.net/docs.php?article=fasmg">https://flatassembler.net/docs.php?article=fasmg</a> </span></div><div class="line" id="233132"><span class="nick" style="color:#80b1d3"><a href="#233132" label="[23:31:32]">&lt;drakonis&gt;</a></span><span class="message">i'm familiar with jonesforth but i'm not quite ready for it</span></div><div class="line" id="233144"><span class="nick" style="color:#80b1d3"><a href="#233144" label="[23:31:44]">&lt;drakonis&gt;</a></span><span class="message">working on improving my assembly knowledge first</span></div><div class="line" id="233440"><span class="nick" style="color:#80b1d3"><a href="#233440" label="[23:34:40]">&lt;drakonis&gt;</a></span><span class="message">other assembly forths i know of is yourforth from the author of ciforth, which jonesforth is based on, uses fasm, and nasmjf, a port of jonesforth to nasm</span></div><div class="line" id="233919"><span class="nick" style="color:#d9d9d9"><a href="#233919" label="[23:39:19]">&lt;oriansj&gt;</a></span><span class="message">janneke: risc-v is a word based architecture, so you are unlikely to have much luck trying to leverage the amd64 M1 behavior as the immediates are encoded in a very ugly manner.</span></div><div class="line" id="234111"><span class="nick" style="color:#d9d9d9"><a href="#234111" label="[23:41:11]">&lt;oriansj&gt;</a></span><span class="message">fitzsim: sectorlisp lacks the abilties one needs to write any data to disk, make bios calls or read any data from disk. So the only way to use sectorlisp for bootstrapping involves doing a buffer overflow attack and a few nasty things.</span></div><div class="line" id="234148"><span class="nick" style="color:#234e69"><a href="#234148" label="[23:41:48]">&lt;fitzsim&gt;</a></span><span class="message">yeah, makes sense</span></div><div class="line" id="234202"><span class="nick" style="color:#234e69"><a href="#234202" label="[23:42:02]">&lt;fitzsim&gt;</a></span><span class="message">I was thinking more like &quot;sectorlisp+bootstrapping primitives&quot;</span></div><div class="line" id="234211"><span class="nick" style="color:#d9d9d9"><a href="#234211" label="[23:42:11]">&lt;oriansj&gt;</a></span><span class="message">sectorFORTH however, is usable for bootstrapping if you can write 600bytes without error</span></div><div class="line" id="234231"><span class="nick" style="color:#234e69"><a href="#234231" label="[23:42:31]">&lt;fitzsim&gt;</a></span><span class="message">but I don't know what that'd look like or how big it would become</span></div><div class="line" id="234256"><span class="nick" style="color:#80b1d3"><a href="#234256" label="[23:42:56]">&lt;drakonis&gt;</a></span><span class="message">ugly is what it would look like</span></div><div class="line" id="234302"><span class="nick" style="color:#234e69"><a href="#234302" label="[23:43:02]">&lt;fitzsim&gt;</a></span><span class="message">something like uLisp</span></div><div class="line" id="234312"><span class="nick" style="color:#d9d9d9"><a href="#234312" label="[23:43:12]">&lt;oriansj&gt;</a></span><span class="message">oh, you could get the bootstrapping primitives in 3 bios calls or about 120bytes</span></div><div class="line" id="234336"><span class="nick" style="color:#8dd3c7"><a href="#234336" label="[23:43:36]">&lt;janneke&gt;</a></span><span class="message">oriansj: so what you're saying is that the current mescc implementation/usage of immediates for risc-v never worked at all?</span></div><div class="line" id="234446"><span class="nick" style="color:#80b1d3"><a href="#234446" label="[23:44:46]">&lt;drakonis&gt;</a></span><span class="message">stoneforthknife's author mentions the hidden complexity of metacircularity</span></div><div class="line" id="234457"><span class="nick" style="color:#80b1d3"><a href="#234457" label="[23:44:57]">&lt;drakonis&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/kragen/stoneknifeforth">https://github.com/kragen/stoneknifeforth</a> </span></div><div class="line" id="234528"><span class="nick" style="color:#6d2462"><a href="#234528" label="[23:45:28]">&lt;muurkha&gt;</a></span><span class="message">yeah, I did</span></div><div class="line" id="234537"><span class="nick" style="color:#80b1d3"><a href="#234537" label="[23:45:37]">&lt;drakonis&gt;</a></span><span class="message">oh?</span></div><div class="line" id="234543"><span class="nick" style="color:#d9d9d9"><a href="#234543" label="[23:45:43]">&lt;oriansj&gt;</a></span><span class="message">well the previous RISC-V behavior of M1 fudged the data to kinda get it to work but it easly hit bugs on any immediates greater than 5bits</span></div><div class="line" id="234546"><span class="nick" style="color:#6d2462"><a href="#234546" label="[23:45:46]">&lt;muurkha&gt;</a></span><span class="message">oriansj: I'd say that RISC-V is a byte-oriented architecture</span></div><div class="line" id="234627"><span class="nick" style="color:#8dd3c7"><a href="#234627" label="[23:46:27]">&lt;janneke&gt;</a></span><span class="message">oriansj: right, ouch</span></div><div class="line" id="234637"><span class="nick" style="color:#80b1d3"><a href="#234637" label="[23:46:37]">&lt;drakonis&gt;</a></span><span class="message">muurkha: haha neat, so you wrote it</span></div><div class="line" id="234654"><span class="nick" style="color:#6d2462"><a href="#234654" label="[23:46:54]">&lt;muurkha&gt;</a></span><span class="message">yup</span></div><div class="line" id="234714"><span class="nick" style="color:#80b1d3"><a href="#234714" label="[23:47:14]">&lt;drakonis&gt;</a></span><span class="message">small world</span></div><div class="line" id="234730"><span class="nick" style="color:#6d2462"><a href="#234730" label="[23:47:30]">&lt;muurkha&gt;</a></span><span class="message">but it's certainly true RISC-V immediate encoding is ugly</span></div><div class="line" id="234737"><span class="nick" style="color:#d9d9d9"><a href="#234737" label="[23:47:37]">&lt;oriansj&gt;</a></span><span class="message">muurkha: I'll give you half-word oriented for the 16bit packets</span></div><div class="line" id="234821"><span class="nick" style="color:#6d2462"><a href="#234821" label="[23:48:21]">&lt;muurkha&gt;</a></span><span class="message">oriansj: but if you increment an address and fetch from it, you get the data 8 bits later in memory, not 16, 32, or 64</span></div><div class="line" id="234857"><span class="nick" style="color:#6d2462"><a href="#234857" label="[23:48:57]">&lt;muurkha&gt;</a></span><span class="message">word-oriented architectures are things like MIX or the PDP-10 or PDP-8</span></div><div class="line" id="234944"><span class="nick" style="color:#6d2462"><a href="#234944" label="[23:49:44]">&lt;muurkha&gt;</a></span><span class="message">where memory is 12 or 32 or 36 bits wide, not a byte wide</span></div><div class="line" id="235000"><span class="nick" style="color:#d9d9d9"><a href="#235000" label="[23:50:00]">&lt;oriansj&gt;</a></span><span class="message">muurkha: oh, I see what you mean. I was referring to the decoding of the instruction as only being clear when you look at the whole word</span></div><div class="line" id="235029"><span class="nick" style="color:#6d2462"><a href="#235029" label="[23:50:29]">&lt;muurkha&gt;</a></span><span class="message">yes, the instruction encoding is based on 16-bit parcels</span></div><div class="line" id="235119"><span class="nick" style="color:#d9d9d9"><a href="#235119" label="[23:51:19]">&lt;oriansj&gt;</a></span><span class="message">and that was the nature I was referring to</span></div><div class="line" id="235134"><span class="nick" style="color:#6d2462"><a href="#235134" label="[23:51:34]">&lt;muurkha&gt;</a></span><span class="message">yeah</span></div><div class="line" id="235156"><span class="nick" style="color:#d9d9d9"><a href="#235156" label="[23:51:56]">&lt;oriansj&gt;</a></span><span class="message">the, you need to real the whole instruction as the immediate might be scattered across the whole word</span></div><div class="line" id="235306"><span class="nick" style="color:#d9d9d9"><a href="#235306" label="[23:53:06]">&lt;oriansj&gt;</a></span><span class="message">vs x86 and knight which the immediate is just a single block which  M1 previously could just dump with @5</span></div><div class="line" id="235344"><span class="nick" style="color:#d9d9d9"><a href="#235344" label="[23:53:44]">&lt;oriansj&gt;</a></span><span class="message">and why for a very long time I thought M1 might never support RISC-V</span></div><div class="line" id="235349"><span class="nick" style="color:#6d2462"><a href="#235349" label="[23:53:49]">&lt;muurkha&gt;</a></span><span class="message">yup</span></div><div class="line" id="235429"><span class="nick" style="color:#d9d9d9"><a href="#235429" label="[23:54:29]">&lt;oriansj&gt;</a></span><span class="message">but I must say, stikonas and others really helped to make the impossible possible.</span></div><div class="line" id="235506"><span class="nick" style="color:#8dd3c7"><a href="#235506" label="[23:55:06]">&lt;janneke&gt;</a></span><span class="message">great</span></div><div class="line" id="235510"><span class="nick" style="color:#6d2462"><a href="#235510" label="[23:55:10]">&lt;muurkha&gt;</a></span><span class="message">drakonis: btw the tiny lisp at the broken link in the SKF readme is at <a rel="nofollow" href="http://canonical.org/~kragen/sw/dev3/tinylisp.c">http://canonical.org/~kragen/sw/dev3/tinylisp.c</a> </span></div><div class="line" id="235551"><span class="nick" style="color:#80b1d3"><a href="#235551" label="[23:55:51]">&lt;drakonis&gt;</a></span><span class="message">neat</span></div><div class="line" id="235639"><span class="nick" style="color:#80b1d3"><a href="#235639" label="[23:56:39]">&lt;drakonis&gt;</a></span><span class="message">a question, how hard is it to make a bootstrap chain using a self hosting assembler written entirely in assembly?</span></div><div class="line" id="235649"><span class="nick" style="color:#8dd3c7"><a href="#235649" label="[23:56:49]">&lt;janneke&gt;</a></span><span class="message">&quot;&lt;oriansj&gt; but I must say, stikonas and others really helped to make the</span></div><div class="line" id="235649"><span class="nick" style="color:#8dd3c7"><a href="#235649" label="[23:56:49]">&lt;janneke&gt;</a></span><span class="message">          impossible possible.&quot;</span></div><div class="line" id="235652"><span class="nick" style="color:#8dd3c7"><a href="#235652" label="[23:56:52]">&lt;janneke&gt;</a></span><span class="message">;)</span></div><div class="line" id="235831"><span class="nick" style="color:#6d2462"><a href="#235831" label="[23:58:31]">&lt;muurkha&gt;</a></span><span class="message">drakonis: Don Knuth claims that for a reasonable machine you can do it in an afternoon</span></div><div class="line" id="235852"><span class="nick" style="color:#6d2462"><a href="#235852" label="[23:58:52]">&lt;muurkha&gt;</a></span><span class="message">but I think that might be because he's a better programmer than I am</span></div><br /></div></body></html>