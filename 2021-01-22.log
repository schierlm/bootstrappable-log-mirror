<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2021-01-22.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="000152"><span class="nick" style="color:#389600"><a href="#000152" label="[00:01:52]">&lt;OriansJ&gt;</a></span><span class="message">and deesix I'll update the man pages for M2-Planet to reflect the recent changes</span></div><div class="line" id="000208"><span class="nick" style="color:#8dd3c7"><a href="#000208" label="[00:02:08]">&lt;deesix&gt;</a></span><span class="message">OriansJ, nice, that confirms my testing on armv6l (with override) so it seems we're still quite compatible here.</span></div><div class="line" id="001240"><span class="nick" style="color:#2e2a4a"><a href="#001240" label="[00:12:40]">&lt;simba1&gt;</a></span><span class="message">reset</span></div><div class="line" id="003751"><span class="nick" style="color:#389600"><a href="#003751" label="[00:37:51]">&lt;OriansJ&gt;</a></span><span class="message">and with yt_'s previous testing of M2libc for AArch64 you made the painful M2libc migration complete deesix. Thank you for all of your help ^_^</span></div><div class="line" id="003947"><span class="nick" style="color:#8dd3c7"><a href="#003947" label="[00:39:47]">&lt;deesix&gt;</a></span><span class="message">hmm, complete?</span></div><div class="line" id="004023"><span class="nick" style="color:#389600"><a href="#004023" label="[00:40:23]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I was going to merge the knight and knight-posix migration later tonight</span></div><div class="line" id="004054"><span class="nick" style="color:#8dd3c7"><a href="#004054" label="[00:40:54]">&lt;deesix&gt;</a></span><span class="message">OriansJ, I mean, at least there's bootstrappable.h and test1000, right?</span></div><div class="line" id="004115"><span class="nick" style="color:#389600"><a href="#004115" label="[00:41:15]">&lt;OriansJ&gt;</a></span><span class="message">as I was doing finishing touches for the M2libc knight</span></div><div class="line" id="004202"><span class="nick" style="color:#389600"><a href="#004202" label="[00:42:02]">&lt;OriansJ&gt;</a></span><span class="message">it'll get done tonight</span></div><div class="line" id="004324"><span class="nick" style="color:#8dd3c7"><a href="#004324" label="[00:43:24]">&lt;deesix&gt;</a></span><span class="message">Oh, thank you!</span></div><div class="line" id="004649"><span class="nick" style="color:#8dd3c7"><a href="#004649" label="[00:46:49]">&lt;deesix&gt;</a></span><span class="message">OriansJ, about M2libs itself... I saw that fopen seems to open the file twice. Any reason for that or is just a leftover?</span></div><div class="line" id="004659"><span class="nick" style="color:#8dd3c7"><a href="#004659" label="[00:46:59]">&lt;deesix&gt;</a></span><span class="message">*M2libc</span></div><div class="line" id="004846"><span class="nick" style="color:#80b1d3"><a href="#004846" label="[00:48:46]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, it's a bit hard to split lines in kaem...</span></div><div class="line" id="004904"><span class="nick" style="color:#6d2462"><a href="#004904" label="[00:49:04]">&lt;yt_&gt;</a></span><span class="message">OriansJ: fantastic! and well done deesix; I only did the fun bit XD</span></div><div class="line" id="005711"><span class="nick" style="color:#389600"><a href="#005711" label="[00:57:11]">&lt;OriansJ&gt;</a></span><span class="message">deesix: you are right; I honestly forgot to delete 2 lines</span></div><div class="line" id="005815"><span class="nick" style="color:#389600"><a href="#005815" label="[00:58:15]">&lt;OriansJ&gt;</a></span><span class="message">I guess I'll fix that with my knight patch</span></div><div class="line" id="005832"><span class="nick" style="color:#8dd3c7"><a href="#005832" label="[00:58:32]">&lt;deesix&gt;</a></span><span class="message">Indeed, the examples of porting by yt_ helped a lot (to other side of the coin is that I had to skip here and there some parts already done). Thank you, yt_.</span></div><div class="line" id="010517"><span class="nick" style="color:#389600"><a href="#010517" label="[01:05:17]">&lt;OriansJ&gt;</a></span><span class="message">interestingly enough we can drop test/common_* when the M2libc migration is complete</span></div><div class="line" id="010701"><span class="nick" style="color:#8dd3c7"><a href="#010701" label="[01:07:01]">&lt;deesix&gt;</a></span><span class="message">OriansJ, that'd be great, but I expect some breakage in other projects using them. They will need to migrate to M2libc in that case.</span></div><div class="line" id="010747"><span class="nick" style="color:#6d2462"><a href="#010747" label="[01:07:47]">&lt;yt_&gt;</a></span><span class="message">OriansJ: don't the bootstrap scripts in mescc-tools-seed use the test/common_* files still?</span></div><div class="line" id="010834"><span class="nick" style="color:#8dd3c7"><a href="#010834" label="[01:08:34]">&lt;deesix&gt;</a></span><span class="message">Also live-bootstrap.</span></div><div class="line" id="011456"><span class="nick" style="color:#8dd3c7"><a href="#011456" label="[01:14:56]">&lt;deesix&gt;</a></span><span class="message">... kaem, blynn-compiler; well, everything using M2-Planet.</span></div><div class="line" id="011554"><span class="nick" style="color:#234e69"><a href="#011554" label="[01:15:54]">&lt;fossy&gt;</a></span><span class="message">I plan to move to m2libc once I am sure it is stable and have the time to migrate</span></div><div class="line" id="011652"><span class="nick" style="color:#8dd3c7"><a href="#011652" label="[01:16:52]">&lt;deesix&gt;</a></span><span class="message">fossy, nice README by the way, thanks.</span></div><div class="line" id="011935"><span class="nick" style="color:#389600"><a href="#011935" label="[01:19:35]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well yes that is unfortunately the last bit of work for this weekend.</span></div><div class="line" id="012038"><span class="nick" style="color:#389600"><a href="#012038" label="[01:20:38]">&lt;OriansJ&gt;</a></span><span class="message">yt_: that is correct but fortunately I'll be doing that as part of my testing of --bootstrap-mode to ensure it is as smooth as possible this weekend.</span></div><div class="line" id="012139"><span class="nick" style="color:#8dd3c7"><a href="#012139" label="[01:21:39]">&lt;deesix&gt;</a></span><span class="message">OriansJ, are the bootstrappable.h functions just a rename away or we need to move arguments in some cases?</span></div><div class="line" id="012141"><span class="nick" style="color:#389600"><a href="#012141" label="[01:21:41]">&lt;OriansJ&gt;</a></span><span class="message">fossy: I was going to handle that migration transparently for you with the update of mescc-tools-seed</span></div><div class="line" id="012231"><span class="nick" style="color:#389600"><a href="#012231" label="[01:22:31]">&lt;OriansJ&gt;</a></span><span class="message">deesix: it should be a drop in replacement as they should just be copy implementations being duplicated around.</span></div><div class="line" id="012250"><span class="nick" style="color:#80b1d3"><a href="#012250" label="[01:22:50]">&lt;stikonas&gt;</a></span><span class="message">fossy: I wonder if yacc misbehaves because of mes libc...</span></div><div class="line" id="012347"><span class="nick" style="color:#8dd3c7"><a href="#012347" label="[01:23:47]">&lt;deesix&gt;</a></span><span class="message">OriansJ, hmm, I don't think is just drop in. There're new names and I didn't see a compatibility layer (nor that I think that was the better plan).</span></div><div class="line" id="012538"><span class="nick" style="color:#234e69"><a href="#012538" label="[01:25:38]">&lt;fossy&gt;</a></span><span class="message">stikonas: in all likelihood</span></div><div class="line" id="012558"><span class="nick" style="color:#234e69"><a href="#012558" label="[01:25:58]">&lt;fossy&gt;</a></span><span class="message">OriansJ: I have some extra m2-planet tools custom written</span></div><div class="line" id="012602"><span class="nick" style="color:#8dd3c7"><a href="#012602" label="[01:26:02]">&lt;deesix&gt;</a></span><span class="message">OriansJ, for example (maybe the only one) strtoint() I think is some numerate_*.</span></div><div class="line" id="013115"><span class="nick" style="color:#80b1d3"><a href="#013115" label="[01:31:15]">&lt;stikonas&gt;</a></span><span class="message">fossy: hmm, actually it's probably not mes libc. I tried tcc with glibc on my system</span></div><div class="line" id="013128"><span class="nick" style="color:#80b1d3"><a href="#013128" label="[01:31:28]">&lt;stikonas&gt;</a></span><span class="message">and it failed with almost similar error</span></div><div class="line" id="013129"><span class="nick" style="color:#80b1d3"><a href="#013129" label="[01:31:29]">&lt;stikonas&gt;</a></span><span class="message">&quot;parser.y&quot;, line 67: fatal: redeclaration of precedence of  $</span></div><div class="line" id="013202"><span class="nick" style="color:#80b1d3"><a href="#013202" label="[01:32:02]">&lt;stikonas&gt;</a></span><span class="message">on live-bootstrap I was getting &quot;parser.y&quot;, line 67: fatal: redeclaration of precedence of</span></div><div class="line" id="013215"><span class="nick" style="color:#234e69"><a href="#013215" label="[01:32:15]">&lt;fossy&gt;</a></span><span class="message">gio do you have any idea</span></div><div class="line" id="013340"><span class="nick" style="color:#80b1d3"><a href="#013340" label="[01:33:40]">&lt;stikonas&gt;</a></span><span class="message">line 67 is %left '$' '^'</span></div><div class="line" id="013514"><span class="nick" style="color:#80b1d3"><a href="#013514" label="[01:35:14]">&lt;stikonas&gt;</a></span><span class="message">fossy: maybe in the meantime, I'll resubmit first two commits as a separate PR...</span></div><div class="line" id="013520"><span class="nick" style="color:#80b1d3"><a href="#013520" label="[01:35:20]">&lt;stikonas&gt;</a></span><span class="message">those I think are uncontroversial...</span></div><div class="line" id="013713"><span class="nick" style="color:#80b1d3"><a href="#013713" label="[01:37:13]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/20">https://github.com/fosslinux/live-bootstrap/pull/20</a> </span></div><div class="line" id="014106"><span class="nick" style="color:#8dd3c7"><a href="#014106" label="[01:41:06]">&lt;deesix&gt;</a></span><span class="message">OriansJ, +1 for using the new-style flags in the docs... --little-endian, --architecture, etc. I was planning to update the scripts during unification, and also remove --exec_enable.</span></div><div class="line" id="014930"><span class="nick" style="color:#389600"><a href="#014930" label="[01:49:30]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I guess I am going to have to pay for those design mistakes too.</span></div><div class="line" id="015038"><span class="nick" style="color:#389600"><a href="#015038" label="[01:50:38]">&lt;OriansJ&gt;</a></span><span class="message">fossy: nice, I'd send you patches if I knew about them ^_^</span></div><div class="line" id="015210"><span class="nick" style="color:#389600"><a href="#015210" label="[01:52:10]">&lt;OriansJ&gt;</a></span><span class="message">deesix: the next release of mescc-tools I am going to add a warn to stderr when the old flags are used that in 2 releases they will be removed and update it to warn of next release and then boom gone forever</span></div><div class="line" id="020449"><span class="nick" style="color:#8dd3c7"><a href="#020449" label="[02:04:49]">&lt;deesix&gt;</a></span><span class="message">OriansJ, perfect. By the way, the sha256 locale thing seems to be shell related instead, I'll point the logs to vagrant unless someone else do it before.</span></div><div class="line" id="020529"><span class="nick" style="color:#389600"><a href="#020529" label="[02:05:29]">&lt;OriansJ&gt;</a></span><span class="message">deesix: yes but fixable with a set environment variable</span></div><div class="line" id="020600"><span class="nick" style="color:#389600"><a href="#020600" label="[02:06:00]">&lt;OriansJ&gt;</a></span><span class="message">I wish there was a trivial solution to remove all localization behaviors form sha256sum</span></div><div class="line" id="020611"><span class="nick" style="color:#389600"><a href="#020611" label="[02:06:11]">&lt;OriansJ&gt;</a></span><span class="message">^form^from^</span></div><div class="line" id="020717"><span class="nick" style="color:#389600"><a href="#020717" label="[02:07:17]">&lt;OriansJ&gt;</a></span><span class="message">depending upon how annoying it is; we might just do a sha256sum program to add to mescc-tools so we can abandon ALL external tools in testing and development</span></div><div class="line" id="020735"><span class="nick">***</span><span class="message notice">vup2 is now known as vup</span></div><div class="line" id="020752"><span class="nick" style="color:#8dd3c7"><a href="#020752" label="[02:07:52]">&lt;deesix&gt;</a></span><span class="message">OriansJ, well... we're setting an envvar and it's not working. I would no workaround it setting another some other way. Any reason to not use the exit value? Is it standarized enough?</span></div><div class="line" id="020916"><span class="nick" style="color:#389600"><a href="#020916" label="[02:09:16]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well numeric comparisons are a bashism</span></div><div class="line" id="021012"><span class="nick" style="color:#8dd3c7"><a href="#021012" label="[02:10:12]">&lt;deesix&gt;</a></span><span class="message">OriansJ, when I talk about &quot;shell related&quot;, it seems to be splitting our 'LANG=C foo' lines (I guess you saw the channel log about it).</span></div><div class="line" id="021054"><span class="nick" style="color:#8dd3c7"><a href="#021054" label="[02:10:54]">&lt;deesix&gt;</a></span><span class="message">Noted about the bashism.</span></div><div class="line" id="021108"><span class="nick" style="color:#389600"><a href="#021108" label="[02:11:08]">&lt;OriansJ&gt;</a></span><span class="message">deesix: well if we do export LANG=C on a seperate line it it will apply to all following lines</span></div><div class="line" id="021142"><span class="nick" style="color:#389600"><a href="#021142" label="[02:11:42]">&lt;OriansJ&gt;</a></span><span class="message">and export variable=value is generally well supported (even in kaem)</span></div><div class="line" id="022725"><span class="nick" style="color:#8dd3c7"><a href="#022725" label="[02:27:25]">&lt;deesix&gt;</a></span><span class="message">OriansJ, well... given that we're calling the function in a subshell, I guess export LANG=C is an option. I was a bit worried about contaminating the caller.</span></div><div class="line" id="023105"><span class="nick" style="color:#8dd3c7"><a href="#023105" label="[02:31:05]">&lt;deesix&gt;</a></span><span class="message">Anyway, feels like a interesting &quot;upstream&quot; regression. If that's the case, I'd expect a fix from them soon.</span></div><div class="line" id="023616"><span class="nick" style="color:#389600"><a href="#023616" label="[02:36:16]">&lt;OriansJ&gt;</a></span><span class="message">in an ugly sort of fashion knight-native is going to behave more like on a posix but not really.</span></div><div class="line" id="023701"><span class="nick" style="color:#389600"><a href="#023701" label="[02:37:01]">&lt;OriansJ&gt;</a></span><span class="message">deesix: I don't think exports inside of scripts change the parent shell but I could be wrong and it would be trivial to test</span></div><div class="line" id="023706"><span class="nick" style="color:#6c3d55"><a href="#023706" label="[02:37:06]">&lt;xentrac&gt;</a></span><span class="message">yay knight-native!</span></div><div class="line" id="023955"><span class="nick" style="color:#389600"><a href="#023955" label="[02:39:55]">&lt;OriansJ&gt;</a></span><span class="message">deesix: yeah export doesn't survive outside of the shellscript itself, except to children processes</span></div><div class="line" id="024049"><span class="nick" style="color:#6c3d55"><a href="#024049" label="[02:40:49]">&lt;xentrac&gt;</a></span><span class="message">as deesix points out, it doesn't even survive to the rest of the shellscript if you export in a (subshell)</span></div><div class="line" id="024056"><span class="nick" style="color:#389600"><a href="#024056" label="[02:40:56]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: wait until you see the abomination before celebrating *shifty eyes*</span></div><div class="line" id="024107"><span class="nick" style="color:#d9d9d9"><a href="#024107" label="[02:41:07]">*</a></span><span class="message">xentrac celebrates the abomination</span></div><div class="line" id="024142"><span class="nick" style="color:#389600"><a href="#024142" label="[02:41:42]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: it should be inherited by the subshell if properly export'd and not just variable=value on the same line</span></div><div class="line" id="024401"><span class="nick" style="color:#6c3d55"><a href="#024401" label="[02:44:01]">&lt;xentrac&gt;</a></span><span class="message">yes, but if the subshell does the export itself, it won't affect the parent: (export FOO=37); echo $FOO</span></div><div class="line" id="024408"><span class="nick" style="color:#6c3d55"><a href="#024408" label="[02:44:08]">&lt;xentrac&gt;</a></span><span class="message">that prints a blank line, not 37</span></div><div class="line" id="024418"><span class="nick" style="color:#6c3d55"><a href="#024418" label="[02:44:18]">&lt;xentrac&gt;</a></span><span class="message">and that's the case deesix is describing</span></div><div class="line" id="024703"><span class="nick" style="color:#389600"><a href="#024703" label="[02:47:03]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: completely fair and correct</span></div><div class="line" id="024728"><span class="nick" style="color:#389600"><a href="#024728" label="[02:47:28]">&lt;OriansJ&gt;</a></span><span class="message">but fortunately not a case that should apply to any of the M2-Planet or mescc-tools tests</span></div><div class="line" id="024756"><span class="nick" style="color:#389600"><a href="#024756" label="[02:47:56]">&lt;OriansJ&gt;</a></span><span class="message">unless Debian's build process is fucked in ways I dare not imagine</span></div><div class="line" id="025120"><span class="nick" style="color:#389600"><a href="#025120" label="[02:51:20]">&lt;OriansJ&gt;</a></span><span class="message">as we are trying to do: export LANG=C and sha256sum proof on two seperate lines in the same shell script and trying to get the LOCALE specific failures to dis-the-fuck-appear.</span></div><div class="line" id="025717"><span class="nick" style="color:#6c3d55"><a href="#025717" label="[02:57:17]">&lt;xentrac&gt;</a></span><span class="message">yeah, LOCALE was a mistake</span></div><div class="line" id="025745"><span class="nick" style="color:#6c3d55"><a href="#025745" label="[02:57:45]">&lt;xentrac&gt;</a></span><span class="message">I mean.  not that it exists.  but that POSIX utilities' behavior depends on it by default</span></div><div class="line" id="025754"><span class="nick" style="color:#389600"><a href="#025754" label="[02:57:54]">&lt;OriansJ&gt;</a></span><span class="message">but maybe I just wished not to deal with unicode and localization problems while having to sort out the already difficult as is problem of bootstrapping GCC and the whole free world from a bootstrap seed that could fit in a twit</span></div><div class="line" id="025818"><span class="nick" style="color:#6c3d55"><a href="#025818" label="[02:58:18]">&lt;xentrac&gt;</a></span><span class="message">:)</span></div><div class="line" id="025924"><span class="nick" style="color:#389600"><a href="#025924" label="[02:59:24]">&lt;OriansJ&gt;</a></span><span class="message">and that isn't even going to the having to design hardware, deal with lithography layouts and all the other hoops required before we are going to be done.</span></div><div class="line" id="030204"><span class="nick" style="color:#389600"><a href="#030204" label="[03:02:04]">&lt;OriansJ&gt;</a></span><span class="message">it isn't like I'll have to do the same work that the RISC-V team did for GCC support and the rest before anyone takes the Knight hardware seriously. Oh wait &gt;.&lt; yes I will and probably without an army of grad students to do the work for me.</span></div><div class="line" id="030249"><span class="nick" style="color:#6c3d55"><a href="#030249" label="[03:02:49]">&lt;xentrac&gt;</a></span><span class="message">does Knight need to be taken seriously to succeed?</span></div><div class="line" id="030713"><span class="nick" style="color:#389600"><a href="#030713" label="[03:07:13]">&lt;OriansJ&gt;</a></span><span class="message">Which means we will have to do x86 or other well known architectures along the way. Otherwise people will just dismiss the stage0 work as having to depend on big as binary blobs of firmware and/or microcode.</span></div><div class="line" id="030825"><span class="nick" style="color:#389600"><a href="#030825" label="[03:08:25]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: only if I don't want to deal with doing a bunch of x86 real-mode bootstrap work and build a kernel using cc_x86</span></div><div class="line" id="030844"><span class="nick" style="color:#389600"><a href="#030844" label="[03:08:44]">&lt;OriansJ&gt;</a></span><span class="message">on an x86 we design and build</span></div><div class="line" id="030912"><span class="nick" style="color:#8dd3c7"><a href="#030912" label="[03:09:12]">&lt;deesix&gt;</a></span><span class="message">&quot;&quot;&quot;as we are trying to do: export LANG=C and sha256sum proof on two seperate lines&quot;&quot;&quot; My understanding was about doing the export in the function, but I see your plan now, OriansJ.</span></div><div class="line" id="030919"><span class="nick" style="color:#6c3d55"><a href="#030919" label="[03:09:19]">&lt;xentrac&gt;</a></span><span class="message">hmm, I'm not sure those are the only two options ;)</span></div><div class="line" id="031005"><span class="nick" style="color:#389600"><a href="#031005" label="[03:10:05]">&lt;OriansJ&gt;</a></span><span class="message">deesix: yes and the function is only dealing with getting text from sha256sum which we can check</span></div><div class="line" id="031141"><span class="nick" style="color:#389600"><a href="#031141" label="[03:11:41]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I'd love an option where I don't spend 20 years having to justify every byte and transistor required to bootstrap Guix on a modern commercially available processor.</span></div><div class="line" id="031755"><span class="nick" style="color:#389600"><a href="#031755" label="[03:17:55]">&lt;OriansJ&gt;</a></span><span class="message">oh and more fun; I finally figured out the solution to my libre-x200 crashing when building rust-1.33.0 and it wasn't enable 128GB of swap (/sys/devices/system/cpu/cpu*/cpufreq/scaling_governor set to powersave; it was overheating and the CPU simply turned off. I guess that is what I get for opted for the highest performance CPU they offered.</span></div><div class="line" id="031840"><span class="nick" style="color:#389600"><a href="#031840" label="[03:18:40]">&lt;OriansJ&gt;</a></span><span class="message">and M2libc with knight support is now officially up</span></div><div class="line" id="031917"><span class="nick" style="color:#389600"><a href="#031917" label="[03:19:17]">&lt;OriansJ&gt;</a></span><span class="message">know to checkout that the stdio.c tweak didn't break anything</span></div><div class="line" id="032020"><span class="nick" style="color:#6c3d55"><a href="#032020" label="[03:20:20]">&lt;xentrac&gt;</a></span><span class="message">doh!  glad you figured that out</span></div><div class="line" id="032025"><span class="nick" style="color:#234e69"><a href="#032025" label="[03:20:25]">&lt;fossy&gt;</a></span><span class="message">powersave sucks</span></div><div class="line" id="032119"><span class="nick" style="color:#389600"><a href="#032119" label="[03:21:19]">&lt;OriansJ&gt;</a></span><span class="message">fossy: better than not being able to build ffmpeg and mpv at all in Guix</span></div><div class="line" id="032259"><span class="nick" style="color:#6c3d55"><a href="#032259" label="[03:22:59]">&lt;xentrac&gt;</a></span><span class="message">I'm thinking there are probably options other than modern commercially available processors that would be easier to bootstrap on.  two examples are <a rel="nofollow" href="https://www.cl.cam.ac.uk/teaching/1112/ECAD+Arch/files/Thacker-A_Tiny_Computer-3.pdf">https://www.cl.cam.ac.uk/teaching/1112/ECAD+Arch/files/Thacker-A_Tiny_Computer-3.pdf</a>  and <a rel="nofollow" href="https://people.inf.ethz.ch/wirth/ProjectOberon/PO.Computer.pdf">https://people.inf.ethz.ch/wirth/ProjectOberon/PO.Computer.pdf</a>  though neither of them has an MMU</span></div><div class="line" id="032326"><span class="nick" style="color:#389600"><a href="#032326" label="[03:23:26]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: don't need an MMU for single tasking</span></div><div class="line" id="032436"><span class="nick" style="color:#389600"><a href="#032436" label="[03:24:36]">&lt;OriansJ&gt;</a></span><span class="message">just allocate all memory for the process and wait for it to finish</span></div><div class="line" id="032439"><span class="nick" style="color:#6c3d55"><a href="#032439" label="[03:24:39]">&lt;xentrac&gt;</a></span><span class="message">either of those CPU designs would be a lot easier than Knight to target a compiler to, and to persuade people of the absence of backdoors in</span></div><div class="line" id="032503"><span class="nick" style="color:#234e69"><a href="#032503" label="[03:25:03]">&lt;fossy&gt;</a></span><span class="message">OriansJ: how does that relate to powrtsave lol</span></div><div class="line" id="032518"><span class="nick" style="color:#6c3d55"><a href="#032518" label="[03:25:18]">&lt;xentrac&gt;</a></span><span class="message">fossy: overheating</span></div><div class="line" id="032525"><span class="nick" style="color:#234e69"><a href="#032525" label="[03:25:25]">&lt;fossy&gt;</a></span><span class="message">oh</span></div><div class="line" id="032525"><span class="nick" style="color:#6c3d55"><a href="#032525" label="[03:25:25]">&lt;xentrac&gt;</a></span><span class="message">the second of the two is academically respectable</span></div><div class="line" id="032526"><span class="nick" style="color:#389600"><a href="#032526" label="[03:25:26]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: yeah but how are they in regards to hand written assembly.</span></div><div class="line" id="032545"><span class="nick" style="color:#6c3d55"><a href="#032545" label="[03:25:45]">&lt;xentrac&gt;</a></span><span class="message">pretty pleasant, though more verbose than a CISC</span></div><div class="line" id="032637"><span class="nick" style="color:#6c3d55"><a href="#032637" label="[03:26:37]">&lt;xentrac&gt;</a></span><span class="message">I mean they aren't the puzzle-solving exercise that is programming for <a rel="nofollow" href="https://github.com/kragen/calculusvaporis">https://github.com/kragen/calculusvaporis</a>  where I literally was trying to justify every transistor</span></div><div class="line" id="032711"><span class="nick" style="color:#389600"><a href="#032711" label="[03:27:11]">&lt;OriansJ&gt;</a></span><span class="message">fossy: my libreboot'd x200 went up to 72.0°C while building rust-1.33.0 before shutting down hard.</span></div><div class="line" id="032808"><span class="nick" style="color:#234e69"><a href="#032808" label="[03:28:08]">&lt;fossy&gt;</a></span><span class="message">oof</span></div><div class="line" id="032815"><span class="nick" style="color:#389600"><a href="#032815" label="[03:28:15]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: I guess I'll have to add wirth's CPU to the backlog of stage0 ports that I'll have to do.</span></div><div class="line" id="032826"><span class="nick" style="color:#234e69"><a href="#032826" label="[03:28:26]">&lt;fossy&gt;</a></span><span class="message">oriansj it shut off at 72?</span></div><div class="line" id="032830"><span class="nick" style="color:#234e69"><a href="#032830" label="[03:28:30]">&lt;fossy&gt;</a></span><span class="message">thats pretty low</span></div><div class="line" id="032858"><span class="nick" style="color:#389600"><a href="#032858" label="[03:28:58]">&lt;OriansJ&gt;</a></span><span class="message">fossy: well 72 was the last temp it recorded before crashing</span></div><div class="line" id="032905"><span class="nick" style="color:#234e69"><a href="#032905" label="[03:29:05]">&lt;fossy&gt;</a></span><span class="message">Right</span></div><div class="line" id="032939"><span class="nick" style="color:#389600"><a href="#032939" label="[03:29:39]">&lt;OriansJ&gt;</a></span><span class="message">So thermal runaway could have taken it much higher in a short period of time</span></div><div class="line" id="033014"><span class="nick" style="color:#389600"><a href="#033014" label="[03:30:14]">&lt;OriansJ&gt;</a></span><span class="message">but it doesn't really matter since it was polling at a 5 second period</span></div><div class="line" id="033049"><span class="nick" style="color:#389600"><a href="#033049" label="[03:30:49]">&lt;OriansJ&gt;</a></span><span class="message">so within 5 seconds of hitting 72°C it was shutdown completely</span></div><div class="line" id="033119"><span class="nick" style="color:#bc80bd"><a href="#033119" label="[03:31:19]">&lt;siraben&gt;</a></span><span class="message">oof</span></div><div class="line" id="033149"><span class="nick" style="color:#389600"><a href="#033149" label="[03:31:49]">&lt;OriansJ&gt;</a></span><span class="message">perhaps pausing the build process in Guix could have worked around that defect long enough for the CPU to cool down but powersave was available and it seems to work.</span></div><div class="line" id="033359"><span class="nick" style="color:#389600"><a href="#033359" label="[03:33:59]">&lt;OriansJ&gt;</a></span><span class="message">I guess the libreboot developers never thought anyone was going to do a crazy amount of builds with the highest end processor available for the x200 for days and days</span></div><div class="line" id="033537"><span class="nick" style="color:#6c3d55"><a href="#033537" label="[03:35:37]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: haha</span></div><div class="line" id="033602"><span class="nick" style="color:#6c3d55"><a href="#033602" label="[03:36:02]">&lt;xentrac&gt;</a></span><span class="message">it's an option, it's not something you have to do</span></div><div class="line" id="033640"><span class="nick" style="color:#389600"><a href="#033640" label="[03:36:40]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: building from source is something I *HAVE TO DO*</span></div><div class="line" id="033744"><span class="nick" style="color:#389600"><a href="#033744" label="[03:37:44]">&lt;OriansJ&gt;</a></span><span class="message">I'd be building the guix bootstrap binaries too if they were finally probably bootstrapped.</span></div><div class="line" id="033802"><span class="nick" style="color:#389600"><a href="#033802" label="[03:38:02]">&lt;OriansJ&gt;</a></span><span class="message">^probably^properly^</span></div><div class="line" id="034119"><span class="nick" style="color:#389600"><a href="#034119" label="[03:41:19]">&lt;OriansJ&gt;</a></span><span class="message">what person do you think spends time finding broken builds in Guix to report and in some cases provide work arounds when fixes are not likely because they don't want to rebuild the world to fix it.</span></div><div class="line" id="034235"><span class="nick" style="color:#6c3d55"><a href="#034235" label="[03:42:35]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: oh, yeah, building from source is</span></div><div class="line" id="034315"><span class="nick" style="color:#6c3d55"><a href="#034315" label="[03:43:15]">&lt;xentrac&gt;</a></span><span class="message">but you don't have to do it on every possible platform, including academic teaching processors that have never been taped out</span></div><div class="line" id="034321"><span class="nick" style="color:#6c3d55"><a href="#034321" label="[03:43:21]">&lt;xentrac&gt;</a></span><span class="message">you can pick and choose that</span></div><div class="line" id="034748"><span class="nick" style="color:#389600"><a href="#034748" label="[03:47:48]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: or hope someone does the work for me</span></div><div class="line" id="034901"><span class="nick" style="color:#6c3d55"><a href="#034901" label="[03:49:01]">&lt;xentrac&gt;</a></span><span class="message">aye</span></div><div class="line" id="034922"><span class="nick" style="color:#389600"><a href="#034922" label="[03:49:22]">&lt;OriansJ&gt;</a></span><span class="message">I'll still have to audit it but atleast that work is much easier</span></div><div class="line" id="035059"><span class="nick" style="color:#6c3d55"><a href="#035059" label="[03:50:59]">&lt;xentrac&gt;</a></span><span class="message">yeah.  did you check out Thacker's Verilog?</span></div><div class="line" id="040427"><span class="nick" style="color:#6c3d55"><a href="#040427" label="[04:04:27]">&lt;xentrac&gt;</a></span><span class="message">&quot;much easier&quot; may not be a sufficiently strong term</span></div><div class="line" id="041208"><span class="nick" style="color:#389600"><a href="#041208" label="[04:12:08]">&lt;OriansJ&gt;</a></span><span class="message">xentrac: haven't had a chance to check yet.</span></div><div class="line" id="041252"><span class="nick" style="color:#389600"><a href="#041252" label="[04:12:52]">&lt;OriansJ&gt;</a></span><span class="message">problem is I know people are going to say verilog doesn't count because xxxMB of binaries needed to build the bitstream, etc</span></div><div class="line" id="044911"><span class="nick" style="color:#6c3d55"><a href="#044911" label="[04:49:11]">&lt;xentrac&gt;</a></span><span class="message">OriansJ: sure, there could be backdoors in ISE Design Suite but there obviously aren't in Thacker's processor design!</span></div><div class="line" id="064222"><span class="nick" style="color:#389600"><a href="#064222" label="[06:42:22]">&lt;OriansJ&gt;</a></span><span class="message">looks like knight-native tests will have to wait until tomorrow but knight-posix is done</span></div><div class="line" id="064858"><span class="nick" style="color:#6c3d55"><a href="#064858" label="[06:48:58]">&lt;xentrac&gt;</a></span><span class="message">hooray! that's awesome!</span></div><div class="line" id="134854"><span class="nick" style="color:#389600"><a href="#134854" label="[13:48:54]">&lt;OriansJ&gt;</a></span><span class="message">looks like savannah rejected bootstrap-seeds as part of Gnu Guix and they want me to do the gnueval@ route. Fun</span></div><div class="line" id="135529"><span class="nick" style="color:#3c5b35"><a href="#135529" label="[13:55:29]">&lt;civodul&gt;</a></span><span class="message">OriansJ: gnueval@ is to make a project part of GNU</span></div><div class="line" id="135534"><span class="nick" style="color:#3c5b35"><a href="#135534" label="[13:55:34]">&lt;civodul&gt;</a></span><span class="message">is that what you're trying to do?</span></div><div class="line" id="135827"><span class="nick" style="color:#389600"><a href="#135827" label="[13:58:27]">&lt;OriansJ&gt;</a></span><span class="message">civodul: they will not take the binaries otherwise</span></div><div class="line" id="135942"><span class="nick" style="color:#389600"><a href="#135942" label="[13:59:42]">&lt;OriansJ&gt;</a></span><span class="message">So I guess it is what is required to move from having the root of Gnu Guix's trust off Microsoft servers.</span></div><div class="line" id="135958"><span class="nick" style="color:#389600"><a href="#135958" label="[13:59:58]">&lt;OriansJ&gt;</a></span><span class="message">and onto savannah</span></div><div class="line" id="140117"><span class="nick" style="color:#389600"><a href="#140117" label="[14:01:17]">&lt;OriansJ&gt;</a></span><span class="message">So unless someone has another way to solve that problem, I guess I'll be going that route later today</span></div><div class="line" id="141002"><span class="nick" style="color:#80b1d3"><a href="#141002" label="[14:10:02]">&lt;stikonas&gt;</a></span><span class="message">From questionaire: &quot;Dependencies: nothing&quot;</span></div><div class="line" id="141111"><span class="nick" style="color:#3c5b35"><a href="#141111" label="[14:11:11]">&lt;civodul&gt;</a></span><span class="message">sorry, i don't understand</span></div><div class="line" id="141129"><span class="nick" style="color:#3c5b35"><a href="#141129" label="[14:11:29]">&lt;civodul&gt;</a></span><span class="message">what are you trying to do on Savannah and/or GNU?</span></div><div class="line" id="141233"><span class="nick" style="color:#80b1d3"><a href="#141233" label="[14:12:33]">&lt;stikonas&gt;</a></span><span class="message">civodul: OriansJ wants to move bootstrap seeds away from github to sanannah</span></div><div class="line" id="141243"><span class="nick" style="color:#80b1d3"><a href="#141243" label="[14:12:43]">&lt;stikonas&gt;</a></span><span class="message">but savannah does not host non-GNU binaries</span></div><div class="line" id="141914"><span class="nick" style="color:#af8d2f"><a href="#141914" label="[14:19:14]">&lt;janneke&gt;</a></span><span class="message">annoying, otoh it could give bootstrapping more visibility; could be worth it in the end</span></div><div class="line" id="141934"><span class="nick" style="color:#80b1d3"><a href="#141934" label="[14:19:34]">&lt;stikonas&gt;</a></span><span class="message">in principle you can &quot;make&quot; bootstrap binaries with sed and xxd...</span></div><div class="line" id="141949"><span class="nick" style="color:#80b1d3"><a href="#141949" label="[14:19:49]">&lt;stikonas&gt;</a></span><span class="message">if they don't want to host actual binaries...</span></div><div class="line" id="142802"><span class="nick" style="color:#3c5b35"><a href="#142802" label="[14:28:02]">&lt;civodul&gt;</a></span><span class="message">oh i see</span></div><div class="line" id="142904"><span class="nick" style="color:#3c5b35"><a href="#142904" label="[14:29:04]">&lt;civodul&gt;</a></span><span class="message">just to be clear, when you write &quot;bootstrap seeds&quot;, which seeds are we talking about?</span></div><div class="line" id="142917"><span class="nick" style="color:#80b1d3"><a href="#142917" label="[14:29:17]">&lt;stikonas&gt;</a></span><span class="message">hex0 and kaem</span></div><div class="line" id="142930"><span class="nick" style="color:#3c5b35"><a href="#142930" label="[14:29:30]">&lt;civodul&gt;</a></span><span class="message">ah ok, so it's different from what Guix uses</span></div><div class="line" id="142936"><span class="nick" style="color:#80b1d3"><a href="#142936" label="[14:29:36]">&lt;stikonas&gt;</a></span><span class="message"> <a rel="nofollow" href="https://github.com/oriansj/bootstrap-seeds/tree/master/POSIX/x86">https://github.com/oriansj/bootstrap-seeds/tree/master/POSIX/x86</a> </span></div><div class="line" id="142939"><span class="nick" style="color:#80b1d3"><a href="#142939" label="[14:29:39]">&lt;stikonas&gt;</a></span><span class="message">yeah, much smaller</span></div><div class="line" id="143001"><span class="nick" style="color:#80b1d3"><a href="#143001" label="[14:30:01]">&lt;stikonas&gt;</a></span><span class="message">well (this 2 binaries are for x86, repo contains seeds for some other arches too)</span></div><div class="line" id="143007"><span class="nick" style="color:#80b1d3"><a href="#143007" label="[14:30:07]">&lt;stikonas&gt;</a></span><span class="message">s/this/these/</span></div><div class="line" id="143027"><span class="nick" style="color:#af8d2f"><a href="#143027" label="[14:30:27]">&lt;janneke&gt;</a></span><span class="message">civodul: well, i'm using them here: <a rel="nofollow" href="https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap#n261">https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/commencement.scm?h=wip-full-source-bootstrap#n261</a> </span></div><div class="line" id="143040"><span class="nick" style="color:#3c5b35"><a href="#143040" label="[14:30:40]">&lt;civodul&gt;</a></span><span class="message">janneke: oh, ok!</span></div><div class="line" id="143043"><span class="nick" style="color:#3c5b35"><a href="#143043" label="[14:30:43]">&lt;civodul&gt;</a></span><span class="message">hard to follow :-)</span></div><div class="line" id="143108"><span class="nick" style="color:#3c5b35"><a href="#143108" label="[14:31:08]">&lt;civodul&gt;</a></span><span class="message">then, why don't we have them on ftp.gnu.org like the other seeds?</span></div><div class="line" id="143116"><span class="nick" style="color:#3c5b35"><a href="#143116" label="[14:31:16]">&lt;civodul&gt;</a></span><span class="message">(in the context of Guix)</span></div><div class="line" id="143142"><span class="nick" style="color:#80b1d3"><a href="#143142" label="[14:31:42]">&lt;stikonas&gt;</a></span><span class="message">it's used a bit wider than just Guix...</span></div><div class="line" id="143203"><span class="nick" style="color:#80b1d3"><a href="#143203" label="[14:32:03]">&lt;stikonas&gt;</a></span><span class="message">and might be updated more frequently</span></div><div class="line" id="143209"><span class="nick" style="color:#3c5b35"><a href="#143209" label="[14:32:09]">&lt;civodul&gt;</a></span><span class="message">yup, definitely, but that's what i can help with :-)</span></div><div class="line" id="143212"><span class="nick" style="color:#80b1d3"><a href="#143212" label="[14:32:12]">&lt;stikonas&gt;</a></span><span class="message">they should be in source control</span></div><div class="line" id="143231"><span class="nick" style="color:#3c5b35"><a href="#143231" label="[14:32:31]">&lt;civodul&gt;</a></span><span class="message">is it &quot;source&quot; or not?</span></div><div class="line" id="143245"><span class="nick" style="color:#3c5b35"><a href="#143245" label="[14:32:45]">&lt;civodul&gt;</a></span><span class="message">if it's binary-looking source, it's source IMO</span></div><div class="line" id="143301"><span class="nick" style="color:#80b1d3"><a href="#143301" label="[14:33:01]">&lt;stikonas&gt;</a></span><span class="message">civodul: it's both source and binary at the same time</span></div><div class="line" id="143304"><span class="nick" style="color:#3c5b35"><a href="#143304" label="[14:33:04]">&lt;civodul&gt;</a></span><span class="message">right</span></div><div class="line" id="143306"><span class="nick" style="color:#80b1d3"><a href="#143306" label="[14:33:06]">&lt;stikonas&gt;</a></span><span class="message">one file is &quot;source&quot; with comments</span></div><div class="line" id="143314"><span class="nick" style="color:#3c5b35"><a href="#143314" label="[14:33:14]">&lt;civodul&gt;</a></span><span class="message">perhaps that's what the Savannah folks need to understand</span></div><div class="line" id="143318"><span class="nick" style="color:#80b1d3"><a href="#143318" label="[14:33:18]">&lt;stikonas&gt;</a></span><span class="message">so source looking</span></div><div class="line" id="143319"><span class="nick" style="color:#3c5b35"><a href="#143319" label="[14:33:19]">&lt;civodul&gt;</a></span><span class="message">it's obviously very unusual</span></div><div class="line" id="143326"><span class="nick" style="color:#80b1d3"><a href="#143326" label="[14:33:26]">&lt;stikonas&gt;</a></span><span class="message">and the other file is without comments, so basically binary</span></div><div class="line" id="143338"><span class="nick" style="color:#3c5b35"><a href="#143338" label="[14:33:38]">&lt;civodul&gt;</a></span><span class="message">ok</span></div><div class="line" id="143339"><span class="nick" style="color:#af8d2f"><a href="#143339" label="[14:33:39]">&lt;janneke&gt;</a></span><span class="message">civodul: i should maybe have said: &quot;i am proposing to use them ...&quot;, this is only on wip-full-source-bootstrap</span></div><div class="line" id="143343"><span class="nick" style="color:#80b1d3"><a href="#143343" label="[14:33:43]">&lt;stikonas&gt;</a></span><span class="message">source to binary is basically: sed 's/[;#].*$//g' $input_file | xxd -r -p &gt; $output_file</span></div><div class="line" id="143358"><span class="nick" style="color:#3c5b35"><a href="#143358" label="[14:33:58]">&lt;civodul&gt;</a></span><span class="message">janneke: :-)</span></div><div class="line" id="143419"><span class="nick" style="color:#3c5b35"><a href="#143419" label="[14:34:19]">&lt;civodul&gt;</a></span><span class="message">stikonas: in that case, you could perhaps have a Makefile that does that so that the binary itself doesn't need to be in the Git repo?</span></div><div class="line" id="143453"><span class="nick" style="color:#80b1d3"><a href="#143453" label="[14:34:53]">&lt;stikonas&gt;</a></span><span class="message">well, that's what I was saying 15 minutes ago...</span></div><div class="line" id="143458"><span class="nick" style="color:#80b1d3"><a href="#143458" label="[14:34:58]">&lt;stikonas&gt;</a></span><span class="message">&quot;in principle you can &quot;make&quot; bootstrap binaries with sed and xxd...&quot;</span></div><div class="line" id="143502"><span class="nick" style="color:#af8d2f"><a href="#143502" label="[14:35:02]">&lt;janneke&gt;</a></span><span class="message">civodul: it would certainly need discussing; we could of course build hex0 and kaem in guix, and create our own %bootstrap-seeds, like we do for other bootstrap binaries</span></div><div class="line" id="143516"><span class="nick" style="color:#3c5b35"><a href="#143516" label="[14:35:16]">&lt;civodul&gt;</a></span><span class="message">stikonas: oh sorry, i hadn't understood that</span></div><div class="line" id="143524"><span class="nick" style="color:#af8d2f"><a href="#143524" label="[14:35:24]">&lt;janneke&gt;</a></span><span class="message">otoh, using a the same blesed seed that everyone uses, makes some sense too</span></div><div class="line" id="143535"><span class="nick" style="color:#3c5b35"><a href="#143535" label="[14:35:35]">&lt;civodul&gt;</a></span><span class="message">yeah</span></div><div class="line" id="143540"><span class="nick" style="color:#80b1d3"><a href="#143540" label="[14:35:40]">&lt;stikonas&gt;</a></span><span class="message">yeah, I think I wasn't clear enough there too... Especially if you are not always following this channel</span></div><div class="line" id="143610"><span class="nick" style="color:#3c5b35"><a href="#143610" label="[14:36:10]">&lt;civodul&gt;</a></span><span class="message">i'm not always following any channel :-)</span></div><div class="line" id="143828"><span class="nick" style="color:#af8d2f"><a href="#143828" label="[14:38:28]">&lt;janneke&gt;</a></span><span class="message">&quot;&lt;civodul&gt; then, why don't we have them on ftp.gnu.org like the other seeds?&quot;, because it's wip; if we choose to use this bootstrap as is, we'll copy bootstrap-seeds-1.0.0.tar.gz from lilypond.org to ftp.gnu.org</span></div><div class="line" id="144555"><span class="nick" style="color:#3c5b35"><a href="#144555" label="[14:45:55]">&lt;civodul&gt;</a></span><span class="message">janneke: yeah we can do that once the branch has been reviewed i guess</span></div><div class="line" id="144811"><span class="nick" style="color:#af8d2f"><a href="#144811" label="[14:48:11]">&lt;janneke&gt;</a></span><span class="message">civodul: sure</span></div><div class="line" id="155933"><span class="nick" style="color:#389600"><a href="#155933" label="[15:59:33]">&lt;pder&gt;</a></span><span class="message">janneke: I found and fixed an issue in mes-libc that was causing ls from coreutils to crash while working on live-bootstrap.  The fix is in stdlib/qsort.c.  Whats the best way to submit a patch?</span></div><div class="line" id="160834"><span class="nick" style="color:#af8d2f"><a href="#160834" label="[16:08:34]">&lt;janneke&gt;</a></span><span class="message">pder: great; please send a mail to bug-mes@gnu.org</span></div><div class="line" id="162458"><span class="nick" style="color:#af8d2f"><a href="#162458" label="[16:24:58]">&lt;janneke&gt;</a></span><span class="message">(see <a rel="nofollow" href="https://www.gnu.org/software/mes/manual/html_node/Submitting-Patches.html">https://www.gnu.org/software/mes/manual/html_node/Submitting-Patches.html</a>) </span></div><div class="line" id="165725"><span class="nick" style="color:#389600"><a href="#165725" label="[16:57:25]">&lt;pder&gt;</a></span><span class="message">Thanks, just sent.</span></div><div class="line" id="170759"><span class="nick" style="color:#af8d2f"><a href="#170759" label="[17:07:59]">&lt;janneke&gt;</a></span><span class="message">pder: thank you!</span></div><div class="line" id="171210"><span class="nick" style="color:#80b1d3"><a href="#171210" label="[17:12:10]">&lt;stikonas&gt;</a></span><span class="message">pder: thanks! I guess once new mes can be pulled in you'll submit a patch for coreutils makefile?</span></div><div class="line" id="172450"><span class="nick" style="color:#389600"><a href="#172450" label="[17:24:50]">&lt;pder&gt;</a></span><span class="message">stikonas: yeah I will have the rest of the pieces together shortly which include updating the coreutils makefile and a small patch to ls.c</span></div><div class="line" id="172522"><span class="nick" style="color:#80b1d3"><a href="#172522" label="[17:25:22]">&lt;stikonas&gt;</a></span><span class="message">and yesterday I tried bash after your patch, but still couldn't get interactive mode...</span></div><div class="line" id="172548"><span class="nick" style="color:#80b1d3"><a href="#172548" label="[17:25:48]">&lt;stikonas&gt;</a></span><span class="message">bash just prints: &quot;# exit&quot;  and exists</span></div><div class="line" id="172655"><span class="nick" style="color:#389600"><a href="#172655" label="[17:26:55]">&lt;pder&gt;</a></span><span class="message">In the mean time I was thinking of patching mes-libc in tcc-0.9.27.kaem right before libc is rebuilt.  We can remove that patch later on.</span></div><div class="line" id="172749"><span class="nick" style="color:#389600"><a href="#172749" label="[17:27:49]">&lt;pder&gt;</a></span><span class="message">I dont think interactive mode for bash will work until readline is compiled.  I didnt try to compile it because I noticed that guix disabled readline support in their build as well</span></div><div class="line" id="172750"><span class="nick" style="color:#af8d2f"><a href="#172750" label="[17:27:50]">&lt;janneke&gt;</a></span><span class="message">stikonas: the early bash we use in guix also does not support interactive mode</span></div><div class="line" id="172819"><span class="nick" style="color:#80b1d3"><a href="#172819" label="[17:28:19]">&lt;stikonas&gt;</a></span><span class="message">oh I see...</span></div><div class="line" id="172835"><span class="nick" style="color:#80b1d3"><a href="#172835" label="[17:28:35]">&lt;stikonas&gt;</a></span><span class="message">that makes sense</span></div><div class="line" id="172837"><span class="nick" style="color:#389600"><a href="#172837" label="[17:28:37]">&lt;pder&gt;</a></span><span class="message">But you should be able to run scripts which will be more powerful than kaem</span></div><div class="line" id="172858"><span class="nick" style="color:#80b1d3"><a href="#172858" label="[17:28:58]">&lt;stikonas&gt;</a></span><span class="message">yeah, that will be much better</span></div><div class="line" id="172924"><span class="nick" style="color:#80b1d3"><a href="#172924" label="[17:29:24]">&lt;stikonas&gt;</a></span><span class="message">anyway, once we have autotools, we can rebuild stuff a bit more properly...</span></div><div class="line" id="172937"><span class="nick" style="color:#80b1d3"><a href="#172937" label="[17:29:37]">&lt;stikonas&gt;</a></span><span class="message">I guess at that point we'll be basically done :D</span></div><div class="line" id="182052"><span class="nick" style="color:#80b1d3"><a href="#182052" label="[18:20:52]">&lt;stikonas&gt;</a></span><span class="message">gio: ping, any ideas regarding heirloom lex?</span></div><div class="line" id="182149"><span class="nick" style="color:#80b1d3"><a href="#182149" label="[18:21:49]">&lt;stikonas&gt;</a></span><span class="message">somehow yacc fails to compile lex'es parser.y</span></div><div class="line" id="192711"><span class="nick" style="color:#8dd3c7"><a href="#192711" label="[19:27:11]">&lt;gio&gt;</a></span><span class="message">stikonas: Will check when I have time. Don't remember exactly if there were difficulties with that.</span></div><div class="line" id="192902"><span class="nick" style="color:#2e2a4a"><a href="#192902" label="[19:29:02]">&lt;stikonas[m]&gt;</a></span><span class="message">OK, I'll try to run some other experiments too...</span></div><div class="line" id="193903"><span class="nick" style="color:#80b1d3"><a href="#193903" label="[19:39:03]">&lt;stikonas&gt;</a></span><span class="message">oh, it actually works when I use my normal system tcc with glibc...</span></div><div class="line" id="193932"><span class="nick" style="color:#80b1d3"><a href="#193932" label="[19:39:32]">&lt;stikonas&gt;</a></span><span class="message">so it's almost surely something to do with mec libc</span></div><div class="line" id="194630"><span class="nick" style="color:#80b1d3"><a href="#194630" label="[19:46:30]">&lt;stikonas&gt;</a></span><span class="message">hmm, that probably means we should try to get musl...</span></div><div class="line" id="194732"><span class="nick" style="color:#389600"><a href="#194732" label="[19:47:32]">&lt;pder&gt;</a></span><span class="message">stikonas: do you know if our current tcc supports musl, or do we need a version more recent?</span></div><div class="line" id="194813"><span class="nick" style="color:#80b1d3"><a href="#194813" label="[19:48:13]">&lt;stikonas&gt;</a></span><span class="message">pder: current version doesn't...</span></div><div class="line" id="194827"><span class="nick" style="color:#80b1d3"><a href="#194827" label="[19:48:27]">&lt;stikonas&gt;</a></span><span class="message">but if I remember correctly we can try to patch it out</span></div><div class="line" id="194853"><span class="nick" style="color:#80b1d3"><a href="#194853" label="[19:48:53]">&lt;stikonas&gt;</a></span><span class="message">maybe musl...</span></div><div class="line" id="194941"><span class="nick" style="color:#80b1d3"><a href="#194941" label="[19:49:41]">&lt;stikonas&gt;</a></span><span class="message">anyway, building musl is not completely straightforward...</span></div><div class="line" id="194956"><span class="nick" style="color:#80b1d3"><a href="#194956" label="[19:49:56]">&lt;stikonas&gt;</a></span><span class="message">but I think it should be doable...</span></div><div class="line" id="195017"><span class="nick" style="color:#80b1d3"><a href="#195017" label="[19:50:17]">&lt;stikonas&gt;</a></span><span class="message">pder: and the other possibility is to try to find out mes libc bug...</span></div><div class="line" id="195022"><span class="nick" style="color:#80b1d3"><a href="#195022" label="[19:50:22]">&lt;stikonas&gt;</a></span><span class="message">how did you debug ls?</span></div><div class="line" id="195053"><span class="nick" style="color:#389600"><a href="#195053" label="[19:50:53]">&lt;pder&gt;</a></span><span class="message">I just rebuilt with tcc -g, then used gdb to find the location of the segfault</span></div><div class="line" id="195155"><span class="nick" style="color:#389600"><a href="#195155" label="[19:51:55]">&lt;pder&gt;</a></span><span class="message">is yacc crashing or just returning bad results?</span></div><div class="line" id="195207"><span class="nick" style="color:#80b1d3"><a href="#195207" label="[19:52:07]">&lt;stikonas&gt;</a></span><span class="message">pder: returning bad results</span></div><div class="line" id="195214"><span class="nick" style="color:#80b1d3"><a href="#195214" label="[19:52:14]">&lt;stikonas&gt;</a></span><span class="message">so maybe a bit harder...</span></div><div class="line" id="195229"><span class="nick" style="color:#80b1d3"><a href="#195229" label="[19:52:29]">&lt;stikonas&gt;</a></span><span class="message">at least it failed to process .y file from lex</span></div><div class="line" id="195241"><span class="nick" style="color:#80b1d3"><a href="#195241" label="[19:52:41]">&lt;stikonas&gt;</a></span><span class="message">I think it actually managed to process .y file for gnu flex...</span></div><div class="line" id="195244"><span class="nick" style="color:#80b1d3"><a href="#195244" label="[19:52:44]">&lt;stikonas&gt;</a></span><span class="message">but we also need lexer</span></div><div class="line" id="195328"><span class="nick" style="color:#389600"><a href="#195328" label="[19:53:28]">&lt;pder&gt;</a></span><span class="message">but tcc + glibc returns correct results?</span></div><div class="line" id="195409"><span class="nick" style="color:#80b1d3"><a href="#195409" label="[19:54:09]">&lt;stikonas&gt;</a></span><span class="message">pder: yes, (that's tcc suplied by my distro)</span></div><div class="line" id="195421"><span class="nick" style="color:#80b1d3"><a href="#195421" label="[19:54:21]">&lt;stikonas&gt;</a></span><span class="message">but same 0.9.27</span></div><div class="line" id="195438"><span class="nick" style="color:#80b1d3"><a href="#195438" label="[19:54:38]">&lt;stikonas&gt;</a></span><span class="message">I'll also double check some compile flags</span></div><div class="line" id="195442"><span class="nick" style="color:#80b1d3"><a href="#195442" label="[19:54:42]">&lt;stikonas&gt;</a></span><span class="message">in cast it's that</span></div><div class="line" id="200328"><span class="nick" style="color:#80b1d3"><a href="#200328" label="[20:03:28]">&lt;stikonas&gt;</a></span><span class="message">s/cast/case/</span></div><div class="line" id="200330"><span class="nick" style="color:#80b1d3"><a href="#200330" label="[20:03:30]">&lt;stikonas&gt;</a></span><span class="message">hmm, probably not...</span></div><div class="line" id="203344"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="203346"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="221433"><span class="nick" style="color:#80b1d3"><a href="#221433" label="[22:14:33]">&lt;stikonas&gt;</a></span><span class="message">fossy: so is this good enough to be merged <a rel="nofollow" href="https://github.com/fosslinux/live-bootstrap/pull/20">https://github.com/fosslinux/live-bootstrap/pull/20</a>  ?</span></div><div class="line" id="221453"><span class="nick" style="color:#80b1d3"><a href="#221453" label="[22:14:53]">&lt;stikonas&gt;</a></span><span class="message">I extracted first 2 commits from yacc PR and then marked yacc as draft</span></div><div class="line" id="221459"><span class="nick" style="color:#80b1d3"><a href="#221459" label="[22:14:59]">&lt;stikonas&gt;</a></span><span class="message">since it looks like we</span></div><div class="line" id="221507"><span class="nick" style="color:#80b1d3"><a href="#221507" label="[22:15:07]">&lt;stikonas&gt;</a></span><span class="message">will need musl before yacc is functional</span></div><div class="line" id="221646"><span class="nick" style="color:#234e69"><a href="#221646" label="[22:16:46]">&lt;fossy&gt;</a></span><span class="message">why do we need musl?</span></div><div class="line" id="221841"><span class="nick" style="color:#80b1d3"><a href="#221841" label="[22:18:41]">&lt;stikonas&gt;</a></span><span class="message">fossy: well, I think yacc does something incorectly on mes libc</span></div><div class="line" id="221844"><span class="nick" style="color:#80b1d3"><a href="#221844" label="[22:18:44]">&lt;stikonas&gt;</a></span><span class="message">although, I don't know what</span></div><div class="line" id="221855"><span class="nick" style="color:#80b1d3"><a href="#221855" label="[22:18:55]">&lt;stikonas&gt;</a></span><span class="message">it doesn't crash, just fails to parse.y file</span></div><div class="line" id="221925"><span class="nick" style="color:#80b1d3"><a href="#221925" label="[22:19:25]">&lt;stikonas&gt;</a></span><span class="message">so yacc compiled with tcc/glibc on my normal distro is functional</span></div><div class="line" id="221938"><span class="nick" style="color:#80b1d3"><a href="#221938" label="[22:19:38]">&lt;stikonas&gt;</a></span><span class="message">yacc compiled with the same version of tcc/mes c library is not</span></div><div class="line" id="222021"><span class="nick" style="color:#234e69"><a href="#222021" label="[22:20:21]">&lt;fossy&gt;</a></span><span class="message">I might look at that today then</span></div><div class="line" id="222029"><span class="nick" style="color:#80b1d3"><a href="#222029" label="[22:20:29]">&lt;stikonas&gt;</a></span><span class="message">(and yacc compiled by gio on musl was functional)</span></div><div class="line" id="222035"><span class="nick" style="color:#80b1d3"><a href="#222035" label="[22:20:35]">&lt;stikonas&gt;</a></span><span class="message">so I'm not 100% sure but it looks likely</span></div><div class="line" id="222038"><span class="nick" style="color:#234e69"><a href="#222038" label="[22:20:38]">&lt;fossy&gt;</a></span><span class="message">should be possible to check by stepping through with gdb</span></div><div class="line" id="222051"><span class="nick" style="color:#80b1d3"><a href="#222051" label="[22:20:51]">&lt;stikonas&gt;</a></span><span class="message">hmm, possibly...</span></div><div class="line" id="222122"><span class="nick" style="color:#80b1d3"><a href="#222122" label="[22:21:22]">&lt;stikonas&gt;</a></span><span class="message">fossy: oh, and I think I can't remove those backslash escapes in my PR...</span></div><div class="line" id="222123"><span class="nick" style="color:#234e69"><a href="#222123" label="[22:21:23]">&lt;fossy&gt;</a></span><span class="message">Ill try that today</span></div><div class="line" id="222125"><span class="nick" style="color:#80b1d3"><a href="#222125" label="[22:21:25]">&lt;stikonas&gt;</a></span><span class="message">in kaem</span></div><div class="line" id="222130"><span class="nick" style="color:#234e69"><a href="#222130" label="[22:21:30]">&lt;fossy&gt;</a></span><span class="message">why not?</span></div><div class="line" id="222138"><span class="nick" style="color:#80b1d3"><a href="#222138" label="[22:21:38]">&lt;stikonas&gt;</a></span><span class="message">well, they escape space</span></div><div class="line" id="222143"><span class="nick" style="color:#80b1d3"><a href="#222143" label="[22:21:43]">&lt;stikonas&gt;</a></span><span class="message">so that all of that is in CFLAGS</span></div><div class="line" id="222222"><span class="nick" style="color:#80b1d3"><a href="#222222" label="[22:22:22]">&lt;stikonas&gt;</a></span><span class="message">otherwise make thins it is CFLAGS=first_word some_target</span></div><div class="line" id="222234"><span class="nick" style="color:#80b1d3"><a href="#222234" label="[22:22:34]">&lt;stikonas&gt;</a></span><span class="message">and &quot; didn't help either...</span></div><div class="line" id="222500"><span class="nick" style="color:#234e69"><a href="#222500" label="[22:25:00]">&lt;fossy&gt;</a></span><span class="message">use '</span></div><div class="line" id="222503"><span class="nick" style="color:#234e69"><a href="#222503" label="[22:25:03]">&lt;fossy&gt;</a></span><span class="message">iirc</span></div><div class="line" id="222519"><span class="nick" style="color:#234e69"><a href="#222519" label="[22:25:19]">&lt;fossy&gt;</a></span><span class="message">&quot; expands tokens afterwards iirc, ' dosent</span></div><div class="line" id="222534"><span class="nick" style="color:#80b1d3"><a href="#222534" label="[22:25:34]">&lt;stikonas&gt;</a></span><span class="message">ok, I'll try...</span></div><div class="line" id="222611"><span class="nick" style="color:#80b1d3"><a href="#222611" label="[22:26:11]">&lt;stikonas&gt;</a></span><span class="message">if it works I'll push into that PR...</span></div><div class="line" id="222628"><span class="nick" style="color:#80b1d3"><a href="#222628" label="[22:26:28]">&lt;stikonas&gt;</a></span><span class="message">I have some patch/directory changes for that patch anyway</span></div><div class="line" id="222902"><span class="nick" style="color:#389600"><a href="#222902" label="[22:29:02]">&lt;OriansJ&gt;</a></span><span class="message">civodul: well technically half the repo is source and the second half is binaries that are generated from the source half. Requiring make, sed or xxd kinda defeats the purpose of bootstrap binaries.</span></div><div class="line" id="223348"><span class="nick" style="color:#389600"><a href="#223348" label="[22:33:48]">&lt;OriansJ&gt;</a></span><span class="message">also as we are talking about 101,802bytes for everything (only 4,415bytes of binaries [x86=357+737][AMD64=431+894] [AArch64=526+1470])</span></div><div class="line" id="223746"><span class="nick" style="color:#389600"><a href="#223746" label="[22:37:46]">&lt;OriansJ&gt;</a></span><span class="message">So doing uncompressed releases for each architecture would be 1094, 1325 and 1996bytes respectively</span></div><div class="line" id="223924"><span class="nick" style="color:#389600"><a href="#223924" label="[22:39:24]">&lt;OriansJ&gt;</a></span><span class="message">doing xz compression for say the x86-only release would be 860bytes for the boot.tar.xz</span></div><div class="line" id="224457"><span class="nick" style="color:#389600"><a href="#224457" label="[22:44:57]">&lt;pder&gt;</a></span><span class="message">fossy and stikonas: I pushed a branch to my live-bootstrap repo that fixes ls.  Note that I had to implement a fix in mes-libc.  I chose to just overwrite qsort.c using cp in tcc-0.9.27.kaem until that fix is applied upstream.  I cant use patch since it isnt available yet.</span></div><div class="line" id="224542"><span class="nick" style="color:#80b1d3"><a href="#224542" label="[22:45:42]">&lt;stikonas&gt;</a></span><span class="message">in principle we have patch a bit later and can rebuild mes libc :)</span></div><div class="line" id="224555"><span class="nick" style="color:#80b1d3"><a href="#224555" label="[22:45:55]">&lt;stikonas&gt;</a></span><span class="message">although, if it's going to reach upstream soon, it might not be worth it</span></div><div class="line" id="224714"><span class="nick" style="color:#389600"><a href="#224714" label="[22:47:14]">&lt;pder&gt;</a></span><span class="message">Or maybe we should fork mes and use our fork as the submodule remote?</span></div><div class="line" id="224732"><span class="nick" style="color:#80b1d3"><a href="#224732" label="[22:47:32]">&lt;stikonas&gt;</a></span><span class="message">but do we really want to maintain mes?</span></div><div class="line" id="224746"><span class="nick" style="color:#80b1d3"><a href="#224746" label="[22:47:46]">&lt;stikonas&gt;</a></span><span class="message">there are already too many different version of mes...</span></div><div class="line" id="224832"><span class="nick" style="color:#80b1d3"><a href="#224832" label="[22:48:32]">&lt;stikonas&gt;</a></span><span class="message">pder: oh, it's just tcc patch</span></div><div class="line" id="224851"><span class="nick" style="color:#80b1d3"><a href="#224851" label="[22:48:51]">&lt;stikonas&gt;</a></span><span class="message">in that branch...</span></div><div class="line" id="224853"><span class="nick" style="color:#80b1d3"><a href="#224853" label="[22:48:53]">&lt;stikonas&gt;</a></span><span class="message">hmm</span></div><div class="line" id="224925"><span class="nick" style="color:#389600"><a href="#224925" label="[22:49:25]">&lt;pder&gt;</a></span><span class="message">I just overwrote stdlib/qsort.c before rebuilding libc.a the last time</span></div><div class="line" id="225050"><span class="nick" style="color:#80b1d3"><a href="#225050" label="[22:50:50]">&lt;stikonas&gt;</a></span><span class="message">anyway, by the time bash is bootstrapped, janeke might merge that patch :)</span></div><div class="line" id="225812"><span class="nick" style="color:#80b1d3"><a href="#225812" label="[22:58:12]">&lt;stikonas&gt;</a></span><span class="message">fossy: no, ' didn't work for make</span></div><div class="line" id="225844"><span class="nick" style="color:#80b1d3"><a href="#225844" label="[22:58:44]">&lt;stikonas&gt;</a></span><span class="message">I get something like <a rel="nofollow" href="https://paste.debian.net/1182323/">https://paste.debian.net/1182323/</a> </span></div><div class="line" id="232547"><span class="nick" style="color:#389600"><a href="#232547" label="[23:25:47]">&lt;OriansJ&gt;</a></span><span class="message">proposal sent. Hopefully they like it</span></div><br /></div></body></html>