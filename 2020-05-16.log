<!DOCTYPE html><html><head><title>IRC channel logs</title><style>html {
  background: #fdfdfd;
}

h1 {
  font-weight: 300;
}

h2 {
  font-weight: 200;
}

h3 {
  padding: .5em 0;
  border-top: 3px dotted #ddd;
  margin-bottom: 0;
}

form {
  width: 400px;
  display: flex;
}

input {
  width: 100%;
  display: flex;
  border-radius: .25em 0 0 .25em;
  border: 1px solid #aaa;
  border-right: 0;
  padding: 0.5em;
}

button {
  display: flex;
  border-radius: 0 .25em .25em 0;
  background-color: #007bff;
  border: 1px solid #007bff;
  padding: .5em;
  cursor: pointer;
  color: white;
}

button:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

a {
  color: #007bff;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h4 {
  margin-bottom: .5em;
}

table td {
  padding: 0.75em;
}

table tr:hover {
  background: #eee;
}

.year {
  display: table;
}

.month {
  display: table-cell;
  padding-right: 1em;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nick {
  padding-right: 0.6rem;
  font-weight: bold;
  text-align: right;
  width: 13rem;
  display: table-cell;
}

.nick a {
  color: inherit;
  text-decoration: none;
}

.message {
  display: table-cell;
  padding-left: 0.6rem;
  border-left: 2px solid #333;
}

.notice {
  color: #859900;
  font-style: italic;
}

.line {
  line-height: 1.8rem;
  display: table;
}

#logs {
  margin-top: 1.5rem;
  padding: 1.5rem;
}
</style></head><body><h1>IRC channel logs</h1><h2>2020-05-16.log</h2><p><a href="/bootstrappable">back to list of logs</a></p><div id="logs"><div class="line" id="162030"><span class="nick">***</span><span class="message notice">reepca` is now known as reepca</span></div><div class="line" id="165056"><span class="nick">***</span><span class="message notice">ChanServ sets mode: +o rekado_</span></div><div class="line" id="165102"><span class="nick">***</span><span class="message notice">rekado_ is now known as rekado</span></div><div class="line" id="165334"><span class="nick" style="color:#8dd3c7"><a href="#165334" label="[16:53:34]">&lt;nikita`&gt;</a></span><span class="message">janneke:  what would porting MesCC to NetBSD require, what are the entry points and modifications for different architectures and kernels? I presume it's less than porting gcc to a new architecture?  it's a long shot, but taking notes in advance for what I am doing with Guix as well as potentially something else basing on MesCC</span></div><div class="line" id="181452"><span class="nick" style="color:#2e2a4a"><a href="#181452" label="[18:14:52]">&lt;janneke&gt;</a></span><span class="message">nikita`: hello!</span></div><div class="line" id="181509"><span class="nick" style="color:#8dd3c7"><a href="#181509" label="[18:15:09]">&lt;nikita`&gt;</a></span><span class="message">hi</span></div><div class="line" id="181612"><span class="nick" style="color:#2e2a4a"><a href="#181612" label="[18:16:12]">&lt;janneke&gt;</a></span><span class="message">nikita`: during the reproducible-build summit in marrakesh, we took a few humble steps toward porting mes to freebsd</span></div><div class="line" id="181718"><span class="nick" style="color:#2e2a4a"><a href="#181718" label="[18:17:18]">&lt;janneke&gt;</a></span><span class="message">so that could be a starting point, to look at those few commits</span></div><div class="line" id="181855"><span class="nick" style="color:#2e2a4a"><a href="#181855" label="[18:18:55]">&lt;janneke&gt;</a></span><span class="message">i am not really familiar with the BSDs, but i imagine that once you get a simple elf program running, most of the work is filling in the system calls</span></div><div class="line" id="182000"><span class="nick" style="color:#8dd3c7"><a href="#182000" label="[18:20:00]">&lt;nikita`&gt;</a></span><span class="message">ok, thanks. that's at least something, though FreeBSD is sometimes more linux-leaning in some internals</span></div><div class="line" id="182048"><span class="nick" style="color:#2e2a4a"><a href="#182048" label="[18:20:48]">&lt;janneke&gt;</a></span><span class="message">ah right, i can imagine that there is some work between the syscall level and the c library</span></div><div class="line" id="182143"><span class="nick" style="color:#8dd3c7"><a href="#182143" label="[18:21:43]">&lt;nikita`&gt;</a></span><span class="message">my GSoC is about NetBSD libc, so I think that will help once I have some orientation in libc^^</span></div><div class="line" id="182229"><span class="nick" style="color:#2e2a4a"><a href="#182229" label="[18:22:29]">&lt;janneke&gt;</a></span><span class="message">nikita`: is that this summer?</span></div><div class="line" id="182237"><span class="nick" style="color:#8dd3c7"><a href="#182237" label="[18:22:37]">&lt;nikita`&gt;</a></span><span class="message">yes, next month</span></div><div class="line" id="182247"><span class="nick" style="color:#2e2a4a"><a href="#182247" label="[18:22:47]">&lt;janneke&gt;</a></span><span class="message">congratulations, that's great!</span></div><div class="line" id="182256"><span class="nick" style="color:#8dd3c7"><a href="#182256" label="[18:22:56]">&lt;nikita`&gt;</a></span><span class="message">thanks.</span></div><div class="line" id="182258"><span class="nick" style="color:#2e2a4a"><a href="#182258" label="[18:22:58]">&lt;janneke&gt;</a></span><span class="message">yes, that will certainly help</span></div><div class="line" id="182310"><span class="nick" style="color:#2e2a4a"><a href="#182310" label="[18:23:10]">&lt;janneke&gt;</a></span><span class="message">i learned a lot from writing mes lib c</span></div><div class="line" id="182329"><span class="nick" style="color:#8dd3c7"><a href="#182329" label="[18:23:29]">&lt;nikita`&gt;</a></span><span class="message">though I would have rather found a new full-time job</span></div><div class="line" id="182348"><span class="nick" style="color:#8dd3c7"><a href="#182348" label="[18:23:48]">&lt;nikita`&gt;</a></span><span class="message">pays good enough though</span></div><div class="line" id="182406"><span class="nick" style="color:#8dd3c7"><a href="#182406" label="[18:24:06]">&lt;nikita`&gt;</a></span><span class="message">*well enough</span></div><div class="line" id="182425"><span class="nick" style="color:#2e2a4a"><a href="#182425" label="[18:24:25]">&lt;janneke&gt;</a></span><span class="message">i figure that having worked on libc's is a marketable skill?</span></div><div class="line" id="182449"><span class="nick" style="color:#8dd3c7"><a href="#182449" label="[18:24:49]">&lt;nikita`&gt;</a></span><span class="message">probably, and probably also conference paper</span></div><div class="line" id="182528"><span class="nick" style="color:#2e2a4a"><a href="#182528" label="[18:25:28]">&lt;janneke&gt;</a></span><span class="message">yes</span></div><div class="line" id="183530"><span class="nick" style="color:#8dd3c7"><a href="#183530" label="[18:35:30]">&lt;nikita`&gt;</a></span><span class="message">is there anything below mes (stage0?) which needs added support afterwards, or how did you progress? I can't keep track of everyone's work and the projects around mes are moving fast</span></div><div class="line" id="183548"><span class="nick" style="color:#8dd3c7"><a href="#183548" label="[18:35:48]">&lt;nikita`&gt;</a></span><span class="message">or is it just the code inside mes?</span></div><div class="line" id="183842"><span class="nick" style="color:#2e2a4a"><a href="#183842" label="[18:38:42]">&lt;janneke&gt;</a></span><span class="message">nikita`: yes, there is mescc-tools that needs to learn about netbsd too</span></div><div class="line" id="183923"><span class="nick" style="color:#2e2a4a"><a href="#183923" label="[18:39:23]">&lt;janneke&gt;</a></span><span class="message">what needs to be done thare is a fraction of what is needed for mes, and most can be re-used or copied</span></div><div class="line" id="183941"><span class="nick" style="color:#2e2a4a"><a href="#183941" label="[18:39:41]">&lt;janneke&gt;</a></span><span class="message">it was my intention to share mes c library with mescc-tools</span></div><div class="line" id="183954"><span class="nick" style="color:#2e2a4a"><a href="#183954" label="[18:39:54]">&lt;janneke&gt;</a></span><span class="message">a tiny part of it</span></div><div class="line" id="184010"><span class="nick" style="color:#2e2a4a"><a href="#184010" label="[18:40:10]">&lt;janneke&gt;</a></span><span class="message">however, mescc-tools uses it's own alphabet (not posix/libc)</span></div><div class="line" id="184114"><span class="nick" style="color:#8dd3c7"><a href="#184114" label="[18:41:14]">&lt;nikita`&gt;</a></span><span class="message">ok</span></div><div class="line" id="184303"><span class="nick" style="color:#2e2a4a"><a href="#184303" label="[18:43:03]">&lt;janneke&gt;</a></span><span class="message">the real difficult bits (the elf headers and connecting the system calls) are easily shared</span></div><div class="line" id="222419"><span class="nick" style="color:#6b8072"><a href="#222419" label="[22:24:19]">&lt;OriansJ`&gt;</a></span><span class="message">nikita`: actually if we move MesCC to leveraging slow-utils (which is mescc-tools written in scheme), the only thing that needs to be done to port MesCC to a new kernel is port its libc (which is mostly just fixing the syscalls). As slow-utils and MesCC will both run on a sufficiently powerful scheme implementation.</span></div><div class="line" id="222543"><span class="nick" style="color:#6b8072"><a href="#222543" label="[22:25:43]">&lt;OriansJ`&gt;</a></span><span class="message">stage0 work is only done if you wish to make that kernel another possible root of trust; then there are only a dozen files one would need to update</span></div><div class="line" id="222751"><span class="nick" style="color:#6b8072"><a href="#222751" label="[22:27:51]">&lt;OriansJ`&gt;</a></span><span class="message">but should you wish to learn the bare metal reality of running programs stage0 is a good place to learn how assemblers, linkers and compilers work at their core.</span></div><div class="line" id="222815"><span class="nick" style="color:#6b8072"><a href="#222815" label="[22:28:15]">&lt;OriansJ`&gt;</a></span><span class="message">kaem provides a brief look into how shells work</span></div><br /></div></body></html>